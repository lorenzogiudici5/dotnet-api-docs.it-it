<Type Name="IImmutableDictionary&lt;TKey,TValue&gt;" FullName="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22494796991c99f743d251274d5fbd7c6abbacc6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IImmutableDictionary&lt;TKey,TValue&gt; : System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IImmutableDictionary`2&lt;TKey, TValue&gt; implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.IImmutableDictionary`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IImmutableDictionary(Of TKey, TValue)&#xA;Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IReadOnlyDictionary(Of TKey, TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public interface class IImmutableDictionary : System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyDictionary&lt;TKey, TValue&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="1a6a1-101">Tipo delle chiavi nel dizionario.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1a6a1-101">The type of keys in the dictionary.</span>
      </span>
    </typeparam>
    <typeparam name="TValue">
      <span data-ttu-id="1a6a1-102">Tipo dei valori nel dizionario.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1a6a1-102">The type of values in the dictionary.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="1a6a1-103">Rappresenta una raccolta non modificabile di coppie chiave/valore.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1a6a1-103">Represents an immutable collection of key/value pairs.</span>
      </span>
      <span data-ttu-id="1a6a1-104">**Pacchetto NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">informazioni sulle raccolte non modificabili e su come installarle</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="1a6a1-104">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a6a1-105">Oggetto <xref:System.Collections.Immutable.IImmutableDictionary%602> richiede un'implementazione di operatore di confronto di uguaglianza per determinare se due chiavi sono uguali.</span><span class="sxs-lookup"><span data-stu-id="1a6a1-105">A <xref:System.Collections.Immutable.IImmutableDictionary%602> requires an equality comparer implementation to determine if two keys are equal.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableDictionary`2&lt;!TKey, !TValue&gt; Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.IImmutableDictionary`2.Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As TKey, value As TValue) As IImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ Add(TKey key, TValue value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="1a6a1-106">Chiave dell'elemento da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-106">The key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="1a6a1-107">Valore dell'elemento da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-107">The value of the element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a6a1-108">Aggiunge un elemento con la chiave e il valore specificati al dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-108">Adds an element with the specified key and value to the dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a6a1-109">Nuovo dizionario non modificabile che contiene la coppia chiave/valore aggiuntiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-109">A new immutable dictionary that contains the additional key/value pair.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a6a1-110">Se la coppia chiave/valore specificata esiste già nel dizionario, questo metodo restituisce l'istanza esistente del dizionario.</span><span class="sxs-lookup"><span data-stu-id="1a6a1-110">If the given key/value pair already exists in the dictionary, this method returns the existing instance of the dictionary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1a6a1-111">La chiave specificata esiste già nel dizionario, ma ha un valore diverso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-111">The given key already exists in the dictionary but has a different value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; AddRange (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; pairs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableDictionary`2&lt;!TKey, !TValue&gt; AddRange(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; pairs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.IImmutableDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddRange (pairs As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As IImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ AddRange(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ pairs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pairs" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="pairs">
          <span data-ttu-id="1a6a1-112">Coppie chiave/valore da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-112">The key/value pairs to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a6a1-113">Aggiunge le coppie chiave/valore specificate al dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-113">Adds the specified key/value pairs to the dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a6a1-114">Nuovo dizionario non modificabile che contiene le coppie chiave/valore aggiuntive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-114">A new immutable dictionary that contains the additional key/value pairs.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1a6a1-115">Una delle chiavi specificate esiste già nel dizionario, ma ha un valore diverso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-115">One of the given keys already exists in the dictionary but has a different value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableDictionary`2&lt;!TKey, !TValue&gt; Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.IImmutableDictionary`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Function Clear () As IImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1a6a1-116">Recupera un dizionario vuoto con lo stesso ordinamento e le stesse regole di confronto chiave/valore di questa istanza del dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-116">Retrieves an empty dictionary that has the same ordering and key/value comparison rules as this dictionary instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a6a1-117">Dizionario vuoto con ordinamento e regole di confronto chiave/valore equivalenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-117">An empty dictionary with equivalent ordering and key/value comparison rules.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; pair);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; pair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.IImmutableDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (pair As KeyValuePair(Of TKey, TValue)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; pair);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="pair">
          <span data-ttu-id="1a6a1-118">Coppia chiave/valore da individuare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-118">The key/value pair to locate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a6a1-119">Determina se il dizionario non modificabile contiene la coppia chiave/valore specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-119">Determines whether the immutable dictionary contains the specified key/value pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a6a1-120">
            <see langword="true" /> se la coppia chiave/valore specificata viene trovata nel dizionario; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-120">
              <see langword="true" /> if the specified key/value pair is found in the dictionary; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableDictionary`2&lt;!TKey, !TValue&gt; Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.IImmutableDictionary`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As IImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ Remove(TKey key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="1a6a1-121">Chiave dell'elemento da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-121">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a6a1-122">Rimuove dal dizionario non modificabile l'elemento con la chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-122">Removes the element with the specified key from the immutable dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a6a1-123">Nuovo dizionario non modificabile con l'elemento specificato rimosso oppure questa istanza se la chiave specificata non viene trovata nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-123">A new immutable dictionary with the specified element removed; or this instance if the specified key cannot be found in the dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; RemoveRange (System.Collections.Generic.IEnumerable&lt;TKey&gt; keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableDictionary`2&lt;!TKey, !TValue&gt; RemoveRange(class System.Collections.Generic.IEnumerable`1&lt;!TKey&gt; keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.IImmutableDictionary`2.RemoveRange(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveRange (keys As IEnumerable(Of TKey)) As IImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ RemoveRange(System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ keys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="1a6a1-124">Chiavi degli elementi da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-124">The keys of the elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a6a1-125">Rimuove dal dizionario non modificabile gli elementi con le chiavi specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-125">Removes the elements with the specified keys from the immutable dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a6a1-126">Nuovo dizionario non modificabile con le chiavi specificate rimosse oppure questa istanza se le chiavi specificate non vengono trovate nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-126">A new immutable dictionary with the specified keys removed; or this instance if the specified keys cannot be found in the dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; SetItem (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableDictionary`2&lt;!TKey, !TValue&gt; SetItem(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.IImmutableDictionary`2.SetItem(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetItem (key As TKey, value As TValue) As IImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ SetItem(TKey key, TValue value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="1a6a1-127">Chiave della voce da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-127">The key of the entry to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="1a6a1-128">Valore di chiave da impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-128">The key value to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a6a1-129">Imposta la chiave e il valore specificati nel dizionario non modificabile, eventualmente sovrascrivendo un valore esistente per la chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-129">Sets the specified key and value in the immutable dictionary, possibly overwriting an existing value for the key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a6a1-130">Nuovo dizionario non modificabile che contiene la coppia chiave/valore specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-130">A new immutable dictionary that contains the specified key/value pair.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a6a1-131">Se la coppia chiave/valore specificata esiste già nel dizionario, questo metodo restituisce l'istanza esistente.</span><span class="sxs-lookup"><span data-stu-id="1a6a1-131">If the specified key/value pair already exists in the dictionary, this method returns the existing instance.</span></span> <span data-ttu-id="1a6a1-132">Se la chiave esiste già ma ha un valore diverso, questo metodo restituisce una nuova istanza del dizionario con il valore sovrascritto.</span><span class="sxs-lookup"><span data-stu-id="1a6a1-132">If the key already exists but has a different value, this method returns a new instance of the dictionary with the overwritten value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; SetItems (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableDictionary`2&lt;!TKey, !TValue&gt; SetItems(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.IImmutableDictionary`2.SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function SetItems (items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As IImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ SetItems(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="1a6a1-133">Coppie chiave/valore da impostare nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-133">The key/value pairs to set in the dictionary.</span>
          </span>
          <span data-ttu-id="1a6a1-134">Se una qualsiasi delle chiavi esiste già nel dizionario, questo metodo sovrascriverà i valori precedenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-134">If any of the keys already exist in the dictionary, this method will overwrite their previous values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a6a1-135">Imposta le coppie chiave/valore specificate nel dizionario non modificabile, eventualmente sovrascrivendo i valori esistenti per le chiavi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-135">Sets the specified key/value pairs in the immutable dictionary, possibly overwriting existing values for the keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a6a1-136">Nuovo dizionario non modificabile che contiene le coppie chiave/valore specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-136">A new immutable dictionary that contains the specified key/value pairs.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetKey">
      <MemberSignature Language="C#" Value="public bool TryGetKey (TKey equalKey, out TKey actualKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetKey(!TKey equalKey, [out] !TKey&amp; actualKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.IImmutableDictionary`2.TryGetKey(`0,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetKey (equalKey As TKey, ByRef actualKey As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetKey(TKey equalKey, [Runtime::InteropServices::Out] TKey % actualKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="equalKey" Type="TKey" />
        <Parameter Name="actualKey" Type="TKey&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="equalKey">
          <span data-ttu-id="1a6a1-137">Chiave da ricercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-137">The key to search for.</span>
          </span>
        </param>
        <param name="actualKey">
          <span data-ttu-id="1a6a1-138">La chiave corrispondente presente nel dizionario, se trovata, oppure <c>equalkey</c> se non viene trovata alcuna corrispondenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-138">The matching key located in the dictionary if found, or <c>equalkey</c> if no match is found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a6a1-139">Determina se il dizionario contiene una chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-139">Determines whether this dictionary contains a specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a6a1-140">
            <see langword="true" /> se viene trovata una corrispondenza per <paramref name="equalKey" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6a1-140">
              <see langword="true" /> if a match for <paramref name="equalKey" /> is found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a6a1-141">Ecco alcuni scenari in cui <xref:System.Collections.Immutable.IImmutableDictionary%602.TryGetKey%2A> possono risultare utili:</span><span class="sxs-lookup"><span data-stu-id="1a6a1-141">Following are some scenarios where <xref:System.Collections.Immutable.IImmutableDictionary%602.TryGetKey%2A> may be useful:</span></span>  
  
-   <span data-ttu-id="1a6a1-142">Si desidera riutilizzare un riferimento di oggetto archiviato in precedenza anziché creare un nuovo riferimento.</span><span class="sxs-lookup"><span data-stu-id="1a6a1-142">You want to reuse a previously stored object reference instead of creating a new reference.</span></span>  
  
-   <span data-ttu-id="1a6a1-143">Si desidera cercare il valore canonico di un oggetto</span><span class="sxs-lookup"><span data-stu-id="1a6a1-143">You want to look up the canonical value of an object</span></span>  
  
-   <span data-ttu-id="1a6a1-144">Si desidera recuperare i dati più completi su un oggetto</span><span class="sxs-lookup"><span data-stu-id="1a6a1-144">You want to retrieve more complete data about an object</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>