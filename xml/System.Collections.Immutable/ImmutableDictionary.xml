<Type Name="ImmutableDictionary" FullName="System.Collections.Immutable.ImmutableDictionary">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a57d46aac66c7dbd73fa5a78fb0dd4dc37d83c47" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52596107" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ImmutableDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableDictionary extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableDictionary abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableDictionary = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="aa81f-101">Fornisce un set di metodi di inizializzazione per le istanze della classe <see cref="T:System.Collections.Immutable.ImmutableDictionary`2" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="aa81f-101">Provides a set of initialization methods for instances of the <see cref="T:System.Collections.Immutable.ImmutableDictionary`2" /> class.</span>
      </span>
      <span data-ttu-id="aa81f-102">**Pacchetto NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">informazioni sulle raccolte non modificabili e su come installarle</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="aa81f-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <threadsafe>
      <span data-ttu-id="aa81f-103">Questo tipo Ã¨ thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="aa81f-103">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Contains&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; map, TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; map, !!TKey key, !!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TKey, TValue) (map As IImmutableDictionary(Of TKey, TValue), key As TKey, value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ map, TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Collections.Immutable.IImmutableDictionary&lt;'Key, 'Value&gt; * 'Key * 'Value -&gt; bool" Usage="System.Collections.Immutable.ImmutableDictionary.Contains (map, key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="map" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="aa81f-104">Tipo di chiavi nel dizionario non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-104">The type of the keys in the immutable dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="aa81f-105">Tipo di valori nel dizionario non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-105">The type of the values in the immutable dictionary.</span>
          </span>
        </typeparam>
        <param name="map">
          <span data-ttu-id="aa81f-106">Dizionario non modificabile in cui eseguire la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-106">The immutable dictionary to search.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="aa81f-107">Chiave da individuare nel dizionario non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-107">The key to locate in the immutable dictionary.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="aa81f-108">Valore da individuare nella chiave specificata, se la chiave viene trovata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-108">The value to locate on the specified key, if the key is found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa81f-109">Determina se il dizionario non modificabile specificato contiene la coppia chiave/valore specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-109">Determines whether the specified immutable dictionary contains the specified key/value pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa81f-110">
            <see langword="true" /> se questa mappa contiene la coppia chiave/valore specificata; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-110">
              <see langword="true" /> if this map contains the specified key/value pair; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) () As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="aa81f-111">Tipo delle chiavi archiviate dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-111">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="aa81f-112">Tipo dei valori archiviati dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-112">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="aa81f-113">Crea un dizionario non modificabile vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-113">Creates an empty immutable dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa81f-114">Dizionario non modificabile vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-114">An empty immutable dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.Create keyComparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="aa81f-115">Tipo delle chiavi archiviate dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-115">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="aa81f-116">Tipo dei valori archiviati dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-116">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="aa81f-117">Implementazione da usare per determinare l'uguaglianza delle chiavi nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-117">The implementation to use to determine the equality of keys in the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa81f-118">Crea un dizionario non modificabile vuoto che usa l'operatore di confronto della chiave specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-118">Creates an empty immutable dictionary that uses the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa81f-119">Dizionario non modificabile vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-119">An empty immutable dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.Create (keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="aa81f-120">Tipo delle chiavi archiviate dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-120">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="aa81f-121">Tipo dei valori archiviati dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-121">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="aa81f-122">Implementazione da usare per determinare l'uguaglianza delle chiavi nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-122">The implementation to use to determine the equality of keys in the dictionary.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="aa81f-123">Implementazione da usare per determinare l'uguaglianza dei valori nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-123">The implementation to use to determine the equality of values in the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa81f-124">Crea un dizionario non modificabile vuoto che usa gli operatori di confronto della chiave e del valore specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-124">Creates an empty immutable dictionary that uses the specified key and value comparers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa81f-125">Dizionario non modificabile vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-125">An empty immutable dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) () As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder();" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : unit -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;.Builder" Usage="System.Collections.Immutable.ImmutableDictionary.CreateBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="aa81f-126">Tipo delle chiavi archiviate dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-126">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="aa81f-127">Tipo dei valori archiviati dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-127">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="aa81f-128">Crea un nuovo generatore di dizionario non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-128">Creates a new immutable dictionary builder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa81f-129">Nuovo generatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-129">The new builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;.Builder" Usage="System.Collections.Immutable.ImmutableDictionary.CreateBuilder keyComparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="aa81f-130">Tipo delle chiavi archiviate dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-130">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="aa81f-131">Tipo dei valori archiviati dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-131">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="aa81f-132">Operatore di confronto della chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-132">The key comparer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa81f-133">Crea un nuovo generatore di dizionario non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-133">Creates a new immutable dictionary builder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa81f-134">Nuovo generatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-134">The new builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;.Builder" Usage="System.Collections.Immutable.ImmutableDictionary.CreateBuilder (keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="aa81f-135">Tipo delle chiavi archiviate dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-135">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="aa81f-136">Tipo dei valori archiviati dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-136">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="aa81f-137">Operatore di confronto della chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-137">The key comparer.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="aa81f-138">Operatore di confronto del valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-138">The value comparer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa81f-139">Crea un nuovo generatore di dizionario non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-139">Creates a new immutable dictionary builder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa81f-140">Nuovo generatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-140">The new builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.CreateRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="aa81f-141">Tipo delle chiavi nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-141">The type of keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="aa81f-142">Tipo dei valori nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-142">The type of values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="aa81f-143">Elementi usati per popolare il dizionario prima che diventi non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-143">The items used to populate the dictionary before it's immutable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa81f-144">Crea un nuovo dizionario non modificabile che contiene gli elementi specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-144">Creates a new immutable dictionary that contains the specified items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa81f-145">Nuovo dizionario non modificabile che contiene gli elementi specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-145">A new immutable dictionary that contains the specified items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.CreateRange (keyComparer, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="aa81f-146">Tipo delle chiavi nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-146">The type of keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="aa81f-147">Tipo dei valori nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-147">The type of values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="aa81f-148">Implementazione dell'operatore di confronto da usare per verificare l'uguaglianza delle chiavi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-148">The comparer implementation to use to compare keys for equality.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="aa81f-149">Elementi da aggiungere al dizionario prima che diventi non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-149">The items to add to the dictionary before it's immutable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa81f-150">Crea un nuovo dizionario non modificabile che contiene gli elementi specificati e usa l'operatore di confronto della chiave specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-150">Creates a new immutable dictionary that contains the specified items and uses the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa81f-151">Nuovo dizionario non modificabile che contiene gli elementi specificati e usa l'operatore di confronto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-151">A new immutable dictionary that contains the specified items and uses the specified comparer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; * seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.CreateRange (keyComparer, valueComparer, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="aa81f-152">Tipo delle chiavi nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-152">The type of keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="aa81f-153">Tipo dei valori nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-153">The type of values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="aa81f-154">Implementazione dell'operatore di confronto da usare per verificare l'uguaglianza delle chiavi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-154">The comparer implementation to use to compare keys for equality.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="aa81f-155">Implementazione dell'operatore di confronto da usare per verificare l'uguaglianza dei valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-155">The comparer implementation to use to compare values for equality.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="aa81f-156">Elementi da aggiungere al dizionario prima che diventi non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-156">The items to add to the dictionary before it's immutable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa81f-157">Crea un nuovo dizionario non modificabile che contiene gli elementi specificati e usa l'operatore di confronto della chiave specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-157">Creates a new immutable dictionary that contains the specified items and uses the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa81f-158">Nuovo dizionario non modificabile che contiene gli elementi specificati e usa l'operatore di confronto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-158">A new immutable dictionary that contains the specified items and uses the specified comparer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue GetValueOrDefault&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; dictionary, TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue GetValueOrDefault&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; dictionary, !!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValueOrDefault(Of TKey, TValue) (dictionary As IImmutableDictionary(Of TKey, TValue), key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TValue GetValueOrDefault(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ dictionary, TKey key);" />
      <MemberSignature Language="F#" Value="static member GetValueOrDefault : System.Collections.Immutable.IImmutableDictionary&lt;'Key, 'Value&gt; * 'Key -&gt; 'Value" Usage="System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault (dictionary, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="aa81f-159">Tipo di chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-159">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="aa81f-160">Tipo di valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-160">The type of the value.</span>
          </span>
        </typeparam>
        <param name="dictionary">
          <span data-ttu-id="aa81f-161">Dizionario da cui recuperare il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-161">The dictionary to retrieve the value from.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="aa81f-162">Chiave da ricercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-162">The key to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa81f-163">Ottiene il valore per una determinata chiave se esiste una chiave corrispondente nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-163">Gets the value for a given key if a matching key exists in the dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa81f-164">Valore della chiave oppure <c>default(TValue)</c> se non Ã¨ stata trovata alcuna chiave corrispondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-164">The value for the key, or <c>default(TValue)</c> if no matching key was found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue GetValueOrDefault&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; dictionary, TKey key, TValue defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue GetValueOrDefault&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; dictionary, !!TKey key, !!TValue defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValueOrDefault(Of TKey, TValue) (dictionary As IImmutableDictionary(Of TKey, TValue), key As TKey, defaultValue As TValue) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TValue GetValueOrDefault(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ dictionary, TKey key, TValue defaultValue);" />
      <MemberSignature Language="F#" Value="static member GetValueOrDefault : System.Collections.Immutable.IImmutableDictionary&lt;'Key, 'Value&gt; * 'Key * 'Value -&gt; 'Value" Usage="System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault (dictionary, key, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="defaultValue" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="aa81f-165">Tipo di chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-165">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="aa81f-166">Tipo di valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-166">The type of the value.</span>
          </span>
        </typeparam>
        <param name="dictionary">
          <span data-ttu-id="aa81f-167">Dizionario da cui recuperare il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-167">The dictionary to retrieve the value from.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="aa81f-168">Chiave da ricercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-168">The key to search for.</span>
          </span>
        </param>
        <param name="defaultValue">
          <span data-ttu-id="aa81f-169">Valore predefinito da restituire se non viene trovata alcuna chiave corrispondente nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-169">The default value to return if no matching key is found in the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa81f-170">Ottiene il valore per una determinata chiave se esiste una chiave corrispondente nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-170">Gets the value for a given key if a matching key exists in the dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa81f-171">Valore della chiave oppure <paramref name="defaultValue" /> se non Ã¨ stata trovata alcuna chiave corrispondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-171">The value for the key, or <paramref name="defaultValue" /> if no matching key was found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="aa81f-172">Tipo di chiavi nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-172">The type of the keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="aa81f-173">Tipo di valori nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-173">The type of the values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="aa81f-174">Sequenza di coppie chiave/valore da enumerare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-174">The sequence of key/value pairs to enumerate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa81f-175">Enumera una sequenza di coppie chiave/valore e produce un dizionario non modificabile del relativo contenuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-175">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa81f-176">Dizionario non modificabile che contiene le coppie chiave/valore nella sequenza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-176">An immutable dictionary that contains the key/value pairs in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keyComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="aa81f-177">Tipo di chiavi nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-177">The type of the keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="aa81f-178">Tipo di valori nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-178">The type of the values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="aa81f-179">Sequenza di coppie chiave/valore da enumerare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-179">The sequence of key/value pairs to enumerate.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="aa81f-180">Operatore di confronto della chiave da usare durante la compilazione del dizionario non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-180">The key comparer to use when building the immutable dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa81f-181">Enumera una sequenza di coppie chiave/valore e produce un dizionario non modificabile del relativo contenuto usando l'operatore di confronto della chiave specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-181">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa81f-182">Dizionario non modificabile che contiene le coppie chiave/valore nella sequenza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-182">An immutable dictionary that contains the key/value pairs in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="aa81f-183">Tipo di chiavi nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-183">The type of the keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="aa81f-184">Tipo di valori nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-184">The type of the values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="aa81f-185">Sequenza di coppie chiave/valore da enumerare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-185">The sequence of key/value pairs to enumerate.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="aa81f-186">Operatore di confronto della chiave da usare durante la compilazione del dizionario non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-186">The key comparer to use when building the immutable dictionary.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="aa81f-187">Operatore di confronto del valore da usare per il dizionario non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-187">The value comparer to use for the immutable dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa81f-188">Enumera una sequenza di coppie chiave/valore e produce un dizionario non modificabile del relativo contenuto usando gli operatori di confronto della chiave e del valore specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-188">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key and value comparers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa81f-189">Dizionario non modificabile che contiene le coppie chiave/valore nella sequenza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-189">An immutable dictionary that contains the key/value pairs in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt; ToImmutableDictionary&lt;TSource,TKey&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TSource&gt; ToImmutableDictionary&lt;TSource, TKey&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey)) As ImmutableDictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TSource&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Source&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="aa81f-190">Tipo di elemento nella raccolta di origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-190">The type of element in the source collection.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="aa81f-191">Tipo di chiave nel dizionario non modificabile risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-191">The type of key in the resulting immutable dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="aa81f-192">Raccolta di origine usata per generare il dizionario non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-192">The source collection used to generate the immutable dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="aa81f-193">Funzione usata per trasformare le chiavi per il dizionario non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-193">The function used to transform keys for the immutable dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa81f-194">Costruisce un dizionario non modificabile da una raccolta di elementi esistente, applicando una funzione di trasformazione alle chiavi di origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-194">Constructs an immutable dictionary from an existing collection of elements, applying a transformation function to the source keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa81f-195">Dizionario non modificabile che contiene gli elementi da <paramref name="source" />, con le chiavi trasformate applicando <paramref name="keySelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-195">The immutable dictionary that contains elements from <paramref name="source" />, with keys transformed by applying <paramref name="keySelector" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt; ToImmutableDictionary&lt;TSource,TKey&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TSource&gt; ToImmutableDictionary&lt;TSource, TKey&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TSource&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Source&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector, keyComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="aa81f-196">Tipo di elemento nella raccolta di origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-196">The type of element in the source collection.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="aa81f-197">Tipo di chiave nel dizionario non modificabile risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-197">The type of key in the resulting immutable dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="aa81f-198">Raccolta di origine usata per generare il dizionario non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-198">The source collection used to generate the immutable dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="aa81f-199">Funzione usata per trasformare le chiavi per il dizionario non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-199">The function used to transform keys for the immutable dictionary.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="aa81f-200">Operatore di confronto della chiave da usare per il dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-200">The key comparer to use for the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa81f-201">Costruisce un dizionario non modificabile basato su una trasformazione di una sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-201">Constructs an immutable dictionary based on some transformation of a sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa81f-202">Dizionario non modificabile che contiene gli elementi da <paramref name="source" />, con le chiavi trasformate applicando <paramref name="keySelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-202">The immutable dictionary that contains elements from <paramref name="source" />, with keys transformed by applying <paramref name="keySelector" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector, elementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="aa81f-203">Tipo degli elementi nella sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-203">The type of the elements in the sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="aa81f-204">Tipo di chiavi nel dizionario risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-204">The type of the keys in the resulting dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="aa81f-205">Tipo di valori nel dizionario risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-205">The type of the values in the resulting dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="aa81f-206">Sequenza da enumerare per generare il dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-206">The sequence to enumerate to generate the dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="aa81f-207">Funzione che produrrÃ  la chiave per il dizionario da ogni elemento della sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-207">The function that will produce the key for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="aa81f-208">Funzione che produrrÃ  il valore per il dizionario da ogni elemento della sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-208">The function that will produce the value for the dictionary from each sequence element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa81f-209">Enumera e trasforma una sequenza e produce un dizionario non modificabile del relativo contenuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-209">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa81f-210">Dizionario non modificabile che contiene gli elementi nella sequenza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-210">An immutable dictionary that contains the items in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Value&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector, elementSelector, keyComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="aa81f-211">Tipo degli elementi nella sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-211">The type of the elements in the sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="aa81f-212">Tipo di chiavi nel dizionario risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-212">The type of the keys in the resulting dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="aa81f-213">Tipo di valori nel dizionario risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-213">The type of the values in the resulting dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="aa81f-214">Sequenza da enumerare per generare il dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-214">The sequence to enumerate to generate the dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="aa81f-215">Funzione che produrrÃ  la chiave per il dizionario da ogni elemento della sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-215">The function that will produce the key for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="aa81f-216">Funzione che produrrÃ  il valore per il dizionario da ogni elemento della sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-216">The function that will produce the value for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="aa81f-217">Operatore di confronto della chiave da usare per il dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-217">The key comparer to use for the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa81f-218">Enumera e trasforma una sequenza e produce un dizionario non modificabile del relativo contenuto usando l'operatore di confronto della chiave specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-218">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa81f-219">Dizionario non modificabile che contiene gli elementi nella sequenza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-219">An immutable dictionary that contains the items in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Value&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector, elementSelector, keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="aa81f-220">Tipo degli elementi nella sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-220">The type of the elements in the sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="aa81f-221">Tipo di chiavi nel dizionario risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-221">The type of the keys in the resulting dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="aa81f-222">Tipo di valori nel dizionario risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-222">The type of the values in the resulting dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="aa81f-223">Sequenza da enumerare per generare il dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-223">The sequence to enumerate to generate the dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="aa81f-224">Funzione che produrrÃ  la chiave per il dizionario da ogni elemento della sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-224">The function that will produce the key for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="aa81f-225">Funzione che produrrÃ  il valore per il dizionario da ogni elemento della sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-225">The function that will produce the value for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="aa81f-226">Operatore di confronto della chiave da usare per il dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-226">The key comparer to use for the dictionary.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="aa81f-227">Operatore di confronto del valore da usare per il dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-227">The value comparer to use for the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa81f-228">Enumera e trasforma una sequenza e produce un dizionario non modificabile del relativo contenuto usando gli operatori di confronto della chiave e del valore specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-228">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key and value comparers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa81f-229">Dizionario non modificabile che contiene gli elementi nella sequenza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa81f-229">An immutable dictionary that contains the items in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>