<Type Name="ImmutableArray&lt;T&gt;" FullName="System.Collections.Immutable.ImmutableArray&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b515143a85074747f4155384f2e8c4250a1028b1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct ImmutableArray&lt;T&gt; : IEquatable&lt;System.Collections.Immutable.ImmutableArray&lt;T&gt;&gt;, System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.Generic.IReadOnlyList&lt;T&gt;, System.Collections.IList, System.Collections.Immutable.IImmutableList&lt;T&gt;, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ImmutableArray`1&lt;T&gt; extends System.ValueType implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Collections.Immutable.IImmutableList`1&lt;!T&gt;, class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IEquatable`1&lt;valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableArray`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure ImmutableArray(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IEquatable(Of ImmutableArray(Of T)), IImmutableList(Of T), IList, IList(Of T), IReadOnlyCollection(Of T), IReadOnlyList(Of T), IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public value class ImmutableArray : IEquatable&lt;System::Collections::Immutable::ImmutableArray&lt;T&gt;&gt;, System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::Generic::IReadOnlyList&lt;T&gt;, System::Collections::IList, System::Collections::Immutable::IImmutableList&lt;T&gt;, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Immutable.IImmutableList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Collections.Immutable.ImmutableArray&lt;T&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="a00cf-101">Tipo di elemento memorizzato dalla matrice.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a00cf-101">The type of element stored by the array.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="a00cf-102">Rappresenta una matrice non modificabile, ovvero che non può essere modificata una volta che è stata creata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a00cf-102">Represents an array that is immutable; meaning it cannot be changed once it is created.</span>
      </span>
      <span data-ttu-id="a00cf-103">**Pacchetto NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">informazioni sulle raccolte non modificabili e su come installarle</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="a00cf-103">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-104">Esistono diversi scenari ideale per <xref:System.Collections.Immutable.ImmutableArray%601> e altre procedure per <xref:System.Collections.Immutable.ImmutableList%601>.</span><span class="sxs-lookup"><span data-stu-id="a00cf-104">There are different scenarios best for <xref:System.Collections.Immutable.ImmutableArray%601> and others best for <xref:System.Collections.Immutable.ImmutableList%601>.</span></span>  
  
 <span data-ttu-id="a00cf-105">Motivi per utilizzare la matrice non modificabile:</span><span class="sxs-lookup"><span data-stu-id="a00cf-105">Reasons to use immutable array:</span></span>  
  
-   <span data-ttu-id="a00cf-106">L'aggiornamento dei dati è rara o il numero di elementi è relativamente ridotto (inferiore a 16 elementi)</span><span class="sxs-lookup"><span data-stu-id="a00cf-106">Updating the data is rare or the number of elements is quite small (less than 16 items)</span></span>  
  
-   <span data-ttu-id="a00cf-107">È necessario essere in grado di scorrere i dati in sezioni critiche di prestazioni</span><span class="sxs-lookup"><span data-stu-id="a00cf-107">You need to be able to iterate over the data in performance critical sections</span></span>  
  
-   <span data-ttu-id="a00cf-108">Si dispone di molte istanze di raccolte non modificabili e non può permettersi a mantenere i dati in strutture ad albero</span><span class="sxs-lookup"><span data-stu-id="a00cf-108">You have many instances of immutable collections and you can’t afford keeping the data in trees</span></span>  
  
 <span data-ttu-id="a00cf-109">Motivi per utilizzare l'elenco non modificabile:</span><span class="sxs-lookup"><span data-stu-id="a00cf-109">Reasons to use immutable list:</span></span>  
  
-   <span data-ttu-id="a00cf-110">L'aggiornamento dei dati è comune o non è previsto il numero di elementi di piccole dimensioni</span><span class="sxs-lookup"><span data-stu-id="a00cf-110">Updating the data is common or the number of elements isn’t expected to be small</span></span>  
  
-   <span data-ttu-id="a00cf-111">Aggiornamento della raccolta è più critici di prestazioni rispetto all'iterazione il contenuto</span><span class="sxs-lookup"><span data-stu-id="a00cf-111">Updating the collection is more performance critical than iterating the contents</span></span>  
  
 <span data-ttu-id="a00cf-112">Nella tabella seguente sono riepilogate le caratteristiche delle prestazioni <xref:System.Collections.Immutable.ImmutableArray%601></span><span class="sxs-lookup"><span data-stu-id="a00cf-112">The following table summarizes the performance characteristics of <xref:System.Collections.Immutable.ImmutableArray%601></span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="a00cf-113">**Operazione**</span><span class="sxs-lookup"><span data-stu-id="a00cf-113">**Operation**</span></span>|<span data-ttu-id="a00cf-114"><xref:System.Collections.Immutable.ImmutableArray%601> Complessità</span><span class="sxs-lookup"><span data-stu-id="a00cf-114"><xref:System.Collections.Immutable.ImmutableArray%601> Complexity</span></span>|<span data-ttu-id="a00cf-115"><xref:System.Collections.Immutable.ImmutableList%601> Complessità</span><span class="sxs-lookup"><span data-stu-id="a00cf-115"><xref:System.Collections.Immutable.ImmutableList%601> Complexity</span></span>|<span data-ttu-id="a00cf-116">**Commenti**</span><span class="sxs-lookup"><span data-stu-id="a00cf-116">**Comments**</span></span>|  
|<span data-ttu-id="a00cf-117">**Item**</span><span class="sxs-lookup"><span data-stu-id="a00cf-117">**Item**</span></span>|<span data-ttu-id="a00cf-118">O(1)</span><span class="sxs-lookup"><span data-stu-id="a00cf-118">O(1)</span></span>|<span data-ttu-id="a00cf-119">O (log n)</span><span class="sxs-lookup"><span data-stu-id="a00cf-119">O(log n)</span></span>|<span data-ttu-id="a00cf-120">Indice direttamente la matrice sottostante</span><span class="sxs-lookup"><span data-stu-id="a00cf-120">Directly index into the underlying array</span></span>|  
|<span data-ttu-id="a00cf-121">**Add()**</span><span class="sxs-lookup"><span data-stu-id="a00cf-121">**Add()**</span></span>|<span data-ttu-id="a00cf-122">O(n)</span><span class="sxs-lookup"><span data-stu-id="a00cf-122">O(n)</span></span>|<span data-ttu-id="a00cf-123">O (log n)</span><span class="sxs-lookup"><span data-stu-id="a00cf-123">O(log n)</span></span>|<span data-ttu-id="a00cf-124">È necessario creare una nuova matrice</span><span class="sxs-lookup"><span data-stu-id="a00cf-124">Requires creating a new array</span></span>|  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="a00cf-125">Questo tipo è thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a00cf-125">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Add(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a00cf-126">Elemento da aggiungere alla fine della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-126">The item to be added to the end of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-127">Restituisce una copia della matrice originale con l'elemento specificato aggiunto alla fine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-127">Returns a copy of the original array with the specified item added to the end.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-128">Nuova matrice con l'elemento specificato aggiunto alla fine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-128">A new array with the specified item added to the end.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; AddRange (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; AddRange(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddRange (items As IEnumerable(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; AddRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="a00cf-129">Elementi da aggiungere alla matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-129">The elements to add to the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-130">Restituisce una copia della matrice originale con gli elementi specificati aggiunti alla fine della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-130">Returns a copy of the original array with the specified elements added to the end of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-131">Nuova matrice con gli elementi aggiunti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-131">A new array with the elements added.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; AddRange (System.Collections.Immutable.ImmutableArray&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; AddRange(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.AddRange(System.Collections.Immutable.ImmutableArray{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddRange (items As ImmutableArray(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; AddRange(System::Collections::Immutable::ImmutableArray&lt;T&gt; items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="a00cf-132">Elementi da aggiungere alla matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-132">The elements to add to the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-133">Restituisce una copia della matrice originale con gli elementi specificati aggiunti alla fine della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-133">Returns a copy of the original array with the specified elements added to the end of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-134">Nuova matrice con gli elementi aggiunti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-134">A new array with the elements added.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="As&lt;TOther&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;TOther&gt; As&lt;TOther&gt; () where TOther : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TOther&gt; As&lt;class TOther&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.As``1" />
      <MemberSignature Language="VB.NET" Value="Public Function As(Of TOther As Class) () As ImmutableArray(Of TOther)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOther&gt;&#xA; where TOther : class System::Collections::Immutable::ImmutableArray&lt;TOther&gt; As();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TOther&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOther">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TOther">
          <span data-ttu-id="a00cf-135">Tipo di elemento della matrice da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-135">The type of array element to return.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="a00cf-136">Restituisce una nuova matrice non modificabile che contiene gli elementi di questa matrice di cui viene eseguito il cast su un tipo diverso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-136">Returns a new immutable array that contains the elements of this array cast to a different type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-137">Matrice non modificabile che contiene gli elementi di questa matrice di cui viene eseguito il cast su un tipo diverso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-137">An immutable array that contains the elements of this array, cast to a different type.</span>
          </span>
          <span data-ttu-id="a00cf-138">Se il cast non riesce, restituisce una matrice la cui proprietà <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> restituisce <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-138">If the cast fails, returns an array whose <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> property returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-139">Matrici di tipi di elementi derivati possono essere convertite in matrici di tipi di elemento di base senza la riallocazione della matrice.</span><span class="sxs-lookup"><span data-stu-id="a00cf-139">Arrays of derived elements types can be cast to arrays of base element types without reallocating the array.</span></span>  
  
 <span data-ttu-id="a00cf-140">Upcasts dell'elemento creato con il <xref:System.Collections.Immutable.ImmutableArray.Create%2A> metodo può essere annullato utilizzando il <xref:System.Collections.Immutable.ImmutableArray%601.As%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a00cf-140">Upcasts of element created with the <xref:System.Collections.Immutable.ImmutableArray.Create%2A> method can be reversed using the <xref:System.Collections.Immutable.ImmutableArray%601.As%2A> method.</span></span> <span data-ttu-id="a00cf-141">Tuttavia, un downcast è solo esito positivo quando viene invertito un upcast precedente.</span><span class="sxs-lookup"><span data-stu-id="a00cf-141">However, a downcast is only successful when it reverses a prior upcast.</span></span> <span data-ttu-id="a00cf-142">operazione.</span><span class="sxs-lookup"><span data-stu-id="a00cf-142">operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CastArray&lt;TOther&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;TOther&gt; CastArray&lt;TOther&gt; () where TOther : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TOther&gt; CastArray&lt;class TOther&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.CastArray``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CastArray(Of TOther As Class) () As ImmutableArray(Of TOther)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOther&gt;&#xA; where TOther : class System::Collections::Immutable::ImmutableArray&lt;TOther&gt; CastArray();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TOther&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOther">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TOther">To be added.</typeparam>
        <summary>
          <span data-ttu-id="a00cf-143">Inizializza una nuova istanza dello struct <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> eseguendo il cast della matrice sottostante in una matrice di tipo <typeparameter name="TOther"><paramref name="TOther" /></typeparameter></span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-143">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct by casting the underlying             array to an array of type <typeparameter name="TOther"><paramref name="TOther" /></typeparameter></span>
          </span>
          <span data-ttu-id="a00cf-144">.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-144">.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="a00cf-145">Generata se il cast non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-145">Thrown if the cast is illegal.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CastUp&lt;TDerived&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; CastUp&lt;TDerived&gt; (System.Collections.Immutable.ImmutableArray&lt;TDerived&gt; items) where TDerived : class, T;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; CastUp&lt;class (!T) TDerived&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TDerived&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.CastUp``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CastUp(Of TDerived As {Class, T}) (items As ImmutableArray(Of TDerived)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDerived&gt;&#xA; where TDerived : class, T static System::Collections::Immutable::ImmutableArray&lt;T&gt; CastUp(System::Collections::Immutable::ImmutableArray&lt;TDerived&gt; items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>T</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TDerived&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived">To be added.</typeparam>
        <param name="items">
          <span data-ttu-id="a00cf-146">Matrice con cui inizializzare la matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-146">The array to initialize the array with.</span>
          </span>
          <span data-ttu-id="a00cf-147">Non viene effettuata alcuna copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-147">No copy is made.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-148">Inizializza una nuova istanza dello struct <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> in base al contenuto di un'istanza esistente, consentendo un cast statico covariante per riutilizzare in modo efficiente la matrice esistente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-148">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct based on the contents             of an existing instance, allowing a covariant static cast to efficiently reuse the existing array.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-149">Covariante upcasts da questo metodo può essere annullata chiamando il <xref:System.Collections.Immutable.ImmutableArray%601.As%2A> o <xref:System.Collections.Immutable.ImmutableArray%601.CastArray%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a00cf-149">Covariant upcasts from this method may be reversed by calling the <xref:System.Collections.Immutable.ImmutableArray%601.As%2A> or <xref:System.Collections.Immutable.ImmutableArray%601.CastArray%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Function Clear () As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-150">Restituisce una matrice con tutti gli elementi rimossi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-150">Returns an array with all the elements removed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-151">Matrice con tutti gli elementi rimossi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-151">An array with all of the elements removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a00cf-152">Elemento da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-152">The item to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-153">Determina se l'elemento specificato esiste nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-153">Determines whether the specified item exists in the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-154">
            <see langword="true" /> se l'elemento specificato è stato individuato nella matrice; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-154">
              <see langword="true" /> if the specified item was found in the array; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.CopyTo(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="a00cf-155">Matrice in cui effettuare la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-155">The array to copy to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-156">Copia il contenuto di questa matrice nella matrice specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-156">Copies the contents of this array to the specified array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] destination, int destinationIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] destination, int32 destinationIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As T(), destinationIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ destination, int destinationIndex);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="T[]" />
        <Parameter Name="destinationIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="a00cf-157">Matrice in cui effettuare la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-157">The array to copy to.</span>
          </span>
        </param>
        <param name="destinationIndex">
          <span data-ttu-id="a00cf-158">Indice in <c>array</c> in corrispondenza del quale ha inizio la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-158">The index in <c>array</c> where copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-159">Copia il contenuto di questa matrice nella matrice specificata, a partire dall'indice di destinazione specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-159">Copies the contents of this array to the specified array starting at the specified destination index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (int sourceIndex, T[] destination, int destinationIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(int32 sourceIndex, !T[] destination, int32 destinationIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (sourceIndex As Integer, destination As T(), destinationIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(int sourceIndex, cli::array &lt;T&gt; ^ destination, int destinationIndex, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="T[]" />
        <Parameter Name="destinationIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceIndex">
          <span data-ttu-id="a00cf-160">Indice di questa matrice da cui ha inizio la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-160">The index of this array where copying begins.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="a00cf-161">Matrice in cui effettuare la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-161">The array to copy to.</span>
          </span>
        </param>
        <param name="destinationIndex">
          <span data-ttu-id="a00cf-162">Indice in <c>array</c> in corrispondenza del quale ha inizio la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-162">The index in <c>array</c> where copying begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="a00cf-163">Numero di elementi da copiare da questa matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-163">The number of elements to copy from this array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-164">Copia gli elementi specificati in questa matrice nella matrice specificata in corrispondenza dell'indice iniziale specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-164">Copies the specified items in this array to the specified array at the specified starting index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Collections.Immutable.ImmutableArray&lt;T&gt; Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Empty" />
      <MemberSignature Language="DocId" Value="F:System.Collections.Immutable.ImmutableArray`1.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As ImmutableArray(Of T) " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Collections::Immutable::ImmutableArray&lt;T&gt; Empty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-165">Ottiene una matrice non modificabile vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-165">Gets an empty immutable array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Collections.Immutable.ImmutableArray&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Equals(System.Collections.Immutable.ImmutableArray{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ImmutableArray(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Collections::Immutable::ImmutableArray&lt;T&gt; other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="a00cf-166">Oggetto da confrontare con l'oggetto corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-166">An object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-167">Indica se la matrice specificata è uguale a questa matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-167">Indicates whether specified array is equal to this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-168">
            <see langword="true" /> se <paramref name="other" /> è uguale a questa matrice; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-168">
              <see langword="true" /> if <paramref name="other" /> is equal to this array; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="a00cf-169">
            <see cref="T:System.Object" /> da confrontare con questa matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-169">The <see cref="T:System.Object" /> to compare with this array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-170">Determina se questa matrice è uguale all'oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-170">Determines if this array is equal to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-171">
            <see langword="true" /> se questa matrice è uguale a <paramref name="obj" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-171">
              <see langword="true" /> if this array is equal to <paramref name="obj" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As ImmutableArray(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-172">Restituisce un enumeratore che consente di scorrere il contenuto della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-172">Returns an enumerator that iterates through the contents of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-173">Enumeratore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-173">An enumerator.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-174">Restituisce un codice hash per questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-174">Returns a hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-175">Codice hash per questa istanza, adatto per l'utilizzo in algoritmi hash e in strutture di dati, ad esempio una tabella hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-175">A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a00cf-176">Elemento da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-176">The item to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-177">Cerca l'elemento specificato nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-177">Searches the array for the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-178">Posizione dell'indice in base zero dell'elemento se viene trovato; in caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-178">The zero-based index position of the item if it is found, or -1 if it is not.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.IndexOf(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a00cf-179">Elemento da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-179">The item to search for.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="a00cf-180">Indice in corrispondenza del quale iniziare la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-180">The index at which to begin the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-181">Cerca l'elemento specificato nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-181">Searches the array for the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-182">Posizione dell'indice in base zero dell'elemento se viene trovato; in caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-182">The zero-based index position of the item if it is found, or -1 if it is not.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int startIndex, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 startIndex, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.IndexOf(`0,System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, startIndex As Integer, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int startIndex, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a00cf-183">Elemento da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-183">The item to search for.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="a00cf-184">Indice in corrispondenza del quale iniziare la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-184">The index at which to begin the search.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="a00cf-185">Operatore di confronto di uguaglianza da usare nella ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-185">The equality comparer to use in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-186">Cerca l'elemento specificato nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-186">Searches the array for the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-187">Posizione dell'indice in base zero dell'elemento se viene trovato; in caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-187">The zero-based index position of the item if it is found, or -1 if it is not.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.IndexOf(`0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a00cf-188">Elemento da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-188">The item to search for.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="a00cf-189">Indice in corrispondenza del quale iniziare la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-189">The index at which to begin the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a00cf-190">Numero di elementi in cui eseguire la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-190">The number of elements to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-191">Cerca l'elemento specificato nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-191">Searches the array for the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-192">Posizione dell'indice in base zero dell'elemento se viene trovato; in caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-192">The zero-based index position of the item if it is found, or -1 if it is not.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int startIndex, int count, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item, int32 startIndex, int32 count, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, startIndex As Integer, count As Integer, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T item, int startIndex, int count, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a00cf-193">Elemento da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-193">The item to search for.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="a00cf-194">Indice in corrispondenza del quale iniziare la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-194">The index at which to begin the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a00cf-195">Numero di elementi in cui eseguire la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-195">The number of elements to search.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="a00cf-196">Operatore di confronto di uguaglianza da usare nella ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-196">The equality comparer to use in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-197">Cerca l'elemento specificato nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-197">Searches the array for the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-198">Posizione dell'indice in base zero dell'elemento se viene trovato; in caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-198">The zero-based index position of the item if it is found, or -1 if it is not.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, item As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Insert(int index, T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a00cf-199">Indice in base zero nella matrice in corrispondenza del quale deve essere aggiunto il nuovo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-199">The 0-based index into the array at which the new item should be added.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="a00cf-200">Elemento da inserire all'inizio della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-200">The item to insert at the start of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-201">Restituisce una nuova matrice con il valore specificato inserito nella posizione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-201">Returns a new array with the specified value inserted at the specified position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-202">Nuova matrice con l'elemento inserito in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-202">A new array with the item inserted at the specified index.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; InsertRange (int index, System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; InsertRange(int32 index, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertRange (index As Integer, items As IEnumerable(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; InsertRange(int index, System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a00cf-203">Indice in corrispondenza del quale inserire il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-203">The index at which to insert the value.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="a00cf-204">Elementi da inserire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-204">The elements to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-205">Inserisce i valori specificati in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-205">Inserts the specified values at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-206">Nuova matrice non modificabile con gli elementi inseriti in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-206">A new immutable array with the items inserted at the specified index.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; InsertRange (int index, System.Collections.Immutable.ImmutableArray&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; InsertRange(int32 index, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.InsertRange(System.Int32,System.Collections.Immutable.ImmutableArray{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertRange (index As Integer, items As ImmutableArray(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; InsertRange(int index, System::Collections::Immutable::ImmutableArray&lt;T&gt; items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a00cf-207">Indice in corrispondenza del quale inserire il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-207">The index at which to insert the value.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="a00cf-208">Elementi da inserire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-208">The elements to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-209">Inserisce i valori specificati in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-209">Inserts the specified values at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-210">Nuova matrice non modificabile con gli elementi inseriti in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-210">A new immutable array with the items inserted at the specified index.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public bool IsDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefault { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-211">Ottiene un valore che indica se questa matrice è stata dichiarata ma non inizializzata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-211">Gets a value indicating whether this array was declared but not initialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a00cf-212">
            <see langword="true" /> per indicare che <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> è <see langword="null" />; in caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-212">
              <see langword="true" /> to indicate the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> is <see langword="null" />; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultOrEmpty">
      <MemberSignature Language="C#" Value="public bool IsDefaultOrEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaultOrEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.IsDefaultOrEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDefaultOrEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefaultOrEmpty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-213">Ottiene un valore che indica se questa matrice <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> è vuota o non inizializzata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-213">Gets a value indicating whether this <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> is empty or is not initialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a00cf-214">
            <see langword="true" /> per indicare che <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> è <see langword="null" /> o <see cref="F:System.Collections.Immutable.ImmutableArray`1.Empty" />; in caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-214">
              <see langword="true" /> to indicate the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> is <see langword="null" /> or <see cref="F:System.Collections.Immutable.ImmutableArray`1.Empty" />; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-215">Ottiene un valore che indica se questa matrice <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> è vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-215">Gets a value indicating whether this <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> is empty.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a00cf-216">
            <see langword="true" /> per indicare che <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> è vuota; in caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-216">
              <see langword="true" /> to indicate the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> is empty; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a00cf-217">Indice in base zero dell'elemento da ottenere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-217">The zero-based index of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-218">Ottiene l'elemento in corrispondenza dell'indice specificato nella matrice non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-218">Gets the element at the specified index in the immutable array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a00cf-219">Elemento in corrispondenza dell'indice specificato nella matrice non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-219">The element at the specified index in the immutable array.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemRef">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.T&amp; ItemRef (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.T&amp; modreq(System.Runtime.InteropServices.InAttribute) ItemRef(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.ItemRef(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ItemRef (index As Integer) As T&amp;" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::T&amp; ^ ItemRef(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.T&amp;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.LastIndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a00cf-220">Elemento da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-220">The item to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-221">Cerca l'elemento specificato nella matrice, a partire dalla fine della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-221">Searches the array for the specified item; starting at the end of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-222">Indice in base zero della matrice in cui è stato trovato l'elemento oppure -1 se non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-222">The 0-based index into the array where the item was found; or -1 if it could not be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.LastIndexOf(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a00cf-223">Elemento da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-223">The item to search for.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="a00cf-224">Indice in corrispondenza del quale iniziare la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-224">The index at which to begin the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-225">Cerca l'elemento specificato nella matrice, a partire dalla fine della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-225">Searches the array for the specified item; starting at the end of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-226">Indice in base zero della matrice in cui è stato trovato l'elemento oppure -1 se non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-226">The 0-based index into the array where the item was found; or -1 if it could not be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.LastIndexOf(`0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a00cf-227">Elemento da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-227">The item to search for.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="a00cf-228">Indice in corrispondenza del quale iniziare la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-228">The index at which to begin the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a00cf-229">Numero di elementi in cui eseguire la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-229">The number of elements to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-230">Cerca l'elemento specificato nella matrice, a partire dalla fine della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-230">Searches the array for the specified item; starting at the end of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-231">Indice in base zero della matrice in cui è stato trovato l'elemento oppure -1 se non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-231">The 0-based index into the array where the item was found; or -1 if it could not be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int startIndex, int count, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(!T item, int32 startIndex, int32 count, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, startIndex As Integer, count As Integer, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(T item, int startIndex, int count, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a00cf-232">Elemento da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-232">The item to search for.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="a00cf-233">Indice in corrispondenza del quale iniziare la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-233">The index at which to begin the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a00cf-234">Numero di elementi in cui eseguire la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-234">The number of elements to search.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="a00cf-235">Operatore di confronto di uguaglianza da usare nella ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-235">The equality comparer to use in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-236">Cerca l'elemento specificato nella matrice, a partire dalla fine della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-236">Searches the array for the specified item; starting at the end of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-237">Indice in base zero della matrice in cui è stato trovato l'elemento oppure -1 se non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-237">The 0-based index into the array where the item was found; or -1 if it could not be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-238">Ottiene il numero di elementi nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-238">Gets the number of elements in the array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a00cf-239">Numero di elementi nella matrice</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-239">The number of elements in the array</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OfType&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TResult&gt; OfType&lt;TResult&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; OfType&lt;TResult&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.OfType``1" />
      <MemberSignature Language="VB.NET" Value="Public Function OfType(Of TResult) () As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ OfType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="a00cf-240">Il tipo in base al quale filtrare gli elementi della sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-240">The type to filter the elements of the sequence on.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="a00cf-241">Filtra gli elementi di questa matrice in base a quelli assegnabili al tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-241">Filters the elements of this array to those assignable to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-242">Oggetto <see cref="T:System.Collections.IEnumerable" /> che contiene elementi della sequenza di input del tipo <paramref name="TResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-242">An <see cref="T:System.Collections.IEnumerable" /> that contains elements from the input sequence of type of <paramref name="TResult" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Collections.Immutable.ImmutableArray&lt;T&gt; left, System.Collections.Immutable.ImmutableArray&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; left, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.op_Equality(System.Collections.Immutable.ImmutableArray{`0},System.Collections.Immutable.ImmutableArray{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ImmutableArray(Of T), right As ImmutableArray(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Collections::Immutable::ImmutableArray&lt;T&gt; left, System::Collections::Immutable::ImmutableArray&lt;T&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
        <Parameter Name="right" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="a00cf-243">Matrice a sinistra dell'operatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-243">The array to the left of the operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="a00cf-244">Matrice a destra dell'operatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-244">The array to the right of the operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-245">Restituisce un valore che indica se due matrici sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-245">Returns a value that indicates if two arrays are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-246">
            <see langword="true" /> se le matrici sono uguali; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-246">
              <see langword="true" /> if the arrays are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Nullable&lt;System.Collections.Immutable.ImmutableArray&lt;T&gt;&gt; left, Nullable&lt;System.Collections.Immutable.ImmutableArray&lt;T&gt;&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Nullable`1&lt;valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt;&gt; left, valuetype System.Nullable`1&lt;valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt;&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.op_Equality(System.Nullable{System.Collections.Immutable.ImmutableArray{`0}},System.Nullable{System.Collections.Immutable.ImmutableArray{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Nullable(Of ImmutableArray(Of T)), right As Nullable(Of ImmutableArray(Of T))) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Nullable&lt;System::Collections::Immutable::ImmutableArray&lt;T&gt;&gt; left, Nullable&lt;System::Collections::Immutable::ImmutableArray&lt;T&gt;&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Nullable&lt;System.Collections.Immutable.ImmutableArray&lt;T&gt;&gt;" />
        <Parameter Name="right" Type="System.Nullable&lt;System.Collections.Immutable.ImmutableArray&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="a00cf-247">Matrice a sinistra dell'operatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-247">The array to the left of the operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="a00cf-248">Matrice a destra dell'operatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-248">The array to the right of the operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-249">Restituisce un valore che indica se due matrici sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-249">Returns a value that indicates if two arrays are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-250">
            <see langword="true" /> se le matrici sono uguali; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-250">
              <see langword="true" /> if the arrays are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Collections.Immutable.ImmutableArray&lt;T&gt; left, System.Collections.Immutable.ImmutableArray&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; left, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.op_Inequality(System.Collections.Immutable.ImmutableArray{`0},System.Collections.Immutable.ImmutableArray{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ImmutableArray(Of T), right As ImmutableArray(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Collections::Immutable::ImmutableArray&lt;T&gt; left, System::Collections::Immutable::ImmutableArray&lt;T&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
        <Parameter Name="right" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="a00cf-251">Matrice a sinistra dell'operatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-251">The array to the left of the operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="a00cf-252">Matrice a destra dell'operatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-252">The array to the right of the operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-253">Restituisce un valore che indica se due matrici non sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-253">Returns a value that indicates whether two arrays are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-254">
            <see langword="true" /> se le matrici non sono uguali; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-254">
              <see langword="true" /> if the arrays are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Nullable&lt;System.Collections.Immutable.ImmutableArray&lt;T&gt;&gt; left, Nullable&lt;System.Collections.Immutable.ImmutableArray&lt;T&gt;&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Nullable`1&lt;valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt;&gt; left, valuetype System.Nullable`1&lt;valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt;&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.op_Inequality(System.Nullable{System.Collections.Immutable.ImmutableArray{`0}},System.Nullable{System.Collections.Immutable.ImmutableArray{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Nullable(Of ImmutableArray(Of T)), right As Nullable(Of ImmutableArray(Of T))) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Nullable&lt;System::Collections::Immutable::ImmutableArray&lt;T&gt;&gt; left, Nullable&lt;System::Collections::Immutable::ImmutableArray&lt;T&gt;&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Nullable&lt;System.Collections.Immutable.ImmutableArray&lt;T&gt;&gt;" />
        <Parameter Name="right" Type="System.Nullable&lt;System.Collections.Immutable.ImmutableArray&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="a00cf-255">Oggetto a sinistra dell'operatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-255">The object to the left of the operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="a00cf-256">Oggetto a destra dell'operatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-256">The object to the right of the operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-257">Verifica la disuguaglianza tra due matrici.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-257">Checks for inequality between two array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-258">
            <see langword="true" /> se le due matrici non sono uguali; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-258">
              <see langword="true" /> if the two arrays are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Remove(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a00cf-259">Elemento da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-259">The item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-260">Restituisce una matrice con la prima occorrenza dell'elemento specificato rimosso dalla matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-260">Returns an array with the first occurrence of the specified element removed from the array.</span>
          </span>
          <span data-ttu-id="a00cf-261">Se non viene trovata alcuna corrispondenza, viene restituita la matrice corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-261">If no match is found, the current array is returned.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-262">Nuova matrice con l'elemento rimosso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-262">A new array with the item removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Remove (T item, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Remove(!T item, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Remove(`0,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T, equalityComparer As IEqualityComparer(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Remove(T item, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a00cf-263">Elemento da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-263">The item to remove.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="a00cf-264">Operatore di confronto di uguaglianza da usare nella ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-264">The equality comparer to use in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-265">Restituisce una matrice con la prima occorrenza dell'elemento specificato rimosso dalla matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-265">Returns an array with the first occurrence of the specified element removed from the array.</span>
          </span>
          <span data-ttu-id="a00cf-266">Se non viene trovata alcuna corrispondenza, viene restituita la matrice corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-266">If no match is found, the current array is returned.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-267">Nuova matrice con l'elemento specificato rimosso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-267">A new array with the specified item removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; RemoveAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; RemoveAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.RemoveAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAll (match As Predicate(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; RemoveAll(Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="a00cf-268">Delegato che definisce le condizioni degli elementi da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-268">The delegate that defines the conditions of the elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-269">Rimuove della matrice tutti gli elementi che soddisfano la condizione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-269">Removes all the items from the array that meet the specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-270">Nuova matrice con gli elementi che soddisfano la condizione specificata rimossi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-270">A new array with items that meet the specified condition removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (index As Integer) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a00cf-271">Indice in base zero dell'elemento da rimuovere dalla matrice restituita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-271">The 0-based index of the element to remove from the returned array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-272">Restituisce una matrice con l'elemento in corrispondenza della posizione specificata rimosso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-272">Returns an array with the element at the specified position removed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-273">Nuova matrice con l'elemento in corrispondenza dell'indice specificato rimosso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-273">A new array with the item at the specified index removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; RemoveRange (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; RemoveRange(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveRange (items As IEnumerable(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; RemoveRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="a00cf-274">Elementi da rimuovere se vengono trovate corrispondenze in questo elenco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-274">The items to remove if matches are found in this list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-275">Rimuove da questa matrice gli elementi specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-275">Removes the specified items from this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-276">Nuova matrice con gli elementi rimossi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-276">A new array with the elements removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; RemoveRange (System.Collections.Immutable.ImmutableArray&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; RemoveRange(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.RemoveRange(System.Collections.Immutable.ImmutableArray{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveRange (items As ImmutableArray(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; RemoveRange(System::Collections::Immutable::ImmutableArray&lt;T&gt; items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="a00cf-277">Elementi da rimuovere se vengono trovate corrispondenze in questo elenco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-277">The items to remove if matches are found in this list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-278">Rimuove da questo elenco i valori specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-278">Removes the specified values from this list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-279">Nuovo elenco con gli elementi rimossi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-279">A new list with the elements removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; RemoveRange (System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; RemoveRange(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.RemoveRange(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveRange (items As IEnumerable(Of T), equalityComparer As IEqualityComparer(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; RemoveRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="a00cf-280">Elementi da rimuovere se vengono trovate corrispondenze in questo elenco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-280">The items to remove if matches are found in this list.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="a00cf-281">Operatore di confronto di uguaglianza da usare nella ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-281">The equality comparer to use in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-282">Rimuove da questa matrice gli elementi specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-282">Removes the specified items from this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-283">Nuova matrice con gli elementi rimossi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-283">A new array with the elements removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; RemoveRange (System.Collections.Immutable.ImmutableArray&lt;T&gt; items, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; RemoveRange(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; items, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.RemoveRange(System.Collections.Immutable.ImmutableArray{`0},System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveRange (items As ImmutableArray(Of T), equalityComparer As IEqualityComparer(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; RemoveRange(System::Collections::Immutable::ImmutableArray&lt;T&gt; items, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="a00cf-284">Elementi da rimuovere se vengono trovate corrispondenze in questo elenco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-284">The items to remove if matches are found in this list.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="a00cf-285">Operatore di confronto di uguaglianza da usare nella ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-285">The equality comparer to use in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-286">Rimuove da questo elenco gli elementi specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-286">Removes the specified items from this list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-287">Nuova matrice con gli elementi rimossi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-287">A new array with the elements removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; RemoveRange (int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; RemoveRange(int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveRange (index As Integer, length As Integer) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; RemoveRange(int index, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a00cf-288">Indice in base zero dell'elemento iniziale da rimuovere dalla matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-288">The 0-based index of the starting element to remove from the array.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="a00cf-289">Numero di elementi da rimuovere dalla matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-289">The number of elements to remove from the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-290">Restituisce una matrice con gli elementi in corrispondenza della posizione specificata rimossi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-290">Returns an array with the elements at the specified position removed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-291">Nuova matrice con gli elementi specificati rimossi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-291">The new array with the specified elements removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Replace (T oldValue, T newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Replace(!T oldValue, !T newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Replace(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldValue As T, newValue As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Replace(T oldValue, T newValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="T" />
        <Parameter Name="newValue" Type="T" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <span data-ttu-id="a00cf-292">Valore da trovare e sostituire nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-292">The value to find and replace in the array.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="a00cf-293">Valore con cui sostituire <c>oldvalue</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-293">The value to replace the <c>oldvalue</c> with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-294">Individua il primo elemento nella matrice uguale al valore specificato e sostituisce il valore con il nuovo valore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-294">Finds the first element in the array equal to the specified value and replaces the value with the specified new value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-295">Nuova matrice che contiene <paramref name="newValue" /> anche se i valori nuovi e precedenti sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-295">A new array that contains <paramref name="newValue" /> even if the new and old values are the same.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a00cf-296">
            <paramref name="oldValue" /> non è presente nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-296">
              <paramref name="oldValue" /> is not found in the array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Replace (T oldValue, T newValue, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Replace(!T oldValue, !T newValue, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldValue As T, newValue As T, equalityComparer As IEqualityComparer(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Replace(T oldValue, T newValue, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="T" />
        <Parameter Name="newValue" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <span data-ttu-id="a00cf-297">Valore da trovare e sostituire nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-297">The value to find and replace in the array.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="a00cf-298">Valore con cui sostituire <c>oldvalue</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-298">The value to replace the <c>oldvalue</c> with.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="a00cf-299">Operatore di confronto di uguaglianza da usare per confrontare i valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-299">The equality comparer to use to compare values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-300">Individua il primo elemento nella matrice uguale al valore specificato e sostituisce il valore con il nuovo valore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-300">Finds the first element in the array equal to the specified value and replaces the value with the specified new value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-301">Nuova matrice che contiene <paramref name="newValue" /> anche se i valori nuovi e precedenti sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-301">A new array that contains <paramref name="newValue" /> even if the new and old values are the same.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a00cf-302">
            <paramref name="oldValue" /> non è presente nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-302">
              <paramref name="oldValue" /> is not found in the array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; SetItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; SetItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetItem (index As Integer, item As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; SetItem(int index, T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a00cf-303">Indice dell'elemento da sostituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-303">The index of the item to replace.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="a00cf-304">Elemento da aggiungere all'elenco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-304">The item to add to the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-305">Sostituisce l'elemento in corrispondenza dell'indice specificato con l'elemento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-305">Replaces the item at the specified index with the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-306">Nuova matrice che contiene <paramref name="item" /> in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-306">The new array that contains <paramref name="item" /> at the specified index.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Function Sort () As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Sort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-307">Ordina gli elementi della matrice non modificabile usando l'operatore di confronto predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-307">Sorts the elements in the immutable array using the default comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-308">Nuova matrice non modificabile che contiene gli elementi di questa matrice, nell'ordine specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-308">A new immutable array that contains the items in this array, in sorted order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Sort (System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Sort(class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Sort(System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sort (comparer As IComparer(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Sort(System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="a00cf-309">Implementazione da usare durante il confronto di elementi oppure <see langword="null" /> per usare l'operatore di confronto predefinito</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-309">The implementation to use when comparing elements, or <see langword="null" /> to use the default comparer</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-310">Ordina gli elementi della matrice non modificabile usando l'operatore di confronto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-310">Sorts the elements in the immutable array using the specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-311">Nuova matrice non modificabile che contiene gli elementi di questa matrice, nell'ordine specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-311">A new immutable array that contains the items in this array, in sorted order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Sort (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Sort(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Sort(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sort (comparison As Comparison(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Sort(Comparison&lt;T&gt; ^ comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparison">
          <span data-ttu-id="a00cf-312">Oggetto <see cref="T:System.Comparison`1" /> da usare quando si confrontano gli elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-312">The <see cref="T:System.Comparison`1" /> to use when comparing elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-313">Ordina gli elementi in <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> usando l'elemento <see cref="T:System.Comparison`1" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-313">Sorts the elements in the entire <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> using             the specified <see cref="T:System.Comparison`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-314">Elenco ordinato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-314">The sorted list.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a00cf-315">
            <paramref name="comparison" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-315">
              <paramref name="comparison" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Sort (int index, int count, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Sort(int32 index, int32 count, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sort (index As Integer, count As Integer, comparer As IComparer(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Sort(int index, int count, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a00cf-316">Indice del primo elemento da ordinare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-316">The index of the first element to sort.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a00cf-317">Numero di elementi da includere nell'ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-317">The number of elements to include in the sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="a00cf-318">Implementazione da usare durante il confronto di elementi oppure <see langword="null" /> per usare l'operatore di confronto predefinito</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-318">The implementation to use when comparing elements, or <see langword="null" /> to use the default comparer</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-319">Ordina gli elementi specificati della matrice non modificabile usando l'operatore di confronto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-319">Sorts the specified elements in the immutable array using the specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-320">Nuova matrice non modificabile che contiene gli elementi di questa matrice, nell'ordine specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-320">A new immutable array that contains the items in this array, in sorted order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;T&gt;.Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;T&gt;.Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#ICollection&lt;T&gt;#Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (item As T) Implements ICollection(Of T).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;T&gt;.Add(T item) = System::Collections::Generic::ICollection&lt;T&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a00cf-321">Elemento da aggiungere alla fine della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-321">The item to add to the end of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-322">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-322">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-323">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a00cf-323">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a00cf-324">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Collections.Immutable.ImmutableArray%601> a un'interfaccia <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="a00cf-324">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Clear">
      <MemberSignature Language="C#" Value="void ICollection&lt;T&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;T&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#ICollection&lt;T&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements ICollection(Of T).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;T&gt;.Clear() = System::Collections::Generic::ICollection&lt;T&gt;::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-325">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-325">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-326">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a00cf-326">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a00cf-327">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Collections.Immutable.ImmutableArray%601> a un'interfaccia <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="a00cf-327">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Count">
      <MemberSignature Language="C#" Value="int System.Collections.Generic.ICollection&lt;T&gt;.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.Generic.ICollection&lt;T&gt;.Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#ICollection&lt;T&gt;#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection(Of T).Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.Generic.ICollection&lt;T&gt;.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-328">Ottiene il numero di matrici nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-328">Gets the number of array in the collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a00cf-329">Generata se la proprietà <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> restituisce true.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-329">Thrown if the <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> property returns true.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-330">Ottiene un valore che indica se l'istanza è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-330">Gets a value indicating whether this instance is read only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a00cf-331">
            <c>true</c> se questa istanza è di sola lettura; in caso contrario, <c>false</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-331">
              <c>true</c> if this instance is read only; otherwise, <c>false</c>.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;T&gt;.Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;T&gt;.Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#ICollection&lt;T&gt;#Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (item As T) As Boolean Implements ICollection(Of T).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;T&gt;.Remove(T item) = System::Collections::Generic::ICollection&lt;T&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a00cf-332">Oggetto da rimuovere dalla matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-332">The object to remove from the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-333">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-333">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-334">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-334">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-335">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a00cf-335">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a00cf-336">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Collections.Immutable.ImmutableArray%601> a un'interfaccia <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="a00cf-336">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-337">Restituisce un enumeratore che scorre la matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-337">Returns an enumerator that iterates through the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-338">Enumeratore che può essere usato per scorrere la matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-338">An enumerator that can be used to iterate through the array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-339">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a00cf-339">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a00cf-340">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Collections.Immutable.ImmutableArray%601> a un'interfaccia <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="a00cf-340">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;T&gt;.Insert">
      <MemberSignature Language="C#" Value="void IList&lt;T&gt;.Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;T&gt;.Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#IList&lt;T&gt;#Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As T) Implements IList(Of T).Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;T&gt;.Insert(int index, T item) = System::Collections::Generic::IList&lt;T&gt;::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a00cf-341">Indice della posizione in cui inserire l'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-341">The index of the location to insert the item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="a00cf-342">Elemento da inserire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-342">The item to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-343">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-343">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-344">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a00cf-344">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a00cf-345">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Collections.Immutable.ImmutableArray%601> a un'interfaccia <xref:System.Collections.Generic.IList%601>.</span><span class="sxs-lookup"><span data-stu-id="a00cf-345">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;T&gt;.Item">
      <MemberSignature Language="C#" Value="T System.Collections.Generic.IList&lt;T&gt;.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T System.Collections.Generic.IList&lt;T&gt;.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#IList&lt;T&gt;#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As T Implements IList(Of T).Item" />
      <MemberSignature Language="C++ CLI" Value="property T System.Collections.Generic.IList&lt;T&gt;.Item[int] { T get(int index); void set(int index, T value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a00cf-346">Indice in base zero dell'elemento da ottenere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-346">The zero-based index of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-347">Ottiene o imposta l'elemento in corrispondenza dell'indice specificato nell'elenco di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-347">Gets or sets the element at the specified index in the read-only list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a00cf-348">Elemento in corrispondenza dell'indice specificato nell'elenco di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-348">The element at the specified index in the read-only list.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a00cf-349">Generata sempre da set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-349">Always thrown from the setter.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a00cf-350">Generata se la proprietà <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> restituisce true.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-350">Thrown if the <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> property returns true.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;T&gt;.RemoveAt">
      <MemberSignature Language="C#" Value="void IList&lt;T&gt;.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;T&gt;.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#IList&lt;T&gt;#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList(Of T).RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;T&gt;.RemoveAt(int index) = System::Collections::Generic::IList&lt;T&gt;::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a00cf-351">Indice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-351">The index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-352">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-352">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyCollection&lt;T&gt;.Count">
      <MemberSignature Language="C#" Value="int System.Collections.Generic.IReadOnlyCollection&lt;T&gt;.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.Generic.IReadOnlyCollection&lt;T&gt;.Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#IReadOnlyCollection&lt;T&gt;#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements IReadOnlyCollection(Of T).Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.Generic.IReadOnlyCollection&lt;T&gt;.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-353">Ottiene il numero di matrici nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-353">Gets the number of array in the collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a00cf-354">Generata se la proprietà <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> restituisce true.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-354">Thrown if the <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> property returns true.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyList&lt;T&gt;.Item">
      <MemberSignature Language="C#" Value="T System.Collections.Generic.IReadOnlyList&lt;T&gt;.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T System.Collections.Generic.IReadOnlyList&lt;T&gt;.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#IReadOnlyList&lt;T&gt;#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As T Implements IReadOnlyList(Of T).Item" />
      <MemberSignature Language="C++ CLI" Value="property T System.Collections.Generic.IReadOnlyList&lt;T&gt;.Item[int] { T get(int index); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a00cf-355">Indice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-355">The index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-356">Ottiene l'elemento in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-356">Gets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a00cf-357">Elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-357">The element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a00cf-358">Generata se la proprietà <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> restituisce true.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-358">Thrown if the <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> property returns true.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="a00cf-359">Matrice in cui copiare questa matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-359">The array to copy this array to.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="a00cf-360">Indice nella matrice di destinazione in corrispondenza del quale iniziare l'operazione di copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-360">The index in the destination array to start the copy operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-361">Copia questa matrice in un'altra matrice, a partire dall'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-361">Copies this array to another array starting at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-362">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a00cf-362">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a00cf-363">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Collections.Immutable.ImmutableArray%601> a un'interfaccia <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="a00cf-363">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-364">Ottiene la dimensione della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-364">Gets the size of the array.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a00cf-365">Generata se la proprietà <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> restituisce true.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-365">Thrown if the <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> property returns true.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-366">Vedere l'interfaccia <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-366">See the <see cref="T:System.Collections.ICollection" /> interface.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-367">Ottiene la radice di sincronizzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-367">Gets the sync root.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-368">Restituisce un enumeratore che consente di scorrere la matrice non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-368">Returns an enumerator that iterates through the immutable array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-369">Enumeratore che consente di scorrere la matrice non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-369">An enumerator that iterates through the immutable array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a00cf-370">Valore da aggiungere alla matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-370">The value to add to the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-371">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-371">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-372">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-372">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-373">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-373">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a00cf-374">Valore da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-374">The value to check for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-375">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-375">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-376">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-376">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a00cf-377">Valore di cui restituire l'indice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-377">The value to return the index of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-378">Ottiene il valore in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-378">Gets the value at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-379">Valore dell'elemento in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-379">The value of the element at the specified index.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a00cf-380">Indice che indica dove inserire l'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-380">Index that indicates where to insert the item.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a00cf-381">Valore da inserire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-381">The value to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-382">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-382">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-383">Ottiene un valore che indica se l'istanza ha una dimensione fissa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-383">Gets a value indicating whether this instance is fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a00cf-384">
            <c>true</c> se questa istanza è fisso dimensioni; in caso contrario, <c>false</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-384">
              <c>true</c> if this instance is fixed size; otherwise, <c>false</c>.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-385">Ottiene un valore che indica se l'istanza è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-385">Gets a value indicating whether this instance is read only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a00cf-386">
            <c>true</c> se questa istanza è di sola lettura; in caso contrario, <c>false</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-386">
              <c>true</c> if this instance is read only; otherwise, <c>false</c>.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a00cf-387">Indice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-387">The index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-388">Ottiene o imposta l'oggetto <see cref="T:System.Object" /> in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-388">Gets or sets the <see cref="T:System.Object" /> at the specified index.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a00cf-389">Generata sempre da set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-389">Always thrown from the setter.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a00cf-390">Generata se la proprietà <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> restituisce true.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-390">Thrown if the <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> property returns true.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a00cf-391">Valore da rimuovere dalla matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-391">The value to remove from the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-392">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-392">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a00cf-393">Indice dell'elemento da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-393">The index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-394">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-394">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.Add">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.Add (T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.Add(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As T) As IImmutableList(Of T) Implements IImmutableList(Of T).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.Add(T value) = System::Collections::Immutable::IImmutableList&lt;T&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a00cf-395">Valore da aggiungere alla fine della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-395">The value to add to the end of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-396">Restituisce una copia della matrice originale con l'elemento specificato aggiunto alla fine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-396">Returns a copy of the original array with the specified item added to the end.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-397">Nuova matrice con l'elemento specificato aggiunto alla fine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-397">A new array with the specified item added to the end.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-398">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a00cf-398">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a00cf-399">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Collections.Immutable.ImmutableArray%601> a un'interfaccia <xref:System.Collections.Immutable.IImmutableList%601>.</span><span class="sxs-lookup"><span data-stu-id="a00cf-399">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.AddRange">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.AddRange (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.AddRange(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#AddRange(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Function AddRange (items As IEnumerable(Of T)) As IImmutableList(Of T) Implements IImmutableList(Of T).AddRange" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.AddRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items) = System::Collections::Immutable::IImmutableList&lt;T&gt;::AddRange;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.AddRange(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="a00cf-400">Elementi da aggiungere alla fine della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-400">The elements to add to the end of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-401">Restituisce una copia della matrice originale con gli elementi specificati aggiunti alla fine della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-401">Returns a copy of the original array with the specified elements added to the end of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-402">Nuova matrice con gli elementi aggiunti alla fine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-402">A new array with the elements added to the end.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-403">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a00cf-403">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a00cf-404">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Collections.Immutable.ImmutableArray%601> a un'interfaccia <xref:System.Collections.Immutable.IImmutableList%601>.</span><span class="sxs-lookup"><span data-stu-id="a00cf-404">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.Clear">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Function Clear () As IImmutableList(Of T) Implements IImmutableList(Of T).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.Clear() = System::Collections::Immutable::IImmutableList&lt;T&gt;::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-405">Restituisce una matrice con tutti gli elementi rimossi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-405">Returns an array with all the elements removed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-406">Restituisce una matrice con tutti gli elementi rimossi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-406">Returns an array with all the elements removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-407">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a00cf-407">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a00cf-408">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Collections.Immutable.ImmutableArray%601> a un'interfaccia <xref:System.Collections.Immutable.IImmutableList%601>.</span><span class="sxs-lookup"><span data-stu-id="a00cf-408">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.Insert">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.Insert (int index, T element);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.Insert(int32 index, !T element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Function Insert (index As Integer, element As T) As IImmutableList(Of T) Implements IImmutableList(Of T).Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.Insert(int index, T element) = System::Collections::Immutable::IImmutableList&lt;T&gt;::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="element" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a00cf-409">Indice in base zero nella matrice in corrispondenza del quale deve essere aggiunto il nuovo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-409">The 0-based index into the array at which the new item should be added.</span>
          </span>
        </param>
        <param name="element">
          <span data-ttu-id="a00cf-410">Elemento da inserire all'inizio della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-410">The item to insert at the start of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-411">Restituisce una nuova matrice con il valore specificato inserito nella posizione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-411">Returns a new array with the specified value inserted at the specified position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-412">Nuova matrice con il valore specificato inserito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-412">A new array with the specified value inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-413">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a00cf-413">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a00cf-414">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Collections.Immutable.ImmutableArray%601> a un'interfaccia <xref:System.Collections.Immutable.IImmutableList%601>.</span><span class="sxs-lookup"><span data-stu-id="a00cf-414">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.InsertRange">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.InsertRange (int index, System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.InsertRange(int32 index, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Function InsertRange (index As Integer, items As IEnumerable(Of T)) As IImmutableList(Of T) Implements IImmutableList(Of T).InsertRange" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.InsertRange(int index, System::Collections::Generic::IEnumerable&lt;T&gt; ^ items) = System::Collections::Immutable::IImmutableList&lt;T&gt;::InsertRange;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a00cf-415">Indice in corrispondenza del quale inserire il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-415">The index at which to insert the value.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="a00cf-416">Elementi da inserire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-416">The elements to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-417">Inserisce i valori specificati in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-417">Inserts the specified values at the specified index</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-418">Nuova matrice con i valori specificati rimossi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-418">A new array with the specified values inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-419">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a00cf-419">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a00cf-420">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Collections.Immutable.ImmutableArray%601> a un'interfaccia <xref:System.Collections.Immutable.IImmutableList%601>.</span><span class="sxs-lookup"><span data-stu-id="a00cf-420">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.Remove">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.Remove (T value, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.Remove(!T value, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#Remove(`0,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Function Remove (value As T, equalityComparer As IEqualityComparer(Of T)) As IImmutableList(Of T) Implements IImmutableList(Of T).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.Remove(T value, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer) = System::Collections::Immutable::IImmutableList&lt;T&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.Remove(`0,System.Collections.Generic.IEqualityComparer{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a00cf-421">Valore da rimuovere dalla matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-421">The value to remove from the array.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="a00cf-422">Operatore di confronto di uguaglianza da usare nella ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-422">The equality comparer to use in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-423">Restituisce una matrice con la prima occorrenza dell'elemento specificato rimosso dalla matrice; se non viene trovata alcuna corrispondenza, viene restituita la matrice corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-423">Returns an array with the first occurrence of the specified element removed from the array; if no match is found, the current array is returned.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-424">Nuova matrice con il valore rimosso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-424">A new array with the value removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-425">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a00cf-425">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a00cf-426">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Collections.Immutable.ImmutableArray%601> a un'interfaccia <xref:System.Collections.Immutable.IImmutableList%601>.</span><span class="sxs-lookup"><span data-stu-id="a00cf-426">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveAll">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.RemoveAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#RemoveAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Function RemoveAll (match As Predicate(Of T)) As IImmutableList(Of T) Implements IImmutableList(Of T).RemoveAll" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveAll(Predicate&lt;T&gt; ^ match) = System::Collections::Immutable::IImmutableList&lt;T&gt;::RemoveAll;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.RemoveAll(System.Predicate{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="a00cf-427">Delegato che definisce le condizioni degli elementi da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-427">The delegate that defines the conditions of the elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-428">Rimuove della matrice tutti gli elementi che soddisfano la condizione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-428">Removes all the items from the array that meet the specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-429">Nuova matrice con gli elementi che soddisfano la condizione specificata rimossi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-429">A new array with items that meet the specified condition removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-430">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a00cf-430">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a00cf-431">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Collections.Immutable.ImmutableArray%601> a un'interfaccia <xref:System.Collections.Immutable.IImmutableList%601>.</span><span class="sxs-lookup"><span data-stu-id="a00cf-431">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveAt">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function RemoveAt (index As Integer) As IImmutableList(Of T) Implements IImmutableList(Of T).RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveAt(int index) = System::Collections::Immutable::IImmutableList&lt;T&gt;::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a00cf-432">Indice in base zero dell'elemento da rimuovere dalla matrice restituita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-432">The 0-based index of the element to remove from the returned array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-433">Restituisce una matrice con l'elemento in corrispondenza della posizione specificata rimosso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-433">Returns an array with the element at the specified position removed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-434">Nuova matrice con l'elemento specificato rimosso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-434">A new array with the specified item removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-435">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a00cf-435">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a00cf-436">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Collections.Immutable.ImmutableArray%601> a un'interfaccia <xref:System.Collections.Immutable.IImmutableList%601>.</span><span class="sxs-lookup"><span data-stu-id="a00cf-436">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveRange">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.RemoveRange (System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveRange(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#RemoveRange(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Function RemoveRange (items As IEnumerable(Of T), equalityComparer As IEqualityComparer(Of T)) As IImmutableList(Of T) Implements IImmutableList(Of T).RemoveRange" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer) = System::Collections::Immutable::IImmutableList&lt;T&gt;::RemoveRange;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="a00cf-437">Elementi da rimuovere se vengono trovate corrispondenze in questo elenco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-437">The items to remove if matches are found in this list.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="a00cf-438">Operatore di confronto di uguaglianza da usare nella ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-438">The equality comparer to use in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-439">Rimuove da questa matrice gli elementi specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-439">Removes the specified items from this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-440">Nuova matrice con gli elementi rimossi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-440">A new array with the elements removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-441">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a00cf-441">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a00cf-442">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Collections.Immutable.ImmutableArray%601> a un'interfaccia <xref:System.Collections.Immutable.IImmutableList%601>.</span><span class="sxs-lookup"><span data-stu-id="a00cf-442">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveRange">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function RemoveRange (index As Integer, count As Integer) As IImmutableList(Of T) Implements IImmutableList(Of T).RemoveRange" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveRange(int index, int count) = System::Collections::Immutable::IImmutableList&lt;T&gt;::RemoveRange;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a00cf-443">Indice in base zero dell'elemento iniziale da rimuovere dalla matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-443">The 0-based index of the starting element to remove from the array.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a00cf-444">Numero di elementi da rimuovere dalla matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-444">The number of elements to remove from the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-445">Restituisce una matrice con gli elementi in corrispondenza della posizione specificata rimossi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-445">Returns an array with the elements at the specified position removed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-446">Nuova matrice con gli elementi specificati rimossi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-446">The new array with the specified elements removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-447">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a00cf-447">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a00cf-448">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Collections.Immutable.ImmutableArray%601> a un'interfaccia <xref:System.Collections.Immutable.IImmutableList%601>.</span><span class="sxs-lookup"><span data-stu-id="a00cf-448">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.Replace">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.Replace (T oldValue, T newValue, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.Replace(!T oldValue, !T newValue, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Function Replace (oldValue As T, newValue As T, equalityComparer As IEqualityComparer(Of T)) As IImmutableList(Of T) Implements IImmutableList(Of T).Replace" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.Replace(T oldValue, T newValue, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer) = System::Collections::Immutable::IImmutableList&lt;T&gt;::Replace;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="T" />
        <Parameter Name="newValue" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <span data-ttu-id="a00cf-449">Valore da trovare e sostituire nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-449">The value to find and replace in the array.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="a00cf-450">Valore con cui sostituire <c>oldvalue</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-450">The value to replace the <c>oldvalue</c> with.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="a00cf-451">Operatore di confronto di uguaglianza da usare per confrontare i valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-451">The equality comparer to use to compare values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-452">Individua il primo elemento nella matrice uguale al valore specificato e sostituisce il valore con il nuovo valore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-452">Finds the first element in the array equal to the specified value and replaces the value with the specified new value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-453">Nuova matrice che contiene <paramref name="newValue" /> anche se i valori nuovi e precedenti sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-453">A new array that contains <paramref name="newValue" /> even if the new and old values are the same.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-454">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a00cf-454">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a00cf-455">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Collections.Immutable.ImmutableArray%601> a un'interfaccia <xref:System.Collections.Immutable.IImmutableList%601>.</span><span class="sxs-lookup"><span data-stu-id="a00cf-455">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a00cf-456">
            <paramref name="oldValue" /> non è presente nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-456">
              <paramref name="oldValue" /> is not found in the array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.SetItem">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.SetItem (int index, T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.SetItem(int32 index, !T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Function SetItem (index As Integer, value As T) As IImmutableList(Of T) Implements IImmutableList(Of T).SetItem" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.SetItem(int index, T value) = System::Collections::Immutable::IImmutableList&lt;T&gt;::SetItem;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.SetItem(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a00cf-457">Indice dell'elemento da sostituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-457">The index of the item to replace.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a00cf-458">Valore da aggiungere all'elenco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-458">The value to add to the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-459">Sostituisce l'elemento in corrispondenza dell'indice specificato con l'elemento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-459">Replaces the item at the specified index with the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-460">Nuova matrice che contiene <paramref name="item" /> in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-460">The new array that contains <paramref name="item" /> at the specified index.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-461">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a00cf-461">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a00cf-462">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Collections.Immutable.ImmutableArray%601> a un'interfaccia <xref:System.Collections.Immutable.IImmutableList%601>.</span><span class="sxs-lookup"><span data-stu-id="a00cf-462">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="a00cf-463">Elemento da confrontare con l'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-463">The element to compare with the current instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="a00cf-464">Oggetto usato per confrontare i membri della matrice corrente con i membri corrispondenti di un'altra matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-464">The object used to compare members of the current array with the corresponding members of other array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-465">Determina se l'elemento raccolta corrente precede, è nella stessa posizione o segue un altro elemento nell'ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-465">Determines whether the current collection element precedes, occurs in the same position as, or follows another element in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-466">Intero che indica se l'elemento corrente precede, è nella stessa posizione o segue l'altro elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-466">An integer that indicates whether the current element precedes, is in the same position or follows the other element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-467">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a00cf-467">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a00cf-468">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Collections.Immutable.ImmutableArray%601> a un'interfaccia <xref:System.Collections.IStructuralComparable>.</span><span class="sxs-lookup"><span data-stu-id="a00cf-468">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a00cf-469">Le matrici non hanno la stessa lunghezza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-469">The arrays are not the same length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="a00cf-470">Matrice da confrontare con l'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-470">The array to compare with the current instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="a00cf-471">Oggetto che determina se l'istanza corrente e l'altra sono uguali dal punto di vista strutturale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-471">An object that determines whether the current instance and other are structurally equal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-472">Determina se questa matrice è uguale alla matrice specificata dal punto di vista strutturale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-472">Determines whether this array is structurally equal to the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-473">
            <see langword="true" /> se le due matrici sono uguali dal punto di vista strutturale; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-473">
              <see langword="true" /> if the two arrays are structurally equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-474">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a00cf-474">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a00cf-475">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Collections.Immutable.ImmutableArray%601> a un'interfaccia <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="a00cf-475">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="a00cf-476">Oggetto che calcola il codice hash dell'oggetto corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-476">An object that computes the hash code of the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a00cf-477">Restituisce un codice hash per l'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-477">Returns a hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-478">Codice hash per l'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-478">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBuilder">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder ToBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!T&gt; ToBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.ToBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToBuilder () As ImmutableArray(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ ToBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a00cf-479">Crea una matrice modificabile con lo stesso contenuto di questa matrice e che può essere modificata in modo efficiente tra più operazioni tramite interfacce standard modificabili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-479">Creates a mutable array that has the same contents as this array and can be efficiently mutated across multiple operations using standard mutable interfaces.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a00cf-480">Nuovo generatore con lo stesso contenuto di questa matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a00cf-480">The new builder with the same contents as this array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a00cf-481">Si tratta di un'operazione o (1) e si comporta solo un'allocazione di memoria (piccola) singolo.</span><span class="sxs-lookup"><span data-stu-id="a00cf-481">This is an O(1) operation and results in only a single (small) memory allocation.</span></span> <span data-ttu-id="a00cf-482">Elenco modificabile restituito non è thread-safe.</span><span class="sxs-lookup"><span data-stu-id="a00cf-482">The mutable list that is returned is not thread-safe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>