<Type Name="ImmutableList" FullName="System.Collections.Immutable.ImmutableList">
  <TypeSignature Language="C#" Value="public static class ImmutableList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableList extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableList" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableList abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="af353-101">Fornisce un set di metodi di inizializzazione per le istanze della classe <see cref="T:System.Collections.Immutable.ImmutableList`1" />.</span><span class="sxs-lookup"><span data-stu-id="af353-101">Provides a set of initialization methods for instances of the <see cref="T:System.Collections.Immutable.ImmutableList`1" /> class.</span></span>  
  
 <span data-ttu-id="af353-102">**Pacchetto NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">informazioni sulle raccolte non modificabili e su come installarle</see>)</span><span class="sxs-lookup"><span data-stu-id="af353-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span></span></summary>
    <remarks>To be added.</remarks>
    <threadsafe><span data-ttu-id="af353-103">Questo tipo Ã¨ thread-safe.</span><span class="sxs-lookup"><span data-stu-id="af353-103">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; Create&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; Create&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Create``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) () As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="af353-104">Tipo di elementi da archiviare nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-104">The type of items to be stored in the .</span></span></typeparam>
        <summary><span data-ttu-id="af353-105">Crea un elenco non modificabile vuoto.</span><span class="sxs-lookup"><span data-stu-id="af353-105">Creates an empty immutable list.</span></span></summary>
        <returns><span data-ttu-id="af353-106">Elenco vuoto.</span><span class="sxs-lookup"><span data-stu-id="af353-106">An empty .</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; Create&lt;T&gt; (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; Create&lt;T&gt;(!!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Create``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item As T) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ Create(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="af353-107">Tipo di elementi nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-107">The type of items in the .</span></span></typeparam>
        <param name="item"><span data-ttu-id="af353-108">Elemento con cui prepopolare l'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-108">The item to prepopulate the list with.</span></span></param>
        <summary><span data-ttu-id="af353-109">Crea un nuovo elenco non modificabile che contiene l'elemento specificato.</span><span class="sxs-lookup"><span data-stu-id="af353-109">Creates a new immutable list that contains the specified item.</span></span></summary>
        <returns><span data-ttu-id="af353-110">Nuovo elenco non modificabile che contiene l'elemento specificato.</span><span class="sxs-lookup"><span data-stu-id="af353-110">A new  that contains the specified item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; Create&lt;T&gt; (params T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Create``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (ParamArray items As T()) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ Create(... cli::array &lt;T&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="af353-111">Tipo di elementi nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-111">The type of items in the .</span></span></typeparam>
        <param name="items"><span data-ttu-id="af353-112">Matrice che contiene gli elementi con cui prepopolare l'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-112">An array that contains the items to prepopulate the list with.</span></span></param>
        <summary><span data-ttu-id="af353-113">Crea un nuovo elenco non modificabile che contiene la matrice di elementi specificata.</span><span class="sxs-lookup"><span data-stu-id="af353-113">Creates a new immutable list that contains the specified array of items.</span></span></summary>
        <returns><span data-ttu-id="af353-114">Nuovo elenco non modificabile che contiene gli elementi specificati.</span><span class="sxs-lookup"><span data-stu-id="af353-114">A new immutable list that contains the specified items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt;.Builder CreateBuilder&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.CreateBuilder``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) () As ImmutableList(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt;::Builder ^ CreateBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="af353-115">Tipo di elementi archiviati dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="af353-115">The type of items stored by the collection.</span></span></typeparam>
        <summary><span data-ttu-id="af353-116">Crea un nuovo generatore di elenchi non modificabili.</span><span class="sxs-lookup"><span data-stu-id="af353-116">Creates a new immutable list builder.</span></span></summary>
        <returns><span data-ttu-id="af353-117">Generatore di raccolte non modificabili.</span><span class="sxs-lookup"><span data-stu-id="af353-117">The immutable collection builder.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; CreateRange&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; CreateRange&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.CreateRange``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of T) (items As IEnumerable(Of T)) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ CreateRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="af353-118">Tipo di elementi nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-118">The type of items in the .</span></span></typeparam>
        <param name="items"><span data-ttu-id="af353-119">Elementi da aggiungere all'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-119">The items to add to the list.</span></span></param>
        <summary><span data-ttu-id="af353-120">Crea un nuovo elenco non modificabile che contiene gli elementi specificati.</span><span class="sxs-lookup"><span data-stu-id="af353-120">Creates a new immutable list that contains the specified items.</span></span></summary>
        <returns><span data-ttu-id="af353-121">Restituisce un elenco non modificabile che contiene gli elementi specificati.</span><span class="sxs-lookup"><span data-stu-id="af353-121">Returns an immutable list that contains the specified items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="af353-122">Tipo di elementi nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-122">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="af353-123">Elenco in cui eseguire la ricerca.</span><span class="sxs-lookup"><span data-stu-id="af353-123">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="af353-124">Oggetto da individuare nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-124">The object to locate in the list.</span></span> <span data-ttu-id="af353-125">Il valore puÃ² essere null per i tipi di riferimento.</span><span class="sxs-lookup"><span data-stu-id="af353-125">The value can be null for reference types.</span></span></param>
        <summary><span data-ttu-id="af353-126">Cerca l'oggetto specificato e restituisce l'indice in base zero della prima occorrenza nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-126">Searches for the specified object and returns the zero-based index of the first occurrence within the list.</span></span></summary>
        <returns><span data-ttu-id="af353-127">Indice in base zero della prima occorrenza dell'elemento all'interno dell'intervallo di elementi dell'elenco compreso tra l'indice e l'ultimo elemento, se presente; in caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="af353-127">The zero-based index of the first occurrence of item within the range of elements in the list that extends from index to the last element, if found; otherwise, â1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="af353-128">Tipo di elementi nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-128">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="af353-129">Elenco in cui eseguire la ricerca.</span><span class="sxs-lookup"><span data-stu-id="af353-129">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="af353-130">Oggetto da individuare nell'elenco non modificabile.</span><span class="sxs-lookup"><span data-stu-id="af353-130">The object to locate in the Immutable list.</span></span> <span data-ttu-id="af353-131">Il valore puÃ² essere null per i tipi di riferimento.</span><span class="sxs-lookup"><span data-stu-id="af353-131">The value can be null for reference types.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="af353-132">Operatore di confronto di uguaglianza da usare nella ricerca.</span><span class="sxs-lookup"><span data-stu-id="af353-132">The equality comparer to use in the search.</span></span></param>
        <summary><span data-ttu-id="af353-133">Cerca l'oggetto specificato e restituisce l'indice in base zero della prima occorrenza nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-133">Searches for the specified object and returns the zero-based index of the first occurrence within the list.</span></span></summary>
        <returns><span data-ttu-id="af353-134">Indice in base zero della prima occorrenza dell'elemento all'interno dell'intervallo di elementi dell'elenco non modificabile compreso tra l'indice e l'ultimo elemento, se presente; in caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="af353-134">The zero-based index of the first occurrence of item within the range of elements in the immutable list that extends from index to the last element, if found; otherwise, â1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="af353-135">Tipo di elementi nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-135">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="af353-136">Elenco in cui eseguire la ricerca.</span><span class="sxs-lookup"><span data-stu-id="af353-136">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="af353-137">Oggetto da individuare nell'elenco non modificabile.</span><span class="sxs-lookup"><span data-stu-id="af353-137">The object to locate in the Immutable list.</span></span> <span data-ttu-id="af353-138">Il valore puÃ² essere null per i tipi di riferimento.</span><span class="sxs-lookup"><span data-stu-id="af353-138">The value can be null for reference types.</span></span></param>
        <param name="startIndex"><span data-ttu-id="af353-139">Indice iniziale in base zero della ricerca.</span><span class="sxs-lookup"><span data-stu-id="af353-139">The zero-based starting index of the search.</span></span> <span data-ttu-id="af353-140">0 (zero) Ã¨ valido in un elenco vuoto.</span><span class="sxs-lookup"><span data-stu-id="af353-140">0 (zero) is valid in an empty list.</span></span></param>
        <summary><span data-ttu-id="af353-141">Cerca l'oggetto specificato e restituisce l'indice in base zero della prima occorrenza all'interno dell'intervallo di elementi nell'elenco non modificabile che Ã¨ compreso tra l'indice specificato e l'ultimo elemento.</span><span class="sxs-lookup"><span data-stu-id="af353-141">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</span></span></summary>
        <returns><span data-ttu-id="af353-142">Indice in base zero della prima occorrenza dell'elemento all'interno dell'intervallo di elementi dell'elenco non modificabile compreso tra l'indice e l'ultimo elemento, se presente; in caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="af353-142">The zero-based index of the first occurrence of item within the range of elements in the Immutable list that extends from index to the last element, if found; otherwise, â1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="af353-143">Tipo di elementi nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-143">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="af353-144">Elenco in cui eseguire la ricerca.</span><span class="sxs-lookup"><span data-stu-id="af353-144">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="af353-145">Oggetto da individuare nell'elenco non modificabile.</span><span class="sxs-lookup"><span data-stu-id="af353-145">The object to locate in the Immutable list.</span></span> <span data-ttu-id="af353-146">Il valore puÃ² essere null per i tipi di riferimento.</span><span class="sxs-lookup"><span data-stu-id="af353-146">The value can be null for reference types.</span></span></param>
        <param name="startIndex"><span data-ttu-id="af353-147">Indice iniziale in base zero della ricerca.</span><span class="sxs-lookup"><span data-stu-id="af353-147">The zero-based starting index of the search.</span></span> <span data-ttu-id="af353-148">0 (zero) Ã¨ valido in un elenco vuoto.</span><span class="sxs-lookup"><span data-stu-id="af353-148">0 (zero) is valid in an empty list.</span></span></param>
        <param name="count"><span data-ttu-id="af353-149">Numero di elementi nella sezione in cui eseguire la ricerca.</span><span class="sxs-lookup"><span data-stu-id="af353-149">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="af353-150">Cerca l'oggetto specificato e restituisce l'indice in base zero della prima occorrenza all'interno dell'intervallo di elementi nell'elenco non modificabile che Ã¨ compreso tra l'indice specificato e l'ultimo elemento.</span><span class="sxs-lookup"><span data-stu-id="af353-150">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</span></span></summary>
        <returns><span data-ttu-id="af353-151">Indice in base zero della prima occorrenza dell'elemento all'interno dell'intervallo di elementi dell'elenco non modificabile compreso tra l'indice e l'ultimo elemento, se presente; in caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="af353-151">The zero-based index of the first occurrence of item within the range of elements in the Immutable list that extends from index to the last element, if found; otherwise, â1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="af353-152">Tipo di elementi nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-152">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="af353-153">Elenco in cui eseguire la ricerca.</span><span class="sxs-lookup"><span data-stu-id="af353-153">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="af353-154">Oggetto da individuare nell'elenco non modificabile.</span><span class="sxs-lookup"><span data-stu-id="af353-154">The object to locate in the Immutable list.</span></span> <span data-ttu-id="af353-155">Il valore puÃ² essere null per i tipi di riferimento.</span><span class="sxs-lookup"><span data-stu-id="af353-155">The value can be null for reference types.</span></span></param>
        <summary><span data-ttu-id="af353-156">Cerca l'oggetto specificato e restituisce l'indice in base zero dell'ultima occorrenza nell'intero elenco non modificabile.</span><span class="sxs-lookup"><span data-stu-id="af353-156">Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</span></span></summary>
        <returns><span data-ttu-id="af353-157">Indice in base zero dell'ultima occorrenza dell'elemento all'interno dell'intero elenco non modificabile, se presente; in caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="af353-157">The zero-based index of the last occurrence of item within the entire the Immutable list, if found; otherwise, â1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="af353-158">Tipo di elementi nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-158">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="af353-159">Elenco in cui eseguire la ricerca.</span><span class="sxs-lookup"><span data-stu-id="af353-159">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="af353-160">Oggetto da individuare nell'elenco non modificabile.</span><span class="sxs-lookup"><span data-stu-id="af353-160">The object to locate in the Immutable list.</span></span> <span data-ttu-id="af353-161">Il valore puÃ² essere null per i tipi di riferimento.</span><span class="sxs-lookup"><span data-stu-id="af353-161">The value can be null for reference types.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="af353-162">Operatore di confronto di uguaglianza da usare nella ricerca.</span><span class="sxs-lookup"><span data-stu-id="af353-162">The equality comparer to use in the search.</span></span></param>
        <summary><span data-ttu-id="af353-163">Cerca l'oggetto specificato e restituisce l'indice in base zero dell'ultima occorrenza nell'intero elenco non modificabile.</span><span class="sxs-lookup"><span data-stu-id="af353-163">Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</span></span></summary>
        <returns><span data-ttu-id="af353-164">Indice in base zero dell'ultima occorrenza dell'elemento all'interno dell'intero elenco non modificabile, se presente; in caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="af353-164">The zero-based index of the last occurrence of item within the entire the Immutable list, if found; otherwise, â1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="af353-165">Tipo di elementi nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-165">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="af353-166">Elenco in cui eseguire la ricerca.</span><span class="sxs-lookup"><span data-stu-id="af353-166">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="af353-167">Oggetto da individuare nell'elenco non modificabile.</span><span class="sxs-lookup"><span data-stu-id="af353-167">The object to locate in the Immutable list.</span></span> <span data-ttu-id="af353-168">Il valore puÃ² essere null per i tipi di riferimento.</span><span class="sxs-lookup"><span data-stu-id="af353-168">The value can be null for reference types.</span></span></param>
        <param name="startIndex"><span data-ttu-id="af353-169">Indice iniziale in base zero della ricerca all'indietro.</span><span class="sxs-lookup"><span data-stu-id="af353-169">The zero-based starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="af353-170">Cerca l'oggetto specificato e restituisce l'indice in base zero dell'ultima occorrenza all'interno dell'intervallo di elementi nell'elenco non modificabile che Ã¨ compreso tra il primo elemento e l'indice specificato.</span><span class="sxs-lookup"><span data-stu-id="af353-170">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="af353-171">Indice in base zero dell'ultima occorrenza dell'elemento all'interno dell'intervallo di elementi dell'elenco non modificabile compreso tra il primo elemento e l'indice, se presente; in caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="af353-171">The zero-based index of the last occurrence of item within the range of elements in the Immutable list that extends from the first element to index, if found; otherwise, â1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="af353-172">Tipo di elementi nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-172">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="af353-173">Elenco in cui eseguire la ricerca.</span><span class="sxs-lookup"><span data-stu-id="af353-173">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="af353-174">Oggetto da individuare nell'elenco non modificabile.</span><span class="sxs-lookup"><span data-stu-id="af353-174">The object to locate in the Immutable list.</span></span> <span data-ttu-id="af353-175">Il valore puÃ² essere null per i tipi di riferimento.</span><span class="sxs-lookup"><span data-stu-id="af353-175">The value can be null for reference types.</span></span></param>
        <param name="startIndex"><span data-ttu-id="af353-176">Indice iniziale in base zero della ricerca all'indietro.</span><span class="sxs-lookup"><span data-stu-id="af353-176">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="af353-177">Numero di elementi nella sezione in cui eseguire la ricerca.</span><span class="sxs-lookup"><span data-stu-id="af353-177">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="af353-178">Cerca l'oggetto specificato e restituisce l'indice in base zero dell'ultima occorrenza all'interno dell'intervallo di elementi nell'elenco non modificabile che Ã¨ compreso tra il primo elemento e l'indice specificato.</span><span class="sxs-lookup"><span data-stu-id="af353-178">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="af353-179">Indice in base zero dell'ultima occorrenza dell'elemento all'interno dell'intervallo di elementi dell'elenco non modificabile compreso tra il primo elemento e l'indice, se presente; in caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="af353-179">The zero-based index of the last occurrence of item within the range of elements in the Immutable list that extends from the first element to index, if found; otherwise, â1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableList&lt;T&gt; Remove&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; Remove&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Remove(Of T) (list As IImmutableList(Of T), value As T) As IImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableList&lt;T&gt; ^ Remove(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="af353-180">Tipo di elementi nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-180">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="af353-181">Elenco in cui eseguire la ricerca.</span><span class="sxs-lookup"><span data-stu-id="af353-181">The list to search.</span></span></param>
        <param name="value"><span data-ttu-id="af353-182">Valore da rimuovere.</span><span class="sxs-lookup"><span data-stu-id="af353-182">The value to remove.</span></span></param>
        <summary><span data-ttu-id="af353-183">Rimuove da questo elenco il valore specificato.</span><span class="sxs-lookup"><span data-stu-id="af353-183">Removes the specified value from this list.</span></span></summary>
        <returns><span data-ttu-id="af353-184">Nuovo elenco non modificabile con l'elemento rimosso o questo elenco se l'elemento non Ã¨ presente nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-184">A new immutable list with the element removed, or this list if the element is not in this list.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableList&lt;T&gt; RemoveRange&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; RemoveRange&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveRange(Of T) (list As IImmutableList(Of T), items As IEnumerable(Of T)) As IImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableList&lt;T&gt; ^ RemoveRange(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="af353-185">Tipo di elementi nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-185">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="af353-186">Elenco in cui eseguire la ricerca.</span><span class="sxs-lookup"><span data-stu-id="af353-186">The list to search.</span></span></param>
        <param name="items"><span data-ttu-id="af353-187">Elementi da rimuovere se vengono trovate corrispondenze in questo elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-187">The items to remove if matches are found in this list.</span></span></param>
        <summary><span data-ttu-id="af353-188">Rimuove da questo elenco i valori specificati.</span><span class="sxs-lookup"><span data-stu-id="af353-188">Removes the specified values from this list.</span></span></summary>
        <returns><span data-ttu-id="af353-189">Nuovo elenco non modificabile con gli elementi rimossi.</span><span class="sxs-lookup"><span data-stu-id="af353-189">A new immutable list with the elements removed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableList&lt;T&gt; Replace&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T oldValue, T newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; Replace&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T oldValue, !!T newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Replace(Of T) (list As IImmutableList(Of T), oldValue As T, newValue As T) As IImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableList&lt;T&gt; ^ Replace(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T oldValue, T newValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="oldValue" Type="T" />
        <Parameter Name="newValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="af353-190">Tipo di elementi nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-190">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="af353-191">Elenco in cui eseguire la ricerca.</span><span class="sxs-lookup"><span data-stu-id="af353-191">The list to search.</span></span></param>
        <param name="oldValue"><span data-ttu-id="af353-192">Elemento da sostituire.</span><span class="sxs-lookup"><span data-stu-id="af353-192">The element to replace.</span></span></param>
        <param name="newValue"><span data-ttu-id="af353-193">Elemento con cui sostituire l'elemento precedente.</span><span class="sxs-lookup"><span data-stu-id="af353-193">The element to replace the old element with.</span></span></param>
        <summary><span data-ttu-id="af353-194">Sostituisce il primo elemento uguale nell'elenco con l'elemento specificato.</span><span class="sxs-lookup"><span data-stu-id="af353-194">Replaces the first equal element in the list with the specified element.</span></span></summary>
        <returns><span data-ttu-id="af353-195">Nuovo elenco, anche se il valore da sostituire Ã¨ uguale al nuovo valore per tale posizione.</span><span class="sxs-lookup"><span data-stu-id="af353-195">The new list -- even if the value being replaced is equal to the new value for that position.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="af353-196">Generata quando il valore precedente non Ã¨ incluso nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="af353-196">Thrown when the old value does not exist in the list.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableList&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;TSource&gt; ToImmutableList&lt;TSource&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!TSource&gt; ToImmutableList&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableList(Of TSource) (source As IEnumerable(Of TSource)) As ImmutableList(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableList&lt;TSource&gt; ^ ToImmutableList(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="af353-197">Tipo degli elementi nella sequenza.</span><span class="sxs-lookup"><span data-stu-id="af353-197">The type of the elements in the sequence.</span></span></typeparam>
        <param name="source"><span data-ttu-id="af353-198">Sequenza da enumerare.</span><span class="sxs-lookup"><span data-stu-id="af353-198">The sequence to enumerate.</span></span></param>
        <summary><span data-ttu-id="af353-199">Enumera una sequenza e produce un elenco non modificabile del relativo contenuto.</span><span class="sxs-lookup"><span data-stu-id="af353-199">Enumerates a sequence and produces an immutable list of its contents.</span></span></summary>
        <returns><span data-ttu-id="af353-200">Elenco non modificabile che contiene gli elementi nella sequenza specificata.</span><span class="sxs-lookup"><span data-stu-id="af353-200">An immutable list that contains the items in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>