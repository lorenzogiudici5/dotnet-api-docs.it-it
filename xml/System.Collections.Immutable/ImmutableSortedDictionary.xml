<Type Name="ImmutableSortedDictionary" FullName="System.Collections.Immutable.ImmutableSortedDictionary">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c3255a463dead73c4b69c3c71c36c8ac884bece5" />
    <Meta Name="ms.sourcegitcommit" Value="3fe2c1a8103f3cbce15cdf2c8a9a7527ad69a40f" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="09/25/2018" />
    <Meta Name="ms.locfileid" Value="47068166" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ImmutableSortedDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableSortedDictionary extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableSortedDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableSortedDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableSortedDictionary abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableSortedDictionary = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dd26d-101">Fornisce un set di metodi di inizializzazione per le istanze della classe <see cref="T:System.Collections.Immutable.ImmutableSortedDictionary`2" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd26d-101">Provides a set of initialization methods for instances of the <see cref="T:System.Collections.Immutable.ImmutableSortedDictionary`2" /> class.</span>
      </span>
      <span data-ttu-id="dd26d-102">**Pacchetto NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">informazioni sulle raccolte non modificabili e su come installarle</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd26d-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <threadsafe>
      <span data-ttu-id="dd26d-103">Questo tipo Ã¨ thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd26d-103">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedDictionary.Create``2" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) () As ImmutableSortedDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableSortedDictionary&lt;TKey, TValue&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Collections.Immutable.ImmutableSortedDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableSortedDictionary.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="dd26d-104">Tipo delle chiavi archiviate dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-104">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="dd26d-105">Tipo dei valori archiviati dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-105">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="dd26d-106">Crea un dizionario ordinato non modificabile vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-106">Creates an empty immutable sorted dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd26d-107">Dizionario ordinato non modificabile vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-107">An empty immutable sorted dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; (System.Collections.Generic.IComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;(class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedDictionary.Create``2(System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) (keyComparer As IComparer(Of TKey)) As ImmutableSortedDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableSortedDictionary&lt;TKey, TValue&gt; ^ Create(System::Collections::Generic::IComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableSortedDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableSortedDictionary.Create keyComparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="dd26d-108">Tipo delle chiavi archiviate dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-108">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="dd26d-109">Tipo dei valori archiviati dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-109">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="dd26d-110">Implementazione da usare per determinare l'uguaglianza delle chiavi nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-110">The implementation to use to determine the equality of keys in the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd26d-111">Crea un dizionario ordinato non modificabile vuoto che usa l'operatore di confronto della chiave specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-111">Creates an empty immutable sorted dictionary that uses the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd26d-112">Dizionario ordinato non modificabile vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-112">An empty immutable sorted dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; (System.Collections.Generic.IComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;(class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedDictionary.Create``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) (keyComparer As IComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableSortedDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableSortedDictionary&lt;TKey, TValue&gt; ^ Create(System::Collections::Generic::IComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Generic.IComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableSortedDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableSortedDictionary.Create (keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="dd26d-113">Tipo delle chiavi archiviate dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-113">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="dd26d-114">Tipo dei valori archiviati dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-114">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="dd26d-115">Implementazione da usare per determinare l'uguaglianza delle chiavi nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-115">The implementation to use to determine the equality of keys in the dictionary.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="dd26d-116">Implementazione da usare per determinare l'uguaglianza dei valori nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-116">The implementation to use to determine the equality of values in the dictonary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd26d-117">Crea un dizionario ordinato non modificabile vuoto che usa gli operatori di confronto della chiave e del valore specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-117">Creates an empty immutable sorted dictionary that uses the specified key and value comparers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd26d-118">Dizionario ordinato non modificabile vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-118">An empty immutable sorted dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) () As ImmutableSortedDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableSortedDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder();" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : unit -&gt; System.Collections.Immutable.ImmutableSortedDictionary&lt;'Key, 'Value&gt;.Builder" Usage="System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="dd26d-119">Tipo delle chiavi archiviate dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-119">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="dd26d-120">Tipo dei valori archiviati dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-120">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="dd26d-121">Crea un nuovo generatore di dizionari ordinati non modificabili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-121">Creates a new immutable sorted dictionary builder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd26d-122">Generatore di raccolte non modificabili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-122">The immutable collection builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; (System.Collections.Generic.IComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;(class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2(System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) (keyComparer As IComparer(Of TKey)) As ImmutableSortedDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableSortedDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder(System::Collections::Generic::IComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableSortedDictionary&lt;'Key, 'Value&gt;.Builder" Usage="System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder keyComparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="dd26d-123">Tipo delle chiavi archiviate dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-123">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="dd26d-124">Tipo dei valori archiviati dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-124">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="dd26d-125">Operatore di confronto della chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-125">The key comparer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd26d-126">Crea un nuovo generatore di dizionari ordinati non modificabili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-126">Creates a new immutable sorted dictionary builder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd26d-127">Generatore di raccolte non modificabili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-127">The immutable collection builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; (System.Collections.Generic.IComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;(class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) (keyComparer As IComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableSortedDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableSortedDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder(System::Collections::Generic::IComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : System.Collections.Generic.IComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableSortedDictionary&lt;'Key, 'Value&gt;.Builder" Usage="System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder (keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="dd26d-128">Tipo delle chiavi archiviate dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-128">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="dd26d-129">Tipo dei valori archiviati dal dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-129">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="dd26d-130">Operatore di confronto della chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-130">The key comparer.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="dd26d-131">Operatore di confronto del valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-131">The value comparer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd26d-132">Crea un nuovo generatore di dizionari ordinati non modificabili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-132">Creates a new immutable sorted dictionary builder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd26d-133">Generatore di raccolte non modificabili.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-133">The immutable collection builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableSortedDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableSortedDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableSortedDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableSortedDictionary.CreateRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="dd26d-134">Tipo delle chiavi archiviate nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-134">The type of keys stored in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="dd26d-135">Tipo dei valori archiviati nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-135">The type of values stored in the dictionary.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="dd26d-136">Elementi da aggiungere al dizionario ordinato prima che diventi non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-136">The items to add to the sorted dictionary before itâs immutable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd26d-137">Crea un dizionario ordinato non modificabile che contiene gli elementi specificati e usa l'operatore di confronto predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-137">Creates an immutable sorted dictionary that contains the specified items and uses the default comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd26d-138">Dizionario ordinato non modificabile che contiene gli elementi specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-138">An immutable sorted dictionary that contains the specified items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (keyComparer As IComparer(Of TKey), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableSortedDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableSortedDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Generic.IComparer&lt;'Key&gt; * seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableSortedDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableSortedDictionary.CreateRange (keyComparer, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="dd26d-139">Tipo delle chiavi archiviate nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-139">The type of keys stored in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="dd26d-140">Tipo dei valori archiviati nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-140">The type of values stored in the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="dd26d-141">Implementazione dell'operatore di confronto da usare per valutare l'uguaglianza e l'ordinamento delle chiavi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-141">The comparer implementation to use to evaluate keys for equality and sorting.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="dd26d-142">Elementi da aggiungere al dizionario ordinato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-142">The items to add to the sorted dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd26d-143">Crea un nuovo dizionario ordinato non modificabile dall'intervallo di elementi specificato con l'operatore di confronto della chiave specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-143">Creates a new immutable sorted dictionary from the specified range of items with the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd26d-144">Nuovo dizionario ordinato non modificabile che contiene gli elementi specificati e usa l'operatore di confronto della chiave specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-144">The new immutable sorted dictionary that contains the specified items and uses the specified key comparer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (keyComparer As IComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableSortedDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableSortedDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Generic.IComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; * seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableSortedDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableSortedDictionary.CreateRange (keyComparer, valueComparer, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="dd26d-145">Tipo delle chiavi archiviate nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-145">The type of keys stored in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="dd26d-146">Tipo dei valori archiviati nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-146">The type of values stored in the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="dd26d-147">Implementazione dell'operatore di confronto da usare per confrontare l'uguaglianza e l'ordinamento delle chiavi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-147">The comparer implementation to use to compare keys for equality and sorting.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="dd26d-148">Implementazione dell'operatore di confronto da usare per confrontare l'uguaglianza e l'ordinamento dei valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-148">The comparer implementation to use to compare values for equality and sorting.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="dd26d-149">Elementi da aggiungere al dizionario ordinato prima che diventi non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-149">The items to add to the sorted dictionary before itâs immutable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd26d-150">Crea un nuovo dizionario ordinato non modificabile dall'intervallo di elementi specificato con gli operatori di confronto del valore e della chiave specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-150">Creates a new immutable sorted dictionary from the specified range of items with the specified key and value comparers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd26d-151">Dizionario ordinato non modificabile che contiene gli elementi specificati e usa gli operatori di confronto specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-151">An immutable sorted dictionary that contains the specified items and uses the specified comparers.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableSortedDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt; ToImmutableSortedDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableSortedDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableSortedDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableSortedDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableSortedDictionary&lt;TKey, TValue&gt; ^ ToImmutableSortedDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member ToImmutableSortedDictionary : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableSortedDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="dd26d-152">Tipo di chiavi nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-152">The type of the keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="dd26d-153">Tipo di valori nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-153">The type of the values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="dd26d-154">Sequenza di coppie chiave/valore da enumerare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-154">The sequence of key/value pairs to enumerate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd26d-155">Enumera una sequenza di coppie chiave/valore e produce un dizionario ordinato non modificabile del relativo contenuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-155">Enumerates a sequence of key/value pairs and produces an immutable sorted dictionary of its contents.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd26d-156">Dizionario ordinato non modificabile che contiene le coppie chiave/valore nella sequenza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-156">An immutable sorted dictionary that contains the key/value pairs in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableSortedDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt; ToImmutableSortedDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source, System.Collections.Generic.IComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableSortedDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableSortedDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IComparer(Of TKey)) As ImmutableSortedDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableSortedDictionary&lt;TKey, TValue&gt; ^ ToImmutableSortedDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source, System::Collections::Generic::IComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableSortedDictionary : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableSortedDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary (source, keyComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="dd26d-157">Tipo di chiavi nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-157">The type of the keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="dd26d-158">Tipo di valori nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-158">The type of the values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="dd26d-159">Sequenza di coppie chiave/valore da enumerare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-159">The sequence of key/value pairs to enumerate.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="dd26d-160">Operatore di confronto della chiave da usare durante la compilazione del dizionario non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-160">The key comparer to use when building the immutable dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd26d-161">Enumera una sequenza di coppie chiave/valore e produce un dizionario non modificabile del relativo contenuto usando l'operatore di confronto della chiave specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-161">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd26d-162">Dizionario ordinato non modificabile che contiene le coppie chiave/valore nella sequenza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-162">An immutable sorted dictionary that contains the key/value pairs in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableSortedDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt; ToImmutableSortedDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source, System.Collections.Generic.IComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableSortedDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableSortedDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableSortedDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableSortedDictionary&lt;TKey, TValue&gt; ^ ToImmutableSortedDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source, System::Collections::Generic::IComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableSortedDictionary : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableSortedDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary (source, keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="dd26d-163">Tipo di chiavi nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-163">The type of the keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="dd26d-164">Tipo di valori nel dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-164">The type of the values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="dd26d-165">Sequenza di coppie chiave/valore da enumerare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-165">The sequence of key/value pairs to enumerate.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="dd26d-166">Operatore di confronto della chiave da usare durante la compilazione del dizionario non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-166">The key comparer to use when building the immutable dictionary.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="dd26d-167">Operatore di confronto del valore da usare per il dizionario non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-167">The value comparer to use for the immutable dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd26d-168">Enumera una sequenza di coppie chiave/valore e produce un dizionario ordinato non modificabile del relativo contenuto usando gli operatori di confronto della chiave e del valore specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-168">Enumerates a sequence of key/value pairs and produces an immutable sorted dictionary of its contents by using the specified key and value comparers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd26d-169">Dizionario ordinato non modificabile che contiene le coppie chiave/valore nella sequenza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-169">An immutable sorted dictionary that contains the key/value pairs in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableSortedDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt; ToImmutableSortedDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableSortedDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableSortedDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue)) As ImmutableSortedDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableSortedDictionary&lt;TKey, TValue&gt; ^ ToImmutableSortedDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector);" />
      <MemberSignature Language="F#" Value="static member ToImmutableSortedDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Value&gt; -&gt; System.Collections.Immutable.ImmutableSortedDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary (source, keySelector, elementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="dd26d-170">Tipo degli elementi nella sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-170">The type of the elements in the sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="dd26d-171">Tipo di chiavi nel dizionario risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-171">The type of the keys in the resulting dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="dd26d-172">Tipo di valori nel dizionario risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-172">The type of the values in the resulting dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="dd26d-173">Sequenza da enumerare per generare il dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-173">The sequence to enumerate to generate the dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="dd26d-174">Funzione che produrrÃ  la chiave per il dizionario da ogni elemento della sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-174">The function that will produce the key for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="dd26d-175">Funzione che produrrÃ  il valore per il dizionario da ogni elemento della sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-175">The function that will produce the value for the dictionary from each sequence element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd26d-176">Enumera e trasforma una sequenza e produce un dizionario ordinato non modificabile del relativo contenuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-176">Enumerates and transforms a sequence, and produces an immutable sorted dictionary of its contents.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd26d-177">Dizionario ordinato non modificabile che contiene gli elementi nella sequenza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-177">An immutable sorted dictionary that contains the items in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableSortedDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt; ToImmutableSortedDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector, System.Collections.Generic.IComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableSortedDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableSortedDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IComparer(Of TKey)) As ImmutableSortedDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableSortedDictionary&lt;TKey, TValue&gt; ^ ToImmutableSortedDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableSortedDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Value&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableSortedDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary (source, keySelector, elementSelector, keyComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="dd26d-178">Tipo degli elementi nella sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-178">The type of the elements in the sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="dd26d-179">Tipo di chiavi nel dizionario risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-179">The type of the keys in the resulting dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="dd26d-180">Tipo di valori nel dizionario risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-180">The type of the values in the resulting dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="dd26d-181">Sequenza da enumerare per generare il dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-181">The sequence to enumerate to generate the dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="dd26d-182">Funzione che produrrÃ  la chiave per il dizionario da ogni elemento della sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-182">The function that will produce the key for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="dd26d-183">Funzione che produrrÃ  il valore per il dizionario da ogni elemento della sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-183">The function that will produce the value for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="dd26d-184">Operatore di confronto della chiave da usare per il dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-184">The key comparer to use for the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd26d-185">Enumera e trasforma una sequenza e produce un dizionario ordinato non modificabile del relativo contenuto usando l'operatore di confronto della chiave specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-185">Enumerates and transforms a sequence, and produces an immutable sorted dictionary of its contents by using the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd26d-186">Dizionario non modificabile che contiene gli elementi nella sequenza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-186">An immutable dictionary that contains the items in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableSortedDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt; ToImmutableSortedDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector, System.Collections.Generic.IComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableSortedDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableSortedDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableSortedDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableSortedDictionary&lt;TKey, TValue&gt; ^ ToImmutableSortedDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableSortedDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Value&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableSortedDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary (source, keySelector, elementSelector, keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="dd26d-187">Tipo degli elementi nella sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-187">The type of the elements in the sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="dd26d-188">Tipo di chiavi nel dizionario risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-188">The type of the keys in the resulting dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="dd26d-189">Tipo di valori nel dizionario risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-189">The type of the values in the resulting dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="dd26d-190">Sequenza da enumerare per generare il dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-190">The sequence to enumerate to generate the dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="dd26d-191">Funzione che produrrÃ  la chiave per il dizionario da ogni elemento della sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-191">The function that will produce the key for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="dd26d-192">Funzione che produrrÃ  il valore per il dizionario da ogni elemento della sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-192">The function that will produce the value for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="dd26d-193">Operatore di confronto della chiave da usare per il dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-193">The key comparer to use for the dictionary.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="dd26d-194">Operatore di confronto del valore da usare per il dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-194">The value comparer to use for the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd26d-195">Enumera e trasforma una sequenza e produce un dizionario ordinato non modificabile del relativo contenuto usando gli operatori di confronto della chiave e del valore specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-195">Enumerates and transforms a sequence, and produces an immutable sorted dictionary of its contents by using the specified key and value comparers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd26d-196">Dizionario ordinato non modificabile che contiene gli elementi nella sequenza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd26d-196">An immutable sorted dictionary that contains the items in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>