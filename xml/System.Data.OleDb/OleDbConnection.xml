<Type Name="OleDbConnection" FullName="System.Data.OleDb.OleDbConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b802cc1a9b4877005b91b1d9770aa1885b696e12" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34452278" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbConnection : System.Data.Common.DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbConnection extends System.Data.Common.DbConnection implements class System.Data.IDbConnection, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbConnection sealed : System::Data::Common::DbConnection, ICloneable, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta una connessione aperta a un'origine dati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Data.OleDb.OleDbConnection> oggetto rappresenta una connessione a un'origine dati univoca. Con un sistema di database client/server, è equivalente a una connessione di rete al server. A seconda delle funzionalità supportate dal provider OLE DB nativo, alcuni metodi o proprietà di un <xref:System.Data.OleDb.OleDbConnection> oggetto potrebbe non essere disponibile.  
  
 Quando si crea un'istanza di <xref:System.Data.OleDb.OleDbConnection>, tutte le proprietà sono impostate sui valori iniziali. Per un elenco di questi valori, vedere il <xref:System.Data.OleDb.OleDbConnection> costruttore.  
  
 È possibile aprire più di un oggetto DataReader su un singolo <xref:System.Data.OleDb.OleDbConnection>. Se in un'unica connessione del provider OLE DB in uso non supporta più di un oggetto DataReader, il provider apre in modo implicito una connessione aggiuntiva per ognuna.  
  
 Se il <xref:System.Data.OleDb.OleDbConnection> esula dall'ambito preposto, non viene chiuso. Pertanto, è necessario chiudere esplicitamente la connessione, chiamando <xref:System.Data.OleDb.OleDbConnection.Close%2A> o **Dispose**, oppure utilizzando il <xref:System.Data.OleDb.OleDbConnection> oggetto all'interno di un `Using` istruzione.  
  
> [!NOTE]
>  Per distribuire applicazioni ad alte prestazioni, è necessario utilizzare il pool di connessioni. Quando si utilizza il Provider di dati .NET Framework per OLE DB, non è necessario abilitare il pool di connessioni perché il provider gestito automaticamente. Per ulteriori informazioni sull'utilizzo di connessione del pool con il Provider di dati .NET Framework per OLE DB, vedere [OLE DB, ODBC e Oracle Connection Pooling](~/docs/framework/data/adonet/ole-db-odbc-and-oracle-connection-pooling.md).  
  
 Se un errore irreversibile <xref:System.Data.OleDb.OleDbException> (ad esempio, SQL Server livello di gravità pari a 20 o superiore) viene generato dal metodo che esegue un <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbConnection> potrebbe essere chiusa. L'utente può tuttavia riaprire la connessione e continuare.  
  
 Un'applicazione che crea un'istanza di <xref:System.Data.OleDb.OleDbConnection> oggetto può richiedere tutti i chiamanti diretti e indiretti impostando le richieste di sicurezza dichiarativo o imperativo di autorizzazioni sufficienti per il codice. <xref:System.Data.OleDb.OleDbConnection> effettua richieste di sicurezza utilizzando il <xref:System.Data.OleDb.OleDbPermission> oggetto. Gli utenti possono verificare che il codice disponga di autorizzazioni sufficienti mediante il <xref:System.Data.OleDb.OleDbPermissionAttribute> oggetto. Gli utenti e amministratori possono anche usare il [Caspol.exe (strumento di criteri di sicurezza di accesso di codice)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md) per modificare i criteri di sicurezza a livello aziendale, utente e computer di. Per altre informazioni, vedere [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md).  
  
 Per ulteriori informazioni sulla gestione dei messaggi di avviso e informativi dal server di dati, vedere [gli eventi di connessione](~/docs/framework/data/adonet/connection-events.md).  
  
> [!NOTE]
>  Il <xref:System.Data.OleDb.OleDbConnection> l'oggetto non supporta l'impostazione o il recupero delle proprietà dinamiche specifiche di un provider OLE DB. Sono supportate esclusivamente le proprietà che possono essere passate nella stringa di connessione per il provider OLE DB.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OleDb.OleDbCommand> e <xref:System.Data.OleDb.OleDbConnection>. Il <xref:System.Data.OleDb.OleDbConnection> viene aperto e impostato come il <xref:System.Data.OleDb.OleDbCommand.Connection%2A> per il <xref:System.Data.OleDb.OleDbCommand>. Nell'esempio viene quindi chiamato <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> e chiude la connessione. A tale scopo, <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> viene passata una stringa di connessione e una stringa di query che rappresenta un'istruzione SQL INSERT.  
  
 [!code-csharp[Classic WebData OleDbConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando una nuova istanza della <xref:System.Data.OleDb.OleDbConnection> viene creata, la lettura/scrittura proprietà vengono impostate sui valori iniziali di seguito, a meno che non siano impostate in modo specifico mediante le parole chiave associate nel <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> proprietà.  
  
|Proprietà|Valore iniziale|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>|una stringa vuota ("")|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.OleDb.OleDbConnection.Database%2A>|una stringa vuota ("")|  
|<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>|una stringa vuota ("")|  
  
 È possibile modificare il valore per queste proprietà solo se si utilizza il <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente crea e apre un <xref:System.Data.OleDb.OleDbConnection>.  
  
 [!code-csharp[Classic WebData OleDbConnection.OleDbConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.OleDbConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnection(System::String ^ connectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connessione utilizzata per aprire il database.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.OleDb.OleDbConnection" /> con la stringa di connessione specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando una nuova istanza della <xref:System.Data.OleDb.OleDbConnection> viene creata, la lettura/scrittura proprietà vengono impostate sui valori iniziali di seguito, a meno che non siano impostate in modo specifico mediante le parole chiave associate nel <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> proprietà.  
  
|Proprietà|Valore iniziale|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>|`connectionString`|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.OleDb.OleDbConnection.Database%2A>|una stringa vuota ("")|  
|<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>|una stringa vuota ("")|  
  
 È possibile modificare il valore per queste proprietà solo se si utilizza il <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente crea e apre un <xref:System.Data.OleDb.OleDbConnection>.  
  
 [!code-csharp[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Avvia una transazione di database.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As OleDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbTransaction ^ BeginTransaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Avvia una transazione di database con il valore <see cref="T:System.Data.IsolationLevel" /> corrente.</summary>
        <returns>Oggetto che rappresenta la nuova transazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario in modo esplicito il commit o il rollback della transazione utilizzando il <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> o <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> metodo. Per assicurarsi che il Provider di dati .NET Framework per OLE DB modello di gestione delle transazioni venga eseguito correttamente, evitare di utilizzare altri modelli di gestione delle transazioni, ad esempio quelli forniti dall'origine dati.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OleDb.OleDbConnection> e <xref:System.Data.OleDb.OleDbTransaction>. Viene inoltre illustrato come utilizzare il <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, e <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> metodi.  
  
 [!code-csharp[Classic WebData OleDbConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le transazioni parallele non sono supportate.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbTransaction BeginTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbTransaction ^ BeginTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">Livello di isolamento in cui eseguire la transazione.</param>
        <summary>Avvia una transazione di database con il livello di isolamento specificato.</summary>
        <returns>Oggetto che rappresenta la nuova transazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario in modo esplicito il commit o il rollback della transazione utilizzando il <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> o <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> metodo. Per assicurarsi che il Provider di dati .NET Framework per OLE DB modello di gestione delle transazioni venga eseguito correttamente, evitare di utilizzare altri modelli di gestione delle transazioni, ad esempio quelli forniti dall'origine dati.  
  
> [!NOTE]
>  Se non si specifica un livello di isolamento, viene utilizzato il livello di isolamento predefinito per il provider sottostante. Per specificare un livello di isolamento con il <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> metodo, utilizzare l'overload che accetta il `isolationLevel` parametro.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OleDb.OleDbConnection> e <xref:System.Data.OleDb.OleDbTransaction>. Viene inoltre illustrato come utilizzare il <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, e <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> metodi.  
  
 [!code-csharp[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le transazioni parallele non sono supportate.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.ChangeDatabase(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Nome del database.</param>
        <summary>Modifica il database corrente per un oggetto <see cref="T:System.Data.OleDb.OleDbConnection" /> aperto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore fornito nel `database` parametro deve essere un nome di database valido. Il `database` parametro non può contenere un valore null, una stringa vuota o una stringa contenente solo caratteri vuoti.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OleDb.OleDbConnection> e vengono visualizzate alcune delle relative proprietà di sola lettura.  
  
 [!code-csharp[Classic WebData OleDbConnection.Database Example#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/CS/source.cs#2)]
 [!code-vb[Classic WebData OleDbConnection.Database Example#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il nome del database non è valido.</exception>
        <exception cref="T:System.InvalidOperationException">La connessione non è aperta.</exception>
        <exception cref="T:System.Data.OleDb.OleDbException">Non è possibile modificare il database.</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Chiude la connessione all'origine dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.OleDb.OleDbConnection.Close%2A> metodo esegue il rollback di tutte le transazioni in sospeso. È quindi rilascia la connessione al pool di connessioni o chiude la connessione se il pool di connessioni è disabilitato. Se <xref:System.Data.OleDb.OleDbConnection.Close%2A> viene chiamato durante la gestione un <xref:System.Data.Common.DbConnection.StateChange> evento, alcuna ulteriore <xref:System.Data.Common.DbConnection.StateChange> gli eventi vengono attivati.  
  
 Un'applicazione può chiamare <xref:System.Data.OleDb.OleDbConnection.Close%2A> più di una volta. Viene generata alcuna eccezione.  
  
> [!CAUTION]
>  Non chiamare <xref:System.Data.OleDb.OleDbConnection.Close%2A> o **Dispose** in un <xref:System.Data.OleDb.OleDbConnection>, un <xref:System.Data.OleDb.OleDbDataReader>, o qualsiasi altro oggetto gestito di `Finalize` metodo della classe. In un finalizzatore, è necessario rilasciare solo le risorse non gestite che la classe controlla direttamente. Se nella classe non sono presenti risorse non gestite, non includere un metodo `Finalize` nella relativa definizione della classe. Per ulteriori informazioni, vedere [Garbage Collection](~/docs/standard/garbage-collection/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.ADO.Design.OleDbConnectionStringEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la stringa usata per aprire un database.</summary>
        <value>Stringa di connessione del provider OLE DB che contiene il nome dell'origine dati e altri parametri necessari a stabilire la connessione iniziale. Il valore predefinito è una stringa vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> è progettato in modo che corrisponda il più vicino possibile con le seguenti eccezioni formato di stringa di connessione OLE DB:  
  
-   Il "Provider = `value` " clausola è obbligatoria. Tuttavia, è possibile utilizzare "Provider = MSDASQL" perché il Provider di dati .NET Framework per OLE DB non supporta il Provider OLE DB per ODBC (MSDASQL). Per accedere a origini dati ODBC, utilizzare il <xref:System.Data.Odbc.OdbcConnection> oggetto che si trova il <xref:System.Data.Odbc> dello spazio dei nomi.  
  
-   A differenza di ODBC o ADO, la stringa di connessione che viene restituita è lo stesso come il set di utenti <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>, le informazioni di sicurezza se `Persist Security Info` è impostato su `false` (impostazione predefinita). Il Provider di dati .NET Framework per OLE DB non vengono mantenute o restituisce la password in una stringa di connessione, a meno che non si imposta la `Persist Security Info` (parola chiave) a `true` (scelta non consigliata). Per mantenere un elevato livello di sicurezza, è consigliabile utilizzare il `Integrated Security` parola chiave with `Persist Security Info` impostato su `false`.  
  
 È possibile utilizzare il <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> proprietà per connettersi a un'ampia gamma di origini dati. Nell'esempio seguente vengono illustrate diverse stringhe di connessione.  
  
```  
"Provider=MSDAORA; Data Source=ORACLE8i7;Persist Security Info=False;Integrated Security=Yes"  
  
"Provider=Microsoft.Jet.OLEDB.4.0; Data Source=c:\bin\LocalAccess40.mdb"  
  
"Provider=SQLOLEDB;Data Source=(local);Integrated Security=SSPI"  
```  
  
 Se il `Data Source` (parola chiave) non è specificato nella stringa di connessione, il provider tenterà di connettersi al server locale, se disponibile.  
  
 Per ulteriori informazioni sulle stringhe di connessione, vedere [Using Connection String Keywords with SQL Server Native Client](http://go.microsoft.com/fwlink/?LinkId=126696).  
  
 Il <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> proprietà può essere impostata solo quando la connessione viene chiusa. Molti dei valori di stringa di connessione contengono le proprietà corrispondenti di sola lettura. Quando si imposta la stringa di connessione, queste proprietà vengono aggiornate, tranne quando viene rilevato un errore. In questo caso, nessuna delle proprietà vengono aggiornata. <xref:System.Data.OleDb.OleDbConnection> proprietà restituiscono solo le impostazioni contenute nel <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>.  
  
 Reimpostare il <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> su una connessione chiusa Reimposta tutti i valori di stringa di connessione e le proprietà correlate. Ciò include la password. Ad esempio, se si imposta una stringa di connessione che include "Initial Catalog = AdventureWorks" e quindi si reimposta la stringa di connessione per "Provider = SQLOLEDB; origine dati = MySQLServer; IntegratedSecurity = SSPI", il <xref:System.Data.OleDb.OleDbConnection.Database%2A> proprietà non è impostata su AdventureWorks. (Il valore di catalogo iniziale della stringa di connessione corrisponde alla `Database` proprietà.)  
  
 Quando la proprietà è impostata, viene eseguita una convalida preliminare della stringa di connessione. Se i valori per il `Provider`, `Connect Timeout`, `Persist Security Info`, o `OLE DB Services` sono incluse nella stringa di tali valori vengono verificati. Quando un'applicazione chiama il <xref:System.Data.OleDb.OleDbConnection.Open%2A> metodo, la stringa di connessione è completamente convalidata. Se la stringa di connessione contiene proprietà non valide o non supportata, un'eccezione in fase di esecuzione, ad esempio <xref:System.ArgumentException>, viene generato.  
  
> [!CAUTION]
>  È possibile fornire informazioni di connessione per un <xref:System.Data.OleDb.OleDbConnection> in un file Universal Data Link (UDL); tuttavia è consigliabile evitare questa operazione. I file UDL non sono crittografati ed espongono le informazioni sulla stringa di connessione in testo non crittografato. Poiché per l'applicazione si tratta di una risorsa esterna basata su file, un file UDL non può essere protetto tramite .NET Framework.  
  
 Il formato di base di una stringa di connessione include una serie di coppie parola chiave/valore separati da punti e virgola. Il segno di uguale (=) connette ogni parola chiave al relativo valore. Per includere i valori che contengono un punto e virgola, una virgoletta singola o una virgoletta doppia, il valore deve essere racchiuso tra virgolette doppie. Se il valore contiene sia un punto e virgola e un carattere di virgolette doppie, il valore può essere racchiuso tra virgolette singole. Virgoletta singola è utile anche se il valore inizia con un carattere di virgolette doppie. Viceversa, le virgolette doppie possono essere utilizzate se il valore inizia con una virgoletta singola. Se il valore contiene caratteri di virgoletta singola e virgolette doppie, il carattere virgoletta usato per delimitare il valore deve essere doppia ogni volta che si verifica all'interno del valore.  
  
 Per includere spazi iniziali o finali nel valore stringa, il valore deve essere racchiuso tra virgolette singole o doppie. Eventuali spazi iniziali o finali integer, Boolean o valori enumerati vengono ignorati, anche se racchiusi tra virgolette. Tuttavia, vengono mantenuti gli spazi all'interno di un valore o la parola chiave della stringa letterale. Virgolette singole o doppie può essere utilizzate in una stringa di connessione senza delimitatori (ad esempio, `Data Source= my'Server` o `Data Source= my"Server`), a meno che un carattere di virgolette è il primo o ultimo carattere nel valore.  
  
 Per includere un segno di uguale (=) in una parola chiave o un valore, deve essere preceduto da un altro segno di uguale. Ad esempio, nella stringa di connessione ipotetico  
  
```  
"key==word=value"  
```  
  
 la parola chiave è "chiave = word" e il valore è "value".  
  
 Se una parola chiave specifica una parola chiave = valore coppia è presente più volte in una stringa di connessione, il valore impostato viene utilizzata l'ultima occorrenza elencata.  
  
 Parole chiave non sono tra maiuscole e minuscole.  
  
> [!CAUTION]
>  È necessario prestare attenzione quando si costruisce una stringa di connessione basata sull'input dell'utente, ad esempio, durante il recupero di informazioni sull'ID e la password utente da una finestra di dialogo e aggiungerlo alla stringa di connessione. L'applicazione deve verificare che un utente non è possibile incorporare i parametri della stringa di connessione aggiuntive in questi valori, ad esempio, immettere una password come "validpassword; database = somedb" nel tentativo di collegamento a un altro database. Se si usa il parametro di stringa di connessione Extended Properties per le connessioni OLE DB, evitare di passare l'ID utente e password poiché è consigliabile evitare di archiviare ID utente e password in testo non crittografato, se possibile e poiché l'impostazione predefinita di `Persist Security Info= false` non interessano il `Extended Properties` parametro.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OleDb.OleDbConnection> e vengono impostate alcune delle relative proprietà nella stringa di connessione.  
  
 [!code-csharp[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">È stato fornito un argomento della stringa di connessione non valido oppure non è stato fornito un argomento necessario della stringa di connessione.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tempo di attesa relativo al tentativo di stabilire una connessione prima di terminare il tentativo e generare un errore.</summary>
        <value>Tempo di attesa in secondi per l'apertura di una connessione. Il valore predefinito è 15 secondi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore 0 indica nessun limite e devono essere evitato un <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> perché un tentativo di connessione attenderà un tempo illimitato.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OleDb.OleDbConnection> e vengono impostate alcune delle relative proprietà nella stringa di connessione.  
  
 [!code-csharp[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ConnectionTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ConnectionTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il valore impostato è minore di 0.</exception>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.Database" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ CreateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea e restituisce un oggetto <see cref="T:System.Data.OleDb.OleDbCommand" /> associato alla classe <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <returns>Oggetto <see cref="T:System.Data.OleDb.OleDbCommand" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.Database</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome del database corrente o del database da usare dopo l'apertura della connessione.</summary>
        <value>Nome del database corrente o del database da usare dopo l'apertura di una connessione. Il valore predefinito è una stringa vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.OleDb.OleDbConnection.Database%2A> proprietà Aggiorna in modo dinamico. Se si modifica il database corrente utilizzando un'istruzione SQL o <xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A> (metodo), viene inviato un messaggio informativo e la proprietà viene aggiornata automaticamente.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OleDb.OleDbConnection> e vengono visualizzate alcune delle relative proprietà di sola lettura.  
  
 [!code-csharp[Classic WebData OleDbConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome server o il nome file dell'origine dati.</summary>
        <value>Nome server o nome file dell'origine dati. Il valore predefinito è una stringa vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la connessione al database è chiuso, il `DataSource` proprietà restituisce tutti i valori contenuti `ConnectionString` per la parola chiave dell'origine dati. Se la connessione è aperta e la `ConnectionString` valore della parola chiave di dati origine inizia con "&#124;datadirectory&#124;", la proprietà restituisce tutti i valori contenuti nelle `ConnectionString` per la sola parola chiave dell'origine dati. Se la connessione al database è aperta, la proprietà restituirà i provider nativo per il `DBPROP_INIT_DATASOURCE,` e se è vuoto, il provider nativo `DBPROP_DATASOURCENAME` viene restituito.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OleDb.OleDbConnection> e vengono visualizzate alcune delle relative proprietà di sola lettura.  
  
 [!code-csharp[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.Database" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (transaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.EnterpriseServices.ITransaction" />
      </Parameters>
      <Docs>
        <param name="transaction">Riferimento a un oggetto <see cref="T:System.EnterpriseServices.ITransaction" /> esistente in cui eseguire l'integrazione.</param>
        <summary>Permette l'integrazione nella transazione specificata come transazione distribuita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Novità in ADO.NET 2.0 è il supporto per l'utilizzo di <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> metodo di integrazione in una transazione distribuita. Poiché inserisce una connessione in un <xref:System.Transactions.Transaction> istanza, **EnlistTransaction** consente di sfruttare le funzionalità disponibili nel <xref:System.Transactions> dello spazio dei nomi per la gestione transazioni distribuite, rendendola preferibile ** EnlistDistributedTransaction** a questo scopo. Per ulteriori informazioni, vedere [transazioni distribuite](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 È possibile continuare a eseguire l'inserimento di una transazione distribuita esistente usando il <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> metodo se l'inserimento automatico è disabilitato. L'integrazione in una transazione distribuita esistente assicura che, se è stato eseguito il commit o il rollback della transazione, le modifiche apportate dal codice all'origine dati sono inoltre eseguito il commit o il rollback. Per ulteriori informazioni sulle transazioni distribuite, vedere [transazioni distribuite](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> Restituisce un'eccezione se il <xref:System.Data.OleDb.OleDbConnection> è già avviato una transazione tramite <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>. Tuttavia, se la transazione è una transazione locale avviata nell'origine dati (ad esempio eseguendo in modo esplicito l'istruzione BEGIN TRANSACTION tramite un <xref:System.Data.OleDb.OleDbCommand> oggetto), <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> esegue il rollback della transazione locale e si integra in esistente transazione distribuita come richiesto. Si noti che è stato eseguito il rollback della transazione locale e responsabile della gestione delle transazioni locali non avviate tramite non viene visualizzato <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">Riferimento a un oggetto <see cref="T:System.Transactions.Transaction" /> esistente in cui eseguire l'integrazione.</param>
        <summary>Permette l'integrazione nella transazione specificata come transazione distribuita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Novità in ADO.NET 2.0 è il supporto per l'utilizzo di <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> metodo di integrazione in una transazione distribuita. Poiché inserisce una connessione in un <xref:System.Transactions.Transaction> istanza, **EnlistTransaction** consente di sfruttare le funzionalità disponibili nel <xref:System.Transactions> dello spazio dei nomi per la gestione transazioni distribuite, rendendola preferibile ** EnlistDistributedTransaction**, che utilizza un <xref:System.EnterpriseServices.ITransaction> oggetto. Include inoltre una semantica leggermente diversa: quando una connessione in modo esplicito è integrata in una transazione, non può essere rimosso o integrata in un'altra transazione fino al completamento della prima transazione. Per ulteriori informazioni sulle transazioni distribuite, vedere [transazioni distribuite](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOleDbSchemaTable">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetOleDbSchemaTable (Guid schema, object[] restrictions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetOleDbSchemaTable(valuetype System.Guid schema, object[] restrictions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOleDbSchemaTable (schema As Guid, restrictions As Object()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetOleDbSchemaTable(Guid schema, cli::array &lt;System::Object ^&gt; ^ restrictions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Guid" />
        <Parameter Name="restrictions" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="schema">Uno dei valori di <see cref="T:System.Data.OleDb.OleDbSchemaGuid" /> che specifica la tabella dello schema da restituire.</param>
        <param name="restrictions">Matrice <see cref="T:System.Object" /> di valori di restrizione. I valori sono applicati secondo l'ordine delle colonne di restrizione. Il primo valore si applica alla prima colonna, il secondo alla seconda colonna di restrizione e così via.</param>
        <summary>Restituisce informazioni di schema da un'origine dati come indicato da un GUID e dopo l'applicazione delle restrizioni specificate.</summary>
        <returns>Classe <see cref="T:System.Data.DataTable" /> che contiene le informazioni richieste sullo schema.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabella dello schema viene restituita come un <xref:System.Data.DataTable> che ha lo stesso formato del rowset dello schema OLE DB specificato per il `schema` parametro. Utilizzare il `restrictions` parametro per filtrare le righe da restituire nel <xref:System.Data.DataTable> (ad esempio, specificando le restrizioni per il nome di tabella, tipo, proprietario o schema). Quando si passano valori nella matrice, inserire stringhe vuote o valori null per gli elementi di matrice che non contengono valori. Se si passa una matrice vuota di `restrictions`, tutte le righe, una per ogni tabella, vengono restituite nell'ordine predefinito. I valori nella matrice corrispondono all'ordine delle colonne nella tabella di origine e <xref:System.Data.DataTable>. Ogni elemento nella matrice di restrizioni viene confrontato con il contenuto della colonna corrispondente nel set di righe dello schema. Ad esempio, il primo elemento nella matrice di restrizioni è rispetto alla prima colonna del set di righe. Se un elemento di restrizione non è null, solo le righe dal set di righe dello schema che corrispondano esattamente al valore della restrizione vengono aggiunti all'oggetto risultante <xref:System.Data.DataTable>.  
  
 Il <xref:System.Data.OleDb.OleDbConnection> chiamate OLE DB sottostante **IDBSchemaRowset:: GetRowset** metodo utilizzando le regole di conversione standard di common language runtime. Per ulteriori informazioni, vedere [tipi di dati COM](http://msdn.microsoft.com/library/f93ae35d-a416-4218-8700-c8218cc90061).  
  
 È possibile recuperare informazioni sui valori letterali con <xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals>. Fornisce informazioni equivale alla chiamata OLE DB **IDBInfo::** interfaccia o ADO **Connection. OpenSchema** metodo con il `adSchemaDBInfoLiterals` costante.  
  
   
  
## Examples  
 L'esempio seguente restituisce un elenco di tabelle in un database.  
  
 [!code-csharp[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.GetOleDbSchemaTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.GetOleDbSchemaTable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OleDb.OleDbException">Il gruppo di restrizioni specificate non è valido.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.OleDb.OleDbConnection" /> è chiuso.</exception>
        <exception cref="T:System.ArgumentException">Il rowset dello schema specificato non è supportato dal provider OLE DB.  -o-  Il parametro <paramref name="schema" /> contiene un valore di <see cref="F:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals" /> e il parametro <paramref name="restrictions" /> contiene una o più restrizioni.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce informazioni sullo schema per l'origine dati di questo oggetto <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce informazioni sullo schema per l'origine dati di questo oggetto <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataTable" /> che contiene informazioni sullo schema.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionName">Specifica il nome dello schema da restituire.</param>
        <summary>Restituisce le informazioni di schema per l'origine dati dell'oggetto <see cref="T:System.Data.OleDb.OleDbConnection" /> utilizzando la stringa specificata per il nome dello schema.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataTable" /> che contiene informazioni sullo schema.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando `collectionName` è specificato come null, il <xref:System.Data.DataTable> conterrà informazioni su tutti i metadati che sono disponibili e le relative restrizioni.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="restrictionValues" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="collectionName">Specifica il nome dello schema da restituire.</param>
        <param name="restrictionValues">Specifica un insieme di valori di restrizione per lo schema richiesto.</param>
        <summary>Restituisce le informazioni di schema per l'origine dati dell'oggetto <see cref="T:System.Data.OleDb.OleDbConnection" /> utilizzando la stringa specificata per il nome dello schema e la matrice di stringhe specificata per i valori di restrizione.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataTable" /> che contiene informazioni sullo schema.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando `collectionName` è specificato come null, il <xref:System.Data.DataTable> conterrà informazioni su tutti i metadati che sono disponibili e le relative restrizioni.  
  
 Il `restrictionValues` parametro può fornire *n* profondità dei valori specificati dall'insieme di restrizioni per una raccolta specifica. Per impostare i valori per una determinata restrizione e non impostare i valori di altre restrizioni, è necessario impostare le restrizioni precedenti su null e quindi inserire il valore appropriato per la restrizione che si desidera specificare un valore per.  
  
 Un esempio di questa è la raccolta "Tabelle". Se la raccolta "Tables" presenta tre restrizioni (database, proprietario e nome di tabella) e si desidera vengano restituite solo le tabelle associate al proprietario "Carlo", è necessario passare i valori seguenti (almeno): null, "Carlo". Se un valore di restrizione non viene passato, i valori predefiniti vengono utilizzati per la restrizione. Questo è lo stesso mapping passare null, che è diverso dal passaggio di una stringa vuota per il valore del parametro. In questo caso, la stringa vuota ("") viene considerato come valore per il parametro specificato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As OleDbInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbInfoMessageEventHandler ^ InfoMessage;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Viene generato quando il provider invia un avviso o un messaggio informativo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I client che desidera elaborare avvisi o messaggi informativi inviati dal server è necessario creare un <xref:System.Data.OleDb.OleDbInfoMessageEventHandler> delegato per l'ascolto su questo evento.  
  
 Il <xref:System.Data.OleDb.OleDbConnection.InfoMessage> evento si verifica quando viene restituito un messaggio con livello di gravità basso dall'origine dati. I messaggi a livello di gravità basso sono quelli che non provocano un'eccezione. Per Microsoft SQL Server, inclusi i messaggi di errore con livello di gravità o minore di 10  
  
 Per ulteriori informazioni e un esempio, vedere [gli eventi di connessione](~/docs/framework/data/adonet/connection-events.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Open</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Apre una connessione a un database con le impostazioni delle proprietà specificate dalla proprietà <see cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.OleDb.OleDbConnection> Disegna una connessione aperta dal pool di connessioni, se disponibile. In caso contrario, stabilisce una nuova connessione all'origine dati. È possibile aprire più di un oggetto DataReader su un singolo <xref:System.Data.OleDb.OleDbConnection>. Se si utilizza provider OLE DB non supporta più di un oggetto DataReader attivo in un'unica connessione, il provider OLEDB apre in modo implicito una connessione aggiuntiva per ognuna.  
  
> [!NOTE]
>  Se il <xref:System.Data.OleDb.OleDbConnection> esula dall'ambito preposto, non viene chiuso. Pertanto, è necessario chiudere esplicitamente la connessione, chiamando <xref:System.Data.OleDb.OleDbConnection.Close%2A> o **Dispose**, oppure utilizzando la connessione all'interno di un `Using` istruzione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Connessione già aperta.</exception>
        <exception cref="T:System.Data.OleDb.OleDbException">Errore a livello di connessione durante l'apertura della stessa.</exception>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public string Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Provider { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome del provider OLE DB specificato nella clausola "Provider= " della stringa di connessione.</summary>
        <value>Nome del provider come specificato nella clausola "Provider= " della stringa di connessione. Il valore predefinito è una stringa vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OleDb.OleDbConnection> e vengono visualizzate alcune delle relative proprietà di sola lettura.  
  
 [!code-csharp[Classic WebData OleDbConnection.Provider Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Provider Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.Provider Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Provider Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseObjectPool">
      <MemberSignature Language="C#" Value="public static void ReleaseObjectPool ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReleaseObjectPool() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ReleaseObjectPool" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReleaseObjectPool ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReleaseObjectPool();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica che il pool di oggetti <see cref="T:System.Data.OleDb.OleDbConnection" /> può essere rilasciato quando viene rilasciata l'ultima connessione sottostante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ReleaseObjectPool` può essere chiamato per liberare le risorse che altrimenti sarebbe riservate per in pool <xref:System.Data.OleDb.OleDbConnection> oggetti. Si potrebbe essere necessario chiamare questo metodo, se ad esempio, l'oggetto connessione non viene utilizzato per la quantità di tempo che i servizi OLE DB in genere mantiene le connessioni in pool attiva. Si noti che la chiamata al metodo da solo non rilasciare effettivamente presenti nel pool di connessioni attive.  
  
 Di seguito deve verificarsi prima che il pool viene infine eliminato:  
  
1.  Chiamare <xref:System.Data.OleDb.OleDbConnection.Close%2A> per restituire l'oggetto di connessione al pool.  
  
2.  Consente a ogni oggetto di connessione al timeout del pool.  
  
3.  Chiamare il metodo <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>.  
  
4.  Richiamare l'operazione di garbage collection.  
  
 Viceversa, se si chiama <xref:System.Data.OleDb.OleDbConnection.Close%2A> in tutte le connessioni attive e richiamare l'operazione di garbage collection, ma non viene chiamato <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>, le risorse riservate per gli oggetti in pool rimarrà comunque disponibili.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OleDb.OleDbConnection>, viene aperto, sono riportate alcune delle relative proprietà, la connessione viene chiusa e rilascia il pool di oggetti per risparmiare risorse.  
  
 [!code-csharp[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ReleaseObjectPool Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ReleaseObjectPool Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetState">
      <MemberSignature Language="C#" Value="public void ResetState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ResetState" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aggiorna la proprietà <see cref="P:System.Data.OleDb.OleDbConnection.State" /> dell'oggetto <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alcuni provider OLE DB è possibile controllare lo stato corrente della connessione. Ad esempio, se il server di database è stato riciclato perché è stato aperto il <xref:System.Data.OleDb.OleDbConnection>, <xref:System.Data.OleDb.OleDbConnection.State%2A> proprietà continuerà a restituire `Open`. Se si sta usando un Provider OLE DB che supporta il polling di tali informazioni su una connessione in tempo reale, la chiamata di <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> (metodo) e selezionando il <xref:System.Data.OleDb.OleDbConnection.State%2A> proprietà indicherà che la connessione non è più visualizzata. Il <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> metodo si basa sulle funzionalità del provider OLE DB per verificare lo stato corrente della connessione. Per determinare se il Provider OLE DB supporta questa funzionalità, è possibile controllare la documentazione del provider per informazioni su DBPROP_CONNECTIONSTATUS.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una stringa che contiene la versione del server a cui è connesso il client.</summary>
        <value>Versione del server connesso.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> proprietà esegue il mapping alla proprietà OLE DB DBPROP_DBMSVER. Se <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> non è supportato dal provider OLE DB sottostanti, viene restituita una stringa vuota.  
  
 La versione è nel formato *# #. # #. # # #*, dove le prime due cifre indicano la versione principale, le due cifre successive alla versione secondaria, mentre le ultime quattro cifre sono la versione di rilascio. Il provider deve eseguire il rendering la versione del prodotto in questo modulo, ma può anche aggiungere la versione di prodotto specifico, ad esempio, "04.01.0000 Rdb 4.1". La stringa è nel formato *Major*, dove major e minor rappresentano esattamente due cifre e di compilazione è esattamente quattro cifre.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Data.OleDb.OleDbConnection> e vengono visualizzate alcune delle relative proprietà di sola lettura.  
  
 [!code-csharp[Classic WebData OleDbConnection.ServerVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ServerVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ServerVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ServerVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La connessione è chiusa.</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.State</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene lo stato corrente della connessione.</summary>
        <value>Combinazione bit per bit dei valori di <see cref="T:System.Data.ConnectionState" />. Il valore predefinito è Closed.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Di seguito è consentite le modifiche dello stato:  
  
-   Da `Closed` a `Open`, usando il <xref:System.Data.OleDb.OleDbConnection.Open%2A> metodo il <xref:System.Data.OleDb.OleDbConnection> oggetto.  
  
-   Da `Open` per `Closed`, utilizzando il <xref:System.Data.OleDb.OleDbConnection.Close%2A> metodo o **Dispose** metodo il <xref:System.Data.OleDb.OleDbConnection> oggetto.  
  
> [!NOTE]
>  Nella versione precedente di .NET Framework, la chiamata di <xref:System.Data.OleDb.OleDbConnection.State%2A> proprietà maggiore, il sovraccarico dell'applicazione poiché ogni chiamata ha causato una chiamata alla proprietà OLE DB DBPROP_CONNECTIONSTATUS per una connessione aperta. Con la versione di .NET Framework 2.0, questo non è più un problema.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Nuovo oggetto <see cref="T:System.Object" /> che consiste in una copia dell'istanza corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Data.OleDb.OleDbConnection> a un'interfaccia <xref:System.ICloneable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>