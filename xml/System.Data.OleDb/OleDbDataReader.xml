<Type Name="OleDbDataReader" FullName="System.Data.OleDb.OleDbDataReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="baaeba16d6869c4de8ae3a31cd090d73fd447601" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51307441" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbDataReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbDataReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbDataReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbDataReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbDataReader sealed : System::Data::Common::DbDataReader" />
  <TypeSignature Language="F#" Value="type OleDbDataReader = class&#xA;    inherit DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary>Fornisce un modo per leggere un flusso di righe di dati forward-only da un'origine dati. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per creare un <xref:System.Data.OleDb.OleDbDataReader>, è necessario chiamare il <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> metodo il <xref:System.Data.OleDb.OleDbCommand> oggetto, anziché utilizzare direttamente un costruttore.  
  
 Prima di chiudere il <xref:System.Data.OleDb.OleDbConnection>, prima di tutto chiudere la <xref:System.Data.OleDb.OleDbDataReader> oggetto. È anche necessario chiudere la <xref:System.Data.OleDb.OleDbDataReader> dell'oggetto se si prevede di riutilizzare un <xref:System.Data.OleDb.OleDbCommand> oggetto. Ad esempio, è Impossibile recuperare i parametri di output fino a dopo aver chiamato <xref:System.Data.OleDb.OleDbDataReader.Close%2A>.  
  
 Le modifiche apportate a un set di risultati, un altro processo o thread durante la lettura dei dati possono essere visibili all'utente di <xref:System.Data.OleDb.OleDbDataReader>. Tuttavia, il comportamento preciso dipende dal tempo.  
  
 <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> e <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> sono le uniche proprietà che è possibile chiamare dopo il <xref:System.Data.OleDb.OleDbDataReader> viene chiuso. Anche se il <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> può accedere alla proprietà mentre la <xref:System.Data.OleDb.OleDbDataReader> esiste, chiamare sempre <xref:System.Data.OleDb.OleDbDataReader.Close%2A> prima di restituire il valore di <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> per garantire un valore restituito accurato.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Data.OleDb.OleDbConnection>, un' <xref:System.Data.OleDb.OleDbCommand>e un <xref:System.Data.OleDb.OleDbDataReader>. L'esempio legge i dati, scrive nella console. Infine, l'esempio chiude il <xref:System.Data.OleDb.OleDbDataReader> e quindi il <xref:System.Data.OleDb.OleDbConnection>.  
  
 [!code-csharp[Classic WebData OleDbDataReader Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataReader Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataReader Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="oleDbDataReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Chiude l'oggetto <see cref="T:System.Data.OleDb.OleDbDataReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario chiamare esplicitamente il <xref:System.Data.OleDb.OleDbDataReader.Close%2A> metodo quando si sta utilizzando il <xref:System.Data.OleDb.OleDbDataReader> usare associato <xref:System.Data.OleDb.OleDbConnection> per altri scopi.  
  
> [!CAUTION]
>  Non chiamare **Close** o **Dispose** in una connessione, un oggetto DataReader o qualsiasi altro oggetto gestito nel **Finalize** metodo della classe. In un finalizzatore, è necessario rilasciare solo le risorse non gestite che la classe controlla direttamente. Se la classe non è proprietario delle risorse non gestite, non includere un **Finalize** metodo nella definizione della classe. Per altre informazioni, vedere [Garbage Collection](~/docs/standard/garbage-collection/index.md).  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Data.OleDb.OleDbConnection>, un' <xref:System.Data.OleDb.OleDbCommand>e un <xref:System.Data.OleDb.OleDbDataReader>. L'esempio legge i dati, scrive nella console. Infine, l'esempio chiude il <xref:System.Data.OleDb.OleDbDataReader>e quindi il <xref:System.Data.OleDb.OleDbConnection>.  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.OleDb.OleDbDataReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica la profondità dell'annidamento per la riga corrente.</summary>
        <value>Livello di annidamento della riga corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabella più esterna è di livello zero.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.OleDb.OleDbDataReader.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di colonne nella riga corrente.</summary>
        <value>Quando non è posizionato in un recordset valido, 0; in caso contrario, il numero delle colonne presenti nel record corrente. Il valore predefinito è -1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Include campi nascosti. Utilizzare <xref:System.Data.OleDb.OleDbDataReader.VisibleFieldCount%2A> per escludere campi nascosti.  
  
 Dopo l'esecuzione di una query che non restituisce righe, <xref:System.Data.OleDb.OleDbDataReader.FieldCount%2A> restituisce 0.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Non è presente nessuna connessione a un'origine dati.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~OleDbDataReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!OleDbDataReader ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="oleDbDataReader.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="oleDbDataReader.GetBoolean ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come valore Boolean.</summary>
        <returns>Valore della colonna.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; di conseguenza i dati recuperati devono già essere un valore booleano oppure viene generata un'eccezione.  
  
 Chiamare <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> per cercare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (ordinal As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="oleDbDataReader.GetByte ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come byte.</summary>
        <returns>Valore della colonna specificata sotto forma di byte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; di conseguenza i dati recuperati devono già essere un byte.  
  
 Chiamare <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> per cercare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 ordinal, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (ordinal As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int ordinal, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="oleDbDataReader.GetBytes (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <param name="dataIndex">Indice all'interno del campo da cui avviare l'operazione di lettura.</param>
        <param name="buffer">Buffer in cui leggere il flusso di byte.</param>
        <param name="bufferIndex">Indice all'interno del parametro <c>buffer</c> dal quale iniziare l'operazione di scrittura.</param>
        <param name="length">Lunghezza massima per la copia nel buffer.</param>
        <summary>Legge un flusso di byte dalla colonna specificata nel buffer come una matrice a partire dall'offset del buffer determinato.</summary>
        <returns>Numero effettivo di byte letti.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbDataReader.GetBytes%2A> Restituisce il numero di byte disponibili nel campo. Maggior parte dei casi che si tratta della lunghezza esatta del campo. Tuttavia, il numero restituito può essere inferiore alla lunghezza del campo se `GetBytes` è già stato utilizzato per ottenere i byte dal campo. Potrebbe essere la scelta, ad esempio, quando il <xref:System.Data.OleDb.OleDbDataReader> sta leggendo una struttura di dati di grandi dimensioni in un buffer. Per altre informazioni, vedere la `SequentialAccess` impostazione per <xref:System.Data.CommandBehavior>.  
  
 Se si passa un buffer `null`, <xref:System.Data.OleDb.OleDbDataReader.GetBytes%2A> restituisce la lunghezza del campo espressa in byte.  
  
 Viene eseguita alcuna conversione; di conseguenza, i dati recuperati devono già essere una matrice di byte.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (ordinal As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="oleDbDataReader.GetChar ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di carattere.</summary>
        <returns>Valore della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non supportato per la classe <xref:System.Data.OleDb>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 ordinal, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (ordinal As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int ordinal, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="oleDbDataReader.GetChars (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <param name="dataIndex">Indice all'interno della riga da cui avviare l'operazione di lettura.</param>
        <param name="buffer">Buffer in cui copiare i dati.</param>
        <param name="bufferIndex">Indice all'interno del parametro <c>buffer</c> dal quale iniziare l'operazione di scrittura.</param>
        <param name="length">Numero di caratteri da leggere.</param>
        <summary>Legge un flusso di caratteri dall'offset di colonna specificato nel buffer, come una matrice che inizia in corrispondenza dell'offset del buffer determinato.</summary>
        <returns>Numero effettivo di caratteri letti.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbDataReader.GetChars%2A> Restituisce il numero di caratteri disponibili nel campo. Maggior parte dei casi che si tratta della lunghezza esatta del campo. Tuttavia, il numero restituito può essere inferiore alla lunghezza del campo se `GetChars` è già stato utilizzato per ottenere i caratteri del campo. Potrebbe essere la scelta, ad esempio, quando il <xref:System.Data.OleDb.OleDbDataReader> sta leggendo una struttura di dati di grandi dimensioni in un buffer. Per altre informazioni, vedere la `SequentialAccess` impostazione per <xref:System.Data.CommandBehavior>.  
  
 Se si passa un buffer `null`, <xref:System.Data.OleDb.OleDbDataReader.GetChars%2A> restituisce la lunghezza del campo in caratteri.  
  
 Viene eseguita alcuna conversione; di conseguenza, i dati recuperati devono già essere una matrice di caratteri.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbDataReader GetData (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbDataReader GetData(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (ordinal As Integer) As OleDbDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbDataReader ^ GetData(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetData : int -&gt; System.Data.OleDb.OleDbDataReader" Usage="oleDbDataReader.GetData ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Restituisce un oggetto <see cref="T:System.Data.OleDb.OleDbDataReader" /> per l'ordinale della colonna richiesto.</summary>
        <returns>Oggetto <see cref="T:System.Data.OleDb.OleDbDataReader" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> chiamerà <xref:System.Data.OleDb.OleDbDataReader.GetData%2A> se il provider restituisce un' <xref:System.Data.IDataReader> che include una colonna che supporta <xref:System.Data.IDataReader>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int index);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="oleDbDataReader.GetDataTypeName index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il nome del tipo di dati di origine.</summary>
        <returns>Nome del tipo di dati di back-end. Per altre informazioni, vedere la pagina relativa ai <see href="https://docs.microsoft.com/sql/t-sql/data-types/data-types-transact-sql">tipi di dati di SQL Server</see> o ai <see href="https://docs.microsoft.com/sql/odbc/microsoft/microsoft-access-data-types">tipi di dati di Access</see>.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (ordinal As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="oleDbDataReader.GetDateTime ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come oggetto <see cref="T:System.DateTime" />.</summary>
        <returns>Valore della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; di conseguenza, i dati recuperati devono essere già un <xref:System.DateTime> oggetto.  
  
 Chiamare <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> per cercare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader GetDbDataReader (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader GetDbDataReader(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDbDataReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDbDataReader (ordinal As Integer) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ GetDbDataReader(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDbDataReader : int -&gt; System.Data.Common.DbDataReader" Usage="oleDbDataReader.GetDbDataReader ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (ordinal As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="oleDbDataReader.GetDecimal ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come oggetto <see cref="T:System.Decimal" />.</summary>
        <returns>Valore della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; di conseguenza, i dati recuperati devono essere già un <xref:System.Decimal> oggetto.  
  
 Chiamare <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> per cercare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (ordinal As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="oleDbDataReader.GetDouble ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di numero a virgola mobile e precisione doppia.</summary>
        <returns>Valore della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; di conseguenza, i dati recuperati devono già essere un numero a virgola mobile a precisione doppia.  
  
 Chiamare <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> per cercare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="oleDbDataReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzato per scorrere le righe nel lettore di dati.</summary>
        <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzato per scorrere le righe nel lettore di dati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sebbene sia possibile utilizzare questo metodo per recuperare un enumeratore esplicito, nei linguaggi che supportano un `foreach` costrutto, è più semplice usare il costrutto di ciclo direttamente per scorrere le righe nel lettore di dati.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (index As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int index);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="oleDbDataReader.GetFieldType index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Ordinale di colonna in base zero.</param>
        <summary>Ottiene l'oggetto <see cref="T:System.Type" /> che rappresenta il tipo di dati dell'oggetto.</summary>
        <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di dati dell'oggetto.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (ordinal As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="oleDbDataReader.GetFloat ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di numero in virgola mobile e precisione singola.</summary>
        <returns>Valore della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione. Di conseguenza, i dati recuperati devono già essere un numero a virgola mobile a precisione singola.  
  
 Chiamare <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> per cercare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (ordinal As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="oleDbDataReader.GetGuid ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come identificatore univoco globale (GUID).</summary>
        <returns>Valore della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; di conseguenza i dati recuperati devono già essere un identificatore univoco globale.  
  
 Chiamare <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> per cercare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (ordinal As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="oleDbDataReader.GetInt16 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di intero con segno a 16 bit.</summary>
        <returns>Valore della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; di conseguenza, i dati recuperati devono già essere un intero con segno a 16 bit.  
  
 Chiamare <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> per cercare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (ordinal As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="oleDbDataReader.GetInt32 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come intero con segno a 32 bit.</summary>
        <returns>Valore della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; di conseguenza, i dati recuperati devono già essere un intero con segno a 32 bit.  
  
 Chiamare <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> per cercare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (ordinal As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="oleDbDataReader.GetInt64 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come integer con segno a 64 bit.</summary>
        <returns>Valore della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; di conseguenza, i dati recuperati devono già essere un intero con segno a 64 bit.  
  
 Chiamare <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> per cercare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int index);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="oleDbDataReader.GetName index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il nome della colonna specificata.</summary>
        <returns>Nome della colonna specificata.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="oleDbDataReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome della colonna.</param>
        <summary>Ottiene la posizione ordinale della colonna, dato il nome della colonna.</summary>
        <returns>Ordinale di colonna in base zero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> esegue innanzitutto una ricerca tra maiuscole e minuscole. In caso contrario, viene eseguita una seconda ricerca tra maiuscole e minuscole. Il metodo genera un `IndexOutOfRange` exceptionif l'ordinale in base zero della colonna non viene trovato.  
  
 <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> è senza distinzione larghezza dei caratteri kana.  
  
 Poiché le ricerche basate su valori ordinali sono più efficienti ricerche denominate, non è efficiente chiamare <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> all'interno di un ciclo. Risparmiare tempo chiamando <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> una sola volta e assegnando i risultati a una variabile integer per l'uso all'interno del ciclo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo del metodo <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A>.  
  
 [!code-csharp[Classic WebData OleDbDataReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Il nome specificato non è un nome di colonna valido.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="oleDbDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.Data.DataTable" /> che descrive i metadati della colonna di <see cref="T:System.Data.OleDb.OleDbDataReader" />.</summary>
        <returns>Oggetto <see cref="T:System.Data.DataTable" /> che descrive i metadati della colonna.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A> metodo esegue il mapping a OLE DB **IColumnsRowset::** metodo e restituisce i metadati relativi a ogni colonna nell'ordine seguente:  
  
|Colonna di DataReader|ID della colonna OLE DB|Descrizione|  
|-----------------------|----------------------|-----------------|  
|Nome colonna|DBCOLUMN_NAME|Il nome della colonna; Ciò potrebbe non essere univoco. Se ciò non può essere determinato, viene restituito un valore null. Questo nome riflette sempre la ridenominazione più recente della colonna nel testo del comando o una vista corrente.|  
|ColumnOrdinal|DBCOLUMN_NUMBER|Ordinale in base zero della colonna. Questa colonna non può contenere un valore null.|  
|ColumnSize|DBCOLUMN_COLUMNSIZE|La lunghezza massima possibile di un valore nella colonna. Per le colonne che usano un tipo di dati a lunghezza fissa, questa è la dimensione del tipo di dati.|  
|NumericPrecision|DBCOLUMN_PRECISION|Se DbType è un tipo di dati numerici, questa è la precisione massima della colonna. La precisione delle colonne con tipo di dati di DBTYPE_DECIMAL o DBTYPE_NUMERIC dipende della definizione della colonna. Se DbType non è un tipo di dati numerici, questo è un valore null.|  
|NumericScale|DBCOLUMN_SCALE|Se DbType DBTYPE_DECIMAL o DBTYPE_NUMERIC, questo è il numero di cifre a destra del separatore decimale. In caso contrario, si tratta di un valore null.|  
|Tipo di dati|nessuno|Esegue il mapping al tipo .NET Framework della colonna.|  
|Tipoprovider|DBCOLUMN_TYPE|L'indicatore del tipo di dati della colonna. Se il tipo di dati della colonna varia da una riga per riga, deve essere DBTYPE_VARIANT. Questa colonna non può contenere un valore null.|  
|IsLong|DBCOLUMNFLAGS_ISLONG|Il provider imposta DBCOLUMNFLAGS_ISLONG se la colonna contiene una lunga BLOB (Binary Object) che contiene dati molto lunghi. La definizione dei dati molto lunghi è specifica del provider. L'impostazione di questo flag corrisponde al valore della colonna IS_LONG nel set di righe PROVIDER_TYPES per il tipo di dati.|  
|AllowDBNull|DBCOLUMNFLAGS_ISNULLABLE|Il provider imposta DBCOLUMNFLAGS_ISNULLABLE se l'utente può impostare la colonna con un valore null o se il provider non è possibile determinare se l'utente può impostare la colonna con un valore null. Una colonna può contenere valori null, anche se non può essere impostata su un valore null.|  
|IsReadOnly|DBCOLUMNFLAGS_WRITE|`true` Se la colonna non può essere modificata. in caso contrario `false`. La colonna si presuppone che sia accessibile in scrittura se il provider ha impostato flag DBCOLUMNFLAGS_WRITE o DBCOLUMNFLAGS_WRITEUNKNOWN.|  
|IsRowVersion|DBCOLUMNFLAGS_ISROWID|Il provider imposta DBCOLUMNFLAGS_ISROWID se la colonna contiene un identificatore di riga persistente che non può essere scritte e non ha alcun valore significativo, ad eccezione di identificare la riga.|  
|IsUnique|DBCOLUMN_ISUNIQUE|VARIANT_TRUE: Due righe nella tabella di base la tabella restituita in BaseTableName possono avere lo stesso valore in questa colonna. IsUnique è garantito a essere VARIANT_TRUE se la colonna rappresenta una chiave da sola o se è presente un vincolo di tipo UNIQUE applicato solo a questa colonna.<br /><br /> VARIANT_FALSE: La colonna può contenere valori duplicati nella tabella di base. Il valore predefinito di questa colonna è VARIANT_FALSE.|  
|IsKey|DBCOLUMN_KEYCOLUMN|VARIANT_TRUE: La colonna è parte di un set di colonne nel set di righe che, complessivamente, identificare in modo univoco la riga. Il set di colonne con IsKey impostata su VARIANT_TRUE deve identificare in modo univoco una riga nel set di righe. Non è necessario che questo set di colonne è un set minimo di colonne. Questo set di colonne può essere generato da una chiave primaria della tabella di base, un vincolo unique o un indice univoco.<br /><br /> VARIANT_FALSE: La colonna non è necessario per identificare in modo univoco la riga.|  
|IsAutoIncrement|DBCOLUMN_ISAUTOINCREMENT|VARIANT_TRUE: La colonna assegna valori a nuove righe in base a incrementi fissi.<br /><br /> VARIANT_FALSE: La colonna non assegna valori a nuove righe in base a incrementi fissi. Il valore predefinito di questa colonna è VARIANT_FALSE.|  
|BaseSchemaName|DBCOLUMN_BASESCHEMANAME|Il nome dello schema nell'archivio dati che contiene la colonna. Un valore null se non è possibile determinare il nome dello schema di base. Il valore predefinito di questa colonna è un valore null.|  
|BaseCatalogName|DBCOLUMN_BASECATALOGNAME|Il nome del catalogo nell'archivio dati che contiene la colonna. Un valore null se non è possibile determinare il nome del catalogo di base. Il valore predefinito di questa colonna è un valore null.|  
|BaseTableName|DBCOLUMN_BASETABLENAME|Il nome della tabella o vista nell'archivio dati che contiene la colonna. Un valore null se non è possibile determinare il nome della tabella di base. Il valore predefinito di questa colonna è un valore null.|  
|BaseColumnName|DBCOLUMN_BASECOLUMNNAME|Nome della colonna nell'archivio dati. Potrebbe essere diverso dal nome della colonna restituito nella colonna ColumnName se è stato utilizzato un alias. Un valore null se non è possibile determinare il nome di colonna di base o se la colonna del set di righe è derivata da, ma non identica a, una colonna nei dati di archivio. Il valore predefinito di questa colonna è un valore null.|  
  
> [!NOTE]
>  Per assicurarsi che le colonne di metadati restituiscano l'informazione corretta, è necessario chiamare <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> con il `behavior` parametro impostato su `KeyInfo`. In caso contrario, alcune colonne nella tabella dello schema può restituire dati predefiniti, null o non corretto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.OleDb.OleDbDataReader" /> è chiuso.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="oleDbDataReader.GetString ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata sotto forma di stringa.</summary>
        <returns>Valore della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; di conseguenza i dati recuperati devono già essere una stringa.  
  
 Chiamare <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> per cercare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetTimeSpan">
      <MemberSignature Language="C#" Value="public TimeSpan GetTimeSpan (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetTimeSpan(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetTimeSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTimeSpan (ordinal As Integer) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetTimeSpan(int ordinal);" />
      <MemberSignature Language="F#" Value="member this.GetTimeSpan : int -&gt; TimeSpan" Usage="oleDbDataReader.GetTimeSpan ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna specificata come oggetto <see cref="T:System.TimeSpan" />.</summary>
        <returns>Valore della colonna specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene eseguita alcuna conversione; di conseguenza, i dati recuperati devono essere già un <xref:System.TimeSpan> oggetto.  
  
 Chiamare <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> per cercare i valori null prima di chiamare questo metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il cast specificato non è valido.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="oleDbDataReader.GetValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene il valore della colonna in corrispondenza dell'ordinale specificato nel formato nativo.</summary>
        <returns>Valore da restituire.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo restituisce <xref:System.DBNull> per colonne di database con valori null.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="oleDbDataReader.GetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">Matrice di <see cref="T:System.Object" /> in cui copiare le colonne attributo.</param>
        <summary>Popola una matrice di oggetti con i valori della colonna della riga corrente.</summary>
        <returns>Numero di istanze di <see cref="T:System.Object" /> nella matrice.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per la maggior parte delle applicazioni, il <xref:System.Data.OleDb.OleDbDataReader.GetValues%2A> metodo fornisce un mezzo efficace per il recupero di tutte le colonne, anziché recuperare individualmente ogni colonna.  
  
 È possibile passare un <xref:System.Object> matrice che contiene un valore più basso rispetto al numero di colonne contenute nella riga risultante. Solo la quantità di dati di <xref:System.Object> contenuti nella matrice viene copiata nella matrice. È anche possibile passare un <xref:System.Object> matrice la cui lunghezza è maggiore del numero di colonne contenute nella riga risultante.  
  
 Il metodo restituisce <xref:System.DBNull> per colonne di database con valori null.  
  
   
  
## Examples  
 [!code-csharp[OleDbDataReader_GetValues#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/oledbdatareader_getvalues/cs/source.cs#1)]
 [!code-vb[OleDbDataReader_GetValues#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/oledbdatareader_getvalues/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.OleDb.OleDbDataReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la classe <see cref="T:System.Data.OleDb.OleDbDataReader" /> contiene una o più righe.</summary>
        <value>
          <see langword="true" /> se la classe <see cref="T:System.Data.OleDb.OleDbDataReader" /> contiene una o più righe. In caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.OleDb.OleDbDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica se il visualizzatore di dati è chiuso.</summary>
        <value>
          <see langword="true" /> se la classe <see cref="T:System.Data.OleDb.OleDbDataReader" /> è chiusa. In caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> e <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> sono le uniche proprietà che è possibile chiamare dopo il <xref:System.Data.OleDb.OleDbDataReader> viene chiuso.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="oleDbDataReader.IsDBNull ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Ordinale di colonna in base zero.</param>
        <summary>Ottiene un valore che indica se la colonna contiene valori non esistenti o mancanti.</summary>
        <returns>
          <see langword="true" /> se il valore della colonna specificata equivale a <see cref="T:System.DBNull" />, in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare questo metodo per cercare i valori null della colonna prima di chiamare l'oggetto tipizzato i metodi get (ad esempio, <xref:System.Data.OleDb.OleDbDataReader.GetByte%2A>, <xref:System.Data.OleDb.OleDbDataReader.GetChar%2A>e così via) per evitare che venga generato un errore.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene il valore di una colonna nel formato nativo.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.OleDb.OleDbDataReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Ordinale di colonna.</param>
        <summary>Ottiene il valore della colonna specificata nel formato nativo, data la posizione ordinale della colonna.</summary>
        <value>Valore della colonna specificata nel formato nativo.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">L'indice passato non era compreso nell'intervallo da 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.OleDb.OleDbDataReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome della colonna.</param>
        <summary>Ottiene il valore della colonna specificata nel formato nativo, dato il nome della colonna.</summary>
        <value>Valore della colonna specificata nel formato nativo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prima di tutto viene eseguita una ricerca tra maiuscole e minuscole. In caso contrario, viene eseguita una seconda ricerca tra maiuscole e minuscole.  
  
 Questo metodo è distinzione dei caratteri kana-larghezza.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Non è stata trovata alcuna colonna con il nome specificato.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="oleDbDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sposta il lettore dati al risultato successivo durante la lettura dei risultati di un batch di istruzioni SQL.</summary>
        <returns>
          <see langword="true" /> se sono presenti più gruppi di risultati; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzato per elaborare i risultati più che possono essere generati tramite l'esecuzione di istruzioni batch SQL.  
  
 Per impostazione predefinita, il lettore dati viene posizionato sul primo risultato.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="oleDbDataReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sposta l'oggetto <see cref="T:System.Data.OleDb.OleDbDataReader" /> al record successivo.</summary>
        <returns>
          <see langword="true" /> se sono presenti altre righe; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Posizione predefinita del <xref:System.Data.OleDb.OleDbDataReader> precede il primo record. Pertanto, è necessario chiamare <xref:System.Data.OleDb.OleDbDataReader.Read%2A> per avviare l'accesso ai dati.  
  
 Mentre il <xref:System.Data.OleDb.OleDbDataReader> viene usato, associato <xref:System.Data.OleDb.OleDbConnection> è occupato finché non verrà chiamata <xref:System.Data.OleDb.OleDbDataReader.Close%2A>.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Data.OleDb.OleDbConnection>, un' <xref:System.Data.OleDb.OleDbCommand>e un <xref:System.Data.OleDb.OleDbDataReader>. L'esempio legge i dati, scrive nella console. Infine, l'esempio chiude il <xref:System.Data.OleDb.OleDbDataReader> e quindi il <xref:System.Data.OleDb.OleDbConnection>.  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.OleDb.OleDbDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di righe modificate, inserite o eliminate dall'esecuzione dell'istruzione SQL.</summary>
        <value>Il numero di righe modificate, inserite o eliminate; 0 se nessuna riga è interessata o se l'istruzione non riesce; -1 per istruzioni SELECT.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> non è impostata fino a quando non vengono lette tutte le righe e si chiude il <xref:System.Data.OleDb.OleDbDataReader>.  
  
 Il valore di questa proprietà è cumulativo. Ad esempio, se i due record vengono inseriti in modalità batch, il valore di <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> è due.  
  
 <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> e <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> sono le uniche proprietà che è possibile chiamare dopo il <xref:System.Data.OleDb.OleDbDataReader> viene chiuso.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataRecord.GetData">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDataRecord.GetData (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDataRecord.GetData(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.System#Data#IDataRecord#GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetData (ordinal As Integer) As IDataReader Implements IDataRecord.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDataRecord.GetData(int ordinal) = System::Data::IDataRecord::GetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetData(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleFieldCount">
      <MemberSignature Language="C#" Value="public override int VisibleFieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleFieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.VisibleFieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property VisibleFieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int VisibleFieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleFieldCount : int" Usage="System.Data.OleDb.OleDbDataReader.VisibleFieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di campi non nascosti in <see cref="T:System.Data.OleDb.OleDbDataReader" />.</summary>
        <value>Numero di campi non nascosti.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo valore viene utilizzato per determinare il numero di campi visibili nell'oggetto <xref:System.Data.OleDb.OleDbDataReader>. Un valore SELECT in una chiave primaria parziale, ad esempio, restituisce le parti restanti della chiave come campi nascosti. I campi nascosti vengono sempre aggiunti dietro i campi visibili.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapter e DataReader</related>
      </Docs>
    </Member>
  </Members>
</Type>