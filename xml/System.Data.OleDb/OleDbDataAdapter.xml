<Type Name="OleDbDataAdapter" FullName="System.Data.OleDb.OleDbDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b13717e0f7ca461aaffba35ac262a83005b59bb3" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39833560" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbDataAdapter : System.Data.Common.DbDataAdapter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbDataAdapter extends System.Data.Common.DbDataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbDataAdapter&#xA;Inherits DbDataAdapter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbDataAdapter sealed : System::Data::Common::DbDataAdapter, ICloneable" />
  <TypeSignature Language="F#" Value="type OleDbDataAdapter = class&#xA;    inherit DbDataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.ComponentModel.DefaultEvent("RowUpdated")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un set di comandi di dati e una connessione a un database utilizzati per riempire l'oggetto <see cref="T:System.Data.DataSet" /> e aggiornare l'origine dati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Data.OleDb.OleDbDataAdapter> funge da ponte tra un' <xref:System.Data.DataSet> e origine dati per il recupero e salvataggio dei dati. Il <xref:System.Data.OleDb.OleDbDataAdapter> fornisce questo bridge usando <xref:System.Data.Common.DbDataAdapter.Fill%2A> per caricare dati dall'origine dati nel <xref:System.Data.DataSet>e l'uso <xref:System.Data.Common.DbDataAdapter.Update%2A> per inviare le modifiche apportate nel <xref:System.Data.DataSet> nuovamente all'origine dati.  
  
 Quando la <xref:System.Data.OleDb.OleDbDataAdapter> riempie un <xref:System.Data.DataSet>, verrà creata la tabelle e colonne appropriate per i dati restituiti se non esistono già. Tuttavia, le informazioni sulla chiave primarie non è incluso nello schema creato in modo implicito, a meno che il <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> è impostata su <xref:System.Data.MissingSchemaAction.AddWithKey>. Potrebbe anche essere necessario il <xref:System.Data.OleDb.OleDbDataAdapter> creare lo schema del <xref:System.Data.DataSet>, incluse le informazioni sulla chiave primarie, prima di inserire i dati usando <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>. Per altre informazioni, vedere [aggiunta di vincoli esistenti a un set di dati](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).  
  
 Si noti che non restituiscono alcuni provider OLE DB, tra cui il provider MSDataShape, informazioni sulla chiave primarie o tabella di base. Pertanto, il <xref:System.Data.OleDb.OleDbDataAdapter> non è impostato correttamente le <xref:System.Data.DataTable.PrimaryKey%2A> proprietà di uno creato <xref:System.Data.DataTable>. In questi casi è necessario specificare in modo esplicito le chiavi primarie per le tabelle nel <xref:System.Data.DataSet>.  
  
 Il <xref:System.Data.OleDb.OleDbDataAdapter> include anche il <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, e <xref:System.Data.Common.DataAdapter.TableMappings%2A> proprietà per facilitare il caricamento e l'aggiornamento dei dati.  
  
 Quando si crea un'istanza di <xref:System.Data.OleDb.OleDbDataAdapter>, proprietà vengono impostate sui valori iniziali. Per un elenco di questi valori, vedere il <xref:System.Data.OleDb.OleDbDataAdapter> costruttore.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbDataAdapter> e <xref:System.Data.OleDb.OleDbConnection>per selezionare record da un'origine dati Access e popolare un <xref:System.Data.DataSet> con le righe selezionate. Compilato <xref:System.Data.DataSet> viene quindi restituito. A tale scopo, il metodo viene passato un oggetto inizializzato <xref:System.Data.DataSet>, una stringa di connessione e una stringa di query che rappresenta un'istruzione SQL SELECT.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si crea un'istanza di <xref:System.Data.OleDb.OleDbDataAdapter>, le proprietà di lettura/scrittura seguenti impostate sui valori iniziali di seguito.  
  
|Proprietà|Valore iniziale|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 È possibile modificare il valore di una di queste proprietà tramite una chiamata distinta per la proprietà.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Data.OleDb.OleDbDataAdapter> e vengono impostate alcune delle relative proprietà.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (System.Data.OleDb.OleDbCommand selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OleDb.OleDbCommand selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommand As OleDbCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::Data::OleDb::OleDbCommand ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbDataAdapter : System.Data.OleDb.OleDbCommand -&gt; System.Data.OleDb.OleDbDataAdapter" Usage="new System.Data.OleDb.OleDbDataAdapter selectCommand" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommand" Type="System.Data.OleDb.OleDbCommand" />
      </Parameters>
      <Docs>
        <param name="selectCommand">Oggetto <see cref="T:System.Data.OleDb.OleDbCommand" /> che è un'istruzione SELECT o una stored procedure, impostato come la proprietà <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> dell'oggetto <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> .</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> con l'oggetto <see cref="T:System.Data.OleDb.OleDbCommand" /> specificato come la proprietà <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa implementazione del <xref:System.Data.OleDb.OleDbDataAdapter> costruttore imposta la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> sul valore specificato nel `selectCommand` parametro.  
  
 Quando si crea un'istanza di <xref:System.Data.OleDb.OleDbDataAdapter>, le proprietà di lettura/scrittura seguenti impostate sui valori iniziali di seguito.  
  
|Proprietà|Valore iniziale|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 È possibile modificare il valore di una di queste proprietà tramite una chiamata distinta per la proprietà.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Data.OleDb.OleDbDataAdapter> e vengono impostate alcune delle relative proprietà.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (string selectCommandText, System.Data.OleDb.OleDbConnection selectConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, class System.Data.OleDb.OleDbConnection selectConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnection As OleDbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::String ^ selectCommandText, System::Data::OleDb::OleDbConnection ^ selectConnection);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbDataAdapter : string * System.Data.OleDb.OleDbConnection -&gt; System.Data.OleDb.OleDbDataAdapter" Usage="new System.Data.OleDb.OleDbDataAdapter (selectCommandText, selectConnection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">Stringa che è un'istruzione SQL SELECT o una stored procedure, utilizzata dalla proprietà <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> della classe <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</param>
        <param name="selectConnection">Classe <see cref="T:System.Data.OleDb.OleDbConnection" /> che rappresenta la connessione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> con una proprietà <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa implementazione del <xref:System.Data.OleDb.OleDbDataAdapter> apre e chiude un <xref:System.Data.OleDb.OleDbConnection> se non è già aperto. Ciò può essere utile in un'applicazione che deve chiamare il <xref:System.Data.Common.DbDataAdapter.Fill%2A> metodo per due o più <xref:System.Data.OleDb.OleDbDataAdapter> oggetti. Se il <xref:System.Data.OleDb.OleDbConnection> è già aperto, è necessario chiamare esplicitamente <xref:System.Data.OleDb.OleDbConnection.Close%2A> oppure **Dispose** per chiuderla.  
  
 Quando si crea un'istanza di <xref:System.Data.OleDb.OleDbDataAdapter>, le proprietà di lettura/scrittura seguenti impostate sui valori iniziali di seguito.  
  
|Proprietà|Valore iniziale|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 È possibile modificare il valore di una di queste proprietà tramite una chiamata distinta per la proprietà.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Data.OleDb.OleDbDataAdapter> e vengono impostate alcune delle relative proprietà.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (string selectCommandText, string selectConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, string selectConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::String ^ selectCommandText, System::String ^ selectConnectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbDataAdapter : string * string -&gt; System.Data.OleDb.OleDbDataAdapter" Usage="new System.Data.OleDb.OleDbDataAdapter (selectCommandText, selectConnectionString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">Stringa che è un'istruzione SQL SELECT o una stored procedure, utilizzata dalla proprietà <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> della classe <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</param>
        <param name="selectConnectionString">Stringa di connessione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> con una proprietà <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo overload del metodo il <xref:System.Data.OleDb.OleDbDataAdapter> costruttore Usa il `selectConnectionString` parametro per impostare il <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> proprietà. Tuttavia, non si apra la connessione. È comunque necessario aprire in modo esplicito la connessione.  
  
 Quando si crea un'istanza di <xref:System.Data.OleDb.OleDbDataAdapter>, le proprietà di lettura/scrittura seguenti impostate sui valori iniziali di seguito.  
  
|Proprietà|Valore iniziale|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 È possibile modificare il valore di una di queste proprietà tramite una chiamata distinta per la proprietà.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Data.OleDb.OleDbDataAdapter> e vengono impostate alcune delle relative proprietà.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="oleDbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="oleDbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ DeleteCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_DeleteCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un'istruzione SQL o una stored procedure per eliminare i record dal DataSet.</summary>
        <value>Oggetto <see cref="T:System.Data.OleDb.OleDbCommand" /> utilizzato durante l'applicazione del metodo <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> per eliminare i record nell'origine dati che corrispondono alle righe eliminate nell'oggetto <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante <xref:System.Data.Common.DbDataAdapter.Update%2A>, se questa proprietà non è impostata e informazioni sulla chiave primarie è presente nel <xref:System.Data.DataSet>, il <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> può essere generato automaticamente se si imposta la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> proprietà e utilizzare il <xref:System.Data.OleDb.OleDbCommandBuilder>. Quindi, generati da eventuali altri comandi che non si imposta la <xref:System.Data.OleDb.OleDbCommandBuilder>. Questa logica per la generazione richiede informazioni della colonna chiave siano presenti nel <xref:System.Data.DataSet>. Per altre informazioni, vedere [generazione di comandi tramite commandbuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Quando <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> viene assegnato a un oggetto creato in precedenza <xref:System.Data.OleDb.OleDbCommand>, il <xref:System.Data.OleDb.OleDbCommand> non viene clonato. Il <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> mantiene un riferimento all'oggetto creato in precedenza <xref:System.Data.OleDb.OleDbCommand> oggetto.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Data.OleDb.OleDbDataAdapter> e imposta la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> e <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> proprietà. Si presuppone che abbia già creato un <xref:System.Data.OleDb.OleDbConnection> oggetto.  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oleDbDataAdapter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiunge o aggiorna righe nell'oggetto <see cref="T:System.Data.DataSet" /> affinché corrispondano a quelle presenti in un oggetto ADO <see langword="Recordset" /> o <see langword="Record" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable, object ADODBRecordSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable, object ADODBRecordSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable, System::Object ^ ADODBRecordSet);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * obj -&gt; int" Usage="oleDbDataAdapter.Fill (dataTable, ADODBRecordSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="ADODBRecordSet" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTable">Classe <see cref="T:System.Data.DataTable" /> in cui inserire i record e, se necessario, lo schema.</param>
        <param name="ADODBRecordSet">Oggetto ADO <see langword="Recordset" /> o oggetto <see langword="Record" />.</param>
        <summary>Aggiunge o aggiorna righe in un oggetto <see cref="T:System.Data.DataTable" /> affinché corrispondano a quelle in un oggetto ADO <see langword="Recordset" /> o <see langword="Record" /> mediante l'oggetto <see cref="T:System.Data.DataTable" /> e gli oggetti ADO specificati.</summary>
        <returns>Numero di righe aggiornate con esito positivo all'oggetto <see cref="T:System.Data.DataTable" />. Non sono incluse righe modificate da istruzioni che non restituiscono righe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il collegamento tra oggetti ADO (ActiveX Data) e ADO.NET è un'operazione unidirezionale in cui è possibile copiare dati da ADO ad il <xref:System.Data.DataSet>, ma tutti gli aggiornamenti ai dati devono essere gestiti da ADO.NET.  
  
 Questo overload del metodo il <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> metodo non viene chiusa l'input `Recordset` al completamento dei <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operazione.  
  
 Durante la gestione di batch di istruzioni SQL che restituiscono più risultati, questa implementazione di <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> e <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> per il Provider di dati OLE DB.NET Framework consente di recuperare informazioni sullo schema per solo il primo risultato.  
  
 Il <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operazione consente di aggiungere le righe nella destinazione specificata <xref:System.Data.DataTable> dell'oggetto nel <xref:System.Data.DataSet>, creando il <xref:System.Data.DataTable> dell'oggetto se non già esiste. Quando si crea una <xref:System.Data.DataTable> oggetti, il <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operazione crea in genere solo i metadati dei nomi di colonna. Tuttavia, se il <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> è impostata su `AddWithKey`, chiavi primarie appropriate e i vincoli vengono creati anche.  
  
 È possibile usare la <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> metodo più volte sullo stesso <xref:System.Data.DataTable>. Se esiste una chiave primaria, le righe in ingresso vengono unite con le righe corrispondenti che esistano già. Se non esiste alcuna chiave primaria, le righe in ingresso vengono accodate al <xref:System.Data.DataTable>. Se le informazioni sulla chiave primarie è presente, tutte le righe duplicate sono risolte e vengono visualizzati solo una volta nel <xref:System.Data.DataTable> che corrisponde alla <xref:System.Data.DataSet>. Informazioni sulla chiave primarie può essere impostate tramite <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, specificando il <xref:System.Data.DataTable.PrimaryKey%2A> proprietà del <xref:System.Data.DataTable>, oppure impostando il <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> proprietà `AddWithKey`.  
  
 Se <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> restituisce i risultati di un OUTER JOIN, mediante `DataAdapter` non viene impostato un valore di <xref:System.Data.DataTable.PrimaryKey%2A> per l'oggetto <xref:System.Data.DataTable> risultante. È necessario definire in modo esplicito la chiave primaria per assicurarsi che le righe duplicate vengano risolte correttamente. Per altre informazioni, vedere [definizione di chiavi primarie](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).  
  
 Per funzionare correttamente con il Provider di dati .NET Framework per OLE DB, `AddWithKey` richiede che il provider OLE DB nativo ottenga le necessarie informazioni chiave primaria impostando la proprietà DBPROP_UNIQUEROWS e determina quindi quali colonne sono chiave primaria colonne esaminando la proprietà DBCOLUMN_KEYCOLUMN nel `IColumnsRowset`. In alternativa l'utente può impostare in modo esplicito i vincoli di chiave primari in ogni <xref:System.Data.DataTable>. Ciò assicura che i record in ingresso che corrispondono ai record esistenti siano aggiornati anziché aggiunti.  
  
 Se il <xref:System.Data.OleDb.OleDbDataAdapter> rileva colonne duplicate durante la compilazione di un <xref:System.Data.DataTable>, genera nomi per le colonne successive, usando il modello "*nomecolonna*1", "*columnname*2", "*columnname*3" e così via. Vengono aggiunti i nomi di colonna vuota il <xref:System.Data.DataTable>, usando una stringa vuota per la prima colonna, seguito da "1", "2", "3" e così via per le colonne successive vuote.  
  
 I valori in ADO `Recordset` oppure `Record` gli oggetti sono convertito da common language runtime i tipi per l'archiviazione nel <xref:System.Data.DataSet>.  
  
> [!CAUTION]
>  Questo overload del metodo di <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> metodo non chiama in modo implicito `Close` sull'oggetto ADO, una volta completata l'operazione di riempimento. Pertanto, chiamare sempre `Close` dopo aver terminato l'utilizzo di ADO `Recordset` o `Record` oggetti. Ciò assicura che la connessione a un'origine dati sottostante venga rilasciata in modo tempestivo e impedisce inoltre a possibili violazioni di accesso a causa di oggetti ADO non gestiti viene recuperati da garbage collection quando esistono ancora riferimenti.  
  
 Quando si chiama il `TableMappings.Add` metodo su un `DataAdapter` ed è eseguire il mapping in modo esplicito il parametro di tabella di origine su una stringa vuota, il set di dati viene compilato correttamente utilizzando la tabella di origine, ma il set di dati verrà visualizzato nulla. Ad esempio, nell'esempio seguente, `rDataSet` verrà popolato con dati.  
  
```  
rAdapter.TableMappings.Add("source table", "");  
rAdapter.Fill(rDataSet, "source table");     
```  
  
 Questo esempio viene illustrato come è possibile ignorare un risultato quando si lavora con più risultati.  
  
 L'esempio seguente usa un' <xref:System.Data.OleDb.OleDbDataAdapter> per riempire un <xref:System.Data.DataTable> usando un oggetto ADO `Recordset`. Questo esempio si presuppone che sia stato creato un oggetto ADO `Recordset`.  
  
```vb  
Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()  
     Dim custDS As DataSet = New DataSet  
     Dim custTable As DataTable = New DataTable("Customers")  
     custTable.Columns.Add("CustomerID", Type.GetType("System.String"))  
     custTable.Columns.Add("CompanyName", Type.GetType("System.String"))  
     custDS.Tables.Add(custTable)  
     'Use ADO objects from ADO library (msado15.dll) imported  
     ' as.NET library ADODB.dll using TlbImp.exe  
     Dim adoConn As ADODB.Connection = New ADODB.Connection()  
     Dim adoRS As ADODB.Recordset = New ADODB.Recordset()  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)  
     adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)  
     custDA.Fill(custTable, adoRS)  
     adoRS.Close()  
     adoConn.Close()  
```  
  
```csharp  
OleDbDataAdapter custDA = new OleDbDataAdapter();  
     DataSet custDS = new DataSet();  
     DataTable custTable = new DataTable("Customers");  
     custTable.Columns.Add("CustomerID", typeof(String));  
     custTable.Columns.Add("CompanyName", typeof(String));  
     custDS.Tables.Add(custTable);  
     //Use ADO objects from ADO library (msado15.dll) imported  
     //  as.NET library ADODB.dll using TlbImp.exe  
     ADODB.Connection adoConn = new ADODB.Connection();  
     ADODB.Recordset adoRS = new ADODB.Recordset();  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);  
     adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);  
     custDA.Fill(custTable, adoRS);  
     adoRS.Close();  
     adoConn.Close();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::Object ^ ADODBRecordSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * obj * string -&gt; int" Usage="oleDbDataAdapter.Fill (dataSet, ADODBRecordSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="ADODBRecordSet" Type="System.Object" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">Classe <see cref="T:System.Data.DataSet" /> in cui inserire i record e, se necessario, lo schema.</param>
        <param name="ADODBRecordSet">Oggetto ADO <see langword="Recordset" /> o oggetto <see langword="Record" />.</param>
        <param name="srcTable">Tabella di origine utilizzata per mapping di tabella.</param>
        <summary>Aggiunge o aggiorna righe nell'oggetto <see cref="T:System.Data.DataSet" /> affinché corrispondano a quelle in un oggetto ADO <see langword="Recordset" /> o <see langword="Record" /> mediante l'oggetto <see cref="T:System.Data.DataSet" />, l'oggetto ADO e il nome della tabella di origine.</summary>
        <returns>Numero di righe aggiunte o aggiornate correttamente nell'oggetto <see cref="T:System.Data.DataSet" />. Non sono incluse righe modificate da istruzioni che non restituiscono righe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il collegamento tra oggetti ADO (ActiveX Data) e ADO.NET è un'operazione unidirezionale in cui è possibile copiare dati da ADO ad il <xref:System.Data.DataSet>, ma tutti gli aggiornamenti ai dati devono essere gestiti da ADO.NET.  
  
 Il <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> metodo esegue l'iterazione attraverso più risultati, chiamare il `NextRecordset` metodo sul `Recordset`, la chiusura dell'input `Recordset` al completamento dei <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operazione.  
  
 Il <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operazione consente di aggiungere le righe nella destinazione specificata <xref:System.Data.DataTable> dell'oggetto nel <xref:System.Data.DataSet>, creando il <xref:System.Data.DataTable> dell'oggetto se non già esiste. Quando si crea una <xref:System.Data.DataTable> oggetti, il <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operazione crea in genere solo i metadati dei nomi di colonna. Tuttavia, se il <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> è impostata su `AddWithKey`, chiavi primarie appropriate e i vincoli vengono creati anche.  
  
 Se le informazioni sulla chiave primarie è presente, tutte le righe duplicate sono risolte e vengono visualizzati solo una volta nel <xref:System.Data.DataTable> che corrisponde alla <xref:System.Data.DataSet>. Informazioni sulla chiave primarie può essere impostate tramite <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, specificando il <xref:System.Data.DataTable.PrimaryKey%2A> proprietà del <xref:System.Data.DataTable>, oppure impostando il <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> proprietà `AddWithKey`.  
  
 Per funzionare correttamente con il Provider di dati .NET Framework per OLE DB, `AddWithKey` richiede il provider OLE DB nativo ottenere informazioni sulla chiave primarie obbligatori impostando la proprietà DBPROP_UNIQUEROWS e quindi determinare quali colonne chiave primaria colonne esaminando la proprietà DBCOLUMN_KEYCOLUMN nel **IColumnsRowset**. In alternativa l'utente può impostare in modo esplicito i vincoli di chiave primari in ogni <xref:System.Data.DataTable>. In questo modo si assicura che i record in arrivo corrispondenti ai record esistenti siano aggiornati anziché aggiunti.  
  
 Se <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> restituisce i risultati di un OUTER JOIN, mediante `DataAdapter` non viene impostato un valore di <xref:System.Data.DataTable.PrimaryKey%2A> per l'oggetto <xref:System.Data.DataTable> risultante. È necessario definire in modo esplicito la chiave primaria per assicurarsi che le righe duplicate vengano risolte correttamente. Per altre informazioni, vedere [definizione di chiavi primarie](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).  
  
 Se il `Recordset` viene chiuso prima di avviare il <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> operazione, non verranno generati errori. È necessario per la gestione di più risultati, in quanto sono indicate le query che non restituiscono righe da un oggetto chiuso `Recordset`. Il <xref:System.Data.OleDb.OleDbDataAdapter> chiama semplicemente `NextRecordset` sull'oggetto chiuso `Recordset` e continua l'elaborazione.  
  
 Se viene rilevato un errore durante la compilazione di set di dati, le righe aggiunte prima occorrenza dell'errore restano nel <xref:System.Data.DataSet>. Il resto dell'operazione viene interrotta.  
  
 Se il <xref:System.Data.Common.DbDataAdapter> oggetto rileva le colonne duplicate durante il popolamento di una <xref:System.Data.DataTable>, genera nomi per le colonne successive, usando il modello "*columnname*1","*columnname*2", " *columnname*3" e così via. Se i dati in ingresso contengano colonne senza nome, vengono posizionati nel <xref:System.Data.DataSet> secondo il criterio "Column1", "Column2" e così via. Quando vengono aggiunti più set di risultati per il <xref:System.Data.DataSet> ogni set di risultati viene inserito in una tabella separata. Set di risultati aggiuntivi viene creato aggiungendo i valori integrali al nome della tabella specificato (ad esempio, "Table", "Table1", "Table2" e così via.). Le applicazioni che usano nomi di colonna e tabella devono assicurarsi che non si verifichino conflitti con questi modelli di denominazione.  
  
 I valori in ADO `Recordset` oppure `Record` gli oggetti sono convertito da common language runtime i tipi per l'archiviazione nel <xref:System.Data.DataSet>.  
  
> [!NOTE]
>  Questo overload del metodo di <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> metodo chiama in modo implicito `Close` sull'oggetto ADO, una volta completata l'operazione di riempimento.  
  
 L'esempio seguente usa un' <xref:System.Data.OleDb.OleDbDataAdapter> per riempire un <xref:System.Data.DataSet> usando un oggetto ADO `Recordset` che rappresenta un oggetto ADO `Record` oggetto. Questo esempio si presuppone che sia stato creato un oggetto ADO `RecordSet` e `Record` oggetto.  
  
```vb  
Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()  
     Dim custDS As DataSet = New DataSet  
     'Use ADO objects from ADO library (msado15.dll) imported  
     ' as.NET library ADODB.dll using TlbImp.exe  
     Dim adoConn As ADODB.Connection = New ADODB.Connection()  
     Dim adoRS As ADODB.Recordset = New ADODB.Recordset()  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)  
     adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)  
     custDA.Fill(custDS, adoRS, "Customers")  
     adoConn.Close()  
```  
  
```csharp  
OleDbDataAdapter custDA = new OleDbDataAdapter();  
     DataSet custDS = new DataSet();  
     //Use ADO objects from ADO library (msado15.dll) imported  
     // as.NET library ADODB.dll using TlbImp.exe  
     ADODB.Connection adoConn = new ADODB.Connection();  
     ADODB.Recordset adoRS = new ADODB.Recordset();  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);  
     adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);  
     custDA.Fill(custDS, adoRS, "Customers");  
     adoConn.Close();  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">Tabella di origine non valida.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ InsertCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_InsertCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un'istruzione SQL o una stored procedure usata per inserire nuovi record nell'origine dati.</summary>
        <value>Oggetto <see cref="T:System.Data.OleDb.OleDbCommand" /> utilizzato durante l'applicazione del metodo <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> per inserire record nell'origine dati che corrispondono alle nuove righe nell'oggetto <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante <xref:System.Data.Common.DbDataAdapter.Update%2A>, se questa proprietà non è impostata e informazioni sulla chiave primarie è presente nel <xref:System.Data.DataSet>, il <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> può essere generato automaticamente se si imposta la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> proprietà e utilizzare il <xref:System.Data.OleDb.OleDbCommandBuilder>. Quindi, generati da eventuali altri comandi che non si imposta la <xref:System.Data.OleDb.OleDbCommandBuilder>. Questa logica per la generazione richiede informazioni della colonna chiave siano presenti nel <xref:System.Data.DataSet>. Per altre informazioni, vedere [generazione di comandi tramite commandbuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Quando <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> viene assegnato a un oggetto creato in precedenza <xref:System.Data.OleDb.OleDbCommand>, il <xref:System.Data.OleDb.OleDbCommand> non viene clonato. Il <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> mantiene un riferimento all'oggetto creato in precedenza <xref:System.Data.OleDb.OleDbCommand> oggetto.  
  
> [!NOTE]
>  Se l'esecuzione di questo comando restituisce le righe, le righe possono essere aggiunte al <xref:System.Data.DataSet> a seconda della modalità di impostazione la <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> proprietà del <xref:System.Data.OleDb.OleDbCommand> oggetto.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Data.OleDb.OleDbDataAdapter> e imposta la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> e <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> proprietà. Si presuppone che abbia già creato un <xref:System.Data.OleDb.OleDbConnection> oggetto.  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="oleDbDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="oleDbDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdated As OleDbRowUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbRowUpdatedEventHandler ^ RowUpdated;" />
      <MemberSignature Language="F#" Value="member this.RowUpdated : System.Data.OleDb.OleDbRowUpdatedEventHandler " Usage="member this.RowUpdated : System.Data.OleDb.OleDbRowUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_RowUpdated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbRowUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica durante l'applicazione del metodo <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> in seguito all'esecuzione di un comando nell'origine dati. Viene eseguito un tentativo di aggiornamento. Di conseguenza, si verifica l'evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si usa <xref:System.Data.Common.DbDataAdapter.Update%2A>, sono disponibili due eventi che si verificano per ogni riga di dati aggiornata. Come indicato di seguito è riportato l'ordine di esecuzione:  
  
1.  I valori di <xref:System.Data.DataRow> vengono spostati i valori dei parametri.  
  
2.  Viene generato l'evento <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>.  
  
3.  L'esecuzione del comando.  
  
4.  Se il comando è impostato su `FirstReturnedRecord`, il primo risultato restituito è inserito nel <xref:System.Data.DataRow>.  
  
5.  Se sono presenti parametri di output, essi vengono inseriti nel <xref:System.Data.DataRow>.  
  
6.  Viene generato l'evento <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>.  
  
7.  Chiamata del metodo <xref:System.Data.DataRow.AcceptChanges%2A>.  
  
   
  
## Examples  
 L'esempio seguente mostra le <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> e <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> eventi in uso.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdating As OleDbRowUpdatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbRowUpdatingEventHandler ^ RowUpdating;" />
      <MemberSignature Language="F#" Value="member this.RowUpdating : System.Data.OleDb.OleDbRowUpdatingEventHandler " Usage="member this.RowUpdating : System.Data.OleDb.OleDbRowUpdatingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_RowUpdating")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbRowUpdatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica durante l'applicazione del metodo <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> prima che un comando sia eseguito nell'origine dati. Viene eseguito un tentativo di aggiornamento. Di conseguenza, si verifica l'evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si usa <xref:System.Data.Common.DbDataAdapter.Update%2A>, sono disponibili due eventi che si verificano per ogni riga di dati aggiornata. Come indicato di seguito è riportato l'ordine di esecuzione:  
  
1.  I valori di <xref:System.Data.DataRow> vengono spostati i valori dei parametri.  
  
2.  Viene generato l'evento <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>.  
  
3.  L'esecuzione del comando.  
  
4.  Se il comando è impostato su `FirstReturnedRecord`, il primo risultato restituito è inserito nel <xref:System.Data.DataRow>.  
  
5.  Se sono presenti parametri di output, essi vengono inseriti nel <xref:System.Data.DataRow>.  
  
6.  Viene generato l'evento <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>.  
  
7.  Chiamata del metodo <xref:System.Data.DataRow.AcceptChanges%2A>.  
  
   
  
## Examples  
 L'esempio seguente mostra le <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> e <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> eventi in uso.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ SelectCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_SelectCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un'istruzione SQL o una stored procedure per selezionare record nell'origine dati.</summary>
        <value>Oggetto <see cref="T:System.Data.OleDb.OleDbCommand" /> utilizzato durante l'applicazione del metodo <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> per selezionare record da un'origine dati e collocarli nell'oggetto <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> viene assegnato a un oggetto creato in precedenza <xref:System.Data.OleDb.OleDbCommand>, il <xref:System.Data.OleDb.OleDbCommand> non viene clonato. Il <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> mantiene un riferimento all'oggetto creato in precedenza <xref:System.Data.OleDb.OleDbCommand> oggetto.  
  
 Se il <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> non restituisce righe, alcun tabelle non vengono aggiunte al <xref:System.Data.DataSet>, e viene generata alcuna eccezione.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Data.OleDb.OleDbDataAdapter> e imposta la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> e <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> proprietà. Si presuppone che abbia già creato un <xref:System.Data.OleDb.OleDbConnection> oggetto.  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="M:System.Data.IDbDataAdapter.DeleteCommand" />.</summary>
        <value>Interfaccia <see cref="T:System.Data.IDbCommand" /> utilizzata durante un aggiornamento per eliminare record nell'origine dati relativi alle righe eliminate dal set di dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Data.OleDb.OleDbDataAdapter> a un'interfaccia <xref:System.Data.IDbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="M:System.Data.IDbDataAdapter.InsertCommand" />.</summary>
        <value>Interfaccia <see cref="T:System.Data.IDbCommand" /> utilizzata durante un aggiornamento per inserire record da un'origine dati e posizionarli nel set di dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Data.OleDb.OleDbDataAdapter> a un'interfaccia <xref:System.Data.IDbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="M:System.Data.IDbDataAdapter.SelectCommand" />.</summary>
        <value>Interfaccia <see cref="T:System.Data.IDbCommand" /> utilizzata durante un aggiornamento per selezionare record da un'origine dati e posizionarli nel set di dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Data.OleDb.OleDbDataAdapter> a un'interfaccia <xref:System.Data.IDbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="M:System.Data.IDbDataAdapter.UpdateCommand" />.</summary>
        <value>Interfaccia <see cref="T:System.Data.IDbCommand" /> utilizzata durante un aggiornamento per aggiornare record nell'origine dati per le righe modificate nel set di dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Data.OleDb.OleDbDataAdapter> a un'interfaccia <xref:System.Data.IDbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Nuovo oggetto <see cref="T:System.Object" /> che consiste in una copia dell'istanza corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Data.OleDb.OleDbDataAdapter> a un'interfaccia <xref:System.ICloneable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ UpdateCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_UpdateCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un'istruzione SQL o una stored procedure usata per aggiornare i record nell'origine dati.</summary>
        <value>Oggetto <see cref="T:System.Data.OleDb.OleDbCommand" /> usato durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> per aggiornare i record nell'origine dati che corrispondono alle righe modificate di <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante <xref:System.Data.Common.DbDataAdapter.Update%2A>, se questa proprietà non è impostata e informazioni sulla chiave primarie è presente nel <xref:System.Data.DataSet>, il <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> può essere generato automaticamente se si imposta la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> proprietà e utilizzare il <xref:System.Data.OleDb.OleDbCommandBuilder>. Quindi, generati da eventuali altri comandi che non si imposta la <xref:System.Data.OleDb.OleDbCommandBuilder>. Questa logica per la generazione richiede informazioni della colonna chiave siano presenti nel <xref:System.Data.DataSet>. Per altre informazioni, vedere [generazione di comandi tramite commandbuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Quando <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> viene assegnato a un oggetto creato in precedenza <xref:System.Data.OleDb.OleDbCommand>, il <xref:System.Data.OleDb.OleDbCommand> non viene clonato. Il <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> mantiene un riferimento all'oggetto creato in precedenza <xref:System.Data.OleDb.OleDbCommand> oggetto.  
  
> [!NOTE]
>  Se l'esecuzione di questo comando restituisce le righe, queste righe potrebbero essere unite con il <xref:System.Data.DataSet> a seconda della modalità di impostazione la <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> proprietà del <xref:System.Data.OleDb.OleDbCommand> oggetto.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Data.OleDb.OleDbDataAdapter> e imposta la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> e <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> proprietà. Si presuppone che abbia già creato un <xref:System.Data.OleDb.OleDbConnection> oggetto.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>