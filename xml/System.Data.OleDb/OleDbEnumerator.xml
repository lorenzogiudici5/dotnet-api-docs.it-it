<Type Name="OleDbEnumerator" FullName="System.Data.OleDb.OleDbEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1311a165a86e84659ef231fd926be290571682ff" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30389235" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbEnumerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbEnumerator sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce un meccanismo per enumerare tutti i provider OLE DB disponibili all'interno della rete locale.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbEnumerator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbEnumerator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Crea un'istanza della classe <see cref="T:System.Data.OleDb.OleDbEnumerator" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElements">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbEnumerator.GetElements" />
      <MemberSignature Language="VB.NET" Value="Public Function GetElements () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetElements();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera un oggetto <see cref="T:System.Data.DataTable" /> contenente informazioni su tutti i provider OLE DB visibili.</summary>
        <returns>Restituisce un oggetto <see cref="T:System.Data.DataTable" /> contenente informazioni sui provider OLE DB visibili.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabella restituita da questo metodo contiene le seguenti colonne, ciascuna delle quali contiene le stringhe:  
  
|Numero ordinale di colonna|Colonna|Descrizione|  
|--------------------|------------|-----------------|  
|0|SOURCES_NAME|Il nome invariante dell'origine di dati OLE DB nativo o enumeratore.|  
|1|SOURCES_PARSENAME|Nome leggibile dall'utente che può essere convertito in un moniker utilizzando l'interfaccia COM nativa IParseDisplayName. Corrisponde alla colonna SOURCES_PARSENAME restituita dal rowset di origini di OLE DB nativo.|  
|2|SOURCES_DESCRIPTION|Descrizione dell'origine dati OLE DB nativo. Corrisponde alla colonna SOURCES_DESCRIPTION restituita dal rowset di origini di OLE DB nativo.|  
|3|SOURCES_TYPE|Uno dei seguenti membri dell'enumerazione: Binder (0), DataSource_MDP (1), DataSource_TDP (2), l'enumeratore (3). Questi corrispondono per i valori restituiti nella colonna SOURCES_TYPE del rowset di origini di OLE DB nativo.|  
|4|SOURCES_ISPARENT|Applicabile soltanto agli enumeratori. Se `true`, indica che la voce si applica lo stesso enumeratore, in cui è stato chiamato GetSourcesRowset, implicando che è incluso anche nell'enumerazione secondario. Corrisponde alla colonna del set di righe delle origini di OLE DB nativo SOURCES_ISPARENT|  
|5|SOURCES_CLSID|Un nome leggibile dall'utente, che può essere convertito in un moniker utilizzando l'interfaccia COM nativa IParseDisplayName. Corrisponde alla colonna SOURCES_CLSID restituita dal rowset di origini di OLE DB nativo.|  
  
   
  
## Examples  
 La seguente applicazione console recupera informazioni su tutti i provider OLE DB visibili e visualizza le informazioni nella finestra della console.  
  
```vb  
Imports System.Data  
Imports System.Data.OleDb  
  
Module Module1  
  
Sub Main()  
  Dim enumerator As New OleDbEnumerator  
  Dim table As System.Data.DataTable = enumerator.GetElements()  
  
  DisplayData(table)  
  
   Console.WriteLine("Press any key to continue.")  
   Console.ReadKey()  
 End Sub  
  
 Private Sub DisplayData(ByVal table As DataTable)  
   For Each row As DataRow In table.Rows  
     For Each col As DataColumn In table.Columns  
       Console.WriteLine("{0} = {1}", col.ColumnName, row(col))  
     Next  
     Console.WriteLine("==================================")  
   Next  
 End Sub  
End Module  
```  
  
```csharp  
using System;  
using System.Data;  
using System.Data.OleDb;  
  
class Program  
{  
 static void Main()  
 {  
   OleDbEnumerator enumerator = new OleDbEnumerator();  
   DataTable table = enumerator.GetElements();  
  
   DisplayData(table);  
  
   Console.WriteLine("Press any key to continue.");  
   Console.ReadKey();  
 }  
  
 static void DisplayData(DataTable table)  
 {  
   foreach (DataRow row in table.Rows)  
   {  
     foreach (DataColumn col in table.Columns)  
     {  
       Console.WriteLine("{0} = {1}", col.ColumnName, row[col]);  
     }  
     Console.WriteLine("==================================");  
   }  
 }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il provider non supporta ISourcesRowset.</exception>
        <exception cref="T:System.Data.OleDb.OleDbException">È stata generata un'eccezione nel provider sottostante.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public static System.Data.OleDb.OleDbDataReader GetEnumerator (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OleDb.OleDbDataReader GetEnumerator(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OleDb::OleDbDataReader ^ GetEnumerator(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Oggetto <see cref="T:System.Type" />.</param>
        <summary>Utilizza un determinato enumeratore OLE DB per restituire un oggetto <see cref="T:System.Data.OleDb.OleDbDataReader" /> contenente informazioni sui provider OLE DB attualmente installati senza dover ricorrere a un'istanza della classe <see cref="T:System.Data.OleDb.OleDbEnumerator" />.</summary>
        <returns>Restituisce un oggetto <see cref="T:System.Data.OleDb.OleDbDataReader" /> contenente informazioni sui provider OLE DB richiesti utilizzando l'enumeratore OLE DB specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il lettore restituito da questo metodo contiene le seguenti colonne, ciascuna delle quali contiene le stringhe:  
  
|Ordinale colonna|Colonna|Descrizione|  
|--------------------|------------|-----------------|  
|0|SOURCES_NAME|Il nome invariante dell'origine di dati OLE DB nativo o enumeratore.|  
|1|SOURCES_PARSENAME|Un nome leggibile dall'utente che può essere convertito in un moniker utilizzando l'interfaccia COM nativa **IParseDisplayName**. Corrisponde alla colonna SOURCES_PARSENAME restituita dal rowset di origini di OLE DB nativo.|  
|2|SOURCES_DESCRIPTION|Descrizione dell'origine dati OLE DB nativo. Corrisponde alla colonna SOURCES_DESCRIPTION restituita dal rowset di origini di OLE DB nativo.|  
|3|SOURCES_TYPE|Uno dei seguenti membri dell'enumerazione: Binder (0), DataSource_MDP (1), DataSource_TDP (2), l'enumeratore (3). Questi corrispondono per i valori restituiti nella colonna SOURCES_TYPE del rowset di origini di OLE DB nativo.|  
|4|SOURCES_ISPARENT|Applicabile soltanto agli enumeratori. Se `true`, indica che la voce si applica lo stesso enumeratore, in cui **GetSourcesRowset** è stato chiamato per indicare che è incluso anche nell'enumerazione secondario. Corrisponde alla colonna del set di righe delle origini di OLE DB nativo SOURCES_ISPARENT|  
  
 OLE DB fornisce numerosi componenti enumeratori, tra cui MSDAENUM enumeratore MSDASQL, enumeratore SQLNCLI, enumeratore SQLOLEDB e altri utenti. Per ulteriori informazioni sui componenti dell'enumeratore e sul loro utilizzo, vedere il [riferimento per programmatori OLE DB](http://go.microsoft.com/fwlink/?LinkId=45232).  
  
   
  
## Examples  
 La seguente applicazione console utilizza il componente MSDAENUM per recuperare informazioni su tutti i provider OLE DB e visualizza le informazioni nella finestra della console.  
  
```vb  
Imports System.Data  
Imports System.Data.OleDb  
  
Module Module1  
  
  Sub Main()  
    Dim enumerator As New OleDbEnumerator  
    Dim reader As OleDbDataReader = _  
     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID("MSDAENUM"))  
  
    DisplayData(reader)  
  
    Console.WriteLine("Press any key to continue.")  
    Console.ReadKey()  
  End Sub  
  
  Private Sub DisplayData(ByVal reader As OleDbDataReader)  
    While reader.Read()  
      For i As Integer = 0 To reader.FieldCount - 1  
        Console.WriteLine("{0} = {1}", _  
         reader.GetName(i), reader.GetValue(i))  
      Next  
      Console.WriteLine("==================================")  
    End While  
  
  End Sub  
End Module  
```  
  
```csharp  
using System;  
using System.Data;  
using System.Data.OleDb;  
  
class Program  
{  
 static void Main()  
 {  
   OleDbDataReader reader =   
     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID("MSDAENUM"));  
  
   DisplayData(reader);  
  
   Console.WriteLine("Press any key to continue.");  
   Console.ReadKey();  
 }  
  
 static void DisplayData(OleDbDataReader reader)  
 {  
   while (reader.Read())  
   {  
     for (int i = 0; i < reader.FieldCount; i++)  
     {  
       Console.WriteLine("{0} = {1}",  
        reader.GetName(i), reader.GetValue(i));  
     }  
     Console.WriteLine("==================================");  
   }  
 }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il provider non supporta **ISourcesRowset**.</exception>
        <exception cref="T:System.Data.OleDb.OleDbException">È stata generata un'eccezione nel provider sottostante.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRootEnumerator">
      <MemberSignature Language="C#" Value="public static System.Data.OleDb.OleDbDataReader GetRootEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OleDb.OleDbDataReader GetRootEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbEnumerator.GetRootEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRootEnumerator () As OleDbDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OleDb::OleDbDataReader ^ GetRootEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto <see cref="T:System.Data.OleDb.OleDbDataReader" /> contenente informazioni sui provider OLE DB attualmente installati senza dover ricorrere a un'istanza della classe <see cref="T:System.Data.OleDb.OleDbEnumerator" />.</summary>
        <returns>Restituisce un oggetto <see cref="T:System.Data.OleDb.OleDbDataReader" /> contenente informazioni sui provider OLE DB visibili.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il lettore restituito da questo metodo contiene le seguenti colonne, ciascuna delle quali contiene le stringhe:  
  
|Numero ordinale di colonna|Colonna|Descrizione|  
|--------------------|------------|-----------------|  
|0|SOURCES_NAME|Il nome invariante dell'origine di dati OLE DB nativo o enumeratore.|  
|1|SOURCES_PARSENAME|Nome leggibile dall'utente che può essere convertito in un moniker utilizzando l'interfaccia COM nativa IParseDisplayName. Corrisponde alla colonna SOURCES_PARSENAME restituita dal rowset di origini di OLE DB nativo.|  
|2|SOURCES_DESCRIPTION|Descrizione dell'origine dati OLE DB nativo. Corrisponde alla colonna SOURCES_DESCRIPTION restituita dal rowset di origini di OLE DB nativo.|  
|3|SOURCES_TYPE|Uno dei seguenti membri dell'enumerazione: Binder (0), DataSource_MDP (1), DataSource_TDP (2), l'enumeratore (3). Questi corrispondono per i valori restituiti nella colonna SOURCES_TYPE del rowset di origini di OLE DB nativo.|  
|4|SOURCES_ISPARENT|Applicabile soltanto agli enumeratori. Se `true`, indica che la voce si applica lo stesso enumeratore, in cui è stato chiamato GetSourcesRowset, implicando che è incluso anche nell'enumerazione secondario. Corrisponde alla colonna del set di righe delle origini di OLE DB nativo SOURCES_ISPARENT|  
|5|SOURCES_CLSID|Un nome leggibile dall'utente, che può essere convertito in un moniker utilizzando l'interfaccia COM nativa IParseDisplayName. Corrisponde alla colonna SOURCES_CLSID restituita dal rowset di origini di OLE DB nativo.|  
  
   
  
## Examples  
 La seguente applicazione console recupera informazioni su tutti i provider OLE DB visibili e visualizza le informazioni nella finestra della console.  
  
```vb  
Imports System.Data  
Imports System.Data.OleDb  
  
Module Module1  
  
  Sub Main()  
    Dim enumerator As New OleDbEnumerator  
    Dim reader As OleDbDataReader = OleDbEnumerator.GetRootEnumerator()  
  
    DisplayData(reader)  
  
    Console.WriteLine("Press any key to continue.")  
    Console.ReadKey()  
  End Sub  
  
  Private Sub DisplayData(ByVal reader As OleDbDataReader)  
    While reader.Read()  
      For i As Integer = 0 To reader.FieldCount - 1  
        Console.WriteLine("{0} = {1}", _  
         reader.GetName(i), reader.GetValue(i))  
      Next  
      Console.WriteLine("==================================")  
    End While  
  
  End Sub  
End Module  
```  
  
```csharp  
using System;  
using System.Data;  
using System.Data.OleDb;  
  
class Program  
{  
 static void Main()  
 {  
   OleDbDataReader reader = OleDbEnumerator.GetRootEnumerator();  
  
   DisplayData(reader);  
  
   Console.WriteLine("Press any key to continue.");  
   Console.ReadKey();  
 }  
  
 static void DisplayData(OleDbDataReader reader)  
 {  
   while (reader.Read())  
   {  
     for (int i = 0; i < reader.FieldCount; i++)  
     {  
       Console.WriteLine("{0} = {1}",  
        reader.GetName(i), reader.GetValue(i));  
     }  
     Console.WriteLine("==================================");  
   }  
 }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Il provider non supporta ISourcesRowset.</exception>
        <exception cref="T:System.Data.OleDb.OleDbException">È stata generata un'eccezione nel provider sottostante.</exception>
      </Docs>
    </Member>
  </Members>
</Type>