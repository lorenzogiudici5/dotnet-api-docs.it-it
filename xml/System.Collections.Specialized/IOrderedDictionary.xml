<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IOrderedDictionary.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5445f2081060cc27f506f6e9a66e446bc9a223852.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">445f2081060cc27f506f6e9a66e446bc9a223852</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>Represents an indexed collection of key/value pairs.</source>
          <target state="translated">Rappresenta una raccolta indicizzata di coppie chiave/valore.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> elements can be accessed either with the key or with the index.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> con la chiave o con l'indice, è possano accedere agli elementi.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>Each element is a key/value pair stored in a <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> structure.</source>
          <target state="translated">Ogni elemento è una coppia chiave/valore archiviata in un <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> struttura.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>Each pair must have a unique key that is not <ph id="ph1">`null`</ph>, but the value can be <ph id="ph2">`null`</ph> and does not have to be unique.</source>
          <target state="translated">Ogni coppia deve avere una chiave univoca che non è <ph id="ph1">`null`</ph>, ma il valore può essere <ph id="ph2">`null`</ph> e non deve essere univoco.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> interfaccia consente alle chiavi e contenuti i valori devono essere enumerati, ma non implica alcun ordinamento particolare.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`For Each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated">Il <ph id="ph1">`foreach`</ph> istruzione del linguaggio c# (<ph id="ph2">`For Each`</ph> in Visual Basic) restituisce un oggetto di tipo degli elementi nella raccolta.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>Because each element of the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">Poiché ogni elemento del <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> è una coppia chiave/valore, il tipo di elemento non è il tipo della chiave o il tipo del valore.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>Instead, the element type is <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>, as the following example shows.</source>
          <target state="translated">Al contrario, il tipo di elemento è <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>, come illustrato nell'esempio seguente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</source>
          <target state="translated">Il <ph id="ph1">`foreach`</ph> istruzione è un wrapper per l'enumeratore, che consente solo di leggere da, non la scrittura, la raccolta.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The following code example demonstrates the implementation of a simple <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> based on the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente viene illustrata l'implementazione di una semplice <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> in base il <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The implemented <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</source>
          <target state="translated">Implementato <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> archivia i nomi come chiavi e i cognomi dei valori, con la necessità che ciascun nome sia univoco.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The implementing class must have a means to compare keys.</source>
          <target state="translated">La classe di implementazione deve avere la possibilità di confrontare le chiavi.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection.</source>
          <target state="translated">Restituisce un enumeratore che consente di scorrere la raccolta <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the entire <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection.</source>
          <target state="translated">Interfaccia <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> per l'intera raccolta <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic, c#]</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">L'istruzione <ph id="ph1">`foreach`</ph> del linguaggio C# (<ph id="ph2">`for each`</ph> in Visual Basic) nasconde la complessità degli enumeratori.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended instead of directly manipulating the enumerator.</source>
          <target state="translated">Pertanto, l'utilizzo <ph id="ph1">`foreach`</ph> è consigliabile anziché la modifica diretta dell'enumeratore.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated">Anche il metodo <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> riporta l'enumeratore in questa posizione.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">In questa posizione, la <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> proprietà non è definita.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Pertanto, è necessario chiamare il metodo <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> per spostare in avanti l'enumeratore, in corrispondenza del primo elemento della raccolta, prima di leggere il valore di <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> restituisce lo stesso oggetto finché non viene chiamato il metodo <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> o <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> imposta <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> sull'elemento successivo.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituisce <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituire anche <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Se l'ultima chiamata a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituito <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> è definito.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Per impostare nuovamente la proprietà <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> sul primo elemento della raccolta, è possibile chiamare il metodo <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> seguito da <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">In caso di modifiche alla raccolta, ad esempio aggiunta, modifica o eliminazione di elementi, l'enumeratore sarà reso non valido in modo irreversibile e il comportamento corrispondente non sarà definito.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>The following code example demonstrates the implementation of a simple <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> based on the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente viene illustrata l'implementazione di una semplice <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> in base il <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>The implemented <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</source>
          <target state="translated">Implementato <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> archivia i nomi come chiavi e i cognomi dei valori, con la necessità che ciascun nome sia univoco.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>This code is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> class.</source>
          <target state="translated">Questo codice è parte di un esempio di codice fornito per il <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The zero-based index at which the key/value pair should be inserted.</source>
          <target state="translated">Indice in base zero in corrispondenza del quale inserire la coppia chiave/valore.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The object to use as the key of the element to add.</source>
          <target state="translated">Oggetto da usare come chiave dell'elemento da aggiungere.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The object to use as the value of the element to add.</source>
          <target state="translated">Oggetto da usare come valore dell'elemento da aggiungere.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore può essere <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>Inserts a key/value pair into the collection at the specified index.</source>
          <target state="translated">Inserisce una coppia chiave/valore nella raccolta in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> accetta <ph id="ph2">`null`</ph> come un valore valido e consente elementi duplicati.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>If the <ph id="ph1">`index`</ph> parameter is equal to <ph id="ph2">&lt;xref:System.Collections.ICollection.Count%2A&gt;</ph>, the <ph id="ph3">`value`</ph> parameter is added to the end of the <ph id="ph4">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> collection.</source>
          <target state="translated">Se il <ph id="ph1">`index`</ph> parametro è uguale a <ph id="ph2">&lt;xref:System.Collections.ICollection.Count%2A&gt;</ph>, <ph id="ph3">`value`</ph> parametro viene aggiunto alla fine del <ph id="ph4">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> insieme.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">In raccolte di elementi adiacenti, quali gli elenchi, gli elementi successivi al punto di inserimento vengono spostati verso il basso per consentire l'inserimento del nuovo elemento.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Se la raccolta è indicizzata, vengono aggiornati anche gli indici degli elementi spostati.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>This behavior does not apply to collections where elements are conceptually grouped together, such as a hash table.</source>
          <target state="translated">Questo comportamento non viene applicato alle raccolte in cui gli elementi sono raggruppati concettualmente, ad esempio una tabella hash.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The following code example demonstrates the implementation of a simple <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> based on the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente viene illustrata l'implementazione di una semplice <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> in base il <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The implemented <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</source>
          <target state="translated">Implementato <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> archivia i nomi come chiavi e i cognomi dei valori, con la necessità che ciascun nome sia univoco.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>This code is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> class.</source>
          <target state="translated">Questo codice è parte di un esempio di codice fornito per il <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di 0.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è maggiore di <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>An element with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection.</source>
          <target state="translated">Un elemento con la stessa chiave esiste già nell'insieme <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection is read-only.</source>
          <target state="translated">L'insieme <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> è in sola lettura.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection has a fixed size.</source>
          <target state="translated">L'insieme <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> ha una dimensione fissa.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">Indice in base zero dell'elemento da ottenere o impostare.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">Elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> accetta <ph id="ph2">`null`</ph> come un valore valido e consente elementi duplicati.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary.Item%2A&gt;</ph> property.</source>
          <target state="translated">Nel linguaggio c# viene utilizzata la parola chiave per definire gli indicizzatori anziché implementare la <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary.Item%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">In Visual Basic la proprietà <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary.Item%2A&gt;</ph> viene implementata come predefinita per fornire la stessa funzionalità di indicizzazione.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>This property allows you to access a specific element in the collection by using the following syntax:</source>
          <target state="translated">Questa proprietà consente di accedere a un elemento specifico nella raccolta utilizzando la sintassi seguente:</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>The following code example demonstrates the implementation of a simple <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> based on the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente viene illustrata l'implementazione di una semplice <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> in base il <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>The implemented <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</source>
          <target state="translated">Implementato <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> archivia i nomi come chiavi e i cognomi dei valori, con la necessità che ciascun nome sia univoco.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>This code is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> class.</source>
          <target state="translated">Questo codice è parte di un esempio di codice fornito per il <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di 0.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è uguale a o maggiore di <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">Indice in base zero dell'elemento da rimuovere.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>Removes the element at the specified index.</source>
          <target state="translated">Rimuove l'elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">In raccolte di elementi adiacenti, quali gli elenchi, gli elementi successivi al punto di inserimento vengono spostati verso il basso per consentire l'inserimento del nuovo elemento.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Se la raccolta è indicizzata, vengono aggiornati anche gli indici degli elementi spostati.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>This behavior does not apply to collections where elements are conceptually grouped together, such as a hash table.</source>
          <target state="translated">Questo comportamento non viene applicato alle raccolte in cui gli elementi sono raggruppati concettualmente, ad esempio una tabella hash.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>The following code example demonstrates the implementation of a simple <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> based on the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente viene illustrata l'implementazione di una semplice <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> in base il <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>The implemented <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</source>
          <target state="translated">Implementato <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> archivia i nomi come chiavi e i cognomi dei valori, con la necessità che ciascun nome sia univoco.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>This code is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> class.</source>
          <target state="translated">Questo codice è parte di un esempio di codice fornito per il <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di 0.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è uguale a o maggiore di <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection is read-only.</source>
          <target state="translated">L'insieme <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> è in sola lettura.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection has a fixed size.</source>
          <target state="translated">L'insieme <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> ha una dimensione fissa.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>