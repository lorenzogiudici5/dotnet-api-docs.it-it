<Type Name="ComponentGuaranteesAttribute" FullName="System.Runtime.Versioning.ComponentGuaranteesAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c9cc63738e7d595aac3ed161af7c1252c0bb6baf" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36628721" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ComponentGuaranteesAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ComponentGuaranteesAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ComponentGuaranteesAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentGuaranteesAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ComponentGuaranteesAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Module | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definisce la garanzia di compatibilità di un componente, di un tipo o di un membro di tipo che può estendersi a più versioni.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> viene usata dagli sviluppatori di componenti e le librerie di classi per indicare il livello di compatibilità che i consumer delle librerie possono prevedere in più versioni. Indica il livello di garanzia che una versione futura della libreria o del componente non verrà interrotto un client esistente. I client possono quindi usare il <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> come ausilio nella progettazione di interfacce per garantire la stabilità in tutte le versioni.  
  
> [!NOTE]
>  Common language runtime (CLR) non usare questo attributo in alcun modo. Il valore è compresa in documentare formalmente l'intenzione dell'autore del componente. Gli strumenti in fase di compilazione possono utilizzare anche queste dichiarazioni per rilevare errori in fase di compilazione che causa l'interruzione in caso contrario, la garanzia dichiarata.  
  
## <a name="levels-of-compatibility"></a>Livelli di compatibilità  
 Il <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> supporta i seguenti livelli di compatibilità, che sono rappresentati dai membri del <xref:System.Runtime.Versioning.ComponentGuaranteesOptions> enumerazione:  
  
-   Alla versione compatibilità (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType>). Il client può aspettarsi che versioni future verranno interrotto il client esistente. Per altre informazioni, vedere la [compatibilità No](#None) sezione più avanti in questo argomento.  
  
-   Side-by-side alla versione compatibilità (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType>). Il componente è stato testato per l'utilizzo quando più di una versione dell'assembly viene caricata nello stesso dominio applicazione. In generale, le versioni future possono interrompere la compatibilità. Tuttavia, quando vengono apportate modifiche di rilievo, la versione precedente non è stata modificata, ma esiste, insieme alla nuova versione. Esecuzione side-by-side è quello previsto per l'utilizzo dei client esistenti quando vengono apportate modifiche di rilievo. Per altre informazioni, vedere la [compatibilità Side-by-Side](#SideBySide) sezione più avanti in questo argomento.  
  
-   Compatibilità di versione a versione stabile (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType>). Le versioni future non devono interrompere il client e non è necessaria l'esecuzione side-by-side. Tuttavia, se il client viene inavvertitamente interrotto, potrebbe essere possibile utilizzare l'esecuzione side-by-side per risolvere il problema. Per altre informazioni, vedere la [compatibilità stabile](#Standard) sezione.  
  
-   Compatibilità di alla versione di Exchange (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType>). Straordinari attenzione per assicurarsi che le versioni future non verranno interrotto il client. Il client deve utilizzare solo questi tipi nella firma di interfacce utilizzate per la comunicazione con altri assembly da cui vengono distribuiti indipendentemente uno da altro. Solo una versione di questi tipi deve essere in un determinato dominio applicazione, il che significa che se si interrompe un client, l'esecuzione side-by-side non può risolvere il problema di compatibilità. Per altre informazioni, vedere la [compatibilità dei tipi di Exchange](#Exchange) sezione.  
  
 Le seguenti sezioni illustrano ogni livello di garanzia più dettagliatamente.  
  
<a name="None"></a>   
### <a name="no-compatibility"></a>Nessuna compatibilità  
 Il contrassegno di un componente come <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType> indica che il provider non garantisce la compatibilità. I client devono evitare l'aggiunta di tutte le dipendenze di interfacce esposte. Questo livello di compatibilità è utile per i tipi che sono sperimentale o che vengono esposte pubblicamente ma servono solo per i componenti che vengono sempre aggiornati contemporaneamente. <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> indica in modo esplicito che questo componente non deve essere utilizzato dai componenti esterni.  
  
<a name="SideBySide"></a>   
### <a name="side-by-side-compatibility"></a>Compatibilità side-by-Side  
 Il contrassegno di un componente come <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType> indica che il componente è stato testato per l'utilizzo quando più di una versione dell'assembly viene caricata nello stesso dominio applicazione. Le modifiche di rilievo sono consentite fino a quando sono state apportate all'assembly che contiene il numero di versione maggiore. I componenti che sono associati a una versione precedente dell'assembly dovrebbero continuare a eseguire il binding per la versione precedente, e altri componenti possono associare alla nuova versione. È inoltre possibile aggiornare un componente che viene dichiarato come <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide> modificando radicalmente la versione precedente.  
  
<a name="Standard"></a>   
### <a name="stable-compatibility"></a>Compatibilità stabile  
 Contrassegnare un tipo come <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType> indica che il tipo deve rimanere stabile in tutte le versioni. Tuttavia, può essere inoltre possibile per le versioni side-by-side di un tipo stabile a esistere nello stesso dominio applicazione.  
  
 I tipi stabili gestiscono una barra elevata compatibilità binaria. Per questo motivo, i provider devono essere evitate modifiche di rilievo a tipi stabili. I seguenti tipi di modifiche sono accettabili:  
  
-   I campi di istanza privata per l'aggiunta o rimozione di campi da un tipo, purché questo gestore non interrompe il formato di serializzazione.  
  
-   Modifica di un tipo non serializzabile in un tipo serializzabile. (Tuttavia, un tipo serializzabile non può essere modificato in un tipo non serializzabile.)  
  
-   Generazione di nuovo, più eccezioni derivate da un metodo.  
  
-   Miglioramento delle prestazioni di un metodo.  
  
-   Modificare l'intervallo di valori restituiti, purché la modifica non influisce negativamente la maggior parte dei client.  
  
-   Correzione di bug gravi, se la motivazione aziendale è elevata e il numero di client interessati è basso.  
  
 Poiché le nuove versioni dei componenti stabile non è previsto per l'interruzione dei client esistenti, in genere un'unica versione di un componente stabile è necessario in un dominio applicazione. Tuttavia, ciò non è un requisito, perché stabili tipi non vengono utilizzati come tipi di scambio noti che tutti i componenti concordano. Pertanto, se una nuova versione di un componente stabile inavvertitamente suddividerà alcuni componenti e altri componenti richiedono la nuova versione, è possibile provare a risolvere il problema mediante il caricamento sia il componente precedente e nuovo.  
  
 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> fornisce una garanzia di compatibilità di versione maggiore rispetto a <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>. È comune predefinito per i componenti con più versioni.  
  
 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> può essere combinato con <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide>, che indica che il componente non interromperanno la compatibilità ma è stato testato per l'utilizzo quando più di una versione viene caricata in un determinato dominio applicazione.  
  
 Dopo che un tipo o metodo è contrassegnato come <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>, possono essere aggiornato a <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>. Non è possibile effettuare il downgrade a <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>.  
  
<a name="Exchange"></a>   
### <a name="exchange-type-compatibility"></a>Compatibilità dei tipi di Exchange  
 Contrassegnare un tipo come <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType> fornisce una garanzia di compatibilità di versione maggiore rispetto a <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>e deve essere applicato a tutti i tipi più stabile. Questi tipi sono destinati a essere utilizzato per lo scambio tra i componenti compilati in modo indipendente tra tutti i limiti dei componenti sia nel tempo (qualsiasi versione di CLR) o qualsiasi versione di un componente o un'applicazione e lo spazio (tra processi, tra CLR in un processo, dominio dell'applicazione incrociata in uno CLR). Se viene apportata una modifica di rilievo a un tipo di exchange, non è possibile risolvere il problema, il caricamento di più versioni del tipo.  
  
 Tipi di Exchange devono essere modificati solo quando un problema molto grave (ad esempio un problema di sicurezza grave) o la probabilità di interruzione è molto bassa (vale a dire, se il comportamento è stato già interrotto in modo casuale da codice potrebbe non hanno influito su). È possibile apportare i seguenti tipi di modifiche a un tipo di exchange:  
  
-   Aggiungere l'ereditarietà di nuove definizioni di interfaccia.  
  
-   Aggiungere nuovi metodi privati che implementano i metodi di definizioni di interfaccia appena ereditate.  
  
-   Aggiungere nuovi campi statici.  
  
-   Aggiungere nuovi metodi statici.  
  
-   Aggiungere nuovi metodi di istanza non virtuale.  
  
 Di seguito viene considerate modifiche di rilievo e non è consentiti per i tipi primitivi:  
  
-   Modifica dei formati di serializzazione. Serializzazione a tolleranza di versione è obbligatorio.  
  
-   Aggiunta o rimozione di campi di istanza privata. Ciò implica il rischio della modifica del formato di serializzazione del tipo e il codice client che utilizza la reflection di rilievo.  
  
-   Modifica la serializzabilità di un tipo. Un tipo non serializzabile non può essere reso serializzabile e viceversa.  
  
-   Generazione di eccezioni diverse da un metodo.  
  
-   Modificare l'intervallo di valori restituiti del metodo, a meno che la definizione del membro genera questa possibilità e indica chiaramente come client devono gestire i valori sconosciuti.  
  
-   Correggere la maggior parte dei bug. I consumer del tipo si basano sul comportamento esistente.  
  
 Dopo che un componente, tipo o membro viene contrassegnato con il <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> garantire, non può essere modificata a uno <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> o <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>.  
  
 Tipi di exchange sono in genere, i tipi di base (ad esempio <xref:System.Int32> e <xref:System.String> in .NET Framework) e le interfacce (ad esempio <xref:System.Collections.Generic.IList%601>, <xref:System.Collections.Generic.IEnumerable%601>, e <xref:System.IComparable%601>) comunemente utilizzati nelle interfacce pubbliche.  
  
 Tipi di Exchange possono esporre pubblicamente solo altri tipi che sono contrassegnati anche con <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> compatibilità. Inoltre, i tipi di exchange non possono dipendere il comportamento delle API di Windows che tendono a cambiare.  
  
## <a name="component-guarantees-a-summary"></a>Garanzie di componente: Un riepilogo  
 Nella tabella seguente indica come le caratteristiche e utilizzo di un componente influiscono sulla garanzia di compatibilità.  
  
|Caratteristiche di componente|Exchange|Stable|Side-by-Side|nessuno|  
|-------------------------------|--------------|------------|--------------------|----------|  
|Può essere usato nelle interfacce tra componenti che la versione in modo indipendente.|Y|N|N|N|  
|Può essere utilizzato (privatamente da un assembly che le versioni in modo indipendente).|Y|Y|Y|N|  
|Può avere più versioni in un singolo dominio applicazione.|N|Y|Y|Y|  
|Possibile apportare modifiche di rilievo|N|N|Y|Y|  
|Testato per rendere che più versioni dell'assembly possono essere caricate contemporaneamente.|N|N|Y|N|  
|Possibile apportare modifiche di rilievo in punto.|N|N|N|Y|  
|In modo estremamente sicuro unificatori modifiche alla gestione.|Y|Y|Y|Y|  
  
## <a name="applying-the-attribute"></a>L'applicazione dell'attributo  
 È possibile applicare il <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> a un assembly, un tipo o un membro del tipo. L'applicazione è gerarchica. In altre parole, per impostazione predefinita, la garanzia definiti dal <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> proprietà dell'attributo a livello di assembly definisce la garanzia di tutti i tipi nell'assembly e tutti i membri di tali tipi. Analogamente, se la garanzia è applicata al tipo, per impostazione predefinita si applica anche a ogni membro del tipo.  
  
 Può eseguire l'override di questa garanzia ereditata applicando il <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> per singoli tipi e membri dei tipi. Tuttavia, garantisce che il valore predefinito di eseguire l'override solo possono indebolire la garanzia; essi non possono potenziarlo. Ad esempio, se un assembly è contrassegnato con il <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> garantisce, i tipi e membri non dispongono di compatibilità garanzia e qualsiasi altra garanzia che viene applicata a tipi o membri nell'assembly viene ignorata.  
  
## <a name="testing-the-guarantee"></a>La garanzia di test  
 Il <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> proprietà restituisce un membro del <xref:System.Runtime.Versioning.ComponentGuaranteesOptions> enumerazione, che è contrassegnato con il <xref:System.FlagsAttribute> attributo. Ciò significa che è necessario verificare i flag che si è interessati mascherando contrassegni potenzialmente sconosciuti. Ad esempio, nell'esempio seguente verifica se un tipo è contrassegnato come <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>.  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#1)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#1)]  
  
 Nell'esempio seguente verifica se un tipo è contrassegnato come <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> o <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>.  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#2)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#2)]  
  
 Nell'esempio riportato di seguito viene verificato se un tipo è contrassegnato come <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> (vale a dire, nessuno dei due <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> né <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>).  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#3)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Versioning.ComponentGuaranteesOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentGuaranteesAttribute (System.Runtime.Versioning.ComponentGuaranteesOptions guarantees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Versioning.ComponentGuaranteesOptions guarantees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (guarantees As ComponentGuaranteesOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentGuaranteesAttribute(System::Runtime::Versioning::ComponentGuaranteesOptions guarantees);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Versioning.ComponentGuaranteesAttribute : System.Runtime.Versioning.ComponentGuaranteesOptions -&gt; System.Runtime.Versioning.ComponentGuaranteesAttribute" Usage="new System.Runtime.Versioning.ComponentGuaranteesAttribute guarantees" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="guarantees" Type="System.Runtime.Versioning.ComponentGuaranteesOptions" />
      </Parameters>
      <Docs>
        <param name="guarantees">Uno dei valori di enumerazione che specifica il livello di compatibilità garantito fra più versioni.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" /> con un valore che indica il livello di compatibilità garantito di librerie, tipi o membri fra più versioni.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> viene creata un'istanza di classe, il valore della `guarantees` parametro è assegnato il <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Guarantees">
      <MemberSignature Language="C#" Value="public System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Guarantees As ComponentGuaranteesOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Versioning::ComponentGuaranteesOptions Guarantees { System::Runtime::Versioning::ComponentGuaranteesOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Guarantees : System.Runtime.Versioning.ComponentGuaranteesOptions" Usage="System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Versioning.ComponentGuaranteesOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica il livello di compatibilità garantito di una libreria, di un tipo o di un membro di tipo che si estende a più versioni.</summary>
        <value>Uno dei valori di enumerazione che specifica il livello di compatibilità garantito fra più versioni.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore della <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> proprietà corrisponde al `guarantees` parametro del <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A> costruttore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>