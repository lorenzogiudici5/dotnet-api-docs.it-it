<Type Name="Directory" FullName="System.IO.Directory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3eef209e22fab8e17d44c8ffc38ca66235b9bd93" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52217810" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Directory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Directory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Directory" />
  <TypeSignature Language="VB.NET" Value="Public Class Directory" />
  <TypeSignature Language="C++ CLI" Value="public ref class Directory abstract sealed" />
  <TypeSignature Language="F#" Value="type Directory = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Espone i metodi statici per la creazione, lo spostamento e l'enumerazione nelle directory e sottodirectory. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.IO.Directory> classe per operazioni tipiche, quali copia, lo spostamento, ridenominazione, creazione e l'eliminazione di directory.  
  
-   Per creare una directory, usare uno del <xref:System.IO.Directory.CreateDirectory%2A> metodi.  
  
-   Per eliminare una directory, usare uno del <xref:System.IO.Directory.Delete%2A> metodi.  
  
-   Per ottenere o impostare la directory corrente per un'app, usare il <xref:System.IO.Directory.GetCurrentDirectory%2A> o <xref:System.IO.Directory.SetCurrentDirectory%2A> (metodo).  
  
-   Per manipolare <xref:System.DateTime> le informazioni relative alla creazione, accesso e la scrittura di una directory, usare metodi quali <xref:System.IO.Directory.SetLastAccessTime%2A> e <xref:System.IO.Directory.SetCreationTime%2A>.  
  
 I metodi statici del <xref:System.IO.Directory> classe eseguire controlli di sicurezza su tutti i metodi. Se si intende riutilizzare un oggetto più volte, è consigliabile usare il metodo di istanza corrispondente di <xref:System.IO.DirectoryInfo> invece, poiché la sicurezza del controllo non sarà sempre essere necessarie.  
  
 Se si eseguono solo un'azione correlati alla directory, potrebbe essere più efficiente di utilizzare un valore statico <xref:System.IO.Directory> metodo anziché un corrispondente <xref:System.IO.DirectoryInfo> metodo di istanza. La maggior parte delle <xref:System.IO.Directory> metodi richiedono il percorso della directory che stanno modificando.  
  
> [!NOTE]
>  Nei membri che accettano una stringa `path` parametro, che il percorso deve essere nel formato corretto o viene generata un'eccezione. Ad esempio, se un percorso completo, ma inizia con uno spazio ("c:\temp"), la stringa del percorso non è viene tagliata, in modo che il percorso viene considerato valido e viene generata un'eccezione. Inoltre, un percorso o una combinazione di percorsi non può essere qualificata due volte. Ad esempio, "c:\windows c:\temp" genera anche un'eccezione. Assicurarsi che i percorsi siano in formato corretto quando si usano i metodi che accettano una stringa di percorso. Per altre informazioni, vedere <xref:System.IO.Path>.  
  
 Nei membri che accettano un percorso, il percorso può fare riferimento a un file o una directory. È possibile usare un percorso completo, un percorso relativo o un percorso Universal Naming Convention (UNC) per un nome di server e la condivisione. Ad esempio, le condizioni seguenti sono percorsi accettabili:  
  
-   "c:\\\MyDir" in c# o "c:\MyDir" in Visual Basic.  
  
-   "MyDir\\\MySubdir" in c# o "MyDir\MySubDir" in Visual Basic.  
  
-   "\\\\\\\MyServer\\\MyShare" nel linguaggio c#, o "\\\MyServer\MyShare" in Visual Basic.  
  
 Per impostazione predefinita, accesso completo in lettura/scrittura di nuove directory viene concesso a tutti gli utenti. Tuttavia, l'app deve avere la sicurezza corretta per accedere a directory esistenti.  
  
 Per la richiesta di autorizzazioni per una directory e tutte le relative sottodirectory, fine la stringa del percorso con il carattere separatore di directory. (Ad esempio, "C:\Temp\\" concede l'accesso a C:\Temp\ e tutte le relative sottodirectory.) Per la richiesta di autorizzazioni solo per una directory specifica, la stringa del percorso con un punto di fine. (Ad esempio, "C:\Temp\\." concede l'accesso solo a C:\Temp\\, non per le relative sottodirectory.)  
  
 Nei membri che accettano un `searchPattern` parametro, la stringa di ricerca può essere qualsiasi combinazione di caratteri letterali e due caratteri jolly; \* e?. Questo parametro non riconosce le espressioni regolari. Per altre informazioni, vedere la <xref:System.IO.Directory.EnumerateDirectories%28System.String%2CSystem.String%29> metodo o qualsiasi altro metodo che utilizza il `searchPattern` parametro.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
 <xref:System.IO.Directory> e <xref:System.IO.DirectoryInfo> non sono supportati per l'uso in [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] app. Per informazioni su come accedere ai file e cartelle [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] le app, vedi [l'accesso ai dati e i file (app di Windows Store)](https://msdn.microsoft.com/library/windows/apps/hh758319.aspx).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come recuperare tutti i file di testo da una directory e spostarli in una nuova directory. Dopo che i file vengono spostati, non esistono più nella directory originale.  
  
 [!code-csharp[System.IO.Directory#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Directory/CS/class2.cs#10)]
 [!code-vb[System.IO.Directory#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Directory/VB/class2.vb#10)]  
  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.IO.Directory.EnumerateFiles%2A> metodo per recuperare una raccolta di file di testo da una directory e quindi utilizzare tale raccolta in una query per trovare tutte le righe contenenti "Example".  
  
 [!code-csharp[System.IO.Directory#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Directory/CS/class3.cs#11)]
 [!code-vb[System.IO.Directory#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Directory/VB/class3.vb#11)]  
  
 Nell'esempio seguente viene illustrato come spostare una directory e tutti i relativi file in una nuova directory. La directory originale non esiste più dopo essere stata spostata.  
  
 [!code-csharp[System.IO.Directory#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Directory/CS/class6.cs#14)]
 [!code-vb[System.IO.Directory#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Directory/VB/class6.vb#14)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.DriveInfo" />
    <altmember cref="T:System.IO.File" />
    <altmember cref="T:System.IO.DirectoryInfo" />
    <altmember cref="T:System.IO.FileInfo" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md">Procedura: leggere e scrivere su un file di dati appena creato</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateDirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea tutte le directory nel percorso specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDirectory">
      <MemberSignature Language="C#" Value="public static System.IO.DirectoryInfo CreateDirectory (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.DirectoryInfo CreateDirectory(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.CreateDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDirectory (path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::DirectoryInfo ^ CreateDirectory(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member CreateDirectory : string -&gt; System.IO.DirectoryInfo" Usage="System.IO.Directory.CreateDirectory path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Directory da creare.</param>
        <summary>Crea tutte le directory e le sottodirectory nel percorso specificato a meno che non esistano già.</summary>
        <returns>Oggetto che rappresenta la directory nel percorso specificato. L'oggetto viene restituito a prescindere dal fatto che esista già una directory nel percorso specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tutte le directory specificate nelle `path` vengono creati, a meno che non sono già presenti o meno una parte del `path` non è valido. Se la directory esiste già, questo metodo non crea una nuova directory, ma restituisce un <xref:System.IO.DirectoryInfo> oggetto per la directory esistente.  
  
 Il `path` parametro specifica un percorso di directory, non un percorso di file.  
  
 Gli spazi finali vengono rimossi dalla fine del `path` parametro prima della creazione della directory.  
  
 È possibile creare una directory in un computer remoto, in una condivisione di aver accesso in scrittura. Sono supportati i percorsi UNC. ad esempio, è possibile specificare gli argomenti seguenti per `path`: `\\2009\Archives\December` in Visual Basic e `\\\\2009\\Archives\\December` nel linguaggio c#.  
  
 Creare una directory usando solo il carattere due punti (:) non è supportata e genererà un `NotSupportedException` generata.  
  
   
  
## Examples  
 Nell'esempio seguente crea ed elimina la directory specificata.  
  
 [!code-cpp[Dir_CreateDir#1](~/samples/snippets/cpp/VS_Snippets_CLR/Dir_CreateDir/CPP/dir_createdir.cpp#1)]
 [!code-csharp[Dir_CreateDir#1](~/samples/snippets/csharp/VS_Snippets_CLR/Dir_CreateDir/CS/dir_createdir.cs#1)]
 [!code-vb[Dir_CreateDir#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dir_CreateDir/VB/dir_createdir.vb#1)]  
  
 Per creare la directory C:\Users\User1\Public\Html quando la directory corrente sia C:\Users\User1, usare una delle chiamate seguenti per assicurarsi che la barra rovesciata venga interpretata correttamente.  
  
 In Visual Basic:  
  
```  
Directory.CreateDirectory("Public\Html")   
    Directory.CreateDirectory("\Users\User1\Public\Html")   
    Directory.CreateDirectory("c:\Users\User1\Public\Html")  
```  
  
 In C#:  
  
```  
Directory.CreateDirectory("Public\\Html");  
    Directory.CreateDirectory("\\Users\\User1\\Public\\Html");  
    Directory.CreateDirectory("c:\\Users\\User1\\Public\\Html");  
```  
  
 In C++:  
  
```  
Directory::CreateDirectory("Public\\Html");  
    Directory::CreateDirectory("\\Users\\User1\\Public\\Html");  
    Directory::CreateDirectory("c:\\Users\\User1\\Public\\Html");  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">La directory specificata da <paramref name="path" /> è un file.  
  
oppure 
Il nome della rete non è noto.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
oppure 
 <paramref name="path" /> è preceduto da, o contiene, solo un carattere due punti (:).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="path" /> contiene un carattere due punti (:) che non fa parte di un'etichetta di unità ("C:\\").</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per la lettura e scrittura di file o directory. Enumerazioni associate: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></permission>
        <altmember cref="T:System.IO.DirectoryInfo" />
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDirectory">
      <MemberSignature Language="C#" Value="public static System.IO.DirectoryInfo CreateDirectory (string path, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.DirectoryInfo CreateDirectory(string path, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::DirectoryInfo ^ CreateDirectory(System::String ^ path, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="static member CreateDirectory : string * System.Security.AccessControl.DirectorySecurity -&gt; System.IO.DirectoryInfo" Usage="System.IO.Directory.CreateDirectory (path, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="path">Directory da creare.</param>
        <param name="directorySecurity">Controllo di accesso da applicare alla directory.</param>
        <summary>Crea tutte le directory nel percorso specificato, a meno che non esistano già, e applica la sicurezza di Windows specificata.</summary>
        <returns>Oggetto che rappresenta la directory nel percorso specificato. L'oggetto viene restituito a prescindere dal fatto che esista già una directory nel percorso specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo overload del metodo per creare una directory con controllo degli accessi, pertanto non c'è alcuna possibilità che di accesso può essere eseguito prima che venga applicata la protezione.  
  
 Tutte le directory specificate nella `path` parametro vengono creati, a meno che non sono già presenti o meno una parte del `path` non è valido. Il `path` parametro specifica un percorso di directory, non un percorso di file. Se la directory esiste già, questo metodo non crea una nuova directory, ma restituisce un <xref:System.IO.DirectoryInfo> oggetto per la directory esistente.  
  
 Gli spazi finali vengono rimossi dalla fine del `path` parametro prima della creazione della directory.  
  
 È possibile creare una directory in un computer remoto, in una condivisione di aver accesso in scrittura. Sono supportati i percorsi UNC. ad esempio, è possibile specificare gli argomenti seguenti per `path`: `\\2009\Archives\December` in Visual Basic e `\\\\2009\\Archives\\December` nel linguaggio c#.  
  
 Creare una directory usando solo il carattere due punti (:) non è supportata e provoca un `NotSupportedException` generata.  
  
   
  
## Examples  
 L'esempio seguente crea una nuova directory con regole di accesso per due account utente.  
  
 [!code-csharp[System.IO.Directory#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Directory/CS/class7.cs#15)]
 [!code-vb[System.IO.Directory#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Directory/VB/class7.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">La directory specificata da <paramref name="path" /> è un file.  
  
oppure 
Il nome della rete non è noto.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
oppure 
 <paramref name="path" /> è preceduto da, o contiene, solo un carattere due punti (:).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="path" /> contiene un carattere due punti (:) che non fa parte di un'etichetta di unità ("C:\\").</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per la lettura e scrittura di file e directory e per l'accesso alla directory di destinazione. Enumerazioni associate: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Elimina una directory specificata e, facoltativamente, le eventuali sottodirectory.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member Delete : string -&gt; unit" Usage="System.IO.Directory.Delete path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Nome della directory vuota da rimuovere. La directory deve essere accessibile in scrittura e vuota.</param>
        <summary>Elimina una directory vuota dal percorso specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo si comporta in modo identico a <xref:System.IO.Directory.Delete%28System.String%2CSystem.Boolean%29> con `false` specificato per il secondo parametro.  
  
 Il `path` parametro può specificare un percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 Gli spazi finali vengono rimossi dalla fine del `path` parametro prima di eliminare la directory.  
  
 Questo metodo genera un' <xref:System.IO.IOException> se la directory specificata nel `path` parametro contiene i file o sottodirectory.  
  
 Il `path` parametro non distinzione maiuscole/minuscole.  
  
 In alcuni casi, se la directory specificata è aperto in Esplora File, il <xref:System.IO.Directory.Delete%2A> metodo potrebbe non essere in grado di eliminarlo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare una nuova directory e sottodirectory e quindi eliminare solo la sottodirectory.  
  
 [!code-csharp[System.IO.Directory.Delete#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directory.delete/cs/class1.cs#1)]
 [!code-vb[System.IO.Directory.Delete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directory.delete/vb/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Un file con lo stesso nome e percorso specificati da <paramref name="path" /> esiste.  
  
oppure 
La directory è la directory di lavoro corrente dell'applicazione.  
  
oppure 
La directory specificata da <paramref name="path" /> non è vuota.  
  
oppure 
La directory è di sola lettura o contiene un file di sola lettura.  
  
oppure 
La directory è usata da un altro processo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="path" /> non esiste o non è stato trovato.  
  
oppure 
Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per la scrittura nella directory specificata. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></permission>
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string path, bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string path, bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.Delete(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (path As String, recursive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ path, bool recursive);" />
      <MemberSignature Language="F#" Value="static member Delete : string * bool -&gt; unit" Usage="System.IO.Directory.Delete (path, recursive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">Nome della directory da rimuovere.</param>
        <param name="recursive">
          <see langword="true" /> per rimuovere directory, sottodirectory e file in <paramref name="path" />; in caso contrario, <see langword="false" />.</param>
        <summary>Elimina la directory specificata e, se indicate, le sottodirectory e i file in essa contenuti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `path` parametro può specificare un percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 Gli spazi finali vengono rimossi dalla fine del `path` parametro prima di eliminare la directory.  
  
 Il `path` parametro non distinzione maiuscole/minuscole.  
  
 Se il `recursive` parametro è `true`, l'utente deve disporre dell'autorizzazione di scrittura per la directory corrente e per tutte le sottodirectory.  
  
 Il comportamento di questo metodo si differenzia leggermente quando si elimina una directory che contiene un reparse point, ad esempio un collegamento simbolico o un punto di montaggio. Se il punto di analisi è una directory, ad esempio un punto di montaggio, non è montato e il punto di montaggio viene eliminato. Questo metodo non è ricorsivo attraverso il punto di analisi. Se il punto di analisi è un collegamento simbolico in un file, il punto di analisi viene eliminato e non quello di destinazione del collegamento simbolico.  
  
 In alcuni casi, se la directory specificata è aperto in Esplora File, il <xref:System.IO.Directory.Delete%2A> metodo potrebbe non essere in grado di eliminarlo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare una nuova directory, sottodirectory e file nella sottodirectory, e quindi in modo ricorsivo eliminare tutti i nuovi elementi.  
  
 [!code-csharp[System.IO.Directory.Delete#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directory.delete/cs/class2.cs#2)]
 [!code-vb[System.IO.Directory.Delete#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directory.delete/vb/class2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Un file con lo stesso nome e percorso specificati da <paramref name="path" /> esiste.  
  
oppure 
La directory specificata da <paramref name="path" /> è di sola lettura o <paramref name="recursive" /> è <see langword="false" /> e <paramref name="path" /> non è una directory vuota.  
  
oppure 
La directory è la directory di lavoro corrente dell'applicazione.  
  
oppure 
La directory contiene un file di sola lettura.  
  
oppure 
La directory è usata da un altro processo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="path" /> non esiste o non è stato trovato.  
  
oppure 
Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per la scrittura nella directory specificata. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></permission>
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce una raccolta enumerabile dei nomi di directory che soddisfano i criteri specificati.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; EnumerateDirectories (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; EnumerateDirectories(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.EnumerateDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnumerateDirectories (path As String) As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ EnumerateDirectories(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member EnumerateDirectories : string -&gt; seq&lt;string&gt;" Usage="System.IO.Directory.EnumerateDirectories path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Percorso relativo o assoluto della directory in cui eseguire la ricerca. Stringa senza distinzione tra maiuscole e minuscole.</param>
        <summary>Restituisce una raccolta enumerabile dei nomi di directory in un percorso specificato.</summary>
        <returns>Raccolta enumerabile dei nomi completi (inclusi i percorsi) per le directory incluse nella directory specificata da <paramref name="path" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile specificare le informazioni sul percorso relativo o assoluto nel `path` parametro. Informazioni sul percorso relativo è interpretati rispetto alla directory di lavoro corrente, è possibile determinare eseguendo mediante il <xref:System.IO.Directory.GetCurrentDirectory%2A> (metodo). I nomi delle directory restituiti hanno il prefisso con il valore specificato nella finestra di `path` parametro. Ad esempio, se si specifica un percorso relativo nel `path` parametro, i nomi delle directory restituita conterrà un percorso relativo.  
  
 Il <xref:System.IO.Directory.EnumerateDirectories%2A> e <xref:System.IO.Directory.GetDirectories%2A> metodi differiscono nel modo seguente: quando si usa <xref:System.IO.Directory.EnumerateDirectories%2A>, è possibile avviare l'enumerazione dell'insieme di nomi prima che venga restituito l'intero insieme, quando si usa <xref:System.IO.Directory.GetDirectories%2A>, è necessario attendere l'intera matrice di nomi restituito prima che sia possibile accedere alla matrice. Pertanto, quando si lavora con molti file e directory, <xref:System.IO.Directory.EnumerateDirectories%2A> può risultare più efficiente.  
  
 La raccolta restituita non viene memorizzato nella cache; ogni chiamata al <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> sulla raccolta avvierà una nuova enumerazione.  
  
   
  
## Examples  
 Nell'esempio seguente enumera le directory di primo livello in un percorso specificato.  
  
 [!code-csharp[System.IO.EnumDirs1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.enumdirs1/cs/program.cs#1)]
 [!code-vb[System.IO.EnumDirs1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.enumdirs1/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti o contiene caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="path" /> non è valido, ad esempio fa riferimento a un'unità non mappata.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="path" /> è un nome file.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o la combinazione di entrambi supera la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; EnumerateDirectories (string path, string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; EnumerateDirectories(string path, string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnumerateDirectories (path As String, searchPattern As String) As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ EnumerateDirectories(System::String ^ path, System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="static member EnumerateDirectories : string * string -&gt; seq&lt;string&gt;" Usage="System.IO.Directory.EnumerateDirectories (path, searchPattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Percorso relativo o assoluto della directory in cui eseguire la ricerca. Stringa senza distinzione tra maiuscole e minuscole.</param>
        <param name="searchPattern">Stringa di ricerca in base alla quale confrontare i nomi delle directory in <paramref name="path" />.  Questo parametro può contenere una combinazione di caratteri del percorso letterale e caratteri jolly (* e ?) validi, ma non supporta le espressioni regolari.</param>
        <summary>Restituisce una raccolta enumerabile di nomi di directory che corrispondono a un criterio di ricerca in un percorso specificato.</summary>
        <returns>Raccolta enumerabile dei nomi completi (inclusi i percorsi) per le directory incluse nella directory specificata da <paramref name="path" /> e corrispondenti al criterio di ricerca specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `searchPattern` può essere una combinazione di caratteri letterali e caratteri jolly, ma non supporta le espressioni regolari. I seguenti caratteri jolly sono consentiti nelle `searchPattern`.  
  
|Identificatore con caratteri jolly|Corrispondenze|  
|------------------------|-------------|  
|\* (asterisco)|Zero o più caratteri in tale posizione.|  
|? (punto interrogativo)|Zero o un carattere in quella posizione.|  
  
 I caratteri diversi dal carattere jolly sono caratteri letterali. Ad esempio, il `searchPattern` stringa "\*t" Cerca tutti i nomi in `path` che terminano con la lettera "t". Il `searchPattern` stringa "s\*" Cerca tutti i nomi in `path` iniziano con la lettera "s".  
  
 `searchPattern` non può terminare con due punti ("..") o contenere due punti ("..") seguito da <xref:System.IO.Path.DirectorySeparatorChar> o <xref:System.IO.Path.AltDirectorySeparatorChar>, né può contenere caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <xref:System.IO.Path.GetInvalidPathChars%2A>.  
  
 È possibile specificare le informazioni sul percorso relativo o assoluto nel `path` parametro. Informazioni sul percorso relativo è interpretati rispetto alla directory di lavoro corrente, è possibile determinare eseguendo mediante il <xref:System.IO.Directory.GetCurrentDirectory%2A> (metodo). I nomi delle directory restituiti hanno il prefisso con il valore specificato nella finestra di `path` parametro. Ad esempio, se si specifica un percorso relativo nel `path` parametro, i nomi delle directory restituita conterrà un percorso relativo.  
  
 Il <xref:System.IO.Directory.EnumerateDirectories%2A> e <xref:System.IO.Directory.GetDirectories%2A> metodi differiscono nel modo seguente: quando si usa <xref:System.IO.Directory.EnumerateDirectories%2A>, è possibile avviare l'enumerazione dell'insieme di nomi prima che venga restituito l'intero insieme, quando si usa <xref:System.IO.Directory.GetDirectories%2A>, è necessario attendere l'intera matrice di nomi restituito prima che sia possibile accedere alla matrice. Pertanto, quando si lavora con molti file e directory, <xref:System.IO.Directory.EnumerateDirectories%2A> può risultare più efficiente.  
  
 La raccolta restituita non viene memorizzato nella cache; ogni chiamata al <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> sulla raccolta avvierà una nuova enumerazione.  
  
   
  
## Examples  
 Nell'esempio seguente enumera le directory di primo livello in un percorso specificato che corrispondono a un criterio di ricerca specificati.  
  
 [!code-csharp[System.IO.EnumDirs2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.enumdirs2/cs/program.cs#1)]
 [!code-vb[System.IO.EnumDirs2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.enumdirs2/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti o contiene caratteri non validi. È possibile eseguire una query per i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
\- oppure - 
 <paramref name="searchPattern" /> non contiene un modello valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.  
  
oppure 
 <paramref name="searchPattern" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="path" /> non è valido, ad esempio fa riferimento a un'unità non mappata.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="path" /> è un nome file.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o la combinazione di entrambi supera la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; EnumerateDirectories (string path, string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; EnumerateDirectories(string path, string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ EnumerateDirectories(System::String ^ path, System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="static member EnumerateDirectories : string * string * System.IO.EnumerationOptions -&gt; seq&lt;string&gt;" Usage="System.IO.Directory.EnumerateDirectories (path, searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; EnumerateDirectories (string path, string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; EnumerateDirectories(string path, string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ EnumerateDirectories(System::String ^ path, System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="static member EnumerateDirectories : string * string * System.IO.SearchOption -&gt; seq&lt;string&gt;" Usage="System.IO.Directory.EnumerateDirectories (path, searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="path">Percorso relativo o assoluto della directory in cui eseguire la ricerca. Stringa senza distinzione tra maiuscole e minuscole.</param>
        <param name="searchPattern">Stringa di ricerca in base alla quale confrontare i nomi delle directory in <paramref name="path" />.  Questo parametro può contenere una combinazione di caratteri del percorso letterale e caratteri jolly (* e ?) validi, ma non supporta le espressioni regolari.</param>
        <param name="searchOption">Uno dei valori di enumerazione che specifica se l'operazione di ricerca deve includere solo la directory corrente o tutte le sottodirectory.  
  
Il valore predefinito è <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</param>
        <summary>Restituisce una raccolta enumerabile di nomi di directory che corrispondono a un criterio di ricerca in un percorso specificato e con ricerca facoltativa nelle sottodirectory.</summary>
        <returns>Raccolta enumerabile dei nomi completi (inclusi i percorsi) per le directory nella directory specificata da <paramref name="path" /> e corrispondenti al criterio e all'opzione di ricerca specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `searchPattern` può essere una combinazione di caratteri letterali e caratteri jolly, ma non supporta le espressioni regolari. I seguenti caratteri jolly sono consentiti nelle `searchPattern`.  
  
|Identificatore con caratteri jolly|Corrispondenze|  
|------------------------|-------------|  
|\* (asterisco)|Zero o più caratteri in tale posizione.|  
|? (punto interrogativo)|Esattamente un carattere in quella posizione.|  
  
 I caratteri diversi dal carattere jolly sono caratteri letterali. Ad esempio, il `searchPattern` stringa "\*t" Cerca tutti i nomi in `path` che terminano con la lettera "t". Il `searchPattern` stringa "s\*" Cerca tutti i nomi in `path` iniziano con la lettera "s".  
  
 `searchPattern` non può terminare con due punti ("..") o contenere due punti ("..") seguito da <xref:System.IO.Path.DirectorySeparatorChar> o <xref:System.IO.Path.AltDirectorySeparatorChar>, né può contenere caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <xref:System.IO.Path.GetInvalidPathChars%2A>.  
  
 È possibile specificare le informazioni sul percorso relativo o assoluto nel `path` parametro. Informazioni sul percorso relativo è interpretati rispetto alla directory di lavoro corrente, è possibile determinare eseguendo mediante il <xref:System.IO.Directory.GetCurrentDirectory%2A> (metodo). I nomi delle directory restituiti hanno il prefisso con il valore specificato nella finestra di `path` parametro. Ad esempio, se si specifica un percorso relativo nel `path` parametro, i nomi delle directory restituita conterrà un percorso relativo.  
  
 Il <xref:System.IO.Directory.EnumerateDirectories%2A> e <xref:System.IO.Directory.GetDirectories%2A> metodi differiscono nel modo seguente: quando si usa <xref:System.IO.Directory.EnumerateDirectories%2A>, è possibile avviare l'enumerazione dell'insieme di nomi prima che venga restituito l'intero insieme, quando si usa <xref:System.IO.Directory.GetDirectories%2A>, è necessario attendere l'intera matrice di nomi restituito prima che sia possibile accedere alla matrice. Pertanto, quando si lavora con molti file e directory, <xref:System.IO.Directory.EnumerateDirectories%2A> può risultare più efficiente.  
  
 La raccolta restituita non viene memorizzato nella cache; ogni chiamata al <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> sulla raccolta avvierà una nuova enumerazione.  
  
   
  
## Examples  
 Nell'esempio seguente enumera le directory in un percorso specificato che corrispondono a un criterio di ricerca specificati. Usa il `searchOption` parametro per specificare che tutte le sottodirectory devono essere inclusi nella ricerca.  
  
 [!code-csharp[System.IO.EnumDirs3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.enumdirs3/cs/program.cs#1)]
 [!code-vb[System.IO.EnumDirs3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.enumdirs3/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti o contiene caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
\- oppure - 
 <paramref name="searchPattern" /> non contiene un modello valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.  
  
oppure 
 <paramref name="searchPattern" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="searchOption" /> non è un valore <see cref="T:System.IO.SearchOption" /> valido.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="path" /> non è valido, ad esempio fa riferimento a un'unità non mappata.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="path" /> è un nome file.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o la combinazione di entrambi supera la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce una raccolta enumerabile dei nomi di file che soddisfano i criteri specificati.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; EnumerateFiles (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; EnumerateFiles(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.EnumerateFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnumerateFiles (path As String) As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ EnumerateFiles(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member EnumerateFiles : string -&gt; seq&lt;string&gt;" Usage="System.IO.Directory.EnumerateFiles path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Percorso relativo o assoluto della directory in cui eseguire la ricerca. Stringa senza distinzione tra maiuscole e minuscole.</param>
        <summary>Restituisce una raccolta enumerabile dei nomi di file in un percorso specificato.</summary>
        <returns>Raccolta enumerabile dei nomi completi (inclusi i percorsi) per i file inclusi nella directory specificata da <paramref name="path" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile specificare le informazioni di percorso relativo con la `path` parametro. Informazioni sul percorso relativo è interpretati rispetto alla directory di lavoro corrente, è possibile determinare eseguendo mediante il <xref:System.IO.Directory.GetCurrentDirectory%2A> (metodo).  
  
 Il <xref:System.IO.Directory.EnumerateFiles%2A> e <xref:System.IO.Directory.GetFiles%2A> metodi differiscono nel modo seguente: quando si usa <xref:System.IO.Directory.EnumerateFiles%2A>, è possibile avviare l'enumerazione dell'insieme di nomi prima che venga restituito l'intero insieme, quando si usa <xref:System.IO.Directory.GetFiles%2A>, è necessario attendere l'intera matrice di nomi restituito prima che sia possibile accedere alla matrice. Pertanto, quando si lavora con molti file e directory, <xref:System.IO.Directory.EnumerateFiles%2A> può risultare più efficiente.  
  
 La raccolta restituita non viene memorizzato nella cache; ogni chiamata al <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> sulla raccolta avvierà una nuova enumerazione.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come recuperare tutti i file in una directory e spostarli in una nuova directory. Dopo che i file vengono spostati, non esistono più nella directory originale.  
  
 [!code-csharp[System.IO.Directory#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Directory/CS/class4.cs#12)]
 [!code-vb[System.IO.Directory#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Directory/VB/class4.vb#12)]  
  
 Nell'esempio seguente enumera i file nella directory specificata, legge ogni riga del file e viene visualizzata la riga contiene la stringa "Europe".  
  
 [!code-csharp[System.IO.Directory.EnumFiles#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directory.enumfiles/cs/program.cs#1)]
 [!code-vb[System.IO.Directory.EnumFiles#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directory.enumfiles/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti o contiene caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="path" /> non è valido, ad esempio fa riferimento a un'unità non mappata.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="path" /> è un nome file.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o la combinazione di entrambi supera la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; EnumerateFiles (string path, string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; EnumerateFiles(string path, string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.EnumerateFiles(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnumerateFiles (path As String, searchPattern As String) As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ EnumerateFiles(System::String ^ path, System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="static member EnumerateFiles : string * string -&gt; seq&lt;string&gt;" Usage="System.IO.Directory.EnumerateFiles (path, searchPattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Percorso relativo o assoluto della directory in cui eseguire la ricerca. Stringa senza distinzione tra maiuscole e minuscole.</param>
        <param name="searchPattern">Stringa di ricerca in base alla quale confrontare i nomi dei file in <paramref name="path" />.  Questo parametro può contenere una combinazione di caratteri del percorso letterale e caratteri jolly (* e ?) validi, ma non supporta le espressioni regolari.</param>
        <summary>Restituisce una raccolta enumerabile di nomi di file che corrispondono a un criterio di ricerca in un percorso specificato.</summary>
        <returns>Raccolta enumerabile dei nomi completi (inclusi i percorsi) per i file inclusi nella directory specificata da <paramref name="path" /> e corrispondenti al criterio di ricerca specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `searchPattern` può essere una combinazione di caratteri letterali e caratteri jolly, ma non supporta le espressioni regolari. I seguenti caratteri jolly sono consentiti nelle `searchPattern`.  
  
|Identificatore con caratteri jolly|Corrispondenze|  
|------------------------|-------------|  
|\* (asterisco)|Zero o più caratteri in tale posizione.|  
|? (punto interrogativo)|Zero o un carattere in quella posizione.|  
  
 I caratteri diversi dal carattere jolly sono caratteri letterali. Ad esempio, il `searchPattern` stringa "\*t" Cerca tutti i nomi in `path` che terminano con la lettera "t". Il `searchPattern` stringa "s\*" Cerca tutti i nomi in `path` iniziano con la lettera "s".  
  
> [!NOTE]
>  Quando si usa il carattere jolly asterisco in un' `searchPattern` , ad esempio "\*. txt", il numero di caratteri nell'estensione specificato influisce sulla ricerca nel modo seguente:  
>   
>  -   Se l'estensione specificata è esattamente tre caratteri, il metodo restituisce i file con estensioni che iniziano con l'estensione specificata. Ad esempio, "\*xls" restituisce "book.xls" e "book.xlsx".  
> -   In tutti gli altri casi, il metodo restituisce i file che corrispondono esattamente l'estensione specificata. Ad esempio, "\*interno" restituisce "file.ai" ma non "file.aif".  
>   
>  Quando si usa il carattere jolly punto interrogativo, questo metodo restituisce solo i file che corrispondono all'estensione di file specificato. Ad esempio, ha due file, "file1" e "file1. txtother", in una directory, un criterio di ricerca di "file?. txt"restituisce solo il primo file, mentre un criterio di ricerca di" file\*. txt "restituisce entrambi i file.  
  
 `searchPattern` non può terminare con due punti ("..") o contenere due punti ("..") seguito da <xref:System.IO.Path.DirectorySeparatorChar> o <xref:System.IO.Path.AltDirectorySeparatorChar>, né può contenere caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <xref:System.IO.Path.GetInvalidPathChars%2A>.  
  
 È possibile specificare le informazioni di percorso relativo con la `path` parametro. Informazioni sul percorso relativo è interpretati rispetto alla directory di lavoro corrente, è possibile determinare eseguendo mediante il <xref:System.IO.Directory.GetCurrentDirectory%2A> (metodo).  
  
 Il <xref:System.IO.Directory.EnumerateFiles%2A> e <xref:System.IO.Directory.GetFiles%2A> metodi differiscono nel modo seguente: quando si usa <xref:System.IO.Directory.EnumerateFiles%2A>, è possibile avviare l'enumerazione dell'insieme di nomi prima che venga restituito l'intero insieme, quando si usa <xref:System.IO.Directory.GetFiles%2A>, è necessario attendere l'intera matrice di nomi restituito prima che sia possibile accedere alla matrice. Pertanto, quando si lavora con molti file e directory, <xref:System.IO.Directory.EnumerateFiles%2A> può risultare più efficiente.  
  
 La raccolta restituita non viene memorizzato nella cache; ogni chiamata al <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> sulla raccolta avvierà una nuova enumerazione.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come recuperare tutti i file di testo in una directory e spostarli in una nuova directory. Dopo che i file vengono spostati, non esistono più nella directory originale.  
  
 [!code-csharp[System.IO.Directory#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Directory/CS/class2.cs#10)]
 [!code-vb[System.IO.Directory#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Directory/VB/class2.vb#10)]  
  
 Nell'esempio seguente enumera i file nella directory specificata che hanno un'estensione di file con estensione txt, legge ogni riga del file e viene visualizzata la riga contiene la stringa "Europe".  
  
 [!code-csharp[System.IO.Directory.EnumFiles2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directory.enumfiles2/cs/program.cs#1)]
 [!code-vb[System.IO.Directory.EnumFiles2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directory.enumfiles2/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti o contiene caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
\- oppure - 
 <paramref name="searchPattern" /> non contiene un modello valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.  
  
oppure 
 <paramref name="searchPattern" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="path" /> non è valido, ad esempio fa riferimento a un'unità non mappata.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="path" /> è un nome file.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o la combinazione di entrambi supera la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; EnumerateFiles (string path, string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; EnumerateFiles(string path, string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ EnumerateFiles(System::String ^ path, System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="static member EnumerateFiles : string * string * System.IO.EnumerationOptions -&gt; seq&lt;string&gt;" Usage="System.IO.Directory.EnumerateFiles (path, searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; EnumerateFiles (string path, string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; EnumerateFiles(string path, string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ EnumerateFiles(System::String ^ path, System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="static member EnumerateFiles : string * string * System.IO.SearchOption -&gt; seq&lt;string&gt;" Usage="System.IO.Directory.EnumerateFiles (path, searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="path">Percorso relativo o assoluto della directory in cui eseguire la ricerca. Stringa senza distinzione tra maiuscole e minuscole.</param>
        <param name="searchPattern">Stringa di ricerca in base alla quale confrontare i nomi dei file in <paramref name="path" />.  Questo parametro può contenere una combinazione di caratteri del percorso letterale e caratteri jolly (* e ?) validi, ma non supporta le espressioni regolari.</param>
        <param name="searchOption">Uno dei valori di enumerazione che specifica se l'operazione di ricerca deve includere solo la directory corrente o tutte le sottodirectory.  
  
Il valore predefinito è <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</param>
        <summary>Restituisce una raccolta enumerabile di nomi di file che corrispondono a un criterio di ricerca in un percorso specificato e con ricerca facoltativa nelle sottodirectory.</summary>
        <returns>Raccolta enumerabile dei nomi completi (inclusi i percorsi) per i file inclusi nella directory specificata da <paramref name="path" /> e corrispondenti al criterio e all'opzione di ricerca specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `searchPattern` può essere una combinazione di caratteri letterali e caratteri jolly, ma non supporta le espressioni regolari. I seguenti caratteri jolly sono consentiti nelle `searchPattern`.  
  
|Identificatore con caratteri jolly|Corrispondenze|  
|------------------------|-------------|  
|\* (asterisco)|Zero o più caratteri in tale posizione.|  
|? (punto interrogativo)|Zero o un carattere in quella posizione.|  
  
 I caratteri diversi dal carattere jolly sono caratteri letterali. Ad esempio, il `searchPattern` stringa "\*t" Cerca tutti i nomi in `path` che terminano con la lettera "t". Il `searchPattern` stringa "s\*" Cerca tutti i nomi in `path` iniziano con la lettera "s".  
  
> [!NOTE]
>  Quando si usa il carattere jolly asterisco in un' `searchPattern` , ad esempio "\*. txt", il numero di caratteri nell'estensione specificato influisce sulla ricerca nel modo seguente:  
>   
>  -   Se l'estensione specificata è esattamente tre caratteri, il metodo restituisce i file con estensioni che iniziano con l'estensione specificata. Ad esempio, "\*xls" restituisce "book.xls" e "book.xlsx".  
> -   In tutti gli altri casi, il metodo restituisce i file che corrispondono esattamente l'estensione specificata. Ad esempio, "\*interno" restituisce "file.ai" ma non "file.aif".  
>   
>  Quando si usa il carattere jolly punto interrogativo, questo metodo restituisce solo i file che corrispondono all'estensione di file specificato. Ad esempio, ha due file, "file1" e "file1. txtother", in una directory, un criterio di ricerca di "file?. txt"restituisce solo il primo file, mentre un criterio di ricerca di" file\*. txt "restituisce entrambi i file.  
  
 `searchPattern` non può terminare con due punti ("..") o contenere due punti ("..") seguito da <xref:System.IO.Path.DirectorySeparatorChar> o <xref:System.IO.Path.AltDirectorySeparatorChar>, né può contenere caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <xref:System.IO.Path.GetInvalidPathChars%2A>.  
  
 È possibile specificare le informazioni di percorso relativo con la `path` parametro. Informazioni sul percorso relativo è interpretati rispetto alla directory di lavoro corrente, è possibile determinare eseguendo mediante il <xref:System.IO.Directory.GetCurrentDirectory%2A> (metodo).  
  
 Il <xref:System.IO.Directory.EnumerateFiles%2A> e <xref:System.IO.Directory.GetFiles%2A> metodi differiscono nel modo seguente: quando si usa <xref:System.IO.Directory.EnumerateFiles%2A>, è possibile avviare l'enumerazione dell'insieme di nomi prima che venga restituito l'intero insieme, quando si usa <xref:System.IO.Directory.GetFiles%2A>, è necessario attendere l'intera matrice di nomi restituito prima che sia possibile accedere alla matrice. Pertanto, quando si lavora con molti file e directory, <xref:System.IO.Directory.EnumerateFiles%2A> può risultare più efficiente.  
  
 La raccolta restituita non viene memorizzato nella cache; ogni chiamata al <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> sulla raccolta avvierà una nuova enumerazione.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come recuperare tutti i file di testo in una directory e nelle relative sottodirectory e spostarli in una nuova directory. Dopo che i file vengono spostati, non esistono più nelle directory originali.  
  
 [!code-csharp[System.IO.Directory#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Directory/CS/class5.cs#13)]
 [!code-vb[System.IO.Directory#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Directory/VB/class5.vb#13)]  
  
 In modo ricorsivo l'esempio seguente enumera tutti i file con estensione txt, legge ogni riga del file e viene visualizzata la riga se contiene la stringa "Microsoft".  
  
 [!code-csharp[System.IO.Directory.EnumerateFiles#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directory.enumeratefiles/cs/program.cs#1)]
 [!code-vb[System.IO.Directory.EnumerateFiles#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directory.enumeratefiles/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti o contiene caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
\- oppure - 
 <paramref name="searchPattern" /> non contiene un modello valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.  
  
oppure 
 <paramref name="searchPattern" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="searchOption" /> non è un valore <see cref="T:System.IO.SearchOption" /> valido.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="path" /> non è valido, ad esempio fa riferimento a un'unità non mappata.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="path" /> è un nome file.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o la combinazione di entrambi supera la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFileSystemEntries">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce una raccolta enumerabile di voci di file system che soddisfano i criteri specificati.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFileSystemEntries">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; EnumerateFileSystemEntries (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; EnumerateFileSystemEntries(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnumerateFileSystemEntries (path As String) As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ EnumerateFileSystemEntries(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member EnumerateFileSystemEntries : string -&gt; seq&lt;string&gt;" Usage="System.IO.Directory.EnumerateFileSystemEntries path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Percorso relativo o assoluto della directory in cui eseguire la ricerca. Stringa senza distinzione tra maiuscole e minuscole.</param>
        <summary>Restituisce una raccolta enumerabile di nomi di file e di directory in un percorso specificato.</summary>
        <returns>Raccolta enumerabile dei nomi di voci di file system nella directory specificata da <paramref name="path" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile specificare le informazioni di percorso relativo con la `path` parametro. Informazioni sul percorso relativo è interpretati rispetto alla directory di lavoro corrente, è possibile determinare eseguendo mediante il <xref:System.IO.Directory.GetCurrentDirectory%2A> (metodo).  
  
 Il <xref:System.IO.Directory.EnumerateFileSystemEntries%2A> e <xref:System.IO.Directory.GetFileSystemEntries%2A> metodi differiscono nel modo seguente: quando si usa <xref:System.IO.Directory.EnumerateFileSystemEntries%2A>, è possibile avviare tale enumerazione della raccolta di voci prima che venga restituito l'intero insieme, quando si usa <xref:System.IO.Directory.GetFileSystemEntries%2A>, è necessario attendere l'intera matrice di voci da da restituire prima che sia possibile accedere alla matrice. Pertanto, quando si lavora con molti file e directory, <xref:System.IO.Directory.EnumerateFiles%2A> può risultare più efficiente.  
  
 La raccolta restituita non viene memorizzato nella cache; ogni chiamata al <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> sulla raccolta avvierà una nuova enumerazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti o contiene caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="path" /> non è valido, ad esempio fa riferimento a un'unità non mappata.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="path" /> è un nome file.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o la combinazione di entrambi supera la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemEntries">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; EnumerateFileSystemEntries (string path, string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; EnumerateFileSystemEntries(string path, string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnumerateFileSystemEntries (path As String, searchPattern As String) As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ EnumerateFileSystemEntries(System::String ^ path, System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="static member EnumerateFileSystemEntries : string * string -&gt; seq&lt;string&gt;" Usage="System.IO.Directory.EnumerateFileSystemEntries (path, searchPattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Percorso relativo o assoluto della directory in cui eseguire la ricerca. Stringa senza distinzione tra maiuscole e minuscole.</param>
        <param name="searchPattern">Stringa di ricerca in base alla quale confrontare i nomi delle voci di file system in <paramref name="path" />.  Questo parametro può contenere una combinazione di caratteri del percorso letterale e caratteri jolly (* e ?) validi, ma non supporta le espressioni regolari.</param>
        <summary>Restituisce una raccolta enumerabile di nomi di file e di directory che corrispondono a un criterio di ricerca in un percorso specificato.</summary>
        <returns>Raccolta enumerabile di voci di file system nella directory specificata da <paramref name="path" /> e corrispondenti al criterio di ricerca specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `searchPattern` può essere una combinazione di caratteri letterali e caratteri jolly, ma non supporta le espressioni regolari. I seguenti caratteri jolly sono consentiti nelle `searchPattern`...  
  
|Identificatore con caratteri jolly|Corrispondenze|  
|------------------------|-------------|  
|\* (asterisco)|Zero o più caratteri in tale posizione.|  
|? (punto interrogativo)|Zero o un carattere in quella posizione.|  
  
 I caratteri diversi dal carattere jolly sono caratteri letterali. Ad esempio, il `searchPattern` stringa "\*t" Cerca tutti i nomi in `path` che terminano con la lettera "t". Il `searchPattern` stringa "s\*" Cerca tutti i nomi in `path` iniziano con la lettera "s".  
  
> [!NOTE]
>  Quando si usa il carattere jolly asterisco in un' `searchPattern` , ad esempio "\*. txt", il numero di caratteri nell'estensione specificato influisce sulla ricerca nel modo seguente:  
>   
>  -   Se l'estensione specificata è esattamente tre caratteri, il metodo restituisce i file con estensioni che iniziano con l'estensione specificata. Ad esempio, "\*xls" restituisce "book.xls" e "book.xlsx".  
> -   In tutti gli altri casi, il metodo restituisce i file che corrispondono esattamente l'estensione specificata. Ad esempio, "\*interno" restituisce "file.ai" ma non "file.aif".  
>   
>  Quando si usa il carattere jolly punto interrogativo, questo metodo restituisce solo i file che corrispondono all'estensione di file specificato. Ad esempio, ha due file, "file1" e "file1. txtother", in una directory, un criterio di ricerca di "file?. txt"restituisce solo il primo file, mentre un criterio di ricerca di" file\*. txt "restituisce entrambi i file.  
  
 `searchPattern` non può terminare con due punti ("..") o contenere due punti ("..") seguito da <xref:System.IO.Path.DirectorySeparatorChar> o <xref:System.IO.Path.AltDirectorySeparatorChar>, né può contenere caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <xref:System.IO.Path.GetInvalidPathChars%2A>.  
  
 È possibile specificare le informazioni di percorso relativo con la `path` parametro. Informazioni sul percorso relativo è interpretati rispetto alla directory di lavoro corrente, è possibile determinare eseguendo mediante il <xref:System.IO.Directory.GetCurrentDirectory%2A> (metodo).  
  
 Il <xref:System.IO.Directory.EnumerateFileSystemEntries%2A> e <xref:System.IO.Directory.GetFileSystemEntries%2A> metodi differiscono nel modo seguente: quando si usa <xref:System.IO.Directory.EnumerateFileSystemEntries%2A>, è possibile avviare tale enumerazione della raccolta di voci prima che venga restituito l'intero insieme, quando si usa <xref:System.IO.Directory.GetFileSystemEntries%2A>, è necessario attendere l'intera matrice di voci da da restituire prima che sia possibile accedere alla matrice. Pertanto, quando si lavora con molti file e directory, <xref:System.IO.Directory.EnumerateFiles%2A> può risultare più efficiente.  
  
 La raccolta restituita non viene memorizzato nella cache; ogni chiamata al <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> sulla raccolta avvierà una nuova enumerazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti o contiene caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
\- oppure - 
 <paramref name="searchPattern" /> non contiene un modello valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.  
  
oppure 
 <paramref name="searchPattern" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="path" /> non è valido, ad esempio fa riferimento a un'unità non mappata.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="path" /> è un nome file.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o la combinazione di entrambi supera la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemEntries">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; EnumerateFileSystemEntries (string path, string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; EnumerateFileSystemEntries(string path, string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ EnumerateFileSystemEntries(System::String ^ path, System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="static member EnumerateFileSystemEntries : string * string * System.IO.EnumerationOptions -&gt; seq&lt;string&gt;" Usage="System.IO.Directory.EnumerateFileSystemEntries (path, searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemEntries">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; EnumerateFileSystemEntries (string path, string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; EnumerateFileSystemEntries(string path, string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ EnumerateFileSystemEntries(System::String ^ path, System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="static member EnumerateFileSystemEntries : string * string * System.IO.SearchOption -&gt; seq&lt;string&gt;" Usage="System.IO.Directory.EnumerateFileSystemEntries (path, searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="path">Percorso relativo o assoluto della directory in cui eseguire la ricerca. Stringa senza distinzione tra maiuscole e minuscole.</param>
        <param name="searchPattern">Stringa di ricerca in base alla quale confrontare le voci di file system in <paramref name="path" />.  Questo parametro può contenere una combinazione di caratteri del percorso letterale e caratteri jolly (* e ?) validi, ma non supporta le espressioni regolari.</param>
        <param name="searchOption">Uno dei valori di enumerazione che specifica se l'operazione di ricerca deve includere solo la directory corrente o tutte le sottodirectory.  
  
Il valore predefinito è <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</param>
        <summary>Restituisce una raccolta enumerabile di nomi di file e di directory che corrispondono a un criterio di ricerca in un percorso specificato e con ricerca facoltativa nelle sottodirectory.</summary>
        <returns>Raccolta enumerabile di voci di file system nella directory specificata da <paramref name="path" /> e corrispondenti al criterio e all'opzione di ricerca specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `searchPattern` può essere una combinazione di caratteri letterali e caratteri jolly, ma non supporta le espressioni regolari. I seguenti caratteri jolly sono consentiti nelle `searchPattern`.  
  
|Identificatore con caratteri jolly|Corrispondenze|  
|------------------------|-------------|  
|\* (asterisco)|Zero o più caratteri in tale posizione.|  
|? (punto interrogativo)|Zero o un carattere in quella posizione.|  
  
 I caratteri diversi dal carattere jolly sono caratteri letterali. Ad esempio, il `searchPattern` stringa "\*t" Cerca tutti i nomi in `path` che terminano con la lettera "t". Il `searchPattern` stringa "s\*" Cerca tutti i nomi in `path` iniziano con la lettera "s".  
  
> [!NOTE]
>  Quando si usa il carattere jolly asterisco in un' `searchPattern` , ad esempio "\*. txt", il numero di caratteri nell'estensione specificato influisce sulla ricerca nel modo seguente:  
>   
>  -   Se l'estensione specificata è esattamente tre caratteri, il metodo restituisce i file con estensioni che iniziano con l'estensione specificata. Ad esempio, "\*xls" restituisce "book.xls" e "book.xlsx".  
> -   In tutti gli altri casi, il metodo restituisce i file che corrispondono esattamente l'estensione specificata. Ad esempio, "\*interno" restituisce "file.ai" ma non "file.aif".  
>   
>  Quando si usa il carattere jolly punto interrogativo, questo metodo restituisce solo i file che corrispondono all'estensione di file specificato. Ad esempio, ha due file, "file1" e "file1. txtother", in una directory, un criterio di ricerca di "file?. txt"restituisce solo il primo file, mentre un criterio di ricerca di" file\*. txt "restituisce entrambi i file.  
  
 `searchPattern` non può terminare con due punti ("..") o contenere due punti ("..") seguito da <xref:System.IO.Path.DirectorySeparatorChar> o <xref:System.IO.Path.AltDirectorySeparatorChar>, né può contenere caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <xref:System.IO.Path.GetInvalidPathChars%2A>.  
  
 È possibile specificare le informazioni di percorso relativo con la `path` parametro. Informazioni sul percorso relativo è interpretati rispetto alla directory di lavoro corrente, è possibile determinare eseguendo mediante il <xref:System.IO.Directory.GetCurrentDirectory%2A> (metodo).  
  
 Il <xref:System.IO.Directory.EnumerateFileSystemEntries%2A> e <xref:System.IO.Directory.GetFileSystemEntries%2A> metodi differiscono nel modo seguente: quando si usa <xref:System.IO.Directory.EnumerateFileSystemEntries%2A>, è possibile avviare tale enumerazione della raccolta di voci prima che venga restituito l'intero insieme, quando si usa <xref:System.IO.Directory.GetFileSystemEntries%2A>, è necessario attendere l'intera matrice di voci da da restituire prima che sia possibile accedere alla matrice. Pertanto, quando si lavora con molti file e directory, <xref:System.IO.Directory.EnumerateFiles%2A> può risultare più efficiente.  
  
 La raccolta restituita non viene memorizzato nella cache; ogni chiamata al <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> sulla raccolta avvierà una nuova enumerazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti o contiene caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
\- oppure - 
 <paramref name="searchPattern" /> non contiene un modello valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.  
  
oppure 
 <paramref name="searchPattern" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="searchOption" /> non è un valore <see cref="T:System.IO.SearchOption" /> valido.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="path" /> non è valido, ad esempio fa riferimento a un'unità non mappata.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="path" /> è un nome file.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o la combinazione di entrambi supera la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.Exists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member Exists : string -&gt; bool" Usage="System.IO.Directory.Exists path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Percorso da testare.</param>
        <summary>Determina se il percorso specificato fa riferimento a una directory esistente sul disco.</summary>
        <returns>
          <see langword="true" /> se <paramref name="path" /> fa riferimento a una directory esistente; <see langword="false" /> se la directory non esiste o si verifica un errore durante il tentativo di determinare se la directory specificata esiste.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `path` parametro è consentito specificare le informazioni sul percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente.  
  
 Gli spazi finali vengono rimossi dalla fine del `path` parametro prima della verifica dell'esistenza della directory.  
  
 Il `path` parametro non distinzione maiuscole/minuscole.  
  
 Se non è in un'autorizzazione minima di sola lettura nella directory, il <xref:System.IO.Directory.Exists%2A> metodo restituirà `false`.  
  
 Il <xref:System.IO.Directory.Exists%2A> restituzione del metodo `false` se si verifica un errore durante il tentativo di determinare se il file specificato esiste. Ciò può verificarsi nelle situazioni che generano eccezioni, ad esempio passando un nome di file con caratteri non validi o troppi caratteri, un disco mancante o non superato o se il chiamante non dispone dell'autorizzazione per leggere il file.  
  
   
  
## Examples  
 L'esempio seguente accetta una matrice di nomi di file o directory nella riga di comando, determina il tipo di nome è e lo elabora in modo appropriato.  
  
 [!code-cpp[Recursive file finder#2](~/samples/snippets/cpp/VS_Snippets_CLR/Recursive file finder/CPP/directorylisting.cpp#2)]
 [!code-csharp[Recursive file finder#2](~/samples/snippets/csharp/VS_Snippets_CLR/Recursive file finder/CS/directorylisting.cs#2)]
 [!code-vb[Recursive file finder#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Recursive file finder/VB/directorylisting.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per la lettura dei file. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <altmember cref="T:System.IO.DirectoryInfo" />
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce l'elenco di controllo di accesso (ACL) di Windows per una directory.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public static System.Security.AccessControl.DirectorySecurity GetAccessControl (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.AccessControl.DirectorySecurity GetAccessControl(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetAccessControl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAccessControl (path As String) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetAccessControl : string -&gt; System.Security.AccessControl.DirectorySecurity" Usage="System.IO.Directory.GetAccessControl path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Percorso alla directory contenente un oggetto <see cref="T:System.Security.AccessControl.DirectorySecurity" /> che descrive le informazioni relative all'elenco di controllo di accesso (ACL) del file.</param>
        <summary>Ottiene un oggetto <see cref="T:System.Security.AccessControl.DirectorySecurity" /> che incapsula le voci dell'elenco di controllo di accesso (ACL) di una directory specificata.</summary>
        <returns>Oggetto che incapsula le regole di controllo di accesso per il file descritto dal parametro <paramref name="path" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.IO.Directory.GetAccessControl%2A> metodo per recuperare le voci di elenco (ACL) di controllo di accesso per una directory.  
  
 Un ACL vengono descritti i singoli utenti e/o gruppi che hanno o non si dispongono, diritti per azioni specifiche su un determinato file o directory. Per altre informazioni, vedere [Procedura: aggiungere o rimuovere voci dell'elenco di controllo di accesso (ACL)](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).  
  
 In ambienti di NTFS <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> e <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes> vengono concesse all'utente se l'utente ha <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> diritti alla cartella padre. Per negare <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> e <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes>, Nega <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> sulla directory padre.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.IO.Directory.GetAccessControl%2A> e il <xref:System.IO.Directory.SetAccessControl%2A> metodi per aggiungere un accesso alla voce di elenco (ACL) di controllo e quindi rimuovere una voce ACL da una directory.  È necessario specificare un utente valido o un account di gruppo per eseguire questo esempio.  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O durante l'apertura della directory.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Il sistema operativo corrente non è Windows 2000 o versioni successive.</exception>
        <exception cref="T:System.SystemException">Si è verificato un errore a livello di sistema, ad esempio la directory non è stata trovata. L'eccezione specifica può essere una sottoclasse di <see cref="T:System.SystemException" />.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il parametro <paramref name="path" /> specifica una directory di sola lettura.  
  
oppure 
L'operazione non è supportata sulla piattaforma corrente.  
  
oppure 
Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">l'autorizzazione enumerare l'elenco di controllo di accesso (ACL) per una directory. Enumerazioni associate: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> , <see cref="F:System.Security.AccessControl.AccessControlActions.View" />  
  
Azione di sicurezza: richiesta.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public static System.Security.AccessControl.DirectorySecurity GetAccessControl (string path, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.AccessControl.DirectorySecurity GetAccessControl(string path, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAccessControl (path As String, includeSections As AccessControlSections) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::String ^ path, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="static member GetAccessControl : string * System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="System.IO.Directory.GetAccessControl (path, includeSections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="path">Percorso alla directory contenente un oggetto <see cref="T:System.Security.AccessControl.DirectorySecurity" /> che descrive le informazioni relative all'elenco di controllo di accesso (ACL) del file.</param>
        <param name="includeSections">Uno dei valori di <see cref="T:System.Security.AccessControl.AccessControlSections" /> che specifica il tipo di informazioni relative all'elenco di controllo di accesso (ACL) da ricevere.</param>
        <summary>Ottiene un oggetto <see cref="T:System.Security.AccessControl.DirectorySecurity" /> che incapsula il tipo specificato di voci dell'elenco di controllo di accesso (ACL) per una directory specificata.</summary>
        <returns>Oggetto che incapsula le regole di controllo di accesso per il file descritto dal parametro <paramref name="path" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.IO.Directory.GetAccessControl%2A> metodo per recuperare le voci di elenco (ACL) di controllo di accesso per una directory.  
  
 Un ACL vengono descritti i singoli utenti e/o gruppi che hanno o non si dispongono, diritti per azioni specifiche su un determinato file o directory. Per altre informazioni, vedere [Procedura: aggiungere o rimuovere voci dell'elenco di controllo di accesso (ACL)](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).  
  
 In ambienti di NTFS <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> e <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes> vengono concesse all'utente se l'utente ha <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> diritti alla cartella padre. Per negare <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> e <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes>, Nega <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> sulla directory padre.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O durante l'apertura della directory.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Il sistema operativo corrente non è Windows 2000 o versioni successive.</exception>
        <exception cref="T:System.SystemException">Si è verificato un errore a livello di sistema, ad esempio la directory non è stata trovata. L'eccezione specifica può essere una sottoclasse di <see cref="T:System.SystemException" />.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il parametro <paramref name="path" /> specifica una directory di sola lettura.  
  
oppure 
L'operazione non è supportata sulla piattaforma corrente.  
  
oppure 
Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">l'autorizzazione enumerare l'elenco di controllo di accesso (ACL) per una directory. Enumerazioni associate: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> , <see cref="F:System.Security.AccessControl.AccessControlActions.View" />  
  
Azione di sicurezza: richiesta.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetCreationTime">
      <MemberSignature Language="C#" Value="public static DateTime GetCreationTime (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime GetCreationTime(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetCreationTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCreationTime (path As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime GetCreationTime(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetCreationTime : string -&gt; DateTime" Usage="System.IO.Directory.GetCreationTime path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Percorso della directory.</param>
        <summary>Ottiene la data e l'ora di creazione di una directory.</summary>
        <returns>Struttura impostata sulla data e l'ora di creazione della directory specificata. Questo valore è espresso nell'ora locale.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Questo metodo può restituire un valore inaccurato, perché Usa funzioni native i cui valori potrebbero non essere aggiornati in modo continuo dal sistema operativo.  
  
 Questo metodo equivale a <xref:System.IO.File.GetCreationTime%2A?displayProperty=nameWithType>.  
  
 Se la directory descritta nel `path` parametro non esiste, questo metodo restituisce 12 mezzanotte del 1 gennaio 1601 D.C. (C.E.) Coordinated Universal Time (UTC), aggiornata all'ora locale.  
  
 Il `path` parametro è consentito specificare le informazioni sul percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 Il `path` parametro non distinzione maiuscole/minuscole.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 Nell'esempio seguente ottiene l'ora di creazione della directory specificata.  
  
 [!code-cpp[Dir_GetCreation#1](~/samples/snippets/cpp/VS_Snippets_CLR/Dir_GetCreation/CPP/dir_getcreation.cpp#1)]
 [!code-csharp[Dir_GetCreation#1](~/samples/snippets/csharp/VS_Snippets_CLR/Dir_GetCreation/CS/dir_getcreation.cs#1)]
 [!code-vb[Dir_GetCreation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dir_GetCreation/VB/dir_getcreation.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per leggere il file o directory specificata. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="GetCreationTimeUtc">
      <MemberSignature Language="C#" Value="public static DateTime GetCreationTimeUtc (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime GetCreationTimeUtc(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetCreationTimeUtc(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCreationTimeUtc (path As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime GetCreationTimeUtc(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetCreationTimeUtc : string -&gt; DateTime" Usage="System.IO.Directory.GetCreationTimeUtc path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Percorso della directory.</param>
        <summary>Ottiene la data e l'ora di creazione di una directory, con l'ora nel formato UTC (Coordinated Universal Time).</summary>
        <returns>Struttura impostata sulla data e l'ora di creazione della directory specificata. Questo valore è espresso nell'ora UTC.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Questo metodo può restituire un valore inaccurato, perché Usa funzioni native i cui valori potrebbero non essere aggiornati in modo continuo dal sistema operativo.  
  
 Se la directory descritta nel `path` parametro non esiste, questo metodo restituisce 12 mezzanotte del 1 gennaio 1601 D.C. (C.E.) Coordinated Universal Time (UTC).  
  
 Usare questo metodo per ottenere l'ora di creazione di una directory basata su Coordinated Universal Time (UTC).  
  
   
  
## Examples  
 Nell'esempio seguente vengono illustrate le differenze nell'output quando si usa output Coordinated Universal Time (UTC).  
  
 [!code-cpp[System.IO.UTCExample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.UTCExample/CPP/example.cpp#1)]
 [!code-csharp[System.IO.UTCExample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.UTCExample/CS/example.cs#1)]
 [!code-vb[System.IO.UTCExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.UTCExample/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per leggere il file o directory specificata. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentDirectory">
      <MemberSignature Language="C#" Value="public static string GetCurrentDirectory ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetCurrentDirectory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetCurrentDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrentDirectory () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetCurrentDirectory();" />
      <MemberSignature Language="F#" Value="static member GetCurrentDirectory : unit -&gt; string" Usage="System.IO.Directory.GetCurrentDirectory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene la directory di lavoro corrente dell'applicazione.</summary>
        <returns>Stringa che contiene il percorso della directory di lavoro corrente e che non termina con una barra rovesciata (\\).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La directory corrente è diversa dalla directory originale, ovvero quello da cui è stato avviato il processo.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo del metodo `GetCurrentDirectory`.  
  
 [!code-cpp[Dir_GetCurDir#1](~/samples/snippets/cpp/VS_Snippets_CLR/Dir_GetCurDir/CPP/dir_getcurdir.cpp#1)]
 [!code-csharp[Dir_GetCurDir#1](~/samples/snippets/csharp/VS_Snippets_CLR/Dir_GetCurDir/CS/dir_getcurdir.cs#1)]
 [!code-vb[Dir_GetCurDir#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dir_GetCurDir/VB/dir_getcurdir.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.NotSupportedException">Il sistema operativo è Windows CE, che non ha la funzionalità di directory corrente.  
  
Questo metodo è disponibile in .NET Compact Framework, ma non è attualmente supportato.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per accedere alle informazioni sul percorso della directory corrente. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce i nomi delle sottodirectory che soddisfano i criteri specificati.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public static string[] GetDirectories (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetDirectories(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectories (path As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetDirectories(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetDirectories : string -&gt; string[]" Usage="System.IO.Directory.GetDirectories path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Percorso relativo o assoluto della directory in cui eseguire la ricerca. Stringa senza distinzione tra maiuscole e minuscole.</param>
        <summary>Restituisce i nomi delle sottodirectory, inclusi i relativi percorsi, nella directory specificata.</summary>
        <returns>Una matrice dei nomi completi (inclusi i percorsi) delle sottodirectory nel percorso specificato o una matrice vuota se non viene trovata alcuna directory.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è identico a <xref:System.IO.Directory.GetDirectories%28System.String%2CSystem.String%29> con l'asterisco (\*) specificato come criterio di ricerca, quindi restituisce tutte le sottodirectory. Se è necessario eseguire la ricerca nelle sottodirectory, usare il <xref:System.IO.Directory.GetDirectories%28System.String%2CSystem.String%2CSystem.IO.SearchOption%29> metodo, che consente di specificare una ricerca di sottodirectory con il `searchOption` parametro.  
  
 Il <xref:System.IO.Directory.EnumerateDirectories%2A> e <xref:System.IO.Directory.GetDirectories%2A> metodi differiscono nel modo seguente: quando si usa <xref:System.IO.Directory.EnumerateDirectories%2A>, è possibile avviare l'enumerazione dell'insieme di nomi prima che venga restituito l'intero insieme, quando si usa <xref:System.IO.Directory.GetDirectories%2A>, è necessario attendere l'intera matrice di nomi restituito prima che sia possibile accedere alla matrice. Pertanto, quando si lavora con molti file e directory, <xref:System.IO.Directory.EnumerateDirectories%2A> può risultare più efficiente.  
  
 Il `path` parametro può specificare un percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 I nomi restituiti da questo metodo sono preceduti da informazioni directory disponibili in `path`.  
  
 Il `path` parametro non distinzione maiuscole/minuscole.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 L'esempio seguente accetta una matrice di nomi di file o directory nella riga di comando, determina il tipo di nome è e lo elabora in modo appropriato.  
  
 [!code-cpp[Recursive file finder#1](~/samples/snippets/cpp/VS_Snippets_CLR/Recursive file finder/CPP/directorylisting.cpp#1)]
 [!code-csharp[Recursive file finder#1](~/samples/snippets/csharp/VS_Snippets_CLR/Recursive file finder/CS/directorylisting.cs#1)]
 [!code-vb[Recursive file finder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Recursive file finder/VB/directorylisting.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="path" /> è un nome file.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per l'accesso alle informazioni sul percorso della directory corrente. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <altmember cref="M:System.IO.Directory.GetCurrentDirectory" />
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public static string[] GetDirectories (string path, string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetDirectories(string path, string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetDirectories(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectories (path As String, searchPattern As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetDirectories(System::String ^ path, System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="static member GetDirectories : string * string -&gt; string[]" Usage="System.IO.Directory.GetDirectories (path, searchPattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Percorso relativo o assoluto della directory in cui eseguire la ricerca. Stringa senza distinzione tra maiuscole e minuscole.</param>
        <param name="searchPattern">Stringa di ricerca in base alla quale confrontare i nomi delle sottodirectory in <paramref name="path" />. Questo parametro può contenere una combinazione di caratteri letterali e caratteri jolly validi, ma non supporta le espressioni regolari.</param>
        <summary>Restituisce i nomi delle sottodirectory (inclusi i percorsi) corrispondenti al criterio di ricerca specificato nella directory specificata.</summary>
        <returns>Una matrice dei nomi completi (inclusi i percorsi) delle sottodirectory che soddisfano i criteri di ricerca nella directory specificata o una matrice vuota se non viene trovata alcuna directory.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo restituisce tutte le sottodirectory direttamente sotto la directory specificata corrispondenti al criterio di ricerca specificati. Se la directory specificata non dispone di alcuna sottodirectory o alcuna sottodirectory non corrisponde il `searchPattern` parametro, questo metodo restituisce una matrice vuota. Viene eseguita la ricerca solo la directory principale. Se si desidera eseguire la ricerca anche nelle sottodirectory, usare il <xref:System.IO.Directory.GetDirectories%28System.String%2CSystem.String%2CSystem.IO.SearchOption%29> metodo e specificare <xref:System.IO.SearchOption.AllDirectories> nel `searchOption` parametro.  
  
 `searchPattern` può essere una combinazione di caratteri letterali e caratteri jolly, ma non supporta le espressioni regolari. I seguenti caratteri jolly sono consentiti nelle `searchPattern`.  
  
|Identificatore con caratteri jolly|Corrispondenze|  
|------------------------|-------------|  
|\* (asterisco)|Zero o più caratteri in tale posizione.|  
|? (punto interrogativo)|Zero o un carattere in quella posizione.|  
  
 I caratteri diversi dal carattere jolly sono caratteri letterali. Ad esempio, il `searchPattern` stringa "\*t" Cerca tutti i nomi in `path` che terminano con la lettera "t". Il `searchPattern` stringa "s\*" Cerca tutti i nomi in `path` iniziano con la lettera "s".  
  
 `searchPattern` non può terminare con due punti ("..") o contenere due punti ("..") seguito da <xref:System.IO.Path.DirectorySeparatorChar> o <xref:System.IO.Path.AltDirectorySeparatorChar>, né può contenere caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <xref:System.IO.Path.GetInvalidPathChars%2A>.  
  
 Il `path` parametro può specificare un percorso relativo o assoluto e non è tra maiuscole e minuscole.  Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 Il <xref:System.IO.Directory.EnumerateDirectories%2A> e <xref:System.IO.Directory.GetDirectories%2A> metodi differiscono nel modo seguente: quando si usa <xref:System.IO.Directory.EnumerateDirectories%2A>, è possibile avviare l'enumerazione dell'insieme di nomi prima che venga restituito l'intero insieme, quando si usa <xref:System.IO.Directory.GetDirectories%2A>, è necessario attendere l'intera matrice di nomi restituito prima che sia possibile accedere alla matrice. Pertanto, quando si lavora con molti file e directory, <xref:System.IO.Directory.EnumerateDirectories%2A> può risultare più efficiente.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 Nell'esempio seguente conta il numero di directory in un percorso che iniziano con la lettera specificata.  
  
 [!code-cpp[Dir_GetDirs2#1](~/samples/snippets/cpp/VS_Snippets_CLR/Dir_GetDirs2/CPP/dir_getdirs2.cpp#1)]
 [!code-csharp[Dir_GetDirs2#1](~/samples/snippets/csharp/VS_Snippets_CLR/Dir_GetDirs2/CS/dir_getdirs2.cs#1)]
 [!code-vb[Dir_GetDirs2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dir_GetDirs2/VB/dir_getdirs2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. Per cercare i caratteri non validi, usare <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
oppure 
 <paramref name="searchPattern" /> non contiene un criterio valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> o <paramref name="searchPattern" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="path" /> è un nome file.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per accedere alle informazioni sul percorso della directory corrente. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</permission>
        <altmember cref="M:System.IO.Directory.GetCurrentDirectory" />
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public static string[] GetDirectories (string path, string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetDirectories(string path, string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetDirectories(System::String ^ path, System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="static member GetDirectories : string * string * System.IO.EnumerationOptions -&gt; string[]" Usage="System.IO.Directory.GetDirectories (path, searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public static string[] GetDirectories (string path, string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetDirectories(string path, string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetDirectories(System::String ^ path, System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="static member GetDirectories : string * string * System.IO.SearchOption -&gt; string[]" Usage="System.IO.Directory.GetDirectories (path, searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="path">Percorso relativo o assoluto della directory in cui eseguire la ricerca. Stringa senza distinzione tra maiuscole e minuscole.</param>
        <param name="searchPattern">Stringa di ricerca in base alla quale confrontare i nomi delle sottodirectory in <paramref name="path" />. Questo parametro può contenere una combinazione di caratteri letterali e caratteri jolly validi, ma non supporta le espressioni regolari.</param>
        <param name="searchOption">Uno dei valori di enumerazione che specifica se l'operazione di ricerca deve includere tutte le sottodirectory o la sottodirectory corrente.</param>
        <summary>Restituisce i nomi delle sottodirectory (incluso il relativo percorso) che corrispondono ai criteri di ricerca specificati nella directory specificata e con ricerca facoltativa nelle sottodirectory.</summary>
        <returns>Una matrice di nomi completi (inclusi i percorsi) delle sottodirectory che soddisfano i criteri di ricerca specificati o una matrice vuota se non viene trovata alcuna directory.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `path` parametro può specificare un percorso relativo o assoluto e non è tra maiuscole e minuscole. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 `searchPattern` può essere una combinazione di caratteri letterali e caratteri jolly, ma non supporta le espressioni regolari. I seguenti caratteri jolly sono consentiti nelle `searchPattern`.  
  
|Identificatore con caratteri jolly|Corrispondenze|  
|------------------------|-------------|  
|\* (asterisco)|Zero o più caratteri in tale posizione.|  
|? (punto interrogativo)|Zero o un carattere in quella posizione.|  
  
 I caratteri diversi dal carattere jolly sono caratteri letterali. Ad esempio, il `searchPattern` stringa "\*t" Cerca tutti i nomi in `path` che terminano con la lettera "t". Il `searchPattern` stringa "s\*" Cerca tutti i nomi in `path` iniziano con la lettera "s".  
  
 `searchPattern` non può terminare con due punti ("..") o contenere due punti ("..") seguito da <xref:System.IO.Path.DirectorySeparatorChar> o <xref:System.IO.Path.AltDirectorySeparatorChar>, né può contenere caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <xref:System.IO.Path.GetInvalidPathChars%2A>.  
  
 Il <xref:System.IO.Directory.EnumerateDirectories%2A> e <xref:System.IO.Directory.GetDirectories%2A> metodi differiscono nel modo seguente: quando si usa <xref:System.IO.Directory.EnumerateDirectories%2A>, è possibile avviare l'enumerazione dell'insieme di nomi prima che venga restituito l'intero insieme, quando si usa <xref:System.IO.Directory.GetDirectories%2A>, è necessario attendere l'intera matrice di nomi restituito prima che sia possibile accedere alla matrice. Pertanto, quando si lavora con molti file e directory, <xref:System.IO.Directory.EnumerateDirectories%2A> può risultare più efficiente.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 Nell'esempio seguente conta il numero di directory che iniziano con la lettera in un percorso specificata. Viene eseguita la ricerca solo la directory di primo livello.  
  
 [!code-csharp[Dir_GetDirs2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Dir_GetDirs2/CS/dir_getdirs3.cs#2)]
 [!code-vb[Dir_GetDirs2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dir_GetDirs2/VB/dir_getdirs3.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
oppure 
 <paramref name="searchPattern" /> non contiene un criterio valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> o <paramref name="searchPattern" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="searchOption" /> non è un valore valido di <see cref="T:System.IO.SearchOption" />.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="path" /> è un nome file.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per accedere alle informazioni sul percorso della directory corrente. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</permission>
        <altmember cref="M:System.IO.Directory.GetCurrentDirectory" />
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryRoot">
      <MemberSignature Language="C#" Value="public static string GetDirectoryRoot (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDirectoryRoot(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetDirectoryRoot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectoryRoot (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetDirectoryRoot(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetDirectoryRoot : string -&gt; string" Usage="System.IO.Directory.GetDirectoryRoot path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Percorso di un file o di una directory.</param>
        <summary>Restituisce le informazioni sul volume, sulla radice o su entrambi per il percorso specificato.</summary>
        <returns>Stringa che contiene le informazioni sul volume, sulla radice, o su entrambi, per il percorso specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo ottiene il nome del percorso completo `path`, come restituito da <xref:System.IO.Path.GetFullPath%2A>, e restituisce le informazioni sulla directory di radice. Il percorso specificato non deve esistere.  
  
 Il `path` parametro è consentito specificare le informazioni sul percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 Il `path` parametro non distinzione maiuscole/minuscole.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare la directory corrente e visualizzare la directory radice.  
  
 [!code-cpp[System.IO.DirectoryRoot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.DirectoryRoot/CPP/example.cpp#1)]
 [!code-csharp[System.IO.DirectoryRoot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DirectoryRoot/CS/example.cs#1)]
 [!code-vb[System.IO.DirectoryRoot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DirectoryRoot/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile cercare i caratteri non validi con il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per accedere alle informazioni sul percorso della directory corrente. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce i nomi dei file che soddisfano i criteri specificati.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public static string[] GetFiles (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetFiles(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFiles (path As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetFiles(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetFiles : string -&gt; string[]" Usage="System.IO.Directory.GetFiles path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Percorso relativo o assoluto della directory in cui eseguire la ricerca. Stringa senza distinzione tra maiuscole e minuscole.</param>
        <summary>Restituisce i nomi dei file, inclusi i relativi percorsi, nella directory specificata.</summary>
        <returns>Una matrice dei nomi completi (inclusi i percorsi) per i file nella directory specificata o una matrice vuota se non viene trovato alcun file.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IO.Directory.EnumerateFiles%2A> e <xref:System.IO.Directory.GetFiles%2A> metodi differiscono nel modo seguente: quando si usa <xref:System.IO.Directory.EnumerateFiles%2A>, è possibile avviare l'enumerazione dell'insieme di nomi prima che venga restituito l'intero insieme, quando si usa <xref:System.IO.Directory.GetFiles%2A>, è necessario attendere l'intera matrice di nomi restituito prima che sia possibile accedere alla matrice. Pertanto, quando si lavora con molti file e directory, <xref:System.IO.Directory.EnumerateFiles%2A> può risultare più efficiente.  
  
 Nomi di file restituiti vengono accodati per l'oggetto fornito `path` parametro.  
  
 Questo metodo è identico a <xref:System.IO.Directory.GetFiles%28System.String%2CSystem.String%29> con l'asterisco (\*) specificato come criterio di ricerca.  
  
 Il `path` parametro può specificare un percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 L'ordine dei nomi di file restituito non è garantito. usare il <xref:System.Array.Sort%2A> metodo se è necessario un ordinamento specifico.  
  
 Il `path` parametro non distinzione maiuscole/minuscole.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.IO.Directory.GetFiles%2A> per restituire i nomi di file da una posizione specificata dall'utente. L'esempio è configurato per intercettare tutti gli errori comuni di questo metodo.  
  
 [!code-cpp[Recursive file finder#1](~/samples/snippets/cpp/VS_Snippets_CLR/Recursive file finder/CPP/directorylisting.cpp#1)]
 [!code-csharp[Recursive file finder#1](~/samples/snippets/csharp/VS_Snippets_CLR/Recursive file finder/CS/directorylisting.cs#1)]
 [!code-vb[Recursive file finder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Recursive file finder/VB/directorylisting.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <paramref name="path" /> è un nome file.  
  
oppure 
Si è verificato un errore di rete.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è stato trovato o non è valido, ad esempio si trova in un'unità non mappata.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per accedere alle informazioni sul percorso della directory corrente. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public static string[] GetFiles (string path, string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetFiles(string path, string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetFiles(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFiles (path As String, searchPattern As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetFiles(System::String ^ path, System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="static member GetFiles : string * string -&gt; string[]" Usage="System.IO.Directory.GetFiles (path, searchPattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Percorso relativo o assoluto della directory in cui eseguire la ricerca. Stringa senza distinzione tra maiuscole e minuscole.</param>
        <param name="searchPattern">Stringa di ricerca in base alla quale confrontare i nomi dei file in <paramref name="path" />.  Questo parametro può contenere una combinazione di caratteri del percorso letterale e caratteri jolly (* e ?) validi, ma non supporta le espressioni regolari.</param>
        <summary>Restituisce i nomi dei file (inclusi i percorsi) corrispondenti al criterio di ricerca specificato nella directory specificata.</summary>
        <returns>Una matrice dei nomi completi (inclusi i percorsi) per i file nella directory specificata corrispondenti al criterio di ricerca specificato oppure una matrice vuota se non viene trovato alcun file.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nomi di file restituiti vengono aggiunti fornito `path` di un parametro e l'ordine dei nomi di file restituito non è garantito, utilizzare il <xref:System.Array.Sort%2A> metodo se è necessario un ordinamento specifico.  
  
 `searchPattern` può essere una combinazione di caratteri letterali e caratteri jolly, ma non supporta le espressioni regolari. I seguenti caratteri jolly sono consentiti nelle `searchPattern`.  
  
|Identificatore con caratteri jolly|Corrispondenze|  
|------------------------|-------------|  
|\* (asterisco)|Zero o più caratteri in tale posizione.|  
|? (punto interrogativo)|Zero o un carattere in quella posizione.|  
  
 I caratteri diversi dal carattere jolly sono caratteri letterali. Ad esempio, il `searchPattern` stringa "\*t" Cerca tutti i nomi in `path` che terminano con la lettera "t". Il `searchPattern` stringa "s\*" Cerca tutti i nomi in `path` iniziano con la lettera "s".  
  
 `searchPattern` non può terminare con due punti ("..") o contenere due punti ("..") seguito da <xref:System.IO.Path.DirectorySeparatorChar> o <xref:System.IO.Path.AltDirectorySeparatorChar>, né può contenere caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <xref:System.IO.Path.GetInvalidPathChars%2A>.  
  
> [!NOTE]
>  Quando si usa il carattere jolly asterisco in un' `searchPattern` , ad esempio "\*. txt", il numero di caratteri nell'estensione specificato influisce sulla ricerca nel modo seguente:  
>   
>  -   Se l'estensione specificata è esattamente tre caratteri, il metodo restituisce i file con estensioni che iniziano con l'estensione specificata. Ad esempio, "\*xls" restituisce "book.xls" e "book.xlsx".  
> -   In tutti gli altri casi, il metodo restituisce i file che corrispondono esattamente l'estensione specificata. Ad esempio, "\*interno" restituisce "file.ai" ma non "file.aif".  
>   
>  Quando si usa il carattere jolly punto interrogativo, questo metodo restituisce solo i file che corrispondono all'estensione di file specificato. Ad esempio, ha due file, "file1" e "file1. txtother", in una directory, un criterio di ricerca di "file?. txt"restituisce solo il primo file, mentre un criterio di ricerca di" file\*. txt "restituisce entrambi i file.  
  
> [!NOTE]
>  Poiché questo metodo controlla quale confrontare i nomi file con il formato del nome di 8.3 file sia il formato del nome file di lunga durata, un criterio di ricerca simile a "\*1\*. txt" potrebbero restituire i nomi di file imprevista. Ad esempio, usando un criterio di ricerca di "\*1\*. txt" restituisce "txt", perché il formato del nome di 8.3 file equivalente è "LONGFI~1.TXT".  
  
 Il <xref:System.IO.Directory.EnumerateFiles%2A> e <xref:System.IO.Directory.GetFiles%2A> metodi differiscono nel modo seguente: quando si usa <xref:System.IO.Directory.EnumerateFiles%2A>, è possibile avviare l'enumerazione dell'insieme di nomi prima che venga restituito l'intero insieme, quando si usa <xref:System.IO.Directory.GetFiles%2A>, è necessario attendere l'intera matrice di nomi restituito prima che sia possibile accedere alla matrice. Pertanto, quando si lavora con molti file e directory, <xref:System.IO.Directory.EnumerateFiles%2A> può risultare più efficiente.  
  
 Il `path` parametro può specificare un percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 Il `path` parametro non distinzione maiuscole/minuscole.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 Nell'esempio seguente conta il numero di file che iniziano con la lettera specificata.  
  
 [!code-cpp[Dir_GetFiles2#1](~/samples/snippets/cpp/VS_Snippets_CLR/Dir_GetFiles2/CPP/dir_getfiles2.cpp#1)]
 [!code-csharp[Dir_GetFiles2#1](~/samples/snippets/csharp/VS_Snippets_CLR/Dir_GetFiles2/CS/dir_getfiles2.cs#1)]
 [!code-vb[Dir_GetFiles2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dir_GetFiles2/VB/dir_getfiles2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <paramref name="path" /> è un nome file.  
  
oppure 
Si è verificato un errore di rete.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. Per cercare i caratteri non validi, usare <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
oppure 
 <paramref name="searchPattern" /> non contiene un criterio valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> o <paramref name="searchPattern" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è stato trovato o non è valido, ad esempio si trova in un'unità non mappata.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per accedere alle informazioni sul percorso della directory corrente. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public static string[] GetFiles (string path, string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetFiles(string path, string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetFiles(System::String ^ path, System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="static member GetFiles : string * string * System.IO.EnumerationOptions -&gt; string[]" Usage="System.IO.Directory.GetFiles (path, searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public static string[] GetFiles (string path, string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetFiles(string path, string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetFiles(System::String ^ path, System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="static member GetFiles : string * string * System.IO.SearchOption -&gt; string[]" Usage="System.IO.Directory.GetFiles (path, searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="path">Percorso relativo o assoluto della directory in cui eseguire la ricerca. Stringa senza distinzione tra maiuscole e minuscole.</param>
        <param name="searchPattern">Stringa di ricerca in base alla quale confrontare i nomi dei file in <paramref name="path" />.  Questo parametro può contenere una combinazione di caratteri del percorso letterale e caratteri jolly (* e ?) validi, ma non supporta le espressioni regolari.</param>
        <param name="searchOption">Uno dei valori di enumerazione che specifica se l'operazione di ricerca deve includere tutte le sottodirectory o la sottodirectory corrente.</param>
        <summary>Restituisce i nomi dei file (inclusi i percorsi) che corrispondono ai criteri di ricerca specificati nella directory specificata, utilizzando un valore per determinare se eseguire la ricerca nelle sottodirectory.</summary>
        <returns>Una matrice dei nomi completi (inclusi i percorsi) per i file nella directory specificata corrispondenti al criterio e all'opzione di ricerca specificati oppure una matrice vuota se non viene trovato alcun file.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nomi di file restituiti vengono aggiunti al parametro fornito `path` e non è garantito l'ordine dei nomi di file restituiti, utilizzare il <xref:System.Array.Sort%2A> metodo se è necessario un ordinamento specifico.  
  
 `searchPattern` può essere una combinazione di caratteri letterali e caratteri jolly, ma non supporta le espressioni regolari. I seguenti caratteri jolly sono consentiti nelle `searchPattern`.  
  
|Identificatore con caratteri jolly|Corrispondenze|  
|------------------------|-------------|  
|\* (asterisco)|Zero o più caratteri in tale posizione.|  
|? (punto interrogativo)|Zero o un carattere in quella posizione.|  
  
 I caratteri diversi dal carattere jolly sono caratteri letterali. Ad esempio, il `searchPattern` stringa "\*t" Cerca tutti i nomi in `path` che terminano con la lettera "t". Il `searchPattern` stringa "s\*" Cerca tutti i nomi in `path` iniziano con la lettera "s".  
  
 `searchPattern` non può terminare con due punti ("..") o contenere due punti ("..") seguito da <xref:System.IO.Path.DirectorySeparatorChar> o <xref:System.IO.Path.AltDirectorySeparatorChar>, né può contenere caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <xref:System.IO.Path.GetInvalidPathChars%2A>.  
  
> [!NOTE]
>  Quando si usa il carattere jolly asterisco in un' `searchPattern` , ad esempio "\*. txt", il numero di caratteri nell'estensione specificato influisce sulla ricerca nel modo seguente:  
>   
>  -   Se l'estensione specificata è esattamente tre caratteri, il metodo restituisce i file con estensioni che iniziano con l'estensione specificata. Ad esempio, "\*xls" restituisce "book.xls" e "book.xlsx".  
> -   In tutti gli altri casi, il metodo restituisce i file che corrispondono esattamente l'estensione specificata. Ad esempio, "\*interno" restituisce "file.ai" ma non "file.aif".  
>   
>  Quando si usa il carattere jolly punto interrogativo, questo metodo restituisce solo i file che corrispondono all'estensione di file specificato. Ad esempio, ha due file, "file1" e "file1. txtother", in una directory, un criterio di ricerca di "file?. txt"restituisce solo il primo file, mentre un criterio di ricerca di"file*.txt"restituisce entrambi i file.  
  
> [!NOTE]
>  Poiché questo metodo controlla quale confrontare i nomi file con il formato del nome di 8.3 file sia il formato del nome file di lunga durata, un criterio di ricerca simile a "\*1\*. txt" potrebbero restituire i nomi di file imprevista. Ad esempio, usando un criterio di ricerca di "\*1\*. txt" restituisce "txt", perché il formato del nome di 8.3 file equivalente è "LONGFI~1.TXT".  
  
 Il <xref:System.IO.Directory.EnumerateFiles%2A> e <xref:System.IO.Directory.GetFiles%2A> metodi differiscono nel modo seguente: quando si usa <xref:System.IO.Directory.EnumerateFiles%2A>, è possibile avviare l'enumerazione dell'insieme di nomi prima che venga restituito l'intero insieme, quando si usa <xref:System.IO.Directory.GetFiles%2A>, è necessario attendere l'intera matrice di nomi restituito prima che sia possibile accedere alla matrice. Pertanto, quando si lavora con molti file e directory, <xref:System.IO.Directory.EnumerateFiles%2A> può risultare più efficiente.  
  
 I nomi file includono il percorso completo.  
  
 Il `path` parametro può specificare un percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 Il `path` parametro non distinzione maiuscole/minuscole.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. Per cercare i caratteri non validi, usare il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
oppure 
 <paramref name="searchPattern" /> non contiene un criterio valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> o <paramref name="searchpattern" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="searchOption" /> non è un valore valido di <see cref="T:System.IO.SearchOption" />.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è stato trovato o non è valido, ad esempio si trova in un'unità non mappata.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="path" /> è un nome file.  
  
oppure 
Si è verificato un errore di rete.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per accedere alle informazioni sul percorso della directory corrente. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFileSystemEntries">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce i nomi di tutti i file e di tutte le sottodirectory che soddisfano i criteri specificati.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFileSystemEntries">
      <MemberSignature Language="C#" Value="public static string[] GetFileSystemEntries (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetFileSystemEntries(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetFileSystemEntries(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileSystemEntries (path As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetFileSystemEntries(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetFileSystemEntries : string -&gt; string[]" Usage="System.IO.Directory.GetFileSystemEntries path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Percorso relativo o assoluto della directory in cui eseguire la ricerca. Stringa senza distinzione tra maiuscole e minuscole.</param>
        <summary>Restituisce i nomi di tutti i file e di tutte le sottodirectory in un percorso specificato.</summary>
        <returns>Una matrice dei nomi dei file e delle sottodirectory nella directory specificata oppure una matrice vuota se non vengono trovati file o sottodirectory.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'ordine dei nomi di directory del file restituito e non è garantito. usare il <xref:System.Array.Sort%2A> metodo se è necessario un ordinamento specifico.  
  
 Il <xref:System.IO.Directory.EnumerateFileSystemEntries%2A> e <xref:System.IO.Directory.GetFileSystemEntries%2A> metodi differiscono nel modo seguente: quando si usa <xref:System.IO.Directory.EnumerateFileSystemEntries%2A>, è possibile avviare tale enumerazione della raccolta di voci prima che venga restituito l'intero insieme, quando si usa <xref:System.IO.Directory.GetFileSystemEntries%2A>, è necessario attendere l'intera matrice di voci da da restituire prima che sia possibile accedere alla matrice. Pertanto, quando si lavora con molti file e directory, <xref:System.IO.Directory.EnumerateFiles%2A> può risultare più efficiente.  
  
 Questo metodo è identico a <xref:System.IO.Directory.GetFileSystemEntries%2A> con l'asterisco (\*) specificato come criterio di ricerca.  
  
 Il `path` parametro è consentito specificare le informazioni sul percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 Il `path` parametro non distinzione maiuscole/minuscole.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.IO.Directory.GetFileSystemEntries%2A> metodo da riempire una matrice di stringhe con i nomi di tutti i file e le sottodirectory in una posizione specificata dall'utente e stampa ogni stringa nella matrice in cui la console. L'esempio è configurato per intercettare tutti gli errori comuni di questo metodo.  
  
 [!code-cpp[System.IO.Directory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Directory/CPP/class1.cpp#1)]
 [!code-csharp[System.IO.Directory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Directory/CS/class1.cs#1)]
 [!code-vb[System.IO.Directory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Directory/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile cercare i caratteri non validi con il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="path" /> è un nome file.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per accedere alle informazioni sul percorso della directory corrente. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <altmember cref="T:System.IO.FileSystemInfo" />
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemEntries">
      <MemberSignature Language="C#" Value="public static string[] GetFileSystemEntries (string path, string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetFileSystemEntries(string path, string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileSystemEntries (path As String, searchPattern As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetFileSystemEntries(System::String ^ path, System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="static member GetFileSystemEntries : string * string -&gt; string[]" Usage="System.IO.Directory.GetFileSystemEntries (path, searchPattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Percorso relativo o assoluto della directory in cui eseguire la ricerca. Stringa senza distinzione tra maiuscole e minuscole.</param>
        <param name="searchPattern">Stringa di ricerca in base alla quale confrontare i nomi dei file e delle directory in <paramref name="path" />.  Questo parametro può contenere una combinazione di caratteri del percorso letterale e caratteri jolly (* e ?) validi, ma non supporta le espressioni regolari.</param>
        <summary>Restituisce una matrice di nomi file e di nomi di directory che corrispondono a un criterio di ricerca in un percorso specificato.</summary>
        <returns>Una matrice di nomi di file e di nomi di directory che soddisfano i criteri di ricerca specificati, oppure una matrice vuota se non vengono trovati file o directory.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'ordine dei nomi di directory del file restituito e non è garantito. usare il <xref:System.Array.Sort%2A> metodo se è necessario un ordinamento specifico.  
  
 `searchPattern` può essere una combinazione di caratteri letterali e caratteri jolly, ma non supporta le espressioni regolari. I seguenti caratteri jolly sono consentiti nelle `searchPattern`.  
  
|Identificatore con caratteri jolly|Corrispondenze|  
|------------------------|-------------|  
|\* (asterisco)|Zero o più caratteri in tale posizione.|  
|? (punto interrogativo)|Zero o un carattere in quella posizione.|  
  
 I caratteri diversi dal carattere jolly sono caratteri letterali. Ad esempio, il `searchPattern` stringa "\*t" Cerca tutti i nomi in `path` che terminano con la lettera "t". Il `searchPattern` stringa "s\*" Cerca tutti i nomi in `path` iniziano con la lettera "s".  
  
 `searchPattern` non può terminare con due punti ("..") o contenere due punti ("..") seguito da <xref:System.IO.Path.DirectorySeparatorChar> o <xref:System.IO.Path.AltDirectorySeparatorChar>, né può contenere caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <xref:System.IO.Path.GetInvalidPathChars%2A>.  
  
> [!NOTE]
>  Quando si usa il carattere jolly asterisco in un' `searchPattern` , ad esempio "\*. txt", il numero di caratteri nell'estensione specificato influisce sulla ricerca nel modo seguente:  
>   
>  -   Se l'estensione specificata è esattamente tre caratteri, il metodo restituisce i file con estensioni che iniziano con l'estensione specificata. Ad esempio, "\*xls" restituisce "book.xls" e "book.xlsx".  
> -   In tutti gli altri casi, il metodo restituisce i file che corrispondono esattamente l'estensione specificata. Ad esempio, "\*interno" restituisce "file.ai" ma non "file.aif".  
>   
>  Quando si usa il carattere jolly punto interrogativo, questo metodo restituisce solo i file che corrispondono all'estensione di file specificato. Ad esempio, ha due file, "file1" e "file1. txtother", in una directory, un criterio di ricerca di "file?. txt"restituisce solo il primo file, mentre un criterio di ricerca di" file\*. txt "restituisce entrambi i file.  
  
 Il `path` parametro è consentito specificare le informazioni sul percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 Il `path` parametro non distinzione maiuscole/minuscole.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.IO.Directory.GetFileSystemEntries%2A> metodo per compilare una matrice di stringhe con i nomi di tutti i file che corrispondono a un filtro specificato dall'utente in una posizione specifica e stampa ogni stringa nella matrice nella console. L'esempio è configurato per intercettare tutti gli errori comuni di questo metodo.  
  
 [!code-cpp[System.IO.Directory#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Directory/CPP/class1.cpp#2)]
 [!code-csharp[System.IO.Directory#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Directory/CS/class1.cs#2)]
 [!code-vb[System.IO.Directory#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Directory/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. Per cercare i caratteri non validi, usare il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
oppure 
 <paramref name="searchPattern" /> non contiene un criterio valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> o <paramref name="searchPattern" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="path" /> è un nome file.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per accedere alle informazioni sul percorso della directory corrente. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemEntries">
      <MemberSignature Language="C#" Value="public static string[] GetFileSystemEntries (string path, string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetFileSystemEntries(string path, string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetFileSystemEntries(System::String ^ path, System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="static member GetFileSystemEntries : string * string * System.IO.EnumerationOptions -&gt; string[]" Usage="System.IO.Directory.GetFileSystemEntries (path, searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemEntries">
      <MemberSignature Language="C#" Value="public static string[] GetFileSystemEntries (string path, string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetFileSystemEntries(string path, string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetFileSystemEntries(System::String ^ path, System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="static member GetFileSystemEntries : string * string * System.IO.SearchOption -&gt; string[]" Usage="System.IO.Directory.GetFileSystemEntries (path, searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="path">Percorso relativo o assoluto della directory in cui eseguire la ricerca. Stringa senza distinzione tra maiuscole e minuscole.</param>
        <param name="searchPattern">Stringa di ricerca in base alla quale confrontare i nomi dei file e delle directory in <paramref name="path" />.  Questo parametro può contenere una combinazione di caratteri del percorso letterale e caratteri jolly (* e ?) validi, ma non supporta le espressioni regolari.</param>
        <param name="searchOption">Uno dei valori di enumerazione che specifica se l'operazione di ricerca deve includere solo la directory corrente o tutte le sottodirectory.  
  
Il valore predefinito è <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</param>
        <summary>Restituisce una matrice di tutti i nomi di file e di directory che corrispondono a un criterio di ricerca in un percorso specificato e con ricerca facoltativa nelle sottodirectory.</summary>
        <returns>Una matrice di nomi di file e di nomi di directory che soddisfano i criteri di ricerca specificati oppure una matrice vuota se non vengono trovati file o directory.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'ordine dei nomi di directory del file restituito e non è garantito. usare il <xref:System.Array.Sort%2A> metodo se è necessario un ordinamento specifico.  
  
 `searchPattern` può essere una combinazione di caratteri letterali e caratteri jolly, ma non supporta le espressioni regolari. I seguenti caratteri jolly sono consentiti nelle `searchPattern`.  
  
|Identificatore con caratteri jolly|Corrispondenze|  
|------------------------|-------------|  
|\* (asterisco)|Zero o più caratteri in tale posizione.|  
|? (punto interrogativo)|Zero o un carattere in quella posizione.|  
  
 I caratteri diversi dal carattere jolly sono caratteri letterali. Ad esempio, il `searchPattern` stringa "\*t" Cerca tutti i nomi in `path` che terminano con la lettera "t". Il `searchPattern` stringa "s\*" Cerca tutti i nomi in `path` iniziano con la lettera "s".  
  
 `searchPattern` non può terminare con due punti ("..") o contenere due punti ("..") seguito da <xref:System.IO.Path.DirectorySeparatorChar> o <xref:System.IO.Path.AltDirectorySeparatorChar>, né può contenere caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <xref:System.IO.Path.GetInvalidPathChars%2A>.  
  
> [!NOTE]
>  Quando si usa il carattere jolly asterisco in un' `searchPattern` , ad esempio "\*. txt", il numero di caratteri nell'estensione specificato influisce sulla ricerca nel modo seguente:  
>   
>  -   Se l'estensione specificata è esattamente tre caratteri, il metodo restituisce i file con estensioni che iniziano con l'estensione specificata. Ad esempio, "\*xls" restituisce "book.xls" e "book.xlsx".  
> -   In tutti gli altri casi, il metodo restituisce i file che corrispondono esattamente l'estensione specificata. Ad esempio, "\*interno" restituisce "file.ai" ma non "file.aif".  
>   
>  Quando si usa il carattere jolly punto interrogativo, questo metodo restituisce solo i file che corrispondono all'estensione di file specificato. Ad esempio, ha due file, "file1" e "file1. txtother", in una directory, un criterio di ricerca di "file?. txt"restituisce solo il primo file, mentre un criterio di ricerca di" file\*. txt "restituisce entrambi i file.  
  
 Il <xref:System.IO.Directory.EnumerateFileSystemEntries%2A> e <xref:System.IO.Directory.GetFileSystemEntries%2A> metodi differiscono nel modo seguente: quando si usa <xref:System.IO.Directory.EnumerateFileSystemEntries%2A>, è possibile avviare tale enumerazione della raccolta di voci prima che venga restituito l'intero insieme, quando si usa <xref:System.IO.Directory.GetFileSystemEntries%2A>, è necessario attendere l'intera matrice di voci da da restituire prima che sia possibile accedere alla matrice. Pertanto, quando si lavora con molti file e directory, <xref:System.IO.Directory.EnumerateFiles%2A> può risultare più efficiente.  
  
 È possibile specificare le informazioni di percorso relativo con la `path` parametro. Informazioni sul percorso relativo è interpretati rispetto alla directory di lavoro corrente, è possibile determinare eseguendo mediante il <xref:System.IO.Directory.GetCurrentDirectory%2A> (metodo).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti o contiene caratteri non validi. È possibile cercare i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
\- oppure - 
 <paramref name="searchPattern" /> non contiene un modello valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.  
  
oppure 
 <paramref name="searchPattern" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="searchOption" /> non è un valore <see cref="T:System.IO.SearchOption" /> valido.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="path" /> non è valido, ad esempio fa riferimento a un'unità non mappata.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="path" /> è un nome file.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o la combinazione di entrambi supera la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="GetLastAccessTime">
      <MemberSignature Language="C#" Value="public static DateTime GetLastAccessTime (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime GetLastAccessTime(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetLastAccessTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLastAccessTime (path As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime GetLastAccessTime(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetLastAccessTime : string -&gt; DateTime" Usage="System.IO.Directory.GetLastAccessTime path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">File o directory per cui ottenere informazioni sulla data e l'ora di accesso.</param>
        <summary>Restituisce la data e l'ora dell'ultimo accesso al file o alla directory specificata.</summary>
        <returns>Struttura impostata sulla data e l'ora dell'ultimo accesso al file o alla directory specificata. Questo valore è espresso nell'ora locale.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Questo metodo può restituire un valore inaccurato, perché Usa funzioni native i cui valori potrebbero non essere aggiornati in modo continuo dal sistema operativo.  
  
 Questo metodo è identico a <xref:System.IO.File.GetLastAccessTime%2A?displayProperty=nameWithType>.  
  
 Se la directory descritta nel `path` parametro non esiste, questo metodo restituisce 12 mezzanotte del 1 gennaio 1601 D.C. (C.E.) Coordinated Universal Time (UTC), aggiornata all'ora locale.  
  
 Il `path` parametro è consentito specificare le informazioni sul percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 Il `path` parametro non distinzione maiuscole/minuscole.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare `GetLastAccessTime`.  
  
 [!code-cpp[Dir_GetLastAccess#1](~/samples/snippets/cpp/VS_Snippets_CLR/Dir_GetLastAccess/CPP/dir_getlastaccess.cpp#1)]
 [!code-csharp[Dir_GetLastAccess#1](~/samples/snippets/csharp/VS_Snippets_CLR/Dir_GetLastAccess/CS/dir_getlastaccess.cs#1)]
 [!code-vb[Dir_GetLastAccess#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dir_GetLastAccess/VB/dir_getlastaccess.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. Per cercare i caratteri non validi, usare il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.NotSupportedException">Il formato del parametro <paramref name="path" /> non è valido.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per leggere il file o directory specificata. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="GetLastAccessTimeUtc">
      <MemberSignature Language="C#" Value="public static DateTime GetLastAccessTimeUtc (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime GetLastAccessTimeUtc(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLastAccessTimeUtc (path As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime GetLastAccessTimeUtc(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetLastAccessTimeUtc : string -&gt; DateTime" Usage="System.IO.Directory.GetLastAccessTimeUtc path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">File o directory per cui ottenere informazioni sulla data e l'ora di accesso.</param>
        <summary>Restituisce la data e l'ora, nel formato dell'ora UTC (Coordinated Universal Time), dell'ultimo accesso al file o alla directory specificata.</summary>
        <returns>Struttura impostata sulla data e l'ora dell'ultimo accesso al file o alla directory specificata. Questo valore è espresso nell'ora UTC.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Questo metodo può restituire un valore inaccurato, perché Usa funzioni native i cui valori potrebbero non essere aggiornati in modo continuo dal sistema operativo.  
  
 Se la directory descritta nel `path` parametro non esiste, questo metodo restituisce 12 mezzanotte del 1 gennaio 1601 D.C. (C.E.) Coordinated Universal Time (UTC).  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 Nell'esempio seguente vengono illustrate le differenze nell'output quando si usa output Coordinated Universal Time (UTC).  
  
 [!code-cpp[System.IO.UTCExample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.UTCExample/CPP/example.cpp#1)]
 [!code-csharp[System.IO.UTCExample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.UTCExample/CS/example.cs#1)]
 [!code-vb[System.IO.UTCExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.UTCExample/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile eseguire una query per i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.NotSupportedException">Il formato del parametro <paramref name="path" /> non è valido.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per leggere il file o directory specificata. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="GetLastWriteTime">
      <MemberSignature Language="C#" Value="public static DateTime GetLastWriteTime (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime GetLastWriteTime(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetLastWriteTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLastWriteTime (path As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime GetLastWriteTime(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetLastWriteTime : string -&gt; DateTime" Usage="System.IO.Directory.GetLastWriteTime path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">File o directory per cui ottenere informazioni sulla data e l'ora di modifica.</param>
        <summary>Restituisce la data e l'ora dell'ultima scrittura nel file o nella directory specificata.</summary>
        <returns>Struttura impostata sulla data e l'ora dell'ultima scrittura nel file o nella directory specificata. Questo valore è espresso nell'ora locale.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Questo metodo può restituire un valore inaccurato, perché Usa funzioni native i cui valori potrebbero non essere aggiornati in modo continuo dal sistema operativo.  
  
 Se la directory descritta nel `path` parametro non esiste, questo metodo restituisce 12 mezzanotte del 1 gennaio 1601 D.C. (C.E.) Coordinated Universal Time (UTC), aggiornata all'ora locale.  
  
 Il `path` parametro è consentito specificare le informazioni sul percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 Il `path` parametro non distinzione maiuscole/minuscole.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare `GetLastWriteTime`.  
  
 [!code-cpp[Dir_GetLastWrite#1](~/samples/snippets/cpp/VS_Snippets_CLR/Dir_GetLastWrite/CPP/dir_getlastwrite.cpp#1)]
 [!code-csharp[Dir_GetLastWrite#1](~/samples/snippets/csharp/VS_Snippets_CLR/Dir_GetLastWrite/CS/dir_getlastwrite.cs#1)]
 [!code-vb[Dir_GetLastWrite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dir_GetLastWrite/VB/dir_getlastwrite.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile eseguire una query per i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per leggere il file o directory specificata. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="GetLastWriteTimeUtc">
      <MemberSignature Language="C#" Value="public static DateTime GetLastWriteTimeUtc (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime GetLastWriteTimeUtc(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLastWriteTimeUtc (path As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime GetLastWriteTimeUtc(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetLastWriteTimeUtc : string -&gt; DateTime" Usage="System.IO.Directory.GetLastWriteTimeUtc path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">File o directory per cui ottenere informazioni sulla data e l'ora di modifica.</param>
        <summary>Restituisce la data e l'ora, nel formato dell'ora UTC (Coordinated Universal Time), dell'ultima scrittura nel file o nella directory specificata.</summary>
        <returns>Struttura impostata sulla data e l'ora dell'ultima scrittura nel file o nella directory specificata. Questo valore è espresso nell'ora UTC.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Questo metodo può restituire un valore inaccurato, perché Usa funzioni native i cui valori potrebbero non essere aggiornati in modo continuo dal sistema operativo.  
  
 Se la directory descritta nel `path` parametro non esiste, questo metodo restituisce 12 mezzanotte del 1 gennaio 1601 D.C. (C.E.) Coordinated Universal Time (UTC).  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 Nell'esempio seguente vengono illustrate le differenze nell'output quando si usa output Coordinated Universal Time (UTC).  
  
 [!code-cpp[System.IO.UTCExample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.UTCExample/CPP/example.cpp#1)]
 [!code-csharp[System.IO.UTCExample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.UTCExample/CS/example.cs#1)]
 [!code-vb[System.IO.UTCExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.UTCExample/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile eseguire una query per i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per leggere il file o directory specificata. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="GetLogicalDrives">
      <MemberSignature Language="C#" Value="public static string[] GetLogicalDrives ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetLogicalDrives() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetLogicalDrives" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLogicalDrives () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetLogicalDrives();" />
      <MemberSignature Language="F#" Value="static member GetLogicalDrives : unit -&gt; string[]" Usage="System.IO.Directory.GetLogicalDrives " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera i nomi delle unità logiche sul computer nel formato "&lt;lettera unità&gt;:\\".</summary>
        <returns>Unità logiche del computer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 GetLogicalDrives restituisce tutte le unità accessibili in un computer specifico, tra cui l'unità floppy e qualsiasi unità ottiche.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.IO.Directory.GetLogicalDrives%2A> metodo a cui assegnare il nome di ogni unità sul computer chiamante in una matrice di stringhe. Quindi, ogni membro di questa matrice di stringhe viene stampato nella console. L'esempio è configurato per intercettare tutti gli errori comuni di questo metodo.  
  
 [!code-cpp[System.IO.Directory#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Directory/CPP/class1.cpp#3)]
 [!code-csharp[System.IO.Directory#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Directory/CS/class1.cs#3)]
 [!code-vb[System.IO.Directory#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Directory/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O, ad esempio un errore del disco.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per chiamare codice non gestito, ad esempio chiamare codice nativo con interoperabilità PInvoke o COM. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public static System.IO.DirectoryInfo GetParent (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.DirectoryInfo GetParent(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.GetParent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetParent (path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::DirectoryInfo ^ GetParent(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetParent : string -&gt; System.IO.DirectoryInfo" Usage="System.IO.Directory.GetParent path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Percorso per il quale recuperare la directory padre.</param>
        <summary>Recupera la directory padre del percorso specificato, inclusi il percorso assoluto e relativo.</summary>
        <returns>Directory padre oppure <see langword="null" /> se <paramref name="path" /> è la directory radice, inclusa la radice di un server UNC o di un nome di condivisione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `path` parametro può specificare un percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 Gli spazi finali vengono rimossi dalla fine del `path` parametro prima di ottenere la directory.  
  
 La stringa restituita da questo metodo è costituito da tutti i caratteri del percorso fino al ma non incluse, l'ultima <xref:System.IO.Path.DirectorySeparatorChar> o <xref:System.IO.Path.AltDirectorySeparatorChar>. Ad esempio, passando il percorso "C:\Directory\SubDirectory\test.txt" al <xref:System.IO.Directory.GetParent%2A> restituisce "C:\Directory\SubDirectory". Il passaggio "C:\Directory\SubDirectory" restituisce "C:\Directory". Tuttavia, il passaggio "C:\Directory\SubDirectory\\" restituisce "C:\Directory\SubDirectory", perché è il separatore di directory finale dopo "Sottodirectory".  
  
 Il `path` parametro non distinzione maiuscole/minuscole.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.IO.Directory.GetParent%2A> metodo per recuperare la directory padre di un percorso specificato dall'utente, "path". Il valore restituito dal <xref:System.IO.Directory.GetParent%2A> metodo viene quindi stampato nella console. L'esempio è configurato per intercettare tutti gli errori comuni di questo metodo.  
  
 [!code-cpp[System.IO.Directory#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Directory/CPP/class1.cpp#4)]
 [!code-csharp[System.IO.Directory#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Directory/CS/class1.cs#4)]
 [!code-vb[System.IO.Directory#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Directory/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">La directory specificata da <paramref name="path" /> è di sola lettura.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile eseguire una query per i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema. Per altre informazioni, vedere l'argomento <see cref="T:System.IO.PathTooLongException" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è stato trovato.</exception>
        <exception cref="T:System.NotSupportedException">Il formato di <paramref name="path" /> non è valido.</exception>
        <exception cref="T:System.Security.SecurityException">Solo .NET Framework: il chiamante non ha le autorizzazioni richieste.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per la lettura da file o directory. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <altmember cref="T:System.IO.DirectoryInfo" />
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public static void Move (string sourceDirName, string destDirName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Move(string sourceDirName, string destDirName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.Move(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Move (sourceDirName As String, destDirName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Move(System::String ^ sourceDirName, System::String ^ destDirName);" />
      <MemberSignature Language="F#" Value="static member Move : string * string -&gt; unit" Usage="System.IO.Directory.Move (sourceDirName, destDirName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirName" Type="System.String" />
        <Parameter Name="destDirName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceDirName">Percorso del file o della directory da spostare.</param>
        <param name="destDirName">Nuovo percorso di <paramref name="sourceDirName" />. Se <paramref name="sourceDirName" /> è un file, anche <paramref name="destDirName" /> deve essere un nome file.</param>
        <summary>Sposta un file o una directory e il suo contenuto in un nuovo percorso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo crea una nuova directory con il nome specificato da `destDirName` e sposta il contenuto di `sourceDirName` alla directory di destinazione appena creato. Se si prova a spostare una directory in una directory che esiste già, un <xref:System.IO.IOException> si verificherà. Ad esempio, verificherà un'eccezione se si prova a spostare c:\mydir in c:\public e c:\public esiste già. In alternativa, è possibile specificare "c:\\\public\\\mydir" come il `destDirName` parametro, fornito che non esiste "mydir" in "c:\\\public", oppure specificare un nuovo nome di directory, ad esempio "c:\\\newdir".  
  
 Il `sourceDirName` e `destDirName` argomenti sono consentiti per specificare un percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 Gli spazi finali vengono rimossi dalla fine dei parametri di percorso prima di spostare la directory.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come spostare una directory e tutti i relativi file in una nuova directory. La directory originale non esiste più dopo essere stata spostata.  
  
 [!code-csharp[System.IO.Directory#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Directory/CS/class6.cs#14)]
 [!code-vb[System.IO.Directory#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Directory/VB/class6.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">È stato effettuato un tentativo di spostare una directory in un diverso volume.  
  
oppure 
 <paramref name="destDirName" /> esiste già.  
  
oppure 
I parametri <paramref name="sourceDirName" /> e <paramref name="destDirName" /> fanno riferimento allo stesso file o alla stessa directory.  
  
oppure 
La directory o un file in essa contenuto è usata da un altro processo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourceDirName" /> o <paramref name="destDirName" /> è una stringa di lunghezza zero, contiene solo spazi vuoti o contiene uno o più caratteri non validi. Per cercare i caratteri non validi, usare il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceDirName" /> o <paramref name="destDirName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato da <paramref name="sourceDirName" /> non è valido (ad esempio si trova in un'unità non mappata).</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per la lettura dal <paramref name="sourceDirName" /> e la scrittura <paramref name="sourceDirName" /> e <paramref name="destDirName" />. Enumerazioni associate: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></permission>
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public static void SetAccessControl (string path, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessControl(string path, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAccessControl(System::String ^ path, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="static member SetAccessControl : string * System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="System.IO.Directory.SetAccessControl (path, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="path">Directory cui aggiungere o rimuovere le voci dell'elenco di controllo di accesso (ACL).</param>
        <param name="directorySecurity">Oggetto <see cref="T:System.Security.AccessControl.DirectorySecurity" /> che descrive una voce ACL da applicare alla directory descritta dal parametro <paramref name="path" />.</param>
        <summary>Applica le voci dell'elenco di controllo di accesso (ACL) descritte da un oggetto <see cref="T:System.Security.AccessControl.DirectorySecurity" /> nella directory specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IO.Directory.SetAccessControl%2A> metodo si applica a voci di elenco (ACL) di controllo di accesso a un file che rappresenta l'elenco ACL non ereditato.  
  
> [!CAUTION]
>  L'elenco ACL specificato per il `directorySecurity` parametro sostituisce l'ACL esistente per la directory. Per aggiungere le autorizzazioni per un nuovo utente, usare il <xref:System.IO.Directory.GetAccessControl%2A> metodo per ottenere l'ACL esistente e modificarlo.  
  
 Un ACL vengono descritti i singoli utenti e/o gruppi che hanno o non si dispongono, diritti per azioni specifiche su un determinato file o directory. Per altre informazioni, vedere [Procedura: aggiungere o rimuovere voci dell'elenco di controllo di accesso (ACL)](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).  
  
 Il <xref:System.IO.Directory.SetAccessControl%2A> metodo persiste solo <xref:System.Security.AccessControl.DirectorySecurity> gli oggetti che sono stati modificati dopo la creazione di oggetti.  Se un <xref:System.Security.AccessControl.DirectorySecurity> oggetto non è stato modificato, non essere mantenuto in un file.  Non è pertanto possibile recuperare un <xref:System.Security.AccessControl.DirectorySecurity> dell'oggetto da un file e riapplicare lo stesso oggetto in un altro file.  
  
 Per copiare le informazioni di ACL da un file a un altro:  
  
1.  Usare la <xref:System.IO.Directory.GetAccessControl%2A> metodo per recuperare il <xref:System.Security.AccessControl.DirectorySecurity> oggetto dal file di origine.  
  
2.  Creare un nuovo <xref:System.Security.AccessControl.DirectorySecurity> oggetto per il file di destinazione.  
  
3.  Usare la <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> oppure <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> metodo dell'origine <xref:System.Security.AccessControl.DirectorySecurity> oggetto per recuperare le informazioni di ACL.  
  
4.  Usare la <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> oppure <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> metodo per copiare le informazioni recuperate nel passaggio 3 nella destinazione <xref:System.Security.AccessControl.DirectorySecurity> oggetto.  
  
5.  Impostare la destinazione <xref:System.Security.AccessControl.DirectorySecurity> oggetto per il file di destinazione usando il <xref:System.IO.Directory.SetAccessControl%2A> (metodo).  
  
 In ambienti di NTFS <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> e <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes> vengono concesse all'utente se l'utente ha <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> diritti alla cartella padre. Per negare <xref:System.Security.AccessControl.FileSystemRights.ReadAttributes> e <xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes>, Nega <xref:System.Security.AccessControl.FileSystemRights.ListDirectory> sulla directory padre.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.IO.Directory.GetAccessControl%2A> e il <xref:System.IO.Directory.SetAccessControl%2A> metodi per aggiungere un accesso alla voce di elenco (ACL) di controllo e quindi rimuovere una voce ACL da una directory.  È necessario specificare un utente valido o un account di gruppo per eseguire questo esempio.  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="directorySecurity" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Non è possibile trovare la directory.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> non valido.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il processo corrente non ha accesso alla directory specificata da <paramref name="path" />.  
  
oppure 
Privilegi non sufficienti per impostare la voce ACL del processo corrente.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Il sistema operativo corrente non è Windows 2000 o versioni successive.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">l'autorizzazione enumerare l'elenco di controllo di accesso (ACL) per una directory. Enumerazioni associate: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> , <see cref="F:System.Security.AccessControl.AccessControlActions.View" />  
  
Azione di sicurezza: richiesta.</permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="SetCreationTime">
      <MemberSignature Language="C#" Value="public static void SetCreationTime (string path, DateTime creationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCreationTime(string path, valuetype System.DateTime creationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCreationTime (path As String, creationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCreationTime(System::String ^ path, DateTime creationTime);" />
      <MemberSignature Language="F#" Value="static member SetCreationTime : string * DateTime -&gt; unit" Usage="System.IO.Directory.SetCreationTime (path, creationTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="creationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="path">File o directory per cui impostare le informazioni sulla data e l'ora di creazione.</param>
        <param name="creationTime">Data e ora in cui è stata eseguita l'ultima scrittura nel file o nella directory. Questo valore è espresso nell'ora locale.</param>
        <summary>Imposta la data e l'ora di creazione per il file o la directory specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `path` parametro è consentito specificare le informazioni sul percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 Il `path` parametro non distinzione maiuscole/minuscole.  
  
   
  
## Examples  
 Nell'esempio seguente vengono illustrate le differenze nell'output quando si usa output Coordinated Universal Time (UTC).  
  
 [!code-cpp[System.IO.UTCExample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.UTCExample/CPP/example.cpp#1)]
 [!code-csharp[System.IO.UTCExample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.UTCExample/CS/example.cs#1)]
 [!code-vb[System.IO.UTCExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.UTCExample/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">Il percorso specificato non è stato trovato.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile eseguire una query per i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="creationTime" /> specifica un valore non compreso nell'intervallo di date o ore consentito per l'operazione.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Il sistema operativo corrente non è Windows NT o versioni successive.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per la scrittura di file o directory specificata. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="SetCreationTimeUtc">
      <MemberSignature Language="C#" Value="public static void SetCreationTimeUtc (string path, DateTime creationTimeUtc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCreationTimeUtc(string path, valuetype System.DateTime creationTimeUtc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCreationTimeUtc (path As String, creationTimeUtc As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCreationTimeUtc(System::String ^ path, DateTime creationTimeUtc);" />
      <MemberSignature Language="F#" Value="static member SetCreationTimeUtc : string * DateTime -&gt; unit" Usage="System.IO.Directory.SetCreationTimeUtc (path, creationTimeUtc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="creationTimeUtc" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="path">File o directory per cui impostare le informazioni sulla data e l'ora di creazione.</param>
        <param name="creationTimeUtc">La data e l'ora di creazione della directory o del file. Questo valore è espresso nell'ora locale.</param>
        <summary>Imposta la data e l'ora di creazione, nel formato dell'ora UTC (Coordinated Universal Time), per il file o la directory specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `path` parametro è consentito specificare le informazioni sul percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 Il `path` parametro non distinzione maiuscole/minuscole.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">Il percorso specificato non è stato trovato.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile eseguire una query per i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="creationTime" /> specifica un valore non compreso nell'intervallo di date o ore consentito per l'operazione.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Il sistema operativo corrente non è Windows NT o versioni successive.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per la scrittura di file o directory specificata. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="SetCurrentDirectory">
      <MemberSignature Language="C#" Value="public static void SetCurrentDirectory (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCurrentDirectory(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.SetCurrentDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCurrentDirectory (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCurrentDirectory(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member SetCurrentDirectory : string -&gt; unit" Usage="System.IO.Directory.SetCurrentDirectory path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Percorso su cui è impostata la directory di lavoro corrente.</param>
        <summary>Imposta la directory di lavoro corrente dell'applicazione sulla directory specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al termine dell'esecuzione dell'applicazione, la directory di lavoro viene ripristinata nel percorso originale (la directory in cui è stato avviato il processo).  
  
 Il `path` parametro è consentito specificare le informazioni sul percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 Gli spazi finali vengono rimossi dalla fine del `path` parametro prima di impostare la directory.  
  
 Il `path` parametro non distinzione maiuscole/minuscole.  
  
 Se si imposta la directory in un'unità contenente supporti rimovibili, ad esempio, a e ":" per un'unità CD-ROM o ("r" per un'unità disco floppy), è possibile determinare se l'unità è pronta, utilizzando il <xref:System.IO.DriveInfo.IsReady%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare la directory corrente e visualizzare la directory radice.  
  
 [!code-cpp[System.IO.DirectoryRoot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.DirectoryRoot/CPP/example.cpp#1)]
 [!code-csharp[System.IO.DirectoryRoot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DirectoryRoot/CS/example.cs#1)]
 [!code-vb[System.IO.DirectoryRoot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DirectoryRoot/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile eseguire una query per i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non ha l'autorizzazione richiesta per accedere al codice non gestito.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Il percorso specificato non è stato trovato.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">La directory specificata non è stato trovata.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per la scrittura di file o directory. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per chiamare codice non gestito. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="SetLastAccessTime">
      <MemberSignature Language="C#" Value="public static void SetLastAccessTime (string path, DateTime lastAccessTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLastAccessTime(string path, valuetype System.DateTime lastAccessTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetLastAccessTime (path As String, lastAccessTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetLastAccessTime(System::String ^ path, DateTime lastAccessTime);" />
      <MemberSignature Language="F#" Value="static member SetLastAccessTime : string * DateTime -&gt; unit" Usage="System.IO.Directory.SetLastAccessTime (path, lastAccessTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="lastAccessTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="path">File o directory per cui impostare le informazioni sulla data e l'ora di accesso.</param>
        <param name="lastAccessTime">Oggetto che contiene il valore da impostare per la data e ora di accesso di <paramref name="path" />. Questo valore è espresso nell'ora locale.</param>
        <summary>Imposta la data e l'ora dell'ultimo accesso al file o alla directory specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `path` parametro è consentito specificare le informazioni sul percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 Il `path` parametro non distinzione maiuscole/minuscole.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare `SetLastAccessTime`.  
  
 [!code-cpp[Dir_SetLastAccess#1](~/samples/snippets/cpp/VS_Snippets_CLR/Dir_SetLastAccess/CPP/dir_setlastaccess.cpp#1)]
 [!code-csharp[Dir_SetLastAccess#1](~/samples/snippets/csharp/VS_Snippets_CLR/Dir_SetLastAccess/CS/dir_setlastaccess.cs#1)]
 [!code-vb[Dir_SetLastAccess#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dir_SetLastAccess/VB/dir_setlastaccess.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">Il percorso specificato non è stato trovato.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile eseguire una query per i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Il sistema operativo corrente non è Windows NT o versioni successive.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="lastAccessTime" /> specifica un valore non compreso nell'intervallo di date o ore consentito per l'operazione.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per la scrittura di file o directory specificata. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="SetLastAccessTimeUtc">
      <MemberSignature Language="C#" Value="public static void SetLastAccessTimeUtc (string path, DateTime lastAccessTimeUtc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLastAccessTimeUtc(string path, valuetype System.DateTime lastAccessTimeUtc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetLastAccessTimeUtc (path As String, lastAccessTimeUtc As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetLastAccessTimeUtc(System::String ^ path, DateTime lastAccessTimeUtc);" />
      <MemberSignature Language="F#" Value="static member SetLastAccessTimeUtc : string * DateTime -&gt; unit" Usage="System.IO.Directory.SetLastAccessTimeUtc (path, lastAccessTimeUtc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="lastAccessTimeUtc" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="path">File o directory per cui impostare le informazioni sulla data e l'ora di accesso.</param>
        <param name="lastAccessTimeUtc">Oggetto che contiene il valore da impostare per la data e ora di accesso di <paramref name="path" />. Questo valore è espresso nell'ora UTC.</param>
        <summary>Imposta la data e l'ora, nel formato dell'ora UTC (Coordinated Universal Time), dell'ultimo accesso al file o alla directory specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `path` parametro è consentito specificare le informazioni sul percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 Il `path` parametro non distinzione maiuscole/minuscole.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 Nell'esempio seguente vengono illustrate le differenze nell'output quando si usa output Coordinated Universal Time (UTC).  
  
 [!code-cpp[System.IO.UTCExample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.UTCExample/CPP/example.cpp#1)]
 [!code-csharp[System.IO.UTCExample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.UTCExample/CS/example.cs#1)]
 [!code-vb[System.IO.UTCExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.UTCExample/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">Il percorso specificato non è stato trovato.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile eseguire una query per i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Il sistema operativo corrente non è Windows NT o versioni successive.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="lastAccessTimeUtc" /> specifica un valore non compreso nell'intervallo di date o ore consentito per l'operazione.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per la scrittura di file o directory specificata. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="SetLastWriteTime">
      <MemberSignature Language="C#" Value="public static void SetLastWriteTime (string path, DateTime lastWriteTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLastWriteTime(string path, valuetype System.DateTime lastWriteTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetLastWriteTime (path As String, lastWriteTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetLastWriteTime(System::String ^ path, DateTime lastWriteTime);" />
      <MemberSignature Language="F#" Value="static member SetLastWriteTime : string * DateTime -&gt; unit" Usage="System.IO.Directory.SetLastWriteTime (path, lastWriteTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="lastWriteTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="path">Percorso della directory.</param>
        <param name="lastWriteTime">Data e ora in cui è stata eseguita l'ultima scrittura nella directory. Questo valore è espresso nell'ora locale.</param>
        <summary>Imposta la data e l'ora in cui è stata eseguita l'ultima scrittura in una directory.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `path` parametro è consentito specificare le informazioni sul percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 Il `path` parametro non distinzione maiuscole/minuscole.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare `SetLastWriteTime`.  
  
 [!code-cpp[Dir_SetLastWrite#1](~/samples/snippets/cpp/VS_Snippets_CLR/Dir_SetLastWrite/CPP/dir_setlastwrite.cpp#1)]
 [!code-csharp[Dir_SetLastWrite#1](~/samples/snippets/csharp/VS_Snippets_CLR/Dir_SetLastWrite/CS/dir_setlastwrite.cs#1)]
 [!code-vb[Dir_SetLastWrite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dir_SetLastWrite/VB/dir_setlastwrite.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">
          <paramref name="path" /> non trovato (ad esempio la directory non esiste o si trova in un'unità non mappata).</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="path" /> non trovato (ad esempio la directory non esiste o si trova in un'unità non mappata).</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile eseguire una query per i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Il sistema operativo corrente non è Windows NT o versioni successive.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="lastWriteTime" /> specifica un valore non compreso nell'intervallo di date o ore consentito per l'operazione.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per la scrittura di file o directory specificata. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
    <Member MemberName="SetLastWriteTimeUtc">
      <MemberSignature Language="C#" Value="public static void SetLastWriteTimeUtc (string path, DateTime lastWriteTimeUtc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLastWriteTimeUtc(string path, valuetype System.DateTime lastWriteTimeUtc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetLastWriteTimeUtc (path As String, lastWriteTimeUtc As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetLastWriteTimeUtc(System::String ^ path, DateTime lastWriteTimeUtc);" />
      <MemberSignature Language="F#" Value="static member SetLastWriteTimeUtc : string * DateTime -&gt; unit" Usage="System.IO.Directory.SetLastWriteTimeUtc (path, lastWriteTimeUtc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="lastWriteTimeUtc" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="path">Percorso della directory.</param>
        <param name="lastWriteTimeUtc">Data e ora in cui è stata eseguita l'ultima scrittura nella directory. Questo valore è espresso nell'ora UTC.</param>
        <summary>Imposta la data e l'ora, nel formato dell'ora UTC (Coordinated Universal Time), dell'ultima scrittura in una directory.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `path` parametro è consentito specificare le informazioni sul percorso relativo o assoluto. Informazioni sul percorso relativo è interpretati come relativo alla directory di lavoro corrente. Per ottenere la directory di lavoro corrente, vedere <xref:System.IO.Directory.GetCurrentDirectory%2A>.  
  
 Il `path` parametro non distinzione maiuscole/minuscole.  
  
 Per un elenco delle attività dei / o comuni, vedere [attività dei / o comuni](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 Nell'esempio seguente vengono illustrate le differenze nell'output quando si usa output Coordinated Universal Time (UTC).  
  
 [!code-cpp[System.IO.UTCExample#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.UTCExample/CPP/example.cpp#1)]
 [!code-csharp[System.IO.UTCExample#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.UTCExample/CS/example.cs#1)]
 [!code-vb[System.IO.UTCExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.UTCExample/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">
          <paramref name="path" /> non trovato (ad esempio la directory non esiste o si trova in un'unità non mappata).</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="path" /> non trovato (ad esempio la directory non esiste o si trova in un'unità non mappata).</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> è una stringa di lunghezza zero, contiene solo spazi vuoti oppure contiene uno o più caratteri non validi. È possibile eseguire una query per i caratteri non validi usando il metodo <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> è <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Il sistema operativo corrente non è Windows NT o versioni successive.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="lastWriteTimeUtc" /> specifica un valore non compreso nell'intervallo di date o ore consentito per l'operazione.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per la scrittura di file o directory specificata. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md">I/O di file e di flussi</related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">Procedura: leggere testo da un file</related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">Procedura: Scrivere un testo in un file</related>
      </Docs>
    </Member>
  </Members>
</Type>