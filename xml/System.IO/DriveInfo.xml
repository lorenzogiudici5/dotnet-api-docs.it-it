<Type Name="DriveInfo" FullName="System.IO.DriveInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e21922e3af23f9a4bbf0b187c7ba7e88ab5983cc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30418955" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DriveInfo : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DriveInfo extends System.Object implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.IO.DriveInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DriveInfo&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DriveInfo sealed : System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.DriveInfo</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce accesso alle informazioni in un'unità.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa classe modella un'unità e fornisce metodi e proprietà per ottenere informazioni sull'unità. Utilizzare <xref:System.IO.DriveInfo> per determinare quali unità sono disponibili e il tipo di unità siano. È anche possibile eseguire una query per determinare la capacità e spazio libero sul disco.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.IO.DriveInfo> classe per visualizzare informazioni su tutte le unità del sistema corrente.  
  
 [!code-csharp[System.IO.DriveInfo#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DriveInfo/cs/DriveInfo.cs#00)]
 [!code-vb[System.IO.DriveInfo#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DriveInfo/vb/DriveInfo.vb#00)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.FileIOPermission">per l'accesso alle informazioni di directory. Il costruttore della classe richiede l'autorizzazione. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DriveInfo (string driveName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string driveName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DriveInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (driveName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DriveInfo(System::String ^ driveName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.DriveInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="driveName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="driveName">Percorso o lettera di unità valida. Quest'ultima può essere espressa in lettere maiuscole o minuscole, dalla 'a' alla 'z'. Un valore null non è valido.</param>
        <summary>Fornisce accesso alle informazioni nell'unità specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questa classe per ottenere informazioni sulle unità. Il nome dell'unità deve essere una lettera maiuscola o minuscola tra 'a' a 'z'. È possibile utilizzare questo metodo per ottenere informazioni sui nomi delle unità che sono `null` oppure percorso UNC (\\\server\share) percorsi.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La lettera di unità non può essere <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La prima lettera di <paramref name="driveName" /> non è una lettera maiuscola o minuscola dalla 'a' alla 'z'.  
  
 oppure  
  
 <paramref name="driveName" /> non si riferisce a un'unità valida.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per l'accesso alle informazioni di directory. Il costruttore della classe richiede l'autorizzazione. Enumerazione associata: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="AvailableFreeSpace">
      <MemberSignature Language="C#" Value="public long AvailableFreeSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AvailableFreeSpace" />
      <MemberSignature Language="DocId" Value="P:System.IO.DriveInfo.AvailableFreeSpace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableFreeSpace As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AvailableFreeSpace { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.DriveInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica la quantità di spazio libero disponibile in un'unità, espresso in byte.</summary>
        <value>La quantità di spazio libero disponibile nell'unità, espresso in byte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà indica la quantità di spazio libero disponibile nell'unità. Si noti che questo numero può essere diverso dal <xref:System.IO.DriveInfo.TotalFreeSpace%2A> numero poiché questa proprietà tiene conto delle quote del disco.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.IO.DriveInfo> classe per visualizzare informazioni su tutte le unità del sistema corrente.  
  
 [!code-csharp[System.IO.DriveInfo#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DriveInfo/cs/DriveInfo.cs#00)]
 [!code-vb[System.IO.DriveInfo#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DriveInfo/vb/DriveInfo.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">L'accesso alle informazioni sull'unità è negato.</exception>
        <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O, ad esempio un errore del disco oppure un'unità non pronta.</exception>
      </Docs>
    </Member>
    <Member MemberName="DriveFormat">
      <MemberSignature Language="C#" Value="public string DriveFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DriveFormat" />
      <MemberSignature Language="DocId" Value="P:System.IO.DriveInfo.DriveFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DriveFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DriveFormat { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.DriveInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome del file system, come NTFS o FAT32.</summary>
        <value>Nome del file system nell'unità specificata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare <xref:System.IO.DriveInfo.DriveFormat%2A> per determinare quale formattazione di un'unità viene utilizzata.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.IO.DriveInfo> classe per visualizzare informazioni su tutte le unità del sistema corrente.  
  
 [!code-csharp[System.IO.DriveInfo#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DriveInfo/cs/DriveInfo.cs#00)]
 [!code-vb[System.IO.DriveInfo#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DriveInfo/vb/DriveInfo.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">L'accesso alle informazioni sull'unità è negato.</exception>
        <exception cref="T:System.IO.DriveNotFoundException">L'unità non esiste o non ne è stato eseguito il mapping.</exception>
        <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O, ad esempio un errore del disco oppure un'unità non pronta.</exception>
      </Docs>
    </Member>
    <Member MemberName="DriveType">
      <MemberSignature Language="C#" Value="public System.IO.DriveType DriveType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.DriveType DriveType" />
      <MemberSignature Language="DocId" Value="P:System.IO.DriveInfo.DriveType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DriveType As DriveType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DriveType DriveType { System::IO::DriveType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.DriveInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DriveType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tipo di unità, ad esempio CD-ROM, rimovibile, di rete o fissa.</summary>
        <value>Uno dei valori di enumerazione che specifica un tipo di unità.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IO.DriveInfo.DriveType%2A> proprietà indica se un'unità è uno dei seguenti: `CDRom`, `Fixed`, `Network`, `NoRootDirectory`, `Ram`, `Removable`, o `Unknown`. Questi valori sono descritti nel <xref:System.IO.DriveType> enumerazione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.IO.DriveInfo> classe per visualizzare informazioni su tutte le unità del sistema corrente.  
  
 [!code-csharp[System.IO.DriveInfo#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DriveInfo/cs/DriveInfo.cs#00)]
 [!code-vb[System.IO.DriveInfo#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DriveInfo/vb/DriveInfo.vb#00)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDrives">
      <MemberSignature Language="C#" Value="public static System.IO.DriveInfo[] GetDrives ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.DriveInfo[] GetDrives() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DriveInfo.GetDrives" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDrives () As DriveInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::IO::DriveInfo ^&gt; ^ GetDrives();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.DriveInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DriveInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera i nomi di tutte le unità logiche in un computer.</summary>
        <returns>Matrice di tipo <see cref="T:System.IO.DriveInfo" /> che rappresenta le unità logiche in un computer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo recupera tutti i nomi di unità logica in un computer. È possibile utilizzare queste informazioni per scorrere la matrice e ottenere informazioni sulle unità utilizzando altri <xref:System.IO.DriveInfo> metodi e proprietà. Utilizzare il <xref:System.IO.DriveInfo.IsReady%2A> proprietà per verificare se un'unità è pronta perché utilizza questo metodo in un'unità che non è pronta, verrà generata una <xref:System.IO.IOException>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.IO.DriveInfo> classe per visualizzare informazioni su tutte le unità del sistema corrente.  
  
 [!code-csharp[System.IO.DriveInfo#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DriveInfo/cs/DriveInfo.cs#00)]
 [!code-vb[System.IO.DriveInfo#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DriveInfo/vb/DriveInfo.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O, ad esempio un errore del disco oppure un'unità non pronta.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per chiamare codice non gestito, ad esempio chiamare codice nativo con platform invoke o l'interoperabilità COM. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsReady">
      <MemberSignature Language="C#" Value="public bool IsReady { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReady" />
      <MemberSignature Language="DocId" Value="P:System.IO.DriveInfo.IsReady" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReady As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReady { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.DriveInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se un'unità è pronta.</summary>
        <value>
          <see langword="true" /> se l'unità è pronta; <see langword="false" /> se l'unità non è pronta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.DriveInfo.IsReady%2A> indica se un'unità è pronta. Ad esempio, indica se un CD è un'unità CD o se un dispositivo di archiviazione rimovibile è pronto per le operazioni di lettura/scrittura. Se non si verifica se un'unità non è pronta e non è pronto, l'esecuzione di query sull'unità tramite <xref:System.IO.DriveInfo> genererà un <xref:System.IO.IOException>.  
  
 Non affidarsi <xref:System.IO.DriveInfo.IsReady%2A> per evitare di rilevare eccezioni dagli altri membri, ad esempio <xref:System.IO.DriveInfo.TotalSize%2A>, <xref:System.IO.DriveInfo.TotalFreeSpace%2A>, e <xref:System.IO.DriveInfo.DriveFormat%2A>. Tra l'ora in cui il codice controlla <xref:System.IO.DriveInfo.IsReady%2A> e quindi accede a una delle altre proprietà (anche se l'accesso venga eseguito immediatamente dopo il controllo), potrebbe essere stato disconnesso un'unità o un disco potrebbe essere stato rimosso.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.IO.DriveInfo> classe per visualizzare informazioni su tutte le unità del sistema corrente.  
  
 [!code-csharp[System.IO.DriveInfo#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DriveInfo/cs/DriveInfo.cs#00)]
 [!code-vb[System.IO.DriveInfo#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DriveInfo/vb/DriveInfo.vb#00)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.DriveInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.DriveInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome di un'unità, ad esempio C:\\.</summary>
        <value>Nome dell'unità.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà è il nome assegnato all'unità, ad esempio C:\ o e:\\.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.IO.DriveInfo> classe per visualizzare informazioni su tutte le unità del sistema corrente.  
  
 [!code-csharp[System.IO.DriveInfo#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DriveInfo/cs/DriveInfo.cs#00)]
 [!code-vb[System.IO.DriveInfo#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DriveInfo/vb/DriveInfo.vb#00)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootDirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo RootDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo RootDirectory" />
      <MemberSignature Language="DocId" Value="P:System.IO.DriveInfo.RootDirectory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootDirectory As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ RootDirectory { System::IO::DirectoryInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.DriveInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la directory radice di un'unità.</summary>
        <value>Un oggetto che contiene la directory radice dell'unità.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.DriveInfo</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Oggetto da popolare con i dati.</param>
        <param name="context">Destinazione della serializzazione (vedere <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
        <summary>Compila un oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con i dati necessari per serializzare l'oggetto di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tutti gli oggetti inclusi nel <xref:System.Runtime.Serialization.SerializationInfo> oggetto vengono automaticamente rilevati e serializzati dal formattatore.  
  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.IO.DriveInfo> a un'interfaccia <xref:System.Runtime.Serialization.ISerializable>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">richiede l'attendibilità totale per il chiamante immediato. Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DriveInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.DriveInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un nome di unità come stringa.</summary>
        <returns>Nome dell'unità.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo restituisce il <xref:System.IO.DriveInfo.Name%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalFreeSpace">
      <MemberSignature Language="C#" Value="public long TotalFreeSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 TotalFreeSpace" />
      <MemberSignature Language="DocId" Value="P:System.IO.DriveInfo.TotalFreeSpace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalFreeSpace As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long TotalFreeSpace { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.DriveInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la quantità totale di spazio libero disponibile in un'unità, espresso in byte.</summary>
        <value>La quantità totale di spazio libero disponibile in un'unità, espresso in byte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà indica la quantità totale di spazio libero disponibile nell'unità, non solo ciò che è disponibile per l'utente corrente.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.IO.DriveInfo> classe per visualizzare informazioni su tutte le unità del sistema corrente.  
  
 [!code-csharp[System.IO.DriveInfo#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DriveInfo/cs/DriveInfo.cs#00)]
 [!code-vb[System.IO.DriveInfo#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DriveInfo/vb/DriveInfo.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">L'accesso alle informazioni sull'unità è negato.</exception>
        <exception cref="T:System.IO.DriveNotFoundException">L'unità non esiste o non ne è stato eseguito il mapping.</exception>
        <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O, ad esempio un errore del disco oppure un'unità non pronta.</exception>
      </Docs>
    </Member>
    <Member MemberName="TotalSize">
      <MemberSignature Language="C#" Value="public long TotalSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 TotalSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.DriveInfo.TotalSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long TotalSize { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.DriveInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le dimensioni totali dello spazio di archiviazione in un'unità, espresso in byte.</summary>
        <value>Le dimensioni totali dell'unità, espresse in byte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà indica le dimensioni totali dell'unità in byte, cosa non appena è disponibile per l'utente corrente.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.IO.DriveInfo> classe per visualizzare informazioni su tutte le unità del sistema corrente.  
  
 [!code-csharp[System.IO.DriveInfo#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DriveInfo/cs/DriveInfo.cs#00)]
 [!code-vb[System.IO.DriveInfo#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DriveInfo/vb/DriveInfo.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">L'accesso alle informazioni sull'unità è negato.</exception>
        <exception cref="T:System.IO.DriveNotFoundException">L'unità non esiste o non ne è stato eseguito il mapping.</exception>
        <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O, ad esempio un errore del disco oppure un'unità non pronta.</exception>
      </Docs>
    </Member>
    <Member MemberName="VolumeLabel">
      <MemberSignature Language="C#" Value="public string VolumeLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VolumeLabel" />
      <MemberSignature Language="DocId" Value="P:System.IO.DriveInfo.VolumeLabel" />
      <MemberSignature Language="VB.NET" Value="Public Property VolumeLabel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VolumeLabel { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.DriveInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'etichetta del volume di un'unità.</summary>
        <value>Etichetta del volume.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La lunghezza dell'etichetta è determinata dal sistema operativo. Ad esempio, NTFS consente un'etichetta di volume per un massimo di 32 caratteri. Si noti che `null` valido <xref:System.IO.DriveInfo.VolumeLabel%2A>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo del <xref:System.IO.DriveInfo> classe per visualizzare informazioni su tutte le unità del sistema corrente.  
  
 [!code-csharp[System.IO.DriveInfo#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DriveInfo/cs/DriveInfo.cs#00)]
 [!code-vb[System.IO.DriveInfo#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DriveInfo/vb/DriveInfo.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O, ad esempio un errore del disco oppure un'unità non pronta.</exception>
        <exception cref="T:System.IO.DriveNotFoundException">L'unità non esiste o non ne è stato eseguito il mapping.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.UnauthorizedAccessException">L'etichetta di volume viene impostata su un'unità di rete o CD-ROM.  
  
 oppure  
  
 L'accesso alle informazioni sull'unità è negato.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per impostare l'etichetta di volume. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
  </Members>
</Type>