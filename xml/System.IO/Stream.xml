<Type Name="Stream" FullName="System.IO.Stream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="acd18bbd5f06183691857c78b562fcde828c9385" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52591792" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Stream : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Stream extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Stream" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Stream&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stream abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type Stream = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="47d2c-101">Fornisce una visualizzazione generica di una sequenza di byte.</span>
      <span class="sxs-lookup">
        <span data-stu-id="47d2c-101">Provides a generic view of a sequence of bytes.</span>
      </span>
      <span data-ttu-id="47d2c-102">Questa è una classe abstract.</span>
      <span class="sxs-lookup">
        <span data-stu-id="47d2c-102">This is an abstract class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-103"><xref:System.IO.Stream> è la classe base astratta di tutti i flussi.</span><span class="sxs-lookup"><span data-stu-id="47d2c-103"><xref:System.IO.Stream> is the abstract base class of all streams.</span></span> <span data-ttu-id="47d2c-104">Un flusso è un'astrazione di una sequenza di byte, ad esempio un file, un dispositivo di input/output, una pipe di comunicazione tra processi o un socket TCP/IP.</span><span class="sxs-lookup"><span data-stu-id="47d2c-104">A stream is an abstraction of a sequence of bytes, such as a file, an input/output device, an inter-process communication pipe, or a TCP/IP socket.</span></span> <span data-ttu-id="47d2c-105">Il <xref:System.IO.Stream> classe e le relative classi derivate forniscono una visualizzazione generica di questi diversi tipi di input e output e separando così il programmatore dai dettagli specifici del sistema operativo e dei dispositivi sottostanti.</span><span class="sxs-lookup"><span data-stu-id="47d2c-105">The <xref:System.IO.Stream> class and its derived classes provide a generic view of these different types of input and output, and isolate the programmer from the specific details of the operating system and the underlying devices.</span></span>  
  
 <span data-ttu-id="47d2c-106">I flussi implicano tre operazioni fondamentali:</span><span class="sxs-lookup"><span data-stu-id="47d2c-106">Streams involve three fundamental operations:</span></span>  
  
-   <span data-ttu-id="47d2c-107">È possibile leggere da flussi.</span><span class="sxs-lookup"><span data-stu-id="47d2c-107">You can read from streams.</span></span> <span data-ttu-id="47d2c-108">La lettura è il trasferimento dei dati da un flusso in una struttura di dati, ad esempio una matrice di byte.</span><span class="sxs-lookup"><span data-stu-id="47d2c-108">Reading is the transfer of data from a stream into a data structure, such as an array of bytes.</span></span>  
  
-   <span data-ttu-id="47d2c-109">È possibile scrivere nei flussi.</span><span class="sxs-lookup"><span data-stu-id="47d2c-109">You can write to streams.</span></span> <span data-ttu-id="47d2c-110">La scrittura è il trasferimento dei dati da una struttura di dati in un flusso.</span><span class="sxs-lookup"><span data-stu-id="47d2c-110">Writing is the transfer of data from a data structure into a stream.</span></span>  
  
-   <span data-ttu-id="47d2c-111">La ricerca.</span><span class="sxs-lookup"><span data-stu-id="47d2c-111">Streams can support seeking.</span></span> <span data-ttu-id="47d2c-112">La ricerca fa riferimento a una query e modifica della posizione corrente all'interno di un flusso.</span><span class="sxs-lookup"><span data-stu-id="47d2c-112">Seeking refers to querying and modifying the current position within a stream.</span></span> <span data-ttu-id="47d2c-113">Seek funzionalità dipende dal tipo dell'archivio di backup dispone di un flusso.</span><span class="sxs-lookup"><span data-stu-id="47d2c-113">Seek capability depends on the kind of backing store a stream has.</span></span> <span data-ttu-id="47d2c-114">Ad esempio, i flussi di rete non includono alcun concetto unificato di una posizione corrente e pertanto in genere non supportano la ricerca.</span><span class="sxs-lookup"><span data-stu-id="47d2c-114">For example, network streams have no unified concept of a current position, and therefore typically do not support seeking.</span></span>  
  
 <span data-ttu-id="47d2c-115">Alcuni dei più comunemente usati flussi da cui ereditare <xref:System.IO.Stream> vengono <xref:System.IO.FileStream>, e <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="47d2c-115">Some of the more commonly used streams that inherit from <xref:System.IO.Stream> are <xref:System.IO.FileStream>, and <xref:System.IO.MemoryStream>.</span></span>  
  
 <span data-ttu-id="47d2c-116">A seconda nell'origine dati sottostante o nell'archivio, flussi potrebbero supportare solo alcune di queste funzionalità.</span><span class="sxs-lookup"><span data-stu-id="47d2c-116">Depending on the underlying data source or repository, streams might support only some of these capabilities.</span></span> <span data-ttu-id="47d2c-117">È possibile eseguire una query relativa funzionalità di un flusso usando il <xref:System.IO.Stream.CanRead%2A>, <xref:System.IO.Stream.CanWrite%2A>, e <xref:System.IO.Stream.CanSeek%2A> delle proprietà del <xref:System.IO.Stream> classe.</span><span class="sxs-lookup"><span data-stu-id="47d2c-117">You can query a stream for its capabilities by using the <xref:System.IO.Stream.CanRead%2A>, <xref:System.IO.Stream.CanWrite%2A>, and <xref:System.IO.Stream.CanSeek%2A> properties of the <xref:System.IO.Stream> class.</span></span>  
  
 <span data-ttu-id="47d2c-118">Il <xref:System.IO.Stream.Read%2A> e <xref:System.IO.Stream.Write%2A> metodi leggere e scrivere dati in un'ampia gamma di formati.</span><span class="sxs-lookup"><span data-stu-id="47d2c-118">The <xref:System.IO.Stream.Read%2A> and <xref:System.IO.Stream.Write%2A> methods read and write data in a variety of formats.</span></span> <span data-ttu-id="47d2c-119">Per i flussi che supportano la ricerca, usare il <xref:System.IO.Stream.Seek%2A> e <xref:System.IO.Stream.SetLength%2A> metodi e le <xref:System.IO.Stream.Position%2A> e <xref:System.IO.Stream.Length%2A> proprietà per eseguire query e modificare la posizione corrente e la lunghezza di un flusso.</span><span class="sxs-lookup"><span data-stu-id="47d2c-119">For streams that support seeking, use the <xref:System.IO.Stream.Seek%2A> and <xref:System.IO.Stream.SetLength%2A> methods and the <xref:System.IO.Stream.Position%2A> and <xref:System.IO.Stream.Length%2A> properties to query and modify the current position and length of a stream.</span></span>  
  
 <span data-ttu-id="47d2c-120">Questo tipo implementa la <xref:System.IDisposable> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="47d2c-120">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="47d2c-121">Dopo aver utilizzato il tipo, è necessario eliminarlo direttamente o indirettamente.</span><span class="sxs-lookup"><span data-stu-id="47d2c-121">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="47d2c-122">Per eliminare il tipo direttamente, chiamare relativi <xref:System.IDisposable.Dispose%2A> metodo in un `try` / `catch` blocco.</span><span class="sxs-lookup"><span data-stu-id="47d2c-122">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="47d2c-123">Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio come ad esempio `using` in C# o `Using` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="47d2c-123">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="47d2c-124">Per altre informazioni, vedere la sezione "Utilizzo di oggetti che implementano IDisposable" nel <xref:System.IDisposable> argomento relativo all'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="47d2c-124">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="47d2c-125">Eliminazione una <xref:System.IO.Stream> oggetto Svuota tutti i dati memorizzati nel buffer e sostanzialmente chiama il <xref:System.IO.Stream.Flush%2A> metodo per l'utente.</span><span class="sxs-lookup"><span data-stu-id="47d2c-125">Disposing a <xref:System.IO.Stream> object flushes any buffered data, and essentially calls the <xref:System.IO.Stream.Flush%2A> method for you.</span></span> <span data-ttu-id="47d2c-126"><xref:System.IO.Stream.Dispose%2A> rilascia inoltre le risorse del sistema operativo, ad esempio gli handle di file, connessioni di rete o memoria usata per qualsiasi buffer interno.</span><span class="sxs-lookup"><span data-stu-id="47d2c-126"><xref:System.IO.Stream.Dispose%2A> also releases operating system resources such as file handles, network connections, or memory used for any internal buffering.</span></span> <span data-ttu-id="47d2c-127">Il <xref:System.IO.BufferedStream> classe fornisce la funzionalità di esecuzione del wrapping di un flusso memorizzato nel buffer intorno a un altro flusso allo scopo di migliorare la lettura e scrittura delle prestazioni.</span><span class="sxs-lookup"><span data-stu-id="47d2c-127">The <xref:System.IO.BufferedStream> class provides the capability of wrapping a buffered stream around another stream in order to improve read and write performance.</span></span>  
  
 <span data-ttu-id="47d2c-128">Inizia con la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], il <xref:System.IO.Stream> classe include metodi async per semplificare le operazioni asincrone.</span><span class="sxs-lookup"><span data-stu-id="47d2c-128">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.IO.Stream> class includes async methods to simplify asynchronous operations.</span></span> <span data-ttu-id="47d2c-129">Contiene un metodo asincrono `Async` nel nome, ad esempio <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, e <xref:System.IO.Stream.FlushAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="47d2c-129">An async method contains `Async` in its name, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>.</span></span> <span data-ttu-id="47d2c-130">Questi metodi consentono di eseguire operazioni dei / o intensivo di risorse senza bloccare il thread principale.</span><span class="sxs-lookup"><span data-stu-id="47d2c-130">These methods enable you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="47d2c-131">Questa considerazione sulle prestazioni è particolarmente importante in un'applicazione [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] in cui tramite un'operazione di flusso per cui è richiesto molto tempo è possibile bloccare il thread UI e far sembrare che l'applicazione non funzioni.</span><span class="sxs-lookup"><span data-stu-id="47d2c-131">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="47d2c-132">I metodi asincroni vengono usati in combinazione con il `async` e `await` parole chiave in Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="47d2c-132">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="47d2c-133">Quando usato in un [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app <xref:System.IO.Stream> include due metodi di estensione: <xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A> e <xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="47d2c-133">When used in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app, <xref:System.IO.Stream> includes two extension methods: <xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A> and <xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A>.</span></span> <span data-ttu-id="47d2c-134">Questi metodi convertono un <xref:System.IO.Stream> oggetti in un flusso il [!INCLUDE[wrt](~/includes/wrt-md.md)].</span><span class="sxs-lookup"><span data-stu-id="47d2c-134">These methods convert a <xref:System.IO.Stream> object to a stream in the [!INCLUDE[wrt](~/includes/wrt-md.md)].</span></span> <span data-ttu-id="47d2c-135">È anche possibile convertire un flusso nel [!INCLUDE[wrt](~/includes/wrt-md.md)] a un <xref:System.IO.Stream> oggetto tramite il <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> e <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="47d2c-135">You can also convert a stream in the [!INCLUDE[wrt](~/includes/wrt-md.md)] to a <xref:System.IO.Stream> object by using the <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> and <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> methods.</span></span> <span data-ttu-id="47d2c-136">Per altre informazioni, vedere [procedura: conversione tra flussi di .NET Framework e flussi di Windows Runtime](~/docs/standard/io/how-to-convert-between-dotnet-streams-and-winrt-streams.md)</span><span class="sxs-lookup"><span data-stu-id="47d2c-136">For more information, see [How to: Convert Between .NET Framework Streams and Windows Runtime Streams](~/docs/standard/io/how-to-convert-between-dotnet-streams-and-winrt-streams.md)</span></span>  
  
 <span data-ttu-id="47d2c-137">Alcune implementazioni di flusso eseguono locale buffering dei dati sottostanti per migliorare le prestazioni.</span><span class="sxs-lookup"><span data-stu-id="47d2c-137">Some stream implementations perform local buffering of the underlying data to improve performance.</span></span> <span data-ttu-id="47d2c-138">Per questi flussi, è possibile usare la <xref:System.IO.Stream.Flush%2A> o <xref:System.IO.Stream.FlushAsync%2A> metodo per cancellare tutti i buffer interni e assicurare che tutti i dati siano stati scritti l'origine dati o nell'archivio sottostante.</span><span class="sxs-lookup"><span data-stu-id="47d2c-138">For such streams, you can use the <xref:System.IO.Stream.Flush%2A> or <xref:System.IO.Stream.FlushAsync%2A> method to clear any internal buffers and ensure that all data has been written to the underlying data source or repository.</span></span>  
  
 <span data-ttu-id="47d2c-139">Se è necessario un flusso con nessun archivio di backup (noto anche come un bucket di bit), usare il <xref:System.IO.Stream.Null> campo da recuperare un'istanza di un flusso che è progettato per questo scopo.</span><span class="sxs-lookup"><span data-stu-id="47d2c-139">If you need a stream with no backing store (also known as a bit bucket), use the <xref:System.IO.Stream.Null> field to retrieve an instance of a stream that is designed for this purpose.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2c-140">L'esempio seguente illustra come usare due <xref:System.IO.FileStream> oggetti da copiare in modo asincrono i file da una directory in un'altra directory.</span><span class="sxs-lookup"><span data-stu-id="47d2c-140">The following example demonstrates how to use two <xref:System.IO.FileStream> objects to asynchronously copy the files from one directory to another directory.</span></span> <span data-ttu-id="47d2c-141">La classe <xref:System.IO.FileStream> deriva dalla classe <xref:System.IO.Stream> .</span><span class="sxs-lookup"><span data-stu-id="47d2c-141">The <xref:System.IO.FileStream> class derives from the <xref:System.IO.Stream> class.</span></span> <span data-ttu-id="47d2c-142">Si noti che il gestore eventi <xref:System.Web.UI.WebControls.Button.Click> per il controllo <xref:System.Windows.Controls.Button> è contrassegnato con il modificatore `async` perché chiama un metodo asincrono.</span><span class="sxs-lookup"><span data-stu-id="47d2c-142">Notice that the <xref:System.Web.UI.WebControls.Button.Click> event handler for the <xref:System.Windows.Controls.Button> control is marked with the `async` modifier because it calls an asynchronous method.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#1](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example.cs#1)]
 [!code-vb[Asynchronous_File_IO_async#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="47d2c-143">Quando si implementa una classe derivata di <see cref="T:System.IO.Stream" />, è necessario fornire implementazioni per le <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> e <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> metodi.</span>
        <span class="sxs-lookup">
          <span data-stu-id="47d2c-143">When you implement a derived class of <see cref="T:System.IO.Stream" />, you must provide implementations for the <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> methods.</span>
        </span>
        <span data-ttu-id="47d2c-144">I metodi asincroni <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />, <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />, e <see cref="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" /> usano i metodi sincroni <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> e <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> nelle rispettive implementazioni.</span>
        <span class="sxs-lookup">
          <span data-stu-id="47d2c-144">The asynchronous methods <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />, <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />, and <see cref="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" /> use the synchronous methods <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> in their implementations.</span>
        </span>
        <span data-ttu-id="47d2c-145">Di conseguenza, le implementazioni di <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> e <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> funzioneranno correttamente con i metodi asincroni.</span>
        <span class="sxs-lookup">
          <span data-stu-id="47d2c-145">Therefore, your implementations of <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> will work correctly with the asynchronous methods.</span>
        </span>
        <span data-ttu-id="47d2c-146">Le implementazioni predefinite di <see cref="M:System.IO.Stream.ReadByte" /> e <see cref="M:System.IO.Stream.WriteByte(System.Byte)" /> creare una nuova matrice di byte a elemento singolo e quindi chiamare le implementazioni dei <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> e <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="47d2c-146">The default implementations of <see cref="M:System.IO.Stream.ReadByte" /> and <see cref="M:System.IO.Stream.WriteByte(System.Byte)" /> create a new single-element byte array, and then call your implementations of <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span>
        </span>
        <span data-ttu-id="47d2c-147">Quando si deriva da <see cref="T:System.IO.Stream" />, si consiglia di eseguire l'override di questi metodi per accedere al buffer interno, se presente, per migliorare notevolmente le prestazioni.</span>
        <span class="sxs-lookup">
          <span data-stu-id="47d2c-147">When you derive from <see cref="T:System.IO.Stream" />, we recommend that you override these methods to access your internal buffer, if you have one, for substantially better performance.</span>
        </span>
        <span data-ttu-id="47d2c-148">È inoltre necessario fornire le implementazioni di <see cref="P:System.IO.Stream.CanRead" />, <see cref="P:System.IO.Stream.CanSeek" />, <see cref="P:System.IO.Stream.CanWrite" />, <see cref="M:System.IO.Stream.Flush" />, <see cref="P:System.IO.Stream.Length" />, <see cref="P:System.IO.Stream.Position" />, <see cref="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />, e <see cref="M:System.IO.Stream.SetLength(System.Int64)" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="47d2c-148">You must also provide implementations of <see cref="P:System.IO.Stream.CanRead" />, <see cref="P:System.IO.Stream.CanSeek" />, <see cref="P:System.IO.Stream.CanWrite" />, <see cref="M:System.IO.Stream.Flush" />, <see cref="P:System.IO.Stream.Length" />, <see cref="P:System.IO.Stream.Position" />, <see cref="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />, and <see cref="M:System.IO.Stream.SetLength(System.Int64)" />.</span>
        </span>
        <span data-ttu-id="47d2c-149">Non esegue l'override la <see cref="M:System.IO.Stream.Close" /> metodo, invece, inserire tutti i <see cref="T:System.IO.Stream" /> la logica di pulizia nel <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> (metodo).</span>
        <span class="sxs-lookup">
          <span data-stu-id="47d2c-149">Do not override the <see cref="M:System.IO.Stream.Close" /> method, instead, put all the <see cref="T:System.IO.Stream" /> cleanup logic in the <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> method.</span>
        </span>
        <span data-ttu-id="47d2c-150">Per altre informazioni, vedere [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
        <span class="sxs-lookup">
          <span data-stu-id="47d2c-150">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.IO.FileStream" />
    <altmember cref="T:System.IO.MemoryStream" />
    <altmember cref="T:System.IO.BufferedStream" />
    <related type="Article" href="~/docs/standard/io/index.md">
      <span data-ttu-id="47d2c-151">I/O di file e di flussi</span>
      <span class="sxs-lookup">
        <span data-stu-id="47d2c-151">File and Stream I/O</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/io/how-to-convert-between-dotnet-streams-and-winrt-streams.md">
      <span data-ttu-id="47d2c-152">Procedura: eseguire la conversione tra flussi di .NET Framework e flussi di Windows Runtime</span>
      <span class="sxs-lookup">
        <span data-stu-id="47d2c-152">How to: Convert Between .NET Framework Streams and Windows Runtime Streams</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Stream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Stream();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-153">Inizializza una nuova istanza della classe <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-153">Initializes a new instance of the <see cref="T:System.IO.Stream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-154"><xref:System.IO.Stream> è la classe base astratta di tutti i flussi.</span><span class="sxs-lookup"><span data-stu-id="47d2c-154"><xref:System.IO.Stream> is the abstract base class of all streams.</span></span>  
  
 <span data-ttu-id="47d2c-155">Alcuni dei più comunemente usati flussi da cui ereditare <xref:System.IO.Stream> vengono <xref:System.IO.FileStream>, e <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="47d2c-155">Some of the more commonly used streams that inherit from <xref:System.IO.Stream> are <xref:System.IO.FileStream>, and <xref:System.IO.MemoryStream>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="stream.BeginRead (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="47d2c-156">Buffer in cui leggere i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-156">The buffer to read the data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="47d2c-157">Offset dei byte nel <paramref name="buffer" /> da cui iniziare la scrittura dei dati letti dal flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-157">The byte offset in <paramref name="buffer" /> at which to begin writing data read from the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="47d2c-158">Numero massimo di byte da leggere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-158">The maximum number of bytes to read.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="47d2c-159">Callback asincrono facoltativo, da chiamare quando la lettura è completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-159">An optional asynchronous callback, to be called when the read is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="47d2c-160">Oggetto fornito dall'utente che distingue questa specifica richiesta di lettura asincrona da altre richieste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-160">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2c-161">Inizia un'operazione di lettura asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-161">Begins an asynchronous read operation.</span>
          </span>
          <span data-ttu-id="47d2c-162">(In alternativa, si consideri l'uso di <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-162">(Consider using <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47d2c-163">Oggetto <see cref="T:System.IAsyncResult" /> che rappresenta la lettura asincrona, che può essere ancora in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-163">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous read, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-164">In .NET Framework 4 e versioni precedenti è necessario usare metodi quali <xref:System.IO.Stream.BeginRead%2A> e <xref:System.IO.Stream.EndRead%2A> per implementare operazioni di I/O asincrone.</span><span class="sxs-lookup"><span data-stu-id="47d2c-164">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="47d2c-165">Questi metodi sono ancora disponibili nel [!INCLUDE[net_v45](~/includes/net-v45-md.md)] per supportare il codice legacy; tuttavia, i nuovi metodi async, ad esempio <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, e <xref:System.IO.Stream.FlushAsync%2A>, della Guida in linea è implementare più facilmente le operazioni dei / o asincrona.</span><span class="sxs-lookup"><span data-stu-id="47d2c-165">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="47d2c-166">L'implementazione predefinita di `BeginRead` in un flusso di chiamate di <xref:System.IO.Stream.Read%2A> metodo in modo sincrono, vale a dire che `Read` potrebbe bloccarsi su alcuni flussi.</span><span class="sxs-lookup"><span data-stu-id="47d2c-166">The default implementation of `BeginRead` on a stream calls the <xref:System.IO.Stream.Read%2A> method synchronously, which means that `Read` might block on some streams.</span></span> <span data-ttu-id="47d2c-167">Tuttavia, le istanze di classi, ad esempio `FileStream` e `NetworkStream` supportano completamente le operazioni asincrone, se le istanze sono state aperte in modo asincrono.</span><span class="sxs-lookup"><span data-stu-id="47d2c-167">However, instances of classes such as `FileStream` and `NetworkStream` fully support asynchronous operations if the instances have been opened asynchronously.</span></span> <span data-ttu-id="47d2c-168">Di conseguenza, le chiamate a `BeginRead` non bloccherà su tali flussi.</span><span class="sxs-lookup"><span data-stu-id="47d2c-168">Therefore, calls to `BeginRead` will not block on those streams.</span></span> <span data-ttu-id="47d2c-169">È possibile eseguire l'override `BeginRead` (utilizzando delegati asincroni, ad esempio) per ottenere un comportamento asincrono.</span><span class="sxs-lookup"><span data-stu-id="47d2c-169">You can override `BeginRead` (by using async delegates, for example) to provide asynchronous behavior.</span></span>  
  
 <span data-ttu-id="47d2c-170">Passare il `IAsyncResult` un valore restituito per il <xref:System.IO.Stream.EndRead%2A> metodo del flusso per determinare il numero di byte letti e rilasciare le risorse di sistema operativo usate per la lettura.</span><span class="sxs-lookup"><span data-stu-id="47d2c-170">Pass the `IAsyncResult` return value to the <xref:System.IO.Stream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading.</span></span> <span data-ttu-id="47d2c-171"><xref:System.IO.Stream.EndRead%2A> deve essere chiamato una volta per ogni chiamata a <xref:System.IO.Stream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="47d2c-171"><xref:System.IO.Stream.EndRead%2A> must be called once for every call to <xref:System.IO.Stream.BeginRead%2A>.</span></span> <span data-ttu-id="47d2c-172">È possibile eseguire questa operazione usando lo stesso codice che ha chiamato `BeginRead` o in un callback passato al `BeginRead`.</span><span class="sxs-lookup"><span data-stu-id="47d2c-172">You can do this either by using the same code that called `BeginRead` or in a callback passed to `BeginRead`.</span></span>  
  
 <span data-ttu-id="47d2c-173">La posizione corrente nel flusso viene aggiornata durante la lettura o scrittura asincrona viene eseguita, non al termine dell'operazione dei / o.</span><span class="sxs-lookup"><span data-stu-id="47d2c-173">The current position in the stream is updated when the asynchronous read or write is issued, not when the I/O operation completes.</span></span>  
  
 <span data-ttu-id="47d2c-174">Più richieste asincrone contemporanee rendono incerto l'ordine di completamento della richiesta.</span><span class="sxs-lookup"><span data-stu-id="47d2c-174">Multiple simultaneous asynchronous requests render the request completion order uncertain.</span></span>  
  
 <span data-ttu-id="47d2c-175">Usare il <xref:System.IO.Stream.CanRead%2A> proprietà per determinare se l'istanza corrente supporta la lettura.</span><span class="sxs-lookup"><span data-stu-id="47d2c-175">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="47d2c-176">Se un flusso viene chiuso o si passa un argomento non valido, le eccezioni vengono generate immediatamente `BeginRead`.</span><span class="sxs-lookup"><span data-stu-id="47d2c-176">If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from `BeginRead`.</span></span> <span data-ttu-id="47d2c-177">Gli errori che si verificano durante una richiesta di lettura asincrona, ad esempio un errore del disco durante la richiesta dei / o, si verificano nel pool di thread e generare eccezioni quando si chiama `EndRead`.</span><span class="sxs-lookup"><span data-stu-id="47d2c-177">Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling `EndRead`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="47d2c-178">È stato eseguito un tentativo di lettura asincrona oltre la fine del flusso o si è verificato un errore del disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-178">Attempted an asynchronous read past the end of the stream, or a disk error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47d2c-179">Uno o più argomenti non sono validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-179">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47d2c-180">Sono stati chiamati dei metodi dopo la chiusura del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-180">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47d2c-181">L'implementazione corrente di <see langword="Stream" /> non supporta l'operazione di lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-181">The current <see langword="Stream" /> implementation does not support the read operation.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="47d2c-182">I/O di file e di flussi</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-182">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="47d2c-183">Procedura: leggere testo da un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-183">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="47d2c-184">Procedura: Scrivere un testo in un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-184">How to: Write Text to a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/asynchronous-file-i-o.md">
          <span data-ttu-id="47d2c-185">I/O di file asincrono</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-185">Asynchronous File I/O</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginWrite (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="stream.BeginWrite (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="47d2c-186">Buffer da cui scrivere i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-186">The buffer to write data from.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="47d2c-187">Offset dei byte in <paramref name="buffer" /> da cui iniziare la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-187">The byte offset in <paramref name="buffer" /> from which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="47d2c-188">Numero massimo di byte da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-188">The maximum number of bytes to write.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="47d2c-189">Callback asincrono facoltativo, da chiamare quando la scrittura è completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-189">An optional asynchronous callback, to be called when the write is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="47d2c-190">Oggetto fornito dall'utente che distingue questa specifica richiesta di scrittura asincrona da altre richieste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-190">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2c-191">Inizia un'operazione di scrittura asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-191">Begins an asynchronous write operation.</span>
          </span>
          <span data-ttu-id="47d2c-192">(In alternativa, si consideri l'uso di <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-192">(Consider using <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47d2c-193">Oggetto <see langword="IAsyncResult" /> che rappresenta la scrittura asincrona, che può essere ancora in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-193">An <see langword="IAsyncResult" /> that represents the asynchronous write, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-194">In .NET Framework 4 e versioni precedenti è necessario usare metodi quali <xref:System.IO.Stream.BeginWrite%2A> e <xref:System.IO.Stream.EndWrite%2A> per implementare operazioni di I/O asincrone.</span><span class="sxs-lookup"><span data-stu-id="47d2c-194">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginWrite%2A> and <xref:System.IO.Stream.EndWrite%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="47d2c-195">Questi metodi sono ancora disponibili nel [!INCLUDE[net_v45](~/includes/net-v45-md.md)] per supportare il codice legacy; tuttavia, i nuovi metodi async, ad esempio <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, e <xref:System.IO.Stream.FlushAsync%2A>, della Guida in linea è implementare più facilmente le operazioni dei / o asincrona.</span><span class="sxs-lookup"><span data-stu-id="47d2c-195">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="47d2c-196">L'implementazione predefinita di `BeginWrite` in un flusso di chiamate di <xref:System.IO.Stream.Write%2A> metodo in modo sincrono, vale a dire che `Write` potrebbe bloccarsi su alcuni flussi.</span><span class="sxs-lookup"><span data-stu-id="47d2c-196">The default implementation of `BeginWrite` on a stream calls the <xref:System.IO.Stream.Write%2A> method synchronously, which means that `Write` might block on some streams.</span></span> <span data-ttu-id="47d2c-197">Tuttavia, le istanze di classi, ad esempio `FileStream` e `NetworkStream` supportano completamente le operazioni asincrone, se le istanze sono state aperte in modo asincrono.</span><span class="sxs-lookup"><span data-stu-id="47d2c-197">However, instances of classes such as `FileStream` and `NetworkStream` fully support asynchronous operations if the instances have been opened asynchronously.</span></span> <span data-ttu-id="47d2c-198">Di conseguenza, le chiamate a `BeginWrite` non bloccherà su tali flussi.</span><span class="sxs-lookup"><span data-stu-id="47d2c-198">Therefore, calls to `BeginWrite` will not block on those streams.</span></span> <span data-ttu-id="47d2c-199">È possibile eseguire l'override `BeginWrite` (utilizzando delegati asincroni, ad esempio) per ottenere un comportamento asincrono.</span><span class="sxs-lookup"><span data-stu-id="47d2c-199">You can override `BeginWrite` (by using async delegates, for example) to provide asynchronous behavior.</span></span>  
  
 <span data-ttu-id="47d2c-200">Passare il `IAsyncResult` restituito dal metodo corrente per <xref:System.IO.Stream.EndWrite%2A> per assicurarsi che l'operazione di scrittura viene completata e libera le risorse in modo appropriato.</span><span class="sxs-lookup"><span data-stu-id="47d2c-200">Pass the `IAsyncResult` returned by the current method to <xref:System.IO.Stream.EndWrite%2A> to ensure that the write completes and frees resources appropriately.</span></span> <span data-ttu-id="47d2c-201"><xref:System.IO.Stream.EndWrite%2A> deve essere chiamato una volta per ogni chiamata a <xref:System.IO.Stream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="47d2c-201"><xref:System.IO.Stream.EndWrite%2A> must be called once for every call to <xref:System.IO.Stream.BeginWrite%2A>.</span></span> <span data-ttu-id="47d2c-202">È possibile eseguire questa operazione usando lo stesso codice che ha chiamato `BeginWrite` o in un callback passato al `BeginWrite`.</span><span class="sxs-lookup"><span data-stu-id="47d2c-202">You can do this either by using the same code that called `BeginWrite` or in a callback passed to `BeginWrite`.</span></span> <span data-ttu-id="47d2c-203">Se si verifica un errore durante la scrittura asincrona, fino a non essere generata un'eccezione `EndWrite` viene chiamato con il `IAsyncResult` restituito da questo metodo.</span><span class="sxs-lookup"><span data-stu-id="47d2c-203">If an error occurs during an asynchronous write, an exception will not be thrown until `EndWrite` is called with the `IAsyncResult` returned by this method.</span></span>  
  
 <span data-ttu-id="47d2c-204">Se un flusso è scrivibile, la scrittura alla fine del flusso si espande il flusso.</span><span class="sxs-lookup"><span data-stu-id="47d2c-204">If a stream is writable, writing at the end of the stream expands the stream.</span></span>  
  
 <span data-ttu-id="47d2c-205">La posizione corrente nel flusso viene aggiornata quando si esegue la lettura o scrittura asincrona, non al termine dell'operazione dei / o.</span><span class="sxs-lookup"><span data-stu-id="47d2c-205">The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.</span></span> <span data-ttu-id="47d2c-206">Più richieste asincrone contemporanee rendono incerto l'ordine di completamento della richiesta.</span><span class="sxs-lookup"><span data-stu-id="47d2c-206">Multiple simultaneous asynchronous requests render the request completion order uncertain.</span></span>  
  
 <span data-ttu-id="47d2c-207">Usare il <xref:System.IO.Stream.CanWrite%2A> proprietà per determinare se l'istanza corrente supporta la scrittura.</span><span class="sxs-lookup"><span data-stu-id="47d2c-207">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 <span data-ttu-id="47d2c-208">Se un flusso viene chiuso o si passa un argomento non valido, le eccezioni vengono generate immediatamente `BeginWrite`.</span><span class="sxs-lookup"><span data-stu-id="47d2c-208">If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from `BeginWrite`.</span></span> <span data-ttu-id="47d2c-209">Gli errori che si verificano durante una richiesta di scrittura asincrona, ad esempio un errore del disco durante la richiesta dei / o, si verificano nel pool di thread e generare eccezioni quando si chiama `EndWrite`.</span><span class="sxs-lookup"><span data-stu-id="47d2c-209">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling `EndWrite`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="47d2c-210">È stato eseguito un tentativo di scrittura asincrona oltre la fine del flusso o si è verificato un errore del disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-210">Attempted an asynchronous write past the end of the stream, or a disk error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47d2c-211">Uno o più argomenti non sono validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-211">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47d2c-212">Sono stati chiamati dei metodi dopo la chiusura del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-212">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47d2c-213">L'implementazione corrente di <see langword="Stream" /> non supporta l'operazione di scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-213">The current <see langword="Stream" /> implementation does not support the write operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />
        <altmember cref="P:System.IO.Stream.CanWrite" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="47d2c-214">I/O di file e di flussi</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-214">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="47d2c-215">Procedura: leggere testo da un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-215">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="47d2c-216">Procedura: Scrivere un testo in un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-216">How to: Write Text to a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/asynchronous-file-i-o.md">
          <span data-ttu-id="47d2c-217">I/O di file asincrono</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-217">Asynchronous File I/O</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public abstract bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.IO.Stream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-218">Quando ne viene eseguito l'override in una classe derivata, ottiene un valore che indica se il flusso corrente supporta la lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-218">When overridden in a derived class, gets a value indicating whether the current stream supports reading.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47d2c-219">
            <see langword="true" /> se il flusso supporta la lettura; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-219">
              <see langword="true" /> if the stream supports reading; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-220">Se una classe derivata da <xref:System.IO.Stream> non supporta la lettura, le chiamate per il <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, e <xref:System.IO.Stream.BeginRead%2A> metodi generano un <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="47d2c-220">If a class derived from <xref:System.IO.Stream> does not support reading, calls to the <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, and <xref:System.IO.Stream.BeginRead%2A> methods throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="47d2c-221">Se il flusso è chiuso, questa proprietà restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="47d2c-221">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2c-222">Di seguito è riportato un esempio d'uso di `CanRead` proprietà.</span><span class="sxs-lookup"><span data-stu-id="47d2c-222">The following is an example of using the `CanRead` property.</span></span>  
  
 [!code-cpp[Classic FileStream.CanRead Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileStream.CanRead Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/CS/source.cs#1)]
 [!code-vb[Classic FileStream.CanRead Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="47d2c-223">I/O di file e di flussi</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-223">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="47d2c-224">Procedura: leggere testo da un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-224">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="47d2c-225">Procedura: Scrivere un testo in un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-225">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public abstract bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.IO.Stream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-226">Quando ne viene eseguito l'override in una classe derivata, ottiene un valore che indica se il flusso corrente supporta la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-226">When overridden in a derived class, gets a value indicating whether the current stream supports seeking.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47d2c-227">
            <see langword="true" /> se il flusso supporta la ricerca; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-227">
              <see langword="true" /> if the stream supports seeking; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-228">Se una classe derivata da <xref:System.IO.Stream> non supporta la ricerca, le chiamate a <xref:System.IO.Stream.Length%2A>, <xref:System.IO.Stream.SetLength%2A>, <xref:System.IO.Stream.Position%2A>, e <xref:System.IO.Stream.Seek%2A> generano un <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="47d2c-228">If a class derived from <xref:System.IO.Stream> does not support seeking, calls to <xref:System.IO.Stream.Length%2A>, <xref:System.IO.Stream.SetLength%2A>, <xref:System.IO.Stream.Position%2A>, and <xref:System.IO.Stream.Seek%2A> throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="47d2c-229">Se il flusso è chiuso, questa proprietà restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="47d2c-229">If the stream is closed, this property returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="47d2c-230">I/O di file e di flussi</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-230">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="47d2c-231">Procedura: leggere testo da un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-231">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="47d2c-232">Procedura: Scrivere un testo in un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-232">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public virtual bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.IO.Stream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-233">Ottiene un valore che determina se il flusso corrente prevede il timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-233">Gets a value that determines whether the current stream can time out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47d2c-234">Valore che determina se il flusso corrente prevede il timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-234">A value that determines whether the current stream can time out.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-235">La proprietà <xref:System.IO.Stream.CanTimeout%2A> restituisce sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="47d2c-235">The <xref:System.IO.Stream.CanTimeout%2A> property always returns `false`.</span></span> <span data-ttu-id="47d2c-236">Alcune implementazioni di flusso richiedono un comportamento diverso, ad esempio <xref:System.Net.Sockets.NetworkStream>, che verifica il timeout se la connettività di rete è interrotta o persa.</span><span class="sxs-lookup"><span data-stu-id="47d2c-236">Some stream implementations require different behavior, such as <xref:System.Net.Sockets.NetworkStream>, which times out if network connectivity is interrupted or lost.</span></span> <span data-ttu-id="47d2c-237">Se si implementa un flusso che deve essere in grado di raggiungere il timeout, è necessario eseguire l'override di questa proprietà per restituire `true`.</span><span class="sxs-lookup"><span data-stu-id="47d2c-237">If you are implementing a stream that must be able to time out, this property should be overridden to return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Stream.ReadTimeout" />
        <altmember cref="P:System.IO.Stream.WriteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public abstract bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.IO.Stream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-238">Quando ne viene eseguito l'override in una classe derivata, ottiene un valore che indica se il flusso corrente supporta la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-238">When overridden in a derived class, gets a value indicating whether the current stream supports writing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47d2c-239">
            <see langword="true" /> se il flusso supporta la scrittura; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-239">
              <see langword="true" /> if the stream supports writing; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-240">Se una classe derivata da <xref:System.IO.Stream> non supporta la scrittura, una chiamata a <xref:System.IO.Stream.Write%2A>, <xref:System.IO.Stream.BeginWrite%2A>, o <xref:System.IO.Stream.WriteByte%2A> genera un <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="47d2c-240">If a class derived from <xref:System.IO.Stream> does not support writing, a call to <xref:System.IO.Stream.Write%2A>, <xref:System.IO.Stream.BeginWrite%2A>, or <xref:System.IO.Stream.WriteByte%2A> throws a <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="47d2c-241">In questi casi <xref:System.IO.Stream.Flush%2A> viene in genere implementato come un metodo vuoto per garantire la compatibilità completa con altre <xref:System.IO.Stream> tipi poiché è possibile scaricare un flusso di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="47d2c-241">In such cases, <xref:System.IO.Stream.Flush%2A> is typically implemented as an empty method to ensure full compatibility with other <xref:System.IO.Stream> types since it's valid to flush a read-only stream.</span></span>
  
 <span data-ttu-id="47d2c-242">Se il flusso è chiuso, questa proprietà restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="47d2c-242">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2c-243">Di seguito è riportato un esempio d'uso di `CanWrite` proprietà.</span><span class="sxs-lookup"><span data-stu-id="47d2c-243">The following is an example of using the `CanWrite` property.</span></span>  
  
 [!code-cpp[Classic Stream.CanWrite Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stream.CanWrite Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stream.CanWrite Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stream.CanWrite Example/CS/source.cs#1)]
 [!code-vb[Classic Stream.CanWrite Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stream.CanWrite Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="47d2c-244">I/O di file e di flussi</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-244">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="47d2c-245">Procedura: leggere testo da un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-245">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="47d2c-246">Procedura: Scrivere un testo in un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-246">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="stream.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-247">Chiude il flusso corrente e libera le risorse, come socket e handle di file, ad esso associate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-247">Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream.</span>
          </span>
          <span data-ttu-id="47d2c-248">Anziché chiamare questo metodo, assicurarsi che il flusso sia eliminato correttamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-248">Instead of calling this method, ensure that the stream is properly disposed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-249">Questo metodo chiama <xref:System.IO.Stream.Dispose%2A>, specificando `true` per rilasciare tutte le risorse.</span><span class="sxs-lookup"><span data-stu-id="47d2c-249">This method calls <xref:System.IO.Stream.Dispose%2A>, specifying `true` to release all resources.</span></span> <span data-ttu-id="47d2c-250">Non è necessario chiamare in modo specifico la <xref:System.IO.Stream.Close%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="47d2c-250">You do not have to specifically call the <xref:System.IO.Stream.Close%2A> method.</span></span> <span data-ttu-id="47d2c-251">Al contrario, assicurarsi che ogni <xref:System.IO.Stream> oggetto è stato eliminato correttamente.</span><span class="sxs-lookup"><span data-stu-id="47d2c-251">Instead, ensure that every <xref:System.IO.Stream> object is properly disposed.</span></span> <span data-ttu-id="47d2c-252">È possibile dichiarare <xref:System.IO.Stream> oggetti all'interno di un `using` blocchi (o `Using` blocco in Visual Basic) per garantire che il flusso e tutte le relative risorse vengono eliminate, oppure è possibile chiamare in modo esplicito il <xref:System.IO.Stream.Dispose%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="47d2c-252">You can declare <xref:System.IO.Stream> objects within a `using` block (or `Using` block in Visual Basic) to ensure that the stream and all of its resources are disposed, or you can explicitly call the <xref:System.IO.Stream.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="47d2c-253">La cancellazione del flusso non svuotamento del codificatore sottostante a meno che non si chiama in modo esplicito un'implementazione di <xref:System.IO.Stream.Flush%2A> o `Close`.</span><span class="sxs-lookup"><span data-stu-id="47d2c-253">Flushing the stream will not flush its underlying encoder unless you explicitly call an implementation of <xref:System.IO.Stream.Flush%2A> or `Close`.</span></span> <span data-ttu-id="47d2c-254">L'impostazione <xref:System.IO.StreamWriter.AutoFlush%2A> a `true` significa che i dati verranno scaricati dal buffer nel flusso, ma non verrà rimosso lo stato del codificatore.</span><span class="sxs-lookup"><span data-stu-id="47d2c-254">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="47d2c-255">In questo modo il codificatore mantenere lo stato (parzialmente caratteri) in modo che può codificare correttamente il blocco successivo di caratteri.</span><span class="sxs-lookup"><span data-stu-id="47d2c-255">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="47d2c-256">Questo scenario riguarda UTF8 e UTF7, in cui determinati caratteri possono essere codificati solo dopo che il codificatore riceve adiacenti uno o più caratteri.</span><span class="sxs-lookup"><span data-stu-id="47d2c-256">This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="47d2c-257">Tenta di modificare il flusso dopo che è stato chiuso il flusso potrebbe generare un <xref:System.ObjectDisposedException>.</span><span class="sxs-lookup"><span data-stu-id="47d2c-257">Attempts to manipulate the stream after the stream has been closed might throw an <xref:System.ObjectDisposedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="47d2c-258">Nelle classi derivate, non eseguire l'override la <see cref="M:System.IO.Stream.Close" /> metodo, invece, inserire tutte le <see langword="Stream" /> la logica di pulizia nel <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> (metodo).</span>
            <span class="sxs-lookup">
              <span data-stu-id="47d2c-258">In derived classes, do not override the <see cref="M:System.IO.Stream.Close" /> method, instead, put all of the <see langword="Stream" /> cleanup logic in the <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> method.</span>
            </span>
            <span data-ttu-id="47d2c-259">Per altre informazioni, vedere [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="47d2c-259">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
          </para>
        </block>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="47d2c-260">I/O di file e di flussi</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-260">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="47d2c-261">Procedura: leggere testo da un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-261">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="47d2c-262">Procedura: Scrivere un testo in un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-262">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-263">Legge i byte dal flusso corrente e li scrive in un altro flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-263">Reads the bytes from the current stream and writes them to another stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.IO.Stream destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.IO.Stream destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(System::IO::Stream ^ destination);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.IO.Stream -&gt; unit" Usage="stream.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="47d2c-264">Flusso in cui verrà copiato il contenuto del flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-264">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2c-265">Legge i byte dal flusso corrente e li scrive in un altro flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-265">Reads the bytes from the current stream and writes them to another stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-266">Copia inizia in corrispondenza della posizione corrente nel flusso corrente e reimposta la posizione del flusso di destinazione al termine dell'operazione di copia.</span><span class="sxs-lookup"><span data-stu-id="47d2c-266">Copying begins at the current position in the current stream, and does not reset the position of the destination stream after the copy operation is complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2c-267">Nell'esempio seguente copia il contenuto di un <xref:System.IO.FileStream> a un <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="47d2c-267">The following example copies the contents of a <xref:System.IO.FileStream> to a <xref:System.IO.MemoryStream>.</span></span>  
  
 [!code-csharp[System.IO.Stream.CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stream.copyto/cs/program.cs#1)]
 [!code-vb[System.IO.Stream.CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stream.copyto/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2c-268">
            <paramref name="destination" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-268">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47d2c-269">Il flusso corrente non supporta la lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-269">The current stream does not support reading.</span>
          </span>
          <span data-ttu-id="47d2c-270">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-270">-or-</span>
          </span>
          <span data-ttu-id="47d2c-271">
            <paramref name="destination" /> non supporta la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-271">
              <paramref name="destination" /> does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47d2c-272">Il flusso corrente o <paramref name="destination" /> sono stati chiusi prima che venisse chiamato il metodo <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-272">Either the current stream or <paramref name="destination" /> were closed before the <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" /> method was called.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="47d2c-273">Si è verificato un errore di I/O.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-273">An I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.IO.Stream destination, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.IO.Stream destination, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Stream, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(System::IO::Stream ^ destination, int bufferSize);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.IO.Stream * int -&gt; unit" Usage="stream.CopyTo (destination, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="47d2c-274">Flusso in cui verrà copiato il contenuto del flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-274">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="47d2c-275">Dimensione del buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-275">The size of the buffer.</span>
          </span>
          <span data-ttu-id="47d2c-276">Il valore deve essere maggiore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-276">This value must be greater than zero.</span>
          </span>
          <span data-ttu-id="47d2c-277">La dimensione predefinita è 81920.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-277">The default size is 81920.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2c-278">Legge tutti i byte dal flusso corrente e li scrive in un altro flusso, usando una dimensione di buffer specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-278">Reads the bytes from the current stream and writes them to another stream, using a specified buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-279">Copia inizia in corrispondenza della posizione corrente nel flusso corrente e reimposta la posizione del flusso di destinazione al termine dell'operazione di copia.</span><span class="sxs-lookup"><span data-stu-id="47d2c-279">Copying begins at the current position in the current stream, and does not reset the position of the destination stream after the copy operation is complete.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2c-280">
            <paramref name="destination" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-280">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="47d2c-281">
            <paramref name="bufferSize" /> è un valore negativo o zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-281">
              <paramref name="bufferSize" /> is negative or zero.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47d2c-282">Il flusso corrente non supporta la lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-282">The current stream does not support reading.</span>
          </span>
          <span data-ttu-id="47d2c-283">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-283">-or-</span>
          </span>
          <span data-ttu-id="47d2c-284">
            <paramref name="destination" /> non supporta la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-284">
              <paramref name="destination" /> does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47d2c-285">Il flusso corrente o <paramref name="destination" /> sono stati chiusi prima che venisse chiamato il metodo <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-285">Either the current stream or <paramref name="destination" /> were closed before the <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" /> method was called.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="47d2c-286">Si è verificato un errore di I/O.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-286">An I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyToAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-287">Legge in modo asincrono i byte dal flusso corrente e li scrive in un altro flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-287">Asynchronously reads the bytes from the current stream and writes them to another stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyToAsync (destination As Stream) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination);" />
      <MemberSignature Language="F#" Value="member this.CopyToAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task" Usage="stream.CopyToAsync destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="47d2c-288">Flusso in cui verrà copiato il contenuto del flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-288">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2c-289">Legge in modo asincrono i byte dal flusso corrente e li scrive in un altro flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-289">Asynchronously reads the bytes from the current stream and writes them to another stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47d2c-290">Attività che rappresenta l'operazione di copia asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-290">A task that represents the asynchronous copy operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-291">Il <xref:System.IO.Stream.CopyToAsync%2A> metodo consente di eseguire operazioni dei / o intensivo di risorse senza bloccare il thread principale.</span><span class="sxs-lookup"><span data-stu-id="47d2c-291">The <xref:System.IO.Stream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="47d2c-292">Questa considerazione sulle prestazioni è particolarmente importante in un'applicazione [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] in cui tramite un'operazione di flusso per cui è richiesto molto tempo è possibile bloccare il thread UI e far sembrare che l'applicazione non funzioni.</span><span class="sxs-lookup"><span data-stu-id="47d2c-292">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="47d2c-293">I metodi asincroni vengono usati in combinazione con il `async` e `await` parole chiave in Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="47d2c-293">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="47d2c-294">Ha inizio la copia in corrispondenza della posizione corrente nel flusso corrente.</span><span class="sxs-lookup"><span data-stu-id="47d2c-294">Copying begins at the current position in the current stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2c-295">L'esempio seguente illustra come usare due <xref:System.IO.FileStream> oggetti da copiare in modo asincrono i file da una directory a altra.</span><span class="sxs-lookup"><span data-stu-id="47d2c-295">The following example demonstrates how to use two <xref:System.IO.FileStream> objects to asynchronously copy the files from one directory to another.</span></span> <span data-ttu-id="47d2c-296">La classe <xref:System.IO.FileStream> deriva dalla classe <xref:System.IO.Stream> .</span><span class="sxs-lookup"><span data-stu-id="47d2c-296">The <xref:System.IO.FileStream> class derives from the <xref:System.IO.Stream> class.</span></span>  <span data-ttu-id="47d2c-297">Si noti che il <xref:System.Web.UI.WebControls.Button.Click> gestore dell'evento per il <xref:System.Windows.Controls.Button> controllo è contrassegnato con il `async` modificatore perché chiama un metodo asincrono</span><span class="sxs-lookup"><span data-stu-id="47d2c-297">Notice that the <xref:System.Web.UI.WebControls.Button.Click> event handler for the <xref:System.Windows.Controls.Button> control is marked with the `async` modifier because it calls an asynchronous method</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#1](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example.cs#1)]
 [!code-vb[Asynchronous_File_IO_async#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2c-298">
            <paramref name="destination" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-298">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47d2c-299">Il flusso corrente o il flusso di destinazione viene eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-299">Either the current stream or the destination stream is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47d2c-300">Il flusso corrente non supporta la lettura, o il flusso di destinazione non supporta la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-300">The current stream does not support reading, or the destination stream does not support writing.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyToAsync (destination As Stream, bufferSize As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, int bufferSize);" />
      <MemberSignature Language="F#" Value="member this.CopyToAsync : System.IO.Stream * int -&gt; System.Threading.Tasks.Task" Usage="stream.CopyToAsync (destination, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="47d2c-301">Flusso in cui verrà copiato il contenuto del flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-301">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="47d2c-302">Dimensione del buffer, in byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-302">The size, in bytes, of the buffer.</span>
          </span>
          <span data-ttu-id="47d2c-303">Il valore deve essere maggiore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-303">This value must be greater than zero.</span>
          </span>
          <span data-ttu-id="47d2c-304">La dimensione predefinita è 81920.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-304">The default size is 81920.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2c-305">Legge in modo asincrono tutti i byte dal flusso corrente e li scrive in un altro flusso, usando una dimensione di buffer specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-305">Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47d2c-306">Attività che rappresenta l'operazione di copia asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-306">A task that represents the asynchronous copy operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-307">Il <xref:System.IO.Stream.CopyToAsync%2A> metodo consente di eseguire operazioni dei / o intensivo di risorse senza bloccare il thread principale.</span><span class="sxs-lookup"><span data-stu-id="47d2c-307">The <xref:System.IO.Stream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="47d2c-308">Questa considerazione sulle prestazioni è particolarmente importante in un'applicazione [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] in cui tramite un'operazione di flusso per cui è richiesto molto tempo è possibile bloccare il thread UI e far sembrare che l'applicazione non funzioni.</span><span class="sxs-lookup"><span data-stu-id="47d2c-308">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="47d2c-309">I metodi asincroni vengono usati in combinazione con il `async` e `await` parole chiave in Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="47d2c-309">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="47d2c-310">Ha inizio la copia in corrispondenza della posizione corrente nel flusso corrente.</span><span class="sxs-lookup"><span data-stu-id="47d2c-310">Copying begins at the current position in the current stream.</span></span>  
  
 <span data-ttu-id="47d2c-311">Per un esempio di copia tra due flussi, vedere il <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> rapporto di overload.</span><span class="sxs-lookup"><span data-stu-id="47d2c-311">For an example of copying between two streams, see the <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2c-312">
            <paramref name="destination" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-312">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="47d2c-313">
            <paramref name="buffersize" /> è un valore negativo o zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-313">
              <paramref name="buffersize" /> is negative or zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47d2c-314">Il flusso corrente o il flusso di destinazione viene eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-314">Either the current stream or the destination stream is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47d2c-315">Il flusso corrente non supporta la lettura, o il flusso di destinazione non supporta la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-315">The current stream does not support reading, or the destination stream does not support writing.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.CopyToAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stream.CopyToAsync (destination, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, int bufferSize, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, int32 bufferSize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, int bufferSize, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member CopyToAsync : System.IO.Stream * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CopyToAsync : System.IO.Stream * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stream.CopyToAsync (destination, bufferSize, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="47d2c-316">Flusso in cui verrà copiato il contenuto del flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-316">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="47d2c-317">Dimensione del buffer, in byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-317">The size, in bytes, of the buffer.</span>
          </span>
          <span data-ttu-id="47d2c-318">Il valore deve essere maggiore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-318">This value must be greater than zero.</span>
          </span>
          <span data-ttu-id="47d2c-319">La dimensione predefinita è 81920.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-319">The default size is 81920.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="47d2c-320">Token per il monitoraggio delle richieste di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-320">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="47d2c-321">Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-321">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2c-322">Legge in modo asincrono i byte dal flusso corrente e li scrive in un altro flusso, usando una dimensione di buffer specificata e un token di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-322">Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size and cancellation token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47d2c-323">Attività che rappresenta l'operazione di copia asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-323">A task that represents the asynchronous copy operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-324">Il <xref:System.IO.Stream.CopyToAsync%2A> metodo consente di eseguire operazioni dei / o intensivo di risorse senza bloccare il thread principale.</span><span class="sxs-lookup"><span data-stu-id="47d2c-324">The <xref:System.IO.Stream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="47d2c-325">Questa considerazione sulle prestazioni è particolarmente importante in un'applicazione [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] in cui tramite un'operazione di flusso per cui è richiesto molto tempo è possibile bloccare il thread UI e far sembrare che l'applicazione non funzioni.</span><span class="sxs-lookup"><span data-stu-id="47d2c-325">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="47d2c-326">I metodi asincroni vengono usati in combinazione con il `async` e `await` parole chiave in Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="47d2c-326">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="47d2c-327">Se l'operazione viene annullata prima che venga completato, l'attività restituita contiene il <xref:System.Threading.Tasks.TaskStatus.Canceled> valore per il <xref:System.Threading.Tasks.Task.Status%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="47d2c-327">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="47d2c-328">Ha inizio la copia in corrispondenza della posizione corrente nel flusso corrente.</span><span class="sxs-lookup"><span data-stu-id="47d2c-328">Copying begins at the current position in the current stream.</span></span>  
  
 <span data-ttu-id="47d2c-329">Per un esempio di copia tra due flussi, vedere il <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> rapporto di overload.</span><span class="sxs-lookup"><span data-stu-id="47d2c-329">For an example of copying between two streams, see the <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2c-330">
            <paramref name="destination" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-330">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="47d2c-331">
            <paramref name="buffersize" /> è un valore negativo o zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-331">
              <paramref name="buffersize" /> is negative or zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47d2c-332">Il flusso corrente o il flusso di destinazione viene eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-332">Either the current stream or the destination stream is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47d2c-333">Il flusso corrente non supporta la lettura, o il flusso di destinazione non supporta la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-333">The current stream does not support reading, or the destination stream does not support writing.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWaitHandle">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.WaitHandle CreateWaitHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.WaitHandle CreateWaitHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CreateWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateWaitHandle () As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::WaitHandle ^ CreateWaitHandle();" />
      <MemberSignature Language="F#" Value="abstract member CreateWaitHandle : unit -&gt; System.Threading.WaitHandle&#xA;override this.CreateWaitHandle : unit -&gt; System.Threading.WaitHandle" Usage="stream.CreateWaitHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("CreateWaitHandle will be removed eventually.  Please use "new ManualResetEvent(false)" instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-334">Alloca un oggetto <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-334">Allocates a <see cref="T:System.Threading.WaitHandle" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47d2c-335">Riferimento all'oggetto <see langword="WaitHandle" /> allocato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-335">A reference to the allocated <see langword="WaitHandle" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-336">Quando viene chiamato per la prima volta, il metodo corrente viene creato un `WaitHandle` dell'oggetto e lo restituisce.</span><span class="sxs-lookup"><span data-stu-id="47d2c-336">When called for the first time, the current method creates a `WaitHandle` object and returns it.</span></span> <span data-ttu-id="47d2c-337">Per le chiamate successive, `CreateWaitHandle` restituisce un riferimento a un nuovo handle di attesa.</span><span class="sxs-lookup"><span data-stu-id="47d2c-337">On subsequent calls, `CreateWaitHandle` returns a reference to a new wait handle.</span></span>  
  
 <span data-ttu-id="47d2c-338">Usare questo metodo se si implementano i metodi asincroni e richiede un modo per bloccare <xref:System.IO.Stream.EndRead%2A> o <xref:System.IO.Stream.EndWrite%2A> fino al completamento dell'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="47d2c-338">Use this method if you implement the asynchronous methods and require a way of blocking in <xref:System.IO.Stream.EndRead%2A> or <xref:System.IO.Stream.EndWrite%2A> until the asynchronous operation is complete.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="47d2c-339">I/O di file e di flussi</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-339">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="47d2c-340">Procedura: leggere testo da un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-340">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="47d2c-341">Procedura: Scrivere un testo in un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-341">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-342">Rilascia tutte le risorse usate dall'oggetto <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-342">Releases all resources used by the <see cref="T:System.IO.Stream" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="stream.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-343">Rilascia tutte le risorse usate da <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-343">Releases all resources used by the <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-344">Questo metodo elimina il flusso, scrivendo le modifiche all'archivio di backup e chiusura del flusso per rilasciare le risorse.</span><span class="sxs-lookup"><span data-stu-id="47d2c-344">This method disposes the stream, by writing any changes to the backing store and closing the stream to release resources.</span></span>  
  
 <span data-ttu-id="47d2c-345">La chiamata `Dispose` consente le risorse usate dal <xref:System.IO.Stream> riallocazione per altri scopi.</span><span class="sxs-lookup"><span data-stu-id="47d2c-345">Calling `Dispose` allows the resources used by the <xref:System.IO.Stream> to be reallocated for other purposes.</span></span> <span data-ttu-id="47d2c-346">Per altre informazioni sulle `Dispose`, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="47d2c-346">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="47d2c-347">Posizionare tutta la logica di pulizia per l'oggetto di flusso in <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47d2c-347">Place all cleanup logic for your stream object in <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span>
            </span>
            <span data-ttu-id="47d2c-348">Non eseguire l'override <see cref="M:System.IO.Stream.Close" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47d2c-348">Do not override <see cref="M:System.IO.Stream.Close" />.</span>
            </span>
            <span data-ttu-id="47d2c-349">Si noti che a causa dei requisiti di compatibilità con le versioni precedenti, l'implementazione del metodo è diverso dalla procedura consigliata per il modello Dispose.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47d2c-349">Note that because of backward compatibility requirements, this method's implementation differs from the recommended guidance for the Dispose pattern.</span>
            </span>
            <span data-ttu-id="47d2c-350">Questo metodo chiama <see cref="M:System.IO.Stream.Close" />, che a sua volta chiama <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47d2c-350">This method calls <see cref="M:System.IO.Stream.Close" />, which then calls <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="stream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="47d2c-351">
            <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-351">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2c-352">Rilascia le risorse non gestite usate da <see cref="T:System.IO.Stream" /> e, facoltativamente, le risorse gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-352">Releases the unmanaged resources used by the <see cref="T:System.IO.Stream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-353">Si devono rilasciare tutte le risorse, specificando `true` per `disposing`.</span><span class="sxs-lookup"><span data-stu-id="47d2c-353">You should release all resources by specifying `true` for `disposing`.</span></span> <span data-ttu-id="47d2c-354">Quando `disposing` è `true`, inoltre è possibile garantire il flusso di dati viene scaricati nel buffer sottostante e accedere ad altri oggetti finalizzabili.</span><span class="sxs-lookup"><span data-stu-id="47d2c-354">When `disposing` is `true`, the stream can also ensure data is flushed to the underlying buffer, and access other finalizable objects.</span></span>  <span data-ttu-id="47d2c-355">Ciò potrebbe non essere possibile quando viene chiamato da un finalizzatore per mancanza di ordinamento tra dei finalizzatori.</span><span class="sxs-lookup"><span data-stu-id="47d2c-355">This may not be possible when called from a finalizer due a lack of ordering among finalizers.</span></span>  
  
 <span data-ttu-id="47d2c-356">Se il flusso usa un handle del sistema operativo per comunicare con la relativa origine, è consigliabile usare una sottoclasse di <xref:System.Runtime.InteropServices.SafeHandle> per questo scopo.</span><span class="sxs-lookup"><span data-stu-id="47d2c-356">If your stream is using an operating system handle to communicate with its source, consider using a subclass of <xref:System.Runtime.InteropServices.SafeHandle> for this purpose.</span></span>  
  
 <span data-ttu-id="47d2c-357">Questo metodo viene chiamato da parte del pubblico <xref:System.ComponentModel.Component.Dispose%2A> metodo e <xref:System.Object.Finalize%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="47d2c-357">This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="47d2c-358"><xref:System.ComponentModel.Component.Dispose%2A> richiama il metodo protetto <xref:System.IO.Stream.Dispose%2A> metodo con il `disposing` parametro impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="47d2c-358"><xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Stream.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="47d2c-359"><xref:System.Object.Finalize%2A> richiama <xref:System.IO.Stream.Dispose%2A> con `disposing` impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="47d2c-359"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.Stream.Dispose%2A> with `disposing` set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="47d2c-360">Nelle classi derivate, non eseguire l'override di <see cref="M:System.IO.Stream.Close" /> metodo, invece, inserire tutta la logica di pulizia di Stream nel <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> (metodo).</span>
            <span class="sxs-lookup">
              <span data-stu-id="47d2c-360">In derived classes, do not override the <see cref="M:System.IO.Stream.Close" /> method, instead, put all of the Stream cleanup logic in the <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> method.</span>
            </span>
            <span data-ttu-id="47d2c-361">Il metodo <see cref="M:System.ComponentModel.Component.Dispose" /> può essere chiamato più volte da altri oggetti.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47d2c-361">
                <see cref="M:System.ComponentModel.Component.Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="47d2c-362">In caso di override di <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, non fare riferimento a oggetti già eliminati in una chiamata precedente a <see cref="M:System.ComponentModel.Component.Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47d2c-362">When overriding <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.ComponentModel.Component.Dispose" />.</span>
            </span>
            <span data-ttu-id="47d2c-363">Per altre informazioni su come implementare <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, vedere [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="47d2c-363">For more information about how to implement <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="47d2c-364">Per altre informazioni sulle <see cref="M:System.ComponentModel.Component.Dispose" /> e <see cref="M:System.Object.Finalize" />, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="47d2c-364">For more information about <see cref="M:System.ComponentModel.Component.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public virtual int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndRead : IAsyncResult -&gt; int&#xA;override this.EndRead : IAsyncResult -&gt; int" Usage="stream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="47d2c-365">Riferimento alla richiesta asincrona in sospeso da completare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-365">The reference to the pending asynchronous request to finish.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2c-366">Attende il completamento della lettura asincrona in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-366">Waits for the pending asynchronous read to complete.</span>
          </span>
          <span data-ttu-id="47d2c-367">(In alternativa, si consideri l'uso di <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-367">(Consider using <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47d2c-368">Numero di byte letti dal flusso, tra zero (0) e il numero di byte richiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-368">The number of bytes read from the stream, between zero (0) and the number of bytes you requested.</span>
          </span>
          <span data-ttu-id="47d2c-369">I flussi restituiscono zero (0) solo alla fine del flusso; in caso contrario, si devono bloccare fino a quando non è disponibile almeno 1 byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-369">Streams return zero (0) only at the end of the stream, otherwise, they should block until at least one byte is available.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-370">In .NET Framework 4 e versioni precedenti è necessario usare metodi quali <xref:System.IO.Stream.BeginRead%2A> e <xref:System.IO.Stream.EndRead%2A> per implementare operazioni di I/O asincrone.</span><span class="sxs-lookup"><span data-stu-id="47d2c-370">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="47d2c-371">Questi metodi sono ancora disponibili nel [!INCLUDE[net_v45](~/includes/net-v45-md.md)] per supportare il codice legacy; tuttavia, i nuovi metodi async, ad esempio <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, e <xref:System.IO.Stream.FlushAsync%2A>, della Guida in linea è implementare più facilmente le operazioni dei / o asincrona.</span><span class="sxs-lookup"><span data-stu-id="47d2c-371">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="47d2c-372">Chiamare `EndRead` per determinare il numero di byte letti dal flusso.</span><span class="sxs-lookup"><span data-stu-id="47d2c-372">Call `EndRead` to determine how many bytes were read from the stream.</span></span>  
  
 <span data-ttu-id="47d2c-373">`EndRead` può essere chiamato una volta in ogni <xref:System.IAsyncResult> da <xref:System.IO.Stream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="47d2c-373">`EndRead` can be called once on every <xref:System.IAsyncResult> from <xref:System.IO.Stream.BeginRead%2A>.</span></span>  
  
 <span data-ttu-id="47d2c-374">Questo metodo mantiene il blocco fino al completamento dell'operazione di I/O.</span><span class="sxs-lookup"><span data-stu-id="47d2c-374">This method blocks until the I/O operation has completed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2c-375">
            <paramref name="asyncResult" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-375">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47d2c-376">Non è disponibile un handle dell'operazione di lettura in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-376">A handle to the pending read operation is not available.</span>
          </span>
          <span data-ttu-id="47d2c-377">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-377">-or-</span>
          </span>
          <span data-ttu-id="47d2c-378">L'operazione in sospeso non supporta la lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-378">The pending operation does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="47d2c-379">
            <paramref name="asyncResult" /> non è stato generato da un metodo <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> nel flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-379">
              <paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="47d2c-380">Il flusso è chiuso o si è verificato un errore interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-380">The stream is closed or an internal error has occurred.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="47d2c-381">I/O di file e di flussi</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-381">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="47d2c-382">Procedura: leggere testo da un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-382">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="47d2c-383">Procedura: Scrivere un testo in un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-383">How to: Write Text to a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/asynchronous-file-i-o.md">
          <span data-ttu-id="47d2c-384">I/O di file asincrono</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-384">Asynchronous File I/O</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public virtual void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndWrite : IAsyncResult -&gt; unit&#xA;override this.EndWrite : IAsyncResult -&gt; unit" Usage="stream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="47d2c-385">Riferimento alla richiesta di I/O asincrona in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-385">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2c-386">Termina un'operazione di scrittura asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-386">Ends an asynchronous write operation.</span>
          </span>
          <span data-ttu-id="47d2c-387">(In alternativa, si consideri l'uso di <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-387">(Consider using <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-388">In .NET Framework 4 e versioni precedenti è necessario usare metodi quali <xref:System.IO.Stream.BeginWrite%2A> e <xref:System.IO.Stream.EndWrite%2A> per implementare operazioni di I/O asincrone.</span><span class="sxs-lookup"><span data-stu-id="47d2c-388">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginWrite%2A> and <xref:System.IO.Stream.EndWrite%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="47d2c-389">Questi metodi sono ancora disponibili nel [!INCLUDE[net_v45](~/includes/net-v45-md.md)] per supportare il codice legacy; tuttavia, i nuovi metodi async, ad esempio <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, e <xref:System.IO.Stream.FlushAsync%2A>, della Guida in linea è implementare più facilmente le operazioni dei / o asincrona.</span><span class="sxs-lookup"><span data-stu-id="47d2c-389">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="47d2c-390">`EndWrite` deve essere chiamato una sola volta per ogni <xref:System.IAsyncResult> da <xref:System.IO.Stream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="47d2c-390">`EndWrite` must be called exactly once on every <xref:System.IAsyncResult> from <xref:System.IO.Stream.BeginWrite%2A>.</span></span>  
  
 <span data-ttu-id="47d2c-391">Questo metodo mantiene il blocco fino al completamento dell'operazione di I/O.</span><span class="sxs-lookup"><span data-stu-id="47d2c-391">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="47d2c-392">Gli errori che si verificano durante una richiesta di scrittura asincrona, ad esempio un errore del disco durante la richiesta dei / o, si verificano nel pool di thread e diventano visibili dopo una chiamata a `EndWrite`.</span><span class="sxs-lookup"><span data-stu-id="47d2c-392">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and become visible upon a call to `EndWrite`.</span></span> <span data-ttu-id="47d2c-393">Le eccezioni generate dal thread di pool di thread non saranno visibili quando si chiama `EndWrite`.</span><span class="sxs-lookup"><span data-stu-id="47d2c-393">Exceptions thrown by the thread pool thread will not be visible when calling `EndWrite`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2c-394">
            <paramref name="asyncResult" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-394">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47d2c-395">Non è disponibile un handle dell'operazione di scrittura in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-395">A handle to the pending write operation is not available.</span>
          </span>
          <span data-ttu-id="47d2c-396">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-396">-or-</span>
          </span>
          <span data-ttu-id="47d2c-397">L'operazione in sospeso non supporta la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-397">The pending operation does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="47d2c-398">
            <paramref name="asyncResult" /> non è stato generato da un metodo <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> nel flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-398">
              <paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="47d2c-399">Il flusso è chiuso o si è verificato un errore interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-399">The stream is closed or an internal error has occurred.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="47d2c-400">I/O di file e di flussi</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-400">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="47d2c-401">Procedura: leggere testo da un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-401">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="47d2c-402">Procedura: Scrivere un testo in un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-402">How to: Write Text to a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/asynchronous-file-i-o.md">
          <span data-ttu-id="47d2c-403">I/O di file asincrono</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-403">Asynchronous File I/O</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit" Usage="stream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-404">Quando ne viene eseguito l'override in una classe derivata, cancella tutti i buffer del flusso e determina la scrittura dei dati memorizzati nel buffer nel dispositivo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-404">When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-405">Eseguire l'override `Flush` sui flussi che implementano un buffer.</span><span class="sxs-lookup"><span data-stu-id="47d2c-405">Override `Flush` on streams that implement a buffer.</span></span> <span data-ttu-id="47d2c-406">Usare questo metodo per spostare tutte le informazioni da un buffer sottostante alla relativa destinazione, cancellare il buffer, o entrambi.</span><span class="sxs-lookup"><span data-stu-id="47d2c-406">Use this method to move any information from an underlying buffer to its destination, clear the buffer, or both.</span></span> <span data-ttu-id="47d2c-407">A seconda lo stato dell'oggetto, potrebbe essere necessario modificare la posizione corrente all'interno del flusso (ad esempio, se il flusso sottostante supporta la ricerca).</span><span class="sxs-lookup"><span data-stu-id="47d2c-407">Depending upon the state of the object, you might have to modify the current position within the stream (for example, if the underlying stream supports seeking).</span></span> <span data-ttu-id="47d2c-408">Per ulteriori informazioni, vedere <xref:System.IO.Stream.CanSeek%2A>.</span><span class="sxs-lookup"><span data-stu-id="47d2c-408">For additional information see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  

 <span data-ttu-id="47d2c-409">In una classe derivata da <xref:System.IO.Stream> che non supporta la scrittura, <xref:System.IO.Stream.Flush%2A> viene in genere implementato come un metodo vuoto per garantire la compatibilità completa con altre <xref:System.IO.Stream> tipi poiché è possibile scaricare un flusso di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="47d2c-409">In a class derived from <xref:System.IO.Stream> that doesn't support writing, <xref:System.IO.Stream.Flush%2A> is typically implemented as an empty method to ensure full compatibility with other <xref:System.IO.Stream> types since it's valid to flush a read-only stream.</span></span>

 <span data-ttu-id="47d2c-410">Quando si usa la <xref:System.IO.StreamWriter> oppure <xref:System.IO.BinaryWriter> classe, non scaricare base <xref:System.IO.Stream> oggetto.</span><span class="sxs-lookup"><span data-stu-id="47d2c-410">When using the <xref:System.IO.StreamWriter> or <xref:System.IO.BinaryWriter> class, do not flush the base <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="47d2c-411">In alternativa, usare la classe <xref:System.IO.Stream.Flush%2A> o <xref:System.IO.Stream.Close%2A> metodo, che assicura che i dati vengono scaricati prima di tutto il flusso sottostante e quindi vengono scritti nel file.</span><span class="sxs-lookup"><span data-stu-id="47d2c-411">Instead, use the class's <xref:System.IO.Stream.Flush%2A> or <xref:System.IO.Stream.Close%2A> method, which makes sure that the data is flushed to the underlying stream first and then written to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="47d2c-412">Si è verificato un errore di I/O.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-412">An I/O error occurs.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="47d2c-413">I/O di file e di flussi</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-413">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="47d2c-414">Procedura: leggere testo da un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-414">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="47d2c-415">Procedura: Scrivere un testo in un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-415">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FlushAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-416">Cancella in modo asincrono i dati di tutti i buffer del flusso e determina la scrittura dei dati memorizzati nel buffer nel dispositivo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-416">Asynchronously clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="member this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="stream.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-417">Cancella in modo asincrono i dati di tutti i buffer del flusso e determina la scrittura dei dati memorizzati nel buffer nel dispositivo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-417">Asynchronously clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47d2c-418">Attività che rappresenta l'operazione di scaricamento asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-418">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-419">Se una classe derivata, ad esempio <xref:System.IO.Compression.DeflateStream> o <xref:System.IO.Compression.GZipStream>, non scaricare il buffer nella propria implementazione del <xref:System.IO.Stream.Flush%2A> metodo, il <xref:System.IO.Stream.FlushAsync%2A> (metodo) non scarica il buffer.</span><span class="sxs-lookup"><span data-stu-id="47d2c-419">If a derived class, such as <xref:System.IO.Compression.DeflateStream> or <xref:System.IO.Compression.GZipStream>, does not flush the buffer in its implementation of the <xref:System.IO.Stream.Flush%2A> method, the <xref:System.IO.Stream.FlushAsync%2A> method will not flush the buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47d2c-420">Il flusso è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-420">The stream has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="47d2c-421">Token per il monitoraggio delle richieste di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-421">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="47d2c-422">Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-422">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2c-423">Cancella in modo asincrono i dati di tutti i buffer del flusso, determina la scrittura dei dati memorizzati nel buffer nel dispositivo sottostante e monitora le richieste di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-423">Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47d2c-424">Attività che rappresenta l'operazione di scaricamento asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-424">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-425">Se l'operazione viene annullata prima che venga completato, l'attività restituita contiene il <xref:System.Threading.Tasks.TaskStatus.Canceled> valore per il <xref:System.Threading.Tasks.Task.Status%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="47d2c-425">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="47d2c-426">Se una classe derivata, ad esempio <xref:System.IO.Compression.DeflateStream> o <xref:System.IO.Compression.GZipStream>, non scaricare il buffer nella propria implementazione del <xref:System.IO.Stream.Flush%2A> metodo, il <xref:System.IO.Stream.FlushAsync%2A> (metodo) non scarica il buffer.</span><span class="sxs-lookup"><span data-stu-id="47d2c-426">If a derived class, such as <xref:System.IO.Compression.DeflateStream> or <xref:System.IO.Compression.GZipStream>, does not flush the buffer in its implementation of the <xref:System.IO.Stream.Flush%2A> method, the <xref:System.IO.Stream.FlushAsync%2A> method will not flush the buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47d2c-427">Il flusso è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-427">The stream has been disposed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md">
          <span data-ttu-id="47d2c-428">Annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-428">Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public abstract long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.Length" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.IO.Stream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-429">Quando ne viene eseguito l'override in una classe derivata, ottiene la lunghezza in byte del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-429">When overridden in a derived class, gets the length in bytes of the stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47d2c-430">Valore long che rappresenta la lunghezza del flusso in byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-430">A long value representing the length of the stream in bytes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47d2c-431">Una classe derivata da <see langword="Stream" /> non supporta la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-431">A class derived from <see langword="Stream" /> does not support seeking.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47d2c-432">Sono stati chiamati dei metodi dopo la chiusura del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-432">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="47d2c-433">I/O di file e di flussi</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-433">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="47d2c-434">Procedura: leggere testo da un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-434">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="47d2c-435">Procedura: Scrivere un testo in un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-435">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.Stream Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.Stream Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.Stream.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As Stream " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::Stream ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.IO.Stream" Usage="System.IO.Stream.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-436">Oggetto <see langword="Stream" /> privo di archivio di backup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-436">A <see langword="Stream" /> with no backing store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-437">Usare `Null` reindirizzare l'output in un flusso che non utilizzeranno le risorse del sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="47d2c-437">Use `Null` to redirect output to a stream that will not consume any operating system resources.</span></span> <span data-ttu-id="47d2c-438">Quando i metodi della `Stream` che forniscono la scrittura vengono richiamati sul `Null`, la chiamata restituisce semplicemente e viene scritto alcun dato.</span><span class="sxs-lookup"><span data-stu-id="47d2c-438">When the methods of `Stream` that provide writing are invoked on `Null`, the call simply returns, and no data is written.</span></span> <span data-ttu-id="47d2c-439">`Null` implementa inoltre un `Read` metodo che restituisce zero senza eseguire la lettura dei dati.</span><span class="sxs-lookup"><span data-stu-id="47d2c-439">`Null` also implements a `Read` method that returns zero without reading data.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="47d2c-440">I/O di file e di flussi</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-440">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="47d2c-441">Procedura: leggere testo da un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-441">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="47d2c-442">Procedura: Scrivere un testo in un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-442">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ObjectInvariant">
      <MemberSignature Language="C#" Value="protected virtual void ObjectInvariant ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ObjectInvariant() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ObjectInvariant" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ObjectInvariant ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ObjectInvariant();" />
      <MemberSignature Language="F#" Value="abstract member ObjectInvariant : unit -&gt; unit&#xA;override this.ObjectInvariant : unit -&gt; unit" Usage="stream.ObjectInvariant " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Do not call or override this method.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-443">Fornisce supporto per un oggetto <see cref="T:System.Diagnostics.Contracts.Contract" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-443">Provides support for a <see cref="T:System.Diagnostics.Contracts.Contract" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public abstract long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.Position" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.IO.Stream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-444">Quando ne viene eseguito l'override in una classe derivata, ottiene o imposta la posizione all'interno del flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-444">When overridden in a derived class, gets or sets the position within the current stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47d2c-445">Posizione corrente all'interno del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-445">The current position within the stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-446">Il flusso deve supportare la ricerca ottenere o impostare la posizione.</span><span class="sxs-lookup"><span data-stu-id="47d2c-446">The stream must support seeking to get or set the position.</span></span> <span data-ttu-id="47d2c-447">Usare il <xref:System.IO.Stream.CanSeek%2A> proprietà per determinare se il flusso supporta la ricerca.</span><span class="sxs-lookup"><span data-stu-id="47d2c-447">Use the <xref:System.IO.Stream.CanSeek%2A> property to determine whether the stream supports seeking.</span></span>  
  
 <span data-ttu-id="47d2c-448">La ricerca in un punto qualsiasi oltre la lunghezza del flusso è supportata.</span><span class="sxs-lookup"><span data-stu-id="47d2c-448">Seeking to any location beyond the length of the stream is supported.</span></span>  
  
 <span data-ttu-id="47d2c-449">Il `Position` proprietà non tiene traccia del numero di byte dal flusso che sono stati utilizzati, ignorato, o entrambi.</span><span class="sxs-lookup"><span data-stu-id="47d2c-449">The `Position` property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="47d2c-450">Si è verificato un errore di I/O.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-450">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47d2c-451">Il flusso non supporta la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-451">The stream does not support seeking.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47d2c-452">Sono stati chiamati dei metodi dopo la chiusura del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-452">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="47d2c-453">I/O di file e di flussi</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-453">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="47d2c-454">Procedura: leggere testo da un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-454">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="47d2c-455">Procedura: Scrivere un testo in un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-455">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Read : Span&lt;byte&gt; -&gt; int&#xA;override this.Read : Span&lt;byte&gt; -&gt; int" Usage="stream.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="abstract member Read : byte[] * int * int -&gt; int" Usage="stream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="47d2c-456">Matrice di byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-456">An array of bytes.</span>
          </span>
          <span data-ttu-id="47d2c-457">Quando questo metodo viene restituito, il buffer contiene la matrice di byte specificata con i valori compresi tra <paramref name="offset" /> e (<paramref name="offset" /> + <paramref name="count" /> - 1) sostituiti con i byte letti dall'origine corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-457">When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset" /> and (<paramref name="offset" /> + <paramref name="count" /> - 1) replaced by the bytes read from the current source.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="47d2c-458">Offset dei byte in base zero in <paramref name="buffer" /> in corrispondenza del quale iniziare l'archiviazione dei dati letti dal flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-458">The zero-based byte offset in <paramref name="buffer" /> at which to begin storing the data read from the current stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="47d2c-459">Numero massimo di byte da leggere dal flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-459">The maximum number of bytes to be read from the current stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2c-460">Quando ne viene eseguito l'override in una classe derivata, legge una sequenza di byte dal flusso corrente e passa alla posizione successiva all'interno del flusso corrente in base al numero di byte letti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-460">When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47d2c-461">Numero complessivo di byte letti nel buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-461">The total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="47d2c-462">È possibile che questo numero sia inferiore a quello dei byte richiesti se la quantità di byte disponibili è minore oppure che corrisponda a zero (0) se è stata raggiunta la fine del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-462">This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-463">Usare il <xref:System.IO.Stream.CanRead%2A> proprietà per determinare se l'istanza corrente supporta la lettura.</span><span class="sxs-lookup"><span data-stu-id="47d2c-463">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span> <span data-ttu-id="47d2c-464">Usare il <xref:System.IO.Stream.ReadAsync%2A> metodo per leggere in modo asincrono dal flusso corrente.</span><span class="sxs-lookup"><span data-stu-id="47d2c-464">Use the <xref:System.IO.Stream.ReadAsync%2A> method to read asynchronously from the current stream.</span></span>  
  
 <span data-ttu-id="47d2c-465">Le implementazioni di questo metodo leggono al massimo `count` flusso di byte dall'oggetto corrente e archiviarli nel `buffer` partire `offset`.</span><span class="sxs-lookup"><span data-stu-id="47d2c-465">Implementations of this method read a maximum of `count` bytes from the current stream and store them in `buffer` beginning at `offset`.</span></span> <span data-ttu-id="47d2c-466">La posizione corrente all'interno del flusso è avanzata per il numero di byte letti. Tuttavia, se si verifica un'eccezione, la posizione corrente all'interno del flusso rimane invariata.</span><span class="sxs-lookup"><span data-stu-id="47d2c-466">The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.</span></span> <span data-ttu-id="47d2c-467">Le implementazioni di restituiscono il numero di byte letti.</span><span class="sxs-lookup"><span data-stu-id="47d2c-467">Implementations return the number of bytes read.</span></span> <span data-ttu-id="47d2c-468">L'implementazione si bloccherà fino a quando non possono essere letti almeno un byte di dati, nel caso in cui non sono disponibili dati.</span><span class="sxs-lookup"><span data-stu-id="47d2c-468">The implementation will block until at least one byte of data can be read, in the event that no data is available.</span></span> <span data-ttu-id="47d2c-469"><xref:System.IO.Stream.Read%2A> Restituisce 0 solo quando non sono presenti più dati nel flusso e non sono previsti (ad esempio, un socket chiuso o fine del file).</span><span class="sxs-lookup"><span data-stu-id="47d2c-469"><xref:System.IO.Stream.Read%2A> returns 0 only when there is no more data in the stream and no more is expected (such as a closed socket or end of file).</span></span> <span data-ttu-id="47d2c-470">Un'implementazione è gratuita restituire un minor numero di byte rispetto a quella richiesta, anche se non è stata raggiunta la fine del flusso.</span><span class="sxs-lookup"><span data-stu-id="47d2c-470">An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>  
  
 <span data-ttu-id="47d2c-471">Usare <xref:System.IO.BinaryReader> per la lettura dei tipi di dati primitivi.</span><span class="sxs-lookup"><span data-stu-id="47d2c-471">Use <xref:System.IO.BinaryReader> for reading primitive data types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2c-472">Nell'esempio seguente viene illustrato come utilizzare <xref:System.IO.Stream.Read%2A> per leggere un blocco di dati.</span><span class="sxs-lookup"><span data-stu-id="47d2c-472">The following example shows how to use <xref:System.IO.Stream.Read%2A> to read a block of data.</span></span>  
  
 [!code-cpp[Classic Stream.Read Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stream.Read Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stream.Read Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stream.Read Example/CS/source.cs#1)]
 [!code-vb[Classic Stream.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stream.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47d2c-473">La somma di <paramref name="offset" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-473">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2c-474">
            <paramref name="buffer" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-474">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="47d2c-475">
            <paramref name="offset" /> o <paramref name="count" /> è negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-475">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="47d2c-476">Si è verificato un errore di I/O.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-476">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47d2c-477">Il flusso non supporta la lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-477">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47d2c-478">Sono stati chiamati dei metodi dopo la chiusura del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-478">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="47d2c-479">I/O di file e di flussi</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-479">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="47d2c-480">Procedura: leggere testo da un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-480">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="47d2c-481">Procedura: Scrivere un testo in un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-481">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-482">Legge in modo asincrono una sequenza di byte dal flusso corrente e passa alla posizione successiva nel flusso in base al numero di byte letti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-482">Asynchronously reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;&#xA;override this.ReadAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="stream.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsync (buffer As Byte(), offset As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.ReadAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stream.ReadAsync (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="47d2c-483">Buffer in cui scrivere i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-483">The buffer to write the data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="47d2c-484">Offset dei byte in <paramref name="buffer" /> da cui iniziare la scrittura dei dati dal flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-484">The byte offset in <paramref name="buffer" /> at which to begin writing data from the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="47d2c-485">Numero massimo di byte da leggere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-485">The maximum number of bytes to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2c-486">Legge in modo asincrono una sequenza di byte dal flusso corrente e passa alla posizione successiva nel flusso in base al numero di byte letti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-486">Asynchronously reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47d2c-487">Attività che rappresenta l'operazione di lettura asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-487">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="47d2c-488">Il valore del parametro di <paramref name="TResult" /> contiene il numero totale di byte letti nel buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-488">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="47d2c-489">Il valore del risultato può essere minore del numero di byte richiesti se il numero di byte attualmente disponibili è minore di quelli richiesti o può essere pari a 0 (zero) se è stata raggiunta la fine del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-489">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-490">Il <xref:System.IO.Stream.ReadAsync%2A> metodo consente di eseguire operazioni dei / o intensivo di risorse senza bloccare il thread principale.</span><span class="sxs-lookup"><span data-stu-id="47d2c-490">The <xref:System.IO.Stream.ReadAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="47d2c-491">Questa considerazione sulle prestazioni è particolarmente importante in un'applicazione [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] in cui tramite un'operazione di flusso per cui è richiesto molto tempo è possibile bloccare il thread UI e far sembrare che l'applicazione non funzioni.</span><span class="sxs-lookup"><span data-stu-id="47d2c-491">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="47d2c-492">I metodi asincroni vengono usati in combinazione con il `async` e `await` parole chiave in Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="47d2c-492">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="47d2c-493">Usare il <xref:System.IO.Stream.CanRead%2A> proprietà per determinare se l'istanza corrente supporta la lettura.</span><span class="sxs-lookup"><span data-stu-id="47d2c-493">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2c-494">Nell'esempio seguente viene illustrato come leggere da un file in modo asincrono.</span><span class="sxs-lookup"><span data-stu-id="47d2c-494">The following example shows how to read from a file asynchronously.</span></span> <span data-ttu-id="47d2c-495">L'esempio Usa la <xref:System.IO.FileStream> classe che deriva dal <xref:System.IO.Stream> classe.</span><span class="sxs-lookup"><span data-stu-id="47d2c-495">The example uses the <xref:System.IO.FileStream> class, which derives from the <xref:System.IO.Stream> class.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#4](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example4.cs#4)]
 [!code-vb[Asynchronous_File_IO_async#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2c-496">
            <paramref name="buffer" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-496">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="47d2c-497">
            <paramref name="offset" /> o <paramref name="count" /> è negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-497">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47d2c-498">La somma di <paramref name="offset" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-498">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47d2c-499">Il flusso non supporta la lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-499">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47d2c-500">Il flusso è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-500">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="47d2c-501">Il flusso è attualmente usato da un'operazione di lettura precedente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-501">The stream is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stream.ReadAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="47d2c-502">Buffer in cui scrivere i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-502">The buffer to write the data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="47d2c-503">Offset dei byte in <paramref name="buffer" /> da cui iniziare la scrittura dei dati dal flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-503">The byte offset in <paramref name="buffer" /> at which to begin writing data from the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="47d2c-504">Numero massimo di byte da leggere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-504">The maximum number of bytes to read.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="47d2c-505">Token per il monitoraggio delle richieste di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-505">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="47d2c-506">Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-506">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2c-507">Legge in modo asincrono una sequenza di byte dal flusso corrente e passa alla posizione successiva all'interno del flusso corrente in base al numero di byte letti e monitora le richieste di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-507">Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47d2c-508">Attività che rappresenta l'operazione di lettura asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-508">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="47d2c-509">Il valore del parametro di <paramref name="TResult" /> contiene il numero totale di byte letti nel buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-509">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="47d2c-510">Il valore del risultato può essere minore del numero di byte richiesti se il numero di byte attualmente disponibili è minore di quelli richiesti o può essere pari a 0 (zero) se è stata raggiunta la fine del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-510">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-511">Il <xref:System.IO.Stream.ReadAsync%2A> metodo consente di eseguire operazioni dei / o intensivo di risorse senza bloccare il thread principale.</span><span class="sxs-lookup"><span data-stu-id="47d2c-511">The <xref:System.IO.Stream.ReadAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="47d2c-512">Questa considerazione sulle prestazioni è particolarmente importante in un'applicazione [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] in cui tramite un'operazione di flusso per cui è richiesto molto tempo è possibile bloccare il thread UI e far sembrare che l'applicazione non funzioni.</span><span class="sxs-lookup"><span data-stu-id="47d2c-512">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="47d2c-513">I metodi asincroni vengono usati in combinazione con il `async` e `await` parole chiave in Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="47d2c-513">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="47d2c-514">Usare il <xref:System.IO.Stream.CanRead%2A> proprietà per determinare se l'istanza corrente supporta la lettura.</span><span class="sxs-lookup"><span data-stu-id="47d2c-514">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="47d2c-515">Se l'operazione viene annullata prima che venga completato, l'attività restituita contiene il <xref:System.Threading.Tasks.TaskStatus.Canceled> valore per il <xref:System.Threading.Tasks.Task.Status%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="47d2c-515">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="47d2c-516">Per un esempio, vedere il <xref:System.IO.Stream.ReadAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> rapporto di overload.</span><span class="sxs-lookup"><span data-stu-id="47d2c-516">For an example, see the <xref:System.IO.Stream.ReadAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2c-517">
            <paramref name="buffer" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-517">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="47d2c-518">
            <paramref name="offset" /> o <paramref name="count" /> è negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-518">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47d2c-519">La somma di <paramref name="offset" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-519">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47d2c-520">Il flusso non supporta la lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-520">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47d2c-521">Il flusso è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-521">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="47d2c-522">Il flusso è attualmente usato da un'operazione di lettura precedente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-522">The stream is currently in use by a previous read operation.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md">
          <span data-ttu-id="47d2c-523">Annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-523">Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public virtual int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadByte();" />
      <MemberSignature Language="F#" Value="abstract member ReadByte : unit -&gt; int&#xA;override this.ReadByte : unit -&gt; int" Usage="stream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-524">Legge un byte dal flusso e sposta in avanti la posizione corrente all'interno del flusso di un byte o restituisce -1 se si trova alla fine del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-524">Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47d2c-525">Cast di byte senza segno in un parametro <see langword="Int32" /> oppure -1 se si trova alla fine del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-525">The unsigned byte cast to an <see langword="Int32" />, or -1 if at the end of the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-526">Usare il <xref:System.IO.Stream.CanRead%2A> proprietà per determinare se l'istanza corrente supporta la lettura.</span><span class="sxs-lookup"><span data-stu-id="47d2c-526">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="47d2c-527">Tenta di modificare il flusso dopo che è stato chiuso il flusso è stato possibile generare un <xref:System.ObjectDisposedException>.</span><span class="sxs-lookup"><span data-stu-id="47d2c-527">Attempts to manipulate the stream after the stream has been closed could throw an <xref:System.ObjectDisposedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47d2c-528">Il flusso non supporta la lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-528">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47d2c-529">Sono stati chiamati dei metodi dopo la chiusura del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-529">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="47d2c-530">L'implementazione predefinita su <see langword="Stream" /> crea una nuova matrice a byte singolo e quindi chiama <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47d2c-530">The default implementation on <see langword="Stream" /> creates a new single-byte array and then calls <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />.</span>
            </span>
            <span data-ttu-id="47d2c-531">Si tratta formalmente corretto, è poco efficiente.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47d2c-531">While this is formally correct, it is inefficient.</span>
            </span>
            <span data-ttu-id="47d2c-532">Qualsiasi flusso con un buffer interno deve eseguire l'override di questo metodo e fornire una versione molto più efficiente che legge il buffer direttamente, evitando l'allocazione di una matrice aggiuntivi in ogni chiamata.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47d2c-532">Any stream with an internal buffer should override this method and provide a much more efficient version that reads the buffer directly, avoiding the extra array allocation on every call.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="47d2c-533">I/O di file e di flussi</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-533">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="47d2c-534">Procedura: leggere testo da un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-534">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="47d2c-535">Procedura: Scrivere un testo in un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-535">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public virtual int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.IO.Stream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-536">Ottiene o imposta un valore, in millisecondi, che determina per quanto tempo il flusso tenterà la lettura prima del timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-536">Gets or sets a value, in miliseconds, that determines how long the stream will attempt to read before timing out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47d2c-537">Valore in millisecondi che determina per quanto tempo il flusso tenterà la lettura prima del timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-537">A value, in miliseconds, that determines how long the stream will attempt to read before timing out.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="47d2c-538">Il metodo <see cref="P:System.IO.Stream.ReadTimeout" /> genera sempre un'eccezione <see cref="T:System.InvalidOperationException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-538">The <see cref="P:System.IO.Stream.ReadTimeout" /> method always throws an <see cref="T:System.InvalidOperationException" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="47d2c-539">Il <see cref="P:System.IO.Stream.ReadTimeout" /> proprietà deve essere sostituita per fornire il comportamento appropriato per il flusso.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47d2c-539">The <see cref="P:System.IO.Stream.ReadTimeout" /> property should be overridden to provide the appropriate behavior for the stream.</span>
            </span>
            <span data-ttu-id="47d2c-540">Se il flusso non supporta i timeout, questa proprietà deve generare un <see cref="T:System.InvalidOperationException" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47d2c-540">If the stream does not support timing out, this property should raise an <see cref="T:System.InvalidOperationException" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public abstract long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="abstract member Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="stream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="47d2c-541">Offset dei byte rispetto al parametro <paramref name="origin" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-541">A byte offset relative to the <paramref name="origin" /> parameter.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="47d2c-542">Valore di tipo <see cref="T:System.IO.SeekOrigin" /> che indica il punto di riferimento usato per ottenere la nuova posizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-542">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2c-543">Quando ne viene eseguito l'override in una classe derivata, imposta la posizione all'interno del flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-543">When overridden in a derived class, sets the position within the current stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47d2c-544">Nuova posizione all'interno del flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-544">The new position within the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-545">Usare il <xref:System.IO.Stream.CanSeek%2A> proprietà per determinare se l'istanza corrente supporta la ricerca.</span><span class="sxs-lookup"><span data-stu-id="47d2c-545">Use the <xref:System.IO.Stream.CanSeek%2A> property to determine whether the current instance supports seeking.</span></span>  
  
 <span data-ttu-id="47d2c-546">Se `offset` è negativo, è necessario la nuova posizione precederà quella specificata da `origin` per il numero di byte specificato da `offset`.</span><span class="sxs-lookup"><span data-stu-id="47d2c-546">If `offset` is negative, the new position is required to precede the position specified by `origin` by the number of bytes specified by `offset`.</span></span> <span data-ttu-id="47d2c-547">Se `offset` è zero (0), la nuova posizione è obbligatorio per la posizione specificata da `origin`.</span><span class="sxs-lookup"><span data-stu-id="47d2c-547">If `offset` is zero (0), the new position is required to be the position specified by `origin`.</span></span> <span data-ttu-id="47d2c-548">Se `offset` è positivo, la nuova posizione è necessaria seguire la posizione specificata da `origin` per il numero di byte specificato da `offset`.</span><span class="sxs-lookup"><span data-stu-id="47d2c-548">If `offset` is positive, the new position is required to follow the position specified by `origin` by the number of bytes specified by `offset`.</span></span>  
  
 <span data-ttu-id="47d2c-549">Le classi derivate da `Stream` che supportano la ricerca deve eseguire l'override del metodo per fornire la funzionalità descritta in precedenza.</span><span class="sxs-lookup"><span data-stu-id="47d2c-549">Classes derived from `Stream` that support seeking must override this method to provide the functionality described above.</span></span>  
  
 <span data-ttu-id="47d2c-550">La ricerca in un punto qualsiasi oltre la lunghezza del flusso è supportata.</span><span class="sxs-lookup"><span data-stu-id="47d2c-550">Seeking to any location beyond the length of the stream is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="47d2c-551">Si è verificato un errore di I/O.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-551">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47d2c-552">Il flusso non supporta la ricerca, come se il flusso fosse stato costruito da un pipe o da un output di console.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-552">The stream does not support seeking, such as if the stream is constructed from a pipe or console output.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47d2c-553">Sono stati chiamati dei metodi dopo la chiusura del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-553">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="47d2c-554">I/O di file e di flussi</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-554">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="47d2c-555">Procedura: leggere testo da un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-555">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="47d2c-556">Procedura: Scrivere un testo in un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-556">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public abstract void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetLength(long value);" />
      <MemberSignature Language="F#" Value="abstract member SetLength : int64 -&gt; unit" Usage="stream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="47d2c-557">Lunghezza desiderata del flusso corrente in byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-557">The desired length of the current stream in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2c-558">Quando ne viene eseguito l'override in una classe derivata, imposta la lunghezza del flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-558">When overridden in a derived class, sets the length of the current stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-559">Se il valore specificato è minore della lunghezza corrente del flusso, il flusso viene troncato.</span><span class="sxs-lookup"><span data-stu-id="47d2c-559">If the specified value is less than the current length of the stream, the stream is truncated.</span></span> <span data-ttu-id="47d2c-560">Se il valore specificato è maggiore della lunghezza corrente del flusso, il flusso viene espanso.</span><span class="sxs-lookup"><span data-stu-id="47d2c-560">If the specified value is larger than the current length of the stream, the stream is expanded.</span></span> <span data-ttu-id="47d2c-561">Se il flusso viene espanso, il contenuto del flusso tra la vecchia e nuova lunghezza non definito.</span><span class="sxs-lookup"><span data-stu-id="47d2c-561">If the stream is expanded, the contents of the stream between the old and the new length are not defined.</span></span>  
  
 <span data-ttu-id="47d2c-562">Un flusso deve supportare la scrittura e per la ricerca `SetLength` a funzionare.</span><span class="sxs-lookup"><span data-stu-id="47d2c-562">A stream must support both writing and seeking for `SetLength` to work.</span></span>  
  
 <span data-ttu-id="47d2c-563">Usare la <xref:System.IO.Stream.CanWrite%2A> proprietà per determinare se l'istanza corrente supporta la scrittura e il <xref:System.IO.Stream.CanSeek%2A> proprietà per determinare se la ricerca è supportata.</span><span class="sxs-lookup"><span data-stu-id="47d2c-563">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing, and the <xref:System.IO.Stream.CanSeek%2A> property to determine whether seeking is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="47d2c-564">Si è verificato un errore di I/O.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-564">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47d2c-565">Il flusso non supporta la scrittura e la ricerca, come se il flusso fosse stato costruito da un pipe o da un output di console.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-565">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47d2c-566">Sono stati chiamati dei metodi dopo la chiusura del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-566">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="47d2c-567">I/O di file e di flussi</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-567">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="47d2c-568">Procedura: leggere testo da un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-568">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="47d2c-569">Procedura: Scrivere un testo in un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-569">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.IO.Stream Synchronized (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream Synchronized(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Synchronized(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ Synchronized(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.IO.Stream -&gt; System.IO.Stream" Usage="System.IO.Stream.Synchronized stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="47d2c-570">Oggetto <see cref="T:System.IO.Stream" /> da sincronizzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-570">The <see cref="T:System.IO.Stream" /> object to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2c-571">Crea un wrapper thread-safe (sincronizzato) per l'oggetto <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-571">Creates a thread-safe (synchronized) wrapper around the specified <see cref="T:System.IO.Stream" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47d2c-572">Oggetto <see cref="T:System.IO.Stream" /> thread-safe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-572">A thread-safe <see cref="T:System.IO.Stream" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-573">Questo metodo restituisce una classe che esegue il wrapping specificato <xref:System.IO.Stream> dell'oggetto e ne limita l'accesso da più thread.</span><span class="sxs-lookup"><span data-stu-id="47d2c-573">This method returns a class that wraps the specified <xref:System.IO.Stream> object and restricts access to it from multiple threads.</span></span> <span data-ttu-id="47d2c-574">Tutti gli accessi al <xref:System.IO.Stream> oggetto sarà thread-safe.</span><span class="sxs-lookup"><span data-stu-id="47d2c-574">All access to the <xref:System.IO.Stream> object will be thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2c-575">
            <paramref name="stream" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-575">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-576">Rilascia tutte le risorse usate da <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-576">Releases all resources used by the <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="47d2c-577">Questo membro è un’implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="47d2c-577">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47d2c-578">Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.IO.Stream> a un'interfaccia <xref:System.IDisposable>.</span><span class="sxs-lookup"><span data-stu-id="47d2c-578">It can be used only when the <xref:System.IO.Stream> instance is cast to an <xref:System.IDisposable> interface.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Write : ReadOnlySpan&lt;byte&gt; -&gt; unit&#xA;override this.Write : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="stream.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="abstract member Write : byte[] * int * int -&gt; unit" Usage="stream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="47d2c-579">Matrice di byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-579">An array of bytes.</span>
          </span>
          <span data-ttu-id="47d2c-580">Questo metodo copia i byte <paramref name="count" /> da <paramref name="buffer" /> nel flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-580">This method copies <paramref name="count" /> bytes from <paramref name="buffer" /> to the current stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="47d2c-581">Offset dei byte in base zero in <paramref name="buffer" /> da cui iniziare la copia dei byte nel flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-581">The zero-based byte offset in <paramref name="buffer" /> at which to begin copying bytes to the current stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="47d2c-582">Numero di byte da scrivere nel flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-582">The number of bytes to be written to the current stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2c-583">Quando ne viene eseguito l'override in una classe derivata, scrive una sequenza di byte nel flusso corrente e passa alla posizione successiva all'interno del flusso corrente in base al numero di byte scritti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-583">When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-584">Usare il <xref:System.IO.Stream.CanWrite%2A> proprietà per determinare se l'istanza corrente supporta la scrittura.</span><span class="sxs-lookup"><span data-stu-id="47d2c-584">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span> <span data-ttu-id="47d2c-585">Usare il <xref:System.IO.Stream.WriteAsync%2A> metodo per scrivere in modo asincrono il flusso corrente.</span><span class="sxs-lookup"><span data-stu-id="47d2c-585">Use the <xref:System.IO.Stream.WriteAsync%2A> method to write asynchronously to the current stream.</span></span>  
  
 <span data-ttu-id="47d2c-586">Se l'operazione di scrittura ha esito positivo, fa avanzare la posizione all'interno del flusso del numero di byte scritti.</span><span class="sxs-lookup"><span data-stu-id="47d2c-586">If the write operation is successful, the position within the stream advances by the number of bytes written.</span></span> <span data-ttu-id="47d2c-587">Se si verifica un'eccezione, la posizione all'interno del flusso rimane invariata.</span><span class="sxs-lookup"><span data-stu-id="47d2c-587">If an exception occurs, the position within the stream remains unchanged.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47d2c-588">La somma di <paramref name="offset" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-588">The sum of <paramref name="offset" /> and <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2c-589">
            <paramref name="buffer" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-589">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="47d2c-590">
            <paramref name="offset" /> o <paramref name="count" /> è negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-590">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="47d2c-591">Si è verificato un errore di I/O, ad esempio non è possibile trovare il file specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-591">An I/O error occured, such as the specified file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47d2c-592">Il flusso non supporta la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-592">The stream does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47d2c-593">
            <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> è stato chiamato dopo la chiusura del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-593">
              <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> was called after the stream was closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="47d2c-594">I/O di file e di flussi</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-594">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="47d2c-595">Procedura: leggere testo da un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-595">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="47d2c-596">Procedura: Scrivere un testo in un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-596">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-597">Scrive in modo asincrono una sequenza di byte nel flusso corrente e passa alla posizione successiva nel flusso in base al numero di byte scritti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-597">Asynchronously writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask WriteAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&#xA;override this.WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="stream.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (buffer As Byte(), offset As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.WriteAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task" Usage="stream.WriteAsync (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="47d2c-598">Buffer da cui scrivere i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-598">The buffer to write data from.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="47d2c-599">Offset dei byte in base zero in <paramref name="buffer" /> da cui iniziare la copia dei byte nel flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-599">The zero-based byte offset in <paramref name="buffer" /> from which to begin copying bytes to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="47d2c-600">Numero massimo di byte da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-600">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2c-601">Scrive in modo asincrono una sequenza di byte nel flusso corrente e passa alla posizione successiva nel flusso in base al numero di byte scritti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-601">Asynchronously writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47d2c-602">Attività che rappresenta l'operazione di scrittura asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-602">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-603">Il <xref:System.IO.Stream.WriteAsync%2A> metodo consente di eseguire operazioni dei / o intensivo di risorse senza bloccare il thread principale.</span><span class="sxs-lookup"><span data-stu-id="47d2c-603">The <xref:System.IO.Stream.WriteAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="47d2c-604">Questa considerazione sulle prestazioni è particolarmente importante in un'applicazione [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] in cui tramite un'operazione di flusso per cui è richiesto molto tempo è possibile bloccare il thread UI e far sembrare che l'applicazione non funzioni.</span><span class="sxs-lookup"><span data-stu-id="47d2c-604">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="47d2c-605">I metodi asincroni vengono usati in combinazione con il `async` e `await` parole chiave in Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="47d2c-605">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="47d2c-606">Usare il <xref:System.IO.Stream.CanWrite%2A> proprietà per determinare se l'istanza corrente supporta la scrittura.</span><span class="sxs-lookup"><span data-stu-id="47d2c-606">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2c-607">Nell'esempio seguente viene illustrato come scrivere in modo asincrono in un file.</span><span class="sxs-lookup"><span data-stu-id="47d2c-607">The following example shows how to write asynchronously to a file.</span></span> <span data-ttu-id="47d2c-608">L'esempio Usa la <xref:System.IO.FileStream> classe che deriva dal <xref:System.IO.Stream> classe.</span><span class="sxs-lookup"><span data-stu-id="47d2c-608">The example uses the <xref:System.IO.FileStream> class, which derives from the <xref:System.IO.Stream> class.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#3](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example3.cs#3)]
 [!code-vb[Asynchronous_File_IO_async#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2c-609">
            <paramref name="buffer" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-609">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="47d2c-610">
            <paramref name="offset" /> o <paramref name="count" /> è negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-610">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47d2c-611">La somma di <paramref name="offset" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-611">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47d2c-612">Il flusso non supporta la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-612">The stream does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47d2c-613">Il flusso è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-613">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="47d2c-614">Il flusso è attualmente usato da un'operazione di scrittura precedente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-614">The stream is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stream.WriteAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="47d2c-615">Buffer da cui scrivere i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-615">The buffer to write data from.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="47d2c-616">Offset dei byte in base zero in <paramref name="buffer" /> da cui iniziare la copia dei byte nel flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-616">The zero-based byte offset in <paramref name="buffer" /> from which to begin copying bytes to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="47d2c-617">Numero massimo di byte da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-617">The maximum number of bytes to write.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="47d2c-618">Token per il monitoraggio delle richieste di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-618">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="47d2c-619">Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-619">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2c-620">Scrive in modo asincrono una sequenza di byte nel flusso corrente e passa alla posizione successiva all'interno del flusso corrente in base al numero di byte scritti e monitora le richieste di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-620">Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47d2c-621">Attività che rappresenta l'operazione di scrittura asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-621">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-622">Il <xref:System.IO.Stream.WriteAsync%2A> metodo consente di eseguire operazioni dei / o intensivo di risorse senza bloccare il thread principale.</span><span class="sxs-lookup"><span data-stu-id="47d2c-622">The <xref:System.IO.Stream.WriteAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="47d2c-623">Questa considerazione sulle prestazioni è particolarmente importante in un'applicazione [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] in cui tramite un'operazione di flusso per cui è richiesto molto tempo è possibile bloccare il thread UI e far sembrare che l'applicazione non funzioni.</span><span class="sxs-lookup"><span data-stu-id="47d2c-623">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="47d2c-624">I metodi asincroni vengono usati in combinazione con il `async` e `await` parole chiave in Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="47d2c-624">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="47d2c-625">Usare il <xref:System.IO.Stream.CanWrite%2A> proprietà per determinare se l'istanza corrente supporta la scrittura.</span><span class="sxs-lookup"><span data-stu-id="47d2c-625">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 <span data-ttu-id="47d2c-626">Se l'operazione viene annullata prima che venga completato, l'attività restituita contiene il <xref:System.Threading.Tasks.TaskStatus.Canceled> valore per il <xref:System.Threading.Tasks.Task.Status%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="47d2c-626">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="47d2c-627">Per un esempio, vedere il <xref:System.IO.Stream.WriteAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> rapporto di overload.</span><span class="sxs-lookup"><span data-stu-id="47d2c-627">For an example, see the <xref:System.IO.Stream.WriteAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2c-628">
            <paramref name="buffer" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-628">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="47d2c-629">
            <paramref name="offset" /> o <paramref name="count" /> è negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-629">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47d2c-630">La somma di <paramref name="offset" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-630">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47d2c-631">Il flusso non supporta la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-631">The stream does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47d2c-632">Il flusso è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-632">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="47d2c-633">Il flusso è attualmente usato da un'operazione di scrittura precedente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-633">The stream is currently in use by a previous write operation.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md">
          <span data-ttu-id="47d2c-634">Annullamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-634">Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public virtual void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="abstract member WriteByte : byte -&gt; unit&#xA;override this.WriteByte : byte -&gt; unit" Usage="stream.WriteByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="47d2c-635">Byte da scrivere nel flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-635">The byte to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2c-636">Scrive un byte nella posizione corrente del flusso e sposta in avanti di un byte la posizione del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-636">Writes a byte to the current position in the stream and advances the position within the stream by one byte.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2c-637">Usare il <xref:System.IO.Stream.CanWrite%2A> proprietà per determinare se l'istanza corrente supporta la scrittura.</span><span class="sxs-lookup"><span data-stu-id="47d2c-637">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="47d2c-638">Si è verificato un errore di I/O.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-638">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47d2c-639">Il flusso non supporta la scrittura o è già chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-639">The stream does not support writing, or the stream is already closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="47d2c-640">Sono stati chiamati dei metodi dopo la chiusura del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-640">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="47d2c-641">L'implementazione predefinita su <see langword="Stream" /> crea una nuova matrice a byte singolo e quindi chiama <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47d2c-641">The default implementation on <see langword="Stream" /> creates a new single-byte array and then calls <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span>
            </span>
            <span data-ttu-id="47d2c-642">Si tratta formalmente corretto, è poco efficiente.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47d2c-642">While this is formally correct, it is inefficient.</span>
            </span>
            <span data-ttu-id="47d2c-643">Qualsiasi flusso con un buffer interno deve eseguire l'override di questo metodo e fornire una versione molto più efficiente che consente di scrivere nel buffer direttamente, evitando l'allocazione di una matrice aggiuntivi in ogni chiamata.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47d2c-643">Any stream with an internal buffer should override this method and provide a much more efficient version that writes to the buffer directly, avoiding the extra array allocation on every call.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="47d2c-644">I/O di file e di flussi</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-644">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="47d2c-645">Procedura: leggere testo da un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-645">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="47d2c-646">Procedura: Scrivere un testo in un file</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-646">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public virtual int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.IO.Stream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47d2c-647">Ottiene o imposta un valore, in millisecondi, che determina per quanto tempo il flusso tenterà la scrittura prima del timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-647">Gets or sets a value, in miliseconds, that determines how long the stream will attempt to write before timing out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47d2c-648">Valore in millisecondi che determina per quanto tempo il flusso tenterà la scrittura prima del timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-648">A value, in miliseconds, that determines how long the stream will attempt to write before timing out.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="47d2c-649">Il metodo <see cref="P:System.IO.Stream.WriteTimeout" /> genera sempre un'eccezione <see cref="T:System.InvalidOperationException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2c-649">The <see cref="P:System.IO.Stream.WriteTimeout" /> method always throws an <see cref="T:System.InvalidOperationException" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="47d2c-650">Il <see cref="P:System.IO.Stream.WriteTimeout" /> proprietà deve essere sostituita per fornire il comportamento appropriato per il flusso.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47d2c-650">The <see cref="P:System.IO.Stream.WriteTimeout" /> property should be overridden to provide the appropriate behavior for the stream.</span>
            </span>
            <span data-ttu-id="47d2c-651">Se il flusso non supporta i timeout, questa proprietà deve generare un <see cref="T:System.InvalidOperationException" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="47d2c-651">If the stream does not support timing out, this property should raise an <see cref="T:System.InvalidOperationException" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>