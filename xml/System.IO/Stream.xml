<Type Name="Stream" FullName="System.IO.Stream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c2a48ad6254044761826100b2be9db53d138b868" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Stream : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Stream extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Stream" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Stream&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stream abstract : MarshalByRefObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="972af-101">Fornisce una visualizzazione generica di una sequenza di byte.</span>
      <span class="sxs-lookup">
        <span data-stu-id="972af-101">Provides a generic view of a sequence of bytes.</span>
      </span>
      <span data-ttu-id="972af-102">Questa è una classe abstract.</span>
      <span class="sxs-lookup">
        <span data-stu-id="972af-102">This is an abstract class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-103"><xref:System.IO.Stream> è la classe base astratta di tutti i flussi.</span><span class="sxs-lookup"><span data-stu-id="972af-103"><xref:System.IO.Stream> is the abstract base class of all streams.</span></span> <span data-ttu-id="972af-104">Un flusso è un'astrazione di una sequenza di byte, ad esempio un file, un dispositivo di input/output, una pipe di comunicazione tra processi o un socket TCP/IP.</span><span class="sxs-lookup"><span data-stu-id="972af-104">A stream is an abstraction of a sequence of bytes, such as a file, an input/output device, an inter-process communication pipe, or a TCP/IP socket.</span></span> <span data-ttu-id="972af-105">La <xref:System.IO.Stream> classe e le relative classi derivate forniscono una visualizzazione generica di questi diversi tipi di input e output e così il programmatore dai dettagli specifici del sistema operativo e i dispositivi sottostanti.</span><span class="sxs-lookup"><span data-stu-id="972af-105">The <xref:System.IO.Stream> class and its derived classes provide a generic view of these different types of input and output, and isolate the programmer from the specific details of the operating system and the underlying devices.</span></span>  
  
 <span data-ttu-id="972af-106">I flussi implicano tre operazioni fondamentali:</span><span class="sxs-lookup"><span data-stu-id="972af-106">Streams involve three fundamental operations:</span></span>  
  
-   <span data-ttu-id="972af-107">È possibile leggere da flussi.</span><span class="sxs-lookup"><span data-stu-id="972af-107">You can read from streams.</span></span> <span data-ttu-id="972af-108">La lettura è il trasferimento dei dati da un flusso in una struttura di dati, ad esempio una matrice di byte.</span><span class="sxs-lookup"><span data-stu-id="972af-108">Reading is the transfer of data from a stream into a data structure, such as an array of bytes.</span></span>  
  
-   <span data-ttu-id="972af-109">È possibile scrivere nei flussi.</span><span class="sxs-lookup"><span data-stu-id="972af-109">You can write to streams.</span></span> <span data-ttu-id="972af-110">La scrittura è il trasferimento dei dati da una struttura di dati in un flusso.</span><span class="sxs-lookup"><span data-stu-id="972af-110">Writing is the transfer of data from a data structure into a stream.</span></span>  
  
-   <span data-ttu-id="972af-111">La ricerca.</span><span class="sxs-lookup"><span data-stu-id="972af-111">Streams can support seeking.</span></span> <span data-ttu-id="972af-112">La ricerca fa riferimento a una query e modifica della posizione corrente all'interno di un flusso.</span><span class="sxs-lookup"><span data-stu-id="972af-112">Seeking refers to querying and modifying the current position within a stream.</span></span> <span data-ttu-id="972af-113">Ricerca funzionalità dipende dal tipo di archivio di backup è un flusso.</span><span class="sxs-lookup"><span data-stu-id="972af-113">Seek capability depends on the kind of backing store a stream has.</span></span> <span data-ttu-id="972af-114">Flussi di rete, ad esempio, non includono alcun concetto unificato di una posizione corrente e pertanto in genere non supportano la ricerca.</span><span class="sxs-lookup"><span data-stu-id="972af-114">For example, network streams have no unified concept of a current position, and therefore typically do not support seeking.</span></span>  
  
 <span data-ttu-id="972af-115">Alcuni dei più comunemente utilizzati flussi che ereditano da <xref:System.IO.Stream> sono <xref:System.IO.FileStream>, e <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="972af-115">Some of the more commonly used streams that inherit from <xref:System.IO.Stream> are <xref:System.IO.FileStream>, and <xref:System.IO.MemoryStream>.</span></span>  
  
 <span data-ttu-id="972af-116">A seconda origine dati sottostante o nell'archivio, flussi potrebbero supportare solo alcune di queste funzionalità.</span><span class="sxs-lookup"><span data-stu-id="972af-116">Depending on the underlying data source or repository, streams might support only some of these capabilities.</span></span> <span data-ttu-id="972af-117">È possibile eseguire una query le funzionalità di un flusso utilizzando il <xref:System.IO.Stream.CanRead%2A>, <xref:System.IO.Stream.CanWrite%2A>, e <xref:System.IO.Stream.CanSeek%2A> proprietà la <xref:System.IO.Stream> classe.</span><span class="sxs-lookup"><span data-stu-id="972af-117">You can query a stream for its capabilities by using the <xref:System.IO.Stream.CanRead%2A>, <xref:System.IO.Stream.CanWrite%2A>, and <xref:System.IO.Stream.CanSeek%2A> properties of the <xref:System.IO.Stream> class.</span></span>  
  
 <span data-ttu-id="972af-118">Il <xref:System.IO.Stream.Read%2A> e <xref:System.IO.Stream.Write%2A> metodi leggere e scrivere dati in una vasta gamma di formati.</span><span class="sxs-lookup"><span data-stu-id="972af-118">The <xref:System.IO.Stream.Read%2A> and <xref:System.IO.Stream.Write%2A> methods read and write data in a variety of formats.</span></span> <span data-ttu-id="972af-119">Per i flussi che supportano la ricerca, utilizzare il <xref:System.IO.Stream.Seek%2A> e <xref:System.IO.Stream.SetLength%2A> metodi e <xref:System.IO.Stream.Position%2A> e <xref:System.IO.Stream.Length%2A> le proprietà per eseguire una query e modificare la posizione corrente e la lunghezza di un flusso.</span><span class="sxs-lookup"><span data-stu-id="972af-119">For streams that support seeking, use the <xref:System.IO.Stream.Seek%2A> and <xref:System.IO.Stream.SetLength%2A> methods and the <xref:System.IO.Stream.Position%2A> and <xref:System.IO.Stream.Length%2A> properties to query and modify the current position and length of a stream.</span></span>  
  
 <span data-ttu-id="972af-120">Questo tipo implementa il <xref:System.IDisposable> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="972af-120">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="972af-121">Dopo aver utilizzato il tipo, è necessario eliminarlo direttamente o indirettamente.</span><span class="sxs-lookup"><span data-stu-id="972af-121">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="972af-122">Per eliminare direttamente il tipo, chiamare il relativo <xref:System.IDisposable.Dispose%2A> metodo in un `try` / `catch` blocco.</span><span class="sxs-lookup"><span data-stu-id="972af-122">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="972af-123">Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio come ad esempio `using` in C# o `Using` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="972af-123">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="972af-124">Per ulteriori informazioni, vedere la sezione "Utilizzo di oggetti che implementano IDisposable" nel <xref:System.IDisposable> argomento relativo all'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="972af-124">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="972af-125">Eliminazione di un <xref:System.IO.Stream> oggetto Scarica tutti i dati memorizzati nel buffer e chiama essenzialmente la <xref:System.IO.Stream.Flush%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="972af-125">Disposing a <xref:System.IO.Stream> object flushes any buffered data, and essentially calls the <xref:System.IO.Stream.Flush%2A> method for you.</span></span> <span data-ttu-id="972af-126"><xref:System.IO.Stream.Dispose%2A> rilascia inoltre le risorse del sistema operativo, ad esempio gli handle di file, le connessioni di rete o memoria utilizzata per qualsiasi buffer interni.</span><span class="sxs-lookup"><span data-stu-id="972af-126"><xref:System.IO.Stream.Dispose%2A> also releases operating system resources such as file handles, network connections, or memory used for any internal buffering.</span></span> <span data-ttu-id="972af-127">La <xref:System.IO.BufferedStream> classe fornisce la funzionalità del wrapping di un flusso memorizzato nel buffer intorno a un altro flusso per migliorare la lettura e scrittura delle prestazioni.</span><span class="sxs-lookup"><span data-stu-id="972af-127">The <xref:System.IO.BufferedStream> class provides the capability of wrapping a buffered stream around another stream in order to improve read and write performance.</span></span>  
  
 <span data-ttu-id="972af-128">A partire dal [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <xref:System.IO.Stream> classe include metodi asincroni per semplificare le operazioni asincrone.</span><span class="sxs-lookup"><span data-stu-id="972af-128">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.IO.Stream> class includes async methods to simplify asynchronous operations.</span></span> <span data-ttu-id="972af-129">Contiene un metodo asincrono `Async` nel nome, ad esempio <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, e <xref:System.IO.Stream.FlushAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="972af-129">An async method contains `Async` in its name, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>.</span></span> <span data-ttu-id="972af-130">Questi metodi consentono di eseguire operazioni dei / o elevato utilizzo di risorse senza bloccare il thread principale.</span><span class="sxs-lookup"><span data-stu-id="972af-130">These methods enable you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="972af-131">Questa considerazione sulle prestazioni è particolarmente importante in un'applicazione [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] in cui tramite un'operazione di flusso per cui è richiesto molto tempo è possibile bloccare il thread UI e far sembrare che l'applicazione non funzioni.</span><span class="sxs-lookup"><span data-stu-id="972af-131">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="972af-132">I metodi asincroni vengono utilizzati in combinazione con il `async` e `await` parole chiave in Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="972af-132">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="972af-133">Quando utilizzato in un [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app, <xref:System.IO.Stream> include due metodi di estensione: <xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A> e <xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="972af-133">When used in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app, <xref:System.IO.Stream> includes two extension methods: <xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A> and <xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A>.</span></span> <span data-ttu-id="972af-134">Questi metodi consentono di convertire un <xref:System.IO.Stream> oggetto in un flusso di [!INCLUDE[wrt](~/includes/wrt-md.md)].</span><span class="sxs-lookup"><span data-stu-id="972af-134">These methods convert a <xref:System.IO.Stream> object to a stream in the [!INCLUDE[wrt](~/includes/wrt-md.md)].</span></span> <span data-ttu-id="972af-135">È anche possibile convertire un flusso di [!INCLUDE[wrt](~/includes/wrt-md.md)] per un <xref:System.IO.Stream> oggetto utilizzando il <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> e <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="972af-135">You can also convert a stream in the [!INCLUDE[wrt](~/includes/wrt-md.md)] to a <xref:System.IO.Stream> object by using the <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> and <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> methods.</span></span> <span data-ttu-id="972af-136">Per ulteriori informazioni, vedere [procedura: convertire tra flussi di .NET Framework e flussi di Windows Runtime](~/docs/standard/io/how-to-convert-between-dotnet-streams-and-winrt-streams.md)</span><span class="sxs-lookup"><span data-stu-id="972af-136">For more information, see [How to: Convert Between .NET Framework Streams and Windows Runtime Streams](~/docs/standard/io/how-to-convert-between-dotnet-streams-and-winrt-streams.md)</span></span>  
  
 <span data-ttu-id="972af-137">Alcune implementazioni del flusso di eseguire il buffer locale dei dati sottostanti per migliorare le prestazioni.</span><span class="sxs-lookup"><span data-stu-id="972af-137">Some stream implementations perform local buffering of the underlying data to improve performance.</span></span> <span data-ttu-id="972af-138">Per questi flussi, è possibile utilizzare il <xref:System.IO.Stream.Flush%2A> o <xref:System.IO.Stream.FlushAsync%2A> metodo per cancellare tutti i buffer interni e assicurare che tutti i dati siano stati scritti nell'origine dati o il repository sottostante.</span><span class="sxs-lookup"><span data-stu-id="972af-138">For such streams, you can use the <xref:System.IO.Stream.Flush%2A> or <xref:System.IO.Stream.FlushAsync%2A> method to clear any internal buffers and ensure that all data has been written to the underlying data source or repository.</span></span>  
  
 <span data-ttu-id="972af-139">Se è necessario un flusso senza archivio di backup (noto anche come un bucket di bit), utilizzare il <xref:System.IO.Stream.Null> campo da recuperare un'istanza di un flusso che è progettato per questo scopo.</span><span class="sxs-lookup"><span data-stu-id="972af-139">If you need a stream with no backing store (also known as a bit bucket), use the <xref:System.IO.Stream.Null> field to retrieve an instance of a stream that is designed for this purpose.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="972af-140">Nell'esempio seguente viene illustrato come utilizzare due <xref:System.IO.FileStream> oggetti da copiare in modo asincrono i file da una directory in un'altra directory.</span><span class="sxs-lookup"><span data-stu-id="972af-140">The following example demonstrates how to use two <xref:System.IO.FileStream> objects to asynchronously copy the files from one directory to another directory.</span></span> <span data-ttu-id="972af-141">La classe <xref:System.IO.FileStream> deriva dalla classe <xref:System.IO.Stream>.</span><span class="sxs-lookup"><span data-stu-id="972af-141">The <xref:System.IO.FileStream> class derives from the <xref:System.IO.Stream> class.</span></span> <span data-ttu-id="972af-142">Si noti che il gestore eventi <xref:System.Web.UI.WebControls.Button.Click> per il controllo <xref:System.Windows.Controls.Button> è contrassegnato con il modificatore `async` perché chiama un metodo asincrono.</span><span class="sxs-lookup"><span data-stu-id="972af-142">Notice that the <xref:System.Web.UI.WebControls.Button.Click> event handler for the <xref:System.Windows.Controls.Button> control is marked with the `async` modifier because it calls an asynchronous method.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#1](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example.cs#1)]
 [!code-vb[Asynchronous_File_IO_async#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="972af-143">Quando si implementa una classe derivata di <see cref="T:System.IO.Stream" />, è necessario fornire implementazioni per le <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> e <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> metodi.</span>
        <span class="sxs-lookup">
          <span data-stu-id="972af-143">When you implement a derived class of <see cref="T:System.IO.Stream" />, you must provide implementations for the <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> methods.</span>
        </span>
        <span data-ttu-id="972af-144">I metodi asincroni <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />, <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />, e <see cref="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" /> utilizza metodi sincroni <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> e <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> nelle rispettive implementazioni.</span>
        <span class="sxs-lookup">
          <span data-stu-id="972af-144">The asynchronous methods <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />, <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />, and <see cref="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" /> use the synchronous methods <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> in their implementations.</span>
        </span>
        <span data-ttu-id="972af-145">Pertanto, le implementazioni di <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> e <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> funzioneranno correttamente con i metodi asincroni.</span>
        <span class="sxs-lookup">
          <span data-stu-id="972af-145">Therefore, your implementations of <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> will work correctly with the asynchronous methods.</span>
        </span>
        <span data-ttu-id="972af-146">Le implementazioni predefinite di <see cref="M:System.IO.Stream.ReadByte" /> e <see cref="M:System.IO.Stream.WriteByte(System.Byte)" /> creare una nuova matrice di byte a elemento singolo e quindi chiamare le implementazioni di <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> e <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="972af-146">The default implementations of <see cref="M:System.IO.Stream.ReadByte" /> and <see cref="M:System.IO.Stream.WriteByte(System.Byte)" /> create a new single-element byte array, and then call your implementations of <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span>
        </span>
        <span data-ttu-id="972af-147">Quando si deriva dalla <see cref="T:System.IO.Stream" />, si consiglia di eseguire l'override di questi metodi per accedere al buffer interno, se presente, per migliorare notevolmente le prestazioni.</span>
        <span class="sxs-lookup">
          <span data-stu-id="972af-147">When you derive from <see cref="T:System.IO.Stream" />, we recommend that you override these methods to access your internal buffer, if you have one, for substantially better performance.</span>
        </span>
        <span data-ttu-id="972af-148">È inoltre necessario fornire le implementazioni di <see cref="P:System.IO.Stream.CanRead" />, <see cref="P:System.IO.Stream.CanSeek" />, <see cref="P:System.IO.Stream.CanWrite" />, <see cref="M:System.IO.Stream.Flush" />, <see cref="P:System.IO.Stream.Length" />, <see cref="P:System.IO.Stream.Position" />, <see cref="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />, e <see cref="M:System.IO.Stream.SetLength(System.Int64)" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="972af-148">You must also provide implementations of <see cref="P:System.IO.Stream.CanRead" />, <see cref="P:System.IO.Stream.CanSeek" />, <see cref="P:System.IO.Stream.CanWrite" />, <see cref="M:System.IO.Stream.Flush" />, <see cref="P:System.IO.Stream.Length" />, <see cref="P:System.IO.Stream.Position" />, <see cref="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />, and <see cref="M:System.IO.Stream.SetLength(System.Int64)" />.</span>
        </span>
        <span data-ttu-id="972af-149">Non eseguire l'override di <see cref="M:System.IO.Stream.Close" /> (metodo), invece, inserire tutte la <see cref="T:System.IO.Stream" /> logica di pulizia nel <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> (metodo).</span>
        <span class="sxs-lookup">
          <span data-stu-id="972af-149">Do not override the <see cref="M:System.IO.Stream.Close" /> method, instead, put all the <see cref="T:System.IO.Stream" /> cleanup logic in the <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> method.</span>
        </span>
        <span data-ttu-id="972af-150">Per ulteriori informazioni, vedere [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
        <span class="sxs-lookup">
          <span data-stu-id="972af-150">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.IO.FileStream" />
    <altmember cref="T:System.IO.MemoryStream" />
    <altmember cref="T:System.IO.BufferedStream" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Stream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Stream();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="972af-151">Inizializza una nuova istanza della classe <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-151">Initializes a new instance of the <see cref="T:System.IO.Stream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-152"><xref:System.IO.Stream> è la classe base astratta di tutti i flussi.</span><span class="sxs-lookup"><span data-stu-id="972af-152"><xref:System.IO.Stream> is the abstract base class of all streams.</span></span>  
  
 <span data-ttu-id="972af-153">Alcuni dei più comunemente utilizzati flussi che ereditano da <xref:System.IO.Stream> sono <xref:System.IO.FileStream>, e <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="972af-153">Some of the more commonly used streams that inherit from <xref:System.IO.Stream> are <xref:System.IO.FileStream>, and <xref:System.IO.MemoryStream>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="972af-154">Buffer in cui leggere i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-154">The buffer to read the data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="972af-155">Offset di byte in <c>buffer</c> in corrispondenza del quale iniziare a scrivere i dati letti dal flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-155">The byte offset in <c>buffer</c> at which to begin writing data read from the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="972af-156">Numero massimo di byte da leggere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-156">The maximum number of bytes to read.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="972af-157">Callback asincrono facoltativo, da chiamare quando la lettura è completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-157">An optional asynchronous callback, to be called when the read is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="972af-158">Oggetto fornito dall'utente che distingue questa specifica richiesta di lettura asincrona da altre richieste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-158">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="972af-159">Inizia un'operazione di lettura asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-159">Begins an asynchronous read operation.</span>
          </span>
          <span data-ttu-id="972af-160">(In alternativa, si consideri l'uso di <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-160">(Consider using <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="972af-161">Oggetto <see cref="T:System.IAsyncResult" /> che rappresenta la lettura asincrona, che può essere ancora in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-161">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous read, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-162">In .NET Framework 4 e versioni precedenti è necessario usare metodi quali <xref:System.IO.Stream.BeginRead%2A> e <xref:System.IO.Stream.EndRead%2A> per implementare operazioni di I/O asincrone.</span><span class="sxs-lookup"><span data-stu-id="972af-162">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="972af-163">Questi metodi sono ancora disponibili nel [!INCLUDE[net_v45](~/includes/net-v45-md.md)] per supportare il codice legacy; tuttavia, nuovi metodi async, ad esempio <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, e <xref:System.IO.Stream.FlushAsync%2A>, della Guida è implementare più facilmente le operazioni dei / o asincrone.</span><span class="sxs-lookup"><span data-stu-id="972af-163">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="972af-164">L'implementazione predefinita di `BeginRead` su un flusso di chiamate di <xref:System.IO.Stream.Read%2A> metodo in modo sincrono, vale a dire che `Read` potrebbe bloccarsi su alcuni flussi.</span><span class="sxs-lookup"><span data-stu-id="972af-164">The default implementation of `BeginRead` on a stream calls the <xref:System.IO.Stream.Read%2A> method synchronously, which means that `Read` might block on some streams.</span></span> <span data-ttu-id="972af-165">Tuttavia, le istanze di classi, ad esempio `FileStream` e `NetworkStream` supportano completamente le operazioni asincrone, se le istanze sono state aperte in modo asincrono.</span><span class="sxs-lookup"><span data-stu-id="972af-165">However, instances of classes such as `FileStream` and `NetworkStream` fully support asynchronous operations if the instances have been opened asynchronously.</span></span> <span data-ttu-id="972af-166">Pertanto, le chiamate a `BeginRead` non verrà bloccata su tali flussi.</span><span class="sxs-lookup"><span data-stu-id="972af-166">Therefore, calls to `BeginRead` will not block on those streams.</span></span> <span data-ttu-id="972af-167">È possibile eseguire l'override `BeginRead` (tramite delegati asincroni, ad esempio) per fornire il comportamento asincrono.</span><span class="sxs-lookup"><span data-stu-id="972af-167">You can override `BeginRead` (by using async delegates, for example) to provide asynchronous behavior.</span></span>  
  
 <span data-ttu-id="972af-168">Passare il `IAsyncResult` un valore restituito per il <xref:System.IO.Stream.EndRead%2A> metodo del flusso per determinare il numero di byte letti e rilasciare le risorse di sistema operativo utilizzate per la lettura.</span><span class="sxs-lookup"><span data-stu-id="972af-168">Pass the `IAsyncResult` return value to the <xref:System.IO.Stream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading.</span></span> <span data-ttu-id="972af-169"><xref:System.IO.Stream.EndRead%2A> deve essere chiamato una volta per ogni chiamata a <xref:System.IO.Stream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="972af-169"><xref:System.IO.Stream.EndRead%2A> must be called once for every call to <xref:System.IO.Stream.BeginRead%2A>.</span></span> <span data-ttu-id="972af-170">È possibile eseguire questa operazione utilizzando lo stesso codice che ha chiamato `BeginRead` o in un callback passato a `BeginRead`.</span><span class="sxs-lookup"><span data-stu-id="972af-170">You can do this either by using the same code that called `BeginRead` or in a callback passed to `BeginRead`.</span></span>  
  
 <span data-ttu-id="972af-171">La posizione corrente nel flusso viene aggiornata quando la lettura o scrittura asincrona viene eseguita, non al completamento dell'operazione dei / o.</span><span class="sxs-lookup"><span data-stu-id="972af-171">The current position in the stream is updated when the asynchronous read or write is issued, not when the I/O operation completes.</span></span>  
  
 <span data-ttu-id="972af-172">Più richieste asincrone contemporanee rendono incerto l'ordine di completamento della richiesta.</span><span class="sxs-lookup"><span data-stu-id="972af-172">Multiple simultaneous asynchronous requests render the request completion order uncertain.</span></span>  
  
 <span data-ttu-id="972af-173">Utilizzare il <xref:System.IO.Stream.CanRead%2A> proprietà per determinare se l'istanza corrente supporta la lettura.</span><span class="sxs-lookup"><span data-stu-id="972af-173">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="972af-174">Se il flusso è chiuso o si passa un argomento non valido, le eccezioni vengono generate immediatamente `BeginRead`.</span><span class="sxs-lookup"><span data-stu-id="972af-174">If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from `BeginRead`.</span></span> <span data-ttu-id="972af-175">Gli errori che si verificano durante una richiesta di lettura asincrona, ad esempio un errore del disco durante una richiesta dei / o, si verificano nel pool di thread e generano eccezioni quando si chiama `EndRead`.</span><span class="sxs-lookup"><span data-stu-id="972af-175">Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling `EndRead`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="972af-176">È stato eseguito un tentativo di lettura asincrona oltre la fine del flusso o si è verificato un errore del disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-176">Attempted an asynchronous read past the end of the stream, or a disk error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="972af-177">Uno o più argomenti non sono validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-177">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="972af-178">Sono stati chiamati dei metodi dopo la chiusura del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-178">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="972af-179">L'implementazione corrente di <see langword="Stream" /> non supporta l'operazione di lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-179">The current <see langword="Stream" /> implementation does not support the read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginWrite (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="972af-180">Buffer da cui scrivere i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-180">The buffer to write data from.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="972af-181">Offset di byte in <c>buffer</c> da cui iniziare la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-181">The byte offset in <c>buffer</c> from which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="972af-182">Numero massimo di byte da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-182">The maximum number of bytes to write.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="972af-183">Callback asincrono facoltativo, da chiamare quando la scrittura è completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-183">An optional asynchronous callback, to be called when the write is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="972af-184">Oggetto fornito dall'utente che distingue questa specifica richiesta di scrittura asincrona da altre richieste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-184">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="972af-185">Inizia un'operazione di scrittura asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-185">Begins an asynchronous write operation.</span>
          </span>
          <span data-ttu-id="972af-186">(In alternativa, si consideri l'uso di <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-186">(Consider using <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="972af-187">Oggetto <see langword="IAsyncResult" /> che rappresenta la scrittura asincrona, che può essere ancora in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-187">An <see langword="IAsyncResult" /> that represents the asynchronous write, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-188">In .NET Framework 4 e versioni precedenti è necessario usare metodi quali <xref:System.IO.Stream.BeginWrite%2A> e <xref:System.IO.Stream.EndWrite%2A> per implementare operazioni di I/O asincrone.</span><span class="sxs-lookup"><span data-stu-id="972af-188">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginWrite%2A> and <xref:System.IO.Stream.EndWrite%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="972af-189">Questi metodi sono ancora disponibili nel [!INCLUDE[net_v45](~/includes/net-v45-md.md)] per supportare il codice legacy; tuttavia, nuovi metodi async, ad esempio <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, e <xref:System.IO.Stream.FlushAsync%2A>, della Guida è implementare più facilmente le operazioni dei / o asincrone.</span><span class="sxs-lookup"><span data-stu-id="972af-189">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="972af-190">L'implementazione predefinita di `BeginWrite` su un flusso di chiamate di <xref:System.IO.Stream.Write%2A> metodo in modo sincrono, vale a dire che `Write` potrebbe bloccarsi su alcuni flussi.</span><span class="sxs-lookup"><span data-stu-id="972af-190">The default implementation of `BeginWrite` on a stream calls the <xref:System.IO.Stream.Write%2A> method synchronously, which means that `Write` might block on some streams.</span></span> <span data-ttu-id="972af-191">Tuttavia, le istanze di classi, ad esempio `FileStream` e `NetworkStream` supportano completamente le operazioni asincrone, se le istanze sono state aperte in modo asincrono.</span><span class="sxs-lookup"><span data-stu-id="972af-191">However, instances of classes such as `FileStream` and `NetworkStream` fully support asynchronous operations if the instances have been opened asynchronously.</span></span> <span data-ttu-id="972af-192">Pertanto, le chiamate a `BeginWrite` non verrà bloccata su tali flussi.</span><span class="sxs-lookup"><span data-stu-id="972af-192">Therefore, calls to `BeginWrite` will not block on those streams.</span></span> <span data-ttu-id="972af-193">È possibile eseguire l'override `BeginWrite` (tramite delegati asincroni, ad esempio) per fornire il comportamento asincrono.</span><span class="sxs-lookup"><span data-stu-id="972af-193">You can override `BeginWrite` (by using async delegates, for example) to provide asynchronous behavior.</span></span>  
  
 <span data-ttu-id="972af-194">Passare il `IAsyncResult` restituito dal metodo corrente per <xref:System.IO.Stream.EndWrite%2A> per garantire che la scrittura venga completata e libera le risorse in modo appropriato.</span><span class="sxs-lookup"><span data-stu-id="972af-194">Pass the `IAsyncResult` returned by the current method to <xref:System.IO.Stream.EndWrite%2A> to ensure that the write completes and frees resources appropriately.</span></span> <span data-ttu-id="972af-195"><xref:System.IO.Stream.EndWrite%2A> deve essere chiamato una volta per ogni chiamata a <xref:System.IO.Stream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="972af-195"><xref:System.IO.Stream.EndWrite%2A> must be called once for every call to <xref:System.IO.Stream.BeginWrite%2A>.</span></span> <span data-ttu-id="972af-196">È possibile eseguire questa operazione utilizzando lo stesso codice che ha chiamato `BeginWrite` o in un callback passato a `BeginWrite`.</span><span class="sxs-lookup"><span data-stu-id="972af-196">You can do this either by using the same code that called `BeginWrite` or in a callback passed to `BeginWrite`.</span></span> <span data-ttu-id="972af-197">Se si verifica un errore durante un'operazione di scrittura asincrona, fino a quando non essere generata un'eccezione `EndWrite` viene chiamato con il `IAsyncResult` restituito da questo metodo.</span><span class="sxs-lookup"><span data-stu-id="972af-197">If an error occurs during an asynchronous write, an exception will not be thrown until `EndWrite` is called with the `IAsyncResult` returned by this method.</span></span>  
  
 <span data-ttu-id="972af-198">Se un flusso scrivibile, scrittura alla fine del flusso si espande il flusso.</span><span class="sxs-lookup"><span data-stu-id="972af-198">If a stream is writable, writing at the end of the stream expands the stream.</span></span>  
  
 <span data-ttu-id="972af-199">La posizione corrente nel flusso viene aggiornata quando si esegue la lettura o scrittura asincrona, non al completamento dell'operazione dei / o.</span><span class="sxs-lookup"><span data-stu-id="972af-199">The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.</span></span> <span data-ttu-id="972af-200">Più richieste asincrone contemporanee rendono incerto l'ordine di completamento della richiesta.</span><span class="sxs-lookup"><span data-stu-id="972af-200">Multiple simultaneous asynchronous requests render the request completion order uncertain.</span></span>  
  
 <span data-ttu-id="972af-201">Utilizzare il <xref:System.IO.Stream.CanWrite%2A> proprietà per determinare se l'istanza corrente supporta la scrittura.</span><span class="sxs-lookup"><span data-stu-id="972af-201">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 <span data-ttu-id="972af-202">Se il flusso è chiuso o si passa un argomento non valido, le eccezioni vengono generate immediatamente `BeginWrite`.</span><span class="sxs-lookup"><span data-stu-id="972af-202">If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from `BeginWrite`.</span></span> <span data-ttu-id="972af-203">Gli errori che si verificano durante una richiesta di scrittura asincrona, ad esempio un errore del disco durante una richiesta dei / o, si verificano nel pool di thread e generano eccezioni quando si chiama `EndWrite`.</span><span class="sxs-lookup"><span data-stu-id="972af-203">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling `EndWrite`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="972af-204">È stato eseguito un tentativo di scrittura asincrona oltre la fine del flusso o si è verificato un errore del disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-204">Attempted an asynchronous write past the end of the stream, or a disk error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="972af-205">Uno o più argomenti non sono validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-205">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="972af-206">Sono stati chiamati dei metodi dopo la chiusura del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-206">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="972af-207">L'implementazione corrente di <see langword="Stream" /> non supporta l'operazione di scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-207">The current <see langword="Stream" /> implementation does not support the write operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />
        <altmember cref="P:System.IO.Stream.CanWrite" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public abstract bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="972af-208">Quando ne viene eseguito l'override in una classe derivata, ottiene un valore che indica se il flusso corrente supporta la lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-208">When overridden in a derived class, gets a value indicating whether the current stream supports reading.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="972af-209">
            <see langword="true" /> se il flusso supporta la lettura; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-209">
              <see langword="true" /> if the stream supports reading; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-210">Se una classe derivata da <xref:System.IO.Stream> non supporta la lettura, le chiamate al <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, e <xref:System.IO.Stream.BeginRead%2A> metodi generano un <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="972af-210">If a class derived from <xref:System.IO.Stream> does not support reading, calls to the <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, and <xref:System.IO.Stream.BeginRead%2A> methods throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="972af-211">Se il flusso è chiuso, questa proprietà restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="972af-211">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="972af-212">Di seguito è riportato un esempio di utilizzo di `CanRead` proprietà.</span><span class="sxs-lookup"><span data-stu-id="972af-212">The following is an example of using the `CanRead` property.</span></span>  
  
 [!code-cpp[Classic FileStream.CanRead Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileStream.CanRead Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/CS/source.cs#1)]
 [!code-vb[Classic FileStream.CanRead Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public abstract bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanSeek { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="972af-213">Quando ne viene eseguito l'override in una classe derivata, ottiene un valore che indica se il flusso corrente supporta la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-213">When overridden in a derived class, gets a value indicating whether the current stream supports seeking.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="972af-214">
            <see langword="true" /> se il flusso supporta la ricerca; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-214">
              <see langword="true" /> if the stream supports seeking; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-215">Se una classe derivata da <xref:System.IO.Stream> non supporta la ricerca, le chiamate a <xref:System.IO.Stream.Length%2A>, <xref:System.IO.Stream.SetLength%2A>, <xref:System.IO.Stream.Position%2A>, e <xref:System.IO.Stream.Seek%2A> generano un <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="972af-215">If a class derived from <xref:System.IO.Stream> does not support seeking, calls to <xref:System.IO.Stream.Length%2A>, <xref:System.IO.Stream.SetLength%2A>, <xref:System.IO.Stream.Position%2A>, and <xref:System.IO.Stream.Seek%2A> throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="972af-216">Se il flusso è chiuso, questa proprietà restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="972af-216">If the stream is closed, this property returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public virtual bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="972af-217">Ottiene un valore che determina se il flusso corrente prevede il timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-217">Gets a value that determines whether the current stream can time out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="972af-218">Valore che determina se il flusso corrente prevede il timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-218">A value that determines whether the current stream can time out.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-219">La proprietà <xref:System.IO.Stream.CanTimeout%2A> restituisce sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="972af-219">The <xref:System.IO.Stream.CanTimeout%2A> property always returns `false`.</span></span> <span data-ttu-id="972af-220">Alcune implementazioni del flusso richiedono un comportamento diverso, ad esempio <xref:System.Net.Sockets.NetworkStream>, che verifica il timeout se la connettività di rete viene interrotta o persa.</span><span class="sxs-lookup"><span data-stu-id="972af-220">Some stream implementations require different behavior, such as <xref:System.Net.Sockets.NetworkStream>, which times out if network connectivity is interrupted or lost.</span></span> <span data-ttu-id="972af-221">Se si sta implementando un flusso che deve essere in grado di timeout, è necessario eseguire l'override di questa proprietà per restituire `true`.</span><span class="sxs-lookup"><span data-stu-id="972af-221">If you are implementing a stream that must be able to time out, this property should be overridden to return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Stream.ReadTimeout" />
        <altmember cref="P:System.IO.Stream.WriteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public abstract bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="972af-222">Quando ne viene eseguito l'override in una classe derivata, ottiene un valore che indica se il flusso corrente supporta la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-222">When overridden in a derived class, gets a value indicating whether the current stream supports writing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="972af-223">
            <see langword="true" /> se il flusso supporta la scrittura; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-223">
              <see langword="true" /> if the stream supports writing; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-224">Se una classe derivata da <xref:System.IO.Stream> non supporta la scrittura, una chiamata a <xref:System.IO.Stream.Write%2A>, <xref:System.IO.Stream.BeginWrite%2A>, o <xref:System.IO.Stream.WriteByte%2A> genera un <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="972af-224">If a class derived from <xref:System.IO.Stream> does not support writing, a call to <xref:System.IO.Stream.Write%2A>, <xref:System.IO.Stream.BeginWrite%2A>, or <xref:System.IO.Stream.WriteByte%2A> throws a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="972af-225">Se il flusso è chiuso, questa proprietà restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="972af-225">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="972af-226">Di seguito è riportato un esempio di utilizzo di `CanWrite` proprietà.</span><span class="sxs-lookup"><span data-stu-id="972af-226">The following is an example of using the `CanWrite` property.</span></span>  
  
 [!code-cpp[Classic Stream.CanWrite Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stream.CanWrite Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stream.CanWrite Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stream.CanWrite Example/CS/source.cs#1)]
 [!code-vb[Classic Stream.CanWrite Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stream.CanWrite Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="972af-227">Chiude il flusso corrente e libera le risorse, come socket e handle di file, ad esso associate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-227">Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream.</span>
          </span>
          <span data-ttu-id="972af-228">Anziché chiamare questo metodo, assicurarsi che il flusso sia eliminato correttamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-228">Instead of calling this method, ensure that the stream is properly disposed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-229">Questo metodo chiama <xref:System.IO.Stream.Dispose%2A>, specificando `true` per rilasciare tutte le risorse.</span><span class="sxs-lookup"><span data-stu-id="972af-229">This method calls <xref:System.IO.Stream.Dispose%2A>, specifying `true` to release all resources.</span></span> <span data-ttu-id="972af-230">Non è necessario chiamare esplicitamente il <xref:System.IO.Stream.Close%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="972af-230">You do not have to specifically call the <xref:System.IO.Stream.Close%2A> method.</span></span> <span data-ttu-id="972af-231">Al contrario, verificare che ogni <xref:System.IO.Stream> oggetto è stato eliminato correttamente.</span><span class="sxs-lookup"><span data-stu-id="972af-231">Instead, ensure that every <xref:System.IO.Stream> object is properly disposed.</span></span> <span data-ttu-id="972af-232">È possibile dichiarare <xref:System.IO.Stream> oggetti all'interno di un `using` blocco (o `Using` blocco in Visual Basic) per garantire che il flusso e tutte le relative risorse vengono eliminate o chiamare in modo esplicito il <xref:System.IO.Stream.Dispose%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="972af-232">You can declare <xref:System.IO.Stream> objects within a `using` block (or `Using` block in Visual Basic) to ensure that the stream and all of its resources are disposed, or you can explicitly call the <xref:System.IO.Stream.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="972af-233">La cancellazione del flusso non svuotamento del codificatore sottostante a meno che non si chiama in modo esplicito un'implementazione di <xref:System.IO.Stream.Flush%2A> o `Close`.</span><span class="sxs-lookup"><span data-stu-id="972af-233">Flushing the stream will not flush its underlying encoder unless you explicitly call an implementation of <xref:System.IO.Stream.Flush%2A> or `Close`.</span></span> <span data-ttu-id="972af-234">Impostazione <xref:System.IO.StreamWriter.AutoFlush%2A> a `true` , i dati verranno scaricati dal buffer nel flusso, ma lo stato del codificatore non verrà rimosso.</span><span class="sxs-lookup"><span data-stu-id="972af-234">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="972af-235">In questo modo il codificatore mantenere lo stato (caratteri parziali) in modo che può codificare correttamente il blocco successivo di caratteri.</span><span class="sxs-lookup"><span data-stu-id="972af-235">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="972af-236">Questo scenario riguarda UTF8 e UTF7, in cui alcuni caratteri possono essere codificati solo dopo che il codificatore riceve adiacenti carattere o caratteri.</span><span class="sxs-lookup"><span data-stu-id="972af-236">This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="972af-237">Tenta di modificare il flusso dopo il flusso è stato chiuso potrebbe generare un <xref:System.ObjectDisposedException>.</span><span class="sxs-lookup"><span data-stu-id="972af-237">Attempts to manipulate the stream after the stream has been closed might throw an <xref:System.ObjectDisposedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="972af-238">Nelle classi derivate, non eseguire l'override di <see cref="M:System.IO.Stream.Close" /> (metodo), invece, inserire tutte la <see langword="Stream" /> logica di pulizia nel <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> (metodo).</span>
            <span class="sxs-lookup">
              <span data-stu-id="972af-238">In derived classes, do not override the <see cref="M:System.IO.Stream.Close" /> method, instead, put all of the <see langword="Stream" /> cleanup logic in the <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> method.</span>
            </span>
            <span data-ttu-id="972af-239">Per ulteriori informazioni, vedere [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="972af-239">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="972af-240">Legge i byte dal flusso corrente e li scrive in un altro flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-240">Reads the bytes from the current stream and writes them to another stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.IO.Stream destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.IO.Stream destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(System::IO::Stream ^ destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="972af-241">Flusso in cui verrà copiato il contenuto del flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-241">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="972af-242">Legge i byte dal flusso corrente e li scrive in un altro flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-242">Reads the bytes from the current stream and writes them to another stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-243">Copia inizia in corrispondenza della posizione corrente nel flusso corrente e reimposta la posizione del flusso di destinazione al termine dell'operazione di copia.</span><span class="sxs-lookup"><span data-stu-id="972af-243">Copying begins at the current position in the current stream, and does not reset the position of the destination stream after the copy operation is complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="972af-244">Nell'esempio seguente copia il contenuto di un <xref:System.IO.FileStream> per un <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="972af-244">The following example copies the contents of a <xref:System.IO.FileStream> to a <xref:System.IO.MemoryStream>.</span></span>  
  
 [!code-csharp[System.IO.Stream.CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stream.copyto/cs/program.cs#1)]
 [!code-vb[System.IO.Stream.CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stream.copyto/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="972af-245">
            <paramref name="destination" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-245">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="972af-246">Il flusso corrente non supporta la lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-246">The current stream does not support reading.</span>
          </span>
          <span data-ttu-id="972af-247">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-247">-or-</span>
          </span>
          <span data-ttu-id="972af-248">
            <paramref name="destination" /> non supporta la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-248">
              <paramref name="destination" /> does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="972af-249">Il flusso corrente o <paramref name="destination" /> sono stati chiusi prima che venisse chiamato il metodo <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-249">Either the current stream or <paramref name="destination" /> were closed before the <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" /> method was called.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="972af-250">Si è verificato un errore di I/O.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-250">An I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.IO.Stream destination, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.IO.Stream destination, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Stream, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(System::IO::Stream ^ destination, int bufferSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="972af-251">Flusso in cui verrà copiato il contenuto del flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-251">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="972af-252">Dimensione del buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-252">The size of the buffer.</span>
          </span>
          <span data-ttu-id="972af-253">Il valore deve essere maggiore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-253">This value must be greater than zero.</span>
          </span>
          <span data-ttu-id="972af-254">La dimensione predefinita è 81920.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-254">The default size is 81920.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="972af-255">Legge tutti i byte dal flusso corrente e li scrive in un altro flusso, usando una dimensione di buffer specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-255">Reads the bytes from the current stream and writes them to another stream, using a specified buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-256">Copia inizia in corrispondenza della posizione corrente nel flusso corrente e reimposta la posizione del flusso di destinazione al termine dell'operazione di copia.</span><span class="sxs-lookup"><span data-stu-id="972af-256">Copying begins at the current position in the current stream, and does not reset the position of the destination stream after the copy operation is complete.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="972af-257">
            <paramref name="destination" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-257">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="972af-258">
            <paramref name="bufferSize" /> è un valore negativo o zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-258">
              <paramref name="bufferSize" /> is negative or zero.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="972af-259">Il flusso corrente non supporta la lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-259">The current stream does not support reading.</span>
          </span>
          <span data-ttu-id="972af-260">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-260">-or-</span>
          </span>
          <span data-ttu-id="972af-261">
            <paramref name="destination" /> non supporta la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-261">
              <paramref name="destination" /> does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="972af-262">Il flusso corrente o <paramref name="destination" /> sono stati chiusi prima che venisse chiamato il metodo <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-262">Either the current stream or <paramref name="destination" /> were closed before the <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" /> method was called.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="972af-263">Si è verificato un errore di I/O.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-263">An I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyToAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="972af-264">Legge in modo asincrono i byte dal flusso corrente e li scrive in un altro flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-264">Asynchronously reads the bytes from the current stream and writes them to another stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyToAsync (destination As Stream) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="972af-265">Flusso in cui verrà copiato il contenuto del flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-265">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="972af-266">Legge in modo asincrono i byte dal flusso corrente e li scrive in un altro flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-266">Asynchronously reads the bytes from the current stream and writes them to another stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="972af-267">Attività che rappresenta l'operazione di copia asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-267">A task that represents the asynchronous copy operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-268">Il <xref:System.IO.Stream.CopyToAsync%2A> metodo consente di eseguire operazioni dei / o elevato utilizzo di risorse senza bloccare il thread principale.</span><span class="sxs-lookup"><span data-stu-id="972af-268">The <xref:System.IO.Stream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="972af-269">Questa considerazione sulle prestazioni è particolarmente importante in un'applicazione [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] in cui tramite un'operazione di flusso per cui è richiesto molto tempo è possibile bloccare il thread UI e far sembrare che l'applicazione non funzioni.</span><span class="sxs-lookup"><span data-stu-id="972af-269">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="972af-270">I metodi asincroni vengono utilizzati in combinazione con il `async` e `await` parole chiave in Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="972af-270">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="972af-271">La copia inizia in corrispondenza della posizione corrente nel flusso corrente.</span><span class="sxs-lookup"><span data-stu-id="972af-271">Copying begins at the current position in the current stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="972af-272">Nell'esempio seguente viene illustrato come utilizzare due <xref:System.IO.FileStream> oggetti da copiare in modo asincrono i file da una directory a un altro.</span><span class="sxs-lookup"><span data-stu-id="972af-272">The following example demonstrates how to use two <xref:System.IO.FileStream> objects to asynchronously copy the files from one directory to another.</span></span> <span data-ttu-id="972af-273">La classe <xref:System.IO.FileStream> deriva dalla classe <xref:System.IO.Stream>.</span><span class="sxs-lookup"><span data-stu-id="972af-273">The <xref:System.IO.FileStream> class derives from the <xref:System.IO.Stream> class.</span></span>  <span data-ttu-id="972af-274">Si noti che il <xref:System.Web.UI.WebControls.Button.Click> gestore eventi per il <xref:System.Windows.Controls.Button> controllo è contrassegnato con il `async` modificatore poiché chiama un metodo asincrono</span><span class="sxs-lookup"><span data-stu-id="972af-274">Notice that the <xref:System.Web.UI.WebControls.Button.Click> event handler for the <xref:System.Windows.Controls.Button> control is marked with the `async` modifier because it calls an asynchronous method</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#1](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example.cs#1)]
 [!code-vb[Asynchronous_File_IO_async#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="972af-275">
            <paramref name="destination" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-275">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="972af-276">Il flusso corrente o il flusso di destinazione viene eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-276">Either the current stream or the destination stream is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="972af-277">Il flusso corrente non supporta la lettura, o il flusso di destinazione non supporta la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-277">The current stream does not support reading, or the destination stream does not support writing.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyToAsync (destination As Stream, bufferSize As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, int bufferSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="972af-278">Flusso in cui verrà copiato il contenuto del flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-278">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="972af-279">Dimensione del buffer, in byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-279">The size, in bytes, of the buffer.</span>
          </span>
          <span data-ttu-id="972af-280">Il valore deve essere maggiore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-280">This value must be greater than zero.</span>
          </span>
          <span data-ttu-id="972af-281">La dimensione predefinita è 81920.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-281">The default size is 81920.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="972af-282">Legge in modo asincrono tutti i byte dal flusso corrente e li scrive in un altro flusso, usando una dimensione di buffer specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-282">Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="972af-283">Attività che rappresenta l'operazione di copia asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-283">A task that represents the asynchronous copy operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-284">Il <xref:System.IO.Stream.CopyToAsync%2A> metodo consente di eseguire operazioni dei / o elevato utilizzo di risorse senza bloccare il thread principale.</span><span class="sxs-lookup"><span data-stu-id="972af-284">The <xref:System.IO.Stream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="972af-285">Questa considerazione sulle prestazioni è particolarmente importante in un'applicazione [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] in cui tramite un'operazione di flusso per cui è richiesto molto tempo è possibile bloccare il thread UI e far sembrare che l'applicazione non funzioni.</span><span class="sxs-lookup"><span data-stu-id="972af-285">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="972af-286">I metodi asincroni vengono utilizzati in combinazione con il `async` e `await` parole chiave in Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="972af-286">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="972af-287">La copia inizia in corrispondenza della posizione corrente nel flusso corrente.</span><span class="sxs-lookup"><span data-stu-id="972af-287">Copying begins at the current position in the current stream.</span></span>  
  
 <span data-ttu-id="972af-288">Per un esempio di copia tra i due flussi, vedere il <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> rapporto di overload.</span><span class="sxs-lookup"><span data-stu-id="972af-288">For an example of copying between two streams, see the <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="972af-289">
            <paramref name="destination" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-289">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="972af-290">
            <paramref name="buffersize" /> è un valore negativo o zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-290">
              <paramref name="buffersize" /> is negative or zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="972af-291">Il flusso corrente o il flusso di destinazione viene eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-291">Either the current stream or the destination stream is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="972af-292">Il flusso corrente non supporta la lettura, o il flusso di destinazione non supporta la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-292">The current stream does not support reading, or the destination stream does not support writing.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, int bufferSize, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, int32 bufferSize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, int bufferSize, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="972af-293">Flusso in cui verrà copiato il contenuto del flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-293">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="972af-294">Dimensione del buffer, in byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-294">The size, in bytes, of the buffer.</span>
          </span>
          <span data-ttu-id="972af-295">Il valore deve essere maggiore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-295">This value must be greater than zero.</span>
          </span>
          <span data-ttu-id="972af-296">La dimensione predefinita è 81920.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-296">The default size is 81920.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="972af-297">Token per il monitoraggio delle richieste di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-297">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="972af-298">Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-298">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="972af-299">Legge in modo asincrono i byte dal flusso corrente e li scrive in un altro flusso, usando una dimensione di buffer specificata e un token di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-299">Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size and cancellation token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="972af-300">Attività che rappresenta l'operazione di copia asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-300">A task that represents the asynchronous copy operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-301">Il <xref:System.IO.Stream.CopyToAsync%2A> metodo consente di eseguire operazioni dei / o elevato utilizzo di risorse senza bloccare il thread principale.</span><span class="sxs-lookup"><span data-stu-id="972af-301">The <xref:System.IO.Stream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="972af-302">Questa considerazione sulle prestazioni è particolarmente importante in un'applicazione [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] in cui tramite un'operazione di flusso per cui è richiesto molto tempo è possibile bloccare il thread UI e far sembrare che l'applicazione non funzioni.</span><span class="sxs-lookup"><span data-stu-id="972af-302">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="972af-303">I metodi asincroni vengono utilizzati in combinazione con il `async` e `await` parole chiave in Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="972af-303">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="972af-304">Se l'operazione viene annullata prima del completamento, l'attività restituita contiene il <xref:System.Threading.Tasks.TaskStatus.Canceled> valore per il <xref:System.Threading.Tasks.Task.Status%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="972af-304">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="972af-305">La copia inizia in corrispondenza della posizione corrente nel flusso corrente.</span><span class="sxs-lookup"><span data-stu-id="972af-305">Copying begins at the current position in the current stream.</span></span>  
  
 <span data-ttu-id="972af-306">Per un esempio di copia tra i due flussi, vedere il <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> rapporto di overload.</span><span class="sxs-lookup"><span data-stu-id="972af-306">For an example of copying between two streams, see the <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="972af-307">
            <paramref name="destination" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-307">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="972af-308">
            <paramref name="buffersize" /> è un valore negativo o zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-308">
              <paramref name="buffersize" /> is negative or zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="972af-309">Il flusso corrente o il flusso di destinazione viene eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-309">Either the current stream or the destination stream is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="972af-310">Il flusso corrente non supporta la lettura, o il flusso di destinazione non supporta la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-310">The current stream does not support reading, or the destination stream does not support writing.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWaitHandle">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.WaitHandle CreateWaitHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.WaitHandle CreateWaitHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CreateWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateWaitHandle () As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::WaitHandle ^ CreateWaitHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("CreateWaitHandle will be removed eventually.  Please use "new ManualResetEvent(false)" instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="972af-311">Alloca un oggetto <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-311">Allocates a <see cref="T:System.Threading.WaitHandle" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="972af-312">Riferimento all'oggetto <see langword="WaitHandle" /> allocato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-312">A reference to the allocated <see langword="WaitHandle" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-313">Quando viene chiamato per la prima volta, il metodo corrente viene creato un `WaitHandle` dell'oggetto e lo restituisce.</span><span class="sxs-lookup"><span data-stu-id="972af-313">When called for the first time, the current method creates a `WaitHandle` object and returns it.</span></span> <span data-ttu-id="972af-314">Nelle successive chiamate `CreateWaitHandle` restituisce un riferimento a un nuovo handle di attesa.</span><span class="sxs-lookup"><span data-stu-id="972af-314">On subsequent calls, `CreateWaitHandle` returns a reference to a new wait handle.</span></span>  
  
 <span data-ttu-id="972af-315">Utilizzare questo metodo se si implementano i metodi asincroni e richiedono una modalità di blocco in <xref:System.IO.Stream.EndRead%2A> o <xref:System.IO.Stream.EndWrite%2A> fino al completamento dell'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="972af-315">Use this method if you implement the asynchronous methods and require a way of blocking in <xref:System.IO.Stream.EndRead%2A> or <xref:System.IO.Stream.EndWrite%2A> until the asynchronous operation is complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="972af-316">Rilascia tutte le risorse usate dall'oggetto <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-316">Releases all resources used by the <see cref="T:System.IO.Stream" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="972af-317">Rilascia tutte le risorse usate da <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-317">Releases all resources used by the <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-318">Questo metodo elimina il flusso, scrivendo le modifiche all'archivio di backup e di chiusura del flusso per rilasciare le risorse.</span><span class="sxs-lookup"><span data-stu-id="972af-318">This method disposes the stream, by writing any changes to the backing store and closing the stream to release resources.</span></span>  
  
 <span data-ttu-id="972af-319">La chiamata `Dispose` le risorse utilizzate da di <xref:System.IO.Stream> riallocazione per altri scopi.</span><span class="sxs-lookup"><span data-stu-id="972af-319">Calling `Dispose` allows the resources used by the <xref:System.IO.Stream> to be reallocated for other purposes.</span></span> <span data-ttu-id="972af-320">Per ulteriori informazioni su `Dispose`, vedere [la pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="972af-320">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="972af-321">Inserire tutta la logica per l'oggetto flusso in pulizia <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="972af-321">Place all cleanup logic for your stream object in <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span>
            </span>
            <span data-ttu-id="972af-322">Non eseguire l'override <see cref="M:System.IO.Stream.Close" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="972af-322">Do not override <see cref="M:System.IO.Stream.Close" />.</span>
            </span>
            <span data-ttu-id="972af-323">Si noti che, a causa dei requisiti di compatibilità con le versioni precedenti, l'implementazione del metodo differisce dalla procedura consigliata per il modello Dispose.</span>
            <span class="sxs-lookup">
              <span data-stu-id="972af-323">Note that because of backward compatibility requirements, this method's implementation differs from the recommended guidance for the Dispose pattern.</span>
            </span>
            <span data-ttu-id="972af-324">Questo metodo chiama <see cref="M:System.IO.Stream.Close" />, che a sua volta chiama <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="972af-324">This method calls <see cref="M:System.IO.Stream.Close" />, which then calls <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="972af-325">
            <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-325">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="972af-326">Rilascia le risorse non gestite usate da <see cref="T:System.IO.Stream" /> e, facoltativamente, le risorse gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-326">Releases the unmanaged resources used by the <see cref="T:System.IO.Stream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-327">È necessario rilasciare tutte le risorse specificando `true` per `disposing`.</span><span class="sxs-lookup"><span data-stu-id="972af-327">You should release all resources by specifying `true` for `disposing`.</span></span> <span data-ttu-id="972af-328">Quando `disposing` è `true`, il flusso può inoltre garantire che i dati viene cancellati per il buffer sottostante e accedere ad altri oggetti finalizzabili.</span><span class="sxs-lookup"><span data-stu-id="972af-328">When `disposing` is `true`, the stream can also ensure data is flushed to the underlying buffer, and access other finalizable objects.</span></span>  <span data-ttu-id="972af-329">Questo potrebbe non essere possibile quando viene chiamato da un finalizzatore per mancanza di ordinamento tra i finalizzatori.</span><span class="sxs-lookup"><span data-stu-id="972af-329">This may not be possible when called from a finalizer due a lack of ordering among finalizers.</span></span>  
  
 <span data-ttu-id="972af-330">Se il flusso utilizza un handle del sistema operativo per comunicare con la relativa origine, è consigliabile usare una sottoclasse di <xref:System.Runtime.InteropServices.SafeHandle> a questo scopo.</span><span class="sxs-lookup"><span data-stu-id="972af-330">If your stream is using an operating system handle to communicate with its source, consider using a subclass of <xref:System.Runtime.InteropServices.SafeHandle> for this purpose.</span></span>  
  
 <span data-ttu-id="972af-331">Questo metodo viene chiamato dal metodo pubblico <xref:System.ComponentModel.Component.Dispose%2A> (metodo) e <xref:System.Object.Finalize%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="972af-331">This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="972af-332"><xref:System.ComponentModel.Component.Dispose%2A> richiama il metodo protetto <xref:System.IO.Stream.Dispose%2A> metodo con il `disposing` parametro impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="972af-332"><xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Stream.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="972af-333"><xref:System.Object.Finalize%2A> richiama <xref:System.IO.Stream.Dispose%2A> con `disposing` impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="972af-333"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.Stream.Dispose%2A> with `disposing` set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="972af-334">Nelle classi derivate, non eseguire l'override di <see cref="M:System.IO.Stream.Close" /> invece inserire tutta la logica di pulizia flusso nel metodo, il <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> metodo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="972af-334">In derived classes, do not override the <see cref="M:System.IO.Stream.Close" /> method, instead, put all of the Stream cleanup logic in the <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> method.</span>
            </span>
            <span data-ttu-id="972af-335">Il metodo <see cref="M:System.ComponentModel.Component.Dispose" /> può essere chiamato più volte da altri oggetti.</span>
            <span class="sxs-lookup">
              <span data-stu-id="972af-335">
                <see cref="M:System.ComponentModel.Component.Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="972af-336">In caso di override di <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, non fare riferimento a oggetti già eliminati in una chiamata precedente a <see cref="M:System.ComponentModel.Component.Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="972af-336">When overriding <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.ComponentModel.Component.Dispose" />.</span>
            </span>
            <span data-ttu-id="972af-337">Per ulteriori informazioni su come implementare <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, vedere [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="972af-337">For more information about how to implement <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="972af-338">Per ulteriori informazioni su <see cref="M:System.ComponentModel.Component.Dispose" /> e <see cref="M:System.Object.Finalize" />, vedere [la pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="972af-338">For more information about <see cref="M:System.ComponentModel.Component.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public virtual int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="972af-339">Riferimento alla richiesta asincrona in sospeso da completare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-339">The reference to the pending asynchronous request to finish.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="972af-340">Attende il completamento della lettura asincrona in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-340">Waits for the pending asynchronous read to complete.</span>
          </span>
          <span data-ttu-id="972af-341">(In alternativa, si consideri l'uso di <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-341">(Consider using <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="972af-342">Numero di byte letti dal flusso, tra zero (0) e il numero di byte richiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-342">The number of bytes read from the stream, between zero (0) and the number of bytes you requested.</span>
          </span>
          <span data-ttu-id="972af-343">I flussi restituiscono zero (0) solo alla fine del flusso; in caso contrario, si devono bloccare fino a quando non è disponibile almeno 1 byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-343">Streams return zero (0) only at the end of the stream, otherwise, they should block until at least one byte is available.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-344">In .NET Framework 4 e versioni precedenti è necessario usare metodi quali <xref:System.IO.Stream.BeginRead%2A> e <xref:System.IO.Stream.EndRead%2A> per implementare operazioni di I/O asincrone.</span><span class="sxs-lookup"><span data-stu-id="972af-344">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="972af-345">Questi metodi sono ancora disponibili nel [!INCLUDE[net_v45](~/includes/net-v45-md.md)] per supportare il codice legacy; tuttavia, nuovi metodi async, ad esempio <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, e <xref:System.IO.Stream.FlushAsync%2A>, della Guida è implementare più facilmente le operazioni dei / o asincrone.</span><span class="sxs-lookup"><span data-stu-id="972af-345">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="972af-346">Chiamare `EndRead` per determinare il numero di byte letti dal flusso.</span><span class="sxs-lookup"><span data-stu-id="972af-346">Call `EndRead` to determine how many bytes were read from the stream.</span></span>  
  
 <span data-ttu-id="972af-347">`EndRead` può essere chiamato una volta per ogni <xref:System.IAsyncResult> da <xref:System.IO.Stream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="972af-347">`EndRead` can be called once on every <xref:System.IAsyncResult> from <xref:System.IO.Stream.BeginRead%2A>.</span></span>  
  
 <span data-ttu-id="972af-348">Questo metodo mantiene il blocco fino al completamento dell'operazione di I/O.</span><span class="sxs-lookup"><span data-stu-id="972af-348">This method blocks until the I/O operation has completed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="972af-349">
            <paramref name="asyncResult" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-349">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="972af-350">Non è disponibile un handle dell'operazione di lettura in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-350">A handle to the pending read operation is not available.</span>
          </span>
          <span data-ttu-id="972af-351">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-351">-or-</span>
          </span>
          <span data-ttu-id="972af-352">L'operazione in sospeso non supporta la lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-352">The pending operation does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="972af-353">
            <paramref name="asyncResult" /> non è stato generato da un metodo <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> nel flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-353">
              <paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="972af-354">Il flusso è chiuso o si è verificato un errore interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-354">The stream is closed or an internal error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public virtual void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="972af-355">Riferimento alla richiesta di I/O asincrona in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-355">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="972af-356">Termina un'operazione di scrittura asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-356">Ends an asynchronous write operation.</span>
          </span>
          <span data-ttu-id="972af-357">(In alternativa, si consideri l'uso di <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-357">(Consider using <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-358">In .NET Framework 4 e versioni precedenti è necessario usare metodi quali <xref:System.IO.Stream.BeginWrite%2A> e <xref:System.IO.Stream.EndWrite%2A> per implementare operazioni di I/O asincrone.</span><span class="sxs-lookup"><span data-stu-id="972af-358">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginWrite%2A> and <xref:System.IO.Stream.EndWrite%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="972af-359">Questi metodi sono ancora disponibili nel [!INCLUDE[net_v45](~/includes/net-v45-md.md)] per supportare il codice legacy; tuttavia, nuovi metodi async, ad esempio <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, e <xref:System.IO.Stream.FlushAsync%2A>, della Guida è implementare più facilmente le operazioni dei / o asincrone.</span><span class="sxs-lookup"><span data-stu-id="972af-359">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="972af-360">`EndWrite` deve essere chiamato esattamente una volta per ogni <xref:System.IAsyncResult> da <xref:System.IO.Stream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="972af-360">`EndWrite` must be called exactly once on every <xref:System.IAsyncResult> from <xref:System.IO.Stream.BeginWrite%2A>.</span></span>  
  
 <span data-ttu-id="972af-361">Questo metodo mantiene il blocco fino al completamento dell'operazione di I/O.</span><span class="sxs-lookup"><span data-stu-id="972af-361">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="972af-362">Gli errori che si verificano durante una richiesta di scrittura asincrona, ad esempio un errore del disco durante una richiesta dei / o, si verificano nel pool di thread e diventano visibili dopo una chiamata a `EndWrite`.</span><span class="sxs-lookup"><span data-stu-id="972af-362">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and become visible upon a call to `EndWrite`.</span></span> <span data-ttu-id="972af-363">Le eccezioni generate dai thread del pool non saranno visibili quando si chiama `EndWrite`.</span><span class="sxs-lookup"><span data-stu-id="972af-363">Exceptions thrown by the thread pool thread will not be visible when calling `EndWrite`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="972af-364">
            <paramref name="asyncResult" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-364">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="972af-365">Non è disponibile un handle dell'operazione di scrittura in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-365">A handle to the pending write operation is not available.</span>
          </span>
          <span data-ttu-id="972af-366">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-366">-or-</span>
          </span>
          <span data-ttu-id="972af-367">L'operazione in sospeso non supporta la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-367">The pending operation does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="972af-368">
            <paramref name="asyncResult" /> non è stato generato da un metodo <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> nel flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-368">
              <paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="972af-369">Il flusso è chiuso o si è verificato un errore interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-369">The stream is closed or an internal error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="972af-370">Quando ne viene eseguito l'override in una classe derivata, cancella tutti i buffer del flusso e determina la scrittura dei dati memorizzati nel buffer nel dispositivo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-370">When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-371">Eseguire l'override `Flush` su flussi che implementano un buffer.</span><span class="sxs-lookup"><span data-stu-id="972af-371">Override `Flush` on streams that implement a buffer.</span></span> <span data-ttu-id="972af-372">Utilizzare questo metodo per spostare tutte le informazioni da un buffer sottostante alla relativa destinazione, cancellare il buffer o entrambi.</span><span class="sxs-lookup"><span data-stu-id="972af-372">Use this method to move any information from an underlying buffer to its destination, clear the buffer, or both.</span></span> <span data-ttu-id="972af-373">In base allo stato dell'oggetto, potrebbe essere necessario modificare la posizione corrente all'interno del flusso (ad esempio, se il flusso sottostante supporta la ricerca).</span><span class="sxs-lookup"><span data-stu-id="972af-373">Depending upon the state of the object, you might have to modify the current position within the stream (for example, if the underlying stream supports seeking).</span></span> <span data-ttu-id="972af-374">Per ulteriori informazioni, vedere <xref:System.IO.Stream.CanSeek%2A>.</span><span class="sxs-lookup"><span data-stu-id="972af-374">For additional information see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
 <span data-ttu-id="972af-375">Quando si utilizza il <xref:System.IO.StreamWriter> o <xref:System.IO.BinaryWriter> classe, non scaricare la base <xref:System.IO.Stream> oggetto.</span><span class="sxs-lookup"><span data-stu-id="972af-375">When using the <xref:System.IO.StreamWriter> or <xref:System.IO.BinaryWriter> class, do not flush the base <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="972af-376">Utilizzare invece la classe <xref:System.IO.Stream.Flush%2A> o <xref:System.IO.Stream.Close%2A> metodo, che assicura che i dati vengono scaricati prima il flusso sottostante e quindi scritti nel file.</span><span class="sxs-lookup"><span data-stu-id="972af-376">Instead, use the class's <xref:System.IO.Stream.Flush%2A> or <xref:System.IO.Stream.Close%2A> method, which makes sure that the data is flushed to the underlying stream first and then written to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="972af-377">Si è verificato un errore di I/O.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-377">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FlushAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="972af-378">Cancella in modo asincrono i dati di tutti i buffer del flusso e determina la scrittura dei dati memorizzati nel buffer nel dispositivo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-378">Asynchronously clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="972af-379">Cancella in modo asincrono i dati di tutti i buffer del flusso e determina la scrittura dei dati memorizzati nel buffer nel dispositivo sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-379">Asynchronously clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="972af-380">Attività che rappresenta l'operazione di scaricamento asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-380">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-381">Se una classe derivata, ad esempio <xref:System.IO.Compression.DeflateStream> o <xref:System.IO.Compression.GZipStream>, non lo scarica il buffer nella sua implementazione del <xref:System.IO.Stream.Flush%2A> (metodo), il <xref:System.IO.Stream.FlushAsync%2A> metodo non implica lo svuotamento del buffer.</span><span class="sxs-lookup"><span data-stu-id="972af-381">If a derived class, such as <xref:System.IO.Compression.DeflateStream> or <xref:System.IO.Compression.GZipStream>, does not flush the buffer in its implementation of the <xref:System.IO.Stream.Flush%2A> method, the <xref:System.IO.Stream.FlushAsync%2A> method will not flush the buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="972af-382">Il flusso è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-382">The stream has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="972af-383">Token per il monitoraggio delle richieste di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-383">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="972af-384">Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-384">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="972af-385">Cancella in modo asincrono i dati di tutti i buffer del flusso, determina la scrittura dei dati memorizzati nel buffer nel dispositivo sottostante e monitora le richieste di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-385">Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="972af-386">Attività che rappresenta l'operazione di scaricamento asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-386">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-387">Se l'operazione viene annullata prima del completamento, l'attività restituita contiene il <xref:System.Threading.Tasks.TaskStatus.Canceled> valore per il <xref:System.Threading.Tasks.Task.Status%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="972af-387">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="972af-388">Se una classe derivata, ad esempio <xref:System.IO.Compression.DeflateStream> o <xref:System.IO.Compression.GZipStream>, non lo scarica il buffer nella sua implementazione del <xref:System.IO.Stream.Flush%2A> (metodo), il <xref:System.IO.Stream.FlushAsync%2A> metodo non implica lo svuotamento del buffer.</span><span class="sxs-lookup"><span data-stu-id="972af-388">If a derived class, such as <xref:System.IO.Compression.DeflateStream> or <xref:System.IO.Compression.GZipStream>, does not flush the buffer in its implementation of the <xref:System.IO.Stream.Flush%2A> method, the <xref:System.IO.Stream.FlushAsync%2A> method will not flush the buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="972af-389">Il flusso è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-389">The stream has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public abstract long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.Length" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long Length { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="972af-390">Quando ne viene eseguito l'override in una classe derivata, ottiene la lunghezza in byte del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-390">When overridden in a derived class, gets the length in bytes of the stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="972af-391">Valore long che rappresenta la lunghezza del flusso in byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-391">A long value representing the length of the stream in bytes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="972af-392">Una classe derivata da <see langword="Stream" /> non supporta la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-392">A class derived from <see langword="Stream" /> does not support seeking.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="972af-393">Sono stati chiamati dei metodi dopo la chiusura del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-393">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.Stream Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.Stream Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.Stream.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As Stream " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::Stream ^ Null;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="972af-394">Oggetto <see langword="Stream" /> privo di archivio di backup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-394">A <see langword="Stream" /> with no backing store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-395">Utilizzare `Null` per reindirizzare l'output in un flusso che non utilizza le risorse del sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="972af-395">Use `Null` to redirect output to a stream that will not consume any operating system resources.</span></span> <span data-ttu-id="972af-396">Quando i metodi di `Stream` che forniscono la scrittura vengono richiamati in `Null`restituisce semplicemente la chiamata e viene scritto alcun dato.</span><span class="sxs-lookup"><span data-stu-id="972af-396">When the methods of `Stream` that provide writing are invoked on `Null`, the call simply returns, and no data is written.</span></span> <span data-ttu-id="972af-397">`Null` implementa inoltre un `Read` metodo che restituisce zero senza eseguire la lettura dei dati.</span><span class="sxs-lookup"><span data-stu-id="972af-397">`Null` also implements a `Read` method that returns zero without reading data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectInvariant">
      <MemberSignature Language="C#" Value="protected virtual void ObjectInvariant ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ObjectInvariant() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ObjectInvariant" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ObjectInvariant ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ObjectInvariant();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Do not call or override this method.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="972af-398">Fornisce supporto per un oggetto <see cref="T:System.Diagnostics.Contracts.Contract" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-398">Provides support for a <see cref="T:System.Diagnostics.Contracts.Contract" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public abstract long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.Position" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long Position { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="972af-399">Quando ne viene eseguito l'override in una classe derivata, ottiene o imposta la posizione all'interno del flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-399">When overridden in a derived class, gets or sets the position within the current stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="972af-400">Posizione corrente all'interno del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-400">The current position within the stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-401">Il flusso deve supportare la ricerca ottenere o impostare la posizione.</span><span class="sxs-lookup"><span data-stu-id="972af-401">The stream must support seeking to get or set the position.</span></span> <span data-ttu-id="972af-402">Utilizzare il <xref:System.IO.Stream.CanSeek%2A> proprietà per determinare se il flusso supporta la ricerca.</span><span class="sxs-lookup"><span data-stu-id="972af-402">Use the <xref:System.IO.Stream.CanSeek%2A> property to determine whether the stream supports seeking.</span></span>  
  
 <span data-ttu-id="972af-403">La ricerca in qualsiasi posizione oltre la lunghezza del flusso è supportata.</span><span class="sxs-lookup"><span data-stu-id="972af-403">Seeking to any location beyond the length of the stream is supported.</span></span>  
  
 <span data-ttu-id="972af-404">Il `Position` proprietà non tiene traccia del numero di byte del flusso che sono stati usati, ignorato, o entrambi.</span><span class="sxs-lookup"><span data-stu-id="972af-404">The `Position` property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="972af-405">Si è verificato un errore di I/O.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-405">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="972af-406">Il flusso non supporta la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-406">The stream does not support seeking.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="972af-407">Sono stati chiamati dei metodi dopo la chiusura del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-407">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(Span&lt;System::Byte&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="972af-408">Matrice di byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-408">An array of bytes.</span>
          </span>
          <span data-ttu-id="972af-409">Quando il metodo termina, il buffer contiene la matrice di byte specificata, con i valori compresi tra <c>offset</c> e (<c>offset</c> + <c>count</c> - 1) sostituiti dai byte letti dall'origine corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-409">When this method returns, the buffer contains the specified byte array with the values between <c>offset</c> and (<c>offset</c> + <c>count</c> - 1) replaced by the bytes read from the current source.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="972af-410">Offset dei byte in base zero in <c>buffer</c> in corrispondenza del quale iniziare l'archiviazione dei dati letti dal flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-410">The zero-based byte offset in <c>buffer</c> at which to begin storing the data read from the current stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="972af-411">Numero massimo di byte da leggere dal flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-411">The maximum number of bytes to be read from the current stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="972af-412">Quando ne viene eseguito l'override in una classe derivata, legge una sequenza di byte dal flusso corrente e passa alla posizione successiva all'interno del flusso corrente in base al numero di byte letti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-412">When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="972af-413">Numero complessivo di byte letti nel buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-413">The total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="972af-414">È possibile che questo numero sia inferiore a quello dei byte richiesti se la quantità di byte disponibili è minore oppure che corrisponda a zero (0) se è stata raggiunta la fine del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-414">This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-415">Utilizzare il <xref:System.IO.Stream.CanRead%2A> proprietà per determinare se l'istanza corrente supporta la lettura.</span><span class="sxs-lookup"><span data-stu-id="972af-415">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span> <span data-ttu-id="972af-416">Utilizzare il <xref:System.IO.Stream.ReadAsync%2A> metodo per leggere in modo asincrono dal flusso corrente.</span><span class="sxs-lookup"><span data-stu-id="972af-416">Use the <xref:System.IO.Stream.ReadAsync%2A> method to read asynchronously from the current stream.</span></span>  
  
 <span data-ttu-id="972af-417">Le implementazioni di questo metodo leggono un massimo di `count` flusso di byte dall'oggetto corrente e archiviarli in `buffer` a partire da `offset`.</span><span class="sxs-lookup"><span data-stu-id="972af-417">Implementations of this method read a maximum of `count` bytes from the current stream and store them in `buffer` beginning at `offset`.</span></span> <span data-ttu-id="972af-418">La posizione corrente all'interno del flusso viene anticipata per il numero di byte letti. Tuttavia, se si verifica un'eccezione, la posizione corrente all'interno del flusso non subisce modifiche.</span><span class="sxs-lookup"><span data-stu-id="972af-418">The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.</span></span> <span data-ttu-id="972af-419">Le implementazioni restituiscono il numero di byte letti.</span><span class="sxs-lookup"><span data-stu-id="972af-419">Implementations return the number of bytes read.</span></span> <span data-ttu-id="972af-420">L'implementazione verrà bloccata finché non è possibile leggere almeno un byte di dati, nel caso in cui non sono disponibili dati.</span><span class="sxs-lookup"><span data-stu-id="972af-420">The implementation will block until at least one byte of data can be read, in the event that no data is available.</span></span> <span data-ttu-id="972af-421"><xref:System.IO.Stream.Read%2A> Restituisce 0 solo quando non sono presenti più dati nel flusso e non sono previsti (ad esempio un socket chiuso o la fine del file).</span><span class="sxs-lookup"><span data-stu-id="972af-421"><xref:System.IO.Stream.Read%2A> returns 0 only when there is no more data in the stream and no more is expected (such as a closed socket or end of file).</span></span> <span data-ttu-id="972af-422">Un'implementazione è gratuita restituire un numero di byte rispetto a quello richiesto, anche se non è stata raggiunta la fine del flusso.</span><span class="sxs-lookup"><span data-stu-id="972af-422">An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>  
  
 <span data-ttu-id="972af-423">Utilizzare <xref:System.IO.BinaryReader> per la lettura dei tipi di dati primitivi.</span><span class="sxs-lookup"><span data-stu-id="972af-423">Use <xref:System.IO.BinaryReader> for reading primitive data types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="972af-424">Nell'esempio seguente viene illustrato come utilizzare <xref:System.IO.Stream.Read%2A> per leggere un blocco di dati.</span><span class="sxs-lookup"><span data-stu-id="972af-424">The following example shows how to use <xref:System.IO.Stream.Read%2A> to read a block of data.</span></span>  
  
 [!code-cpp[Classic Stream.Read Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stream.Read Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stream.Read Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stream.Read Example/CS/source.cs#1)]
 [!code-vb[Classic Stream.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stream.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="972af-425">La somma di <paramref name="offset" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-425">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="972af-426">
            <paramref name="buffer" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-426">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="972af-427">
            <paramref name="offset" /> o <paramref name="count" /> è negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-427">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="972af-428">Si è verificato un errore di I/O.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-428">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="972af-429">Il flusso non supporta la lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-429">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="972af-430">Sono stati chiamati dei metodi dopo la chiusura del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-430">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="972af-431">Legge in modo asincrono una sequenza di byte dal flusso corrente e passa alla posizione successiva nel flusso in base al numero di byte letti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-431">Asynchronously reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsync (buffer As Byte(), offset As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="972af-432">Buffer in cui scrivere i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-432">The buffer to write the data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="972af-433">Offset dei byte in <c>buffer</c> da cui iniziare la scrittura dei dati dal flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-433">The byte offset in <c>buffer</c> at which to begin writing data from the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="972af-434">Numero massimo di byte da leggere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-434">The maximum number of bytes to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="972af-435">Legge in modo asincrono una sequenza di byte dal flusso corrente e passa alla posizione successiva nel flusso in base al numero di byte letti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-435">Asynchronously reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="972af-436">Attività che rappresenta l'operazione di lettura asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-436">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="972af-437">Il valore del parametro di <paramref name="TResult" /> contiene il numero totale di byte letti nel buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-437">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="972af-438">Il valore del risultato può essere minore del numero di byte richiesti se il numero di byte attualmente disponibili è minore di quelli richiesti o può essere pari a 0 (zero) se è stata raggiunta la fine del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-438">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-439">Il <xref:System.IO.Stream.ReadAsync%2A> metodo consente di eseguire operazioni dei / o elevato utilizzo di risorse senza bloccare il thread principale.</span><span class="sxs-lookup"><span data-stu-id="972af-439">The <xref:System.IO.Stream.ReadAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="972af-440">Questa considerazione sulle prestazioni è particolarmente importante in un'applicazione [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] in cui tramite un'operazione di flusso per cui è richiesto molto tempo è possibile bloccare il thread UI e far sembrare che l'applicazione non funzioni.</span><span class="sxs-lookup"><span data-stu-id="972af-440">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="972af-441">I metodi asincroni vengono utilizzati in combinazione con il `async` e `await` parole chiave in Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="972af-441">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="972af-442">Utilizzare il <xref:System.IO.Stream.CanRead%2A> proprietà per determinare se l'istanza corrente supporta la lettura.</span><span class="sxs-lookup"><span data-stu-id="972af-442">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="972af-443">Nell'esempio seguente viene illustrato come leggere da un file in modo asincrono.</span><span class="sxs-lookup"><span data-stu-id="972af-443">The following example shows how to read from a file asynchronously.</span></span> <span data-ttu-id="972af-444">Nell'esempio viene utilizzato il <xref:System.IO.FileStream> classe che deriva dalla <xref:System.IO.Stream> classe.</span><span class="sxs-lookup"><span data-stu-id="972af-444">The example uses the <xref:System.IO.FileStream> class, which derives from the <xref:System.IO.Stream> class.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#4](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example4.cs#4)]
 [!code-vb[Asynchronous_File_IO_async#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="972af-445">
            <paramref name="buffer" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-445">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="972af-446">
            <paramref name="offset" /> o <paramref name="count" /> è negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-446">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="972af-447">La somma di <paramref name="offset" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-447">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="972af-448">Il flusso non supporta la lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-448">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="972af-449">Il flusso è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-449">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="972af-450">Il flusso è attualmente usato da un'operazione di lettura precedente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-450">The stream is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="972af-451">Buffer in cui scrivere i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-451">The buffer to write the data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="972af-452">Offset dei byte in <c>buffer</c> da cui iniziare la scrittura dei dati dal flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-452">The byte offset in <c>buffer</c> at which to begin writing data from the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="972af-453">Numero massimo di byte da leggere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-453">The maximum number of bytes to read.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="972af-454">Token per il monitoraggio delle richieste di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-454">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="972af-455">Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-455">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="972af-456">Legge in modo asincrono una sequenza di byte dal flusso corrente e passa alla posizione successiva all'interno del flusso corrente in base al numero di byte letti e monitora le richieste di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-456">Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="972af-457">Attività che rappresenta l'operazione di lettura asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-457">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="972af-458">Il valore del parametro di <paramref name="TResult" /> contiene il numero totale di byte letti nel buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-458">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="972af-459">Il valore del risultato può essere minore del numero di byte richiesti se il numero di byte attualmente disponibili è minore di quelli richiesti o può essere pari a 0 (zero) se è stata raggiunta la fine del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-459">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-460">Il <xref:System.IO.Stream.ReadAsync%2A> metodo consente di eseguire operazioni dei / o elevato utilizzo di risorse senza bloccare il thread principale.</span><span class="sxs-lookup"><span data-stu-id="972af-460">The <xref:System.IO.Stream.ReadAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="972af-461">Questa considerazione sulle prestazioni è particolarmente importante in un'applicazione [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] in cui tramite un'operazione di flusso per cui è richiesto molto tempo è possibile bloccare il thread UI e far sembrare che l'applicazione non funzioni.</span><span class="sxs-lookup"><span data-stu-id="972af-461">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="972af-462">I metodi asincroni vengono utilizzati in combinazione con il `async` e `await` parole chiave in Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="972af-462">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="972af-463">Utilizzare il <xref:System.IO.Stream.CanRead%2A> proprietà per determinare se l'istanza corrente supporta la lettura.</span><span class="sxs-lookup"><span data-stu-id="972af-463">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="972af-464">Se l'operazione viene annullata prima del completamento, l'attività restituita contiene il <xref:System.Threading.Tasks.TaskStatus.Canceled> valore per il <xref:System.Threading.Tasks.Task.Status%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="972af-464">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="972af-465">Per un esempio, vedere il <xref:System.IO.Stream.ReadAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> rapporto di overload.</span><span class="sxs-lookup"><span data-stu-id="972af-465">For an example, see the <xref:System.IO.Stream.ReadAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="972af-466">
            <paramref name="buffer" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-466">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="972af-467">
            <paramref name="offset" /> o <paramref name="count" /> è negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-467">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="972af-468">La somma di <paramref name="offset" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-468">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="972af-469">Il flusso non supporta la lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-469">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="972af-470">Il flusso è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-470">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="972af-471">Il flusso è attualmente usato da un'operazione di lettura precedente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-471">The stream is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public virtual int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadByte();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="972af-472">Legge un byte dal flusso e sposta in avanti la posizione corrente all'interno del flusso di un byte o restituisce -1 se si trova alla fine del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-472">Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="972af-473">Cast di byte senza segno in un parametro <see langword="Int32" /> oppure -1 se si trova alla fine del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-473">The unsigned byte cast to an <see langword="Int32" />, or -1 if at the end of the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-474">Utilizzare il <xref:System.IO.Stream.CanRead%2A> proprietà per determinare se l'istanza corrente supporta la lettura.</span><span class="sxs-lookup"><span data-stu-id="972af-474">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="972af-475">Eventuali tentativi di modificare il flusso dopo la chiusura di flusso possono generare un <xref:System.ObjectDisposedException>.</span><span class="sxs-lookup"><span data-stu-id="972af-475">Attempts to manipulate the stream after the stream has been closed could throw an <xref:System.ObjectDisposedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="972af-476">Il flusso non supporta la lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-476">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="972af-477">Sono stati chiamati dei metodi dopo la chiusura del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-477">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="972af-478">L'implementazione predefinita su <see langword="Stream" /> crea una nuova matrice a byte singolo e quindi chiama <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="972af-478">The default implementation on <see langword="Stream" /> creates a new single-byte array and then calls <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />.</span>
            </span>
            <span data-ttu-id="972af-479">Mentre sono formalmente corretto, è poco efficiente.</span>
            <span class="sxs-lookup">
              <span data-stu-id="972af-479">While this is formally correct, it is inefficient.</span>
            </span>
            <span data-ttu-id="972af-480">Qualsiasi flusso con un buffer interno deve eseguire l'override di questo metodo e fornire una versione molto più efficiente che legge il buffer direttamente, evitando l'assegnazione della matrice aggiuntiva a ogni chiamata.</span>
            <span class="sxs-lookup">
              <span data-stu-id="972af-480">Any stream with an internal buffer should override this method and provide a much more efficient version that reads the buffer directly, avoiding the extra array allocation on every call.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public virtual int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="972af-481">Ottiene o imposta un valore, in millisecondi, che determina per quanto tempo il flusso tenterà la lettura prima del timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-481">Gets or sets a value, in miliseconds, that determines how long the stream will attempt to read before timing out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="972af-482">Valore in millisecondi che determina per quanto tempo il flusso tenterà la lettura prima del timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-482">A value, in miliseconds, that determines how long the stream will attempt to read before timing out.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="972af-483">Il metodo <see cref="P:System.IO.Stream.ReadTimeout" /> genera sempre un'eccezione <see cref="T:System.InvalidOperationException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-483">The <see cref="P:System.IO.Stream.ReadTimeout" /> method always throws an <see cref="T:System.InvalidOperationException" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="972af-484">Il <see cref="P:System.IO.Stream.ReadTimeout" /> proprietà deve essere sostituita per fornire il comportamento appropriato per il flusso.</span>
            <span class="sxs-lookup">
              <span data-stu-id="972af-484">The <see cref="P:System.IO.Stream.ReadTimeout" /> property should be overridden to provide the appropriate behavior for the stream.</span>
            </span>
            <span data-ttu-id="972af-485">Se il flusso non supporta il timeout, questa proprietà deve generare un <see cref="T:System.InvalidOperationException" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="972af-485">If the stream does not support timing out, this property should raise an <see cref="T:System.InvalidOperationException" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public abstract long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="972af-486">Offset di byte relativo al parametro <c>origine</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-486">A byte offset relative to the <c>origin</c> parameter.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="972af-487">Valore di tipo <see cref="T:System.IO.SeekOrigin" /> che indica il punto di riferimento usato per ottenere la nuova posizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-487">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="972af-488">Quando ne viene eseguito l'override in una classe derivata, imposta la posizione all'interno del flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-488">When overridden in a derived class, sets the position within the current stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="972af-489">Nuova posizione all'interno del flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-489">The new position within the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-490">Utilizzare il <xref:System.IO.Stream.CanSeek%2A> proprietà per determinare se l'istanza corrente supporta la ricerca.</span><span class="sxs-lookup"><span data-stu-id="972af-490">Use the <xref:System.IO.Stream.CanSeek%2A> property to determine whether the current instance supports seeking.</span></span>  
  
 <span data-ttu-id="972af-491">Se `offset` è negativo, la nuova posizione deve precedere quella specificata da `origin` per il numero di byte specificato da `offset`.</span><span class="sxs-lookup"><span data-stu-id="972af-491">If `offset` is negative, the new position is required to precede the position specified by `origin` by the number of bytes specified by `offset`.</span></span> <span data-ttu-id="972af-492">Se `offset` è zero (0), la nuova posizione è necessaria per la posizione specificata da `origin`.</span><span class="sxs-lookup"><span data-stu-id="972af-492">If `offset` is zero (0), the new position is required to be the position specified by `origin`.</span></span> <span data-ttu-id="972af-493">Se `offset` è positivo, la nuova posizione è necessaria seguire la posizione specificata da `origin` per il numero di byte specificato da `offset`.</span><span class="sxs-lookup"><span data-stu-id="972af-493">If `offset` is positive, the new position is required to follow the position specified by `origin` by the number of bytes specified by `offset`.</span></span>  
  
 <span data-ttu-id="972af-494">Le classi derivate da `Stream` che supportano la ricerca deve eseguire l'override del metodo per fornire la funzionalità descritta in precedenza.</span><span class="sxs-lookup"><span data-stu-id="972af-494">Classes derived from `Stream` that support seeking must override this method to provide the functionality described above.</span></span>  
  
 <span data-ttu-id="972af-495">La ricerca in qualsiasi posizione oltre la lunghezza del flusso è supportata.</span><span class="sxs-lookup"><span data-stu-id="972af-495">Seeking to any location beyond the length of the stream is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="972af-496">Si è verificato un errore di I/O.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-496">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="972af-497">Il flusso non supporta la ricerca, come se il flusso fosse stato costruito da un pipe o da un output di console.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-497">The stream does not support seeking, such as if the stream is constructed from a pipe or console output.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="972af-498">Sono stati chiamati dei metodi dopo la chiusura del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-498">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public abstract void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetLength(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="972af-499">Lunghezza desiderata del flusso corrente in byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-499">The desired length of the current stream in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="972af-500">Quando ne viene eseguito l'override in una classe derivata, imposta la lunghezza del flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-500">When overridden in a derived class, sets the length of the current stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-501">Se il valore specificato è minore della lunghezza corrente del flusso, il flusso viene troncato.</span><span class="sxs-lookup"><span data-stu-id="972af-501">If the specified value is less than the current length of the stream, the stream is truncated.</span></span> <span data-ttu-id="972af-502">Se il valore specificato è maggiore della lunghezza corrente del flusso, il flusso viene esteso.</span><span class="sxs-lookup"><span data-stu-id="972af-502">If the specified value is larger than the current length of the stream, the stream is expanded.</span></span> <span data-ttu-id="972af-503">Se il flusso è espanso, il contenuto del flusso tra il vecchio e la nuova lunghezza non definito.</span><span class="sxs-lookup"><span data-stu-id="972af-503">If the stream is expanded, the contents of the stream between the old and the new length are not defined.</span></span>  
  
 <span data-ttu-id="972af-504">Un flusso deve supportare sia la ricerca per la scrittura `SetLength` a funzionare.</span><span class="sxs-lookup"><span data-stu-id="972af-504">A stream must support both writing and seeking for `SetLength` to work.</span></span>  
  
 <span data-ttu-id="972af-505">Utilizzare il <xref:System.IO.Stream.CanWrite%2A> proprietà per determinare se l'istanza corrente supporta la scrittura e <xref:System.IO.Stream.CanSeek%2A> proprietà per determinare se la ricerca è supportata.</span><span class="sxs-lookup"><span data-stu-id="972af-505">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing, and the <xref:System.IO.Stream.CanSeek%2A> property to determine whether seeking is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="972af-506">Si è verificato un errore di I/O.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-506">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="972af-507">Il flusso non supporta la scrittura e la ricerca, come se il flusso fosse stato costruito da un pipe o da un output di console.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-507">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="972af-508">Sono stati chiamati dei metodi dopo la chiusura del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-508">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.IO.Stream Synchronized (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream Synchronized(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Synchronized(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ Synchronized(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="972af-509">Oggetto <see cref="T:System.IO.Stream" /> da sincronizzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-509">The <see cref="T:System.IO.Stream" /> object to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="972af-510">Crea un wrapper thread-safe (sincronizzato) per l'oggetto <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-510">Creates a thread-safe (synchronized) wrapper around the specified <see cref="T:System.IO.Stream" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="972af-511">Oggetto <see cref="T:System.IO.Stream" /> thread-safe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-511">A thread-safe <see cref="T:System.IO.Stream" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-512">Questo metodo restituisce una classe che esegue il wrapping specificato <xref:System.IO.Stream> dell'oggetto e ne limita l'accesso da più thread.</span><span class="sxs-lookup"><span data-stu-id="972af-512">This method returns a class that wraps the specified <xref:System.IO.Stream> object and restricts access to it from multiple threads.</span></span> <span data-ttu-id="972af-513">L'accesso a tutti i <xref:System.IO.Stream> oggetto è thread-safe.</span><span class="sxs-lookup"><span data-stu-id="972af-513">All access to the <xref:System.IO.Stream> object will be thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="972af-514">
            <paramref name="stream" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-514">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="972af-515">Matrice di byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-515">An array of bytes.</span>
          </span>
          <span data-ttu-id="972af-516">Questo metodo copia i byte di <c>count</c> da <c>buffer</c> nel flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-516">This method copies <c>count</c> bytes from <c>buffer</c> to the current stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="972af-517">Offset di byte in base zero in <c>buffer</c> da cui iniziare la copia dei byte nel flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-517">The zero-based byte offset in <c>buffer</c> at which to begin copying bytes to the current stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="972af-518">Numero di byte da scrivere nel flusso corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-518">The number of bytes to be written to the current stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="972af-519">Quando ne viene eseguito l'override in una classe derivata, scrive una sequenza di byte nel flusso corrente e passa alla posizione successiva all'interno del flusso corrente in base al numero di byte scritti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-519">When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-520">Utilizzare il <xref:System.IO.Stream.CanWrite%2A> proprietà per determinare se l'istanza corrente supporta la scrittura.</span><span class="sxs-lookup"><span data-stu-id="972af-520">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span> <span data-ttu-id="972af-521">Utilizzare il <xref:System.IO.Stream.WriteAsync%2A> metodo per scrivere nel flusso corrente in modo asincrono.</span><span class="sxs-lookup"><span data-stu-id="972af-521">Use the <xref:System.IO.Stream.WriteAsync%2A> method to write asynchronously to the current stream.</span></span>  
  
 <span data-ttu-id="972af-522">Se l'operazione di scrittura ha esito positivo, fa avanzare la posizione all'interno del flusso del numero di byte scritti.</span><span class="sxs-lookup"><span data-stu-id="972af-522">If the write operation is successful, the position within the stream advances by the number of bytes written.</span></span> <span data-ttu-id="972af-523">Se si verifica un'eccezione, la posizione all'interno del flusso rimane invariata.</span><span class="sxs-lookup"><span data-stu-id="972af-523">If an exception occurs, the position within the stream remains unchanged.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="972af-524">La somma di <paramref name="offset" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-524">The sum of <paramref name="offset" /> and <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="972af-525">
            <paramref name="buffer" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-525">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="972af-526">
            <paramref name="offset" /> o <paramref name="count" /> è negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-526">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="972af-527">Si è verificato un errore di I/O, ad esempio non è possibile trovare il file specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-527">An I/O error occured, such as the specified file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="972af-528">Il flusso non supporta la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-528">The stream does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="972af-529">
            <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> è stato chiamato dopo la chiusura del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-529">
              <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> was called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="972af-530">Scrive in modo asincrono una sequenza di byte nel flusso corrente e passa alla posizione successiva nel flusso in base al numero di byte scritti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-530">Asynchronously writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask WriteAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (buffer As Byte(), offset As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="972af-531">Buffer da cui scrivere i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-531">The buffer to write data from.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="972af-532">Offset dei byte in base zero in <c>buffer</c> da cui iniziare la copia dei byte nel flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-532">The zero-based byte offset in <c>buffer</c> from which to begin copying bytes to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="972af-533">Numero massimo di byte da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-533">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="972af-534">Scrive in modo asincrono una sequenza di byte nel flusso corrente e passa alla posizione successiva nel flusso in base al numero di byte scritti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-534">Asynchronously writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="972af-535">Attività che rappresenta l'operazione di scrittura asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-535">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-536">Il <xref:System.IO.Stream.WriteAsync%2A> metodo consente di eseguire operazioni dei / o elevato utilizzo di risorse senza bloccare il thread principale.</span><span class="sxs-lookup"><span data-stu-id="972af-536">The <xref:System.IO.Stream.WriteAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="972af-537">Questa considerazione sulle prestazioni è particolarmente importante in un'applicazione [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] in cui tramite un'operazione di flusso per cui è richiesto molto tempo è possibile bloccare il thread UI e far sembrare che l'applicazione non funzioni.</span><span class="sxs-lookup"><span data-stu-id="972af-537">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="972af-538">I metodi asincroni vengono utilizzati in combinazione con il `async` e `await` parole chiave in Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="972af-538">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="972af-539">Utilizzare il <xref:System.IO.Stream.CanWrite%2A> proprietà per determinare se l'istanza corrente supporta la scrittura.</span><span class="sxs-lookup"><span data-stu-id="972af-539">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="972af-540">Nell'esempio seguente viene illustrato come scrivere in modo asincrono in un file.</span><span class="sxs-lookup"><span data-stu-id="972af-540">The following example shows how to write asynchronously to a file.</span></span> <span data-ttu-id="972af-541">Nell'esempio viene utilizzato il <xref:System.IO.FileStream> classe che deriva dalla <xref:System.IO.Stream> classe.</span><span class="sxs-lookup"><span data-stu-id="972af-541">The example uses the <xref:System.IO.FileStream> class, which derives from the <xref:System.IO.Stream> class.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#3](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example3.cs#3)]
 [!code-vb[Asynchronous_File_IO_async#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="972af-542">
            <paramref name="buffer" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-542">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="972af-543">
            <paramref name="offset" /> o <paramref name="count" /> è negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-543">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="972af-544">La somma di <paramref name="offset" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-544">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="972af-545">Il flusso non supporta la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-545">The stream does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="972af-546">Il flusso è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-546">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="972af-547">Il flusso è attualmente usato da un'operazione di scrittura precedente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-547">The stream is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="972af-548">Buffer da cui scrivere i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-548">The buffer to write data from.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="972af-549">Offset dei byte in base zero in <c>buffer</c> da cui iniziare la copia dei byte nel flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-549">The zero-based byte offset in <c>buffer</c> from which to begin copying bytes to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="972af-550">Numero massimo di byte da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-550">The maximum number of bytes to write.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="972af-551">Token per il monitoraggio delle richieste di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-551">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="972af-552">Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-552">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="972af-553">Scrive in modo asincrono una sequenza di byte nel flusso corrente e passa alla posizione successiva all'interno del flusso corrente in base al numero di byte scritti e monitora le richieste di annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-553">Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="972af-554">Attività che rappresenta l'operazione di scrittura asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-554">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-555">Il <xref:System.IO.Stream.WriteAsync%2A> metodo consente di eseguire operazioni dei / o elevato utilizzo di risorse senza bloccare il thread principale.</span><span class="sxs-lookup"><span data-stu-id="972af-555">The <xref:System.IO.Stream.WriteAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="972af-556">Questa considerazione sulle prestazioni è particolarmente importante in un'applicazione [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] in cui tramite un'operazione di flusso per cui è richiesto molto tempo è possibile bloccare il thread UI e far sembrare che l'applicazione non funzioni.</span><span class="sxs-lookup"><span data-stu-id="972af-556">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="972af-557">I metodi asincroni vengono utilizzati in combinazione con il `async` e `await` parole chiave in Visual Basic e c#.</span><span class="sxs-lookup"><span data-stu-id="972af-557">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="972af-558">Utilizzare il <xref:System.IO.Stream.CanWrite%2A> proprietà per determinare se l'istanza corrente supporta la scrittura.</span><span class="sxs-lookup"><span data-stu-id="972af-558">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 <span data-ttu-id="972af-559">Se l'operazione viene annullata prima del completamento, l'attività restituita contiene il <xref:System.Threading.Tasks.TaskStatus.Canceled> valore per il <xref:System.Threading.Tasks.Task.Status%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="972af-559">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="972af-560">Per un esempio, vedere il <xref:System.IO.Stream.WriteAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> rapporto di overload.</span><span class="sxs-lookup"><span data-stu-id="972af-560">For an example, see the <xref:System.IO.Stream.WriteAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="972af-561">
            <paramref name="buffer" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-561">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="972af-562">
            <paramref name="offset" /> o <paramref name="count" /> è negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-562">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="972af-563">La somma di <paramref name="offset" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-563">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="972af-564">Il flusso non supporta la scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-564">The stream does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="972af-565">Il flusso è stato eliminato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-565">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="972af-566">Il flusso è attualmente usato da un'operazione di scrittura precedente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-566">The stream is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public virtual void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteByte(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="972af-567">Byte da scrivere nel flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-567">The byte to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="972af-568">Scrive un byte nella posizione corrente del flusso e sposta in avanti di un byte la posizione del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-568">Writes a byte to the current position in the stream and advances the position within the stream by one byte.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972af-569">Utilizzare il <xref:System.IO.Stream.CanWrite%2A> proprietà per determinare se l'istanza corrente supporta la scrittura.</span><span class="sxs-lookup"><span data-stu-id="972af-569">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="972af-570">Si è verificato un errore di I/O.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-570">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="972af-571">Il flusso non supporta la scrittura o è già chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-571">The stream does not support writing, or the stream is already closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="972af-572">Sono stati chiamati dei metodi dopo la chiusura del flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-572">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="972af-573">L'implementazione predefinita su <see langword="Stream" /> crea una nuova matrice a byte singolo e quindi chiama <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="972af-573">The default implementation on <see langword="Stream" /> creates a new single-byte array and then calls <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span>
            </span>
            <span data-ttu-id="972af-574">Mentre sono formalmente corretto, è poco efficiente.</span>
            <span class="sxs-lookup">
              <span data-stu-id="972af-574">While this is formally correct, it is inefficient.</span>
            </span>
            <span data-ttu-id="972af-575">Qualsiasi flusso con un buffer interno deve eseguire l'override di questo metodo e fornire una versione molto più efficiente che consente di scrivere nel buffer direttamente, evitando l'assegnazione della matrice aggiuntiva a ogni chiamata.</span>
            <span class="sxs-lookup">
              <span data-stu-id="972af-575">Any stream with an internal buffer should override this method and provide a much more efficient version that writes to the buffer directly, avoiding the extra array allocation on every call.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public virtual int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="972af-576">Ottiene o imposta un valore, in millisecondi, che determina per quanto tempo il flusso tenterà la scrittura prima del timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-576">Gets or sets a value, in miliseconds, that determines how long the stream will attempt to write before timing out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="972af-577">Valore in millisecondi che determina per quanto tempo il flusso tenterà la scrittura prima del timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-577">A value, in miliseconds, that determines how long the stream will attempt to write before timing out.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="972af-578">Il metodo <see cref="P:System.IO.Stream.WriteTimeout" /> genera sempre un'eccezione <see cref="T:System.InvalidOperationException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="972af-578">The <see cref="P:System.IO.Stream.WriteTimeout" /> method always throws an <see cref="T:System.InvalidOperationException" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="972af-579">Il <see cref="P:System.IO.Stream.WriteTimeout" /> proprietà deve essere sostituita per fornire il comportamento appropriato per il flusso.</span>
            <span class="sxs-lookup">
              <span data-stu-id="972af-579">The <see cref="P:System.IO.Stream.WriteTimeout" /> property should be overridden to provide the appropriate behavior for the stream.</span>
            </span>
            <span data-ttu-id="972af-580">Se il flusso non supporta il timeout, questa proprietà deve generare un <see cref="T:System.InvalidOperationException" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="972af-580">If the stream does not support timing out, this property should raise an <see cref="T:System.InvalidOperationException" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>