<Type Name="FileSystemInfo" FullName="System.IO.FileSystemInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6e983351fb3a33574ad750cdcb0c907561412719" />
    <Meta Name="ms.sourcegitcommit" Value="29c771f79cf4eac4f49e5fae5f1aa8b457acf146" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/21/2018" />
    <Meta Name="ms.locfileid" Value="36298830" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class FileSystemInfo : MarshalByRefObject, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit FileSystemInfo extends System.MarshalByRefObject implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.IO.FileSystemInfo" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FileSystemInfo&#xA;Inherits MarshalByRefObject&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemInfo abstract : MarshalByRefObject, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce la classe base per gli oggetti <see cref="T:System.IO.FileInfo" /> e <see cref="T:System.IO.DirectoryInfo" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.IO.FileSystemInfo> classe contiene metodi comuni per la manipolazione di file e directory. Oggetto <xref:System.IO.FileSystemInfo> oggetto può rappresentare un file o una directory, pertanto essere utilizzato come base per <xref:System.IO.FileInfo> o <xref:System.IO.DirectoryInfo> oggetti. Utilizzare questa classe di base durante l'analisi di una grande quantità di file e directory.  
  
 Una classe derivata può ereditare da <xref:System.IO.FileSystemInfo> solo se la classe derivata dispone dell'autorizzazione AllAccess proveniente dal <xref:System.Security.Permissions.FileIOPermissionAccess> enumerazione.  
  
 Nei membri che accettano un percorso, il percorso può fare riferimento a un file o solo una directory. Il percorso specificato può anche fare riferimento a un percorso relativo o un percorso UNC Universal Naming Convention () per un nome di server e la condivisione. Ad esempio, le condizioni seguenti sono percorsi accettabili:  
  
-   "c:\\\MyDir\\\MyFile.txt" in c# o "c:\MyDir\MyFile.txt" in Visual Basic.  
  
-   "c:\\\MyDir" in c# o "c:\MyDir" in Visual Basic.  
  
-   "MyDir\\\MySubdir" in c# o "MyDir\MySubDir" in Visual Basic.  
  
-   "\\\\\\\MyServer\\\MyShare" in c#, o "\\\MyServer\MyShare" in Visual Basic.  
  
 Per un elenco delle attività dei / o comuni, vedere [comuni attività dei / o](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come eseguire un ciclo in tutti i file e directory, l'esecuzione di query alcune informazioni su ogni voce.  
  
 [!code-cpp[FileSystemInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/FileSystemInfo/cpp/program.cpp#1)]
 [!code-csharp[FileSystemInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/FileSystemInfo/CS/program.cs#1)]
 [!code-vb[FileSystemInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FileSystemInfo/VB/FileSystemInfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.FileIOPermission">l'autorizzazione per ereditare da questa classe. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> azione di sicurezza: richiesta di ereditarietà</permission>
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.DriveInfo" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.FileSystemInfo" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FileSystemInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FileSystemInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.FileSystemInfo" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un elenco delle attività dei / o comuni, vedere [comuni attività dei / o](~/docs/standard/io/common-i-o-tasks.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FileSystemInfo (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FileSystemInfo(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene i dati oggetto serializzati relativi all'eccezione generata.</param>
        <param name="context">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente le informazioni contestuali sull'origine o sulla destinazione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.FileSystemInfo" /> con dati serializzati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un elenco delle attività dei / o comuni, vedere [comuni attività dei / o](~/docs/standard/io/common-i-o-tasks.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> specificato è null.</exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.IO.FileAttributes Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Property Attributes As FileAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAttributes Attributes { System::IO::FileAttributes get(); void set(System::IO::FileAttributes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta gli attributi per il file o la directory corrente.</summary>
        <value>
          <see cref="T:System.IO.FileAttributes" /> della classe <see cref="T:System.IO.FileSystemInfo" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore della <xref:System.IO.FileSystemInfo.Attributes%2A> proprietà è già memorizzato nella cache se l'istanza corrente del <xref:System.IO.FileSystemInfo> oggetto è stato restituito da una delle seguenti <xref:System.IO.DirectoryInfo> metodi:  
  
-   <xref:System.IO.DirectoryInfo.GetDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A?displayProperty=nameWithType>  
  
 Il valore può essere memorizzato nella cache quando il valore stesso o altra <xref:System.IO.FileSystemInfo> accesso alle proprietà. Per ottenere il valore più recente, chiamare il <xref:System.IO.FileSystemInfo.Refresh%2A> metodo.

 Se il percorso non esiste al momento dell'ultimo stato memorizzato nella cache, il valore restituito è `(FileAttributes)(-1)`. <xref:System.IO.FileNotFoundException> o <xref:System.IO.DirectoryNotFoundException> può essere generata solo quando l'impostazione del valore.
  
 Il valore di questa proprietà è una combinazione dell'archivio, compressi, directory, nascosta, offline, di sola lettura, sistema e flag di attributo di file temporaneo.  
  
 Quando si imposta questo valore, utilizzare l'operatore OR bit per bit (`|` in c# o `Or` in Visual Basic) per applicare più di un valore. Per mantenere i valori esistenti nel <xref:System.IO.FileSystemInfo.Attributes%2A> proprietà, includere il valore del <xref:System.IO.FileSystemInfo.Attributes%2A> nella propria assegnazione di proprietà. Ad esempio:  
  
 `exampleFile.Attributes = exampleFile.Attributes | FileAttributes.ReadOnly;`  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato il <xref:System.IO.FileSystemInfo.Attributes%2A> proprietà. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.IO.FileSystemInfo> classe.  
  
 [!code-cpp[FileSystemInfo#2](~/samples/snippets/cpp/VS_Snippets_CLR/FileSystemInfo/cpp/program.cpp#2)]
 [!code-csharp[FileSystemInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/FileSystemInfo/CS/program.cs#2)]
 [!code-vb[FileSystemInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/FileSystemInfo/VB/FileSystemInfo.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">Il file specificato non esiste. Viene generato solo quando si imposta il valore della proprietà.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido. Ad esempio si trova in un'unità non mappata. Viene generato solo quando si imposta il valore della proprietà.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <exception cref="T:System.ArgumentException">Il chiamante tenta di impostare un attributo di file non valido.  -oppure-  Tentativi dell'utente di impostare un valore di attributo senza che sia disponibile l'autorizzazione di scrittura.</exception>
        <exception cref="T:System.IO.IOException">
          <see cref="M:System.IO.FileSystemInfo.Refresh" /> non è in grado di inizializzare i dati.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per la scrittura di file e directory. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="CreationTime">
      <MemberSignature Language="C#" Value="public DateTime CreationTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CreationTime" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.CreationTime" />
      <MemberSignature Language="VB.NET" Value="Public Property CreationTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CreationTime { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'ora di creazione del file o della directory corrente.</summary>
        <value>Data e ora di creazione dell'oggetto <see cref="T:System.IO.FileSystemInfo" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!NOTE]
>  Questo metodo può restituire un valore inaccurato perché utilizza le funzioni native i cui valori non possono essere aggiornati in modo continuo dal sistema operativo.  
    
 Il valore della <xref:System.IO.FileSystemInfo.CreationTime%2A> proprietà è già memorizzato nella cache se l'istanza corrente del <xref:System.IO.FileSystemInfo> oggetto è stato restituito da una delle seguenti <xref:System.IO.DirectoryInfo> metodi:  
  
-   <xref:System.IO.DirectoryInfo.GetDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A?displayProperty=nameWithType>  
  
 Per ottenere il valore più recente, chiamare il <xref:System.IO.FileSystemInfo.Refresh%2A> metodo.  
  
 Se il file descritto nel <xref:System.IO.FileSystemInfo> oggetto non esiste, questa proprietà restituisce dalla mezzanotte 24.00, del 1 ° gennaio 1601 D.C. (C.E.) Coordinated Universal Time (UTC), con l'ora locale.  

Su piattaforme Unix che non supportano la creazione o l'ora di nascita, questa proprietà restituisce il precedente l'ora dell'ultima modifica di stato e l'ora dell'ultima modifica del. Su altre piattaforme, restituirà dalla mezzanotte 24.00, del 1 ° gennaio 1601 D.C. (C.E.) Coordinated Universal Time (UTC), con l'ora locale.

 Le unità NTFS possono memorizzare nella cache di file metainformazioni, ad esempio ora di creazione di file, per un breve periodo di tempo. Questo processo è noto come tunneling del file. Di conseguenza, potrebbe essere necessario impostare in modo esplicito l'ora di creazione di un file se si intende sovrascrivere o sostituire un file esistente.  
  
## Examples  
 Nell'esempio seguente viene illustrato il <xref:System.IO.FileSystemInfo.CreationTime%2A> proprietà. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.IO.FileSystemInfo> classe.  
  
 [!code-cpp[FileSystemInfo#2](~/samples/snippets/cpp/VS_Snippets_CLR/FileSystemInfo/cpp/program.cpp#2)]
 [!code-csharp[FileSystemInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/FileSystemInfo/CS/program.cs#2)]
 [!code-vb[FileSystemInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/FileSystemInfo/VB/FileSystemInfo.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <see cref="M:System.IO.FileSystemInfo.Refresh" /> non è in grado di inizializzare i dati.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio, si trova in un'unità non mappata.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Il sistema operativo corrente non è Windows NT o versioni successive.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Il chiamante tenta di impostare un'ora di creazione non valida.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per impostare l'ora di creazione. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="CreationTimeUtc">
      <MemberSignature Language="C#" Value="public DateTime CreationTimeUtc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CreationTimeUtc" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.CreationTimeUtc" />
      <MemberSignature Language="VB.NET" Value="Public Property CreationTimeUtc As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CreationTimeUtc { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'ora di creazione, nell'ora UTC (Coordinated Universal Time) del file o della directory corrente.</summary>
        <value>Data e ora di creazione in formato UTC dell'oggetto <see cref="T:System.IO.FileSystemInfo" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!NOTE]
>  Questo metodo può restituire un valore inaccurato perché utilizza le funzioni native i cui valori non possono essere aggiornati in modo continuo dal sistema operativo.  
  
 Il valore della <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> proprietà è già memorizzato nella cache se l'istanza corrente del <xref:System.IO.FileSystemInfo> oggetto è stato restituito da una delle seguenti <xref:System.IO.DirectoryInfo> metodi:  
  
-   <xref:System.IO.DirectoryInfo.GetDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A?displayProperty=nameWithType>  
  
 Per ottenere il valore più recente, chiamare il <xref:System.IO.FileSystemInfo.Refresh%2A> metodo.  
  
 Se il file descritto nel <xref:System.IO.FileSystemInfo> oggetto non esiste, questa proprietà restituisce dalla mezzanotte 24.00, del 1 ° gennaio 1601 D.C. (C.E.) Coordinated Universal Time (UTC).  

Su piattaforme Unix che non supportano la creazione o l'ora di nascita, questa proprietà restituisce il precedente l'ora dell'ultima modifica di stato e l'ora dell'ultima modifica del. Su altre piattaforme, restituirà dalla mezzanotte 24.00, del 1 ° gennaio 1601 D.C. (C.E.) Coordinated Universal Time (UTC), con l'ora locale.

 Le unità NTFS possono memorizzare nella cache di file metainformazioni, ad esempio ora di creazione di file, per un breve periodo di tempo. Questo processo è noto come tunneling del file. Di conseguenza, potrebbe essere necessario impostare in modo esplicito l'ora di creazione di un file se si intende sovrascrivere o sostituire un file esistente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <see cref="M:System.IO.FileSystemInfo.Refresh" /> non è in grado di inizializzare i dati.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio, si trova in un'unità non mappata.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Il sistema operativo corrente non è Windows NT o versioni successive.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Il chiamante tenta di impostare un'ora di accesso non valida.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per impostare l'ora di creazione. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public abstract void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Elimina un file o una directory.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso specificato non è valido, ad esempio, si trova in un'unità non mappata.</exception>
        <exception cref="T:System.IO.IOException">Handle aperto sulla directory o sul file e il sistema operativo è Windows XP o versione precedente. Questo handle aperto può derivare dall'enumerazione di directory e file. Per altre informazioni, vedere [Procedura: enumerare directory e file](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public abstract bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool Exists { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il file o la directory esiste.</summary>
        <value>
          <see langword="true" /> se il file o la directory esiste; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un elenco delle attività dei / o comuni, vedere [comuni attività dei / o](~/docs/standard/io/common-i-o-tasks.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Extension">
      <MemberSignature Language="C#" Value="public string Extension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Extension" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.Extension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Extension { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la stringa che rappresenta l'estensione del file.</summary>
        <value>Stringa contenente l'estensione dell'oggetto <see cref="T:System.IO.FileSystemInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `Extension` proprietà restituisce il <xref:System.IO.FileSystemInfo> estensione, incluso il punto (.). Ad esempio, per un file c:\NewFile.txt, questa proprietà restituisce "txt".  
  
 Nella tabella seguente sono elencati esempi di altre attività dei / o tipiche o correlate.  
  
|Per eseguire questa operazione...|Vedere l'esempio riportato in questo argomento...|  
|-------------------|--------------------------------------|  
|Creare un file di testo.|[Procedura: Scrivere un testo in un file](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|Scrivere in un file di testo.|[Procedura: Scrivere un testo in un file](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|Leggere da un file di testo.|[Procedura: Leggere testo da un file](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|Recuperare il percorso completo di un file.|<xref:System.IO.Path.GetFullPath%2A>|  
|Recuperare solo il nome del file un percorso.|<xref:System.IO.Path.GetFileNameWithoutExtension%2A>|  
|Recuperare solo il nome della directory da un percorso.|<xref:System.IO.Path.GetDirectoryName%2A>|  
|Modificare l'estensione di un file.|<xref:System.IO.Path.ChangeExtension%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public virtual string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il percorso completo del file o della directory.</summary>
        <value>Stringa contenente il percorso completo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ad esempio, per un file c:\NewFile.txt, questa proprietà restituisce "c:\NewFile.txt".  
  
 Per un elenco delle attività dei / o comuni, vedere [comuni attività dei / o](~/docs/standard/io/common-i-o-tasks.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato il <xref:System.IO.FileSystemInfo.FullName%2A> proprietà. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.IO.FileSystemInfo> classe.  
  
 [!code-cpp[FileSystemInfo#2](~/samples/snippets/cpp/VS_Snippets_CLR/FileSystemInfo/cpp/program.cpp#2)]
 [!code-csharp[FileSystemInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/FileSystemInfo/CS/program.cs#2)]
 [!code-vb[FileSystemInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/FileSystemInfo/VB/FileSystemInfo.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.PathTooLongException">Il percorso completo e il nome file superano la lunghezza massima definita dal sistema.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per accedere al percorso. Enumerazione associata: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="protected string FullPath;" />
      <MemberSignature Language="ILAsm" Value=".field family string FullPath" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileSystemInfo.FullPath" />
      <MemberSignature Language="VB.NET" Value="Protected FullPath As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ FullPath;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Rappresenta il percorso completo del file o della directory.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.PathTooLongException">Il percorso completo supera la lunghezza massima definita dal sistema.</exception>
        <block subset="none" type="overrides">
          <para>Le classi derivate da <see cref="T:System.IO.FileSystemInfo" /> possibile utilizzare il <see langword="FullPath" /> campo per determinare il percorso completo dell'oggetto modificato.  Per un elenco delle attività dei / o comuni, vedere [Tasks](~/docs/standard/io/common-i-o-tasks.md) i/o comuni.</para>
        </block>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene i dati oggetto serializzati relativi all'eccezione generata.</param>
        <param name="context">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente le informazioni contestuali sull'origine o sulla destinazione.</param>
        <summary>Imposta l'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con il nome del file e le informazioni aggiuntive sull'eccezione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un elenco delle attività dei / o comuni, vedere [comuni attività dei / o](~/docs/standard/io/common-i-o-tasks.md).  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per l'autorizzazione accedere alle informazioni sul percorso descritto dall'istanza corrente. Enumerazione associata: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> azione di sicurezza: richiesta</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per l'autorizzazione a collegarsi a questa classe. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> azione di sicurezza: richiesta di collegamento</permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">richiede l'attendibilità totale per il chiamante immediato. Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="LastAccessTime">
      <MemberSignature Language="C#" Value="public DateTime LastAccessTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastAccessTime" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.LastAccessTime" />
      <MemberSignature Language="VB.NET" Value="Public Property LastAccessTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastAccessTime { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'ora in cui è avvenuto l'ultimo accesso al file o alla directory corrente.</summary>
        <value>Ora in cui è avvenuto l'ultimo accesso al file o alla directory corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
> [!NOTE]
>  Questo metodo può restituire un valore inaccurato perché utilizza le funzioni native i cui valori non possono essere aggiornati in modo continuo dal sistema operativo.  
 
 Se il file descritto nel <xref:System.IO.FileSystemInfo> oggetto non esiste, questa proprietà restituisce dalla mezzanotte 24.00, del 1 ° gennaio 1601 D.C. (C.E.) Coordinated Universal Time (UTC), con l'ora locale.  
  
 Il valore della <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A> proprietà è già memorizzato nella cache se l'istanza corrente del <xref:System.IO.FileSystemInfo> oggetto è stato restituito da una delle seguenti <xref:System.IO.DirectoryInfo> metodi:  
  
-   <xref:System.IO.DirectoryInfo.GetDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A?displayProperty=nameWithType>  
  
 Per ottenere il valore più recente, chiamare il <xref:System.IO.FileSystemInfo.Refresh%2A> metodo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'aggiornamento della <xref:System.IO.FileSystemInfo.LastAccessTime%2A> proprietà tramite un'operazione "contatto". In questo esempio, il file è "toccato", l'aggiornamento di <xref:System.IO.FileSystemInfo.CreationTime%2A>, <xref:System.IO.FileSystemInfo.LastAccessTime%2A> e <xref:System.IO.FileSystemInfo.LastWriteTime%2A> proprietà per la data e ora correnti.  
  
 [!code-csharp[System.IO.FileSystemInfo_touch#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileSystemInfo_touch/cs/touch.cs#00)]
 [!code-vb[System.IO.FileSystemInfo_touch#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileSystemInfo_touch/vb/touch.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <see cref="M:System.IO.FileSystemInfo.Refresh" /> non è in grado di inizializzare i dati.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Il sistema operativo corrente non è Windows NT o versioni successive.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Il chiamante tenta di impostare un'ora di accesso non valida</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per impostare l'ora dell'ultimo accesso. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="LastAccessTimeUtc">
      <MemberSignature Language="C#" Value="public DateTime LastAccessTimeUtc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastAccessTimeUtc" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.LastAccessTimeUtc" />
      <MemberSignature Language="VB.NET" Value="Public Property LastAccessTimeUtc As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastAccessTimeUtc { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'ora, nell'ora UTC (Universal Coordinated Time), dell'ultimo accesso al file o alla directory corrente.</summary>
        <value>Ora UTC in cui è avvenuto l'ultimo accesso al file o alla directory corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
> [!NOTE]
>  Questo metodo può restituire un valore inaccurato perché utilizza le funzioni native i cui valori non possono essere aggiornati in modo continuo dal sistema operativo.  
  
 Il valore della <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A> proprietà è già memorizzato nella cache se l'istanza corrente del <xref:System.IO.FileSystemInfo> oggetto è stato restituito da una delle seguenti <xref:System.IO.DirectoryInfo> metodi:  
  
-   <xref:System.IO.DirectoryInfo.GetDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A?displayProperty=nameWithType>  
  
 Per ottenere il valore più recente, chiamare il <xref:System.IO.FileSystemInfo.Refresh%2A> metodo.  
  
 Se il file descritto nel <xref:System.IO.FileSystemInfo> oggetto non esiste, questa proprietà restituisce dalla mezzanotte 24.00, del 1 ° gennaio 1601 D.C. (C.E.) Coordinated Universal Time (UTC).  
  
 Per un elenco delle attività dei / o comuni, vedere [comuni attività dei / o](~/docs/standard/io/common-i-o-tasks.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <see cref="M:System.IO.FileSystemInfo.Refresh" /> non è in grado di inizializzare i dati.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Il sistema operativo corrente non è Windows NT o versioni successive.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Il chiamante tenta di impostare un'ora di accesso non valida.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per impostare l'ora dell'ultimo accesso. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="LastWriteTime">
      <MemberSignature Language="C#" Value="public DateTime LastWriteTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastWriteTime" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.LastWriteTime" />
      <MemberSignature Language="VB.NET" Value="Public Property LastWriteTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastWriteTime { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'ora dell'ultima modifica del file o della directory corrente.</summary>
        <value>Ora dell'ultima modifica del file o della directory corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!NOTE]
>  Questo metodo può restituire un valore inaccurato perché utilizza le funzioni native i cui valori non possono essere aggiornati in modo continuo dal sistema operativo.  
  
 Il valore della <xref:System.IO.FileSystemInfo.LastWriteTime%2A> proprietà è già memorizzato nella cache se l'istanza corrente del <xref:System.IO.FileSystemInfo> oggetto è stato restituito da una delle seguenti <xref:System.IO.DirectoryInfo> metodi:  
  
-   <xref:System.IO.DirectoryInfo.GetDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A?displayProperty=nameWithType>  
  
 Per ottenere il valore più recente, chiamare il <xref:System.IO.FileSystemInfo.Refresh%2A> metodo.  
  
 Se il file o la directory descritta nel <xref:System.IO.FileSystemInfo> oggetto non esiste o se il file system che contiene il file o la directory non supporta questa informazione, questa proprietà restituisce dalla mezzanotte 24.00, del 1 ° gennaio 1601 D.C. (C.E.) Coordinated Universal Time (UTC), con l'ora locale.  
  
## Examples  
 Esempio di codice seguente viene illustrato l'aggiornamento della <xref:System.IO.FileSystemInfo.LastWriteTime%2A> proprietà tramite un'operazione "contatto". In questo esempio, il file è "toccato", l'aggiornamento di <xref:System.IO.FileSystemInfo.CreationTime%2A>, <xref:System.IO.FileSystemInfo.LastAccessTime%2A> e <xref:System.IO.FileSystemInfo.LastWriteTime%2A> proprietà per la data e ora correnti.  
  
 [!code-csharp[System.IO.FileSystemInfo_touch#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileSystemInfo_touch/cs/touch.cs#00)]
 [!code-vb[System.IO.FileSystemInfo_touch#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileSystemInfo_touch/vb/touch.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <see cref="M:System.IO.FileSystemInfo.Refresh" /> non è in grado di inizializzare i dati.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Il sistema operativo corrente non è Windows NT o versioni successive.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Il chiamante tenta di impostare un'ora di scrittura non valida.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per impostazione ora dell'ultima scrittura. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="LastWriteTimeUtc">
      <MemberSignature Language="C#" Value="public DateTime LastWriteTimeUtc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastWriteTimeUtc" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.LastWriteTimeUtc" />
      <MemberSignature Language="VB.NET" Value="Public Property LastWriteTimeUtc As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastWriteTimeUtc { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'ora, nell'ora UTC (Universal Coordinated Time), dell'ultima scrittura al file o alla directory corrente.</summary>
        <value>Ora UTC dell'ultima modifica nel file corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!NOTE]
>  Questo metodo può restituire un valore inaccurato perché utilizza le funzioni native i cui valori non possono essere aggiornati in modo continuo dal sistema operativo.  
    
 Il valore della <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A> proprietà è già memorizzato nella cache se l'istanza corrente del <xref:System.IO.FileSystemInfo> oggetto è stato restituito da una delle seguenti <xref:System.IO.DirectoryInfo> metodi:  
  
-   <xref:System.IO.DirectoryInfo.GetDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A?displayProperty=nameWithType>  
  
 Per ottenere il valore più recente, chiamare il <xref:System.IO.FileSystemInfo.Refresh%2A> metodo.  
  
 Se il file o la directory descritta nel <xref:System.IO.FileSystemInfo> oggetto non esiste o se il file system che contiene il file o la directory non supporta questa informazione, questa proprietà restituisce dalla mezzanotte 24.00, del 1 ° gennaio 1601 D.C. (C.E.) Coordinated Universal Time (UTC).  

 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <see cref="M:System.IO.FileSystemInfo.Refresh" /> non è in grado di inizializzare i dati.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Il sistema operativo corrente non è Windows NT o versioni successive.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Il chiamante tenta di impostare un'ora di scrittura non valida.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per impostazione ora dell'ultima scrittura. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nel caso di file, ottiene il nome del file. Nel caso di directory, ottiene il nome dell'ultima directory nella gerarchia, se esiste una gerarchia. In caso contrario, la proprietà <see langword="Name" /> ottiene il nome della directory.</summary>
        <value>Stringa che rappresenta il nome della directory padre, il nome dell'ultima directory nella gerarchia oppure il nome di un file, compresa l'estensione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per una directory, `Name` restituisce solo il nome della directory padre, ad esempio Dir, non c:\Dir.. Per una sottodirectory, `Name` restituisce solo il nome della sottodirectory, ad esempio Sub1, non c:\Dir\Sub1..  
  
 Per un file, `Name` restituisce solo il nome di file e l'estensione di file, ad esempio MyFile, anziché c:\Dir\MyFile.txt..  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="OriginalPath">
      <MemberSignature Language="C#" Value="protected string OriginalPath;" />
      <MemberSignature Language="ILAsm" Value=".field family string OriginalPath" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileSystemInfo.OriginalPath" />
      <MemberSignature Language="VB.NET" Value="Protected OriginalPath As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ OriginalPath;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Percorso, assoluto o relativo, originariamente specificato dall'utente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un elenco delle attività dei / o comuni, vedere [comuni attività dei / o](~/docs/standard/io/common-i-o-tasks.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemInfo.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aggiorna lo stato dell'oggetto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `FileSystemInfo.Refresh` Crea uno snapshot del file dal file system corrente. `Refresh` non è possibile correggere il file system sottostante, anche se il file system restituisce informazioni non corrette o non aggiornate. Questa situazione può verificarsi in piattaforme, ad esempio Windows 98.  
  
 È necessario chiamare per `Refresh` prima di tentare di ottenere le informazioni sugli attributi o le informazioni saranno aggiornate.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Una periferica, ad esempio un'unità disco, non è pronta.</exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
  </Members>
</Type>