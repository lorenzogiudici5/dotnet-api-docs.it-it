<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BinaryReader.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac522a75f9b356ec6c35a6b7fdfaaf1447ea2b69f02.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22a75f9b356ec6c35a6b7fdfaaf1447ea2b69f02</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.BinaryReader">
          <source>Reads primitive data types as binary values in a specific encoding.</source>
          <target state="translated">Legge i tipi di dati primitivi come valori binari in una determinata codifica.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>The <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> class provides methods that simplify reading primitive data types from a stream.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> classe fornisce metodi che semplificano la lettura di tipi di dati primitivi da un flusso.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>For example, you can use the <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadBoolean%2A&gt;</ph> method to read the next byte as a Boolean value and advance the current position in the stream by one byte.</source>
          <target state="translated">Ad esempio, è possibile utilizzare il <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadBoolean%2A&gt;</ph> metodo per leggere il byte successivo come un valore booleano e spostare la posizione corrente nel flusso di un byte.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>The class includes read methods that support different data types.</source>
          <target state="translated">La classe include metodi che supportano diversi tipi di dati di lettura.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>When you create a new instance of the <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> class, you provide the stream to read from, and optionally specify the type of encoding and whether to leave the stream open after disposing the <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph> object.</source>
          <target state="translated">Quando si crea una nuova istanza di <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> (classe), si fornisce il flusso da cui leggere, facoltativamente, specifica il tipo di codifica e se si desidera mantenere il flusso aperto dopo avere eliminato il <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>If you do not specify an encoding type, UTF-8 is used.</source>
          <target state="translated">Se non si specifica un tipo di codifica, viene utilizzato UTF-8.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Questo tipo implementa il <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interfaccia.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Dopo aver utilizzato il tipo, è necessario eliminarlo direttamente o indirettamente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Per eliminare direttamente il tipo, chiamare il relativo <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> metodo in un <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> blocco.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio come ad esempio <ph id="ph1">`using`</ph> in C# o <ph id="ph2">`Using`</ph> in Visual Basic.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Per ulteriori informazioni, vedere la sezione "Utilizzo di oggetti che implementano IDisposable" nel <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> argomento relativo all'interfaccia.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BinaryReader">
          <source>The following code example demonstrates how to store and retrieve application settings in a file.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come archiviare e recuperare le impostazioni dell'applicazione in un file.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.IO.BinaryReader">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream)">
          <source>The input stream.</source>
          <target state="translated">Flusso di input.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> class based on the specified stream and using UTF-8 encoding.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> in base al flusso specificato e usando la codifica UTF-8.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream)">
          <source>The following code example demonstrates how to store and retrieve application settings in a file.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come archiviare e recuperare le impostazioni dell'applicazione in un file.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream)">
          <source>The stream does not support reading, is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, or is already closed.</source>
          <target state="translated">Il flusso non supporta la lettura, è <ph id="ph1">&lt;see langword="null" /&gt;</ph> o è già chiuso.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The input stream.</source>
          <target state="translated">Flusso di input.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The character encoding to use.</source>
          <target state="translated">Codifica dei caratteri da usare.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> class based on the specified stream and character encoding.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> in base alla codifica dei caratteri e del flusso specificata.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The stream does not support reading, is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, or is already closed.</source>
          <target state="translated">Il flusso non supporta la lettura, è <ph id="ph1">&lt;see langword="null" /&gt;</ph> o è già chiuso.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source><ph id="ph1">&lt;paramref name="encoding" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encoding" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>The input stream.</source>
          <target state="translated">Flusso di input.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>The character encoding to use.</source>
          <target state="translated">Codifica dei caratteri da usare.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to leave the stream open after the <ph id="ph2">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> object is disposed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per mantenere il flusso aperto dopo avere eliminato l'oggetto <ph id="ph2">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph>; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> class based on the specified stream and character encoding, and optionally leaves the stream open.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> in base alla codifica dei caratteri e di flusso specificati. Facoltativamente mantiene aperto il flusso.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>The stream does not support reading, is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, or is already closed.</source>
          <target state="translated">Il flusso non supporta la lettura, è <ph id="ph1">&lt;see langword="null" /&gt;</ph> o è già chiuso.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="encoding" /&gt;</ph> or <ph id="ph2">&lt;paramref name="input" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encoding" /&gt;</ph> o <ph id="ph2">&lt;paramref name="input" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.IO.BinaryReader.BaseStream">
          <source>Exposes access to the underlying stream of the <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph>.</source>
          <target state="translated">Espone l'accesso al flusso sottostante dell'oggetto <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BinaryReader.BaseStream">
          <source>The underlying stream associated with the <ph id="ph1">&lt;see langword="BinaryReader" /&gt;</ph>.</source>
          <target state="translated">Flusso sottostante associato all'oggetto <ph id="ph1">&lt;see langword="BinaryReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BinaryReader.BaseStream">
          <source>Using the underlying stream while reading or while using the <ph id="ph1">`BinaryReader`</ph> can cause data loss and corruption.</source>
          <target state="translated">Utilizzando l'oggetto sottostante flusso durante la lettura o utilizzando il <ph id="ph1">`BinaryReader`</ph> può causare la perdita di dati e il danneggiamento.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BinaryReader.BaseStream">
          <source>For example, the same bytes might be read more than once, bytes might be skipped, or character reading might become unpredictable.</source>
          <target state="translated">Ad esempio, gli stessi byte è possibile leggere più di una volta, potrebbero venire ignorati un byte o la lettura dei caratteri potrebbe diventare imprevedibile.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BinaryReader.BaseStream">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BinaryReader.BaseStream">
          <source>The following code example shows how to read and write <ph id="ph1">`Double`</ph> data to memory by using the <ph id="ph2">`BinaryReader`</ph> and <ph id="ph3">&lt;xref:System.IO.BinaryWriter&gt;</ph> classes on top of the <ph id="ph4">&lt;xref:System.IO.MemoryStream&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come leggere e scrivere <ph id="ph1">`Double`</ph> dati nella memoria utilizzando il <ph id="ph2">`BinaryReader`</ph> e <ph id="ph3">&lt;xref:System.IO.BinaryWriter&gt;</ph> classi in cima la <ph id="ph4">&lt;xref:System.IO.MemoryStream&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BinaryReader.BaseStream">
          <source><ph id="ph1">`MemoryStream`</ph> only reads and writes <ph id="ph2">`Byte`</ph> data.</source>
          <target state="translated"><ph id="ph1">`MemoryStream`</ph> lettura e scrittura solo <ph id="ph2">`Byte`</ph> dati.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Close">
          <source>Closes the current reader and the underlying stream.</source>
          <target state="translated">Chiude il visualizzatore corrente e il flusso sottostante.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Close">
          <source>This implementation of <ph id="ph1">`Close`</ph> calls the <ph id="ph2">&lt;xref:System.IO.BinaryReader.Dispose%2A&gt;</ph> method passing a <ph id="ph3">`true`</ph> value.</source>
          <target state="translated">Questa implementazione di <ph id="ph1">`Close`</ph> chiamate di <ph id="ph2">&lt;xref:System.IO.BinaryReader.Dispose%2A&gt;</ph> passando un <ph id="ph3">`true`</ph> valore.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Close">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.IO.Stream.Flush%2A&gt;</ph> or <ph id="ph2">`Close`</ph>.</source>
          <target state="translated">La cancellazione del flusso non svuotamento del codificatore sottostante a meno che non chiama in modo esplicito <ph id="ph1">&lt;xref:System.IO.Stream.Flush%2A&gt;</ph> o <ph id="ph2">`Close`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Close">
          <source>Setting <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">Impostazione <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> a <ph id="ph2">`true`</ph> , i dati verranno scaricati dal buffer nel flusso, ma lo stato del codificatore non verrà rimosso.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Close">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">In questo modo il codificatore mantenere lo stato (caratteri parziali) in modo che può codificare correttamente il blocco successivo di caratteri.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Close">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">Questo scenario riguarda UTF8 e UTF7, in cui alcuni caratteri possono essere codificati solo dopo che il codificatore riceve adiacenti carattere o caratteri.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="T:System.IO.BinaryReader">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> class.</source>
          <target state="translated">Rilascia le risorse usate dalla classe <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> class.</source>
          <target state="translated">Rilascia tutte le risorse usate dall'istanza corrente della classe <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph>.</source>
          <target state="translated">Chiamare il metodo <ph id="ph1">`Dispose`</ph> dopo aver terminato di utilizzare l'oggetto <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph> in an unusable state.</source>
          <target state="translated">Il metodo <ph id="ph1">`Dispose`</ph> lascia l'oggetto <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph> in una condizione di inutilizzabilità.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.IO.BinaryReader&gt;</ph> was occupying.</source>
          <target state="translated">Dopo la chiamata <ph id="ph1">`Dispose`</ph>, è necessario rilasciare tutti i riferimenti al <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph> in modo che il garbage collector può recuperare la memoria che di <ph id="ph3">&lt;xref:System.IO.BinaryReader&gt;</ph> occupata.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>implementazione di un metodo Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph>.</source>
          <target state="translated">Chiamare sempre il metodo <ph id="ph1">`Dispose`</ph> prima di rilasciare l'ultimo riferimento a <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> dell'oggetto <ph id="ph2">`Finalize`</ph> non viene richiamato dal Garbage Collector.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per rilasciare sia le risorse gestite sia quelle non gestite; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per rilasciare solo le risorse non gestite.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> class and optionally releases the managed resources.</source>
          <target state="translated">Rilascia le risorse non gestite usate dalla classe <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> e facoltativamente le risorse gestite.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source>This method is called by <ph id="ph1">`Dispose`</ph> and <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo viene chiamato da <ph id="ph1">`Dispose`</ph> e <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source>By default, this method specifies the <ph id="ph1">`disposing`</ph> parameter as <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Per impostazione predefinita, questo metodo consente di specificare il <ph id="ph1">`disposing`</ph> parametro come <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> specifies the <ph id="ph2">`disposing`</ph> parameter as <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> Specifica il <ph id="ph2">`disposing`</ph> parametro come <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.IO.BinaryReader&gt;</ph> references.</source>
          <target state="translated">Se il parametro <ph id="ph1">`disposing`</ph> è <ph id="ph2">`true`</ph>, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti a cui la classe <ph id="ph3">&lt;xref:System.IO.BinaryReader&gt;</ph> fa riferimento.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">Il metodo richiama il metodo <ph id="ph1">`Dispose`</ph> di ciascun oggetto cui viene fatto riferimento.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.IO.BinaryReader.Dispose(System.Boolean)" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;see cref="M:System.IO.BinaryReader.Dispose(System.Boolean)" /&gt;</ph> può essere chiamato più volte da altri oggetti.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source>When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Quando si esegue l'override di questo metodo, prestare attenzione a non fare riferimento a oggetti che sono stati eliminati in una precedente chiamata a <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source>For more information about how to implement this method, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su come implementare questo metodo, vedere <bpt id="p1">[</bpt>implementazione di un metodo Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su <ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.FillBuffer(System.Int32)">
          <source>The number of bytes to be read.</source>
          <target state="translated">Numero di byte da leggere.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.FillBuffer(System.Int32)">
          <source>Fills the internal buffer with the specified number of bytes read from the stream.</source>
          <target state="translated">Inserisce nel buffer interno il numero specificato di byte letti dal flusso.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.FillBuffer(System.Int32)">
          <source>The internal buffer size is the larger value between 16 and the value returned by <ph id="ph1">&lt;xref:System.Text.Encoding.GetMaxByteCount%2A&gt;</ph> for the specified encoding.</source>
          <target state="translated">Le dimensioni del buffer interno sono il valore più grande tra 16 e il valore restituito da <ph id="ph1">&lt;xref:System.Text.Encoding.GetMaxByteCount%2A&gt;</ph> per la codifica specificata.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.FillBuffer(System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.FillBuffer(System.Int32)">
          <source>The end of the stream is reached before <ph id="ph1">&lt;paramref name="numBytes" /&gt;</ph> could be read.</source>
          <target state="translated">È stata raggiunta la fine del flusso prima che fosse possibile leggere <ph id="ph1">&lt;paramref name="numBytes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.FillBuffer(System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.FillBuffer(System.Int32)">
          <source>Requested <ph id="ph1">&lt;paramref name="numBytes" /&gt;</ph> is larger than the internal buffer size.</source>
          <target state="translated">I <ph id="ph1">&lt;paramref name="numBytes" /&gt;</ph> richiesti sono superiori alla dimensione del buffer interno.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.PeekChar">
          <source>Returns the next available character and does not advance the byte or character position.</source>
          <target state="translated">Restituisce il successivo carattere disponibile senza spostare in avanti la posizione del byte o del carattere.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.PeekChar">
          <source>The next available character, or -1 if no more characters are available or the stream does not support seeking.</source>
          <target state="translated">Carattere successivo disponibile oppure -1 se non sono disponibili altri caratteri o se il flusso non supporta la ricerca.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.PeekChar">
          <source>If surrogate characters can be expected in the stream use the <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadChars%2A&gt;</ph> method, then set the stream back to the original position.</source>
          <target state="translated">Se sono prevista caratteri surrogati nel flusso utilizzare il <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadChars%2A&gt;</ph> (metodo), quindi impostare il flusso nella posizione originale.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.PeekChar">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.PeekChar">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.PeekChar">
          <source>The current character cannot be decoded into the internal character buffer by using the <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> selected for the stream.</source>
          <target state="translated">Impossibile decodificare il carattere corrente nel buffer di caratteri interno tramite l'oggetto <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> selezionato per il flusso.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.IO.BinaryReader">
          <source>Reads bytes from the underlying stream and advances the current position of the stream.</source>
          <target state="translated">Legge i byte dal flusso sottostante e sposta in avanti la posizione corrente del flusso.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read">
          <source>Reads characters from the underlying stream and advances the current position of the stream in accordance with the <ph id="ph1">&lt;see langword="Encoding" /&gt;</ph> used and the specific character being read from the stream.</source>
          <target state="translated">Legge i caratteri dal flusso sottostante e sposta in avanti la posizione corrente del flusso secondo il valore <ph id="ph1">&lt;see langword="Encoding" /&gt;</ph> usato e il carattere specifico che il flusso sta leggendo.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read">
          <source>The next character from the input stream, or -1 if no characters are currently available.</source>
          <target state="translated">Carattere successivo dal flusso di input oppure -1 se non vi sono caratteri disponibili.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> Ripristina la posizione del file dopo una lettura non riuscita.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read">
          <source>The following example shows how to read and write data using memory as a backing store.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come leggere e scrivere dati di utilizzo della memoria come un archivio di backup.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read">
          <source>This example displays a list of invalid file path characters to the console.</source>
          <target state="translated">In questo esempio visualizza un elenco di caratteri di percorso di file non valido nella console.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read">
          <source>Although the code tries to display a list of all invalid file path characters, not all of the characters are within the displayable set of characters.</source>
          <target state="translated">Anche se il codice tenta di visualizzare un elenco di tutti i caratteri di percorso di file non valido, non tutti i caratteri sono all'interno del set di caratteri visualizzabile.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read">
          <source>Because the list of invalid characters can vary based on the system, output for this code may also vary.</source>
          <target state="translated">Poiché l'elenco di caratteri non validi può variare in base al sistema, possono variare anche output per il codice.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read">
          <source>The stream is closed.</source>
          <target state="translated">Il flusso è chiuso.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer to read data into.</source>
          <target state="translated">Buffer in cui leggere i dati.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The starting point in the buffer at which to begin reading into the buffer.</source>
          <target state="translated">Punto di partenza nel buffer dal quale avviare la lettura nel buffer.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to read.</source>
          <target state="translated">Numero di byte da leggere.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the specified number of bytes from the stream, starting from a specified point in the byte array.</source>
          <target state="translated">Legge il numero specificato di byte dal flusso, a partire da un punto specificato nella matrice di byte.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes read into <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated">Numero di byte letti nell'oggetto <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This might be less than the number of bytes requested if that many bytes are not available, or it might be zero if the end of the stream is reached.</source>
          <target state="translated">Può essere minore del numero di byte richiesti, se tale quantità di byte non è disponibile, oppure zero, se è stata raggiunta la fine del flusso.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> Ripristina la posizione del file dopo l'operazione di lettura un esito negativo.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The following example shows how to write binary data by using memory as a backing store.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come scrivere i dati binari con la memoria come archivio di backup.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>It displays a message to the console that indicates whether the data was written correctly.</source>
          <target state="translated">Viene visualizzato un messaggio nella console che indica se i dati è stato scritto correttamente.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This example reads the contents of a file and displays each byte's numeric value in 16-column format.</source>
          <target state="translated">In questo esempio legge il contenuto di un file e Visualizza valore numerico di ogni byte in formato di 16 colonne.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The end of the file that is being read is detected when the <ph id="ph1">&lt;xref:System.IO.BinaryReader.Read%2A&gt;</ph> method returns zero bytes.</source>
          <target state="translated">La fine del file che si sta leggendo viene rilevata quando il <ph id="ph1">&lt;xref:System.IO.BinaryReader.Read%2A&gt;</ph> restituisce zero byte.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">La lunghezza del buffer meno <ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The number of decoded characters to read is greater than <ph id="ph1">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">Il numero dei caratteri decodificati da leggere è maggiore di <ph id="ph1">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</source>
          <target state="translated">Questa situazione può verificarsi se un decodificatore Unicode restituisce caratteri di fallback o una coppia di surrogati.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> o <ph id="ph2">&lt;paramref name="count" /&gt;</ph> è negativo.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The stream is closed.</source>
          <target state="translated">Il flusso è chiuso.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The buffer to read data into.</source>
          <target state="translated">Buffer in cui leggere i dati.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The starting point in the buffer at which to begin reading into the buffer.</source>
          <target state="translated">Punto di partenza nel buffer dal quale avviare la lettura nel buffer.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to read.</source>
          <target state="translated">Numero di caratteri da leggere.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Reads the specified number of characters from the stream, starting from a specified point in the character array.</source>
          <target state="translated">Legge il numero specificato di caratteri dal flusso, a partire da un punto specificato nella matrice di caratteri.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The total number of characters read into the buffer.</source>
          <target state="translated">Numero complessivo di caratteri letti nel buffer.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>This might be less than the number of characters requested if that many characters are not currently available, or it might be zero if the end of the stream is reached.</source>
          <target state="translated">Può essere minore del numero di caratteri richiesti, se tale quantità di caratteri non è attualmente disponibile, oppure zero, se è stata raggiunta la fine del flusso.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> Ripristina la posizione del file dopo l'operazione di lettura un esito negativo.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The following example shows how to read and write data using memory as a backing store.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come leggere e scrivere dati di utilizzo della memoria come un archivio di backup.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>This example displays a list of invalid file path characters to the console.</source>
          <target state="translated">In questo esempio visualizza un elenco di caratteri di percorso di file non valido nella console.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Although the code tries to display a list of all invalid file path characters, not all of the characters are within the displayable set of characters.</source>
          <target state="translated">Anche se il codice tenta di visualizzare un elenco di tutti i caratteri di percorso di file non valido, non tutti i caratteri sono all'interno del set di caratteri visualizzabile.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Because the list of invalid characters can vary based on the system, output for this code may also vary.</source>
          <target state="translated">Poiché l'elenco di caratteri non validi può variare in base al sistema, possono variare anche output per il codice.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">La lunghezza del buffer meno <ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The number of decoded characters to read is greater than <ph id="ph1">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">Il numero dei caratteri decodificati da leggere è maggiore di <ph id="ph1">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</source>
          <target state="translated">Questa situazione può verificarsi se un decodificatore Unicode restituisce caratteri di fallback o una coppia di surrogati.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> o <ph id="ph2">&lt;paramref name="count" /&gt;</ph> è negativo.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The stream is closed.</source>
          <target state="translated">Il flusso è chiuso.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read7BitEncodedInt">
          <source>Reads in a 32-bit integer in compressed format.</source>
          <target state="translated">Legge un intero a 32 bit in formato compresso.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read7BitEncodedInt">
          <source>A 32-bit integer in compressed format.</source>
          <target state="translated">Intero a 32 bit in formato compresso.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read7BitEncodedInt">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> Ripristina la posizione del file dopo una lettura non riuscita.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read7BitEncodedInt">
          <source>If the integer will fit in seven bits, the integer takes only one byte of space.</source>
          <target state="translated">Se il valore integer rientra in sette bit, è necessario un solo byte di spazio.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read7BitEncodedInt">
          <source>The integer is expected to have been written through <ph id="ph1">&lt;xref:System.IO.BinaryWriter.Write7BitEncodedInt%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">È previsto l'intero siano state scritte tramite <ph id="ph1">&lt;xref:System.IO.BinaryWriter.Write7BitEncodedInt%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.Read7BitEncodedInt">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read7BitEncodedInt">
          <source>The end of the stream is reached.</source>
          <target state="translated">È stata raggiunta la fine del flusso.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read7BitEncodedInt">
          <source>The stream is closed.</source>
          <target state="translated">Il flusso è chiuso.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read7BitEncodedInt">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.Read7BitEncodedInt">
          <source>The stream is corrupted.</source>
          <target state="translated">Il flusso è danneggiato.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBoolean">
          <source>Reads a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value from the current stream and advances the current position of the stream by one byte.</source>
          <target state="translated">Legge un valore <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> dal flusso corrente e sposta in avanti di 1 byte la posizione corrente del flusso.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBoolean">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the byte is nonzero; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il byte è diverso da zero; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadBoolean">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> Ripristina la posizione del file dopo una lettura non riuscita.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadBoolean">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadBoolean">
          <source>The following code example demonstrates how to store and retrieve application settings in a file.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come archiviare e recuperare le impostazioni dell'applicazione in un file.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBoolean">
          <source>The end of the stream is reached.</source>
          <target state="translated">È stata raggiunta la fine del flusso.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBoolean">
          <source>The stream is closed.</source>
          <target state="translated">Il flusso è chiuso.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBoolean">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadByte">
          <source>Reads the next byte from the current stream and advances the current position of the stream by one byte.</source>
          <target state="translated">Legge il byte successivo dal flusso corrente e sposta in avanti di 1 byte la posizione corrente del flusso.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadByte">
          <source>The next byte read from the current stream.</source>
          <target state="translated">Byte successivo letto dal flusso corrente.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadByte">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> Ripristina la posizione del file dopo una lettura non riuscita.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadByte">
          <source>Because of data formatting conflicts, using this method with the following encodings is not recommended:</source>
          <target state="translated">A causa di conflitti di formattazione di dati, si consiglia di non utilizzare questo metodo con le codifiche seguenti:</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadByte">
          <source>UTF-7</source>
          <target state="translated">UTF-7</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadByte">
          <source>ISO-2022-JP</source>
          <target state="translated">ISO-2022-JP</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadByte">
          <source>ISCII</source>
          <target state="translated">ISCII</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadByte">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadByte">
          <source>The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come scrivere i dati binari utilizzando la memoria come un archivio di backup e verificare che i dati vengano scritti correttamente.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadByte">
          <source>The end of the stream is reached.</source>
          <target state="translated">È stata raggiunta la fine del flusso.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadByte">
          <source>The stream is closed.</source>
          <target state="translated">Il flusso è chiuso.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadByte">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>The number of bytes to read.</source>
          <target state="translated">Numero di byte da leggere.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>This value must be 0 or a non-negative number or an exception will occur.</source>
          <target state="translated">Questo valore deve essere 0 o un numero non negativo; in caso contrario, si verificherà un'eccezione.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>Reads the specified number of bytes from the current stream into a byte array and advances the current position by that number of bytes.</source>
          <target state="translated">Legge il numero specificato di byte dal flusso corrente in una matrice di byte e sposta in avanti la posizione corrente in base a tale numero di byte.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>A byte array containing data read from the underlying stream.</source>
          <target state="translated">Matrice di byte contenente dati letti dal flusso sottostante.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>This might be less than the number of bytes requested if the end of the stream is reached.</source>
          <target state="translated">Può essere minore del numero di byte necessari se viene raggiunta la fine del flusso.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> Ripristina la posizione del file dopo l'operazione di lettura un esito negativo.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come scrivere i dati binari utilizzando la memoria come un archivio di backup e verificare che i dati vengano scritti correttamente.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>This example reads the contents of a file and displays it to the console as dump text.</source>
          <target state="translated">In questo esempio legge il contenuto di un file e lo visualizza nella console come testo di dump.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>The end of the file that is being read is detected when the length of the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array returned from <ph id="ph2">&lt;xref:System.IO.BinaryReader.ReadBytes%2A&gt;</ph> is zero.</source>
          <target state="translated">Viene rilevata la fine del file che vengono letti quando la lunghezza del <ph id="ph1">&lt;xref:System.Byte&gt;</ph> matrice restituita da <ph id="ph2">&lt;xref:System.IO.BinaryReader.ReadBytes%2A&gt;</ph> è zero.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>The number of decoded characters to read is greater than <ph id="ph1">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">Il numero dei caratteri decodificati da leggere è maggiore di <ph id="ph1">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</source>
          <target state="translated">Questa situazione può verificarsi se un decodificatore Unicode restituisce caratteri di fallback o una coppia di surrogati.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source>The stream is closed.</source>
          <target state="translated">Il flusso è chiuso.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> è negativo.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChar">
          <source>Reads the next character from the current stream and advances the current position of the stream in accordance with the <ph id="ph1">&lt;see langword="Encoding" /&gt;</ph> used and the specific character being read from the stream.</source>
          <target state="translated">Legge il carattere successivo dal flusso corrente e sposta in avanti la posizione corrente del flusso secondo il valore <ph id="ph1">&lt;see langword="Encoding" /&gt;</ph> usato e il carattere specifico letto dal flusso.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChar">
          <source>A character read from the current stream.</source>
          <target state="translated">Carattere letto dal flusso corrente.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChar">
          <source>If the <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadChar%2A&gt;</ph> method attempts to read a surrogate character in the stream an exception will be raised and the position in the stream will advance.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadChar%2A&gt;</ph> metodo tenta di leggere un carattere surrogato nel flusso di un'eccezione verrà generata e verrà spostata in avanti la posizione nel flusso.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChar">
          <source>The position is restored to the original location before <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadChar%2A&gt;</ph> was called if the stream is seekable; however, if the stream is unseekable, the position will not be corrected.</source>
          <target state="translated">La posizione viene ripristinata nel percorso originale prima di <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadChar%2A&gt;</ph> se è stato chiamato il flusso è ricercabile; tuttavia, se il flusso non consente la ricerca, la posizione non sarà corretta.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChar">
          <source>If surrogate characters can be expected in the stream, use the <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadChars%2A&gt;</ph> method instead.</source>
          <target state="translated">Se sono prevista nel flusso di caratteri surrogati, utilizzare il <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadChars%2A&gt;</ph> metodo invece.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChar">
          <source>Because of data formatting conflicts, using this method with the following encodings is not recommended:</source>
          <target state="translated">A causa di conflitti di formattazione di dati, si consiglia di non utilizzare questo metodo con le codifiche seguenti:</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChar">
          <source>UTF-7</source>
          <target state="translated">UTF-7</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChar">
          <source>ISO-2022-JP</source>
          <target state="translated">ISO-2022-JP</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChar">
          <source>ISCII</source>
          <target state="translated">ISCII</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChar">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChar">
          <source>The following code example shows how to read and write data using memory as a backing store.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come leggere e scrivere dati di utilizzo della memoria come un archivio di backup.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChar">
          <source>The end of the stream is reached.</source>
          <target state="translated">È stata raggiunta la fine del flusso.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChar">
          <source>The stream is closed.</source>
          <target state="translated">Il flusso è chiuso.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChar">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChar">
          <source>A surrogate character was read.</source>
          <target state="translated">È stato letto un carattere surrogato.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>The number of characters to read.</source>
          <target state="translated">Numero di caratteri da leggere.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>Reads the specified number of characters from the current stream, returns the data in a character array, and advances the current position in accordance with the <ph id="ph1">&lt;see langword="Encoding" /&gt;</ph> used and the specific character being read from the stream.</source>
          <target state="translated">Legge il numero specificato di caratteri dal flusso corrente, restituisce i dati in una matrice di caratteri e sposta in avanti la posizione corrente secondo il valore <ph id="ph1">&lt;see langword="Encoding" /&gt;</ph> usato e il carattere specifico letto dal flusso.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>A character array containing data read from the underlying stream.</source>
          <target state="translated">Matrice di caratteri contenente dati letti dal flusso sottostante.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>This might be less than the number of characters requested if the end of the stream is reached.</source>
          <target state="translated">Può essere minore del numero di caratteri necessari se viene raggiunta la fine del flusso.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> Ripristina la posizione del file dopo l'operazione di lettura un esito negativo.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>When reading from network streams, in some rare cases, the <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadChars%2A&gt;</ph> method might read an extra character from the stream if the <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph> was constructed with Unicode encoding.</source>
          <target state="translated">Durante la lettura da flussi di rete, in alcuni casi rari, il <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadChars%2A&gt;</ph> metodo potrebbe leggere un carattere aggiuntivo dal flusso se il <ph id="ph2">&lt;xref:System.IO.BinaryReader&gt;</ph> è stato costruito con Unicode codifica.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>If this occurs, you can use the <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadBytes%2A&gt;</ph> method to read a fixed-length byte array, and then pass that array to the <ph id="ph2">&lt;xref:System.IO.BinaryReader.ReadChars%2A&gt;</ph> method.</source>
          <target state="translated">In questo caso, è possibile utilizzare il <ph id="ph1">&lt;xref:System.IO.BinaryReader.ReadBytes%2A&gt;</ph> metodo per leggere una matrice di byte a lunghezza fissa e quindi passare la matrice di <ph id="ph2">&lt;xref:System.IO.BinaryReader.ReadChars%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>The following code example shows how to read and write data using memory as a backing store.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come leggere e scrivere dati di utilizzo della memoria come un archivio di backup.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>The number of decoded characters to read is greater than <ph id="ph1">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">Il numero dei caratteri decodificati da leggere è maggiore di <ph id="ph1">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</source>
          <target state="translated">Questa situazione può verificarsi se un decodificatore Unicode restituisce caratteri di fallback o una coppia di surrogati.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>The stream is closed.</source>
          <target state="translated">Il flusso è chiuso.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadChars(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> è negativo.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadDecimal">
          <source>Reads a decimal value from the current stream and advances the current position of the stream by sixteen bytes.</source>
          <target state="translated">Legge un valore decimale dal flusso corrente e sposta in avanti di sedici byte la posizione corrente del flusso.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadDecimal">
          <source>A decimal value read from the current stream.</source>
          <target state="translated">Valore decimale letto dal flusso corrente.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadDecimal">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> Ripristina la posizione del file dopo una lettura non riuscita.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadDecimal">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadDecimal">
          <source>The end of the stream is reached.</source>
          <target state="translated">È stata raggiunta la fine del flusso.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadDecimal">
          <source>The stream is closed.</source>
          <target state="translated">Il flusso è chiuso.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadDecimal">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadDouble">
          <source>Reads an 8-byte floating point value from the current stream and advances the current position of the stream by eight bytes.</source>
          <target state="translated">Legge un valore a virgola mobile a 8 byte dal flusso corrente e sposta in avanti di otto byte la posizione corrente del flusso.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadDouble">
          <source>An 8-byte floating point value read from the current stream.</source>
          <target state="translated">Valore a virgola mobile a 8 byte letto dal flusso corrente.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadDouble">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> Ripristina la posizione del file dopo una lettura non riuscita.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadDouble">
          <source><ph id="ph1">`BinaryReader`</ph> reads this data type in little-endian format.</source>
          <target state="translated"><ph id="ph1">`BinaryReader`</ph> legge questo tipo di dati in formato little-endian.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadDouble">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadDouble">
          <source>The following code example shows how to read and write <ph id="ph1">`Double`</ph> data to memory by using the <ph id="ph2">`BinaryReader`</ph> and <ph id="ph3">&lt;xref:System.IO.BinaryWriter&gt;</ph> classes on top of the <ph id="ph4">&lt;xref:System.IO.MemoryStream&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come leggere e scrivere <ph id="ph1">`Double`</ph> dati nella memoria utilizzando il <ph id="ph2">`BinaryReader`</ph> e <ph id="ph3">&lt;xref:System.IO.BinaryWriter&gt;</ph> classi in cima la <ph id="ph4">&lt;xref:System.IO.MemoryStream&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadDouble">
          <source><ph id="ph1">`MemoryStream`</ph> only reads and writes <ph id="ph2">`Byte`</ph> data.</source>
          <target state="translated"><ph id="ph1">`MemoryStream`</ph> lettura e scrittura solo <ph id="ph2">`Byte`</ph> dati.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadDouble">
          <source>The end of the stream is reached.</source>
          <target state="translated">È stata raggiunta la fine del flusso.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadDouble">
          <source>The stream is closed.</source>
          <target state="translated">Il flusso è chiuso.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadDouble">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt16">
          <source>Reads a 2-byte signed integer from the current stream and advances the current position of the stream by two bytes.</source>
          <target state="translated">Legge un intero con segno a 2 byte dal flusso corrente e sposta in avanti di 2 byte la posizione corrente del flusso.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt16">
          <source>A 2-byte signed integer read from the current stream.</source>
          <target state="translated">Intero con segno a 2 byte letto dal flusso corrente.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadInt16">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> Ripristina la posizione del file dopo una lettura non riuscita.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadInt16">
          <source><ph id="ph1">`BinaryReader`</ph> reads this data type in little-endian format.</source>
          <target state="translated"><ph id="ph1">`BinaryReader`</ph> legge questo tipo di dati in formato little-endian.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadInt16">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt16">
          <source>The end of the stream is reached.</source>
          <target state="translated">È stata raggiunta la fine del flusso.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt16">
          <source>The stream is closed.</source>
          <target state="translated">Il flusso è chiuso.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt16">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt32">
          <source>Reads a 4-byte signed integer from the current stream and advances the current position of the stream by four bytes.</source>
          <target state="translated">Legge un intero con segno a 4 byte dal flusso corrente e sposta in avanti di quattro byte la posizione corrente del flusso.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt32">
          <source>A 4-byte signed integer read from the current stream.</source>
          <target state="translated">Intero con segno a 4 byte letto dal flusso corrente.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadInt32">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> Ripristina la posizione del file dopo una lettura non riuscita.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadInt32">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> reads this data type in little-endian format.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> legge questo tipo di dati in formato little-endian.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadInt32">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadInt32">
          <source>The following code example demonstrates how to store and retrieve application settings in a file.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come archiviare e recuperare le impostazioni dell'applicazione in un file.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt32">
          <source>The end of the stream is reached.</source>
          <target state="translated">È stata raggiunta la fine del flusso.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt32">
          <source>The stream is closed.</source>
          <target state="translated">Il flusso è chiuso.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt32">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt64">
          <source>Reads an 8-byte signed integer from the current stream and advances the current position of the stream by eight bytes.</source>
          <target state="translated">Legge un intero con segno a 8 byte dal flusso corrente e sposta in avanti di 8 byte la posizione del flusso.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt64">
          <source>An 8-byte signed integer read from the current stream.</source>
          <target state="translated">Intero con segno a 8 byte letto dal flusso corrente.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadInt64">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> Ripristina la posizione del file dopo una lettura non riuscita.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadInt64">
          <source><ph id="ph1">`BinaryReader`</ph> reads this data type in little-endian format.</source>
          <target state="translated"><ph id="ph1">`BinaryReader`</ph> legge questo tipo di dati in formato little-endian.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadInt64">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt64">
          <source>The end of the stream is reached.</source>
          <target state="translated">È stata raggiunta la fine del flusso.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt64">
          <source>The stream is closed.</source>
          <target state="translated">Il flusso è chiuso.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadInt64">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadSByte">
          <source>Reads a signed byte from this stream and advances the current position of the stream by one byte.</source>
          <target state="translated">Legge un byte con segno dal flusso corrente e sposta in avanti di un byte la posizione corrente del flusso.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadSByte">
          <source>A signed byte read from the current stream.</source>
          <target state="translated">Byte con segno letto dal flusso corrente.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadSByte">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> Ripristina la posizione del file dopo una lettura non riuscita.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadSByte">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadSByte">
          <source>The end of the stream is reached.</source>
          <target state="translated">È stata raggiunta la fine del flusso.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadSByte">
          <source>The stream is closed.</source>
          <target state="translated">Il flusso è chiuso.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadSByte">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadSingle">
          <source>Reads a 4-byte floating point value from the current stream and advances the current position of the stream by four bytes.</source>
          <target state="translated">Legge un valore a virgola mobile a 4 byte dal flusso corrente e sposta in avanti di quattro byte la posizione corrente del flusso.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadSingle">
          <source>A 4-byte floating point value read from the current stream.</source>
          <target state="translated">Valore a virgola mobile a 4 byte letto dal flusso corrente.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadSingle">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> Ripristina la posizione del file dopo una lettura non riuscita.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadSingle">
          <source><ph id="ph1">`BinaryReader`</ph> reads this data type in little-endian format.</source>
          <target state="translated"><ph id="ph1">`BinaryReader`</ph> legge questo tipo di dati in formato little-endian.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadSingle">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadSingle">
          <source>The following code example demonstrates how to store and retrieve application settings in a file.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come archiviare e recuperare le impostazioni dell'applicazione in un file.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadSingle">
          <source>The end of the stream is reached.</source>
          <target state="translated">È stata raggiunta la fine del flusso.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadSingle">
          <source>The stream is closed.</source>
          <target state="translated">Il flusso è chiuso.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadSingle">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadString">
          <source>Reads a string from the current stream.</source>
          <target state="translated">Legge una stringa dal flusso corrente.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadString">
          <source>The string is prefixed with the length, encoded as an integer seven bits at a time.</source>
          <target state="translated">La stringa ha un prefisso di lunghezza e viene codificata come intero, 7 bit alla volta.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadString">
          <source>The string being read.</source>
          <target state="translated">Stringa da leggere.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadString">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> Ripristina la posizione del file dopo una lettura non riuscita.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadString">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadString">
          <source>The following code example demonstrates how to store and retrieve application settings in a file.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come archiviare e recuperare le impostazioni dell'applicazione in un file.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadString">
          <source>The end of the stream is reached.</source>
          <target state="translated">È stata raggiunta la fine del flusso.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadString">
          <source>The stream is closed.</source>
          <target state="translated">Il flusso è chiuso.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadString">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt16">
          <source>Reads a 2-byte unsigned integer from the current stream using little-endian encoding and advances the position of the stream by two bytes.</source>
          <target state="translated">Legge un intero senza segno a 2 byte dal flusso corrente usando la codifica little-endian e sposta in avanti di due byte la posizione del flusso.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt16">
          <source>A 2-byte unsigned integer read from this stream.</source>
          <target state="translated">Intero senza segno a 2 byte letto dal flusso corrente.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadUInt16">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> Ripristina la posizione del file dopo una lettura non riuscita.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadUInt16">
          <source><ph id="ph1">`BinaryReader`</ph> reads this data type in little-endian format.</source>
          <target state="translated"><ph id="ph1">`BinaryReader`</ph> legge questo tipo di dati in formato little-endian.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadUInt16">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt16">
          <source>The end of the stream is reached.</source>
          <target state="translated">È stata raggiunta la fine del flusso.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt16">
          <source>The stream is closed.</source>
          <target state="translated">Il flusso è chiuso.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt16">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt32">
          <source>Reads a 4-byte unsigned integer from the current stream and advances the position of the stream by four bytes.</source>
          <target state="translated">Legge un intero senza segno a 4 byte dal flusso corrente e sposta in avanti di quattro byte la posizione del flusso.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt32">
          <source>A 4-byte unsigned integer read from this stream.</source>
          <target state="translated">Intero senza segno a 4 byte letto dal flusso corrente.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadUInt32">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> Ripristina la posizione del file dopo una lettura non riuscita.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadUInt32">
          <source><ph id="ph1">`BinaryReader`</ph> reads this data type in little-endian format.</source>
          <target state="translated"><ph id="ph1">`BinaryReader`</ph> legge questo tipo di dati in formato little-endian.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadUInt32">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt32">
          <source>The end of the stream is reached.</source>
          <target state="translated">È stata raggiunta la fine del flusso.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt32">
          <source>The stream is closed.</source>
          <target state="translated">Il flusso è chiuso.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt32">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt64">
          <source>Reads an 8-byte unsigned integer from the current stream and advances the position of the stream by eight bytes.</source>
          <target state="translated">Legge un intero senza segno a 8 byte dal flusso corrente e sposta in avanti di otto byte la posizione del flusso.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt64">
          <source>An 8-byte unsigned integer read from this stream.</source>
          <target state="translated">Intero senza segno a 8 byte letto dal flusso corrente.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadUInt64">
          <source><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> Ripristina la posizione del file dopo una lettura non riuscita.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadUInt64">
          <source><ph id="ph1">`BinaryReader`</ph> reads this data type in little-endian format.</source>
          <target state="translated"><ph id="ph1">`BinaryReader`</ph> legge questo tipo di dati in formato little-endian.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BinaryReader.ReadUInt64">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">Per un elenco delle attività dei / o comuni, vedere <bpt id="p1">[</bpt>comuni attività dei / o<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt64">
          <source>The end of the stream is reached.</source>
          <target state="translated">È stata raggiunta la fine del flusso.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt64">
          <source>An I/O error occurs.</source>
          <target state="translated">Si è verificato un errore di I/O.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.IO.BinaryReader.ReadUInt64">
          <source>The stream is closed.</source>
          <target state="translated">Il flusso è chiuso.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>