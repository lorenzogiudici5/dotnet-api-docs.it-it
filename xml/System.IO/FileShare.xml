<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FileShare.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5495d6a5f1ffb7faf4b2e7b30cca756f62bbe3882.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">495d6a5f1ffb7faf4b2e7b30cca756f62bbe3882</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.FileShare">
          <source>Contains constants for controlling the kind of access other <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> objects can have to the same file.</source>
          <target state="translated">Contiene le costanti di controllo dei possibili tipi di accesso allo stesso file da parte di altri oggetti <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileShare">
          <source>For an example of creating a file and writing text to a file, see <bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>.</source>
          <target state="translated">Per un esempio di creazione di un file e la scrittura di testo in un file, vedere <bpt id="p1">[</bpt>procedura: scrivere testo in un File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileShare">
          <source>For an example of reading text from a file, see <bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept>.</source>
          <target state="translated">Per un esempio di lettura di testo da un file, vedere <bpt id="p1">[</bpt>procedura: lettura di testo da un File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileShare">
          <source>For an example of reading from and writing to a binary file, see <bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>.</source>
          <target state="translated">Per un esempio di lettura e scrittura in un file binario, vedere <bpt id="p1">[</bpt>procedura: leggere e scrivere un appena creati File di dati<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileShare">
          <source>A typical use of this enumeration is to define whether two processes can simultaneously read from the same file.</source>
          <target state="translated">Un tipico utilizzo di questa enumerazione consiste nel definire se due processi possono leggere contemporaneamente allo stesso file.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileShare">
          <source>For example, if a file is opened and Read is specified, other users can open the file for reading but not for writing.</source>
          <target state="translated">Ad esempio, se un file viene aperto e lettura è specificato, altri utenti possono aprire il file per la lettura, ma non per la scrittura.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileShare">
          <source>A <ph id="ph1">&lt;xref:System.IO.FileShare.Read&gt;</ph> parameter is specified in some of the constructors for <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>, and in some of the <ph id="ph4">`Open`</ph> methods of <ph id="ph5">&lt;xref:System.IO.File&gt;</ph> and <ph id="ph6">&lt;xref:System.IO.FileInfo&gt;</ph> to control how a file is opened.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.FileShare.Read&gt;</ph> viene specificato in alcuni dei costruttori <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>e in alcuni i <ph id="ph4">`Open`</ph> metodi di <ph id="ph5">&lt;xref:System.IO.File&gt;</ph> e <ph id="ph6">&lt;xref:System.IO.FileInfo&gt;</ph> per controllare le modalità di apertura di un file.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileShare">
          <source>The following <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> constructor opens an existing file and grants read-only access to other users (Read).</source>
          <target state="translated">Le operazioni seguenti <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> costruttore apre un file esistente e concede l'accesso di sola lettura ad altri utenti (lettura).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="F:System.IO.FileShare.Delete">
          <source>Allows subsequent deleting of a file.</source>
          <target state="translated">Consente la successiva eliminazione di un file.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.IO.FileShare.Inheritable">
          <source>Makes the file handle inheritable by child processes.</source>
          <target state="translated">Rende l'handle di file ereditabile da parte dei processi figlio.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.IO.FileShare.Inheritable">
          <source>This is not directly supported by Win32.</source>
          <target state="translated">Non supportato direttamente da Win32.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.IO.FileShare.None">
          <source>Declines sharing of the current file.</source>
          <target state="translated">Rifiuta la condivisione del file corrente.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.IO.FileShare.None">
          <source>Any request to open the file (by this process or another process) will fail until the file is closed.</source>
          <target state="translated">Qualsiasi richiesta di aprire il file (da parte di questo o altri processi) non avrà esito positivo fino alla chiusura del file.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.IO.FileShare.Read">
          <source>Allows subsequent opening of the file for reading.</source>
          <target state="translated">Consente la successiva apertura del file in lettura.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.IO.FileShare.Read">
          <source>If this flag is not specified, any request to open the file for reading (by this process or another process) will fail until the file is closed.</source>
          <target state="translated">Se il flag non è specificato, qualsiasi richiesta di aprire il file in lettura (da parte di questo o altri processi) non avrà esito positivo fino alla chiusura del file.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.IO.FileShare.Read">
          <source>However, even if this flag is specified, additional permissions might still be needed to access the file.</source>
          <target state="translated">Tuttavia, anche nel caso in cui il flag sia specificato, potrebbero comunque essere necessarie autorizzazioni aggiuntive per accedere al file.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.IO.FileShare.ReadWrite">
          <source>Allows subsequent opening of the file for reading or writing.</source>
          <target state="translated">Consente la successiva apertura del file in lettura o scrittura.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.IO.FileShare.ReadWrite">
          <source>If this flag is not specified, any request to open the file for reading or writing (by this process or another process) will fail until the file is closed.</source>
          <target state="translated">Se il flag non è specificato, qualsiasi richiesta di aprire il file in lettura o scrittura (da parte di questo o altri processi) non avrà esito positivo fino alla chiusura del file.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.IO.FileShare.ReadWrite">
          <source>However, even if this flag is specified, additional permissions might still be needed to access the file.</source>
          <target state="translated">Tuttavia, anche nel caso in cui il flag sia specificato, potrebbero comunque essere necessarie autorizzazioni aggiuntive per accedere al file.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.IO.FileShare.Write">
          <source>Allows subsequent opening of the file for writing.</source>
          <target state="translated">Consente la successiva apertura del file in scrittura.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.IO.FileShare.Write">
          <source>If this flag is not specified, any request to open the file for writing (by this process or another process) will fail until the file is closed.</source>
          <target state="translated">Se il flag non è specificato, qualsiasi richiesta di aprire il file in scrittura (da parte di questo o altri processi) non avrà esito positivo fino alla chiusura del file.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.IO.FileShare.Write">
          <source>However, even if this flag is specified, additional permissions might still be needed to access the file.</source>
          <target state="translated">Tuttavia, anche nel caso in cui il flag sia specificato, potrebbero comunque essere necessarie autorizzazioni aggiuntive per accedere al file.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>