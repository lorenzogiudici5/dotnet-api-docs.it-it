<Type Name="CodeCatchClause" FullName="System.CodeDom.CodeCatchClause">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="410b1a9c57f8cba4a1a3f89bf1c4e362d9b4752c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30359495" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeCatchClause" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeCatchClause extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeCatchClause" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeCatchClause" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeCatchClause" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0883a-101">Rappresenta un blocco di eccezioni <see langword="catch" /> di un'istruzione <see langword="try/catch" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0883a-101">Represents a <see langword="catch" /> exception block of a <see langword="try/catch" /> statement.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0883a-102"><xref:System.CodeDom.CodeCatchClause> può essere utilizzato per rappresentare un `catch` blocco di eccezioni di un `try/catch` istruzione.</span><span class="sxs-lookup"><span data-stu-id="0883a-102"><xref:System.CodeDom.CodeCatchClause> can be used to represent a `catch` exception block of a `try/catch` statement.</span></span>  
  
 <span data-ttu-id="0883a-103">Il <xref:System.CodeDom.CodeCatchClause.CatchExceptionType%2A> proprietà specifica il tipo di eccezione da intercettare.</span><span class="sxs-lookup"><span data-stu-id="0883a-103">The <xref:System.CodeDom.CodeCatchClause.CatchExceptionType%2A> property specifies the type of exception to catch.</span></span> <span data-ttu-id="0883a-104">Il <xref:System.CodeDom.CodeCatchClause.LocalName%2A> proprietà specifica un nome per la variabile che rappresenta l'eccezione che è stata intercettata.</span><span class="sxs-lookup"><span data-stu-id="0883a-104">The <xref:System.CodeDom.CodeCatchClause.LocalName%2A> property specifies a name for the variable representing the exception that has been caught.</span></span> <span data-ttu-id="0883a-105">Il <xref:System.CodeDom.CodeCatchClause.Statements%2A> proprietà collection contiene le istruzioni per il `catch` blocco.</span><span class="sxs-lookup"><span data-stu-id="0883a-105">The <xref:System.CodeDom.CodeCatchClause.Statements%2A> collection property contains the statements for the `catch` block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0883a-106">Esempio di codice seguente viene illustrato come utilizzare <xref:System.CodeDom.CodeCatchClause> oggetti per definire eccezioni clausole di un blocco try... blocco catch.</span><span class="sxs-lookup"><span data-stu-id="0883a-106">The following example code demonstrates using <xref:System.CodeDom.CodeCatchClause> objects to define exception handling clauses of a try...catch block.</span></span>  
  
 [!code-cpp[CodeTryCatchFinallyExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTryCatchFinallyExample/CPP/codetrycatchfinallyexample.cpp#2)]
 [!code-csharp[CodeTryCatchFinallyExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTryCatchFinallyExample/CS/codetrycatchfinallyexample.cs#2)]
 [!code-vb[CodeTryCatchFinallyExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTryCatchFinallyExample/VB/codetrycatchfinallyexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.CodeDom.CodeCatchClauseCollection" />
    <altmember cref="T:System.CodeDom.CodeTryCatchFinallyStatement" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0883a-107">Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeCatchClause" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0883a-107">Initializes a new instance of the <see cref="T:System.CodeDom.CodeCatchClause" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeCatchClause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClause.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeCatchClause();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0883a-108">Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeCatchClause" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0883a-108">Initializes a new instance of the <see cref="T:System.CodeDom.CodeCatchClause" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeCatchClause (string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClause.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeCatchClause(System::String ^ localName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="0883a-109">Nome della variabile locale dichiarata nella clausola catch dell'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0883a-109">The name of the local variable declared in the catch clause for the exception.</span>
          </span>
          <span data-ttu-id="0883a-110">Ciò è facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0883a-110">This is optional.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0883a-111">Consente di inizializzare una nuova istanza della classe <see cref="T:System.CodeDom.CodeCatchClause" /> utilizzando il nome della variabile locale specificato per l'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0883a-111">Initializes a new instance of the <see cref="T:System.CodeDom.CodeCatchClause" /> class using the specified local variable name for the exception.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeParameterDeclarationExpression" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeCatchClause (string localName, System.CodeDom.CodeTypeReference catchExceptionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string localName, class System.CodeDom.CodeTypeReference catchExceptionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localName As String, catchExceptionType As CodeTypeReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeCatchClause(System::String ^ localName, System::CodeDom::CodeTypeReference ^ catchExceptionType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="catchExceptionType" Type="System.CodeDom.CodeTypeReference" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="0883a-112">Nome della variabile locale dichiarata nella clausola catch dell'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0883a-112">The name of the local variable declared in the catch clause for the exception.</span>
          </span>
          <span data-ttu-id="0883a-113">Ciò è facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0883a-113">This is optional.</span>
          </span>
        </param>
        <param name="catchExceptionType">
          <span data-ttu-id="0883a-114">
            <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di eccezione da intercettare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0883a-114">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of exception to catch.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0883a-115">Consente di inizializzare una nuova istanza della classe <see cref="T:System.CodeDom.CodeCatchClause" /> utilizzando il nome della variabile locale per l'eccezione e il tipo di eccezione specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0883a-115">Initializes a new instance of the <see cref="T:System.CodeDom.CodeCatchClause" /> class using the specified local variable name for the exception and exception type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeCatchClause (string localName, System.CodeDom.CodeTypeReference catchExceptionType, params System.CodeDom.CodeStatement[] statements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string localName, class System.CodeDom.CodeTypeReference catchExceptionType, class System.CodeDom.CodeStatement[] statements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference,System.CodeDom.CodeStatement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localName As String, catchExceptionType As CodeTypeReference, ParamArray statements As CodeStatement())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeCatchClause(System::String ^ localName, System::CodeDom::CodeTypeReference ^ catchExceptionType, ... cli::array &lt;System::CodeDom::CodeStatement ^&gt; ^ statements);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="catchExceptionType" Type="System.CodeDom.CodeTypeReference" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="0883a-116">Nome della variabile locale dichiarata nella clausola catch dell'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0883a-116">The name of the local variable declared in the catch clause for the exception.</span>
          </span>
          <span data-ttu-id="0883a-117">Ciò è facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0883a-117">This is optional.</span>
          </span>
        </param>
        <param name="catchExceptionType">
          <span data-ttu-id="0883a-118">
            <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di eccezione da intercettare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0883a-118">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of exception to catch.</span>
          </span>
        </param>
        <param name="statements">
          <span data-ttu-id="0883a-119">Matrice di oggetti <see cref="T:System.CodeDom.CodeStatement" /> che rappresentano il contenuto del blocco catch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0883a-119">An array of <see cref="T:System.CodeDom.CodeStatement" /> objects that represent the contents of the catch block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0883a-120">Consente di inizializzare una nuova istanza della classe <see cref="T:System.CodeDom.CodeCatchClause" /> utilizzando il nome della variabile locale per l'eccezione, il tipo di eccezione e l'insieme di istruzioni specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0883a-120">Initializes a new instance of the <see cref="T:System.CodeDom.CodeCatchClause" /> class using the specified local variable name for the exception, exception type and statement collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatchExceptionType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference CatchExceptionType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference CatchExceptionType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeCatchClause.CatchExceptionType" />
      <MemberSignature Language="VB.NET" Value="Public Property CatchExceptionType As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ CatchExceptionType { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0883a-121">Ottiene o imposta il tipo di eccezione da gestire con il blocco catch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0883a-121">Gets or sets the type of the exception to handle with the catch block.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0883a-122">
            <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di eccezione da gestire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0883a-122">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of the exception to handle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0883a-123">Se un valore per questa proprietà non è specificato, il valore predefinito di questa proprietà sarà <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="0883a-123">If a value for this property is not specified, the value of this property defaults to <xref:System.Exception>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeParameterDeclarationExpression" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public string LocalName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeCatchClause.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LocalName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0883a-124">Ottiene o imposta il nome della variabile dell'eccezione gestita dalla clausola <see langword="catch" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0883a-124">Gets or sets the variable name of the exception that the <see langword="catch" /> clause handles.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0883a-125">Nome della variabile dell'eccezione gestita dalla clausola <see langword="catch" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0883a-125">The name for the exception variable that the <see langword="catch" /> clause handles.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0883a-126">Questa proprietà specifica il nome della variabile locale per l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="0883a-126">This property specifies the name of the local variable for the exception.</span></span> <span data-ttu-id="0883a-127">La variabile locale è facoltativa.</span><span class="sxs-lookup"><span data-stu-id="0883a-127">This local variable is optional.</span></span> <span data-ttu-id="0883a-128">Per impostazione predefinita, la clausola non dispone di questa variabile.</span><span class="sxs-lookup"><span data-stu-id="0883a-128">By default, the clause does not have this variable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Statements">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeStatementCollection Statements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeStatementCollection Statements" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeCatchClause.Statements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Statements As CodeStatementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeStatementCollection ^ Statements { System::CodeDom::CodeStatementCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeStatementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0883a-129">Ottiene le istruzioni all'interno del blocco catch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0883a-129">Gets the statements within the catch block.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0883a-130">
            <see cref="T:System.CodeDom.CodeStatementCollection" /> contenente le istruzioni all'interno del blocco catch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0883a-130">A <see cref="T:System.CodeDom.CodeStatementCollection" /> containing the statements within the catch block.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
      </Docs>
    </Member>
  </Members>
</Type>