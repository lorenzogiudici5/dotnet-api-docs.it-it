<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeTryCatchFinallyStatement.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac588ea370cfafded347e07036eccbae3db7529bc66.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88ea370cfafded347e07036eccbae3db7529bc66</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeTryCatchFinallyStatement">
          <source>Represents a <ph id="ph1">&lt;see langword="try" /&gt;</ph> block with any number of <ph id="ph2">&lt;see langword="catch" /&gt;</ph> clauses and, optionally, a <ph id="ph3">&lt;see langword="finally" /&gt;</ph> block.</source>
          <target state="translated">Rappresenta un blocco <ph id="ph1">&lt;see langword="try" /&gt;</ph> con un numero qualsiasi di clausole <ph id="ph2">&lt;see langword="catch" /&gt;</ph> ed eventualmente un blocco <ph id="ph3">&lt;see langword="finally" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTryCatchFinallyStatement">
          <source><ph id="ph1">&lt;xref:System.CodeDom.CodeTryCatchFinallyStatement&gt;</ph> can be used to represent a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block of code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeTryCatchFinallyStatement&gt;</ph> può essere utilizzato per rappresentare un <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> blocco di codice.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTryCatchFinallyStatement">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeTryCatchFinallyStatement.TryStatements%2A&gt;</ph> property contains the statements to execute within a <ph id="ph2">`try`</ph> block.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.CodeDom.CodeTryCatchFinallyStatement.TryStatements%2A&gt;</ph> proprietà contiene le istruzioni da eseguire all'interno di un <ph id="ph2">`try`</ph> blocco.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTryCatchFinallyStatement">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeTryCatchFinallyStatement.CatchClauses%2A&gt;</ph> property contains the <ph id="ph2">`catch`</ph> clauses to handle caught exceptions.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.CodeDom.CodeTryCatchFinallyStatement.CatchClauses%2A&gt;</ph> proprietà contiene il <ph id="ph2">`catch`</ph> clausole per gestire le eccezioni intercettate.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTryCatchFinallyStatement">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeTryCatchFinallyStatement.FinallyStatements%2A&gt;</ph> property contains the statements to execute within a <ph id="ph2">`finally`</ph> block.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.CodeDom.CodeTryCatchFinallyStatement.FinallyStatements%2A&gt;</ph> proprietà contiene le istruzioni da eseguire all'interno di un <ph id="ph2">`finally`</ph> blocco.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTryCatchFinallyStatement">
          <source>Not all languages support <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> blocks.</source>
          <target state="translated">Non tutti i linguaggi supportano <ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph> blocchi.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTryCatchFinallyStatement">
          <source>Call the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.GeneratorSupport.TryCatchStatements?displayProperty=nameWithType&gt;</ph> flag to determine whether a code generator supports <ph id="ph3">`try`</ph><ph id="ph4">/</ph><ph id="ph5">`catch`</ph> blocks.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A&gt;</ph> metodo con il <ph id="ph2">&lt;xref:System.CodeDom.Compiler.GeneratorSupport.TryCatchStatements?displayProperty=nameWithType&gt;</ph> flag per determinare se un generatore di codice supporta <ph id="ph3">`try`</ph> <ph id="ph4">/</ph> <ph id="ph5">`catch`</ph> blocchi.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTryCatchFinallyStatement">
          <source>The following example code demonstrates use of a <ph id="ph1">&lt;xref:System.CodeDom.CodeTryCatchFinallyStatement&gt;</ph> to define a try...catch...finally statement for exception handling.</source>
          <target state="translated">Esempio di codice seguente illustra l'uso di un <ph id="ph1">&lt;xref:System.CodeDom.CodeTryCatchFinallyStatement&gt;</ph> per definire un blocco try... catch... finally istruzione per la gestione delle eccezioni.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeTryCatchFinallyStatement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTryCatchFinallyStatement" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTryCatchFinallyStatement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTryCatchFinallyStatement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTryCatchFinallyStatement" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTryCatchFinallyStatement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTryCatchFinallyStatement.#ctor(System.CodeDom.CodeStatement[],System.CodeDom.CodeCatchClause[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> objects that indicate the statements to try.</source>
          <target state="translated">Matrice di oggetti <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> che indicano le istruzioni da provare.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTryCatchFinallyStatement.#ctor(System.CodeDom.CodeStatement[],System.CodeDom.CodeCatchClause[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCatchClause" /&gt;</ph> objects that indicate the clauses to catch.</source>
          <target state="translated">Matrice di oggetti <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCatchClause" /&gt;</ph> che indicano le clausole da intercettare.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTryCatchFinallyStatement.#ctor(System.CodeDom.CodeStatement[],System.CodeDom.CodeCatchClause[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTryCatchFinallyStatement" /&gt;</ph> class using the specified statements for try and catch clauses.</source>
          <target state="translated">Consente l'inizializzazione di una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTryCatchFinallyStatement" /&gt;</ph> con le istruzioni specificate per le clausole try e catch.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTryCatchFinallyStatement.#ctor(System.CodeDom.CodeStatement[],System.CodeDom.CodeCatchClause[],System.CodeDom.CodeStatement[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> objects that indicate the statements to try.</source>
          <target state="translated">Matrice di oggetti <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> che indicano le istruzioni da provare.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTryCatchFinallyStatement.#ctor(System.CodeDom.CodeStatement[],System.CodeDom.CodeCatchClause[],System.CodeDom.CodeStatement[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCatchClause" /&gt;</ph> objects that indicate the clauses to catch.</source>
          <target state="translated">Matrice di oggetti <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCatchClause" /&gt;</ph> che indicano le clausole da intercettare.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTryCatchFinallyStatement.#ctor(System.CodeDom.CodeStatement[],System.CodeDom.CodeCatchClause[],System.CodeDom.CodeStatement[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> objects that indicate the finally statements to use.</source>
          <target state="translated">Matrice di oggetti <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> che indicano le istruzioni finally da utilizzare.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTryCatchFinallyStatement.#ctor(System.CodeDom.CodeStatement[],System.CodeDom.CodeCatchClause[],System.CodeDom.CodeStatement[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTryCatchFinallyStatement" /&gt;</ph> class using the specified statements for try, catch clauses, and finally statements.</source>
          <target state="translated">Consente l'inizializzazione di una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTryCatchFinallyStatement" /&gt;</ph> con le istruzioni specificate per le clausole try e catch e le istruzioni finally.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeTryCatchFinallyStatement.CatchClauses">
          <source>Gets the catch clauses to use.</source>
          <target state="translated">Restituisce le clausole catch da utilizzare.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTryCatchFinallyStatement.CatchClauses">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCatchClauseCollection" /&gt;</ph> that indicates the catch clauses to use.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCatchClauseCollection" /&gt;</ph> che indica le clausole catch da utilizzare.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeTryCatchFinallyStatement.FinallyStatements">
          <source>Gets the finally statements to use.</source>
          <target state="translated">Restituisce le istruzioni finally da utilizzare.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTryCatchFinallyStatement.FinallyStatements">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph> that indicates the finally statements.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph> che indica le istruzioni finally.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeTryCatchFinallyStatement.TryStatements">
          <source>Gets the statements to try.</source>
          <target state="translated">Restituisce le istruzioni da provare.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTryCatchFinallyStatement.TryStatements">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph> that indicates the statements to try.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph> che indica le istruzioni da provare.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>