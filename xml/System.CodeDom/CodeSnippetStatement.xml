<Type Name="CodeSnippetStatement" FullName="System.CodeDom.CodeSnippetStatement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3d7525dc7049296dbadc04e5baa75170b9fae9db" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeSnippetStatement : System.CodeDom.CodeStatement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeSnippetStatement extends System.CodeDom.CodeStatement" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeSnippetStatement" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeSnippetStatement&#xA;Inherits CodeStatement" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeSnippetStatement : System::CodeDom::CodeStatement" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeStatement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ad7fb-101">Rappresenta un'istruzione con un frammento di codice letterale.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ad7fb-101">Represents a statement using a literal code fragment.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7fb-102"><xref:System.CodeDom.CodeSnippetStatement> può rappresentare un'istruzione che utilizza un frammento di codice letterale che verrà incluse direttamente nell'origine senza modifiche.</span><span class="sxs-lookup"><span data-stu-id="ad7fb-102"><xref:System.CodeDom.CodeSnippetStatement> can represent a statement using a literal code fragment that will be included directly in the source without modification.</span></span>  
  
 <span data-ttu-id="ad7fb-103">Oggetto <xref:System.CodeDom.CodeSnippetStatement> archivia una sezione di codice esattamente nel formato originale come stringa.</span><span class="sxs-lookup"><span data-stu-id="ad7fb-103">A <xref:System.CodeDom.CodeSnippetStatement> stores a section of code exactly in its original format as a string.</span></span> <span data-ttu-id="ad7fb-104">Il modello CodeDOM non converte i frammenti di codice letterale.</span><span class="sxs-lookup"><span data-stu-id="ad7fb-104">The CodeDOM does not translate literal code fragments.</span></span> <span data-ttu-id="ad7fb-105">Frammenti di codice letterale vengono archiviati e restituiti nel loro formato originale.</span><span class="sxs-lookup"><span data-stu-id="ad7fb-105">Literal code fragments are stored and output in their original format.</span></span> <span data-ttu-id="ad7fb-106">Gli oggetti codeDOM che contengono codice letterale sono forniti per consentire agli sviluppatori possono incapsulare il codice che è già nella lingua di destinazione.</span><span class="sxs-lookup"><span data-stu-id="ad7fb-106">CodeDOM objects that contain literal code are provided so developers can encapsulate code that is already in the target language.</span></span>  
  
 <span data-ttu-id="ad7fb-107">Il <xref:System.CodeDom.CodeSnippetStatement.Value%2A> proprietà contiene il codice effettivo per l'istruzione del frammento.</span><span class="sxs-lookup"><span data-stu-id="ad7fb-107">The <xref:System.CodeDom.CodeSnippetStatement.Value%2A> property contains the literal code for the snippet statement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad7fb-108">Nell'esempio seguente crea un'istanza di <xref:System.CodeDom.CodeSnippetStatement> classe utilizzando un frammento di codice letterale.</span><span class="sxs-lookup"><span data-stu-id="ad7fb-108">The following example creates an instance of the <xref:System.CodeDom.CodeSnippetStatement> class using a literal code fragment.</span></span> <span data-ttu-id="ad7fb-109">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.CodeDom.CodeRegionDirective> classe.</span><span class="sxs-lookup"><span data-stu-id="ad7fb-109">This code example is part of a larger example provided for the <xref:System.CodeDom.CodeRegionDirective> class.</span></span>  
  
 [!code-csharp[System.CodeDom.CodeDirectives#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/CS/codedirective.cs#16)]
 [!code-vb[System.CodeDom.CodeDirectives#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/VB/codedirective.vb#16)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ad7fb-110">Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeSnippetStatement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad7fb-110">Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetStatement" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeSnippetStatement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeSnippetStatement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeSnippetStatement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ad7fb-111">Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeSnippetStatement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad7fb-111">Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetStatement" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeSnippetStatement (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeSnippetStatement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeSnippetStatement(System::String ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ad7fb-112">Frammento di codice letterale dell'istruzione da rappresentare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad7fb-112">The literal code fragment of the statement to represent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad7fb-113">Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeSnippetStatement" /> con il frammento di codice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad7fb-113">Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetStatement" /> class using the specified code fragment.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ad7fb-114">Nell'esempio seguente crea un'istanza di <xref:System.CodeDom.CodeSnippetStatement> classe utilizzando un frammento di codice letterale.</span><span class="sxs-lookup"><span data-stu-id="ad7fb-114">The following example creates an instance of the <xref:System.CodeDom.CodeSnippetStatement> class using a literal code fragment.</span></span> <span data-ttu-id="ad7fb-115">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.CodeDom.CodeRegionDirective> classe.</span><span class="sxs-lookup"><span data-stu-id="ad7fb-115">This code example is part of a larger example provided for the <xref:System.CodeDom.CodeRegionDirective> class.</span></span>  
  
 [!code-csharp[System.CodeDom.CodeDirectives#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/CS/codedirective.cs#16)]
 [!code-vb[System.CodeDom.CodeDirectives#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/VB/codedirective.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeSnippetStatement.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ad7fb-116">Ottiene o imposta l'istruzione con il frammento di codice letterale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad7fb-116">Gets or sets the literal code fragment statement.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ad7fb-117">Istruzione con il frammento di codice letterale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad7fb-117">The literal code fragment statement.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>