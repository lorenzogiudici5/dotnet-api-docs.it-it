<Type Name="ITextRangeProvider" FullName="System.Windows.Automation.Provider.ITextRangeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1c256a42d97673f3bf6bd6fea456b5621c699ebe" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36372970" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITextRangeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITextRangeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ITextRangeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITextRangeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITextRangeProvider" />
  <TypeSignature Language="F#" Value="type ITextRangeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("5347ad7b-c355-46f8-aff5-909033582f63")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3b3d3-101">Espone metodi e proprietà per supportare l'accesso client di automazione interfaccia utente a un'estensione di testo continuo in un contenitore di testo che implementa <see cref="T:System.Windows.Automation.Provider.ITextProvider" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b3d3-101">Exposes methods and properties to support UI Automation client access to a span of continuous text in a text container that implements <see cref="T:System.Windows.Automation.Provider.ITextProvider" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b3d3-102">Implementato su un provider di automazione interfaccia utente che deve supportare il <xref:System.Windows.Automation.TextPattern> pattern di controllo.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.TextPattern> control pattern.</span></span>  
  
 <span data-ttu-id="3b3d3-103">Un <xref:System.Windows.Automation.Text.TextPatternRange> può rappresentare un punto di inserimento, un subset o tutto il testo in un <xref:System.Windows.Automation.TextPattern> contenitore.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-103">A <xref:System.Windows.Automation.Text.TextPatternRange> can represent an insertion point, a subset, or all of the text in a <xref:System.Windows.Automation.TextPattern> container.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.Text.TextPatternRange" />
  </Docs>
  <Members>
    <Member MemberName="AddToSelection">
      <MemberSignature Language="C#" Value="public void AddToSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToSelection();" />
      <MemberSignature Language="F#" Value="abstract member AddToSelection : unit -&gt; unit" Usage="iTextRangeProvider.AddToSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3b3d3-104">Aggiunge elementi alla raccolta di testo evidenziato in un contenitore di testo che supporta selezioni multiple non contigue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-104">Adds to the collection of highlighted text in a text container that supports multiple, disjoint selections.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b3d3-105">Nell'area della nuova selezione si sposta il punto di inserimento.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-105">The text insertion point moves to the area of the new selection.</span></span>  
  
 <span data-ttu-id="3b3d3-106">Fornire un intervallo di testo degenerato sposta il punto di inserimento.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-106">Providing a degenerate text range moves the insertion point.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3b3d3-107">Se il provider di testo non supporta le selezioni multiple non contigue (ovvero, <see cref="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" /> deve avere un valore pari a <see langword="Multiple" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-107">If text provider does not support multiple, disjoint selections (that is, <see cref="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" /> must have a value of <see langword="Multiple" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Windows.Automation.Provider.ITextRangeProvider" Usage="iTextRangeProvider.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3b3d3-108">Restituisce un nuovo oggetto <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> identico all'oggetto <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> originale che eredita tutte le proprietà dell'originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-108">Returns a new <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> identical to the original <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> and inheriting all properties of the original.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b3d3-109">Nuovo intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-109">The new text range.</span>
          </span>
          <span data-ttu-id="3b3d3-110">Un riferimento Null (<see langword="Nothing" /> in Visual Basic) non viene mai restituito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-110">A null reference (<see langword="Nothing" /> in Visual Basic) is never returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b3d3-111">Il nuovo intervallo può essere modificato in modo indipendente dall'originale.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-111">The new range can be manipulated independently from the original.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public bool Compare (System.Windows.Automation.Provider.ITextRangeProvider range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Compare(class System.Windows.Automation.Provider.ITextRangeProvider range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (range As ITextRangeProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Compare(System::Windows::Automation::Provider::ITextRangeProvider ^ range);" />
      <MemberSignature Language="F#" Value="abstract member Compare : System.Windows.Automation.Provider.ITextRangeProvider -&gt; bool" Usage="iTextRangeProvider.Compare range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Windows.Automation.Provider.ITextRangeProvider" />
      </Parameters>
      <Docs>
        <param name="range">
          <span data-ttu-id="3b3d3-112">Intervallo di testo da confrontare</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-112">A text range to compare</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b3d3-113">Restituisce un valore che indica se l'estensione (dall'endpoint <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> all'endpoint <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" />) di un intervallo di testo corrisponde a un altro intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-113">Returns a value that indicates whether the span (the <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> endpoint to the <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint) of a text range is the same as another text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b3d3-114">
            <see langword="true" /> se l'ampiezza di entrambi gli intervalli di testo è identica; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-114">
              <see langword="true" /> if the span of both text ranges is identical; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b3d3-115">Se l'intervallo confrontato non proviene dallo stesso provider di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-115">If the range being compared does not come from the same text provider.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CompareEndpoints">
      <MemberSignature Language="C#" Value="public int CompareEndpoints (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Provider.ITextRangeProvider targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareEndpoints(valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, class System.Windows.Automation.Provider.ITextRangeProvider targetRange, valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareEndpoints (endpoint As TextPatternRangeEndpoint, targetRange As ITextRangeProvider, targetEndpoint As TextPatternRangeEndpoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareEndpoints(System::Windows::Automation::Text::TextPatternRangeEndpoint endpoint, System::Windows::Automation::Provider::ITextRangeProvider ^ targetRange, System::Windows::Automation::Text::TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="F#" Value="abstract member CompareEndpoints : System.Windows.Automation.Text.TextPatternRangeEndpoint * System.Windows.Automation.Provider.ITextRangeProvider * System.Windows.Automation.Text.TextPatternRangeEndpoint -&gt; int" Usage="iTextRangeProvider.CompareEndpoints (endpoint, targetRange, targetEndpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <Parameter Name="targetRange" Type="System.Windows.Automation.Provider.ITextRangeProvider" />
        <Parameter Name="targetEndpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">
          <span data-ttu-id="3b3d3-116">Endpoint <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> o <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> del chiamante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-116">The <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> or <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint of the caller.</span>
          </span>
        </param>
        <param name="targetRange">
          <span data-ttu-id="3b3d3-117">Intervallo di destinazione per il confronto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-117">The target range for comparison.</span>
          </span>
        </param>
        <param name="targetEndpoint">
          <span data-ttu-id="3b3d3-118">Endpoint <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> o <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> della destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-118">The <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> or <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint of the target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b3d3-119">Restituisce un valore che specifica se due intervalli di testo presentano endpoint identici.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-119">Returns a value that specifies whether two text ranges have identical endpoints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b3d3-120">Restituisce un valore negativo se l'endpoint del chiamante si trova nel testo prima dell'endpoint di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-120">Returns a negative value if the caller's endpoint occurs earlier in the text than the target endpoint.</span>
          </span>
          <span data-ttu-id="3b3d3-121">Restituisce zero se l'endpoint del chiamante è nella stessa posizione dell'endpoint di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-121">Returns zero if the caller's endpoint is at the same location as the target endpoint.</span>
          </span>
          <span data-ttu-id="3b3d3-122">Restituisce un valore positivo se l'endpoint del chiamante si trova nel testo dopo l'endpoint di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-122">Returns a positive value if the caller's endpoint occurs later in the text than the target endpoint.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b3d3-123">Se <paramref name="targetRange" /> proviene da un provider di testo diverso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-123">If <paramref name="targetRange" /> is from a different text provider.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExpandToEnclosingUnit">
      <MemberSignature Language="C#" Value="public void ExpandToEnclosingUnit (System.Windows.Automation.Text.TextUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExpandToEnclosingUnit(valuetype System.Windows.Automation.Text.TextUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandToEnclosingUnit (unit As TextUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandToEnclosingUnit(System::Windows::Automation::Text::TextUnit unit);" />
      <MemberSignature Language="F#" Value="abstract member ExpandToEnclosingUnit : System.Windows.Automation.Text.TextUnit -&gt; unit" Usage="iTextRangeProvider.ExpandToEnclosingUnit unit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Windows.Automation.Text.TextUnit" />
      </Parameters>
      <Docs>
        <param name="unit">
          <span data-ttu-id="3b3d3-124">Unità testuale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-124">The textual unit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b3d3-125">Espande l'intervallo di testo all'unità di testo specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-125">Expands the text range to the specified text unit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b3d3-126">Se l'intervallo è già presente una quantità esatta delle unità di misura specificata e rimane invariato.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-126">If the range is already an exact quantity of the specified units then it remains unchanged.</span></span>  
  
 <span data-ttu-id="3b3d3-127">Non vi è una serie di passaggi coinvolti dietro le quinte affinché il <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> metodo venga eseguito correttamente.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-127">There is a series of steps are involved behind the scenes in order for the <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> method to execute successfully.</span></span>  
  
1.  <span data-ttu-id="3b3d3-128">L'intervallo di testo viene normalizzato, ovvero viene compresso in un intervallo degenerato all'endpoint <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> . Ciò rende superfluo l'endpoint <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> .</span><span class="sxs-lookup"><span data-stu-id="3b3d3-128">The text range is normalized; that is, the text range is collapsed to a degenerate range at the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, which makes the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluous.</span></span> <span data-ttu-id="3b3d3-129">Questo passaggio è necessario rimuovere l'ambiguità nei casi in cui un intervallo di testo si estenda `unit` limiti, ad esempio "{l'U} RL [ https://www.microsoft.com/ ](https://www.microsoft.com/) è incorporato nel testo" dove "{" e "}" rappresentano il testo endpoint dell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-129">This step is necessary to remove ambiguity in situations where a text range spans `unit` boundaries; for example, "{The U}RL [https://www.microsoft.com/](https://www.microsoft.com/) is embedded in text" where "{" and "}" are the text range endpoints.</span></span>  
  
2.  <span data-ttu-id="3b3d3-130">L'intervallo risultante viene spostato indietro in <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> all'inizio del limite `unit` richiesto.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-130">The resulting range is moved backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> to the beginning of the requested `unit` boundary.</span></span>  
  
3.  <span data-ttu-id="3b3d3-131">L'intervallo viene spostato avanti o indietro in <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> per il numero richiesto di limiti `unit`.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-131">The range is moved forward or backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> by the requested number of `unit` boundaries.</span></span>  
  
4.  <span data-ttu-id="3b3d3-132">L'intervallo viene quindi espanso dallo stato di intervallo degenerato spostando l'endpoint <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> di un limite `unit` richiesto.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-132">The range is then expanded from a degenerate range state by moving the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint by one requested `unit` boundary.</span></span>  
  
 <span data-ttu-id="3b3d3-133">![Regolazioni di intervallo mediante Move ed ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "regolazioni di intervallo mediante Move ed ExpandToEnclosingUnit")</span><span class="sxs-lookup"><span data-stu-id="3b3d3-133">![Range adjustments by Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Range adjustments by Move & ExpandToEnclosingUnit")</span></span>  
<span data-ttu-id="3b3d3-134">Esempi di regolazione di un intervallo di testo per Move() ed ExpandToEnclosingUnit()</span><span class="sxs-lookup"><span data-stu-id="3b3d3-134">Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3b3d3-135">Questi passaggi sono necessari poiché è comune per un lettore di schermata per leggere un completa parola, frase o un paragrafo intero al punto di inserimento o qualsiasi posizione del cursore virtuale.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-135">These steps are necessary since it is common for a screen reader to read out a full word, sentence, or entire paragraph at the insertion point or any virtual cursor position.</span></span>  
  
 <span data-ttu-id="3b3d3-136"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> rispetta il testo nascosto sia visibile.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-136"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="3b3d3-137"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> rinvia al successivo più grande <xref:System.Windows.Automation.Text.TextUnit> supportato se il dato <xref:System.Windows.Automation.Text.TextUnit> non è supportata dal controllo.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-137"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> defers to the next largest <xref:System.Windows.Automation.Text.TextUnit> supported if the given <xref:System.Windows.Automation.Text.TextUnit> is not supported by the control.</span></span>  
  
 <span data-ttu-id="3b3d3-138">L'ordine, da unità più piccolo al più grande, è elencato di seguito.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-138">The order, from smallest unit to largest, is listed below.</span></span>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Character>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Format>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Word>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Line>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Paragraph>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Page>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Document>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAttribute">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider FindAttribute (int attribute, object value, bool backward);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider FindAttribute(int32 attribute, object value, bool backward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAttribute (attribute As Integer, value As Object, backward As Boolean) As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ FindAttribute(int attribute, System::Object ^ value, bool backward);" />
      <MemberSignature Language="F#" Value="abstract member FindAttribute : int * obj * bool -&gt; System.Windows.Automation.Provider.ITextRangeProvider" Usage="iTextRangeProvider.FindAttribute (attribute, value, backward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="backward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="3b3d3-139">Attributo da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-139">The attribute to search for.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="3b3d3-140">Valore dell'attributo da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-140">The attribute value to search for.</span>
          </span>
          <span data-ttu-id="3b3d3-141">Questo valore deve corrispondere al tipo specificato per l'attributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-141">This value must match the type specified for the attribute.</span>
          </span>
        </param>
        <param name="backward">
          <span data-ttu-id="3b3d3-142">
            <see langword="true" /> se deve essere restituito l'ultimo intervallo di testo invece del primo; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-142">
              <see langword="true" /> if the last occurring text range should be returned instead of the first; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b3d3-143">Restituisce un sottoinsieme di intervallo di testo che presenta il valore dell'attributo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-143">Returns a text range subset that has the specified attribute value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b3d3-144">Intervallo di testo che presenta un attributo e un valore di attributo corrispondenti; in caso contrario, Null (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-144">A text range having a matching attribute and attribute value; otherwise null (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b3d3-145">Non vi è alcuna differenza tra il testo nascosto e visibile.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-145">There is no differentiation between hidden and visible text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindText">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider FindText (string text, bool backward, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider FindText(string text, bool backward, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindText (text As String, backward As Boolean, ignoreCase As Boolean) As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ FindText(System::String ^ text, bool backward, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member FindText : string * bool * bool -&gt; System.Windows.Automation.Provider.ITextRangeProvider" Usage="iTextRangeProvider.FindText (text, backward, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="backward" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="3b3d3-146">Stringa di testo da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-146">The text string to search for.</span>
          </span>
        </param>
        <param name="backward">
          <span data-ttu-id="3b3d3-147">
            <see langword="true" /> se deve essere restituito l'ultimo intervallo di testo invece del primo; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-147">
              <see langword="true" /> if the last occurring text range should be returned instead of the first; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="3b3d3-148">
            <see langword="true" /> se è necessario ignorare la differenza tra maiuscole e minuscole; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-148">
              <see langword="true" /> if case should be ignored; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b3d3-149">Restituisce un sottoinsieme di intervallo di testo contenente il testo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-149">Returns a text range subset that contains the specified text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b3d3-150">Intervallo di testo corrispondente al testo specificato; in caso contrario, Null (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-150">A text range matching the specified text; otherwise null (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b3d3-151">Non vi è alcuna differenza tra il testo nascosto e visibile.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-151">There is no differentiation between hidden and visible text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeValue">
      <MemberSignature Language="C#" Value="public object GetAttributeValue (int attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAttributeValue(int32 attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttributeValue (attribute As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetAttributeValue(int attribute);" />
      <MemberSignature Language="F#" Value="abstract member GetAttributeValue : int -&gt; obj" Usage="iTextRangeProvider.GetAttributeValue attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="3b3d3-152">Attributo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-152">The text attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b3d3-153">Recupera il valore dell'attributo specificato nell'intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-153">Retrieves the value of the specified attribute across the text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b3d3-154">Recupera un oggetto che rappresenta il valore dell'attributo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-154">Retrieves an object representing the value of the specified attribute.</span>
          </span>
          <span data-ttu-id="3b3d3-155">Ad esempio, <c>GetAttributeValue(TextPattern.FontNameAttribute)</c> restituirebbe una stringa che rappresenta il nome del tipo di carattere dell'intervallo di testo, mentre <c>GetAttributeValue (TextPattern.IsItalicAttribute)</c> restituirebbe un valore di tipo <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-155">For example, <c>GetAttributeValue(TextPattern.FontNameAttribute)</c> would return a string that represents the font name of the text range while <c>GetAttributeValue(TextPattern.IsItalicAttribute)</c> would return a value of type <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="3b3d3-156">Restituisce <see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" /> se il valore dell'attributo specificato varia nell'intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-156">Returns <see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" /> if the value of the specified attribute varies over the text range.</span>
          </span>
          <span data-ttu-id="3b3d3-157">Restituisce <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> se l'attributo specificato non è supportato dal provider o dal controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-157">Returns <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> if the specified attribute is not supported by the provider or the control.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b3d3-158">Non vi è alcuna differenza tra il testo nascosto e visibile.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-158">There is no differentiation between hidden and visible text.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b3d3-159">Se l'attributo specificato non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-159">If the specified attribute is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoundingRectangles">
      <MemberSignature Language="C#" Value="public double[] GetBoundingRectangles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64[] GetBoundingRectangles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBoundingRectangles () As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ GetBoundingRectangles();" />
      <MemberSignature Language="F#" Value="abstract member GetBoundingRectangles : unit -&gt; double[]" Usage="iTextRangeProvider.GetBoundingRectangles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3b3d3-160">Recupera una raccolta di rettangoli di delimitazione per ogni riga di testo completamente o parzialmente visibile in un intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-160">Retrieves a collection of bounding rectangles for each fully or partially visible line of text in a text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b3d3-161">Una matrice di rettangoli di delimitazione per ogni riga di testo completa o parziale in un intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-161">An array of bounding rectangles for each full or partial line of text in a text range.</span>
          </span>
          <span data-ttu-id="3b3d3-162">Matrice vuota per un intervallo degenere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-162">An empty array for a degenerate range.</span>
          </span>
          <span data-ttu-id="3b3d3-163">Matrice vuota per un intervallo di testo che presenta coordinate di schermo che lo collocano completamente fuori dello schermo, al di fuori della visualizzazione o nascosto da una finestra sovrapposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-163">An empty array for a text range that has screen coordinates placing it completely off-screen, scrolled out of view, or obscured by an overlapping window.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple[] GetChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple[] GetChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetChildren" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildren () As IRawElementProviderSimple()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::Provider::IRawElementProviderSimple ^&gt; ^ GetChildren();" />
      <MemberSignature Language="F#" Value="abstract member GetChildren : unit -&gt; System.Windows.Automation.Provider.IRawElementProviderSimple[]" Usage="iTextRangeProvider.GetChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3b3d3-164">Recupera una raccolta di tutti gli oggetti incorporati che rientrano nell'intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-164">Retrieves a collection of all embedded objects that fall within the text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b3d3-165">Raccolta degli oggetti figlio che rientrano nell'intervallo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-165">A collection of child objects that fall within the range.</span>
          </span>
          <span data-ttu-id="3b3d3-166">Nella raccolta verranno inclusi anche gli oggetti figlio che si sovrappongono all'intervallo di testo ma non vi sono racchiusi completamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-166">Children that overlap with the text range but are not entirely enclosed by it will also be included in the collection.</span>
          </span>
          <span data-ttu-id="3b3d3-167">Restituisce una raccolta vuota se non sono presenti oggetti figlio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-167">Returns an empty collection if there are no child objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnclosingElement">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple GetEnclosingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple GetEnclosingElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnclosingElement () As IRawElementProviderSimple" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::IRawElementProviderSimple ^ GetEnclosingElement();" />
      <MemberSignature Language="F#" Value="abstract member GetEnclosingElement : unit -&gt; System.Windows.Automation.Provider.IRawElementProviderSimple" Usage="iTextRangeProvider.GetEnclosingElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3b3d3-168">Restituisce il controllo più interno che racchiude l'intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-168">Returns the innermost control that encloses the text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b3d3-169">Controllo contenitore, in genere il provider di testo che fornisce l'intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-169">The enclosing control, typically the text provider that supplies the text range.</span>
          </span>
          <span data-ttu-id="3b3d3-170">Se tuttavia il provider di testo supporta elementi figlio, quali tabelle o collegamenti ipertestuali, l'elemento contenitore potrebbe essere un discendente del provider di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-170">However, if the text provider supports child elements such as tables or hyperlinks, then the enclosing element could be a descendant of the text provider.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText (int maxLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText(int32 maxLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetText (maxLength As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetText(int maxLength);" />
      <MemberSignature Language="F#" Value="abstract member GetText : int -&gt; string" Usage="iTextRangeProvider.GetText maxLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxLength">
          <span data-ttu-id="3b3d3-171">Lunghezza massima della stringa da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-171">The maximum length of the string to return.</span>
          </span>
          <span data-ttu-id="3b3d3-172">Usare <c>-1</c> se non è richiesto alcun limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-172">Use <c>-1</c> if no limit is required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b3d3-173">Recupera il testo normale dell'intervallo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-173">Retrieves the plain text of the range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b3d3-174">Testo normale dell'intervallo di testo, probabilmente troncato all'oggetto <paramref name="maxLength" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-174">The plain text of the text range, possibly truncated at the specified <paramref name="maxLength" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b3d3-175"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> rispetta il testo nascosto sia visibile.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-175"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="3b3d3-176">Se `maxLength` è maggiore della lunghezza dell'intervallo di testo del chiamante, la stringa restituita sarà il testo normale dell'intervallo di testo.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-176">If `maxLength` is greater than the length of the text span of the caller, the string returned will be the plain text of the text range.</span></span>  
  
 <span data-ttu-id="3b3d3-177"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> non verranno influenzati dall'ordine degli endpoint nel flusso di testo. verrà sempre restituito il testo tra gli endpoint di inizio e di fine dell'intervallo di testo nell'ordine di flusso di testo logico.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-177"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> will not be affected by the order of endpoints in the text flow; it will always return the text between the Start and End endpoints of the text range in the logical text flow order.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b3d3-178">Se <paramref name="maxLength" /> è minore di -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-178">If <paramref name="maxLength" /> is less than -1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public int Move (System.Windows.Automation.Text.TextUnit unit, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Move(valuetype System.Windows.Automation.Text.TextUnit unit, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Move (unit As TextUnit, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Move(System::Windows::Automation::Text::TextUnit unit, int count);" />
      <MemberSignature Language="F#" Value="abstract member Move : System.Windows.Automation.Text.TextUnit * int -&gt; int" Usage="iTextRangeProvider.Move (unit, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Windows.Automation.Text.TextUnit" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unit">
          <span data-ttu-id="3b3d3-179">Limite di unità di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-179">The text unit boundary.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3b3d3-180">Numero di unità di testo da spostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-180">The number of text units to move.</span>
          </span>
          <span data-ttu-id="3b3d3-181">Un valore positivo consente di spostare l'intervallo di testo in avanti, un valore negativo consente di spostare l'intervallo di testo indietro e 0 non ha effetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-181">A positive value moves the text range forward, a negative value moves the text range backward, and 0 has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b3d3-182">Sposta l'intervallo di testo di un numero specificato di unità di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-182">Moves the text range the specified number of text units.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b3d3-183">Numero di unità effettivamente spostate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-183">The number of units actually moved.</span>
          </span>
          <span data-ttu-id="3b3d3-184">Può essere inferiore al numero richiesto se uno dei nuovi endpoint di intervallo di testo è maggiore o minore degli endpoint di <see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-184">This can be less than the number requested if either of the new text range endpoints is greater than or less than the <see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" /> endpoints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b3d3-185">Quando è necessario scorrere il contenuto di un intervallo di testo, per garantire una corretta esecuzione del metodo <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> è prevista una serie di passaggi dietro le quinte.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-185">When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> method to execute successfully.</span></span>  
  
1.  <span data-ttu-id="3b3d3-186">L'intervallo di testo viene normalizzato, ovvero viene compresso in un intervallo degenerato all'endpoint <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> . Ciò rende superfluo l'endpoint <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> .</span><span class="sxs-lookup"><span data-stu-id="3b3d3-186">The text range is normalized; that is, the text range is collapsed to a degenerate range at the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, which makes the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluous.</span></span> <span data-ttu-id="3b3d3-187">Questo passaggio è necessario rimuovere l'ambiguità nei casi in cui un intervallo di testo si estenda `unit` limiti, ad esempio "{l'U} RL [ https://www.microsoft.com/ ](https://www.microsoft.com/) è incorporato nel testo" dove "{" e "}" rappresentano il testo endpoint dell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-187">This step is necessary to remove ambiguity in situations where a text range spans `unit` boundaries; for example, "{The U}RL [https://www.microsoft.com/](https://www.microsoft.com/) is embedded in text" where "{" and "}" are the text range endpoints.</span></span>  
  
2.  <span data-ttu-id="3b3d3-188">L'intervallo risultante viene spostato indietro in <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> all'inizio del limite `unit` richiesto.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-188">The resulting range is moved backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> to the beginning of the requested `unit` boundary.</span></span>  
  
3.  <span data-ttu-id="3b3d3-189">L'intervallo viene spostato avanti o indietro in <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> per il numero richiesto di limiti `unit`.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-189">The range is moved forward or backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> by the requested number of `unit` boundaries.</span></span>  
  
4.  <span data-ttu-id="3b3d3-190">L'intervallo viene quindi espanso dallo stato di intervallo degenerato spostando l'endpoint <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> di un limite `unit` richiesto.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-190">The range is then expanded from a degenerate range state by moving the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint by one requested `unit` boundary.</span></span>  
  
 <span data-ttu-id="3b3d3-191">![Regolazioni di intervallo mediante Move ed ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "regolazioni di intervallo mediante Move ed ExpandToEnclosingUnit")</span><span class="sxs-lookup"><span data-stu-id="3b3d3-191">![Range adjustments by Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Range adjustments by Move & ExpandToEnclosingUnit")</span></span>  
<span data-ttu-id="3b3d3-192">Esempi di regolazione di un intervallo di testo per Move() ed ExpandToEnclosingUnit()</span><span class="sxs-lookup"><span data-stu-id="3b3d3-192">Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</span></span>  
  
 <span data-ttu-id="3b3d3-193">Il contenuto testuale (o testo interno) di un contenitore di testo o di un oggetto incorporato, ad esempio una cella di tabella o un collegamento ipertestuale, viene esposto come un flusso di testo continuo sia nella vista di controllo che nella visualizzazione del contenuto dell'albero di [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]. I limiti dell'oggetto vengono ignorati.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-193">The textual content (or inner text) of a text container and an embedded object, such as a hyperlink or table cell, is exposed as a single, continuous text stream in both the control view and the content view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] tree; object boundaries are ignored.</span></span>  
  
 <span data-ttu-id="3b3d3-194">![Intervalli di testo estesi da oggetti incorporati. ] (~/add/media/uia-textpattern-embeddedobjecttextranges.png "Intervalli di testo estesi da oggetti incorporati.")</span><span class="sxs-lookup"><span data-stu-id="3b3d3-194">![Text ranges spanned by embedded objects.](~/add/media/uia-textpattern-embeddedobjecttextranges.png "Text ranges spanned by embedded objects.")</span></span>  
<span data-ttu-id="3b3d3-195">Esempio di un flusso di testo con oggetti incorporati e le estensioni degli intervalli corrispondenti</span><span class="sxs-lookup"><span data-stu-id="3b3d3-195">Example of a text stream with embedded objects and their range spans</span></span>  
  
 <span data-ttu-id="3b3d3-196"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> rispetta il testo nascosto sia visibile.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-196"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="3b3d3-197"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> rinvia al successivo più grande <xref:System.Windows.Automation.Text.TextUnit> supportato se il dato <xref:System.Windows.Automation.Text.TextUnit> non è supportata dal controllo.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-197"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> defers to the next largest <xref:System.Windows.Automation.Text.TextUnit> supported if the given <xref:System.Windows.Automation.Text.TextUnit> is not supported by the control.</span></span>  
  
 <span data-ttu-id="3b3d3-198">L'ordine, da unità più piccolo al più grande, è elencato di seguito.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-198">The order, from smallest unit to largest, is listed below.</span></span>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Character>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Format>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Word>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Line>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Paragraph>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Page>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Document>  
  
 <span data-ttu-id="3b3d3-199">Il testo non viene modificato in alcun modo, l'intervallo di testo appena si estende su una parte diversa del testo.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-199">The text is not altered in any way, the text range just spans a different part of the text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndpointByRange">
      <MemberSignature Language="C#" Value="public void MoveEndpointByRange (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Provider.ITextRangeProvider targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveEndpointByRange(valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, class System.Windows.Automation.Provider.ITextRangeProvider targetRange, valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveEndpointByRange (endpoint As TextPatternRangeEndpoint, targetRange As ITextRangeProvider, targetEndpoint As TextPatternRangeEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveEndpointByRange(System::Windows::Automation::Text::TextPatternRangeEndpoint endpoint, System::Windows::Automation::Provider::ITextRangeProvider ^ targetRange, System::Windows::Automation::Text::TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="F#" Value="abstract member MoveEndpointByRange : System.Windows.Automation.Text.TextPatternRangeEndpoint * System.Windows.Automation.Provider.ITextRangeProvider * System.Windows.Automation.Text.TextPatternRangeEndpoint -&gt; unit" Usage="iTextRangeProvider.MoveEndpointByRange (endpoint, targetRange, targetEndpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <Parameter Name="targetRange" Type="System.Windows.Automation.Provider.ITextRangeProvider" />
        <Parameter Name="targetEndpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">
          <span data-ttu-id="3b3d3-200">Endpoint da spostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-200">The endpoint to move.</span>
          </span>
        </param>
        <param name="targetRange">
          <span data-ttu-id="3b3d3-201">Altro intervallo dallo stesso provider di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-201">Another range from the same text provider.</span>
          </span>
        </param>
        <param name="targetEndpoint">
          <span data-ttu-id="3b3d3-202">Un endpoint nell'altro intervallo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-202">An endpoint on the other range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b3d3-203">Sposta un endpoint di un intervallo di testo all'endpoint specificato di un secondo intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-203">Moves one endpoint of a text range to the specified endpoint of a second text range.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b3d3-204">Se l'endpoint spostato incrocia l'altro endpoint dell'intervallo di testo stesso, l'altro endpoint viene spostato, inoltre, comportando un intervallo degenerato e assicurando l'ordinamento corretto degli endpoint (vale a dire, <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> è sempre minore o uguale al <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End>).</span><span class="sxs-lookup"><span data-stu-id="3b3d3-204">If the endpoint being moved crosses the other endpoint of the same text range then that other endpoint is moved also, resulting in a degenerate range and ensuring the correct ordering of the endpoints (that is, <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> is always less than or equal to <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndpointByUnit">
      <MemberSignature Language="C#" Value="public int MoveEndpointByUnit (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Text.TextUnit unit, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveEndpointByUnit(valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, valuetype System.Windows.Automation.Text.TextUnit unit, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveEndpointByUnit (endpoint As TextPatternRangeEndpoint, unit As TextUnit, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int MoveEndpointByUnit(System::Windows::Automation::Text::TextPatternRangeEndpoint endpoint, System::Windows::Automation::Text::TextUnit unit, int count);" />
      <MemberSignature Language="F#" Value="abstract member MoveEndpointByUnit : System.Windows.Automation.Text.TextPatternRangeEndpoint * System.Windows.Automation.Text.TextUnit * int -&gt; int" Usage="iTextRangeProvider.MoveEndpointByUnit (endpoint, unit, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <Parameter Name="unit" Type="System.Windows.Automation.Text.TextUnit" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="endpoint">
          <span data-ttu-id="3b3d3-205">Endpoint da spostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-205">The endpoint to move.</span>
          </span>
        </param>
        <param name="unit">
          <span data-ttu-id="3b3d3-206">Unità testuale per lo spostamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-206">The textual unit for moving.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3b3d3-207">Numero di unità da spostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-207">The number of units to move.</span>
          </span>
          <span data-ttu-id="3b3d3-208">Un valore positivo comporta lo spostamento in avanti dell'endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-208">A positive value moves the endpoint forward.</span>
          </span>
          <span data-ttu-id="3b3d3-209">Un valore negativo comporta lo spostamento indietro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-209">A negative value moves backward.</span>
          </span>
          <span data-ttu-id="3b3d3-210">Un valore pari a 0 non ha effetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-210">A value of 0 has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b3d3-211">Sposta un endpoint dell'intervallo di testo del numero specificato di unità di testo nell'intervallo del documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-211">Moves one endpoint of the text range the specified number of text units within the document range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b3d3-212">Numero di unità effettivamente spostate, che può essere inferiore al numero richiesto se con lo spostamento degli endpoint si raggiunge l'inizio o la fine del documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-212">The number of units actually moved, which can be less than the number requested if moving the endpoint runs into the beginning or end of the document.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b3d3-213">Quando è necessario scorrere il contenuto di un intervallo di testo, per garantire una corretta esecuzione del metodo <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> è prevista una serie di passaggi dietro le quinte.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-213">When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> method to execute successfully.</span></span>  
  
1.  <span data-ttu-id="3b3d3-214">L'intervallo di testo viene normalizzato, ovvero viene compresso in un intervallo degenerato all'endpoint <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> . Ciò rende superfluo l'endpoint <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> .</span><span class="sxs-lookup"><span data-stu-id="3b3d3-214">The text range is normalized; that is, the text range is collapsed to a degenerate range at the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, which makes the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluous.</span></span> <span data-ttu-id="3b3d3-215">Questo passaggio è necessario rimuovere l'ambiguità nei casi in cui un intervallo di testo si estenda `unit` limiti, ad esempio "{l'U} RL [ https://www.microsoft.com/ ](https://www.microsoft.com/) è incorporato nel testo" dove "{" e "}" rappresentano il testo endpoint dell'intervallo.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-215">This step is necessary to remove ambiguity in situations where a text range spans `unit` boundaries; for example, "{The U}RL [https://www.microsoft.com/](https://www.microsoft.com/) is embedded in text" where "{" and "}" are the text range endpoints.</span></span>  
  
2.  <span data-ttu-id="3b3d3-216">L'intervallo risultante viene spostato indietro in <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> all'inizio del limite `unit` richiesto.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-216">The resulting range is moved backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> to the beginning of the requested `unit` boundary.</span></span>  
  
3.  <span data-ttu-id="3b3d3-217">L'intervallo viene quindi espanso dallo stato di intervallo degenerato spostando l'endpoint <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> di un limite `unit` richiesto.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-217">The range is then expanded from a degenerate range state by moving the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint by one requested `unit` boundary.</span></span>  
  
 <span data-ttu-id="3b3d3-218">![Regolazioni di intervallo mediante Move ed ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "regolazioni di intervallo mediante Move ed ExpandToEnclosingUnit")</span><span class="sxs-lookup"><span data-stu-id="3b3d3-218">![Range adjustments by Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Range adjustments by Move & ExpandToEnclosingUnit")</span></span>  
<span data-ttu-id="3b3d3-219">Esempi di regolazione di un intervallo di testo per Move() ed ExpandToEnclosingUnit()</span><span class="sxs-lookup"><span data-stu-id="3b3d3-219">Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</span></span>  
  
 <span data-ttu-id="3b3d3-220"><xref:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit%2A> rinvia al successivo più grande <xref:System.Windows.Automation.Text.TextUnit> supportato se il dato <xref:System.Windows.Automation.Text.TextUnit> non è supportata dal controllo.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-220"><xref:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit%2A> defers to the next largest <xref:System.Windows.Automation.Text.TextUnit> supported if the given <xref:System.Windows.Automation.Text.TextUnit> is not supported by the control.</span></span>  
  
 <span data-ttu-id="3b3d3-221">L'ordine, da unità più piccolo al più grande, è elencato di seguito.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-221">The order, from smallest unit to largest, is listed below.</span></span>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Character>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Format>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Word>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Line>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Paragraph>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Page>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Document>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFromSelection">
      <MemberSignature Language="C#" Value="public void RemoveFromSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFromSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveFromSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveFromSelection();" />
      <MemberSignature Language="F#" Value="abstract member RemoveFromSelection : unit -&gt; unit" Usage="iTextRangeProvider.RemoveFromSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3b3d3-222">Rimuove una sezione evidenziata del testo, corrispondente agli endpoint <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> e <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> del chiamante, dalla raccolta di testo evidenziato in un contenitore di testo che supporta selezioni multiple non contigue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-222">Removes a highlighted section of text, corresponding to the caller's <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> and <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoints, from the collection of highlighted text in a text container that supports multiple, disjoint selections.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b3d3-223">Il punto di inserimento sposterà nell'area dell'evidenziazione rimossa.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-223">The text insertion point will move to the area of the removed highlight.</span></span>  
  
 <span data-ttu-id="3b3d3-224">Fornire un intervallo di testo degenerato sposterà il punto di inserimento.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-224">Providing a degenerate text range will move the insertion point.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3b3d3-225">Se il provider di testo non supporta le selezioni multiple non contigue (ad esempio, <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> deve avere un valore pari a <see langword="Multiple" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-225">If text provider does not support multiple, disjoint selections (for example, <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> must have a value of <see langword="Multiple" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ScrollIntoView">
      <MemberSignature Language="C#" Value="public void ScrollIntoView (bool alignToTop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScrollIntoView(bool alignToTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollIntoView (alignToTop As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollIntoView(bool alignToTop);" />
      <MemberSignature Language="F#" Value="abstract member ScrollIntoView : bool -&gt; unit" Usage="iTextRangeProvider.ScrollIntoView alignToTop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alignToTop" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="alignToTop">
          <span data-ttu-id="3b3d3-226">
            <see langword="true" /> se il controllo di testo deve essere spostato in modo che l'intervallo di testo sia allineato al margine superiore del riquadro di visualizzazione; <see langword="false" /> se deve essere allineato al margine inferiore del riquadro di visualizzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-226">
              <see langword="true" /> if the text control should be scrolled so the text range is flush with the top of the viewport; <see langword="false" /> if it should be flush with the bottom of the viewport.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b3d3-227">Determina lo scorrimento verticale del controllo di testo fino a quando l'intervallo di testo non è visibile nel riquadro di visualizzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-227">Causes the text control to scroll vertically until the text range is visible in the viewport.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b3d3-228"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView%2A> rispetta il testo nascosto sia visibile.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-228"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="3b3d3-229">Se l'intervallo di testo è nascosta, il controllo di testo scorre solo se il testo nascosto presenta un ancoraggio nel riquadro di visualizzazione.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-229">If the text range is hidden, the text control will scroll only if the hidden text has an anchor in the viewport.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberSignature Language="F#" Value="abstract member Select : unit -&gt; unit" Usage="iTextRangeProvider.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3b3d3-230">Evidenzia il testo nel controllo di testo corrispondente agli endpoint <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> e <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> dell'intervallo di testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-230">Highlights text in the text control corresponding to the text range <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> and <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoints.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b3d3-231">Se viene specificato un intervallo di testo degenerato, il punto di inserimento passerà al <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint dell'intervallo di testo.</span><span class="sxs-lookup"><span data-stu-id="3b3d3-231">If a degenerate text range is provided, the text insertion point will move to the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint of the text range.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3b3d3-232">Si verifica quando la selezione del testo non è supportata dal controllo del testo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b3d3-232">Occurs when text selection is not supported by the text control.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>