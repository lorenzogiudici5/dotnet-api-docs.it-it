<Type Name="ISelectionProvider" FullName="System.Windows.Automation.Provider.ISelectionProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ca7fd236360c976546e126a4b2d8b0f9cd8e711e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30615225" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISelectionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISelectionProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ISelectionProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISelectionProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISelectionProvider" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("fb8b03af-3bdf-48d4-bd36-1a65793be168")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a1b5d-101">Espone metodi e proprietà per supportare l'accesso client di automazione interfaccia utente ai controlli che fungono da contenitori per una raccolta di singoli elementi figlio selezionabili.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a1b5d-101">Exposes methods and properties to support UI Automation client access to controls that act as containers for a collection of individual, selectable child items.</span>
      </span>
      <span data-ttu-id="a1b5d-102">Gli elementi figlio di questo controllo devono implementare <see cref="T:System.Windows.Automation.Provider.ISelectionItemProvider" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a1b5d-102">The children of this control must implement <see cref="T:System.Windows.Automation.Provider.ISelectionItemProvider" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1b5d-103">Implementato su un provider di automazione interfaccia utente che deve supportare il <xref:System.Windows.Automation.SelectionPattern> pattern di controllo.</span><span class="sxs-lookup"><span data-stu-id="a1b5d-103">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.SelectionPattern> control pattern.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.SelectionPattern" />
  </Docs>
  <Members>
    <Member MemberName="CanSelectMultiple">
      <MemberSignature Language="C#" Value="public bool CanSelectMultiple { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSelectMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanSelectMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanSelectMultiple { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a1b5d-104">Ottiene un valore che specifica se il provider di automazione interfaccia utente consente la selezione simultanea di più di un elemento figlio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1b5d-104">Gets a value that specifies whether the UI Automation provider allows more than one child element to be selected concurrently.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a1b5d-105">
            <see langword="true" /> se è consentita la selezione multipla. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1b5d-105">
              <see langword="true" /> if multiple selection is allowed; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1b5d-106">Questa proprietà può essere dinamica.</span><span class="sxs-lookup"><span data-stu-id="a1b5d-106">This property may be dynamic.</span></span> <span data-ttu-id="a1b5d-107">In rari casi, ad esempio, un controllo potrebbe consentire più elementi, ma successivamente consentire solo selezioni singole da eseguire durante l'inizializzazione.</span><span class="sxs-lookup"><span data-stu-id="a1b5d-107">For example, in rare cases a control might allow multiple items to be selected on initialization but subsequently allow only single selections to be made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1b5d-108">Nell'esempio seguente viene illustrata un'implementazione di questo metodo per un elenco che non consente la selezione di più di un elemento alla volta.</span><span class="sxs-lookup"><span data-stu-id="a1b5d-108">The following example shows an implementation of this method for a list that does not allow selection of more than one item at a time.</span></span>  
  
 [!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#CanSelectMultiple](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListFragment.cs#canselectmultiple)]
 [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#CanSelectMultiple](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listfragment.vb#canselectmultiple)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple[] GetSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple[] GetSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelection () As IRawElementProviderSimple()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::Provider::IRawElementProviderSimple ^&gt; ^ GetSelection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a1b5d-109">Recupera un provider di automazione interfaccia utente per ogni elemento figlio selezionato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1b5d-109">Retrieves a UI Automation provider for each child element that is selected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1b5d-110">Raccolta di provider di automazione interfaccia utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1b5d-110">A collection of UI Automation providers.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1b5d-111">Una matrice vuota predefinita viene restituita da UIAutoCore. dll quando il provider non fornisce un valore.</span><span class="sxs-lookup"><span data-stu-id="a1b5d-111">A default empty array is returned by UIAutoCore.dll when the provider doesn't supply a value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1b5d-112">Nell'esempio seguente viene illustrata una possibile implementazione di questo metodo per una casella di riepilogo che supporta solo la selezione singola.</span><span class="sxs-lookup"><span data-stu-id="a1b5d-112">The following example shows one possible implementation of this method for a list box that supports only single selection.</span></span>  
  
 [!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#GetSelection](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListFragment.cs#getselection)]
 [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#GetSelection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listfragment.vb#getselection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionRequired">
      <MemberSignature Language="C#" Value="public bool IsSelectionRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelectionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelectionRequired { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a1b5d-113">Ottiene un valore che specifica se il provider di automazione interfaccia utente richiede la selezione di almeno un elemento figlio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1b5d-113">Gets a value that specifies whether the UI Automation provider requires at least one child element to be selected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a1b5d-114">
            <see langword="true" /> se la selezione è obbligatoria; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1b5d-114">
              <see langword="true" /> if selection is required; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1b5d-115">Questa proprietà può essere dinamica.</span><span class="sxs-lookup"><span data-stu-id="a1b5d-115">This property can be dynamic.</span></span> <span data-ttu-id="a1b5d-116">Ad esempio, lo stato iniziale di un controllo non dispone gli elementi selezionati per impostazione predefinita, il che significa che <xref:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired%2A> è `false`.</span><span class="sxs-lookup"><span data-stu-id="a1b5d-116">For example, the initial state of a control might not have any items selected by default, meaning that <xref:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired%2A> is `false`.</span></span> <span data-ttu-id="a1b5d-117">Tuttavia, dopo aver selezionato un elemento, il controllo deve sempre avere almeno un elemento selezionato.</span><span class="sxs-lookup"><span data-stu-id="a1b5d-117">However, after an item is selected, the control must always have at least one item selected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1b5d-118">Nell'esempio seguente viene illustrata un'implementazione di questo metodo per un elenco che richiede un elemento viene selezionato in qualsiasi momento.</span><span class="sxs-lookup"><span data-stu-id="a1b5d-118">The following example shows an implementation of this method for a list that requires an item to be selected at all times.</span></span>  
  
 [!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#IsSelectionRequired](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListFragment.cs#isselectionrequired)]
 [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#IsSelectionRequired](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listfragment.vb#isselectionrequired)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>