<Type Name="IValueProvider" FullName="System.Windows.Automation.Provider.IValueProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bee90840138700ed137e4585b3702c8af4711402" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48604857" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IValueProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IValueProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IValueProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IValueProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IValueProvider" />
  <TypeSignature Language="F#" Value="type IValueProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("c7935180-6fb3-4201-b174-7df73adbf64a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Espone metodi e proprietà che supportano l'accesso dei client di automazione interfaccia utente ai controlli con un valore intrinseco che non si estende in un intervallo e che può essere rappresentato come stringa.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore del controllo può o non potrebbe essere modificato a seconda del controllo e le relative impostazioni.  
  
 Implementato su un provider di automazione interfaccia utente che deve supportare il <xref:System.Windows.Automation.ValuePattern> pattern di controllo.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.ValuePattern" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md">Cenni preliminari sui pattern di controllo per l'automazione interfaccia utente</related>
    <related type="Article" href="http://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe">Implementazione del Provider di automazione interfaccia utente lato server</related>
    <related type="Article" href="http://msdn.microsoft.com/library/3584c0a1-9cd0-4968-8b63-b06390890ef6">Implementazione del Provider di automazione interfaccia utente lato client</related>
    <related type="Article" href="http://msdn.microsoft.com/library/0d635c35-ffa8-4dc8-bbc9-12fcd5445776">Supportare pattern di controllo in un provider di automazione interfaccia utente</related>
    <related type="Article" href="http://msdn.microsoft.com/library/b0fcdd87-3add-4345-bca9-e891205e02ba">Implementazione del pattern di controllo Value di automazione interfaccia utente</related>
  </Docs>
  <Members>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Automation.Provider.IValueProvider.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che specifica se il valore di un controllo è di sola lettura.</summary>
        <value>
          <see langword="true" /> se il valore è di sola lettura; <see langword="false" /> se può essere modificato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un controllo deve avere <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty> impostato su `true` e <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> impostato su `false` prima di consentire una chiamata a <xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata un'implementazione di questo metodo per un controllo che consente di modificare il valore.  
  
 [!code-csharp[UIAIValueProvider_snip#IsReadOnly](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIValueProvider_snip/CSharp/ValueFragment.cs#isreadonly)]
 [!code-vb[UIAIValueProvider_snip#IsReadOnly](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIValueProvider_snip/visualbasic/valuefragment.vb#isreadonly)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : string -&gt; unit" Usage="iValueProvider.SetValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Il valore da impostare. Il provider è responsabile della conversione del valore nel tipo di dati appropriato.</param>
        <summary>Imposta il valore di un controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I controlli di modifica a riga singola supportano l'accesso a livello di codice ai contenuti implementando <xref:System.Windows.Automation.Provider.IValueProvider>. I controlli di modifica a più righe, tuttavia, non implementano <xref:System.Windows.Automation.Provider.IValueProvider>, ma forniscono l'accesso ai contenuti implementando <xref:System.Windows.Automation.Provider.ITextProvider>.  
  
 I controlli quali <xref:System.Windows.Automation.ControlType.ListItem> e <xref:System.Windows.Automation.ControlType.TreeItem> deve implementare <xref:System.Windows.Automation.Provider.IValueProvider> se il valore di uno degli elementi è modificabile, indipendentemente dal corrente la modalità di modifica del controllo. Il controllo padre deve implementare anche <xref:System.Windows.Automation.Provider.IValueProvider> se gli elementi figlio sono modificabili.  
  
 ![Elemento dell'elenco modificabile. ] (~/add/media/uia-valuepattern-editable-listitem.PNG "Elemento elenco modificabile.")  
Esempio di elemento elenco modificabile  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato un controllo personalizzato che consente al relativo valore da impostare per una stringa di lunghezza limitata.  
  
 [!code-csharp[UIAIValueProvider_snip#SetValue](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIValueProvider_snip/CSharp/ValueFragment.cs#setvalue)]
 [!code-vb[UIAIValueProvider_snip#SetValue](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIValueProvider_snip/visualbasic/valuefragment.vb#setvalue)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Se informazioni specifiche delle impostazioni locali vengono passate a un controllo in un formato non corretto, ad esempio una data non formattata correttamente.</exception>
        <exception cref="T:System.ArgumentException">Se un nuovo valore non può essere convertito da una stringa a un formato riconosciuto dal controllo.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Quando viene effettuato un tentativo di modificare un controllo non abilitato.</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IValueProvider.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Windows.Automation.Provider.IValueProvider.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore del controllo.</summary>
        <value>Valore del controllo come stringa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlli di modifica a riga singola supportano l'accesso a livello di codice per i relativi contenuti implementando <xref:System.Windows.Automation.Provider.IValueProvider> (oltre a <xref:System.Windows.Automation.Provider.ITextProvider>). Tuttavia, non implementano i controlli di modifica multiriga <xref:System.Windows.Automation.Provider.IValueProvider>.  
  
 Per recuperare il contenuto testuale dei controlli di modifica su più righe, è necessario implementare i controlli <xref:System.Windows.Automation.Provider.ITextProvider>. <xref:System.Windows.Automation.Provider.ITextProvider> non supporta, tuttavia, l'impostazione del valore di un controllo.  
  
 <xref:System.Windows.Automation.Provider.IValueProvider> non supporta il recupero delle informazioni di formattazione o dei valori delle sottostringhe. Implementare <xref:System.Windows.Automation.Provider.ITextProvider> in questi scenari.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata un'implementazione di questo metodo per un controllo che consente al relativo valore da recuperare.  
  
 [!code-csharp[UIAIValueProvider_snip#Value](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIValueProvider_snip/CSharp/ValueFragment.cs#value)]
 [!code-vb[UIAIValueProvider_snip#Value](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIValueProvider_snip/visualbasic/valuefragment.vb#value)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>