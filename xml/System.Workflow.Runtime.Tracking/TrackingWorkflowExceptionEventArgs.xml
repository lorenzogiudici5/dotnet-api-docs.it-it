<Type Name="TrackingWorkflowExceptionEventArgs" FullName="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="07e533d202a4b266d49202c8122334812de6db87" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30719405" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TrackingWorkflowExceptionEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TrackingWorkflowExceptionEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class TrackingWorkflowExceptionEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingWorkflowExceptionEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contiene i dati associati a un'eccezione che si verifica durante l'esecuzione di un'istanza del flusso di lavoro.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Quando si verifica un'eccezione durante l'esecuzione di un'istanza del flusso di lavoro e un oggetto <xref:System.Workflow.Runtime.Tracking.TrackingProfile> associato all'istanza del flusso di lavoro include un oggetto <xref:System.Workflow.Runtime.Tracking.WorkflowTrackPoint> configurato per un elemento <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowEvent.Exception?displayProperty=nameWithType>, l'infrastruttura di rilevamento del flusso di lavoro imposta la proprietà <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord.EventArgs%2A> su un oggetto <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> nell'oggetto <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord> che invia al servizio di rilevamento.  
  
> [!NOTE]
>  La classe <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> viene utilizzata solo dal servizio di rilevamento di runtime per passare informazioni in un elemento <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato un metodo, denominato `WriteExceptionEventArgs`, che acquisisce un oggetto <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>. Il codice controlla se la proprietà <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> è `null` (`Nothing` in Visual Basic).  
  
 In caso contrario, il codice scrive il messaggio associato alla proprietà <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> nella console. Il codice inoltre converte il valore della proprietà <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> in una stringa e lo scrive nella console.  
  
 Questo esempio di codice è parte dell'esempio SDK EventArgs Tracking nel file Program.cs. Per ulteriori informazioni, vedere [esempio EventArgs Tracking](http://msdn.microsoft.com/library/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c).  
  
 [!code-csharp[WF_Samples#289](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#289)]
 [!code-vb[WF_Samples#289](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#289)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContextGuid">
      <MemberSignature Language="C#" Value="public Guid ContextGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ContextGuid" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ContextGuid { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'ID di contesto dell'attività associata.</summary>
        <value>
          <see cref="T:System.Guid" /> contenente l'ID di contesto dell'elemento <see cref="T:System.Workflow.ComponentModel.Activity" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentActivityPath">
      <MemberSignature Language="C#" Value="public string CurrentActivityPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentActivityPath" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentActivityPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentActivityPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la proprietà <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> dell'attività che genera attualmente l'eccezione.</summary>
        <value>Proprietà <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> dell'attività che genera attualmente l'eccezione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le eccezioni vengono passate fino alla catena delle attività del gestore di eccezioni. Un gestore di eccezioni può scegliere di generare nuovamente un'eccezione. Quando un gestore di eccezioni genera nuovamente l'eccezione, nell'infrastruttura di rilevamento di runtime viene generato un nuovo evento di rilevamento delle eccezioni che contiene un nuovo oggetto <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> . La proprietà <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath%2A> si riferisce all'attività che genera attualmente l'eccezione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'elemento <see cref="T:System.Exception" /> che viene generato dall'istanza del flusso di lavoro.</summary>
        <value>Eccezione generata dall'istanza del flusso di lavoro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio di codice seguente viene illustrato un metodo, denominato `WriteExceptionEventArgs`, che acquisisce un oggetto <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>. Il codice controlla se la proprietà <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> è `null` (`Nothing` in Visual Basic). In caso contrario, il codice scrive il messaggio associato alla proprietà <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> nella console. Se l'eccezione è `null` (`Nothing`), il codice converte il valore della proprietà <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> in una stringa e la scrive nella console.  
  
 Questo esempio di codice è parte dell'esempio SDK EventArgs Tracking nel file Program.cs. Per ulteriori informazioni, vedere [esempio EventArgs Tracking](http://msdn.microsoft.com/library/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c).  
  
 [!code-csharp[WF_Samples#289](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#289)]
 [!code-vb[WF_Samples#289](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#289)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalActivityPath">
      <MemberSignature Language="C#" Value="public string OriginalActivityPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalActivityPath" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalActivityPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OriginalActivityPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la proprietà <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> dell'attività che ha originariamente generato l'eccezione.</summary>
        <value>Proprietà <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> dell'attività che ha originariamente generato l'eccezione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le eccezioni vengono passate fino alla catena delle attività del gestore di eccezioni. Un gestore di eccezioni può scegliere di generare nuovamente un'eccezione. Quando un gestore di eccezioni genera nuovamente un'eccezione, nell'infrastruttura di rilevamento di runtime viene generato un nuovo evento di rilevamento delle eccezioni che contiene un nuovo oggetto <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> . La proprietà <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> si riferisce all'attività che genera attualmente l'eccezione.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato un metodo, denominato `WriteExceptionEventArgs`, che acquisisce un oggetto <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>. Il codice controlla se la proprietà <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> è `null` (`Nothing` in Visual Basic). In caso contrario, il codice scrive il messaggio associato alla proprietà <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> nella console. Se la proprietà <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> è `null` (`Nothing`), il codice converte il valore della proprietà <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> in una stringa e la scrive nella console.  
  
 Questo esempio di codice è parte dell'esempio SDK EventArgs Tracking nel file Program.cs. Per ulteriori informazioni, vedere [esempio EventArgs Tracking](http://msdn.microsoft.com/library/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c).  
  
 [!code-csharp[WF_Samples#289](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#289)]
 [!code-vb[WF_Samples#289](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#289)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentContextGuid">
      <MemberSignature Language="C#" Value="public Guid ParentContextGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ParentContextGuid" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentContextGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ParentContextGuid { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'ID di contesto dell'attività padre.</summary>
        <value>Oggetto <see cref="T:System.Guid" /> contenente l'ID di contesto dell'attività <see cref="T:System.Workflow.ComponentModel.Activity" /> padre.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>