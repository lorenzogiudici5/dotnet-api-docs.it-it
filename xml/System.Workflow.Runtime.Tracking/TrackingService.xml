<Type Name="TrackingService" FullName="System.Workflow.Runtime.Tracking.TrackingService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1819eb05b65c1f431d253479d6736ab5bf7a40e0" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37735105" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TrackingService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TrackingService extends System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Tracking.TrackingService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TrackingService&#xA;Inherits WorkflowRuntimeService" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingService abstract : System::Workflow::Runtime::Hosting::WorkflowRuntimeService" />
  <TypeSignature Language="F#" Value="type TrackingService = class&#xA;    inherit WorkflowRuntimeService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowRuntimeService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce l'interfaccia di base tra un servizio di rilevamento e l'infrastruttura di rilevamento della fase di esecuzione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Un servizio di rilevamento si occupa di fornire i canali e i profili di rilevamento al motore di runtime del flusso di lavoro. Il motore di runtime del flusso di lavoro richiede un oggetto <xref:System.Workflow.Runtime.Tracking.TrackingChannel> da un servizio di rilevamento per ogni istanza del flusso di lavoro che dispone di un oggetto <xref:System.Workflow.Runtime.Tracking.TrackingProfile>. Il motore di runtime del flusso di lavoro utilizza questo oggetto <xref:System.Workflow.Runtime.Tracking.TrackingChannel> per inviare i record di rilevamento associati a tale istanza del flusso di lavoro. Un oggetto <xref:System.Workflow.Runtime.Tracking.TrackingProfile> contiene i track point che specificano un set di eventi di registrazione per i quali l'infrastruttura di controllo della fase di esecuzione deve inviare record di rilevamento. <xref:System.Workflow.Runtime.Tracking.TrackingProfile> può specificare anche i dati da estrarre dall'istanza del flusso di lavoro quando si verifica uno di questi eventi di registrazione.  
  
 L'infrastruttura di controllo della fase di esecuzione utilizza un oggetto <xref:System.Workflow.Runtime.Tracking.TrackingProfile> per filtrare gli eventi di registrazione generati da un'istanza del flusso di lavoro. Quando viene generato un evento di registrazione che corrisponde a un track point in <xref:System.Workflow.Runtime.Tracking.TrackingProfile>, l'infrastruttura di controllo della fase di esecuzione estrae i dati specificati in <xref:System.Workflow.Runtime.Tracking.TrackingProfile> dall'istanza del flusso di lavoro e incapsula tali dati e informazioni sull'evento di rilevamento in un record di rilevamento. Questo record di rilevamento viene quindi inviato sul <xref:System.Workflow.Runtime.Tracking.TrackingChannel> associato all'istanza del flusso di lavoro. Un record di rilevamento può corrispondere a uno dei tipi seguenti:  
  
 <xref:System.Workflow.Runtime.Tracking.ActivityTrackingRecord>  
  
 <xref:System.Workflow.Runtime.Tracking.UserTrackingRecord>  
  
 <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>  
  
 L'applicazione host può utilizzare il record di rilevamento nel modo desiderato. Ad esempio, l'applicazione host può archiviare le informazioni di rilevamento in un database e utilizzarle per implementare un'interfaccia utente sofisticata oppure può utilizzare le informazioni per informare un amministratore di una situazione che richiede il suo intervento. È possibile registrare un servizio di rilevamento con il motore di runtime del flusso di lavoro chiamando il metodo <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A?displayProperty=nameWithType> oppure includendo la voce appropriata nel file di configurazione dell'applicazione.  
  
 Tutti i servizi di rilevamento devono ereditare dalla classe astratta <xref:System.Workflow.Runtime.Tracking.TrackingService>. Questa classe definisce l'interfaccia di base tra un servizio di rilevamento e l'infrastruttura di controllo della fase di esecuzione. Il motore di runtime del flusso di lavoro richiede un oggetto <xref:System.Workflow.Runtime.Tracking.TrackingProfile> per un oggetto <xref:System.Type> di un'istanza del flusso di lavoro o un flusso di lavoro specifico, chiamando uno dei metodi di overload <xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A> oppure il metodo <xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A>. Il motore di runtime del flusso di lavoro chiama il metodo <xref:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel%2A> per richiedere un oggetto <xref:System.Workflow.Runtime.Tracking.TrackingChannel>.  
  
 Il runtime del flusso di lavoro chiama i metodi <xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A> e <xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A> ogni volta che un'istanza del flusso di lavoro viene creata o caricata dall'archivio di persistenza. Gli overhead associati a queste chiamate possono essere costosi per il servizio di rilevamento (molte chiamate al database, ad esempio). È possibile implementare l'interfaccia <xref:System.Workflow.Runtime.Tracking.IProfileNotification> nel servizio di rilevamento per aggirare questo meccanismo basato sulle chiamate e utilizzare gli eventi per notificare al motore di runtime del flusso di lavoro le modifiche apportate a <xref:System.Workflow.Runtime.Tracking.TrackingProfile>. Per i servizi di rilevamento che implementano l'interfaccia <xref:System.Workflow.Runtime.Tracking.IProfileNotification>, il motore di runtime del flusso di lavoro sottoscrive gli eventi <xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileUpdated> e <xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileRemoved>. Il servizio di rilevamento può generare l'evento appropriato quando viene apportata una modifica a uno dei relativi profili di rilevamento. La classe <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> implementa questa interfaccia.  
  
 Il motore di runtime del flusso di lavoro chiama il metodo <xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A> per testare se un oggetto <xref:System.Workflow.Runtime.Tracking.TrackingProfile> è stato aggiornato o rimosso in seguito a una chiamata esplicita effettuata da un host o da un servizio al metodo <xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A> su un'istanza del flusso di lavoro. Questo processo consente a un host o a un sevizio di modificare dinamicamente il profilo di rilevamento che si sta utilizzando per un'istanza del flusso di lavoro specifica.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>-Quando si eredita da <see cref="T:System.Workflow.Runtime.Tracking.TrackingService" />, è necessario eseguire l'override dei membri seguenti: <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Guid)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Type,System.Version)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)" /></para>
    </block>
    <altmember cref="T:System.Workflow.Runtime.Tracking.IProfileNotification" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TrackingService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TrackingService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Quando viene implementato in una classe derivata, inizializza una nuova istanza della classe <see cref="T:System.Workflow.Runtime.Tracking.TrackingService" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come creare una nuova istanza di un oggetto `TerminationTrackingService`, di un tipo che deriva da `TrackingService`. Questo esempio è tratto dall'esempio SDK Termination Tracking Service. Per altre informazioni, vedere [esempio di servizio di rilevamento di chiusura](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#111](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#111)]
 [!code-vb[WF_Samples#111](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#111)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProfile">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deve essere sottoposto a override nella classe derivata e, in caso di implementazione, ottiene il profilo di rilevamento per un'istanza del flusso di lavoro specificata o per un tipo di flusso di lavoro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un servizio di rilevamento è responsabile della gestione dei profili di rilevamento disponibili per tipi e istanze del flusso di lavoro specifici. Questa gestione può essere implementata nel modo desiderato. Ad esempio, è possibile restituire lo stesso <xref:System.Workflow.Runtime.Tracking.TrackingProfile> per ogni <xref:System.Type> di flusso di lavoro e istanza del flusso di lavoro. In alternativa, è possibile gestire un complesso archivio di profili di rilevamento in base all'istanza del flusso di lavoro, nonché al <xref:System.Type> e alla <xref:System.Version> del flusso di lavoro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProfile">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.Runtime.Tracking.TrackingProfile GetProfile (Guid workflowInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.Runtime.Tracking.TrackingProfile GetProfile(valuetype System.Guid workflowInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetProfile (workflowInstanceId As Guid) As TrackingProfile" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::Runtime::Tracking::TrackingProfile ^ GetProfile(Guid workflowInstanceId);" />
      <MemberSignature Language="F#" Value="abstract member GetProfile : Guid -&gt; System.Workflow.Runtime.Tracking.TrackingProfile" Usage="trackingService.GetProfile workflowInstanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Tracking.TrackingProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="workflowInstanceId">
          <see cref="T:System.Guid" /> di istanza del flusso di lavoro.</param>
        <summary>Deve essere sottoposto a override nella classe derivata e, in caso di implementazione, restituisce il profilo di rilevamento per l'istanza del flusso di lavoro specificata.</summary>
        <returns>Istanza di rilevamento per il tipo di flusso di lavoro specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un servizio di rilevamento è responsabile della gestione dei profili di rilevamento disponibili per tipi e istanze del flusso di lavoro specifici. Questa gestione può essere implementata nel modo desiderato. Ad esempio, è possibile restituire lo stesso <xref:System.Workflow.Runtime.Tracking.TrackingProfile> per ogni <xref:System.Type> di flusso di lavoro e istanza del flusso di lavoro. In alternativa, è possibile gestire un complesso archivio di profili di rilevamento in base all'istanza del flusso di lavoro, nonché al <xref:System.Type> e alla <xref:System.Version> del flusso di lavoro.  
  
   
  
## Examples  
 Nel codice seguente viene illustrata un'implementazione del metodo `GetProfile`. In questo esempio, diversi overload del metodo `GetProfile` chiamano un singolo metodo `GetProfile` privato che restituisce un profilo di rilevamento specificato a livello di codice, ovvero il profilo di rilevamento predefinito. Questo esempio è tratto dall'esempio SDK Termination Tracking Service. Per altre informazioni, vedere [esempio di servizio di rilevamento di chiusura](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#115](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#115)]
 [!code-vb[WF_Samples#115](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#115)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProfile">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.Runtime.Tracking.TrackingProfile GetProfile (Type workflowType, Version profileVersionId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.Runtime.Tracking.TrackingProfile GetProfile(class System.Type workflowType, class System.Version profileVersionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Type,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetProfile (workflowType As Type, profileVersionId As Version) As TrackingProfile" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::Runtime::Tracking::TrackingProfile ^ GetProfile(Type ^ workflowType, Version ^ profileVersionId);" />
      <MemberSignature Language="F#" Value="abstract member GetProfile : Type * Version -&gt; System.Workflow.Runtime.Tracking.TrackingProfile" Usage="trackingService.GetProfile (workflowType, profileVersionId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Tracking.TrackingProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="profileVersionId" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="workflowType">
          <see cref="T:System.Type" /> del flusso di lavoro.</param>
        <param name="profileVersionId">
          <see cref="T:System.Version" /> del profilo di rilevamento.</param>
        <summary>Deve essere sottoposto a override nella classe derivata e, in caso di implementazione, restituisce il profilo di rilevamento, qualificato dalla versione, per il <see cref="T:System.Type" /> di flusso di lavoro specificato.</summary>
        <returns>Profilo di rilevamento per il tipo di flusso di lavoro specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un servizio di rilevamento è responsabile della gestione dei profili di rilevamento disponibili per tipi e istanze del flusso di lavoro specifici. Questa gestione può essere implementata nel modo desiderato. Ad esempio, è possibile restituire lo stesso <xref:System.Workflow.Runtime.Tracking.TrackingProfile> per ogni <xref:System.Type> di flusso di lavoro e istanza del flusso di lavoro. In alternativa, è possibile gestire un complesso archivio di profili di rilevamento in base all'istanza del flusso di lavoro, nonché al <xref:System.Type> e alla <xref:System.Version> del flusso di lavoro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrackingChannel">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.Runtime.Tracking.TrackingChannel GetTrackingChannel (System.Workflow.Runtime.Tracking.TrackingParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.Runtime.Tracking.TrackingChannel GetTrackingChannel(class System.Workflow.Runtime.Tracking.TrackingParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetTrackingChannel (parameters As TrackingParameters) As TrackingChannel" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::Runtime::Tracking::TrackingChannel ^ GetTrackingChannel(System::Workflow::Runtime::Tracking::TrackingParameters ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member GetTrackingChannel : System.Workflow.Runtime.Tracking.TrackingParameters -&gt; System.Workflow.Runtime.Tracking.TrackingChannel" Usage="trackingService.GetTrackingChannel parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Tracking.TrackingChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Workflow.Runtime.Tracking.TrackingParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">Elemento <see cref="T:System.Workflow.Runtime.Tracking.TrackingParameters" /> associato all'istanza del flusso di lavoro.</param>
        <summary>Deve essere sottoposto a override nella classe derivata e, al momento dell'implementazione, restituisce il canale che l'infrastruttura di controllo della fase di esecuzione utilizza per inviare i record di rilevamento al servizio di rilevamento.</summary>
        <returns>
          <see cref="T:System.Workflow.Runtime.Tracking.TrackingChannel" /> utilizzato per inviare i record di rilevamento al servizio di rilevamento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'infrastruttura di controllo della fase di esecuzione utilizza un oggetto <xref:System.Workflow.Runtime.Tracking.TrackingChannel> per ogni servizio di rilevamento di ogni istanza del flusso di lavoro. Il motore di runtime del flusso di lavoro chiama <xref:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel%2A> su ogni servizio di rilevamento per ottenere l'oggetto <xref:System.Workflow.Runtime.Tracking.TrackingChannel> per tale servizio. È possibile utilizzare le informazioni passate in <xref:System.Workflow.Runtime.Tracking.TrackingParameters> per associare i dati di rilevamento inviati sul <xref:System.Workflow.Runtime.Tracking.TrackingChannel> per il servizio di rilevamento a una particolare istanza del flusso di lavoro radice.  
  
   
  
## Examples  
 Nel codice seguente viene illustrata un'implementazione del metodo `GetTrackingChannel`. Questo esempio è tratto dall'esempio SDK Termination Tracking Service. Per altre informazioni, vedere [esempio di servizio di rilevamento di chiusura](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#113](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#113)]
 [!code-vb[WF_Samples#113](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#113)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetProfile">
      <MemberSignature Language="C#" Value="protected internal abstract bool TryGetProfile (Type workflowType, out System.Workflow.Runtime.Tracking.TrackingProfile profile);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryGetProfile(class System.Type workflowType, [out] class System.Workflow.Runtime.Tracking.TrackingProfile&amp; profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function TryGetProfile (workflowType As Type, ByRef profile As TrackingProfile) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool TryGetProfile(Type ^ workflowType, [Runtime::InteropServices::Out] System::Workflow::Runtime::Tracking::TrackingProfile ^ % profile);" />
      <MemberSignature Language="F#" Value="abstract member TryGetProfile : Type *  -&gt; bool" Usage="trackingService.TryGetProfile (workflowType, profile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="profile" Type="System.Workflow.Runtime.Tracking.TrackingProfile&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="workflowType">
          <see cref="T:System.Type" /> di flusso di lavoro per il quale ottenere il profilo di rilevamento.</param>
        <param name="profile">Quando termina, questo metodo contiene l'elemento <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> da caricare. Questo parametro viene passato non inizializzato.</param>
        <summary>Deve essere sottoposto a override nella classe derivata e, in caso di implementazione, recupera il profilo di rilevamento del flusso di lavoro specificato, se disponibile.</summary>
        <returns>
          <see langword="true" /> se è disponibile un elemento <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> per il <see cref="T:System.Type" /> di flusso di lavoro specificato; in caso contrario <see langword="false" />. Se <see langword="true" />, l'elemento <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> verrà restituito in <paramref name="profile" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un servizio di rilevamento è responsabile della gestione dei profili di rilevamento disponibili per tipi e istanze del flusso di lavoro specifici. Questa gestione può essere implementata nel modo desiderato. Ad esempio, è possibile restituire lo stesso <xref:System.Workflow.Runtime.Tracking.TrackingProfile> per ogni <xref:System.Type> di flusso di lavoro e istanza del flusso di lavoro. In alternativa, è possibile gestire un complesso archivio di profili di rilevamento in base all'istanza del flusso di lavoro, nonché al <xref:System.Type> e alla <xref:System.Version> del flusso di lavoro.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata un'implementazione del metodo `TryGetProfile`, che chiama un metodo `GetProfile` privato. Questo esempio è tratto dall'esempio SDK Termination Tracking Service. Per altre informazioni, vedere [esempio di servizio di rilevamento di chiusura](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[Wf_samples#209](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#209)]
 [!code-vb[Wf_samples#209](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#209)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReloadProfile">
      <MemberSignature Language="C#" Value="protected internal abstract bool TryReloadProfile (Type workflowType, Guid workflowInstanceId, out System.Workflow.Runtime.Tracking.TrackingProfile profile);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryReloadProfile(class System.Type workflowType, valuetype System.Guid workflowInstanceId, [out] class System.Workflow.Runtime.Tracking.TrackingProfile&amp; profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function TryReloadProfile (workflowType As Type, workflowInstanceId As Guid, ByRef profile As TrackingProfile) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool TryReloadProfile(Type ^ workflowType, Guid workflowInstanceId, [Runtime::InteropServices::Out] System::Workflow::Runtime::Tracking::TrackingProfile ^ % profile);" />
      <MemberSignature Language="F#" Value="abstract member TryReloadProfile : Type * Guid *  -&gt; bool" Usage="trackingService.TryReloadProfile (workflowType, workflowInstanceId, profile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
        <Parameter Name="profile" Type="System.Workflow.Runtime.Tracking.TrackingProfile&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="workflowType">
          <see cref="T:System.Type" /> di istanza del flusso di lavoro.</param>
        <param name="workflowInstanceId">
          <see cref="T:System.Guid" /> di istanza del flusso di lavoro.</param>
        <param name="profile">Quando termina, questo metodo contiene l'elemento <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> da caricare. Questo parametro viene passato non inizializzato.</param>
        <summary>Deve essere sottoposto a override nella classe derivata e, in caso di implementazione, recupera un profilo di rilevamento nuovo per l'istanza del flusso di lavoro specificata, se il profilo di rilevamento è stato modificato dall'ultimo caricamento.</summary>
        <returns>
          <see langword="true" /> se è necessario caricare un nuovo <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" />; in caso contrario, <see langword="false" />. Se <see langword="true" />, l'elemento <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> verrà restituito in <paramref name="profile" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo <xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A> viene chiamato dall'infrastruttura di controllo della fase di esecuzione per determinare se è necessario caricare un nuovo oggetto <xref:System.Workflow.Runtime.Tracking.TrackingProfile> per l'istanza del flusso di lavoro specificata. Se è necessario un nuovo <xref:System.Workflow.Runtime.Tracking.TrackingProfile> esso viene restituito in `profile`. Se si desidera che l'infrastruttura di controllo della fase di esecuzione interrompa il rilevamento di un'istanza del flusso di lavoro, il servizio di rilevamento deve restituire `true` e impostare `profile` su un riferimento null (`Nothing` in Visual Basic). Il servizio di rilevamento può utilizzare `workflowType` o `workflowInstanceId` nel modo desiderato per determinare se un profilo di rilevamento deve essere ricaricato. Ad esempio, l'oggetto <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> utilizza solo `workflowInstanceId` per decidere se il profilo di rilevamento deve essere ricaricato. Il metodo <xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A> viene chiamato dall'infrastruttura di controllo della fase di esecuzione in base alla relativa semantica di rilevamento oppure in risposta all'host o a un servizio che chiama <xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A?displayProperty=nameWithType> in un'istanza del flusso di lavoro.  
  
   
  
## Examples  
 Nel codice seguente viene illustrata un'implementazione di base del metodo `TryReloadProfile`. Questo esempio è tratto dall'esempio SDK Termination Tracking Service. Per altre informazioni, vedere [esempio di servizio di rilevamento di chiusura](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#116](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#116)]
 [!code-vb[WF_Samples#116](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#116)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>