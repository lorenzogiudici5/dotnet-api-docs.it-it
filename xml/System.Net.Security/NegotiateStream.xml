<Type Name="NegotiateStream" FullName="System.Net.Security.NegotiateStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a91049778a482fee3308bf1cf44c8c630042c15e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37478076" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NegotiateStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NegotiateStream extends System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.NegotiateStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NegotiateStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NegotiateStream : System::Net::Security::AuthenticatedStream" />
  <TypeSignature Language="F#" Value="type NegotiateStream = class&#xA;    inherit AuthenticatedStream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="83d2f-101">Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</span>
      <span class="sxs-lookup">
        <span data-stu-id="83d2f-101">Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-102">Usare il <xref:System.Net.Security.NegotiateStream> (classe) per l'autenticazione e per proteggere le informazioni trasmesse tra un client e un server.</span><span class="sxs-lookup"><span data-stu-id="83d2f-102">Use the <xref:System.Net.Security.NegotiateStream> class for authentication and to help secure information transmitted between a client and a server.</span></span> <span data-ttu-id="83d2f-103">Usando <xref:System.Net.Security.NegotiateStream>, è possibile eseguire le operazioni seguenti.</span><span class="sxs-lookup"><span data-stu-id="83d2f-103">Using <xref:System.Net.Security.NegotiateStream>, you can do the following.</span></span>  
  
-   <span data-ttu-id="83d2f-104">Inviare le credenziali del client al server per la rappresentazione o delega.</span><span class="sxs-lookup"><span data-stu-id="83d2f-104">Send the client's credentials to the server for Impersonation or Delegation.</span></span>  
  
-   <span data-ttu-id="83d2f-105">Richiedere l'autenticazione server.</span><span class="sxs-lookup"><span data-stu-id="83d2f-105">Request server authentication.</span></span>  
  
-   <span data-ttu-id="83d2f-106">Crittografare e/o firmare i dati prima della trasmissione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-106">Encrypt and/or sign data before transmitting it.</span></span>  
  
 <span data-ttu-id="83d2f-107">L'autenticazione deve essere eseguita prima della trasmissione di informazioni.</span><span class="sxs-lookup"><span data-stu-id="83d2f-107">Authentication must be performed before transmitting information.</span></span> <span data-ttu-id="83d2f-108">I client richiedono l'autenticazione usano le repliche sincrone <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> metodi, che blocca fino al completamento dell'autenticazione, o asincrona <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> metodi, che non si bloccano durante l'attesa del completamento dell'autenticazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-108">Clients request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods, which do not block while waiting for the authentication to complete.</span></span> <span data-ttu-id="83d2f-109">Server richiedono l'autenticazione usano le repliche sincrone <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> o asincroni <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="83d2f-109">Servers request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="83d2f-110">Il client e, facoltativamente, il server, viene autenticato utilizzando il protocollo di sicurezza Negotiate.</span><span class="sxs-lookup"><span data-stu-id="83d2f-110">The client, and optionally the server, is authenticated using the Negotiate security protocol.</span></span> <span data-ttu-id="83d2f-111">Nei sistemi Windows 95 o 98, Windows NT LAN Manager (NTLM) è il protocollo usato per l'autenticazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-111">On Windows 95/98 systems, Windows NT LAN Manager (NTLM) is the protocol used for authentication.</span></span> <span data-ttu-id="83d2f-112">In altre piattaforme di Kerberos viene utilizzato per l'autenticazione se client e server supportarlo; in caso contrario, viene usato NTLM.</span><span class="sxs-lookup"><span data-stu-id="83d2f-112">On other platforms the Kerberos protocol is used for authentication if both client and server support it; otherwise NTLM is used.</span></span> <span data-ttu-id="83d2f-113">Per una descrizione dettagliata di questi protocolli, vedere la documentazione di Platform SDK in MSDN, in msdn.microsoft.com/library/.</span><span class="sxs-lookup"><span data-stu-id="83d2f-113">For detailed descriptions of these protocols, see the Platform SDK documentation on MSDN, at msdn.microsoft.com/library/.</span></span> <span data-ttu-id="83d2f-114">Il <xref:System.Net.Security.NegotiateStream> classe esegue l'autenticazione tramite Security Support Provider Interface (SSPI).</span><span class="sxs-lookup"><span data-stu-id="83d2f-114">The <xref:System.Net.Security.NegotiateStream> class performs the authentication using the Security Support Provider Interface (SSPI).</span></span>  
  
 <span data-ttu-id="83d2f-115">Quando l'autenticazione ha esito positivo, è necessario controllare il <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza da utilizzare per il <xref:System.Net.Security.NegotiateStream> per la protezione dei dati durante la trasmissione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-115">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services will be used by the <xref:System.Net.Security.NegotiateStream> to help secure your data during transmission.</span></span> <span data-ttu-id="83d2f-116">Controllare il <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> proprietà per determinare se si è verificato durante l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-116">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span> <span data-ttu-id="83d2f-117">È possibile ottenere informazioni sul client remoto o server con il <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="83d2f-117">You can get information about the remote client or server using the <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> property.</span></span>  
  
 <span data-ttu-id="83d2f-118">Se l'autenticazione non riesce, si riceverà un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-118">If the authentication fails, you will receive an <xref:System.Security.Authentication.AuthenticationException> or a <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-119">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-119">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="83d2f-120">Si inviano dati usano le repliche sincrone <xref:System.Net.Security.NegotiateStream.Write%2A> o asincroni <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="83d2f-120">You send data using the synchronous <xref:System.Net.Security.NegotiateStream.Write%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="83d2f-121">Si ricevono dati usano le repliche sincrone <xref:System.Net.Security.NegotiateStream.Read%2A> o asincroni <xref:System.Net.Security.NegotiateStream.BeginRead%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="83d2f-121">You receive data using the synchronous <xref:System.Net.Security.NegotiateStream.Read%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginRead%2A> methods.</span></span> <span data-ttu-id="83d2f-122">Se i servizi di sicurezza, ad esempio la crittografia o firma sono abilitati, questi vengono applicati automaticamente ai dati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-122">If security services such as encryption or signing are enabled, these are automatically applied to your data by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="83d2f-123">Il <xref:System.Net.Security.NegotiateStream> trasmette i dati utilizzando un flusso che viene fornito quando si crea il <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-123">The <xref:System.Net.Security.NegotiateStream> transmits data using a stream that you supply when creating the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="83d2f-124">Quando si fornisce questo flusso sottostante, è possibile specificare se la chiusura di <xref:System.Net.Security.NegotiateStream> chiude anche il flusso sottostante.</span><span class="sxs-lookup"><span data-stu-id="83d2f-124">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.NegotiateStream> also closes the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-125">Esempio di codice seguente viene illustrato il lato client di una connessione client-server che utilizza il <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-125">The following code example demonstrates the client side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="83d2f-126">Il client esegue l'autenticazione e invia un messaggio al server in modo asincrono.</span><span class="sxs-lookup"><span data-stu-id="83d2f-126">The client authenticates and sends a message to the server asynchronously.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#0)]
 [!code-csharp[NclNegoAsyncClient#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#0)]  
  
 <span data-ttu-id="83d2f-127">Esempio di codice seguente viene illustrato il lato server di una connessione client-server che utilizza il <xref:System.Net.Security.NegotiateStream> per autenticare il client e leggere un messaggio inviato dal client.</span><span class="sxs-lookup"><span data-stu-id="83d2f-127">The following code example demonstrates the server side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream> to authenticate the client and read a message sent by the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#0)]
 [!code-csharp[NclNegoAsyncServer#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-128">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-128">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-129">Per evitare il <xref:System.Net.Security.NegotiateStream> chiuda il flusso che viene fornito, usare il <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> costruttore.</span><span class="sxs-lookup"><span data-stu-id="83d2f-129">To prevent the <xref:System.Net.Security.NegotiateStream> from closing the stream that you supply, use the <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream innerStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="83d2f-130">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-130">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-131">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-131">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="83d2f-132">Esempio di codice seguente viene illustrata la chiamata di questo costruttore.</span><span class="sxs-lookup"><span data-stu-id="83d2f-132">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#3)]
 [!code-csharp[NclNegoSyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream * bool -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream (innerStream, leaveInnerStreamOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="83d2f-133">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-133">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="83d2f-134">
            <see langword="true" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <c>innerstream</c>; <see langword="false" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <c>innerStream</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-134">
              <see langword="true" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <c>innerstream</c>; <see langword="false" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <c>innerStream</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-135">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-135">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-136">Quando si specifica `true` per il `leaveStreamOpen` parametro, chiudere il <xref:System.Net.Security.NegotiateStream> non ha alcun effetto sul `innerStream` streaming; è necessario chiudere esplicitamente `innerStream` quando non è più necessario.</span><span class="sxs-lookup"><span data-stu-id="83d2f-136">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.NegotiateStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-137">Esempio di codice seguente viene illustrata la chiamata di questo costruttore.</span><span class="sxs-lookup"><span data-stu-id="83d2f-137">The following code example demonstrates calling this constructor.</span></span> <span data-ttu-id="83d2f-138">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="83d2f-138">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#1)]
 [!code-csharp[NclNegoAsyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-139">
            <paramref name="innerStream" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-139">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="83d2f-140">\- or -  <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-140">\- or -  <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-141">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-141">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : unit -&gt; unit&#xA;override this.AuthenticateAsClient : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-142">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-142">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-143">L'autenticazione usa il client <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-143">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="83d2f-144">Viene specificato alcun nome dell'entità servizio (SPN) per il server.</span><span class="sxs-lookup"><span data-stu-id="83d2f-144">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="83d2f-145">È il livello di rappresentazione <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, il livello di sicurezza è <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, ed è richiesta l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-145">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="83d2f-146">Il <xref:System.Net.Security.NegotiateStream> classe costruisce il nome dell'entità servizio usata per l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-146">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="83d2f-147">Quando l'autenticazione ha esito positivo, è necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-147">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="83d2f-148">Controllare il <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> proprietà per determinare se si è verificato durante l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-148">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="83d2f-149">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-149">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-150">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-150">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-151">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-151">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-152">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-152">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-153">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-153">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-154">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-154">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-155">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-155">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-156">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-156">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="83d2f-157">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-157">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="83d2f-158">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-158">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83d2f-159">usare l'impostazione esplicita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-159">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="83d2f-160">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-160">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="83d2f-161">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-161">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="83d2f-162">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-162">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-163">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-163">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="83d2f-164">The authentication process uses the specified client credential.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-164">The authentication process uses the specified client credential.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-165">È il livello di rappresentazione <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, il livello di sicurezza è <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, ed è richiesta l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-165">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="83d2f-166">Il <xref:System.Net.Security.NegotiateStream> classe costruisce il nome dell'entità servizio usata per l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-166">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="83d2f-167">Quando l'autenticazione ha esito positivo, è necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-167">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="83d2f-168">Controllare il <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> proprietà per determinare se si è verificato durante l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-168">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-169">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-169">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-170">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-170">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-171">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-171">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-172">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-172">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-173">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-173">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-174">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-174">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="83d2f-175">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-175">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="83d2f-176">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-176">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-177">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-177">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83d2f-178">usare l'impostazione esplicita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-178">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="83d2f-179">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-179">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="83d2f-180">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-180">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="83d2f-181">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-181">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="83d2f-182">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-182">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-183">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-183">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="83d2f-184">The authentication process uses the specified client credential and the channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-184">The authentication process uses the specified client credential and the channel binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-185">È il livello di rappresentazione <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, il livello di sicurezza è <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, ed è richiesta l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-185">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="83d2f-186">Il <xref:System.Net.Security.NegotiateStream> classe costruisce il nome dell'entità servizio usata per l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-186">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="83d2f-187">Il <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> utilizzato per la protezione estesa che viene passata al metodo nel `binding` parametro verrebbe recuperato da un'applicazione dalla <xref:System.Net.Security.SslStream.TransportContext%2A> proprietà sull'oggetto associato <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-187">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="83d2f-188">Quando l'autenticazione ha esito positivo, è necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-188">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="83d2f-189">Controllare il <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> proprietà per determinare se si è verificato durante l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-189">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-190">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-190">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="83d2f-191">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-191">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-192">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-192">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-193">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-193">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-194">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-194">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-195">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-195">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-196">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-196">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="83d2f-197">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-197">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="83d2f-198">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-198">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-199">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-199">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="83d2f-200">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-200">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="83d2f-201">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-201">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="83d2f-202">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-202">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="83d2f-203">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-203">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-204">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-204">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="83d2f-205">The authentication process uses the specified credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-205">The authentication process uses the specified credentials and authentication options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-206">Usare il `requiredProtectionLevel` parametro per richiedere i servizi di sicurezza per i dati trasmessi tramite il flusso autenticato.</span><span class="sxs-lookup"><span data-stu-id="83d2f-206">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="83d2f-207">Ad esempio, per ottenere i dati crittografati e firmati, specificare il <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valore.</span><span class="sxs-lookup"><span data-stu-id="83d2f-207">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="83d2f-208">L'autenticazione non garantisce che la richiesta <xref:System.Net.Security.ProtectionLevel> è stata concessa.</span><span class="sxs-lookup"><span data-stu-id="83d2f-208">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="83d2f-209">È necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-209">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="83d2f-210">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-210">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-211">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-211">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83d2f-212">
            <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-212">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-213">
            <paramref name="targetName" /> is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-213">
              <paramref name="targetName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-214">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-214">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-215">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-215">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-216">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-216">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-217">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-217">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-218">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-218">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-219">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-219">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="83d2f-220">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-220">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="83d2f-221">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-221">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83d2f-222">usare l'impostazione esplicita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-222">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="83d2f-223">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-223">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="83d2f-224">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-224">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="83d2f-225">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-225">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="83d2f-226">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-226">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="83d2f-227">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-227">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="83d2f-228">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-228">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-229">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-229">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="83d2f-230">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-230">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-231">Usare il `requiredProtectionLevel` parametro per richiedere i servizi di sicurezza per i dati trasmessi tramite il flusso autenticato.</span><span class="sxs-lookup"><span data-stu-id="83d2f-231">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="83d2f-232">Ad esempio, per ottenere i dati crittografati e firmati, specificare il <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valore.</span><span class="sxs-lookup"><span data-stu-id="83d2f-232">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="83d2f-233">L'autenticazione non garantisce che la richiesta <xref:System.Net.Security.ProtectionLevel> è stata concessa.</span><span class="sxs-lookup"><span data-stu-id="83d2f-233">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="83d2f-234">È necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-234">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="83d2f-235">Il <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> utilizzato per la protezione estesa che viene passata al metodo nel `binding` parametro verrebbe recuperato da un'applicazione dalla <xref:System.Net.Security.SslStream.TransportContext%2A> proprietà sull'oggetto associato <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-235">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="83d2f-236">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-236">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-237">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-237">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-238">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-238">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="83d2f-239">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-239">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83d2f-240">
            <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-240">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-241">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-241">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-242">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-242">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-243">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-243">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-244">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-244">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-245">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-245">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="83d2f-246">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-246">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="83d2f-247">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-247">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-248">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-248">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-249">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-249">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-250">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-250">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-251">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-251">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-252">L'autenticazione usa il client <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-252">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="83d2f-253">Viene specificato alcun nome dell'entità servizio (SPN) per il server.</span><span class="sxs-lookup"><span data-stu-id="83d2f-253">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="83d2f-254">È il livello di rappresentazione <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, il livello di sicurezza è <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, ed è richiesta l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-254">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="83d2f-255">Il <xref:System.Net.Security.NegotiateStream> classe costruisce il nome dell'entità servizio usata per l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-255">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="83d2f-256">Quando l'autenticazione ha esito positivo, è necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-256">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="83d2f-257">Controllare il <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> proprietà per determinare se si è verificato durante l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-257">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="83d2f-258">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-258">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-259">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-259">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-260">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-260">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-261">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-261">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-262">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-262">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-263">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-263">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-264">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-264">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-265">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-265">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="83d2f-266">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-266">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="83d2f-267">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-267">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83d2f-268">usare l'impostazione esplicita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-268">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="83d2f-269">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-269">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="83d2f-270">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-270">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="83d2f-271">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-271">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-272">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-272">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="83d2f-273">The authentication process uses the specified client credential.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-273">The authentication process uses the specified client credential.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-274">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-274">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-275">È il livello di rappresentazione <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, il livello di sicurezza è <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, ed è richiesta l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-275">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="83d2f-276">Il <xref:System.Net.Security.NegotiateStream> classe costruisce il nome dell'entità servizio usata per l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-276">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="83d2f-277">Quando l'autenticazione ha esito positivo, è necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-277">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="83d2f-278">Controllare il <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> proprietà per determinare se si è verificato durante l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-278">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-279">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-279">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-280">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-280">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-281">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-281">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-282">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-282">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-283">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-283">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-284">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-284">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="83d2f-285">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-285">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="83d2f-286">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-286">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-287">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-287">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83d2f-288">usare l'impostazione esplicita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-288">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="83d2f-289">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-289">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="83d2f-290">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-290">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="83d2f-291">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-291">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="83d2f-292">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-292">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-293">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-293">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="83d2f-294">The authentication process uses the specified client credential and the channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-294">The authentication process uses the specified client credential and the channel binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-295">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-295">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-296">È il livello di rappresentazione <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, il livello di sicurezza è <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, ed è richiesta l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-296">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="83d2f-297">Il <xref:System.Net.Security.NegotiateStream> classe costruisce il nome dell'entità servizio usata per l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-297">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="83d2f-298">Il <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> utilizzato per la protezione estesa che viene passata al metodo nel `binding` parametro verrebbe recuperato da un'applicazione dalla <xref:System.Net.Security.SslStream.TransportContext%2A> proprietà sull'oggetto associato <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-298">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="83d2f-299">Quando l'autenticazione ha esito positivo, è necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-299">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="83d2f-300">Controllare il <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> proprietà per determinare se si è verificato durante l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-300">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-301">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-301">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="83d2f-302">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-302">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-303">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-303">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-304">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-304">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-305">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-305">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-306">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-306">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-307">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-307">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="83d2f-308">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-308">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="83d2f-309">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-309">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-310">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-310">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="83d2f-311">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-311">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="83d2f-312">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-312">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="83d2f-313">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-313">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="83d2f-314">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-314">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-315">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-315">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="83d2f-316">The authentication process uses the specified credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-316">The authentication process uses the specified credentials and authentication options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-317">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-317">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-318">Usare il `requiredProtectionLevel` parametro per richiedere i servizi di sicurezza per i dati trasmessi tramite il flusso autenticato.</span><span class="sxs-lookup"><span data-stu-id="83d2f-318">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="83d2f-319">Ad esempio, per ottenere i dati crittografati e firmati, specificare il <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valore.</span><span class="sxs-lookup"><span data-stu-id="83d2f-319">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="83d2f-320">L'autenticazione non garantisce che la richiesta <xref:System.Net.Security.ProtectionLevel> è stata concessa.</span><span class="sxs-lookup"><span data-stu-id="83d2f-320">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="83d2f-321">È necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-321">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="83d2f-322">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-322">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-323">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-323">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83d2f-324">
            <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-324">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-325">
            <paramref name="targetName" /> is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-325">
              <paramref name="targetName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-326">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-326">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-327">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-327">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-328">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-328">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-329">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-329">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-330">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-330">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-331">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-331">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="83d2f-332">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-332">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="83d2f-333">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-333">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83d2f-334">usare l'impostazione esplicita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-334">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="83d2f-335">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-335">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="83d2f-336">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-336">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="83d2f-337">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-337">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="83d2f-338">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-338">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="83d2f-339">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-339">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="83d2f-340">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-340">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-341">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-341">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="83d2f-342">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-342">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-343">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-343">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-344">Usare il `requiredProtectionLevel` parametro per richiedere i servizi di sicurezza per i dati trasmessi tramite il flusso autenticato.</span><span class="sxs-lookup"><span data-stu-id="83d2f-344">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="83d2f-345">Ad esempio, per ottenere i dati crittografati e firmati, specificare il <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valore.</span><span class="sxs-lookup"><span data-stu-id="83d2f-345">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="83d2f-346">L'autenticazione non garantisce che la richiesta <xref:System.Net.Security.ProtectionLevel> è stata concessa.</span><span class="sxs-lookup"><span data-stu-id="83d2f-346">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="83d2f-347">È necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-347">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="83d2f-348">Il <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> utilizzato per la protezione estesa che viene passata al metodo nel `binding` parametro verrebbe recuperato da un'applicazione dalla <xref:System.Net.Security.SslStream.TransportContext%2A> proprietà sull'oggetto associato <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-348">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="83d2f-349">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-349">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-350">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-350">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-351">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-351">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="83d2f-352">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-352">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83d2f-353">
            <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-353">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-354">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-354">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-355">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-355">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-356">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-356">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-357">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-357">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-358">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-358">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="83d2f-359">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-359">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="83d2f-360">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-360">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-361">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-361">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-362">Handles the server side of an authentication for a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-362">Handles the server side of an authentication for a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-363">Questi metodi bloccano mentre l'autenticazione è in corso.</span><span class="sxs-lookup"><span data-stu-id="83d2f-363">These methods block while the authentication is in progress.</span></span> <span data-ttu-id="83d2f-364">Per evitare il blocco durante l'attesa del completamento dell'autenticazione dell'applicazione, usare il <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="83d2f-364">To prevent the application from blocking while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : unit -&gt; unit&#xA;override this.AuthenticateAsServer : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsServer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-365">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-365">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-366">L'autenticazione usa il server <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-366">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="83d2f-367">Viene specificato alcun nome dell'entità servizio (SPN) per il server.</span><span class="sxs-lookup"><span data-stu-id="83d2f-367">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="83d2f-368">È il livello di rappresentazione <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, e il livello di sicurezza è <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-368">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="83d2f-369">Quando l'autenticazione ha esito positivo, è necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-369">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="83d2f-370">Controllare il <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> proprietà per determinare se si è verificato durante l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-370">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="83d2f-371">Questo metodo si blocca fino al completamento dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-371">This method blocks until the operation completes.</span></span> <span data-ttu-id="83d2f-372">Per evitare il blocco fino al completamento dell'operazione, usare uno del <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="83d2f-372">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="83d2f-373">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-373">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-374">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-374">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-375">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-375">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-376">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-376">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-377">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-377">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-378">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-378">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-379">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-379">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="83d2f-380">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-380">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83d2f-381">usare l'impostazione esplicita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-381">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="83d2f-382">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-382">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (policy As ExtendedProtectionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit" Usage="negotiateStream.AuthenticateAsServer policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="83d2f-383">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-383">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-384">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-384">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="83d2f-385">The authentication process uses the specified extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-385">The authentication process uses the specified extended protection policy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-386">L'autenticazione usa il server <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-386">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="83d2f-387">Viene specificato alcun nome dell'entità servizio (SPN) per il server.</span><span class="sxs-lookup"><span data-stu-id="83d2f-387">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="83d2f-388">È il livello di rappresentazione <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, e il livello di sicurezza è <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-388">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="83d2f-389">Se il `policy` parametro è `null`, quindi viene usato con un criterio di protezione estesa <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> impostato su <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-389">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="83d2f-390">Quando l'autenticazione ha esito positivo, è necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-390">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="83d2f-391">Controllare il <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> proprietà per determinare se si è verificato durante l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-391">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="83d2f-392">Questo metodo si blocca fino al completamento dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-392">This method blocks until the operation completes.</span></span> <span data-ttu-id="83d2f-393">Per evitare il blocco fino al completamento dell'operazione, usare uno del <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="83d2f-393">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="83d2f-394">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-394">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-395">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-395">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83d2f-396">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-396">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-397">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-397">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-398">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-398">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-399">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-399">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-400">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-400">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="83d2f-401">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-401">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-402">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-402">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="83d2f-403">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-403">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="83d2f-404">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-404">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="83d2f-405">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-405">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="83d2f-406">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-406">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-407">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-407">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="83d2f-408">The authentication process uses the specified server credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-408">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-409">Quando l'autenticazione ha esito positivo, è necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-409">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="83d2f-410">Controllare il <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> proprietà per determinare se si è verificato durante l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-410">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="83d2f-411">Questo metodo si blocca fino al completamento dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-411">This method blocks until the operation completes.</span></span> <span data-ttu-id="83d2f-412">Per evitare il blocco fino al completamento dell'operazione, usare uno del <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="83d2f-412">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="83d2f-413">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-413">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-414">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-414">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-415">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-415">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83d2f-416">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-416">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-417">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-417">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-418">You can use this object to try to r-authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-418">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-419">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-419">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-420">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-420">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-421">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-421">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-422">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-422">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="83d2f-423">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-423">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="83d2f-424">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-424">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="83d2f-425">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-425">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83d2f-426">usare l'impostazione esplicita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-426">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="83d2f-427">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-427">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="83d2f-428">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-428">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="83d2f-429">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-429">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="83d2f-430">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-430">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="83d2f-431">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-431">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-432">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-432">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="83d2f-433">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-433">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-434">Se il `policy` parametro è `null`, quindi viene usato con un criterio di protezione estesa <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> impostato su <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-434">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="83d2f-435">Quando l'autenticazione ha esito positivo, è necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-435">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="83d2f-436">Controllare il <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> proprietà per determinare se si è verificato durante l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-436">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="83d2f-437">Questo metodo si blocca fino al completamento dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-437">This method blocks until the operation completes.</span></span> <span data-ttu-id="83d2f-438">Per evitare il blocco fino al completamento dell'operazione, usare uno del <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="83d2f-438">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="83d2f-439">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-439">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-440">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-440">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83d2f-441">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-441">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-442">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-442">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83d2f-443">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-443">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-444">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-444">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-445">You can use this object to try to r-authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-445">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-446">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-446">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-447">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-447">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-448">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-448">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="83d2f-449">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-449">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="83d2f-450">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-450">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="83d2f-451">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-451">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-452">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-452">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="83d2f-453">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-453">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-454">Handles the server side of an authentication for a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-454">Handles the server side of an authentication for a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-455">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-455">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-456">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-456">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-457">L'autenticazione usa il server <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-457">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="83d2f-458">Viene specificato alcun nome dell'entità servizio (SPN) per il server.</span><span class="sxs-lookup"><span data-stu-id="83d2f-458">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="83d2f-459">È il livello di rappresentazione <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, e il livello di sicurezza è <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-459">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="83d2f-460">Quando l'autenticazione ha esito positivo, è necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-460">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="83d2f-461">Controllare il <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> proprietà per determinare se si è verificato durante l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-461">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="83d2f-462">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-462">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-463">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-463">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-464">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-464">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-465">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-465">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-466">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-466">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-467">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-467">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-468">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-468">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="83d2f-469">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-469">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83d2f-470">usare l'impostazione esplicita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-470">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="83d2f-471">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-471">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (policy As ExtendedProtectionPolicy) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="83d2f-472">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-472">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-473">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-473">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="83d2f-474">The authentication process uses the specified extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-474">The authentication process uses the specified extended protection policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-475">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-475">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-476">L'autenticazione usa il server <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-476">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="83d2f-477">Viene specificato alcun nome dell'entità servizio (SPN) per il server.</span><span class="sxs-lookup"><span data-stu-id="83d2f-477">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="83d2f-478">È il livello di rappresentazione <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, e il livello di sicurezza è <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-478">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="83d2f-479">Se il `policy` parametro è `null`, quindi viene usato con un criterio di protezione estesa <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> impostato su <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-479">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="83d2f-480">Quando l'autenticazione ha esito positivo, è necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-480">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="83d2f-481">Controllare il <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> proprietà per determinare se si è verificato durante l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-481">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="83d2f-482">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-482">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-483">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-483">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83d2f-484">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-484">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-485">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-485">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-486">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-486">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-487">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-487">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-488">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-488">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="83d2f-489">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-489">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-490">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-490">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="83d2f-491">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-491">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="83d2f-492">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-492">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="83d2f-493">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-493">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="83d2f-494">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-494">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-495">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-495">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="83d2f-496">The authentication process uses the specified server credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-496">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-497">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-497">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-498">Quando l'autenticazione ha esito positivo, è necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-498">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="83d2f-499">Controllare il <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> proprietà per determinare se si è verificato durante l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-499">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="83d2f-500">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-500">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-501">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-501">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-502">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-502">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83d2f-503">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-503">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-504">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-504">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-505">You can use this object to try to r-authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-505">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-506">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-506">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-507">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-507">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-508">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-508">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-509">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-509">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="83d2f-510">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-510">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="83d2f-511">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-511">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="83d2f-512">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-512">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83d2f-513">usare l'impostazione esplicita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-513">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="83d2f-514">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-514">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="83d2f-515">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-515">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="83d2f-516">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-516">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="83d2f-517">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-517">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="83d2f-518">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-518">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-519">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-519">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="83d2f-520">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-520">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-521">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-521">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-522">Se il `policy` parametro è `null`, quindi viene usato con un criterio di protezione estesa <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> impostato su <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-522">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="83d2f-523">Quando l'autenticazione ha esito positivo, è necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-523">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="83d2f-524">Controllare il <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> proprietà per determinare se si è verificato durante l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-524">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="83d2f-525">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-525">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-526">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-526">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83d2f-527">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-527">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-528">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-528">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83d2f-529">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-529">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-530">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-530">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-531">You can use this object to try to r-authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-531">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-532">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-532">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-533">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-533">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-534">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-534">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="83d2f-535">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-535">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="83d2f-536">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-536">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="83d2f-537">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-537">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-538">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-538">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="83d2f-539">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-539">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-540">Begins an asynchronous operation to authenticate the client side of a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-540">Begins an asynchronous operation to authenticate the client side of a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-541">Gli overload di questo metodo non vengono bloccati durante l'autenticazione è in corso.</span><span class="sxs-lookup"><span data-stu-id="83d2f-541">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="83d2f-542">Per bloccare durante l'attesa del completamento dell'autenticazione, usare uno del <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="83d2f-542">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback">
          <span data-ttu-id="83d2f-543">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-543">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="83d2f-544">A user-defined object containing information about the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-544">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="83d2f-545">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-545">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-546">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-546">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="83d2f-547">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-547">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-548">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-548">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-549">L'autenticazione usa il client <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-549">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="83d2f-550">Viene specificato alcun nome dell'entità servizio (SPN) per il server.</span><span class="sxs-lookup"><span data-stu-id="83d2f-550">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="83d2f-551">È il livello di rappresentazione <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, e il livello di sicurezza è <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-551">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span> <span data-ttu-id="83d2f-552">Il <xref:System.Net.Security.NegotiateStream> classe costruisce il nome dell'entità servizio usata per l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-552">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="83d2f-553">Questo metodo è asincrono e non si blocca durante il completamento dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-553">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="83d2f-554">Per bloccare fino al completamento dell'operazione, usare uno del <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="83d2f-554">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="83d2f-555">L'operazione asincrona di autenticazione deve essere completata chiamando il <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="83d2f-555">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="83d2f-556">In genere, il metodo viene richiamato dal `asyncCallback` delegare.</span><span class="sxs-lookup"><span data-stu-id="83d2f-556">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="83d2f-557">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="83d2f-557">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="83d2f-558">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-558">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-559">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-559">In this case, you can retry the authentication with a different credential.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-560">Esempio di codice seguente viene illustrata la chiamata di questo metodo per avviare un'autenticazione asincrona per il client.</span><span class="sxs-lookup"><span data-stu-id="83d2f-560">The following code example demonstrates calling this method to begin an asynchronous authentication for the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#2)]
 [!code-csharp[NclNegoAsyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-561">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-561">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-562">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-562">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-563">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-563">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-564">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-564">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-565">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-565">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-566">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-566">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="83d2f-567">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-567">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="83d2f-568">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-568">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83d2f-569">usare l'impostazione esplicita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-569">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="83d2f-570">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-570">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="83d2f-571">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-571">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="83d2f-572">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-572">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="83d2f-573">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-573">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="83d2f-574">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-574">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="83d2f-575">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-575">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-576">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-576">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="83d2f-577">The authentication process uses the specified credentials.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-577">The authentication process uses the specified credentials.</span>
          </span>
          <span data-ttu-id="83d2f-578">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-578">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-579">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-579">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-580">Questo metodo è asincrono e non si blocca durante il completamento dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-580">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="83d2f-581">Per bloccare fino al completamento dell'operazione, usare uno del <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="83d2f-581">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="83d2f-582">L'operazione asincrona di autenticazione deve essere completata chiamando il <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="83d2f-582">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="83d2f-583">In genere, il metodo viene richiamato dal `asyncCallback` delegare.</span><span class="sxs-lookup"><span data-stu-id="83d2f-583">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="83d2f-584">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="83d2f-584">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="83d2f-585">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-585">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-586">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-586">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-587">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-587">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="83d2f-588">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-588">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-589">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-589">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-590">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-590">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-591">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-591">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-592">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-592">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-593">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-593">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-594">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-594">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="83d2f-595">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-595">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="83d2f-596">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-596">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83d2f-597">usare l'impostazione esplicita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-597">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="83d2f-598">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-598">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="83d2f-599">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-599">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="83d2f-600">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-600">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="83d2f-601">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-601">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="83d2f-602">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-602">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="83d2f-603">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-603">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="83d2f-604">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-604">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-605">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-605">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="83d2f-606">The authentication process uses the specified credentials and channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-606">The authentication process uses the specified credentials and channel binding.</span>
          </span>
          <span data-ttu-id="83d2f-607">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-607">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-608">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-608">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-609">Questo metodo è asincrono e non si blocca durante il completamento dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-609">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="83d2f-610">Per bloccare fino al completamento dell'operazione, usare uno del <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="83d2f-610">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="83d2f-611">L'operazione asincrona di autenticazione deve essere completata chiamando il <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="83d2f-611">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="83d2f-612">In genere, il metodo viene richiamato dal `asyncCallback` delegare.</span><span class="sxs-lookup"><span data-stu-id="83d2f-612">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="83d2f-613">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="83d2f-613">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="83d2f-614">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-614">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-615">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-615">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-616">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-616">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="83d2f-617">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-617">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-618">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-618">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-619">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-619">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-620">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-620">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-621">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-621">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-622">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-622">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="83d2f-623">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-623">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="83d2f-624">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-624">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-625">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-625">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="83d2f-626">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-626">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="83d2f-627">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-627">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="83d2f-628">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-628">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="83d2f-629">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-629">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="83d2f-630">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-630">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="83d2f-631">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-631">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="83d2f-632">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-632">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-633">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-633">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="83d2f-634">The authentication process uses the specified credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-634">The authentication process uses the specified credentials and authentication options.</span>
          </span>
          <span data-ttu-id="83d2f-635">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-635">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-636">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-636">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-637">Usare il `requiredProtectionLevel` parametro per richiedere i servizi di sicurezza per i dati trasmessi tramite il flusso autenticato.</span><span class="sxs-lookup"><span data-stu-id="83d2f-637">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="83d2f-638">Ad esempio, per ottenere i dati crittografati e firmati, specificare il <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valore.</span><span class="sxs-lookup"><span data-stu-id="83d2f-638">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="83d2f-639">L'autenticazione non garantisce che la richiesta <xref:System.Net.Security.ProtectionLevel> è stata concessa.</span><span class="sxs-lookup"><span data-stu-id="83d2f-639">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="83d2f-640">È necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-640">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="83d2f-641">Questo metodo è asincrono e non si blocca durante il completamento dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-641">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="83d2f-642">Per bloccare fino al completamento dell'operazione, usare uno del <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="83d2f-642">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="83d2f-643">L'operazione asincrona di autenticazione deve essere completata chiamando il <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="83d2f-643">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="83d2f-644">In genere, il metodo viene richiamato dal `asyncCallback` delegare.</span><span class="sxs-lookup"><span data-stu-id="83d2f-644">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="83d2f-645">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="83d2f-645">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="83d2f-646">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-646">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-647">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-647">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-648">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-648">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="83d2f-649">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-649">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-650">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-650">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-651">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-651">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-652">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-652">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-653">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-653">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-654">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-654">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-655">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-655">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="83d2f-656">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-656">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="83d2f-657">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-657">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83d2f-658">usare l'impostazione esplicita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-658">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="83d2f-659">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-659">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="83d2f-660">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-660">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="83d2f-661">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-661">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="83d2f-662">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-662">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="83d2f-663">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-663">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="83d2f-664">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-664">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="83d2f-665">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-665">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="83d2f-666">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-666">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="83d2f-667">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-667">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-668">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-668">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="83d2f-669">The authentication process uses the specified credentials, authentication options, and channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-669">The authentication process uses the specified credentials, authentication options, and channel binding.</span>
          </span>
          <span data-ttu-id="83d2f-670">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-670">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-671">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-671">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-672">Usare il `requiredProtectionLevel` parametro per richiedere i servizi di sicurezza per i dati trasmessi tramite il flusso autenticato.</span><span class="sxs-lookup"><span data-stu-id="83d2f-672">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="83d2f-673">Ad esempio, per ottenere i dati crittografati e firmati, specificare il <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valore.</span><span class="sxs-lookup"><span data-stu-id="83d2f-673">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="83d2f-674">L'autenticazione non garantisce che la richiesta <xref:System.Net.Security.ProtectionLevel> è stata concessa.</span><span class="sxs-lookup"><span data-stu-id="83d2f-674">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="83d2f-675">È necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-675">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="83d2f-676">Questo metodo è asincrono e non si blocca durante il completamento dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-676">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="83d2f-677">Per bloccare fino al completamento dell'operazione, usare uno del <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="83d2f-677">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="83d2f-678">L'operazione asincrona di autenticazione deve essere completata chiamando il <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="83d2f-678">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="83d2f-679">In genere, il metodo viene richiamato dal `asyncCallback` delegare.</span><span class="sxs-lookup"><span data-stu-id="83d2f-679">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="83d2f-680">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="83d2f-680">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="83d2f-681">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-681">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-682">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-682">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-683">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-683">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="83d2f-684">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-684">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-685">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-685">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-686">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-686">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-687">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-687">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-688">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-688">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-689">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-689">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="83d2f-690">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-690">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="83d2f-691">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-691">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-692">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-692">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-693">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-693">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-694">Gli overload di questo metodo non vengono bloccati durante l'autenticazione è in corso.</span><span class="sxs-lookup"><span data-stu-id="83d2f-694">The overloads of this method do not block while the authentication is in progress.</span></span> <span data-ttu-id="83d2f-695">Per bloccare durante l'attesa del completamento dell'autenticazione, usare il <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="83d2f-695">To block while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback">
          <span data-ttu-id="83d2f-696">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-696">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="83d2f-697">A user-defined object containing information about the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-697">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="83d2f-698">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-698">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-699">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-699">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="83d2f-700">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-700">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-701">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-701">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-702">L'autenticazione usa il server <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-702">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="83d2f-703">Viene specificato alcun nome dell'entità servizio (SPN) per il server.</span><span class="sxs-lookup"><span data-stu-id="83d2f-703">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="83d2f-704">È il livello di rappresentazione <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, il livello di sicurezza è <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-704">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="83d2f-705">Quando l'autenticazione ha esito positivo, è necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-705">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="83d2f-706">Controllare il <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> proprietà per determinare se si è verificato durante l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-706">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="83d2f-707">Per bloccare fino al completamento dell'operazione, usare uno del <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="83d2f-707">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="83d2f-708">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-708">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-709">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-709">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-710">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-710">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-711">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-711">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-712">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-712">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-713">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-713">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-714">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-714">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="83d2f-715">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-715">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83d2f-716">usare l'impostazione esplicita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-716">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="83d2f-717">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-717">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (policy, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="83d2f-718">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-718">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="83d2f-719">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-719">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="83d2f-720">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-720">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="83d2f-721">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-721">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-722">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-722">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="83d2f-723">The authentication process uses the specified extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-723">The authentication process uses the specified extended protection policy.</span>
          </span>
          <span data-ttu-id="83d2f-724">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-724">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-725">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-725">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-726">L'autenticazione usa il server <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-726">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="83d2f-727">Viene specificato alcun nome dell'entità servizio (SPN) per il server.</span><span class="sxs-lookup"><span data-stu-id="83d2f-727">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="83d2f-728">È il livello di rappresentazione <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, il livello di sicurezza è <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-728">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="83d2f-729">Se il `policy` parametro è `null`, quindi viene usato con un criterio di protezione estesa <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> impostato su <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-729">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="83d2f-730">Quando l'autenticazione ha esito positivo, è necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-730">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="83d2f-731">Controllare il <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> proprietà per determinare se si è verificato durante l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-731">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="83d2f-732">Per bloccare fino al completamento dell'operazione, usare uno del <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="83d2f-732">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="83d2f-733">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-733">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-734">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-734">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83d2f-735">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-735">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-736">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-736">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-737">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-737">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-738">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-738">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-739">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-739">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="83d2f-740">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-740">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-741">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-741">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="83d2f-742">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-742">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="83d2f-743">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-743">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="83d2f-744">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-744">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="83d2f-745">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-745">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="83d2f-746">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-746">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="83d2f-747">A user-defined object containing information about the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-747">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="83d2f-748">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-748">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-749">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-749">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="83d2f-750">The authentication process uses the specified server credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-750">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
          <span data-ttu-id="83d2f-751">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-751">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-752">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-752">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-753">Usare il `requiredProtectionLevel` parametro per richiedere i servizi di sicurezza per i dati trasmessi tramite il flusso autenticato.</span><span class="sxs-lookup"><span data-stu-id="83d2f-753">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="83d2f-754">Ad esempio, per ottenere i dati crittografati e firmati, specificare il <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valore.</span><span class="sxs-lookup"><span data-stu-id="83d2f-754">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="83d2f-755">L'autenticazione non garantisce che, la richiesta <xref:System.Net.Security.ProtectionLevel> è stata concessa.</span><span class="sxs-lookup"><span data-stu-id="83d2f-755">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="83d2f-756">È necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-756">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="83d2f-757">Questo metodo è asincrono e non si blocca durante il completamento dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-757">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="83d2f-758">Per bloccare fino al completamento dell'operazione, usare uno del <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="83d2f-758">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="83d2f-759">L'operazione asincrona di autenticazione deve essere completata chiamando il <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="83d2f-759">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="83d2f-760">In genere, il metodo viene richiamato dal `asyncCallback` delegare.</span><span class="sxs-lookup"><span data-stu-id="83d2f-760">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="83d2f-761">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="83d2f-761">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="83d2f-762">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-762">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-763">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-763">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-764">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-764">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83d2f-765">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-765">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-766">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-766">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-767">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-767">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-768">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-768">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-769">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-769">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-770">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-770">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-771">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-771">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="83d2f-772">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-772">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="83d2f-773">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-773">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="83d2f-774">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-774">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83d2f-775">usare l'impostazione esplicita <see cref="T:System.Net.NetworkCredential" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-775">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="83d2f-776">Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-776">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="83d2f-777">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-777">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="83d2f-778">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-778">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="83d2f-779">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-779">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="83d2f-780">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-780">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="83d2f-781">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-781">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="83d2f-782">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-782">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="83d2f-783">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-783">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-784">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-784">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="83d2f-785">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-785">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
          <span data-ttu-id="83d2f-786">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-786">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-787">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-787">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-788">Usare il `requiredProtectionLevel` parametro per richiedere i servizi di sicurezza per i dati trasmessi tramite il flusso autenticato.</span><span class="sxs-lookup"><span data-stu-id="83d2f-788">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="83d2f-789">Ad esempio, per ottenere i dati crittografati e firmati, specificare il <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> valore.</span><span class="sxs-lookup"><span data-stu-id="83d2f-789">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="83d2f-790">L'autenticazione non garantisce che, la richiesta <xref:System.Net.Security.ProtectionLevel> è stata concessa.</span><span class="sxs-lookup"><span data-stu-id="83d2f-790">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="83d2f-791">È necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-791">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="83d2f-792">Se il `policy` parametro è `null`, quindi viene usato con un criterio di protezione estesa <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> impostato su <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-792">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="83d2f-793">Questo metodo è asincrono e non si blocca durante il completamento dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-793">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="83d2f-794">Per bloccare fino al completamento dell'operazione, usare uno del <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="83d2f-794">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="83d2f-795">L'operazione asincrona di autenticazione deve essere completata chiamando il <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="83d2f-795">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="83d2f-796">In genere, il metodo viene richiamato dal `asyncCallback` delegare.</span><span class="sxs-lookup"><span data-stu-id="83d2f-796">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="83d2f-797">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="83d2f-797">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="83d2f-798">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-798">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-799">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-799">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83d2f-800">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-800">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-801">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-801">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83d2f-802">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-802">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-803">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-803">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-804">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-804">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-805">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-805">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-806">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-806">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-807">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-807">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="83d2f-808">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-808">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="83d2f-809">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-809">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="83d2f-810">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-810">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-811">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-811">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="83d2f-812">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-812">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="83d2f-813">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-813">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="83d2f-814">The zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-814">The zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="83d2f-815">The maximum number of bytes to read from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-815">The maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="83d2f-816">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-816">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="83d2f-817">A user-defined object containing information about the read operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-817">A user-defined object containing information about the read operation.</span>
          </span>
          <span data-ttu-id="83d2f-818">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-818">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-819">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-819">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-820">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-820">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-821">Se sono abilitate la crittografia, firma, o la crittografia e firma, l'operazione di lettura legge i dati dal flusso sottostante, controlla l'integrità dei dati e lo decrittografa.</span><span class="sxs-lookup"><span data-stu-id="83d2f-821">If encryption, signing, or encryption and signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and decrypts it.</span></span> <span data-ttu-id="83d2f-822">Se nessuna sicurezza dei servizi, ad esempio la crittografia dei dati o l'accesso sono in uso, questo metodo avvia un'operazione di lettura asincrona sul flusso sottostante.</span><span class="sxs-lookup"><span data-stu-id="83d2f-822">If no security services such as data encryption or signing are in use, this method starts an asynchronous read operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="83d2f-823">Questo metodo è asincrono e non si blocca durante il completamento dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-823">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="83d2f-824">Per bloccare fino al completamento dell'operazione, usare il <xref:System.Net.Security.NegotiateStream.Read%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="83d2f-824">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="83d2f-825">L'operazione di lettura asincrona da completare tramite la chiamata di <xref:System.Net.Security.NegotiateStream.EndRead%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="83d2f-825">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndRead%2A> method.</span></span> <span data-ttu-id="83d2f-826">In genere, il metodo viene richiamato dal `asyncCallback` delegare.</span><span class="sxs-lookup"><span data-stu-id="83d2f-826">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="83d2f-827">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="83d2f-827">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="83d2f-828">Il <xref:System.Net.Security.NegotiateStream> classe non supporta operazioni di lettura multiple simultanee.</span><span class="sxs-lookup"><span data-stu-id="83d2f-828">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous read operations.</span></span> <span data-ttu-id="83d2f-829">Se si prova ad avviare un'operazione di lettura, mentre un'altra lettura operazione è già in esecuzione nello stesso flusso, un <xref:System.NotSupportedException> verrà generata l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-829">If you attempt to start a read operation while another read operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="83d2f-830">È possibile chiamare questo metodo fino a quando non è stata effettuata l'autenticazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-830">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="83d2f-831">Per eseguire l'autenticazione, chiamare uno dei <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, o <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="83d2f-831">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-832">Esempio di codice seguente viene illustrato come avviare un'operazione di lettura asincrona.</span><span class="sxs-lookup"><span data-stu-id="83d2f-832">The following code example demonstrates starting an asynchronous read operation.</span></span> <span data-ttu-id="83d2f-833">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="83d2f-833">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#1)]
 [!code-csharp[NclNegoAsyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-834">
            <paramref name="buffer" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-834">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83d2f-835">
            <paramref name="offset" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-835">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="83d2f-836">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-836">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="83d2f-837">\- or -  <paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-837">\- or -  <paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="83d2f-838">The read operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-838">The read operation failed.</span>
          </span>
          <span data-ttu-id="83d2f-839">\- or -  Encryption is in use, but the data could not be decrypted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-839">\- or -  Encryption is in use, but the data could not be decrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="83d2f-840">There is already a read operation in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-840">There is already a read operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-841">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-841">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-842">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-842">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginWrite (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="83d2f-843">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-843">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="83d2f-844">The zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-844">The zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="83d2f-845">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-845">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="83d2f-846">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-846">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="83d2f-847">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-847">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="83d2f-848">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-848">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-849">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-849">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-850">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-850">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-851">Se sono abilitate la crittografia, firma, o la crittografia e firma, questo metodo legge i dati dal buffer esegue la crittografia, firma, oppure esegue la crittografia e lo firma e trasmette tramite il flusso sottostante.</span><span class="sxs-lookup"><span data-stu-id="83d2f-851">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="83d2f-852">Se nessuna sicurezza dei servizi, ad esempio la crittografia dei dati o l'accesso sono in uso, questo metodo avvia un'operazione di scrittura asincrona sul flusso sottostante.</span><span class="sxs-lookup"><span data-stu-id="83d2f-852">If no security services such as data encryption or signing are in use, this method starts an asynchronous write operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="83d2f-853">Questo metodo è asincrono e non si blocca durante il completamento dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-853">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="83d2f-854">Per bloccare fino al completamento dell'operazione, usare il <xref:System.Net.Security.NegotiateStream.Read%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="83d2f-854">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="83d2f-855">L'operazione di lettura asincrona da completare tramite la chiamata di <xref:System.Net.Security.NegotiateStream.EndWrite%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="83d2f-855">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndWrite%2A> method.</span></span> <span data-ttu-id="83d2f-856">In genere, il metodo viene richiamato dal `asyncCallback` delegare.</span><span class="sxs-lookup"><span data-stu-id="83d2f-856">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="83d2f-857">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="83d2f-857">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="83d2f-858">Il <xref:System.Net.Security.NegotiateStream> classe non supporta più operazioni di scrittura simultanee.</span><span class="sxs-lookup"><span data-stu-id="83d2f-858">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="83d2f-859">Se si prova ad avviare un'operazione di scrittura, mentre un'altra operazione di scrittura è già in esecuzione nello stesso flusso, un <xref:System.NotSupportedException> verrà generata l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-859">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="83d2f-860">È possibile chiamare questo metodo fino a quando non è stata effettuata l'autenticazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-860">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="83d2f-861">Per eseguire l'autenticazione, chiamare uno dei <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, o <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="83d2f-861">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-862">Esempio di codice seguente viene illustrato l'avvio di un'operazione di scrittura asincrona.</span><span class="sxs-lookup"><span data-stu-id="83d2f-862">The following code example demonstrates beginning an asynchronous write operation.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#3)]
 [!code-csharp[NclNegoAsyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#3)]  
  
 <span data-ttu-id="83d2f-863">Il metodo seguente viene chiamato al termine dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-863">The following method is called when the operation completes.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-864">
            <paramref name="buffer" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-864">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83d2f-865">
            <paramref name="offset is less than 0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-865">
              <paramref name="offset is less than 0" />.</span>
          </span>
          <span data-ttu-id="83d2f-866">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-866">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="83d2f-867">\- or -  <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-867">\- or -  <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="83d2f-868">The write operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-868">The write operation failed.</span>
          </span>
          <span data-ttu-id="83d2f-869">\- or -  Encryption is in use, but the data could not be encrypted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-869">\- or -  Encryption is in use, but the data could not be encrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="83d2f-870">There is already a write operation in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-870">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-871">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-871">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-872">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-872">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Security.NegotiateStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-873">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-873">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83d2f-874">
            <see langword="true" /> Se l'autenticazione è avvenuta e il flusso sottostante è leggibile; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-874">
              <see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-875">Se si è verificato l'autenticazione ha esito positivo, questa proprietà restituisce il valore restituito richiamando il <xref:System.IO.Stream.CanRead%2A> proprietà nel flusso sottostante.</span><span class="sxs-lookup"><span data-stu-id="83d2f-875">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanRead%2A> property on the underlying stream.</span></span> <span data-ttu-id="83d2f-876">Il flusso sottostante viene specificato quando si crea un'istanza di <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="83d2f-876">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-877">Esempio di codice seguente viene illustrato come visualizzare il valore di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="83d2f-877">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Security.NegotiateStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-878">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-878">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83d2f-879">Questa proprietà restituisce sempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-879">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-880">Non provare a impostare la posizione del <xref:System.Net.Security.NegotiateStream> oggetto o il flusso sottostante.</span><span class="sxs-lookup"><span data-stu-id="83d2f-880">You should not attempt to set the position of the <xref:System.Net.Security.NegotiateStream> object or its underlying stream.</span></span> <span data-ttu-id="83d2f-881">Il flusso sottostante viene specificato quando si crea un'istanza di <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="83d2f-881">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-882">Esempio di codice seguente viene illustrato come visualizzare il valore di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="83d2f-882">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Security.NegotiateStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-883">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-883">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83d2f-884">
            <see langword="true" /> Se il flusso sottostante supporta i timeout; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-884">
              <see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-885">Questa proprietà restituisce il valore restituito richiamando il <xref:System.IO.Stream.CanTimeout%2A> proprietà nel flusso sottostante.</span><span class="sxs-lookup"><span data-stu-id="83d2f-885">This property returns the value returned by invoking the <xref:System.IO.Stream.CanTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="83d2f-886">Il flusso sottostante viene specificato quando si crea un'istanza di <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="83d2f-886">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-887">Esempio di codice seguente viene illustrato come visualizzare il valore di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="83d2f-887">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Security.NegotiateStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-888">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-888">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83d2f-889">
            <see langword="true" /> Se l'autenticazione è avvenuta e il flusso sottostante è scrivibile; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-889">
              <see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-890">Se si è verificato l'autenticazione ha esito positivo, questa proprietà restituisce il valore restituito richiamando il <xref:System.IO.Stream.CanWrite%2A> proprietà nel flusso sottostante.</span><span class="sxs-lookup"><span data-stu-id="83d2f-890">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanWrite%2A> property on the underlying stream.</span></span> <span data-ttu-id="83d2f-891">Il flusso sottostante viene specificato quando si crea un'istanza di <xref:System.Net.Security.NegotiateStream> classe.</span><span class="sxs-lookup"><span data-stu-id="83d2f-891">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-892">Esempio di codice seguente viene illustrato come visualizzare il valore di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="83d2f-892">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="negotiateStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="83d2f-893">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-893">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-894">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-894">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-895">Questo metodo viene chiamato da parte del pubblico `Dispose()` metodo e <xref:System.Object.Finalize%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="83d2f-895">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="83d2f-896">`Dispose()` richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="83d2f-896">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="83d2f-897"><xref:System.Object.Finalize%2A> richiama `Dispose` con `disposing` impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="83d2f-897"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="83d2f-898">Quando la `disposing` parametro è true, questo metodo rilascia tutte le risorse utilizzate da qualsiasi oggetto gestito da questo <xref:System.Net.Security.NegotiateStream> riferimenti.</span><span class="sxs-lookup"><span data-stu-id="83d2f-898">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.NegotiateStream> references.</span></span> <span data-ttu-id="83d2f-899">Il metodo richiama il metodo `Dispose()` di ciascun oggetto cui viene fatto riferimento.</span><span class="sxs-lookup"><span data-stu-id="83d2f-899">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="83d2f-900">
            <para>
              <see langword="Dispose" /> può essere chiamato più volte da altri oggetti. Quando si esegue l'override <see langword="Dispose(Boolean)" /> prestare attenzione a non fare riferimento agli oggetti che sono stati eliminati in una precedente chiamata a <see langword="Dispose" />. Per altre informazioni su come implementare <see langword="Dispose(Boolean)" />, vedere [che implementa un Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Per altre informazioni sulle <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, vedere [pulizia backup Resources](~/docs/standard/garbage-collection/unmanaged.md) non gestito e [override del metodo Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-900">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsClient : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsClient : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsClient asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="83d2f-901">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-901">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-902">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-902">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-903">Se l'operazione non è stata completata, questo metodo si blocca fino a quando non avviene.</span><span class="sxs-lookup"><span data-stu-id="83d2f-903">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="83d2f-904">Quando l'autenticazione ha esito positivo, è necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-904">When the authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="83d2f-905">Controllare il <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> proprietà per determinare se si è verificato durante l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-905">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="83d2f-906">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-906">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-907">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-907">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="83d2f-908">Per eseguire questa operazione in modo sincrono, usare uno del <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="83d2f-908">To perform this operation synchronously, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-909">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-909">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83d2f-910">
            <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-910">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-911">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-911">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-912">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-912">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-913">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-913">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-914">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-914">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-915">There is no pending client authentication to complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-915">There is no pending client authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsServer : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsServer : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsServer asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="83d2f-916">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-916">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-917">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-917">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-918">Se l'operazione non è stata completata, questo metodo si blocca fino a quando non avviene.</span><span class="sxs-lookup"><span data-stu-id="83d2f-918">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="83d2f-919">Quando l'autenticazione ha esito positivo, è necessario controllare la <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> e <xref:System.Net.Security.NegotiateStream.IsSigned%2A> delle proprietà per determinare quali servizi di sicurezza vengono utilizzati dal <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-919">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="83d2f-920">Controllare il <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> proprietà per determinare se si è verificato durante l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-920">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="83d2f-921">Se l'autenticazione non riesce, si riceve un <xref:System.Security.Authentication.AuthenticationException> o un <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-921">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="83d2f-922">In questo caso, è possibile riprovare a eseguire l'autenticazione con credenziali diverse.</span><span class="sxs-lookup"><span data-stu-id="83d2f-922">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="83d2f-923">Per eseguire questa operazione in modo sincrono, usare il <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="83d2f-923">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-924">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-924">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83d2f-925">
            <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-925">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="83d2f-926">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-926">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-927">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-927">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="83d2f-928">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-928">The authentication failed.</span>
          </span>
          <span data-ttu-id="83d2f-929">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-929">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-930">There is no pending authentication to complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-930">There is no pending authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="negotiateStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="83d2f-931">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-931">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-932">Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-932">Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-933">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-933">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-934">Se l'operazione non è stata completata, questo metodo si blocca fino a quando non avviene.</span><span class="sxs-lookup"><span data-stu-id="83d2f-934">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="83d2f-935">Per eseguire questa operazione in modo sincrono, usare il <xref:System.Net.Security.NegotiateStream.Read%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="83d2f-935">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="83d2f-936">È possibile chiamare questo metodo fino a quando non è stata effettuata l'autenticazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-936">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="83d2f-937">Per eseguire l'autenticazione, chiamare uno dei <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, o <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="83d2f-937">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-938">Esempio di codice seguente viene illustrato l'operazione finale asincrona read.</span><span class="sxs-lookup"><span data-stu-id="83d2f-938">The following code example demonstrates ending an asynchronous read operation.</span></span> <span data-ttu-id="83d2f-939">Per un esempio che illustra l'avvio dell'operazione, vedere <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-939">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#3)]
 [!code-csharp[NclNegoAsyncServer#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-940">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-940">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83d2f-941">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-941">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-942">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-942">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="83d2f-943">The read operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-943">The read operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="negotiateStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="83d2f-944">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-944">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-945">Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-945">Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-946">Se l'operazione non è stata completata, questo metodo si blocca fino a quando non avviene.</span><span class="sxs-lookup"><span data-stu-id="83d2f-946">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="83d2f-947">È possibile chiamare questo metodo fino a quando non è stata effettuata l'autenticazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-947">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="83d2f-948">Per eseguire l'autenticazione, chiamare uno dei <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, o <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="83d2f-948">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="83d2f-949">Per eseguire questa operazione in modo sincrono, usare il <xref:System.Net.Security.NegotiateStream.Write%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="83d2f-949">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-950">Esempio di codice seguente viene illustrato un metodo che viene chiamato per completare l'operazione di scrittura asincrona.</span><span class="sxs-lookup"><span data-stu-id="83d2f-950">The following code example demonstrates a method that is called to complete the asynchronous write operation.</span></span> <span data-ttu-id="83d2f-951">Per un esempio che illustra l'avvio dell'operazione, vedere <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-951">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-952">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-952">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83d2f-953">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-953">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-954">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-954">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="83d2f-955">The write operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-955">The write operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="negotiateStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-956">Causes any buffered data to be written to the underlying device.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-956">Causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-957">Questo metodo richiama <xref:System.IO.Stream.Flush%2A> nel flusso sottostante.</span><span class="sxs-lookup"><span data-stu-id="83d2f-957">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-958">Esempio di codice seguente viene illustrato come la cancellazione del flusso.</span><span class="sxs-lookup"><span data-stu-id="83d2f-958">The following code example demonstrates flushing the stream.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel" Usage="System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-959">Gets a value that indicates how the server can use the client's credentials.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-959">Gets a value that indicates how the server can use the client's credentials.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83d2f-960">Uno dei valori di <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-960">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-961">È necessario eseguire l'autenticazione prima di chiamare questo metodo.</span><span class="sxs-lookup"><span data-stu-id="83d2f-961">You must successfully authenticate before calling this method.</span></span> <span data-ttu-id="83d2f-962">I client specifichino il livello di rappresentazione quando richiedono l'autenticazione, chiamando uno dei <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> o <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="83d2f-962">Clients specify the impersonation level when they request authentication by calling one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="83d2f-963">Se si esegue l'autenticazione senza specificare una <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> viene usato.</span><span class="sxs-lookup"><span data-stu-id="83d2f-963">If you authenticate without specifying a <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-964">Esempio di codice seguente viene illustrato come visualizzare il valore di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="83d2f-964">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-965">Authentication failed or has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-965">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-966">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-966">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83d2f-967">
            <see langword="true" /> Se si è verificato l'autenticazione ha esito positivo; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-967">
              <see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-968">I client si autentichino chiamando il <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> o <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="83d2f-968">Clients authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="83d2f-969">Eseguire l'autenticazione server chiamando il <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> o <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="83d2f-969">Servers authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-970">Esempio di codice seguente viene illustrato come visualizzare il valore di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="83d2f-970">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEncrypted : bool" Usage="System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-971">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-971">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83d2f-972">
            <see langword="true" /> Se i dati vengono crittografati prima di essere trasmessi in rete e decrittografati quando raggiungono l'endpoint remoto; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-972">
              <see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-973">La crittografia consente di proteggere la privacy dei dati. in particolare, consente di garantire che quando i dati sono in transito non possano essere decifrati da terze parti.</span><span class="sxs-lookup"><span data-stu-id="83d2f-973">Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-974">Esempio di codice seguente viene illustrato come visualizzare il valore di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="83d2f-974">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Security.ProtectionLevel" />
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMutuallyAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-975">Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-975">Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83d2f-976">
            <see langword="true" /> Se il server è stato autenticato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-976">
              <see langword="true" /> if the server has been authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-977">L'autenticazione reciproca viene specificata dal client quando il client richiede al server di fornire le credenziali per l'autenticazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-977">Mutual authentication is specified by the client when the client wants the server to provide credentials for authentication.</span></span> <span data-ttu-id="83d2f-978">Per impostazione predefinita, i client richiedono l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-978">By default, clients request mutual authentication.</span></span>  
  
 <span data-ttu-id="83d2f-979">Il protocollo di negoziazione consente di selezionare NTLM o Kerberos in base i protocolli di sicurezza supportati dal client e server.</span><span class="sxs-lookup"><span data-stu-id="83d2f-979">The Negotiate protocol selects either NTLM or Kerberos depending on the security protocols supported by the client and server.</span></span> <span data-ttu-id="83d2f-980">NTLM non supporta l'autenticazione reciproca.</span><span class="sxs-lookup"><span data-stu-id="83d2f-980">NTLM does not support mutual authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-981">Esempio di codice seguente viene illustrato come visualizzare il valore di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="83d2f-981">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServer : bool" Usage="System.Net.Security.NegotiateStream.IsServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-982">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-982">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83d2f-983">
            <see langword="true" /> Se l'endpoint locale è stato correttamente autenticato come lato server della connessione autenticata; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-983">
              <see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-984">Se l'autenticazione non riuscita o non si è verificato, questa proprietà restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="83d2f-984">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="83d2f-985">Per eseguire l'autenticazione del server, chiamare il <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> o <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="83d2f-985">To authenticate as the server, call the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-986">Esempio di codice seguente viene illustrato come visualizzare il valore di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="83d2f-986">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.Net.Security.NegotiateStream.IsSigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-987">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-987">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83d2f-988">
            <see langword="true" /> Se i dati vengono firmati prima di essere trasmessi; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-988">
              <see langword="true" /> if the data is signed before being transmitted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-989">La firma dei dati consente di proteggere l'integrità dei dati. vale a dire, consente al destinatario di determinare se sono stato manomesso i dati in transito.</span><span class="sxs-lookup"><span data-stu-id="83d2f-989">Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-990">Esempio di codice seguente viene illustrato come visualizzare il valore di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="83d2f-990">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Security.NegotiateStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-991">Gets the length of the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-991">Gets the length of the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83d2f-992">Oggetto <see cref="T:System.Int64" /> che specifica la lunghezza del flusso sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-992">A <see cref="T:System.Int64" /> that specifies the length of the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-993">Questa proprietà restituisce il valore restituito richiamando il <xref:System.IO.Stream.Length%2A> proprietà nel flusso sottostante.</span><span class="sxs-lookup"><span data-stu-id="83d2f-993">This property returns the value returned by invoking the <xref:System.IO.Stream.Length%2A> property on the underlying stream.</span></span> <span data-ttu-id="83d2f-994">Se il flusso sottostante non ricercabile, questa proprietà in genere genererà un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-994">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="83d2f-995">Il tipo di runtime del flusso sottostante determina il tipo di runtime dell'eccezione generata.</span><span class="sxs-lookup"><span data-stu-id="83d2f-995">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-996">Esempio di codice seguente viene illustrato come visualizzare il valore di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="83d2f-996">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="83d2f-997">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-997">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Security.NegotiateStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-998">Gets or sets the current position in the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-998">Gets or sets the current position in the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83d2f-999">Oggetto <see cref="T:System.Int64" /> che specifica la posizione corrente nel flusso sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-999">A <see cref="T:System.Int64" /> that specifies the current position in the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-1000">Questa proprietà restituisce il valore restituito richiamando il <xref:System.IO.Stream.Position%2A> proprietà nel flusso sottostante.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1000">This property returns the value returned by invoking the <xref:System.IO.Stream.Position%2A> property on the underlying stream.</span></span> <span data-ttu-id="83d2f-1001">Se il flusso sottostante non ricercabile, questa proprietà in genere genererà un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1001">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="83d2f-1002">Il tipo di runtime del flusso sottostante determina il tipo di runtime dell'eccezione generata.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1002">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="83d2f-1003">Setting this property is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1003">Setting this property is not supported.</span>
          </span>
          <span data-ttu-id="83d2f-1004">\- or -  Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1004">\- or -  Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="negotiateStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="83d2f-1005">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1005">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="83d2f-1006">A <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1006">A <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="83d2f-1007">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1007">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-1008">Reads data from this stream and stores it in the specified array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1008">Reads data from this stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-1009">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1009">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
          <span data-ttu-id="83d2f-1010">When there is no more data to be read, returns 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1010">When there is no more data to be read, returns 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-1011">Il metodo legge un numero massimo di `count` flusso di byte dall'oggetto corrente e li archivia in `buffer` partire `offset`.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1011">The method reads a maximum of `count` bytes from the current stream and stores them in `buffer` beginning at `offset`.</span></span>  
  
 <span data-ttu-id="83d2f-1012">È possibile chiamare questo metodo fino a quando non è stata effettuata l'autenticazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1012">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="83d2f-1013">Per eseguire l'autenticazione, chiamare uno dei <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, o <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1013">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="83d2f-1014">Per eseguire questa operazione in modo asincrono, utilizzare il <xref:System.Net.Security.NegotiateStream.BeginRead%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="83d2f-1014">To perform this operation asynchronously, use the <xref:System.Net.Security.NegotiateStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-1015">Esempio di codice seguente illustra la lettura da un <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1015">The following code example demonstrates reading from a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncServer/CPP/NclNegoSyncServer.cpp#1)]
 [!code-csharp[NclNegoSyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="83d2f-1016">The read operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1016">The read operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-1017">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1017">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="83d2f-1018">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1018">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-1019">Gets or sets the amount of time a read operation blocks waiting for data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1019">Gets or sets the amount of time a read operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83d2f-1020">Oggetto <see cref="T:System.Int32" /> che specifica la quantità di tempo che deve trascorrerà prima che un'operazione di lettura ha esito negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1020">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a read operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-1021">Questa proprietà restituisce il valore restituito richiamando il <xref:System.IO.Stream.ReadTimeout%2A> proprietà nel flusso sottostante.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1021">This property returns the value returned by invoking the <xref:System.IO.Stream.ReadTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="83d2f-1022">Quando si imposta questa proprietà, il <xref:System.IO.Stream.ReadTimeout%2A> valore nel flusso sottostante è impostata sul valore specificato.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1022">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="83d2f-1023">Se il flusso sottostante è un <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> è espresso in millisecondi e viene impostato su <xref:System.Threading.Timeout.Infinite> per impostazione predefinita, in modo che le operazioni di lettura verifica il timeout.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1023">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-1024">Esempio di codice seguente viene illustrato come visualizzare il valore di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1024">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteIdentity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity RemoteIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity RemoteIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteIdentity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ RemoteIdentity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteIdentity : System.Security.Principal.IIdentity" Usage="System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-1025">Gets information about the identity of the remote party sharing this authenticated stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1025">Gets information about the identity of the remote party sharing this authenticated stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83d2f-1026">Un <see cref="T:System.Security.Principal.IIdentity" /> oggetto che descrive l'identità dell'endpoint remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1026">An <see cref="T:System.Security.Principal.IIdentity" /> object that describes the identity of the remote endpoint.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-1027">Quando si accede dal client, questa proprietà restituisce un <xref:System.Security.Principal.GenericIdentity> contenente il nome dell'entità di servizio (SPN) del server e il protocollo di autenticazione utilizzato.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1027">When accessed by the client, this property returns a <xref:System.Security.Principal.GenericIdentity> containing the Service Principal Name (SPN) of the server and the authentication protocol used.</span></span> <span data-ttu-id="83d2f-1028">Quando si accede dal server, questa proprietà restituisce un <xref:System.Security.Principal.WindowsIdentity> che descrive il client.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1028">When accessed by the server, this property returns a <xref:System.Security.Principal.WindowsIdentity> that describes the client.</span></span> <span data-ttu-id="83d2f-1029">Se il <xref:System.Security.Principal.WindowsIdentity> è non disponibile, vengono restituite informazioni client al server in un <xref:System.Security.Principal.GenericIdentity>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1029">If the <xref:System.Security.Principal.WindowsIdentity> is not available, client information is returned to the server in a <xref:System.Security.Principal.GenericIdentity>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-1030">Esempio di codice seguente viene illustrato come visualizzare il valore di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1030">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#2)]
 [!code-csharp[NclNegoAsyncServer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-1031">Authentication failed or has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1031">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="negotiateStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="83d2f-1032">This value is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1032">This value is ignored.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="83d2f-1033">This value is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1033">This value is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-1034">Throws <see cref="T:System.NotSupportedException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1034">Throws <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83d2f-1035">Always throws a <see cref="T:System.NotSupportedException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1035">Always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-1036">Non chiamare questo metodo.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1036">Do not call this method.</span></span> <span data-ttu-id="83d2f-1037">Viene ereditata, ma non è supportato da <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1037">It is inherited, but is not supported by <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="83d2f-1038">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1038">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="negotiateStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="83d2f-1039">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1039">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-1040">Sets the length of the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1040">Sets the length of the underlying stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="negotiateStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="83d2f-1041">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1041">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="83d2f-1042">An <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1042">An <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="83d2f-1043">A <see cref="T:System.Int32" /> containing the number of bytes to read from <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1043">A <see cref="T:System.Int32" /> containing the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83d2f-1044">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1044">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-1045">Se sono abilitate la crittografia, firma, o la crittografia e firma, questo metodo legge i dati dal buffer esegue la crittografia, firma, oppure esegue la crittografia e lo firma e trasmette tramite il flusso sottostante.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1045">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="83d2f-1046">Se nessuna sicurezza dei servizi, ad esempio la crittografia dei dati o l'accesso sono in uso, questo metodo richiama <xref:System.IO.Stream.Write%2A> nel flusso sottostante.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1046">If no security services such as data encryption or signing are in use, this method invokes <xref:System.IO.Stream.Write%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="83d2f-1047">Questo metodo si blocca durante il completamento dell'operazione di scrittura.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1047">This method blocks while the write operation completes.</span></span> <span data-ttu-id="83d2f-1048">Per evitare di bloccare durante il completamento dell'operazione, usare il <xref:System.Net.Security.NegotiateStream.Write%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="83d2f-1048">To prevent blocking while the operation completes, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
 <span data-ttu-id="83d2f-1049">È possibile chiamare questo metodo fino a quando non è stata effettuata l'autenticazione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1049">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="83d2f-1050">Per eseguire l'autenticazione, chiamare uno dei <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, o <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1050">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="83d2f-1051">Il <xref:System.Net.Security.NegotiateStream> classe non supporta più operazioni di scrittura simultanee.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1051">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="83d2f-1052">Se si prova ad avviare un'operazione di scrittura, mentre un'altra operazione di scrittura è già in esecuzione nello stesso flusso, un <xref:System.NotSupportedException> verrà generata l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1052">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-1053">Esempio di codice seguente illustra la scrittura in un <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1053">The following code example demonstrates writing to a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83d2f-1054">
            <paramref name="buffer" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1054">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83d2f-1055">
            <paramref name="offset is less than 0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1055">
              <paramref name="offset is less than 0" />.</span>
          </span>
          <span data-ttu-id="83d2f-1056">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1056">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="83d2f-1057">\- or -  <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1057">\- or -  <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="83d2f-1058">The write operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1058">The write operation failed.</span>
          </span>
          <span data-ttu-id="83d2f-1059">\- or -  Encryption is in use, but the data could not be encrypted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1059">\- or -  Encryption is in use, but the data could not be encrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="83d2f-1060">There is already a write operation in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1060">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83d2f-1061">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1061">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83d2f-1062">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1062">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83d2f-1063">Gets or sets the amount of time a write operation blocks waiting for data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1063">Gets or sets the amount of time a write operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83d2f-1064">Oggetto <see cref="T:System.Int32" /> che specifica la quantità di tempo che deve trascorrerà prima che un'operazione di scrittura ha esito negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83d2f-1064">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a write operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83d2f-1065">Questa proprietà restituisce il valore restituito richiamando il <xref:System.IO.Stream.WriteTimeout%2A> proprietà nel flusso sottostante.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1065">This property returns the value returned by invoking the <xref:System.IO.Stream.WriteTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="83d2f-1066">Per le operazioni set, imposta il valore specificato il <xref:System.IO.Stream.WriteTimeout%2A> valore nel flusso sottostante.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1066">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="83d2f-1067">Se il flusso sottostante è un <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> è espresso in millisecondi e viene impostato su <xref:System.Threading.Timeout.Infinite> per impostazione predefinita, in modo che scrivere operazioni non presentano alcun timeout.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1067">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83d2f-1068">Esempio di codice seguente viene illustrato come visualizzare il valore di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="83d2f-1068">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>