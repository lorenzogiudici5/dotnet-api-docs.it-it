<Type Name="HttpPostedFile" FullName="System.Web.HttpPostedFile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0e6339d4f17a51e73e895f0a60bee71bbef6ac47" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30608105" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpPostedFile" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpPostedFile extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpPostedFile" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpPostedFile" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpPostedFile sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce l'accesso ai singoli file caricati da un client.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.HttpFileCollection> classe fornisce l'accesso a tutti i file che vengono caricati da un client come un insieme di file. La <xref:System.Web.HttpPostedFile> classe fornisce proprietà e metodi per ottenere informazioni su un singolo file e per leggere e salvare il file.  
  
 Il <xref:System.Web.UI.HtmlControls.HtmlInputFile> controllo può essere utilizzato per selezionare e caricare i file da un client.  
  
 I file vengono caricati nel formato MIME multipart/form-data. Per impostazione predefinita, tutte le richieste, inclusi i campi del form e i file, maggiori di 256 KB caricati vengono memorizzati nel buffer su disco anziché essere mantenute nella memoria del server.  
  
 È possibile specificare la dimensione massima della richiesta consentita accedendo il <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> proprietà o impostando la `maxRequestLength` attributo del [elemento httpRuntime (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) elemento all'interno di Machine. config o File Web. config. Il valore predefinito è 4 MB.  
  
 La quantità di dati memorizzati nel buffer nella memoria del server per una richiesta, che include il caricamento di file, può essere specificata tramite l'accesso di <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> proprietà o impostando la `requestLengthDiskThreshold` attributo del [httpRuntime Element (impostazioni di ASP.NET Schema)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) elemento all'interno del file Machine. config o Web. config.  
  
 Regolando il <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> e <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> proprietà, è possibile ottimizzare le prestazioni del server. Inoltre, è consigliabile impostare il <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> per impedire attacchi denial of service causati da file di grandi dimensioni al server di registrazione utenti.  
  
 Risorse del server allocati per il file caricato nel buffer verranno eliminate al termine della richiesta. Per salvare una copia permanente del file, utilizzare il <xref:System.Web.HttpPostedFile.SaveAs%2A> metodo.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputFile" />
    <altmember cref="T:System.Web.HttpFileCollection" />
  </Docs>
  <Members>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public int ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContentLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la dimensione, in byte, di un file caricato.</summary>
        <value>Lunghezza del file in byte.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.HttpPostedFile.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Restituisce il tipo di contenuto MIME di un file inviato da un client.</summary>
        <value>Tipo di contenuto MIME del file caricato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire un ciclo in tutti i file dell'insieme di file caricato e intraprendere l'azione quando il tipo MIME di un file è `US-ASCII`.  
  
 [!code-csharp[Classic HttpPostedFile.ContentType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.ContentType Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.ContentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.ContentType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpPostedFile.FileName" />
        <altmember cref="P:System.Web.HttpPostedFile.ContentLength" />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome completo del file nel client.</summary>
        <value>Nome del file del client, incluso il percorso di directory.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come assegnare il nome di un file caricato (il primo file dell'insieme di file) a una variabile di stringa.  
  
 [!code-csharp[Classic HttpPostedFile.FileName Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.FileName Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.FileName Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.FileName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpPostedFile.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.IO.Stream" /> che fa riferimento a un file caricato per preparare la lettura del contenuto del file.</summary>
        <value>
          <see cref="T:System.IO.Stream" /> che fa riferimento a un file.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come leggere il contenuto del primo file nella raccolta di file del client in una matrice di byte e quindi copiare la matrice di byte in una stringa.  
  
 [!code-csharp[Classic HttpPostedFile.InputStream Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.InputStream Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.InputStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.InputStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpPostedFile.SaveAs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Nome del file salvato.</param>
        <summary>Salva il contenuto di un file caricato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La dimensione massima consentita per una richiesta, che include i file caricati, è 4 MB, per impostazione predefinita. Dimensione massima della richiesta può essere specificata nel file Machine. config o Web. config nel `maxRequestLength` attributo del [elemento httpRuntime (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) elemento. La dimensione massima della richiesta per una pagina specifica può essere specificata utilizzando il [percorso elemento (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5) elemento in un file Web. config.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come salvare tutti i file che vengono caricati dal client nella cartella C:\TempFiles sul disco locale del server Web.  
  
 [!code-csharp[Classic HttpPostedFile.SaveAs Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.SaveAs Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.SaveAs Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.SaveAs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">La proprietà <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> dell'oggetto <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> è impostata su <see langword="true" />, ma <paramref name="filename" /> non è un percorso assoluto.</exception>
      </Docs>
    </Member>
  </Members>
</Type>