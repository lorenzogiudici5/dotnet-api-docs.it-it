<Type Name="IHttpHandlerFactory" FullName="System.Web.IHttpHandlerFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd8377736f7467a8060fa4bd3cdba0f8509de4a1" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37585417" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IHttpHandlerFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHttpHandlerFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.IHttpHandlerFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHttpHandlerFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class IHttpHandlerFactory" />
  <TypeSignature Language="F#" Value="type IHttpHandlerFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definisce il contratto che deve essere implementato dalle class factory per creare nuovi oggetti <see cref="T:System.Web.IHttpHandler" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una classe che implementa il <xref:System.Web.IHttpHandlerFactory> interfaccia non dispone di alcun comportamento tranne al produrre in modo dinamico le nuove istanze delle classi che implementano il <xref:System.Web.IHttpHandler> interfaccia.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetHandler">
      <MemberSignature Language="C#" Value="public System.Web.IHttpHandler GetHandler (System.Web.HttpContext context, string requestType, string url, string pathTranslated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler GetHandler(class System.Web.HttpContext context, string requestType, string url, string pathTranslated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.IHttpHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHandler (context As HttpContext, requestType As String, url As String, pathTranslated As String) As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::IHttpHandler ^ GetHandler(System::Web::HttpContext ^ context, System::String ^ requestType, System::String ^ url, System::String ^ pathTranslated);" />
      <MemberSignature Language="F#" Value="abstract member GetHandler : System.Web.HttpContext * string * string * string -&gt; System.Web.IHttpHandler" Usage="iHttpHandlerFactory.GetHandler (context, requestType, url, pathTranslated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="requestType" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="pathTranslated" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">Istanza della classe <see cref="T:System.Web.HttpContext" /> che fornisce riferimenti a oggetti intrinseci del server, ad esempio <see langword="Request" />, <see langword="Response" />, <see langword="Session" /> e <see langword="Server" />, utilizzati per gestire le richieste HTTP.</param>
        <param name="requestType">Metodo di trasferimento dei dati HTTP, <see langword="GET" /> o <see langword="POST" />, utilizzato dal client.</param>
        <param name="url">Proprietà <see cref="P:System.Web.HttpRequest.RawUrl" /> della risorsa richiesta.</param>
        <param name="pathTranslated">Proprietà <see cref="P:System.Web.HttpRequest.PhysicalApplicationPath" /> della risorsa richiesta.</param>
        <summary>Restituisce un'istanza di una classe che implementa l'interfaccia <see cref="T:System.Web.IHttpHandler" />.</summary>
        <returns>Nuovo oggetto <see cref="T:System.Web.IHttpHandler" /> che elabora la richiesta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come creare gli oggetti gestore personalizzato in risposta a una richiesta del client. L'esempio è costituito da due parti:  
  
-   Una classe di handler factory.  
  
-   Un estratto del file Web. config.  
  
 La prima parte dell'esempio viene illustrato come creare oggetti gestore personalizzato in risposta a una richiesta client per una pagina denominata aspx o xyz. La classe factory del gestore denominata `hwf` crea l'oggetto gestore appropriato in base alla pagina richiesta.  
  
 [!code-csharp[Classic IHttpHandlerFactory.GetHandler Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IHttpHandlerFactory.GetHandler Example/CS/source.cs#1)]
 [!code-vb[Classic IHttpHandlerFactory.GetHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IHttpHandlerFactory.GetHandler Example/VB/source.vb#1)]  
  
 La seconda parte dell'esempio viene illustrato un estratto del file Web. config. Per utilizzare la factory del gestore precedente, aggiungere le righe seguenti al file Web. config.  
  
```  
<configuration>   
  <system.web>   
    <httpHandlers>   
      <add verb="*" path="abc.aspx" type="test.MyFactory,HandlerFactoryTest" />   
      <add verb="*" path="xyz.aspx" type="test.MyFactory,HandlerFactoryTest" />   
    </httpHandlers>   
  </system.web>  
</configuration>   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseHandler">
      <MemberSignature Language="C#" Value="public void ReleaseHandler (System.Web.IHttpHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseHandler(class System.Web.IHttpHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.IHttpHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseHandler (handler As IHttpHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseHandler(System::Web::IHttpHandler ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseHandler : System.Web.IHttpHandler -&gt; unit" Usage="iHttpHandlerFactory.ReleaseHandler handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
      </Parameters>
      <Docs>
        <param name="handler">Oggetto <see cref="T:System.Web.IHttpHandler" /> da riutilizzare.</param>
        <summary>Consente di attivare una factory per il riutilizzo di un'istanza del gestore esistente.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>