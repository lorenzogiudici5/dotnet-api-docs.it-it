<Type Name="HttpCookie" FullName="System.Web.HttpCookie">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="85fd9a6f62c278d2188fe510860d2806a2b867d0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpCookie" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpCookie extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpCookie" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpCookie" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCookie sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="cba1b-101">Specifica una modalità indipendente dai tipi per creare e modificare singoli cookie HTTP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cba1b-101">Provides a type-safe way to create and manipulate individual HTTP cookies.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba1b-102">La <xref:System.Web.HttpCookie> classe ottiene e imposta le proprietà di singoli cookie.</span><span class="sxs-lookup"><span data-stu-id="cba1b-102">The <xref:System.Web.HttpCookie> class gets and sets properties of individual cookies.</span></span> <span data-ttu-id="cba1b-103">La <xref:System.Web.HttpCookieCollection> classe fornisce metodi per archiviare, recuperare e gestire più cookie.</span><span class="sxs-lookup"><span data-stu-id="cba1b-103">The <xref:System.Web.HttpCookieCollection> class provides methods to store, retrieve, and manage multiple cookies.</span></span>  
  
 <span data-ttu-id="cba1b-104">ASP.NET include due raccolte di cookie intrinseca.</span><span class="sxs-lookup"><span data-stu-id="cba1b-104">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="cba1b-105">La raccolta a cui si accede tramite il <xref:System.Web.HttpRequest.Cookies%2A> insieme il <xref:System.Web.HttpRequest> oggetto contiene i cookie trasmessi dal client al server nel `Cookie` intestazione.</span><span class="sxs-lookup"><span data-stu-id="cba1b-105">The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of the <xref:System.Web.HttpRequest> object contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="cba1b-106">La raccolta a cui si accede tramite il <xref:System.Web.HttpResponse.Cookies%2A> insieme del <xref:System.Web.HttpResponse> oggetto contiene i nuovi cookie creato nel server e trasmesso al client il `Set-Cookie` intestazione risposta HTTP.</span><span class="sxs-lookup"><span data-stu-id="cba1b-106">The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of the <xref:System.Web.HttpResponse> object contains new cookies created on the server and transmitted to the client in the `Set-Cookie` HTTP response header.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba1b-107">Esempio di codice riportato di seguito viene illustrato come verificare la presenza di un cookie denominato `DateCookieExample` nel <xref:System.Web.HttpRequest> oggetto.</span><span class="sxs-lookup"><span data-stu-id="cba1b-107">The following code example demonstrates how to check for a cookie named `DateCookieExample` in the <xref:System.Web.HttpRequest> object.</span></span> <span data-ttu-id="cba1b-108">Se il cookie non viene trovato, viene creato e aggiunto al <xref:System.Web.HttpResponse> oggetto.</span><span class="sxs-lookup"><span data-stu-id="cba1b-108">If the cookie is not found, it is created and added to the <xref:System.Web.HttpResponse> object.</span></span> <span data-ttu-id="cba1b-109">Il cookie è impostato su scadono entro 10 minuti.</span><span class="sxs-lookup"><span data-stu-id="cba1b-109">The cookie is set to expire in 10 minutes.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpCookie/cs/HttpCookie.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpCookie/vb/HttpCookie.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpResponse" />
    <altmember cref="T:System.Web.HttpRequest" />
    <altmember cref="T:System.Web.HttpCookieCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cba1b-110">Inizializza una nuova istanza della classe <see cref="T:System.Web.HttpCookie" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-110">Initializes a new instance of the <see cref="T:System.Web.HttpCookie" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookie (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCookie(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="cba1b-111">Nome del nuovo cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-111">The name of the new cookie.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba1b-112">Crea e assegna un nome a un nuovo cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-112">Creates and names a new cookie.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cba1b-113">Esempio di codice seguente crea e assegna un nuovo cookie.</span><span class="sxs-lookup"><span data-stu-id="cba1b-113">The following code example creates and names a new cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookie.HttpCookie Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HttpCookie Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookie (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCookie(System::String ^ name, System::String ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="cba1b-114">Nome del nuovo cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-114">The name of the new cookie.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="cba1b-115">Valore del nuovo cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-115">The value of the new cookie.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba1b-116">Crea e assegna un nome e un valore a un nuovo cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-116">Creates, names, and assigns a value to a new cookie.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cba1b-117">Esempio di codice seguente vengono creati, nomi e imposta il valore di un nuovo cookie.</span><span class="sxs-lookup"><span data-stu-id="cba1b-117">The following code example creates, names, and sets the value of a new cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookie.HttpCookie1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HttpCookie1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba1b-118">Ottiene o imposta il dominio a cui associare il cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-118">Gets or sets the domain to associate the cookie with.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba1b-119">Nome del dominio a cui associare il cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-119">The name of the domain to associate the cookie with.</span>
          </span>
          <span data-ttu-id="cba1b-120">Valore predefinito per il dominio corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-120">The default value is the current domain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba1b-121">L'impostazione di `Domain` attributo limita la trasmissione del cookie da client che richiedono una risorsa da quel dominio.</span><span class="sxs-lookup"><span data-stu-id="cba1b-121">Setting the `Domain` attribute limits transmission of the cookie to clients requesting a resource from that domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba1b-122">Esempio di codice seguente imposta il dominio del cookie.</span><span class="sxs-lookup"><span data-stu-id="cba1b-122">The following code example sets the cookie's domain.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Domain Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Domain Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Domain Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Domain Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expires">
      <MemberSignature Language="C#" Value="public DateTime Expires { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Expires" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Expires" />
      <MemberSignature Language="VB.NET" Value="Public Property Expires As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Expires { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba1b-123">Ottiene o imposta la data e l'ora di scadenza per il cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-123">Gets or sets the expiration date and time for the cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba1b-124">Ora di scadenza del cookie sul client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-124">The time of day (on the client) at which the cookie expires.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cba1b-125">Esempio di codice seguente imposta l'ora di scadenza del cookie a 10 minuti dall'ora corrente.</span><span class="sxs-lookup"><span data-stu-id="cba1b-125">The following code example sets the expiration time of the cookie to 10 minutes from the current time.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Expires Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Expires Example/CS/default.aspx#2)]
 [!code-vb[Classic HttpCookie.Expires Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Expires Example/VB/default.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeys">
      <MemberSignature Language="C#" Value="public bool HasKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.HasKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasKeys { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba1b-126">Ottiene un valore che indica se il cookie ha sottochiavi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-126">Gets a value indicating whether a cookie has subkeys.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba1b-127">
            <see langword="true" /> se il cookie dispone di sottochiavi. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-127">
              <see langword="true" /> if the cookie has subkeys, otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="cba1b-128">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-128">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cba1b-129">Esempio di codice seguente viene esaminato ogni membro di una raccolta di cookie per più valori.</span><span class="sxs-lookup"><span data-stu-id="cba1b-129">The following code example examines each member of a cookie collection for multiple values.</span></span> <span data-ttu-id="cba1b-130">Se un cookie <xref:System.Web.HttpCookie.HasKeys%2A> proprietà `true`, che indica che sono presenti più valori, in questo esempio copia i nomi dei valori in una matrice di stringhe e i valori corrispondenti in un'altra matrice di stringhe.</span><span class="sxs-lookup"><span data-stu-id="cba1b-130">If a cookie's <xref:System.Web.HttpCookie.HasKeys%2A> property is `true`, indicating that multiple values are present, this example copies the value names into one string array and the corresponding values into another string array.</span></span> <span data-ttu-id="cba1b-131">Per un esempio di come creare più valori per un cookie, vedere <xref:System.Web.HttpCookie.Values%2A>.</span><span class="sxs-lookup"><span data-stu-id="cba1b-131">For an example of how to create multiple values for a cookie, see <xref:System.Web.HttpCookie.Values%2A>.</span></span>  
  
 [!code-csharp[Classic HttpCookie.HasKeys Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HasKeys Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HasKeys Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HasKeys Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="HttpOnly">
      <MemberSignature Language="C#" Value="public bool HttpOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.HttpOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba1b-132">Ottiene o imposta un valore che specifica se un cookie è accessibile da parte di script del lato client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-132">Gets or sets a value that specifies whether a cookie is accessible by client-side script.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba1b-133">
            <see langword="true" /> se il cookie dispone dell'attributo <see langword="HttpOnly" /> e non è accessibile mediante script del lato client. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-133">
              <see langword="true" /> if the cookie has the <see langword="HttpOnly" /> attribute and cannot be accessed through a client-side script; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="cba1b-134">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-134">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba1b-135">Microsoft Internet Explorer versione 6 di Service Pack 1 e versioni successive supporta una proprietà del cookie, <xref:System.Web.HttpCookie.HttpOnly%2A>, che consente di ridurre le minacce di script tra siti che comportano il cookie rubati.</span><span class="sxs-lookup"><span data-stu-id="cba1b-135">Microsoft Internet Explorer version 6 Service Pack 1 and later supports a cookie property, <xref:System.Web.HttpCookie.HttpOnly%2A>, that can help mitigate cross-site scripting threats that result in stolen cookies.</span></span> <span data-ttu-id="cba1b-136">I cookie rubati possono contenere informazioni riservate che identifica l'utente al sito, ad esempio ASP.NET ID o un form autenticazione ticket di sessione e possono essere riprodotte dall'autore dell'attacco per mascherarsi l'utente o ottenere informazioni riservate.</span><span class="sxs-lookup"><span data-stu-id="cba1b-136">Stolen cookies can contain sensitive information identifying the user to the site, such as the ASP.NET session ID or forms authentication ticket, and can be replayed by the attacker in order to masquerade as the user or obtain sensitive information.</span></span> <span data-ttu-id="cba1b-137">Quando un `HttpOnly` cookie viene ricevuto da un browser conforme, non è accessibile a uno script sul lato client.</span><span class="sxs-lookup"><span data-stu-id="cba1b-137">When an `HttpOnly` cookie is received by a compliant browser, it is inaccessible to client-side script.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="cba1b-138">L'impostazione di <xref:System.Web.HttpCookie.HttpOnly%2A> proprietà `true` non impedisce un utente malintenzionato con accesso al canale di rete di accedere direttamente al cookie.</span><span class="sxs-lookup"><span data-stu-id="cba1b-138">Setting the <xref:System.Web.HttpCookie.HttpOnly%2A> property to `true` does not prevent an attacker with access to the network channel from accessing the cookie directly.</span></span> <span data-ttu-id="cba1b-139">È consigliabile utilizzare Secure Sockets Layer (SSL) per evitare il problema.</span><span class="sxs-lookup"><span data-stu-id="cba1b-139">Consider using Secure Sockets Layer (SSL) to help protect against this.</span></span> <span data-ttu-id="cba1b-140">La sicurezza delle workstation è inoltre importante, come un utente malintenzionato potrebbe usare una finestra del browser aperto o in un computer che contiene i cookie permanenti per ottenere l'accesso a un sito Web con l'identità dell'utente legittimo.</span><span class="sxs-lookup"><span data-stu-id="cba1b-140">Workstation security is also important, as a malicious user could use an open browser window or a computer containing persistent cookies to obtain access to a Web site with a legitimate user's identity.</span></span>  
  
 <span data-ttu-id="cba1b-141">Per ulteriori informazioni sui possibili attacchi e come questa proprietà consente di ridurre tali rischi, vedere [Mitigating Cross-site Scripting With cookie solo per HTTP](http://go.microsoft.com/fwlink/?LinkId=41580).</span><span class="sxs-lookup"><span data-stu-id="cba1b-141">For more information on possible attacks and how this property can help mitigate them, see [Mitigating Cross-site Scripting With HTTP-only Cookies](http://go.microsoft.com/fwlink/?LinkId=41580).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba1b-142">Esempio di codice seguente viene illustrato come scrivere un `HttpOnly` cookie e Mostra come non è accessibile dal client mediante ECMAScript.</span><span class="sxs-lookup"><span data-stu-id="cba1b-142">The following code example demonstrates how to write an `HttpOnly` cookie and shows how it is not accessible by the client through ECMAScript.</span></span>  
  
 [!code-aspx-csharp[HttpOnlyCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpOnlyCookie/CS/httponlycookiecs.aspx#1)]
 [!code-aspx-vb[HttpOnlyCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpOnlyCookie/vb/httponlycookievb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); void set(System::String ^ key, System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="cba1b-143">Chiave (indice) del valore del cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-143">The key (index) of the cookie value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba1b-144">Ottiene un collegamento alla proprietà <see cref="P:System.Web.HttpCookie.Values" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-144">Gets a shortcut to the <see cref="P:System.Web.HttpCookie.Values" /> property.</span>
          </span>
          <span data-ttu-id="cba1b-145">Questa proprietà viene offerta per supportare la compatibilità con le versioni precedenti di ASP (Active Server Pages).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-145">This property is provided for compatibility with previous versions of Active Server Pages (ASP).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba1b-146">Valore del cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-146">The cookie value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba1b-147">Ottiene o imposta il nome di un cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-147">Gets or sets the name of a cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba1b-148">Il valore predefinito è un riferimento null (<see langword="Nothing" /> in Visual Basic) a meno che il costruttore non specifichi diversamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-148">The default value is a null reference (<see langword="Nothing" /> in Visual Basic) unless the constructor specifies otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cba1b-149">Esempio di codice seguente riceve una raccolta di cookie dal client nel `Cookie` intestazione e vengono scorsi gli insieme alla ricerca di un cookie con il nome specifico.</span><span class="sxs-lookup"><span data-stu-id="cba1b-149">The following code example receives a cookie collection from the client in the `Cookie` header and loops through the collection looking for a cookie with the specific name.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Name Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Name Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba1b-150">Ottiene o imposta il percorso virtuale da trasmettere con il cookie corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-150">Gets or sets the virtual path to transmit with the current cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba1b-151">Percorso virtuale da trasmettere con il cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-151">The virtual path to transmit with the cookie.</span>
          </span>
          <span data-ttu-id="cba1b-152">Il valore predefinito è <see langword="/" />, ossia la radice del server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-152">The default is <see langword="/" />, which is the server root.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba1b-153">Il <xref:System.Web.HttpCookie.Path%2A> proprietà estende la <xref:System.Web.HttpCookie.Domain%2A> proprietà per descrivere completamente l'URL specifico a cui viene applicato il cookie.</span><span class="sxs-lookup"><span data-stu-id="cba1b-153">The <xref:System.Web.HttpCookie.Path%2A> property extends the <xref:System.Web.HttpCookie.Domain%2A> property to completely describe the specific URL to which the cookie applies.</span></span> <span data-ttu-id="cba1b-154">Ad esempio, in www.microsoft.com/asp http:/ l'URL, il dominio è www.microsoft.com e il percorso è italy/ASP.</span><span class="sxs-lookup"><span data-stu-id="cba1b-154">For example, in the URL http:/www.microsoft.com/asp, the domain is www.microsoft.com and the path is /asp.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba1b-155">Nell'esempio di codice viene impostata la <xref:System.Web.HttpCookie.Path%2A> proprietà di un nuovo cookie.</span><span class="sxs-lookup"><span data-stu-id="cba1b-155">The following code example sets the <xref:System.Web.HttpCookie.Path%2A> property of a new cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Path Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Path Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Path Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Path Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Domain" />
      </Docs>
    </Member>
    <Member MemberName="Secure">
      <MemberSignature Language="C#" Value="public bool Secure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Secure" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Secure" />
      <MemberSignature Language="VB.NET" Value="Public Property Secure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Secure { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba1b-156">Ottiene o imposta un valore che indica se trasmettere il cookie mediante SSL (Secure Sockets Layer), ossia solo su HTTPS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-156">Gets or sets a value indicating whether to transmit the cookie using Secure Sockets Layer (SSL)--that is, over HTTPS only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba1b-157">
            <see langword="true" /> per trasmettere il cookie su una connessione SSL (HTTPS). In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-157">
              <see langword="true" /> to transmit the cookie over an SSL connection (HTTPS); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="cba1b-158">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-158">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba1b-159">Per impostare la trasmissione di cookie mediante SSL per un'intera applicazione, abilitarlo nel file di configurazione dell'applicazione, Web. config, che si trova nella directory radice dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="cba1b-159">To set the transmission of cookies using SSL for an entire application, enable it in the application's configuration file, Web.config, which resides in the root directory of the application.</span></span> <span data-ttu-id="cba1b-160">Per ulteriori informazioni, vedere [httpCookies Element (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/library/74790718-bfa3-4935-bc9a-59c88797e08f).</span><span class="sxs-lookup"><span data-stu-id="cba1b-160">For more information, see [httpCookies Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/74790718-bfa3-4935-bc9a-59c88797e08f).</span></span> <span data-ttu-id="cba1b-161">I valori impostati a livello di codice utilizzando il <xref:System.Web.HttpCookie.Secure%2A> proprietà sovrascrivono i valori impostati nel file Web. config.</span><span class="sxs-lookup"><span data-stu-id="cba1b-161">Values set programmatically using the <xref:System.Web.HttpCookie.Secure%2A> property override values set in the Web.config file.</span></span>  
  
 <span data-ttu-id="cba1b-162">Quando si gestiscono le informazioni riservate, è consigliabile utilizzare il protocollo HTTPS con la crittografia SSL.</span><span class="sxs-lookup"><span data-stu-id="cba1b-162">When dealing with sensitive information, it is strongly recommended that you use HTTPS protocol with SSL encryption.</span></span> <span data-ttu-id="cba1b-163">SSL consente di proteggere i dati vengano modificati (integrità dati), protegge l'identità dell'utente (riservatezza) e assicura che i dati provengono dal client previsto (autenticazione).</span><span class="sxs-lookup"><span data-stu-id="cba1b-163">SSL protects against data being altered (data integrity), protects a user's identity (confidentiality), and assures that data originates from the expected client (authentication).</span></span> <span data-ttu-id="cba1b-164">Per ulteriori informazioni sui vantaggi della crittografia, vedere [servizi di crittografia](~/docs/standard/security/cryptographic-services.md).</span><span class="sxs-lookup"><span data-stu-id="cba1b-164">For more information on the benefits of encryption, see [Cryptographic Services](~/docs/standard/security/cryptographic-services.md).</span></span> <span data-ttu-id="cba1b-165">Per ulteriori informazioni sulla configurazione di SSL in un server Web Internet Information Services (IIS), vedere [configurazione di SSL in un Server Web o un sito Web](http://go.microsoft.com/fwlink/?LinkId=38553).</span><span class="sxs-lookup"><span data-stu-id="cba1b-165">For more information about configuring SSL on an Internet Information Services (IIS) Web server, see [Configuring SSL on a Web Server or a Web Site](http://go.microsoft.com/fwlink/?LinkId=38553).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba1b-166">Esempio di codice seguente esegue l'azione se il cookie è impostato per la trasmissione tramite SSL.</span><span class="sxs-lookup"><span data-stu-id="cba1b-166">The following code example takes action if the cookie is set to transmit using SSL.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Secure Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Secure Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Secure Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Secure Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shareable">
      <MemberSignature Language="C#" Value="public bool Shareable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shareable" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Shareable" />
      <MemberSignature Language="VB.NET" Value="Public Property Shareable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Shareable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba1b-167">Determina se al cookie è consentito partecipare alla memorizzazione nella cache dell'output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-167">Determines whether the cookie is allowed to participate in output caching.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba1b-168">
            <see langword="true" /> per specificare che la memorizzazione nella cache di output non verrà eliminata per un <see cref="T:System.Web.HttpResponse" /> specificato contenente uno o più i cookie in uscita; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-168">
              <see langword="true" /> to specify that output caching will not be suppressed for a give <see cref="T:System.Web.HttpResponse" /> containing one or more outbound cookies; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba1b-169">Se un determinato <xref:System.Web.HttpResponse> contiene uno o più cookie in uscita con <xref:System.Web.HttpCookie.Shareable%2A> è impostato su `false` (valore predefinito), l'output verrà eliminata la memorizzazione nella cache per la risposta.</span><span class="sxs-lookup"><span data-stu-id="cba1b-169">If a given <xref:System.Web.HttpResponse> contains one or more outbound cookies with <xref:System.Web.HttpCookie.Shareable%2A> is set to `false` (the default value), output caching will be suppressed for the response.</span></span> <span data-ttu-id="cba1b-170">In questo modo i cookie che contengono informazioni potenzialmente riservate vengano memorizzati nella cache nella risposta e inviato a più client.</span><span class="sxs-lookup"><span data-stu-id="cba1b-170">This prevents cookies that contain potentially sensitive information from being cached in the response and sent to multiple clients.</span></span>  <span data-ttu-id="cba1b-171">Per consentire una risposta contenente i cookie per memorizzare nella cache, configurare la memorizzazione nella cache in genere per la risposta, ad esempio usando il `OutputCache` direttiva o MVC [OutputCache] attributo e impostare tutti i cookie in uscita di <xref:System.Web.HttpCookie.Shareable%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="cba1b-171">To allow a response containing cookies to be cached, configure caching normally for the response, such as using the `OutputCache` directive or MVC's [OutputCache] attribute, and set all outbound cookies to have <xref:System.Web.HttpCookie.Shareable%2A> set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, out System.Web.HttpCookie result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, [out] class System.Web.HttpCookie&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.TryParse(System.String,System.Web.HttpCookie@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, ByRef result As HttpCookie) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, [Runtime::InteropServices::Out] System::Web::HttpCookie ^ % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="result" Type="System.Web.HttpCookie&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="cba1b-172">La rappresentazione di stringa di un cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-172">The string representation of a cookie.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="cba1b-173">Se la conversione ha avuto esito positivo, contiene il valore <see cref="T:System.Web.HttpCookie" /> equivalente al cookie contenuto in <paramref name="input" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-173">If the conversion succeeded, contains the <see cref="T:System.Web.HttpCookie" /> value equivalent to the cookie contained in <paramref name="input" />.</span>
          </span>
          <span data-ttu-id="cba1b-174">In caso di conversione non riuscita, <paramref name="result" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-174">If the conversion failed, <paramref name="result" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cba1b-175">La conversione non riesce se il parametro <paramref name="input" /> è <see langword="null" /> o vuoto oppure se non è possibile determinare un nome cookie da <paramref name="input" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-175">The conversion fails if the <paramref name="input" /> parameter is <see langword="null" /> or empty or if a cookie name can't be determined from <paramref name="input" />.</span>
          </span>
          <span data-ttu-id="cba1b-176">Il valore di questo parametro viene sovrascritto dal metodo. Il parametro viene passato per riferimento e impostato su Null, non appena viene immesso il metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-176">This parameter's value is overwritten by the method; the parameter is passed by reference and set to null as soon as the method is entered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba1b-177">Converte la rappresentazione di stringa specificata di un cookie nell'equivalente <see cref="T:System.Web.HttpCookie" /> e restituisce un valore che indica se la conversione è stata eseguita correttamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-177">Converts the specified string representation of a cookie into its <see cref="T:System.Web.HttpCookie" /> equivalent and returns a value that indicates whether the conversion succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba1b-178">
            <see langword="true" /> se <paramref name="input" /> è stato convertito correttamente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-178">
              <see langword="true" /> if <paramref name="input" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba1b-179">Ottiene o imposta un singolo valore di cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-179">Gets or sets an individual cookie value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba1b-180">Valore del cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-180">The value of the cookie.</span>
          </span>
          <span data-ttu-id="cba1b-181">Il valore predefinito è un riferimento Null (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-181">The default value is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cba1b-182">Esempio di codice seguente imposta il valore di un cookie esistente viene impostato su "abc123".</span><span class="sxs-lookup"><span data-stu-id="cba1b-182">The following code example sets the value of an existing cookie to "abc123".</span></span>  
  
 [!code-csharp[Classic HttpCookie.Value Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Value Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Value Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Value Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Values { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba1b-183">Ottiene una raccolta di coppie chiave/valore contenute in un singolo oggetto cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-183">Gets a collection of key/value pairs that are contained within a single cookie object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba1b-184">Insiemi di valori di un cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba1b-184">A collection of cookie values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cba1b-185">Esempio di codice seguente crea un nuovo cookie e aggiunge i valori diversi.</span><span class="sxs-lookup"><span data-stu-id="cba1b-185">The following code example creates a new cookie and adds several values to it.</span></span> <span data-ttu-id="cba1b-186">Per un esempio di come estrarre più valori da un cookie, vedere <xref:System.Web.HttpCookie.HasKeys%2A>.</span><span class="sxs-lookup"><span data-stu-id="cba1b-186">For an example of how to extract multiple values from one cookie, see <xref:System.Web.HttpCookie.HasKeys%2A>.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Values Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Values Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Values Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Values Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
  </Members>
</Type>