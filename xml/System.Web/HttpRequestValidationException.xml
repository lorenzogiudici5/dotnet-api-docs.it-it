<Type Name="HttpRequestValidationException" FullName="System.Web.HttpRequestValidationException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ab81d57a6a7701b6a691d0f06c8590e73b45f39a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30607855" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpRequestValidationException : System.Web.HttpException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit HttpRequestValidationException extends System.Web.HttpException" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpRequestValidationException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRequestValidationException&#xA;Inherits HttpException" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequestValidationException sealed : System::Web::HttpException" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.HttpException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Eccezione generata quando il client riceve una stringa di input potenzialmente pericolosa come parte dei dati della richiesta. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Limitare e di convalida dell'input utente è fondamentale in un'applicazione Web per impedire attacchi di pirata informatico che si basano sulle stringhe di input dannoso. Attacchi di script sono un esempio di tali attacchi. Altri tipi di dati indesiderati o dannosi possono essere passate in una richiesta di varie forme di input. Limitando i tipi di dati che viene passati a un livello basso di un'applicazione, è possibile evitare eventi indesiderati, anche quando i programmatori che utilizzano il codice non inseriscono le tecniche di convalida necessaria sul posto.  
  
 La convalida delle richieste rileva client potenzialmente dannoso input e genera questa eccezione per interrompere l'elaborazione della richiesta. Interruzione di una richiesta può indicare un tentativo di compromettere la sicurezza dell'applicazione, ad esempio un attacco di script tra siti. È consigliabile che l'applicazione di controllo in modo esplicito tutti gli input riguardanti le interruzioni di richiesta. Tuttavia, è possibile disabilitare la convalida della richiesta impostando il `validateRequest` attributo nella direttiva `false`, come illustrato nell'esempio seguente:  
  
 `<%@ Page validateRequest="false" %>`  
  
 Per disabilitare la convalida della richiesta per l'applicazione, è necessario modificare o creare un file Web. config per l'applicazione e impostare il `validateRequest` attributo del `pages` sezione `false`, come illustrato nell'esempio seguente:  
  
```  
<configuration>   
  <system.web>   
    <pages validateRequest="false" />   
  </system.web>   
</configuration>   
```  
  
 Per disabilitare la convalida della richiesta per tutte le applicazioni nel server, è possibile apportare questa modifica del file Machine. config.  
  
> [!NOTE]
>  È consigliabile che l'applicazione in modo esplicito verificare tutti gli input oltre alla convalida delle richieste eseguita da ASP.NET, utilizzato. La funzionalità di convalida della richiesta non può intercettare tutti gli attacchi, in particolare quelli predisposto in modo specifico con la logica dell'applicazione.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come controllare l'input dell'utente malintenzionato mediante un <xref:System.Web.HttpRequestValidationException>.  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[HttpRequestValidationException#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpRequestValidationException/CS/httprequestvalidationexception_cs.aspx#1)]
 [!code-aspx-vb[HttpRequestValidationException#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpRequestValidationException/VB/HttpRequestValidationException_VB.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Di overload. Crea una nuova istanza della classe <see cref="T:System.Web.HttpRequestValidationException" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Web.HttpRequestValidationException" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Stringa che descrive l'errore.</param>
        <summary>Crea una nuova eccezione <see cref="T:System.Web.HttpRequestValidationException" /> con il messaggio di errore specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il contenuto del `message` parametro deve essere leggibile. Il chiamante del <xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%29> costruttore deve garantire che il `message` stringa sia stata localizzata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Messaggio di errore che spiega il motivo dell'eccezione.</param>
        <param name="innerException">Eccezione che ha determinato l'eccezione corrente. Se il parametro non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
        <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.Web.HttpRequestValidationException" /> con il messaggio di errore specificato e un riferimento all'eccezione interna che ha generato l'eccezione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'eccezione generata come risultato diretto di un'eccezione precedente deve includere un riferimento all'eccezione precedente nella proprietà <xref:System.Exception.InnerException%2A>. Il <xref:System.Exception.InnerException%2A> proprietà restituisce lo stesso valore passato il <xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29> costruttore o `null` se il <xref:System.Exception.InnerException%2A> proprietà non fornisce il valore di eccezione interna per il <xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29> costruttore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>