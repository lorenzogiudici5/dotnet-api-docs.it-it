<Type Name="HttpContextBase" FullName="System.Web.HttpContextBase">
  <TypeSignature Language="C#" Value="public abstract class HttpContextBase : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpContextBase extends System.Object implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpContextBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpContextBase&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpContextBase abstract : IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="48057-101">Funge da classe base per le classi che contengono informazioni specifiche di HTTP relative a una singola richiesta HTTP.</span><span class="sxs-lookup"><span data-stu-id="48057-101">Serves as the base class for classes that contain HTTP-specific information about an individual HTTP request.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48057-102">Il <xref:System.Web.HttpContextBase> classe è una classe astratta che contiene gli stessi membri di <xref:System.Web.HttpContext> classe.</span><span class="sxs-lookup"><span data-stu-id="48057-102">The <xref:System.Web.HttpContextBase> class is an abstract class that contains the same members as the <xref:System.Web.HttpContext> class.</span></span> <span data-ttu-id="48057-103">Il <xref:System.Web.HttpContextBase> classe consente di creare classi derivate che sono ad esempio la <xref:System.Web.HttpContext> classe, ma che è possibile personalizzare e funzionano di fuori della pipeline ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="48057-103">The <xref:System.Web.HttpContextBase> class enables you to create derived classes that are like the <xref:System.Web.HttpContext> class, but that you can customize and that work outside the ASP.NET pipeline.</span></span> <span data-ttu-id="48057-104">Quando si eseguono unit test, in genere usare una classe derivata per implementare i membri con un comportamento personalizzato che soddisfa lo scenario in cui che si sta testando.</span><span class="sxs-lookup"><span data-stu-id="48057-104">When you perform unit testing, you typically use a derived class to implement members with customized behavior that fulfills the scenario you are testing.</span></span>  
  
 <span data-ttu-id="48057-105">La classe <xref:System.Web.HttpContextWrapper> deriva dalla classe <xref:System.Web.HttpContextBase>.</span><span class="sxs-lookup"><span data-stu-id="48057-105">The <xref:System.Web.HttpContextWrapper> class derives from the <xref:System.Web.HttpContextBase> class.</span></span> <span data-ttu-id="48057-106">Il <xref:System.Web.HttpContextWrapper> classe funge da wrapper per la <xref:System.Web.HttpContext> classe.</span><span class="sxs-lookup"><span data-stu-id="48057-106">The <xref:System.Web.HttpContextWrapper> class serves as a wrapper for the <xref:System.Web.HttpContext> class.</span></span> <span data-ttu-id="48057-107">In fase di esecuzione, si utilizza in genere un'istanza del <xref:System.Web.HttpContextWrapper> classe per chiamare i membri di <xref:System.Web.HttpContext> oggetto.</span><span class="sxs-lookup"><span data-stu-id="48057-107">At run time, you typically use an instance of the <xref:System.Web.HttpContextWrapper> class to call members on the <xref:System.Web.HttpContext> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpContextBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpContextBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="48057-108">Inizializza la classe per l'uso da parte di un'istanza di una classe ereditata.</span><span class="sxs-lookup"><span data-stu-id="48057-108">Initializes the class for use by an inherited class instance.</span></span> <span data-ttu-id="48057-109">Questo costruttore può essere chiamato solo da una classe ereditata.</span><span class="sxs-lookup"><span data-stu-id="48057-109">This constructor can only be called by an inherited class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AcceptWebSocketRequest">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="48057-110">Quando implementato in una classe derivata, accetta una richiesta di <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="48057-110">When implemented in a derived class, accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AcceptWebSocketRequest">
      <MemberSignature Language="C#" Value="public virtual void AcceptWebSocketRequest (Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt; userFunc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptWebSocketRequest(class System.Func`2&lt;class System.Web.WebSockets.AspNetWebSocketContext, class System.Threading.Tasks.Task&gt; userFunc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AcceptWebSocketRequest (userFunc As Func(Of AspNetWebSocketContext, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AcceptWebSocketRequest(Func&lt;System::Web::WebSockets::AspNetWebSocketContext ^, System::Threading::Tasks::Task ^&gt; ^ userFunc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userFunc" Type="System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="userFunc"><span data-ttu-id="48057-111">Funzione utente.</span><span class="sxs-lookup"><span data-stu-id="48057-111">The user function.</span></span></param>
        <summary><span data-ttu-id="48057-112">Una volta eseguita l'implementazione in una classe derivata, accetta una richiesta di <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> utilizzando la funzione utente specificata.</span><span class="sxs-lookup"><span data-stu-id="48057-112">When implemented in a derived class, accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request using the specified user function.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketRequest">
      <MemberSignature Language="C#" Value="public virtual void AcceptWebSocketRequest (Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt; userFunc, System.Web.WebSockets.AspNetWebSocketOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptWebSocketRequest(class System.Func`2&lt;class System.Web.WebSockets.AspNetWebSocketContext, class System.Threading.Tasks.Task&gt; userFunc, class System.Web.WebSockets.AspNetWebSocketOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AcceptWebSocketRequest (userFunc As Func(Of AspNetWebSocketContext, Task), options As AspNetWebSocketOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AcceptWebSocketRequest(Func&lt;System::Web::WebSockets::AspNetWebSocketContext ^, System::Threading::Tasks::Task ^&gt; ^ userFunc, System::Web::WebSockets::AspNetWebSocketOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userFunc" Type="System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;" />
        <Parameter Name="options" Type="System.Web.WebSockets.AspNetWebSocketOptions" />
      </Parameters>
      <Docs>
        <param name="userFunc"><span data-ttu-id="48057-113">Funzione utente.</span><span class="sxs-lookup"><span data-stu-id="48057-113">The user function.</span></span></param>
        <param name="options"><span data-ttu-id="48057-114">Oggetto delle opzioni.</span><span class="sxs-lookup"><span data-stu-id="48057-114">The options object.</span></span></param>
        <summary><span data-ttu-id="48057-115">Una volta eseguita l'implementazione in una classe derivata, accetta una richiesta di <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> utilizzando la funzione utente specificata e l'oggetto di opzioni.</span><span class="sxs-lookup"><span data-stu-id="48057-115">When implemented in a derived class, accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request using the specified user function and options object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddError">
      <MemberSignature Language="C#" Value="public virtual void AddError (Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddError(class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AddError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddError (errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddError(Exception ^ errorInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="errorInfo"><span data-ttu-id="48057-116">Eccezione da aggiungere alla raccolta di eccezioni.</span><span class="sxs-lookup"><span data-stu-id="48057-116">The exception to add to the exception collection.</span></span></param>
        <summary><span data-ttu-id="48057-117">In caso di override in una classe derivata, aggiunge un'eccezione alla raccolta di eccezioni per la richiesta HTTP corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-117">When overridden in a derived class, adds an exception to the exception collection for the current HTTP request.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-118">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-118">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddOnRequestCompleted">
      <MemberSignature Language="C#" Value="public virtual System.Web.ISubscriptionToken AddOnRequestCompleted (Action&lt;System.Web.HttpContextBase&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.ISubscriptionToken AddOnRequestCompleted(class System.Action`1&lt;class System.Web.HttpContextBase&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AddOnRequestCompleted(System.Action{System.Web.HttpContextBase})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddOnRequestCompleted (callback As Action(Of HttpContextBase)) As ISubscriptionToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::ISubscriptionToken ^ AddOnRequestCompleted(Action&lt;System::Web::HttpContextBase ^&gt; ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Web.HttpContextBase&gt;" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="48057-119">Oggetto di contesto HTTP.</span><span class="sxs-lookup"><span data-stu-id="48057-119">The HTTP context object.</span></span></param>
        <summary><span data-ttu-id="48057-120">Una volta eseguita l'implementazione in una classe derivata, genera un evento virtuale che si verifica quando la parte HTTP della richiesta sta terminando.</span><span class="sxs-lookup"><span data-stu-id="48057-120">When implemented in a derived class, raises a virtual event that occurs when the HTTP part of the request is ending.</span></span></summary>
        <returns><span data-ttu-id="48057-121">Token della sottoscrizione.</span><span class="sxs-lookup"><span data-stu-id="48057-121">The subscription token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48057-122">Questo evento si verifica prima di <xref:System.Web.WebSockets.AspNetWebSocket> connessione ha inizio.</span><span class="sxs-lookup"><span data-stu-id="48057-122">This event occurs before the <xref:System.Web.WebSockets.AspNetWebSocket> connection begins.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllErrors">
      <MemberSignature Language="C#" Value="public virtual Exception[] AllErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception[] AllErrors" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.AllErrors" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllErrors As Exception()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Exception ^&gt; ^ AllErrors { cli::array &lt;Exception ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-123">In caso di override in una classe derivata, ottiene una matrice di errori (se presenti) accumulati durante l'elaborazione di una richiesta HTTP.</span><span class="sxs-lookup"><span data-stu-id="48057-123">When overridden in a derived class, gets an array of errors (if any) that accumulated when an HTTP request was being processed.</span></span></summary>
        <value><span data-ttu-id="48057-124">Matrice di oggetti <see cref="T:System.Exception" /> per la richiesta HTTP corrente, oppure <see langword="null" /> se non si sono accumulati errori durante l'elaborazione della richiesta HTTP.</span><span class="sxs-lookup"><span data-stu-id="48057-124">An array of <see cref="T:System.Exception" /> objects for the current HTTP request, or <see langword="null" /> if no errors accumulated during the HTTP request processing.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-125">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-125">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllowAsyncDuringSyncStages">
      <MemberSignature Language="C#" Value="public virtual bool AllowAsyncDuringSyncStages { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAsyncDuringSyncStages" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.AllowAsyncDuringSyncStages" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowAsyncDuringSyncStages As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowAsyncDuringSyncStages { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-126">Quando implementato in una classe derivata, ottiene o imposta un valore che indica se le operazioni asincrone sono consentite durante l'elaborazione delle parti della richiesta ASP.NET quando non sono previste.</span><span class="sxs-lookup"><span data-stu-id="48057-126">When implemented in a derived class, gets or sets a value that indicates whether asynchronous operations are allowed during parts of ASP.NET request processing when they are not expected.</span></span></summary>
        <value>
          <span data-ttu-id="48057-127"><see langword="false" /> se ASP.NET genera un'eccezione quando l'API asincrona viene usata in un momento in cui non è prevista; in caso contrario, <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="48057-127"><see langword="false" /> if ASP.NET will throw an exception when the asynchronous API is used at a time when it is not expected; otherwise, <see langword="true" />.</span></span> <span data-ttu-id="48057-128">Il valore predefinito è <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="48057-128">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48057-129">Per ulteriori informazioni, vedere <xref:System.Web.HttpContext.AllowAsyncDuringSyncStages%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="48057-129">For more information, see <xref:System.Web.HttpContext.AllowAsyncDuringSyncStages%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpApplicationStateBase Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationStateBase Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Application" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Application As HttpApplicationStateBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpApplicationStateBase ^ Application { System::Web::HttpApplicationStateBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationStateBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-130">Sottoposta a override in una classe derivata, ottiene l'oggetto <see cref="T:System.Web.HttpApplicationState" /> per la richiesta HTTP corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-130">When overridden in a derived class, gets the <see cref="T:System.Web.HttpApplicationState" /> object for the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="48057-131">Oggetto stato dell'applicazione per la richiesta HTTP corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-131">The application state object for the current HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-132">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-132">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationInstance">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpApplication ApplicationInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplication ApplicationInstance" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.ApplicationInstance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplicationInstance As HttpApplication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpApplication ^ ApplicationInstance { System::Web::HttpApplication ^ get(); void set(System::Web::HttpApplication ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-133">Sottoposta a override in una classe derivata, ottiene o imposta l'oggetto <see cref="T:System.Web.HttpApplication" /> per la richiesta HTTP corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-133">When overridden in a derived class, gets or sets the <see cref="T:System.Web.HttpApplication" /> object for the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="48057-134">Oggetto per la richiesta HTTP corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-134">The object for the current HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-135">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-135">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsyncPreloadMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.AsyncPreloadMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AsyncPreloadMode As AsyncPreloadModeFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Configuration::AsyncPreloadModeFlags AsyncPreloadMode { System::Web::Configuration::AsyncPreloadModeFlags get(); void set(System::Web::Configuration::AsyncPreloadModeFlags value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.AsyncPreloadModeFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-136">Una volta eseguita l'implementazione in una classe derivata, ottiene o imposta un oggetto che contiene i flag relativi alla modalità di precaricamento asincrona.</span><span class="sxs-lookup"><span data-stu-id="48057-136">When implemented in a derived class, gets or sets an object that contains flags that pertain to asynchronous preload mode.</span></span></summary>
        <value><span data-ttu-id="48057-137">Oggetto che contiene i flag relativi alla modalità di precaricamento asincrona.</span><span class="sxs-lookup"><span data-stu-id="48057-137">An object that contains flags that pertain to asynchronous preload mode.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public virtual System.Web.Caching.Cache Cache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Caching.Cache Cache" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Cache As Cache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Caching::Cache ^ Cache { System::Web::Caching::Cache ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.Cache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-138">In caso di override in una classe derivata, ottiene l'oggetto <see cref="T:System.Web.Caching.Cache" /> per il dominio dell'applicazione corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-138">When overridden in a derived class, gets the <see cref="T:System.Web.Caching.Cache" /> object for the current application domain.</span></span></summary>
        <value><span data-ttu-id="48057-139">Cache per il dominio dell'applicazione corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-139">The cache for the current application domain.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-140">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-140">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ClearError">
      <MemberSignature Language="C#" Value="public virtual void ClearError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.ClearError" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearError ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearError();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="48057-141">In caso di override in una classe derivata, cancella tutti gli errori per la richiesta HTTP corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-141">When overridden in a derived class, clears all errors for the current HTTP request.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-142">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-142">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler CurrentHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler CurrentHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.CurrentHandler" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentHandler As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::IHttpHandler ^ CurrentHandler { System::Web::IHttpHandler ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-143">In caso di override in una classe derivata, ottiene l'oggetto <see cref="T:System.Web.IHttpHandler" /> che rappresenta il gestore attualmente in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="48057-143">When overridden in a derived class, gets the <see cref="T:System.Web.IHttpHandler" /> object that represents the handler that is currently executing.</span></span></summary>
        <value><span data-ttu-id="48057-144">Oggetto che rappresenta il gestore attualmente in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="48057-144">An object that represents the currently executing handler.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-145">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-145">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentNotification">
      <MemberSignature Language="C#" Value="public virtual System.Web.RequestNotification CurrentNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.RequestNotification CurrentNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.CurrentNotification" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentNotification As RequestNotification" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::RequestNotification CurrentNotification { System::Web::RequestNotification get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.RequestNotification</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-146">In caso di override in una classe derivata, ottiene un valore <see cref="T:System.Web.RequestNotification" /> che indica l'evento <see cref="T:System.Web.HttpApplication" /> in corso di elaborazione.</span><span class="sxs-lookup"><span data-stu-id="48057-146">When overridden in a derived class, gets a <see cref="T:System.Web.RequestNotification" /> value that indicates the <see cref="T:System.Web.HttpApplication" /> event that is currently processing.</span></span></summary>
        <value><span data-ttu-id="48057-147">Uno dei valori di <see cref="T:System.Web.RequestNotification" />.</span><span class="sxs-lookup"><span data-stu-id="48057-147">One of the <see cref="T:System.Web.RequestNotification" /> values.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-148">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-148">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DisposeOnPipelineCompleted">
      <MemberSignature Language="C#" Value="public virtual System.Web.ISubscriptionToken DisposeOnPipelineCompleted (IDisposable target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.ISubscriptionToken DisposeOnPipelineCompleted(class System.IDisposable target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.DisposeOnPipelineCompleted(System.IDisposable)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisposeOnPipelineCompleted (target As IDisposable) As ISubscriptionToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::ISubscriptionToken ^ DisposeOnPipelineCompleted(IDisposable ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.IDisposable" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="48057-149">Oggetto il cui metodo <see cref="M:System.IDisposable.Dispose" /> deve essere chiamato quando la parte della connessione <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> della richiesta viene completata.</span><span class="sxs-lookup"><span data-stu-id="48057-149">The object whose <see cref="M:System.IDisposable.Dispose" /> method must be called when the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection part of the request is completed.</span></span></param>
        <summary><span data-ttu-id="48057-150">Una volta eseguita l'implementazione in una classe derivata, consente al metodo <see cref="M:System.IDisposable.Dispose" /> di un oggetto di essere chiamato quando la connessione di <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> parte di questa richiesta viene completata.</span><span class="sxs-lookup"><span data-stu-id="48057-150">When implemented in a derived class, enables an object's <see cref="M:System.IDisposable.Dispose" /> method to be called when the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection part of this request is completed.</span></span></summary>
        <returns><span data-ttu-id="48057-151">Token della sottoscrizione.</span><span class="sxs-lookup"><span data-stu-id="48057-151">The subscription token.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public virtual Exception Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Error" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Error" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Error As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Exception ^ Error { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-152">In caso di override in una classe derivata, ottiene il primo errore (se presente) accumulato durante l'elaborazione di una richiesta HTTP.</span><span class="sxs-lookup"><span data-stu-id="48057-152">When overridden in a derived class, gets the first error (if any) that accumulated when an HTTP request was being processed.</span></span></summary>
        <value><span data-ttu-id="48057-153">Prima eccezione per il processo di richiesta/risposta HTTP corrente oppure <see langword="null" /> se non sono stati accumulati errori durante l'elaborazione della richiesta HTTP.</span><span class="sxs-lookup"><span data-stu-id="48057-153">The first exception for the current HTTP request/response process, or <see langword="null" /> if no errors accumulated during the HTTP request processing.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-154">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-154">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetGlobalResourceObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="48057-155">Sottoposto a override in una classe derivata, ottiene una risorsa a livello di applicazione.</span><span class="sxs-lookup"><span data-stu-id="48057-155">When overridden in a derived class, gets an application-level resource.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetGlobalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetGlobalResourceObject (string classKey, string resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetGlobalResourceObject(string classKey, string resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetGlobalResourceObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalResourceObject (classKey As String, resourceKey As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetGlobalResourceObject(System::String ^ classKey, System::String ^ resourceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classKey" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="classKey"><span data-ttu-id="48057-156">Stringa che rappresenta la proprietà <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> dell'oggetto risorsa richiesto.</span><span class="sxs-lookup"><span data-stu-id="48057-156">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> property of the requested resource object.</span></span></param>
        <param name="resourceKey"><span data-ttu-id="48057-157">Stringa che rappresenta la proprietà <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> dell'oggetto risorsa richiesto.</span><span class="sxs-lookup"><span data-stu-id="48057-157">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span></span></param>
        <summary><span data-ttu-id="48057-158">Quando sottoposto a override in una classe derivata, ottiene un oggetto risorsa a livello di applicazione basato sulle proprietà <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> e <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> specificate.</span><span class="sxs-lookup"><span data-stu-id="48057-158">When overridden in a derived class, gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties.</span></span></summary>
        <returns><span data-ttu-id="48057-159">Oggetto risorsa a livello di applicazione richiesto o <see langword="null" /> se non viene trovato alcun oggetto risorsa corrispondente.</span><span class="sxs-lookup"><span data-stu-id="48057-159">The requested application-level resource object, or <see langword="null" /> if no matching resource object is found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-160">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-160">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetGlobalResourceObject (string classKey, string resourceKey, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetGlobalResourceObject(string classKey, string resourceKey, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalResourceObject (classKey As String, resourceKey As String, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetGlobalResourceObject(System::String ^ classKey, System::String ^ resourceKey, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classKey" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="classKey"><span data-ttu-id="48057-161">Stringa che rappresenta la proprietà <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> dell'oggetto risorsa richiesto.</span><span class="sxs-lookup"><span data-stu-id="48057-161">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> property of the requested resource object.</span></span></param>
        <param name="resourceKey"><span data-ttu-id="48057-162">Stringa che rappresenta la proprietà <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> dell'oggetto risorsa richiesto.</span><span class="sxs-lookup"><span data-stu-id="48057-162">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span></span></param>
        <param name="culture"><span data-ttu-id="48057-163">Stringa che rappresenta l'oggetto <see cref="T:System.Globalization.CultureInfo" /> della risorsa richiesta.</span><span class="sxs-lookup"><span data-stu-id="48057-163">A string that represents the <see cref="T:System.Globalization.CultureInfo" /> object of the requested resource.</span></span></param>
        <summary><span data-ttu-id="48057-164">Quando sottoposto a override in una classe derivata, ottiene un oggetto risorsa a livello di applicazione basato sulle proprietà <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> e <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> specificate e sull'oggetto <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="48057-164">When overridden in a derived class, gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties, and on the <see cref="T:System.Globalization.CultureInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="48057-165">Oggetto risorsa a livello di applicazione richiesto, localizzato per le impostazioni cultura specificate, oppure <see langword="null" /> se non viene trovato alcun oggetto risorsa corrispondente.</span><span class="sxs-lookup"><span data-stu-id="48057-165">The requested application-level resource object, which is localized for the specified culture, or <see langword="null" /> if no matching resource object is found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-166">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-166">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLocalResourceObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="48057-167">Sottoposto a override in una classe derivata, ottiene una risorsa a livello di pagina.</span><span class="sxs-lookup"><span data-stu-id="48057-167">When overridden in a derived class, gets a page-level resource.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLocalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetLocalResourceObject (string virtualPath, string resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetLocalResourceObject(string virtualPath, string resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetLocalResourceObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocalResourceObject (virtualPath As String, resourceKey As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetLocalResourceObject(System::String ^ virtualPath, System::String ^ resourceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="48057-168">Stringa che rappresenta la proprietà <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> dell'oggetto risorsa locale.</span><span class="sxs-lookup"><span data-stu-id="48057-168">A string that represents the <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> property of the local resource object.</span></span></param>
        <param name="resourceKey"><span data-ttu-id="48057-169">Stringa che rappresenta la proprietà <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> dell'oggetto risorsa richiesto.</span><span class="sxs-lookup"><span data-stu-id="48057-169">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span></span></param>
        <summary><span data-ttu-id="48057-170">Quando sottoposto a override in una classe derivata, ottiene un oggetto risorsa a livello di pagina basato sulle proprietà <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> e <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> specificate.</span><span class="sxs-lookup"><span data-stu-id="48057-170">When overridden in a derived class, gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties.</span></span></summary>
        <returns><span data-ttu-id="48057-171">Oggetto risorsa a livello di pagina richiesto o <see langword="null" /> se non viene trovato alcun oggetto risorsa corrispondente.</span><span class="sxs-lookup"><span data-stu-id="48057-171">The requested page-level resource object, or <see langword="null" /> if no matching resource object is found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-172">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-172">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetLocalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetLocalResourceObject (string virtualPath, string resourceKey, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetLocalResourceObject(string virtualPath, string resourceKey, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocalResourceObject (virtualPath As String, resourceKey As String, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetLocalResourceObject(System::String ^ virtualPath, System::String ^ resourceKey, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="48057-173">Stringa che rappresenta la proprietà <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> dell'oggetto risorsa locale.</span><span class="sxs-lookup"><span data-stu-id="48057-173">A string that represents the <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> property of the local resource object.</span></span></param>
        <param name="resourceKey"><span data-ttu-id="48057-174">Stringa che rappresenta la proprietà <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> dell'oggetto risorsa richiesto.</span><span class="sxs-lookup"><span data-stu-id="48057-174">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span></span></param>
        <param name="culture"><span data-ttu-id="48057-175">Stringa che rappresenta l'oggetto <see cref="T:System.Globalization.CultureInfo" /> dell'oggetto della risorsa richiesta.</span><span class="sxs-lookup"><span data-stu-id="48057-175">A string that represents the <see cref="T:System.Globalization.CultureInfo" /> object of the requested resource object.</span></span></param>
        <summary><span data-ttu-id="48057-176">Quando sottoposto a override in una classe derivata, ottiene un oggetto risorsa a livello di pagina basato sulle proprietà <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> e <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> specificate e sull'oggetto <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="48057-176">When overridden in a derived class, gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties, and on the <see cref="T:System.Globalization.CultureInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="48057-177">Oggetto risorsa locale richiesto, localizzato per le impostazioni cultura specificate, oppure <see langword="null" /> se non viene trovato alcun oggetto risorsa corrispondente.</span><span class="sxs-lookup"><span data-stu-id="48057-177">The requested local resource object, which is localized for the specified culture, or <see langword="null" /> if no matching resource object is found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-178">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-178">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public virtual object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName"><span data-ttu-id="48057-179">Percorso della sezione di configurazione (in formato XPath) e nome dell'elemento di configurazione.</span><span class="sxs-lookup"><span data-stu-id="48057-179">The configuration section path (in XPath format) and the configuration element name.</span></span></param>
        <summary><span data-ttu-id="48057-180">In caso di override in una classe derivata, ottiene la sezione di configurazione specificata della configurazione predefinita dell'applicazione corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-180">When overridden in a derived class, gets the specified configuration section of the current application's default configuration.</span></span></summary>
        <returns><span data-ttu-id="48057-181">Sezione specificata o elemento <see langword="null" /> se la sezione non esiste.</span><span class="sxs-lookup"><span data-stu-id="48057-181">The specified section, or <see langword="null" /> if the section does not exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-182">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-182">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public virtual object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="48057-183">Tipo di servizio da ottenere.</span><span class="sxs-lookup"><span data-stu-id="48057-183">The type of service object to get.</span></span></param>
        <summary><span data-ttu-id="48057-184">In caso di override in una classe derivata, restituisce un oggetto per il tipo di servizio corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-184">When overridden in a derived class, returns an object for the current service type.</span></span></summary>
        <returns><span data-ttu-id="48057-185">Tipo di servizio corrente o <see langword="null" /> se non viene trovato alcun servizio.</span><span class="sxs-lookup"><span data-stu-id="48057-185">The current service type, or <see langword="null" /> if no service is found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-186">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-186">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Handler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler Handler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler Handler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Handler" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Handler As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::IHttpHandler ^ Handler { System::Web::IHttpHandler ^ get(); void set(System::Web::IHttpHandler ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-187">Sottoposta a override in una classe derivata, ottiene o imposta l'oggetto <see cref="T:System.Web.IHttpHandler" /> responsabile dell'elaborazione della richiesta HTTP.</span><span class="sxs-lookup"><span data-stu-id="48057-187">When overridden in a derived class, gets or sets the <see cref="T:System.Web.IHttpHandler" /> object that is responsible for processing the HTTP request.</span></span></summary>
        <value><span data-ttu-id="48057-188">Oggetto responsabile dell'elaborazione della richiesta HTTP.</span><span class="sxs-lookup"><span data-stu-id="48057-188">The object that is responsible for processing the HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-189">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-189">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsCustomErrorEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsCustomErrorEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomErrorEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsCustomErrorEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsCustomErrorEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsCustomErrorEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-190">In caso di override in una classe derivata, ottiene un valore che indica se gli errori personalizzati sono abilitati per la richiesta HTTP corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-190">When overridden in a derived class, gets a value that indicates whether custom errors are enabled for the current HTTP request.</span></span></summary>
        <value>
          <span data-ttu-id="48057-191"><see langword="true" /> se gli errori personalizzati sono attivati; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="48057-191"><see langword="true" /> if custom errors are enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-192">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-192">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDebuggingEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsDebuggingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDebuggingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsDebuggingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDebuggingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDebuggingEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-193">In caso di override in una classe derivata, ottiene un valore che indica se la richiesta HTTP corrente è in modalità di debug.</span><span class="sxs-lookup"><span data-stu-id="48057-193">When overridden in a derived class, gets a value that indicates whether the current HTTP request is in debug mode.</span></span></summary>
        <value>
          <span data-ttu-id="48057-194"><see langword="true" /> se la richiesta è in modalità di debug; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="48057-194"><see langword="true" /> if the request is in debug mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-195">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-195">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsPostNotification">
      <MemberSignature Language="C#" Value="public virtual bool IsPostNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPostNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsPostNotification" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsPostNotification As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsPostNotification { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-196">Sottoposta a override in una classe derivata, ottiene un valore che indica se un evento <see cref="T:System.Web.HttpApplication" /> ha completato l'elaborazione.</span><span class="sxs-lookup"><span data-stu-id="48057-196">When overridden in a derived class, gets a value that indicates whether an <see cref="T:System.Web.HttpApplication" /> event has finished processing.</span></span></summary>
        <value>
          <span data-ttu-id="48057-197"><see langword="true" /> se l'evento ha completato l'elaborazione; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="48057-197"><see langword="true" /> if the event has finished processing; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-198">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-198">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequest">
      <MemberSignature Language="C#" Value="public virtual bool IsWebSocketRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequest" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsWebSocketRequest" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsWebSocketRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsWebSocketRequest { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-199">Se implementata in una classe derivata, ottiene un valore che indica se la richiesta è una richiesta di connessione <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="48057-199">When implemented in a derived class, gets a value that indicates whether the request is an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection request.</span></span></summary>
        <value>
          <span data-ttu-id="48057-200"><see langword="true" /> se la richiesta è di tipo <see cref="T:System.Web.WebSockets.AspNetWebSocket" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="48057-200"><see langword="true" /> if the request is an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequestUpgrading">
      <MemberSignature Language="C#" Value="public virtual bool IsWebSocketRequestUpgrading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequestUpgrading" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsWebSocketRequestUpgrading" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsWebSocketRequestUpgrading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsWebSocketRequestUpgrading { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-201">Una volta eseguita l'implementazione in una classe derivata, ottiene un valore che indica se si sta eseguendo l'aggiornamento della connessione da una connessione HTTP a una connessione di <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> .</span><span class="sxs-lookup"><span data-stu-id="48057-201">When implemented in a derived class, gets a value that indicates whether the connection is upgrading from an HTTP connection to an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span></span></summary>
        <value>
          <span data-ttu-id="48057-202"><see langword="true" /> se la connessione è in corso di aggiornamento; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="48057-202"><see langword="true" /> if the connection is upgrading; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IDictionary ^ Items { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-203">In caso di override in una classe derivata, ottiene una raccolta di coppie chiave/valore che può essere usata per organizzare e condividere dati tra un modulo e un gestore durante una richiesta HTTP.</span><span class="sxs-lookup"><span data-stu-id="48057-203">When overridden in a derived class, gets a key/value collection that can be used to organize and share data between a module and a handler during an HTTP request.</span></span></summary>
        <value><span data-ttu-id="48057-204">Raccolta di coppie chiave/valore che fornisce l'accesso a un singolo valore all'interno della raccolta usando una chiave specificata.</span><span class="sxs-lookup"><span data-stu-id="48057-204">A key/value collection that provides access to an individual value in the collection by using a specified key.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-205">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-205">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PageInstrumentation">
      <MemberSignature Language="C#" Value="public virtual System.Web.Instrumentation.PageInstrumentationService PageInstrumentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Instrumentation.PageInstrumentationService PageInstrumentation" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.PageInstrumentation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageInstrumentation As PageInstrumentationService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Instrumentation::PageInstrumentationService ^ PageInstrumentation { System::Web::Instrumentation::PageInstrumentationService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Instrumentation.PageInstrumentationService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-206">Una volta eseguita l'implementazione in una classe derivata, ottiene un riferimento all'istanza del servizio di strumentazione pagina per questa richiesta.</span><span class="sxs-lookup"><span data-stu-id="48057-206">When implemented in a derived class, gets a reference to the page-instrumentation service instance for this request.</span></span></summary>
        <value><span data-ttu-id="48057-207">Istanza del servizio di strumentazione pagina per questa richiesta.</span><span class="sxs-lookup"><span data-stu-id="48057-207">The page-instrumentation service instance for this request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler PreviousHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler PreviousHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.PreviousHandler" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousHandler As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::IHttpHandler ^ PreviousHandler { System::Web::IHttpHandler ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-208">Sottoposta a override in una classe derivata, ottiene l'oggetto <see cref="T:System.Web.IHttpHandler" /> per il gestore padre.</span><span class="sxs-lookup"><span data-stu-id="48057-208">When overridden in a derived class, gets the <see cref="T:System.Web.IHttpHandler" /> object for the parent handler.</span></span></summary>
        <value><span data-ttu-id="48057-209">Oggetto <see cref="T:System.Web.IHttpHandler" /> che rappresenta il gestore padre, oppure <see langword="null" /> se non è stato possibile trovare alcun gestore padre.</span><span class="sxs-lookup"><span data-stu-id="48057-209">An <see cref="T:System.Web.IHttpHandler" /> object that represents the parent handler, or <see langword="null" /> if no parent handler was found.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-210">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-210">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Profile">
      <MemberSignature Language="C#" Value="public virtual System.Web.Profile.ProfileBase Profile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Profile.ProfileBase Profile" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Profile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Profile As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Profile::ProfileBase ^ Profile { System::Web::Profile::ProfileBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-211">Sottoposta a override in una classe derivata, ottiene l'oggetto <see cref="T:System.Web.Profile.ProfileBase" /> per il profilo utente corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-211">When overridden in a derived class, gets the <see cref="T:System.Web.Profile.ProfileBase" /> object for the current user profile.</span></span></summary>
        <value><span data-ttu-id="48057-212">Se le proprietà del profilo sono definite nel file di configurazione dell'applicazione e i profili sono attivati per l'applicazione, un oggetto che rappresenta il profilo utente corrente; in caso contrario, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="48057-212">If the profile properties are defined in the application configuration file and profiles are enabled for the application, an object that represents the current user profile; otherwise, <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-213">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-213">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemapHandler">
      <MemberSignature Language="C#" Value="public virtual void RemapHandler (System.Web.IHttpHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemapHandler(class System.Web.IHttpHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RemapHandler(System.Web.IHttpHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemapHandler (handler As IHttpHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemapHandler(System::Web::IHttpHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="48057-214">Oggetto che deve elaborare la richiesta.</span><span class="sxs-lookup"><span data-stu-id="48057-214">The object that should process the request.</span></span></param>
        <summary><span data-ttu-id="48057-215">Se sottoposto a override in una classe derivata, specifica un gestore per la richiesta.</span><span class="sxs-lookup"><span data-stu-id="48057-215">When overridden in a derived class, specifies a handler for the request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48057-216">Se si imposta `handler` a `null`, il gestore predefinito viene utilizzato per elaborare la richiesta.</span><span class="sxs-lookup"><span data-stu-id="48057-216">If you set `handler` to `null`, the default handler is used to process the request.</span></span> <span data-ttu-id="48057-217">È possibile impostare `handler` su un gestore asincrono o a un gestore sincrono.</span><span class="sxs-lookup"><span data-stu-id="48057-217">You can set `handler` to either an asynchronous handler or to an synchronous handler.</span></span> <span data-ttu-id="48057-218">Il gestore deve implementare il <xref:System.Web.IHttpHandler> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="48057-218">The handler must implement the <xref:System.Web.IHttpHandler> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-219">Un tipo derivato non riesce a implementare questo metodo.</span><span class="sxs-lookup"><span data-stu-id="48057-219">A derived type fails to implement this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpRequestBase Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpRequestBase Request" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Request" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Request As HttpRequestBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpRequestBase ^ Request { System::Web::HttpRequestBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpRequestBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-220">Sottoposta a override in una classe derivata, ottiene l'oggetto <see cref="T:System.Web.HttpRequest" /> per la richiesta HTTP corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-220">When overridden in a derived class, gets the <see cref="T:System.Web.HttpRequest" /> object for the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="48057-221">Richiesta HTTP corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-221">The current HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-222">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-222">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpResponseBase Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpResponseBase Response" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Response" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Response As HttpResponseBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpResponseBase ^ Response { System::Web::HttpResponseBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpResponseBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-223">Sottoposta a override in una classe derivata, ottiene l'oggetto <see cref="T:System.Web.HttpResponse" /> per la risposta HTTP corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-223">When overridden in a derived class, gets the <see cref="T:System.Web.HttpResponse" /> object for the current HTTP response.</span></span></summary>
        <value><span data-ttu-id="48057-224">Risposta HTTP corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-224">The current HTTP response.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-225">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-225">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RewritePath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="48057-226">Sottoposto a override in una classe derivata, assegna un percorso di riscrittura interno che consente all'URL richiesto di differenziarsi dal percorso interno della risorsa.</span><span class="sxs-lookup"><span data-stu-id="48057-226">When overridden in a derived class, assigns an internal rewrite path, which lets the request URL differ from the internal path of the resource.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="48057-227">Percorso di sostituzione.</span><span class="sxs-lookup"><span data-stu-id="48057-227">The replacement path.</span></span></param>
        <summary><span data-ttu-id="48057-228">In caso di override in una classe derivata, riscrive l'URL usando il percorso specificato.</span><span class="sxs-lookup"><span data-stu-id="48057-228">When overridden in a derived class, rewrites the URL by using the specified path.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-229">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-229">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string path, bool rebaseClientPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string path, bool rebaseClientPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (path As String, rebaseClientPath As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ path, bool rebaseClientPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="rebaseClientPath" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="48057-230">Percorso di sostituzione.</span><span class="sxs-lookup"><span data-stu-id="48057-230">The replacement path.</span></span></param>
        <param name="rebaseClientPath">
          <span data-ttu-id="48057-231"><see langword="true" /> per reimpostare il percorso virtuale, <see langword="false" /> per mantenere tale percorso invariato.</span><span class="sxs-lookup"><span data-stu-id="48057-231"><see langword="true" /> to reset the virtual path; <see langword="false" /> to keep the virtual path unchanged.</span></span></param>
        <summary><span data-ttu-id="48057-232">In caso di override in una classe derivata, riscrive l'URL usando il percorso specificato e un valore booleano che indica se il percorso virtuale per le risorse del server è modificato.</span><span class="sxs-lookup"><span data-stu-id="48057-232">When overridden in a derived class, rewrites the URL by using the specified path and a value that specifies whether the virtual path for server resources is modified.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-233">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-233">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string filePath, string pathInfo, string queryString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string filePath, string pathInfo, string queryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (filePath As String, pathInfo As String, queryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ filePath, System::String ^ pathInfo, System::String ^ queryString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="pathInfo" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath"><span data-ttu-id="48057-234">Percorso di sostituzione.</span><span class="sxs-lookup"><span data-stu-id="48057-234">The replacement path.</span></span></param>
        <param name="pathInfo"><span data-ttu-id="48057-235">Informazioni aggiuntive sul percorso di una risorsa.</span><span class="sxs-lookup"><span data-stu-id="48057-235">Additional path information for a resource.</span></span></param>
        <param name="queryString"><span data-ttu-id="48057-236">Stringa di query della richiesta.</span><span class="sxs-lookup"><span data-stu-id="48057-236">The request query string.</span></span></param>
        <summary><span data-ttu-id="48057-237">In caso di override in una classe derivata, riscrive l'URL usando il percorso, le informazioni sul percorso e le informazioni sulla stringa di query specificati.</span><span class="sxs-lookup"><span data-stu-id="48057-237">When overridden in a derived class, rewrites the URL by using the specified path, path information, and query string information.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-238">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-238">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string filePath, string pathInfo, string queryString, bool setClientFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string filePath, string pathInfo, string queryString, bool setClientFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (filePath As String, pathInfo As String, queryString As String, setClientFilePath As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ filePath, System::String ^ pathInfo, System::String ^ queryString, bool setClientFilePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="pathInfo" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
        <Parameter Name="setClientFilePath" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filePath"><span data-ttu-id="48057-239">Percorso di sostituzione.</span><span class="sxs-lookup"><span data-stu-id="48057-239">The replacement path.</span></span></param>
        <param name="pathInfo"><span data-ttu-id="48057-240">Informazioni aggiuntive sul percorso di una risorsa.</span><span class="sxs-lookup"><span data-stu-id="48057-240">Additional path information for a resource.</span></span></param>
        <param name="queryString"><span data-ttu-id="48057-241">Stringa di query della richiesta.</span><span class="sxs-lookup"><span data-stu-id="48057-241">The request query string.</span></span></param>
        <param name="setClientFilePath">
          <span data-ttu-id="48057-242"><see langword="true" /> per impostare il percorso dei file usato per le risorse del client sul valore del parametro <c>filePath</c>; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="48057-242"><see langword="true" /> to set the file path used for client resources to the value of the <c>filePath</c> parameter; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="48057-243">In caso di override in una classe derivata, riscrive l'URL con il percorso virtuale specificato, le informazioni sul percorso, le informazioni sulla stringa di query e un valore che specifica se il percorso del file del client è impostato sul percorso di riscrittura.</span><span class="sxs-lookup"><span data-stu-id="48057-243">When overridden in a derived class, rewrites the URL by using the specified path, path information, query string information, and a value that specifies whether the client file path is set to the rewrite path.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-244">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-244">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpServerUtilityBase Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtilityBase Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Server" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Server As HttpServerUtilityBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpServerUtilityBase ^ Server { System::Web::HttpServerUtilityBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtilityBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-245">Sottoposta a override in una classe derivata, ottiene l'oggetto <see cref="T:System.Web.HttpServerUtility" /> che fornisce i metodi utilizzati nell'elaborazione delle richieste Web.</span><span class="sxs-lookup"><span data-stu-id="48057-245">When overridden in a derived class, gets the <see cref="T:System.Web.HttpServerUtility" /> object that provides methods that are used when Web requests are being processed.</span></span></summary>
        <value><span data-ttu-id="48057-246">Oggetto di utilità del server per la richiesta HTTP corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-246">The server utility object for the current HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-247">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-247">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpSessionStateBase Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpSessionStateBase Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Session" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Session As HttpSessionStateBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpSessionStateBase ^ Session { System::Web::HttpSessionStateBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpSessionStateBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-248">Sottoposta a override in una classe derivata, ottiene l'oggetto <see cref="T:System.Web.SessionState.HttpSessionState" /> per la richiesta HTTP corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-248">When overridden in a derived class, gets the <see cref="T:System.Web.SessionState.HttpSessionState" /> object for the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="48057-249">Oggetto stato della sessione per la richiesta HTTP corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-249">The session-state object for the current HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-250">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-250">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetSessionStateBehavior">
      <MemberSignature Language="C#" Value="public virtual void SetSessionStateBehavior (System.Web.SessionState.SessionStateBehavior sessionStateBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSessionStateBehavior(valuetype System.Web.SessionState.SessionStateBehavior sessionStateBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetSessionStateBehavior(System::Web::SessionState::SessionStateBehavior sessionStateBehavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionStateBehavior" Type="System.Web.SessionState.SessionStateBehavior" />
      </Parameters>
      <Docs>
        <param name="sessionStateBehavior"><span data-ttu-id="48057-251">Uno dei valori di enumerazione che specifica il tipo di comportamento dello stato di sessione necessario.</span><span class="sxs-lookup"><span data-stu-id="48057-251">One of the enumeration values that specifies what type of session state behavior is required.</span></span></param>
        <summary><span data-ttu-id="48057-252">Quando sottoposto a override in una classe derivata, imposta il tipo di comportamento dello stato di sessione necessario per supportare una richiesta HTTP.</span><span class="sxs-lookup"><span data-stu-id="48057-252">When overridden in a derived class, sets the type of session state behavior that is required to support an HTTP request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48057-253">Il <xref:System.Web.HttpContextBase.SetSessionStateBehavior%2A> metodo fornisce un metodo di base che deve essere implementato da classi che ereditano da questo tipo.</span><span class="sxs-lookup"><span data-stu-id="48057-253">The <xref:System.Web.HttpContextBase.SetSessionStateBehavior%2A> method provides a base method that must be implemented by classes that inherit from this type.</span></span> <span data-ttu-id="48057-254">Questo metodo in ASP.NET viene implementato il <xref:System.Web.HttpContextWrapper> e <xref:System.Web.HttpContext> classi.</span><span class="sxs-lookup"><span data-stu-id="48057-254">ASP.NET implements this method in the <xref:System.Web.HttpContextWrapper> and <xref:System.Web.HttpContext> classes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-255">Un tipo derivato non riesce a implementare questo metodo.</span><span class="sxs-lookup"><span data-stu-id="48057-255">A derived type fails to implement this method.</span></span></exception>
        <altmember cref="M:System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)" />
      </Docs>
    </Member>
    <Member MemberName="SkipAuthorization">
      <MemberSignature Language="C#" Value="public virtual bool SkipAuthorization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipAuthorization" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.SkipAuthorization" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SkipAuthorization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SkipAuthorization { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-256">Sottoposta a override in una classe derivata, ottiene o imposta un valore che specifica se l'oggetto <see cref="T:System.Web.Security.UrlAuthorizationModule" /> deve ignorare il controllo delle autorizzazioni per la richiesta corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-256">When overridden in a derived class, gets or sets a value that specifies whether the <see cref="T:System.Web.Security.UrlAuthorizationModule" /> object should skip the authorization check for the current request.</span></span></summary>
        <value>
          <span data-ttu-id="48057-257"><see langword="true" /> se <see cref="T:System.Web.Security.UrlAuthorizationModule" /> deve ignorare il controllo delle autorizzazioni; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="48057-257"><see langword="true" /> if <see cref="T:System.Web.Security.UrlAuthorizationModule" /> should skip the authorization check; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-258">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-258">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ThreadAbortOnTimeout">
      <MemberSignature Language="C#" Value="public virtual bool ThreadAbortOnTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThreadAbortOnTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.ThreadAbortOnTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ThreadAbortOnTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ThreadAbortOnTimeout { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-259">Quando implementato in una classe derivata, ottiene o imposta un valore che specifica se il runtime ASP.NET deve chiamare <see cref="M:System.Threading.Thread.Abort" /> sul thread che sta rispondendo a questa richiesta quando la richiesta scade.</span><span class="sxs-lookup"><span data-stu-id="48057-259">When implemented in a derived class, gets or sets a value that specifies whether the ASP.NET runtime should call <see cref="M:System.Threading.Thread.Abort" /> on the thread that is servicing this request when the request times out.</span></span></summary>
        <value>
          <span data-ttu-id="48057-260"><see langword="true" /> se <see cref="M:System.Threading.Thread.Abort" /> verrà chiamato quando scade il thread; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="48057-260"><see langword="true" /> if <see cref="M:System.Threading.Thread.Abort" /> will be called when the thread times out; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="48057-261">Il valore predefinito è <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="48057-261">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48057-262">Per ulteriori informazioni, vedere <xref:System.Web.HttpContext.ThreadAbortOnTimeout%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="48057-262">For more information, see <xref:System.Web.HttpContext.ThreadAbortOnTimeout%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public virtual DateTime Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Timestamp As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime Timestamp { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-263">In caso di override in una classe derivata, ottiene il timestamp iniziale della richiesta HTTP corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-263">When overridden in a derived class, gets the initial timestamp of the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="48057-264">Timestamp della richiesta HTTP corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-264">The timestamp of the current HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-265">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-265">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Trace">
      <MemberSignature Language="C#" Value="public virtual System.Web.TraceContext Trace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.TraceContext Trace" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Trace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Trace As TraceContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::TraceContext ^ Trace { System::Web::TraceContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.TraceContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-266">Sottoposta a override in una classe derivata, ottiene l'oggetto <see cref="T:System.Web.TraceContext" /> per la risposta HTTP corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-266">When overridden in a derived class, gets the <see cref="T:System.Web.TraceContext" /> object for the current HTTP response.</span></span></summary>
        <value><span data-ttu-id="48057-267">Oggetto traccia per la risposta HTTP corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-267">The trace object for the current HTTP response.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-268">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-268">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IPrincipal User { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.User" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-269">In caso di override in una classe derivata, ottiene o imposta informazioni di sicurezza per la richiesta HTTP corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-269">When overridden in a derived class, gets or sets security information for the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="48057-270">Oggetto che contiene le informazioni sulla sicurezza per la richiesta HTTP corrente.</span><span class="sxs-lookup"><span data-stu-id="48057-270">An object that contains security information for the current HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="48057-271">Sempre</span><span class="sxs-lookup"><span data-stu-id="48057-271">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WebSocketNegotiatedProtocol">
      <MemberSignature Language="C#" Value="public virtual string WebSocketNegotiatedProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WebSocketNegotiatedProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.WebSocketNegotiatedProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WebSocketNegotiatedProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ WebSocketNegotiatedProtocol { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-272">Una volta eseguita l'implementazione in una classe derivata, ottiene il protocollo negoziato inviato dal server al client per una connessione <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> .</span><span class="sxs-lookup"><span data-stu-id="48057-272">When implemented in a derived class, gets the negotiated protocol that was sent from the server to the client for an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span></span></summary>
        <value><span data-ttu-id="48057-273">Protocollo negoziato.</span><span class="sxs-lookup"><span data-stu-id="48057-273">The negotiated protocol.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebSocketRequestedProtocols">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; WebSocketRequestedProtocols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; WebSocketRequestedProtocols" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.WebSocketRequestedProtocols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WebSocketRequestedProtocols As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::String ^&gt; ^ WebSocketRequestedProtocols { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48057-274">Una volta eseguita l'implementazione in una classe derivata, ottiene l'elenco ordinato dei protocolli richiesti dal client.</span><span class="sxs-lookup"><span data-stu-id="48057-274">When implemented in a derived class, gets the ordered list of protocols that were requested by the client.</span></span></summary>
        <value><span data-ttu-id="48057-275">Protocolli richiesti o <see langword="null" /> se questa non è una richiesta <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> o non è presente alcun elenco.</span><span class="sxs-lookup"><span data-stu-id="48057-275">The requested protocols, or <see langword="null" /> if this is not an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request or if no list is present.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>