<Type Name="TraceContext" FullName="System.Web.TraceContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="49e552faa4d809c8ea6e2c3a93773f749884c97b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30609685" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TraceContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TraceContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.TraceContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TraceContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceContext sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Acquisisce e presenta i dettagli di esecuzione relativi a una richiesta Web. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare questa classe per aggiungere messaggi a specifiche categorie di analisi. Ad esempio, se si sta creando un'istanza di <xref:System.Web.UI.WebControls.Calendar> classe per l'applicazione, è possibile includere il messaggio di traccia "Avvio del rendering" in una routine di rendering e "Attivazione evento OnChange" in una routine del gestore eventi.  
  
 È inoltre possibile utilizzare la <xref:System.Web.TraceContext> classe per ottenere un set di record di traccia alla fine dell'esecuzione della richiesta per l'elaborazione personalizzata. Per ulteriori informazioni, vedere [Cenni preliminari sulla traccia di ASP.NET](http://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416).  
  
 Per abilitare la traccia, impostare il `Trace` attributo la [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) direttiva o <xref:System.Web.TraceContext.IsEnabled%2A> proprietà `true`. Quando è attivata, oltre a visualizzare il contenuto di traccia fornito dall'utente, la <xref:System.Web.UI.Page> classe include automaticamente i dati sulle prestazioni, informazioni sulla struttura ad albero di controllo e il contenuto di gestione dello stato per ogni richiesta.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.TraceContextEventArgs" />
    <altmember cref="T:System.Web.TraceContextEventHandler" />
    <altmember cref="T:System.Web.TraceContextRecord" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceContext (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.#ctor(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceContext(System::Web::HttpContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Un oggetto <see cref="T:System.Web.HttpContext" /> che contiene informazioni sulla richiesta Web corrente.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.TraceContext" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContext.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la tracciatura è attivata per la richiesta Web corrente.</summary>
        <value>
          <see langword="true" /> se la tracciatura è attivata; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo flag per controllare se la pagina o l'applicazione deve generare informazioni di traccia prima scrittura nel log di traccia.  
  
 Il valore della <xref:System.Web.TraceContext.IsEnabled%2A> proprietà dipende dalle impostazioni nella sottosezione del `system.web` sezione di configurazione e il valore della `trace` attributo della direttiva. L'opzione di traccia impostato nella direttiva della pagina ha la precedenza sull'opzione impostata nel file di configurazione. L'impostazione di <xref:System.Web.TraceContext.IsEnabled%2A> valore a livello di programmazione ha la precedenza tramite l'attributo della direttiva di pagina e l'impostazione di configurazione.  
  
> [!NOTE]
>  Se si imposta la <xref:System.Web.TraceContext.IsEnabled%2A> proprietà `true` per un'intera applicazione, è necessario impostare questa proprietà in modo esplicito `false` per qualsiasi pagina dell'applicazione per cui si desidera visualizzare le informazioni di analisi.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come è possibile determinare se la traccia è abilitata per una pagina. Il codice esegue l'iterazione attraverso le righe in un set di dati, scrittura di istruzioni di traccia per ogni riga nel set di dati.  
  
 [!code-csharp[Classic TraceContext.IsEnabled Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TraceContext.IsEnabled Example/CS/source.cs#1)]
 [!code-vb[Classic TraceContext.IsEnabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TraceContext.IsEnabled Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceFinished">
      <MemberSignature Language="C#" Value="public event System.Web.TraceContextEventHandler TraceFinished;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.TraceContextEventHandler TraceFinished" />
      <MemberSignature Language="DocId" Value="E:System.Web.TraceContext.TraceFinished" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TraceFinished As TraceContextEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::TraceContextEventHandler ^ TraceFinished;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.TraceContextEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Generato dall'oggetto <see cref="T:System.Web.TraceContext" /> per esporre i messaggi di traccia dopo la raccolta di tutte le informazioni sulla richiesta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.TraceContext.TraceFinished> evento viene generato durante il `EndRequest` fase dell'elaborazione della richiesta HTTP. Viene generato da un <xref:System.Web.TraceContext> oggetto dopo aver raccolto tutte le informazioni richieste, per esporre la raccolta di <xref:System.Web.TraceContextRecord> messaggi registrati <xref:System.Web.TraceContextEventHandler> delegati.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come è possibile registrare un <xref:System.Web.TraceContextEventHandler> per gestire il <xref:System.Web.TraceContext.TraceFinished> evento. In questo esempio, il delegato scorre i messaggi di traccia e li scrive nel flusso di risposta. Tuttavia, è possibile scrivere le stesse informazioni in un database o un consumer di strumenti di profilatura.  
  
 [!code-aspx-csharp[System.Web.Trace_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_3/CS/form3cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_3/VB/form3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.TraceContextEventHandler" />
        <altmember cref="T:System.Web.TraceContextEventArgs" />
        <altmember cref="T:System.Web.TraceContextRecord" />
      </Docs>
    </Member>
    <Member MemberName="TraceMode">
      <MemberSignature Language="C#" Value="public System.Web.TraceMode TraceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.TraceMode TraceMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContext.TraceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TraceMode As TraceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::TraceMode TraceMode { System::Web::TraceMode get(); void set(System::Web::TraceMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.TraceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'ordine in cui i messaggi di traccia devono essere visualizzati sul browser che ne abbia fatto richiesta.</summary>
        <value>Uno dei valori dell'enumerazione <see cref="T:System.Web.TraceMode" />. L'impostazione predefinita riguarda l'attributo <see langword="traceMode" /> nella sezione <see langword="trace" /> di un file di configurazione la cui impostazione predefinita è <see langword="SortByTime" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Messaggi di traccia possono essere ordinati in ordine di elaborazione o in ordine alfabetico in base alla categoria definita dall'utente.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come è possibile ordinare le istruzioni di traccia di una pagina in ordine alfabetico in base alle categorie assegnate alle istruzioni.  
  
 [!code-aspx-csharp[Classic TraceContext.TraceMode Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TraceContext.TraceMode Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TraceContext.TraceMode Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TraceContext.TraceMode Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore selezionato non corrisponde a uno dei valori dell'enumerazione <see cref="T:System.Web.TraceMode" />.</exception>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Warn">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Scrive le informazioni di traccia nel log della traccia. A differenza di <see cref="M:System.Web.TraceContext.Write(System.String)" />, tutti gli avvisi sono visualizzati nel log come testo di colore rosso.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Warn">
      <MemberSignature Language="C#" Value="public void Warn (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warn(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Warn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warn (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warn(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Il messaggio di traccia da scrivere nel log.</param>
        <summary>Scrive un messaggio di traccia nel log dell'analisi. Tutti gli avvisi sono visualizzati nel log come testo di colore rosso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni volta che il <xref:System.Web.TraceContext.Warn%2A> metodo viene chiamato, un <xref:System.Web.TraceContext> viene aggiunto il messaggio di traccia di <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> insieme, che è accessibile quando si gestiscono i messaggi il <xref:System.Web.TraceContext.TraceFinished> evento. Il messaggio viene aggiunto con il relativo <xref:System.Web.TraceContextRecord.IsWarning%2A> proprietà impostata su `true` e il relativo <xref:System.Web.TraceContextRecord.ErrorInfo%2A> proprietà impostata su `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warn">
      <MemberSignature Language="C#" Value="public void Warn (string category, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warn(string category, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Warn(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warn (category As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warn(System::String ^ category, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category">La categoria di traccia che riceve il messaggio.</param>
        <param name="message">Il messaggio di traccia da scrivere nel log.</param>
        <summary>Scrive le informazioni di traccia nel log della traccia, includendo eventuali categorie definite dall'utente e messaggi di analisi. Tutti gli avvisi sono visualizzati nel log come testo di colore rosso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni volta che il <xref:System.Web.TraceContext.Warn%2A> metodo viene chiamato, un <xref:System.Web.TraceContext> viene aggiunto il messaggio di traccia di <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> insieme, che è accessibile quando si gestiscono i messaggi il <xref:System.Web.TraceContext.TraceFinished> evento. Il messaggio viene aggiunto con il relativo <xref:System.Web.TraceContextRecord.IsWarning%2A> proprietà impostata su `true` e il relativo <xref:System.Web.TraceContextRecord.ErrorInfo%2A> proprietà impostata su `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warn">
      <MemberSignature Language="C#" Value="public void Warn (string category, string message, Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warn(string category, string message, class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Warn(System.String,System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warn (category As String, message As String, errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warn(System::String ^ category, System::String ^ message, Exception ^ errorInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="category">La categoria di traccia che riceve il messaggio.</param>
        <param name="message">Il messaggio di traccia da scrivere nel log.</param>
        <param name="errorInfo">Un'eccezione <see cref="T:System.Exception" /> che contiene informazioni sull'errore.</param>
        <summary>Scrive le informazioni di traccia nel log della traccia, incluse eventuali categorie definite dall'utente, messaggi di analisi e informazioni sugli errori. Tutti gli avvisi sono visualizzati nel log come testo di colore rosso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni volta che il <xref:System.Web.TraceContext.Warn%2A> metodo viene chiamato, un <xref:System.Web.TraceContext> viene aggiunto il messaggio di traccia di <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> insieme, che è accessibile quando si gestiscono i messaggi il <xref:System.Web.TraceContext.TraceFinished> evento. Il messaggio viene aggiunto con il relativo <xref:System.Web.TraceContextRecord.IsWarning%2A> proprietà impostata su `true`e <xref:System.Web.TraceContextRecord.ErrorInfo%2A> proprietà è impostata per l'oggetto passato per il `errorInfo` parametro.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come chiamare il <xref:System.Web.TraceContext.Write%2A> metodo per scrivere un messaggio di traccia di errore nel log di traccia. In questo esempio, le diverse eccezioni vengono analizzate come errori e avvisi. Quando la pagina genera un <xref:System.ArgumentException>, viene scritto un messaggio di avviso tramite il <xref:System.Web.TraceContext.Warn%2A> metodo. Quando la pagina genera un <xref:System.InvalidOperationException>, viene scritto un messaggio di errore tramite il <xref:System.Web.TraceContext.Write%2A> metodo.  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Scrive le informazioni di traccia nel log della traccia.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Il messaggio di traccia da scrivere nel log.</param>
        <summary>Scrive un messaggio di traccia nel log dell'analisi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni volta che il <xref:System.Web.TraceContext.Write%2A> metodo viene chiamato, un <xref:System.Web.TraceContext> viene aggiunto il messaggio di traccia di <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> insieme, che è accessibile quando si gestiscono i messaggi il <xref:System.Web.TraceContext.TraceFinished> evento. Il messaggio viene aggiunto con il relativo <xref:System.Web.TraceContextRecord.IsWarning%2A> proprietà impostata su `false` e il relativo <xref:System.Web.TraceContextRecord.ErrorInfo%2A> proprietà impostata su `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string category, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string category, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (category As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ category, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category">La categoria di traccia che riceve il messaggio.</param>
        <param name="message">Il messaggio di traccia da scrivere nel log.</param>
        <summary>Scrive le informazioni di traccia nel log della traccia, includendo un messaggio ed eventuali categorie definite dall'utente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni volta che il <xref:System.Web.TraceContext.Write%2A> metodo viene chiamato, un <xref:System.Web.TraceContext> viene aggiunto il messaggio di traccia di <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> insieme, che è accessibile quando si gestiscono i messaggi il <xref:System.Web.TraceContext.TraceFinished> evento. Il messaggio viene aggiunto con il relativo <xref:System.Web.TraceContextRecord.IsWarning%2A> proprietà impostata su `false` e il relativo <xref:System.Web.TraceContextRecord.ErrorInfo%2A> proprietà impostata su `null`.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come chiamare il <xref:System.Web.TraceContext.Write%2A> metodo per scrivere un messaggio di traccia di errore nel log di traccia. In questo esempio, il delegato scorre i messaggi di traccia e li scrive in formato tabella HTML; Tuttavia, è possibile scrivere le stesse informazioni in un database o un consumer di strumenti di profilatura.  
  
 [!code-aspx-csharp[System.Web.Trace_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_5/CS/form5cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_5/VB/form5vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string category, string message, Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string category, string message, class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Write(System.String,System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (category As String, message As String, errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ category, System::String ^ message, Exception ^ errorInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="category">La categoria di traccia che riceve il messaggio.</param>
        <param name="message">Il messaggio di traccia da scrivere nel log.</param>
        <param name="errorInfo">Un'eccezione <see cref="T:System.Exception" /> che contiene informazioni sull'errore.</param>
        <summary>Scrive le informazioni di traccia nel log della traccia, incluse eventuali categorie definite dall'utente, messaggi di analisi e informazioni sugli errori.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni volta che il <xref:System.Web.TraceContext.Write%2A> metodo viene chiamato, un <xref:System.Web.TraceContext> viene aggiunto il messaggio di traccia di <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> insieme, che è accessibile quando si gestiscono i messaggi il <xref:System.Web.TraceContext.TraceFinished> evento. Il messaggio viene aggiunto con il relativo <xref:System.Web.TraceContextRecord.IsWarning%2A> proprietà impostata su `false`e <xref:System.Web.TraceContextRecord.ErrorInfo%2A> proprietà è impostata per l'oggetto passato per il `errorInfo` parametro.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come chiamare il <xref:System.Web.TraceContext.Write%2A> metodo per scrivere un messaggio di traccia di errore nel log di traccia. In questo esempio, le diverse eccezioni vengono analizzate come errori e avvisi. Quando la pagina genera un <xref:System.ArgumentException>, viene scritto un messaggio di avviso tramite il <xref:System.Web.TraceContext.Warn%2A> metodo. Quando la pagina genera un <xref:System.InvalidOperationException>, viene scritto un messaggio di errore tramite il <xref:System.Web.TraceContext.Write%2A> metodo.  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>