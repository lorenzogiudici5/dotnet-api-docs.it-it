<Type Name="HttpStaticObjectsCollectionBase" FullName="System.Web.HttpStaticObjectsCollectionBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22942c712c8c445463de61eb84ac36a37b7ad297" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HttpStaticObjectsCollectionBase : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpStaticObjectsCollectionBase extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpStaticObjectsCollectionBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpStaticObjectsCollectionBase&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpStaticObjectsCollectionBase abstract : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="750e7-101">Funge da classe base per le classi che forniscono un insieme di oggetti nell'ambito dell'applicazione per la proprietà <see cref="P:System.Web.HttpApplicationState.StaticObjects" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="750e7-101">Serves as the base class for classes that provide a collection of application-scoped objects for the <see cref="P:System.Web.HttpApplicationState.StaticObjects" /> property.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="750e7-102">Il <xref:System.Web.HttpStaticObjectsCollectionBase> classe è una classe astratta che contiene gli stessi membri di <xref:System.Web.HttpStaticObjectsCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="750e7-102">The <xref:System.Web.HttpStaticObjectsCollectionBase> class is an abstract class that contains the same members as the <xref:System.Web.HttpStaticObjectsCollection> class.</span></span> <span data-ttu-id="750e7-103">Il <xref:System.Web.HttpStaticObjectsCollectionBase> classe consente di creare classi derivate che sono ad esempio la <xref:System.Web.HttpStaticObjectsCollection> classe, ma che è possibile personalizzare e funzionano di fuori della pipeline ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="750e7-103">The <xref:System.Web.HttpStaticObjectsCollectionBase> class lets you create derived classes that are like the <xref:System.Web.HttpStaticObjectsCollection> class, but that you can customize and that work outside the ASP.NET pipeline.</span></span> <span data-ttu-id="750e7-104">Quando si eseguono unit test, in genere usare una classe derivata per implementare i membri con un comportamento personalizzato che soddisfa lo scenario in cui che si sta testando.</span><span class="sxs-lookup"><span data-stu-id="750e7-104">When you perform unit testing, you typically use a derived class to implement members with customized behavior that fulfills the scenario you are testing.</span></span>  
  
 <span data-ttu-id="750e7-105">La classe <xref:System.Web.HttpStaticObjectsCollectionWrapper> deriva dalla classe <xref:System.Web.HttpStaticObjectsCollectionBase>.</span><span class="sxs-lookup"><span data-stu-id="750e7-105">The <xref:System.Web.HttpStaticObjectsCollectionWrapper> class derives from the <xref:System.Web.HttpStaticObjectsCollectionBase> class.</span></span> <span data-ttu-id="750e7-106">Il <xref:System.Web.HttpStaticObjectsCollectionWrapper> classe funge da wrapper per la <xref:System.Web.HttpStaticObjectsCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="750e7-106">The <xref:System.Web.HttpStaticObjectsCollectionWrapper> class serves as a wrapper for the <xref:System.Web.HttpStaticObjectsCollection> class.</span></span> <span data-ttu-id="750e7-107">In fase di esecuzione, si utilizza in genere un'istanza del <xref:System.Web.HttpStaticObjectsCollectionWrapper> chiamare i membri della classe di <xref:System.Web.HttpStaticObjectsCollection> oggetto.</span><span class="sxs-lookup"><span data-stu-id="750e7-107">At run time, you typically use an instance of the <xref:System.Web.HttpStaticObjectsCollectionWrapper> class to call members of the <xref:System.Web.HttpStaticObjectsCollection> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpStaticObjectsCollectionBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpStaticObjectsCollectionBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpStaticObjectsCollectionBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="750e7-108">Inizializza la classe per l'uso da parte di un'istanza di una classe ereditata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-108">Initializes the class for use by an inherited class instance.</span>
          </span>
          <span data-ttu-id="750e7-109">Questo costruttore può essere chiamato solo da una classe ereditata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-109">This constructor can only be called by an inherited class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpStaticObjectsCollectionBase.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="750e7-110">Matrice unidimensionale che rappresenta la destinazione degli elementi copiati dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-110">The one-dimensional array that is the destination of the elements that are copied from the collection.</span>
          </span>
          <span data-ttu-id="750e7-111">La matrice deve avere un'indicizzazione in base zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-111">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="750e7-112">Indice in base zero in <c>array</c> da cui iniziare la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-112">The zero-based index in <c>array</c> at which to begin copying.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="750e7-113">In caso di override in una classe derivata, copia gli elementi della raccolta in una matrice, a partire dall'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-113">When overridden in a derived class, copies the elements of the collection to an array, starting at the specified index in the array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="750e7-114">Sempre</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-114">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpStaticObjectsCollectionBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="750e7-115">In caso di override in una classe derivata, ottiene il numero di oggetti contenuti nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-115">When overridden in a derived class, gets the number of objects in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="750e7-116">Numero di oggetti della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-116">The number of objects in the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="750e7-117">Sempre</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-117">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpStaticObjectsCollectionBase.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="750e7-118">In caso di override in una classe derivata, restituisce un enumeratore che può essere usato per scorrere la raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-118">When overridden in a derived class, returns an enumerator that can be used to iterate through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="750e7-119">Oggetto che può essere usato per scorrere la raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-119">An object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="750e7-120">Sempre</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-120">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpStaticObjectsCollectionBase.GetObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="750e7-121">Nome dell'oggetto da restituire, senza distinzione tra maiuscole e minuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-121">The case-insensitive name of the object to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="750e7-122">In caso di override in una classe derivata, restituisce l'oggetto con il nome specificato dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-122">When overridden in a derived class, returns the object that has the specified name from the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="750e7-123">Oggetto specificato da <paramref name="name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-123">The object that is specified by <paramref name="name" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="750e7-124">Sempre</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-124">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpStaticObjectsCollectionBase.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="750e7-125">In caso di override in una classe derivata, ottiene un valore che indica se la raccolta è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-125">When overridden in a derived class, gets a value that indicates whether the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="750e7-126">
            <see langword="true" /> se la raccolta è di sola lettura; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-126">
              <see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="750e7-127">Sempre</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-127">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpStaticObjectsCollectionBase.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="750e7-128">In caso di override in una classe derivata, ottiene un valore che indica se la raccolta è thread-safe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-128">When overridden in a derived class, gets a value that indicates whether the collection is thread-safe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="750e7-129">
            <see langword="true" /> se l'insieme è thread-safe. In caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-129">
              <see langword="true" /> if the collection is thread-safe; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="750e7-130">Sempre</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-130">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpStaticObjectsCollectionBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="750e7-131">Nome dell'oggetto da ottenere, senza distinzione tra maiuscole e minuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-131">The case-insensitive name of the object to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="750e7-132">In caso di override in una classe derivata, ottiene l'oggetto con il nome specificato dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-132">When overridden in a derived class, gets the object that has the specified name from the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="750e7-133">Oggetto specificato da <paramref name="name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-133">The object that is specified by <paramref name="name" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="750e7-134">Sempre</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-134">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NeverAccessed">
      <MemberSignature Language="C#" Value="public virtual bool NeverAccessed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeverAccessed" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpStaticObjectsCollectionBase.NeverAccessed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NeverAccessed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool NeverAccessed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="750e7-135">In caso di override in una classe derivata, ottiene un valore che indica se è stato eseguito l'accesso alla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-135">When overridden in a derived class, gets a value that indicates whether the collection has been accessed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="750e7-136">
            <see langword="true" /> se non è mai stato eseguito l'accesso all'insieme; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-136">
              <see langword="true" /> if the collection has never been accessed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="750e7-137">Sempre</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-137">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public virtual void Serialize (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpStaticObjectsCollectionBase.Serialize(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Serialize (writer As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Serialize(System::IO::BinaryWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="750e7-138">Oggetto da usare per scrivere la raccolta serializzata in un flusso o in una stringa codificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-138">The object to use to write the serialized collection to a stream or encoded string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="750e7-139">Quando è sottoposto a override in una classe derivata, scrive il contenuto dell'insieme in un oggetto <see cref="T:System.IO.BinaryWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-139">When overridden in a derived class, writes the contents of the collection to a <see cref="T:System.IO.BinaryWriter" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="750e7-140">Sempre</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-140">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpStaticObjectsCollectionBase.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="750e7-141">In caso di override in una classe derivata, ottiene un oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-141">When overridden in a derived class, gets an object that can be used to synchronize access to the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="750e7-142">Oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-142">An object that can be used to synchronize access to the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="750e7-143">Sempre</span>
          <span class="sxs-lookup">
            <span data-stu-id="750e7-143">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>