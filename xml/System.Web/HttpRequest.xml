<Type Name="HttpRequest" FullName="System.Web.HttpRequest">
  <TypeSignature Language="C#" Value="public sealed class HttpRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequest sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b0963-101">Consente ad ASP.NET di leggere i valori HTTP inviati da un client durante una richiesta Web.</span><span class="sxs-lookup"><span data-stu-id="b0963-101">Enables ASP.NET to read the HTTP values sent by a client during a Web request.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-102">I metodi e proprietà del <xref:System.Web.HttpRequest> classe sono esposte tramite il `Request` le proprietà del <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, e <xref:System.Web.UI.UserControl> classi.</span><span class="sxs-lookup"><span data-stu-id="b0963-102">The methods and properties of the <xref:System.Web.HttpRequest> class are exposed through the `Request` properties of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>  
  
 <span data-ttu-id="b0963-103">Per accedere ai dati dal <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, o <xref:System.Web.HttpRequest.ServerVariables%2A> raccolte, è possibile scrivere `Request["key"]`, come illustrato nell'esempio per la <xref:System.Web.HttpRequest.QueryString%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="b0963-103">To access data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections, you can write `Request["key"]`, as shown in the example for the <xref:System.Web.HttpRequest.QueryString%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0963-104">Supporto Unicode per <xref:System.Web.HttpRequest> membri della classe richiede IIS versione 6.0 o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="b0963-104">Unicode support for <xref:System.Web.HttpRequest> class members requires IIS version 6.0 or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0963-105">Ai seguenti esempi di accedere il <xref:System.Web.HttpRequest> istanza per la richiesta corrente utilizzando il <xref:System.Web.UI.Page.Request%2A> proprietà del <xref:System.Web.UI.Page> classe.</span><span class="sxs-lookup"><span data-stu-id="b0963-105">The following examples access the <xref:System.Web.HttpRequest> instance for the current request by using the <xref:System.Web.UI.Page.Request%2A> property of the <xref:System.Web.UI.Page> class.</span></span>  
  
 <span data-ttu-id="b0963-106">È possibile utilizzare una sintassi semplificata per l'accesso ai dati di <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, o <xref:System.Web.HttpRequest.ServerVariables%2A> raccolte.</span><span class="sxs-lookup"><span data-stu-id="b0963-106">You can use simplified syntax for accessing data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections.</span></span> <span data-ttu-id="b0963-107">È possibile scrivere `Request["key"]`.</span><span class="sxs-lookup"><span data-stu-id="b0963-107">You can write `Request["key"]`.</span></span>  
  
 <span data-ttu-id="b0963-108">Nel primo esempio viene illustrato come recuperare un valore di stringa di query durante il caricamento di una pagina.</span><span class="sxs-lookup"><span data-stu-id="b0963-108">The first example shows how to retrieve a query string value when loading a page.</span></span>  
  
```csharp  
public partial class AddToCart : Page  
{  
    protected void Page_Load(object sender, EventArgs e)  
    {  
        string rawId = Request["ProductID"];  
        int productId;  
        if (!String.IsNullOrEmpty(rawId) && int.TryParse(rawId, out productId))  
        {  
            using (ShoppingCartActions usersShoppingCart = new ShoppingCartActions())  
            {  
                usersShoppingCart.AddToCart(productId);  
            }  
        }  
        else  
        {  
            throw new Exception("Tried to call AddToCart.aspx without setting a ProductId.");  
        }  
        Response.Redirect("ShoppingCart.aspx");  
    }  
}  
```  
  
```vb  
Public Class AddToCart  
    Inherits Page  
  
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  
        Dim rawId = Request("ProductID")  
        Dim productId As Integer  
        If Not String.IsNullOrEmpty(rawId) And Integer.TryParse(rawId, productId) Then  
            Using usersShoppingCart As New ShoppingCartActions()  
                usersShoppingCart.AddToCart(productId)  
            End Using  
  
        Else  
            Throw New Exception("Tried to call AddToCart.aspx without setting a ProductId.")  
        End If  
        Response.Redirect("ShoppingCart.aspx")  
    End Sub  
End Class  
```  
  
 <span data-ttu-id="b0963-109">Nell'esempio seguente viene illustrato come controllare se la richiesta è autenticata e recuperare l'URL non elaborato.</span><span class="sxs-lookup"><span data-stu-id="b0963-109">The next example shows how to check if the request is authenticated and retrieve the raw URL.</span></span>  
  
```csharp  
public partial class RestrictedPage : Page  
{  
    protected void Page_Load(object sender, EventArgs e)  
    {  
        if (!Request.IsAuthenticated)  
        {  
            var rawUrl = Request.RawUrl;  
            Response.Redirect("/Account/Login?ru=" + Server.HtmlEncode(rawUrl));  
        }  
    }  
}  
```  
  
```vb  
Public Class RestrictedPage  
    Inherits Page  
  
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  
        If Not Request.IsAuthenticated Then  
            Dim rawUrl = Request.RawUrl  
            Response.Redirect("/Account/Login?ru=" + Server.HtmlEncode(rawUrl))  
        End If  
    End Sub  
End Class  
```  
  
 <span data-ttu-id="b0963-110">Un progetto di sito Web di Visual Studio con codice sorgente è disponibile a complemento di questo argomento: [scaricare](http://go.microsoft.com/fwlink/?LinkID=191455).</span><span class="sxs-lookup"><span data-stu-id="b0963-110">A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkID=191455).</span></span>  
  
 <span data-ttu-id="b0963-111">Questo esempio viene utilizzato il <xref:System.IO.StreamWriter> classe per la scrittura dei valori di diverse <xref:System.Web.HttpRequest> proprietà in un file di classe.</span><span class="sxs-lookup"><span data-stu-id="b0963-111">This example uses the <xref:System.IO.StreamWriter> class to write the values of several <xref:System.Web.HttpRequest> class properties to a file.</span></span> <span data-ttu-id="b0963-112">Per le proprietà di tipo stringa, i valori sono codificati come vengono scritti nel file HTML.</span><span class="sxs-lookup"><span data-stu-id="b0963-112">For properties that are of type string, the values are HTML encoded as they are written to the file.</span></span> <span data-ttu-id="b0963-113">Le proprietà che rappresentano una raccolta sono un ciclo e ogni coppia chiave/valore che contengono viene scritta nel file.</span><span class="sxs-lookup"><span data-stu-id="b0963-113">Properties that represent a collection are looped through, and each key/value pair that they contain is written to the file.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b0963-114">L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza.</span><span class="sxs-lookup"><span data-stu-id="b0963-114">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="b0963-115">Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML.</span><span class="sxs-lookup"><span data-stu-id="b0963-115">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="b0963-116">Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="b0963-116">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_Sample1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Sample1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequest (string filename, string url, string queryString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, string url, string queryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, url As String, queryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequest(System::String ^ filename, System::String ^ url, System::String ^ queryString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="b0963-117">Nome del file associato alla richiesta.</span><span class="sxs-lookup"><span data-stu-id="b0963-117">The name of the file associated with the request.</span></span></param>
        <param name="url"><span data-ttu-id="b0963-118">Informazioni sull'URL della richiesta corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-118">The information regarding the URL of the current request.</span></span></param>
        <param name="queryString"><span data-ttu-id="b0963-119">Stringa di query completa inviata con la richiesta (caratteri che seguono <c>'?'</c>).</span><span class="sxs-lookup"><span data-stu-id="b0963-119">The entire query string sent with the request (everything after the <c>'?'</c>).</span></span></param>
        <summary><span data-ttu-id="b0963-120">Inizializza un oggetto <see cref="T:System.Web.HttpRequest" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-120">Initializes an <see cref="T:System.Web.HttpRequest" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-121">Non è necessario creare la propria istanza di <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="b0963-121">You do not need to create your own instance of the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="b0963-122">I metodi e proprietà del <xref:System.Web.HttpRequest> classe sono esposte tramite il `Request` proprietà del <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, e <xref:System.Web.UI.UserControl> classi.</span><span class="sxs-lookup"><span data-stu-id="b0963-122">The methods and properties of the <xref:System.Web.HttpRequest> class are exposed through the `Request` property of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0963-123">Termina forzatamente la connessione TCP sottostante, causando l'esito negativo di eventuali operazioni di I/O.</span><span class="sxs-lookup"><span data-stu-id="b0963-123">Forcibly terminates the underlying TCP connection, causing any outstanding I/O to fail.</span></span> <span data-ttu-id="b0963-124">È possibile usare questo metodo in risposta all'attacco di un client HTTP dannoso.</span><span class="sxs-lookup"><span data-stu-id="b0963-124">You might use this method in response to an attack by a malicious HTTP client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-125">Questo metodo è thread-safe.</span><span class="sxs-lookup"><span data-stu-id="b0963-125">This method is thread-safe.</span></span> <span data-ttu-id="b0963-126">Qualsiasi thread può chiamarlo in qualsiasi momento.</span><span class="sxs-lookup"><span data-stu-id="b0963-126">Any thread may call it at any time.</span></span>  
  
 <span data-ttu-id="b0963-127">Questo metodo può essere utilizzato solo in modalità integrata.</span><span class="sxs-lookup"><span data-stu-id="b0963-127">This method can only be used in integrated mode.</span></span> <span data-ttu-id="b0963-128">Se viene richiamato in modalità classica, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="b0963-128">If you invoke it in classic mode, an exception is thrown.</span></span> <span data-ttu-id="b0963-129">Per determinare la modalità pipeline, utilizzare <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</span><span class="sxs-lookup"><span data-stu-id="b0963-129">To determine the pipeline mode, use <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-130">Ottiene una matrice di stringhe di tipi di accettazione MIME supportati dal client.</span><span class="sxs-lookup"><span data-stu-id="b0963-130">Gets a string array of client-supported MIME accept types.</span></span></summary>
        <value><span data-ttu-id="b0963-131">Matrice di stringhe di tipi di accettazione MIME supportati dal client.</span><span class="sxs-lookup"><span data-stu-id="b0963-131">A string array of client-supported MIME accept types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0963-132">Esempio di codice seguente consente di acquisire i valori multipli restituiti dal <xref:System.Web.HttpRequest.AcceptTypes%2A> proprietà in una variabile oggetto e scrive il numero e il nome di ogni valueto una riga separata dell'output HTTP.</span><span class="sxs-lookup"><span data-stu-id="b0963-132">The following code example captures the multiple values returned by the <xref:System.Web.HttpRequest.AcceptTypes%2A> property into an object variable and writes the number and name of each valueto a separate line of HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.AcceptTypes Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.AcceptTypes Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.AcceptTypes Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.AcceptTypes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousID">
      <MemberSignature Language="C#" Value="public string AnonymousID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnonymousID" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AnonymousID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnonymousID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AnonymousID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-133">Ottiene l'identificatore anonimo per l'utente, se presente.</span><span class="sxs-lookup"><span data-stu-id="b0963-133">Gets the anonymous identifier for the user, if present.</span></span></summary>
        <value><span data-ttu-id="b0963-134">Stringa che rappresenta l'identificatore utente anonimo corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-134">A string representing the current anonymous user identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-135">Il <xref:System.Web.HttpRequest.AnonymousID%2A> proprietà assegna un identificatore univoco di lunga durata a un utente non autenticato, che può essere utilizzato per tenere traccia dell'utente o assegnare le proprietà del profilo a tale utente senza archiviare dati in un `Session` oggetto.</span><span class="sxs-lookup"><span data-stu-id="b0963-135">The <xref:System.Web.HttpRequest.AnonymousID%2A> property assigns a long-lived unique identifier to a non-authenticated user, which can be used to track the user or assign profile properties to that user without storing data in a `Session` object.</span></span> <span data-ttu-id="b0963-136">Per impostazione predefinita, il <xref:System.Web.HttpRequest.AnonymousID%2A> proprietà viene utilizzato un cookie, ma può essere impostato per usare l'URI quando il <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> attributo nella sezione di configurazione dell'identificazione anonima è impostato sul valore di <xref:System.Web.HttpCookieMode.UseUri>, <xref:System.Web.HttpCookieMode.UseDeviceProfile>, o <xref:System.Web.HttpCookieMode.AutoDetect> valore.</span><span class="sxs-lookup"><span data-stu-id="b0963-136">By default, the <xref:System.Web.HttpRequest.AnonymousID%2A> property is tracked using a cookie, but it can be set to use the URI when the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> attribute in the anonymous identification configuration section is set to either the <xref:System.Web.HttpCookieMode.UseUri>, <xref:System.Web.HttpCookieMode.UseDeviceProfile>, or <xref:System.Web.HttpCookieMode.AutoDetect> value.</span></span> <span data-ttu-id="b0963-137">È necessario cancellare i cookie in modo esplicito se non è più disponibile, ad esempio quando un utente anonimo viene autenticato.</span><span class="sxs-lookup"><span data-stu-id="b0963-137">You must explicitly clear the cookie if you no longer want it available, for example when an anonymous user is authenticated.</span></span>  
  
 <span data-ttu-id="b0963-138">Identificazione anonima viene utilizzato quando è necessario per identificare le entità che non sono autenticate e quando è necessaria l'autorizzazione.</span><span class="sxs-lookup"><span data-stu-id="b0963-138">Anonymous identification is used when there is a need to identify entities that are not authenticated and when authorization is required.</span></span> <span data-ttu-id="b0963-139">Per ulteriori informazioni, vedere [anonymousIdentification Element (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/library/2bd927ef-9057-4703-9c55-4cfb6d7d0929)</span><span class="sxs-lookup"><span data-stu-id="b0963-139">For more information, see [anonymousIdentification Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/2bd927ef-9057-4703-9c55-4cfb6d7d0929)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0963-140">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.HttpRequest.AnonymousID%2A> proprietà gestendo il <xref:System.Web.Security.AnonymousIdentificationModule.Creating> evento nel file Global. asax.</span><span class="sxs-lookup"><span data-stu-id="b0963-140">The following example shows how to use the <xref:System.Web.HttpRequest.AnonymousID%2A> property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file.</span></span> <span data-ttu-id="b0963-141">In questo esempio è costituito da due parti:</span><span class="sxs-lookup"><span data-stu-id="b0963-141">This example has two parts:</span></span>  
  
-   <span data-ttu-id="b0963-142">Un metodo nel file Global. asax che gestisce il <xref:System.Web.Security.AnonymousIdentificationModule.Creating> evento.</span><span class="sxs-lookup"><span data-stu-id="b0963-142">A method in the Global.asax file that handles the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event.</span></span>  
  
-   <span data-ttu-id="b0963-143">Una pagina Web Form.</span><span class="sxs-lookup"><span data-stu-id="b0963-143">A Web Forms page.</span></span>  
  
 <span data-ttu-id="b0963-144">La prima parte dell'esempio di codice viene illustrato come impostare il <xref:System.Web.HttpRequest.AnonymousID%2A> proprietà gestendo il <xref:System.Web.Security.AnonymousIdentificationModule.Creating> evento nel file Global. asax.</span><span class="sxs-lookup"><span data-stu-id="b0963-144">The first part of the code example shows how to set the <xref:System.Web.HttpRequest.AnonymousID%2A> property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file.</span></span> <span data-ttu-id="b0963-145">Il metodo denominato `AnonymousIdentification_Creating` imposta il <xref:System.Web.HttpRequest.AnonymousID%2A> proprietà quando viene creato un ID anonimo.</span><span class="sxs-lookup"><span data-stu-id="b0963-145">The method that is named `AnonymousIdentification_Creating` sets the <xref:System.Web.HttpRequest.AnonymousID%2A> property when an anonymous ID is created.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_AnonymousID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/CS/global_asax.cs#2)]
 [!code-vb[System.Web.HttpRequest_AnonymousID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/vb/global_asax.vb#2)]  
  
 <span data-ttu-id="b0963-146">La seconda parte dell'esempio di codice viene illustrato come visualizzare il nuovo <xref:System.Web.HttpRequest.AnonymousID%2A> creati tramite il `AnonymousIdentification_Creating` gestore dell'evento nell'esempio precedente.</span><span class="sxs-lookup"><span data-stu-id="b0963-146">The second part of the code example shows how to display the new <xref:System.Web.HttpRequest.AnonymousID%2A> that is created by the `AnonymousIdentification_Creating` event handler in the preceding example.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_AnonymousID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/CS/anonid_cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_AnonymousID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/vb/anonid_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.IsAuthenticated" />
        <altmember cref="E:System.Web.Security.AnonymousIdentificationModule.Creating" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationPath">
      <MemberSignature Language="C#" Value="public string ApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-147">Ottiene il percorso radice dell'applicazione virtuale dell'applicazione ASP.NET sul server.</span><span class="sxs-lookup"><span data-stu-id="b0963-147">Gets the ASP.NET application's virtual application root path on the server.</span></span></summary>
        <value><span data-ttu-id="b0963-148">Percorso virtuale dell'applicazione corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-148">The virtual path of the current application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-149">Utilizzare questa proprietà per costruire un URL relativo alla radice dell'applicazione da una pagina o di un controllo utente Web che non è presente nella directory radice.</span><span class="sxs-lookup"><span data-stu-id="b0963-149">Use this property to construct a URL relative to the application root from a page or Web user control that is not in the root directory.</span></span> <span data-ttu-id="b0963-150">In questo modo le pagine e controlli condivisi che esistono a livelli diversi di una struttura di directory per utilizzare lo stesso codice per collegare le risorse in posizioni fisse nell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="b0963-150">This allows pages and shared controls that exist at different levels of a directory structure to use the same code to link to resources at fixed locations in the application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0963-151">L'esempio seguente usa il <xref:System.IO.StreamWriter.Write%2A> metodo per la codifica HTML e quindi scrivere il valore della <xref:System.Web.HttpRequest.ApplicationPath%2A> proprietà in un file di testo.</span><span class="sxs-lookup"><span data-stu-id="b0963-151">The following example uses the <xref:System.IO.StreamWriter.Write%2A> method to HTML-encode and then write the value of the <xref:System.Web.HttpRequest.ApplicationPath%2A> property to a text file.</span></span> <span data-ttu-id="b0963-152">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="b0963-152">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="b0963-153">Si presuppone l'esistenza di un <xref:System.IO.StreamWriter> oggetto denominato `sw`.</span><span class="sxs-lookup"><span data-stu-id="b0963-153">It assumes the existence of a <xref:System.IO.StreamWriter> object named `sw`.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 <span data-ttu-id="b0963-154">L'esempio seguente usa il <xref:System.Web.HttpRequest.ApplicationPath%2A> proprietà a livello di codice, creare un percorso a una risorsa in una posizione fissa nell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="b0963-154">The following example uses the <xref:System.Web.HttpRequest.ApplicationPath%2A> property to programmatically construct a path to a resource that is in a fixed location in the application.</span></span> <span data-ttu-id="b0963-155">La pagina che fa riferimento alla risorsa non deve trovarsi nella stessa directory della risorsa.</span><span class="sxs-lookup"><span data-stu-id="b0963-155">The page that references the resource does not have to be located in the same directory as the resource.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.ApplicationPath#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/CS/ApplicationPath.aspx#2)]
 [!code-aspx-vb[System.Web.HttpRequest.ApplicationPath#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/VB/ApplicationPath.aspx#2)]  
  
 <span data-ttu-id="b0963-156">Se si esegue questo esempio in un'applicazione Web denominata WebSite1, `/WebSite1` sarà visualizzato come il valore di <xref:System.Web.HttpRequest.ApplicationPath%2A> proprietà e `/WebSite1/images/Image1.gif` verrà visualizzato come il percorso completo dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="b0963-156">If you run this example in a Web application that is named WebSite1,  `/WebSite1` will be displayed as the value of the <xref:System.Web.HttpRequest.ApplicationPath%2A> property and `/WebSite1/images/Image1.gif` will be displayed as the complete path of the image.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppRelativeCurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public string AppRelativeCurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppRelativeCurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppRelativeCurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-157">Ottiene il percorso virtuale della radice dell'applicazione e lo converte in relativo tramite la notazione tilde (~) per la radice dell'applicazione, come in "~/page.aspx".</span><span class="sxs-lookup"><span data-stu-id="b0963-157">Gets the virtual path of the application root and makes it relative by using the tilde (~) notation for the application root (as in "~/page.aspx").</span></span></summary>
        <value><span data-ttu-id="b0963-158">Percorso virtuale della radice dell'applicazione per la richiesta corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-158">The virtual path of the application root for the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-159">Utilizzare questa proprietà per fornire informazioni di URL che rimarranno invariata, anche se l'applicazione modifica posizione.</span><span class="sxs-lookup"><span data-stu-id="b0963-159">Use this property to provide URL information that will stay the same even if the application changes location.</span></span> <span data-ttu-id="b0963-160">In questo modo lo stesso codice di mapping di URL da utilizzare in un ambiente di test e nell'ambiente di distribuzione finale o utilizzabile da copie di applicazioni Web in domini diversi.</span><span class="sxs-lookup"><span data-stu-id="b0963-160">This allows the same URL-mapping code to be used in a test environment and in the final deployment environment, or to be used by copies of Web applications in different domains.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0963-161">L'esempio seguente usa il <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> proprietà per impostare l'URL di un <xref:System.Web.UI.WebControls.Image> controllo a un'immagine nella stessa directory della pagina.</span><span class="sxs-lookup"><span data-stu-id="b0963-161">The following example uses the <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property to set the URL of an <xref:System.Web.UI.WebControls.Image> control to an image in the same directory as the page.</span></span> <span data-ttu-id="b0963-162">Esecuzione di questa pagina a livelli diversi di una struttura di directory per visualizzare il valore risultante <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> i valori delle proprietà.</span><span class="sxs-lookup"><span data-stu-id="b0963-162">Run this page at different levels of a directory structure to see the resulting <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property values.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.AppRelativeCurrentExecutionPath/CS/AppRelativeCurrentExecutionPathCS.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.AppRelativeCurrentExecutionPath/VB/AppRelativeCurrentExecutionPathVB.aspx#1)]  
  
 <span data-ttu-id="b0963-163">L'esempio seguente usa il <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> proprietà per impostare il percorso a una risorsa, in base al percorso corrente della pagina.</span><span class="sxs-lookup"><span data-stu-id="b0963-163">The following example uses the <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property to programmatically set the path to a resource, based on the current path of the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.ApplicationPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/CS/apprelativecurrentexecutionfilepath.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.ApplicationPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/VB/apprelativecurrentexecutionfilepath.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BinaryRead">
      <MemberSignature Language="C#" Value="public byte[] BinaryRead (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] BinaryRead(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.BinaryRead(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function BinaryRead (count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ BinaryRead(int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="b0963-164">Numero di byte da leggere.</span><span class="sxs-lookup"><span data-stu-id="b0963-164">The number of bytes to read.</span></span></param>
        <summary><span data-ttu-id="b0963-165">Esegue una lettura binaria di un determinato numero di byte provenienti dal flusso di input corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-165">Performs a binary read of a specified number of bytes from the current input stream.</span></span></summary>
        <returns><span data-ttu-id="b0963-166">Matrice di byte.</span><span class="sxs-lookup"><span data-stu-id="b0963-166">A byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-167">Il <xref:System.Web.HttpRequest.BinaryRead%2A> metodo è fornito per compatibilità con ASP.</span><span class="sxs-lookup"><span data-stu-id="b0963-167">The <xref:System.Web.HttpRequest.BinaryRead%2A> method is provided for compatibility with ASP.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b0963-168"><paramref name="count" /> è 0.</span><span class="sxs-lookup"><span data-stu-id="b0963-168"><paramref name="count" /> is 0.</span></span>  
  
 <span data-ttu-id="b0963-169">\- oppure -</span><span class="sxs-lookup"><span data-stu-id="b0963-169">\- or -</span></span>  
  
 <span data-ttu-id="b0963-170"><paramref name="count" /> è maggiore del numero di byte disponibili.</span><span class="sxs-lookup"><span data-stu-id="b0963-170"><paramref name="count" /> is greater than the number of bytes available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="public System.Web.HttpBrowserCapabilities Browser { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpBrowserCapabilities Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Browser" />
      <MemberSignature Language="VB.NET" Value="Public Property Browser As HttpBrowserCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpBrowserCapabilities ^ Browser { System::Web::HttpBrowserCapabilities ^ get(); void set(System::Web::HttpBrowserCapabilities ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpBrowserCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-171">Ottiene o imposta informazioni sulle funzionalità del browser del client richiedente.</span><span class="sxs-lookup"><span data-stu-id="b0963-171">Gets or sets information about the requesting client's browser capabilities.</span></span></summary>
        <value><span data-ttu-id="b0963-172">Oggetto <see cref="T:System.Web.HttpBrowserCapabilities" /> che elenca le funzionalità del browser client.</span><span class="sxs-lookup"><span data-stu-id="b0963-172">An <see cref="T:System.Web.HttpBrowserCapabilities" /> object listing the capabilities of the client's browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0963-173">Esempio di codice seguente invia un elenco di funzionalità del browser client in una pagina HTML.</span><span class="sxs-lookup"><span data-stu-id="b0963-173">The following code example sends a list of the browser's capabilities back to the client in an HTML page.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Browser Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Browser Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Browser Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Browser Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.UserAgent" />
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.Web.HttpClientCertificate ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpClientCertificate ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificate As HttpClientCertificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpClientCertificate ^ ClientCertificate { System::Web::HttpClientCertificate ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpClientCertificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-174">Ottiene il certificato di sicurezza del client della richiesta corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-174">Gets the current request's client security certificate.</span></span></summary>
        <value><span data-ttu-id="b0963-175">Oggetto <see cref="T:System.Web.HttpClientCertificate" /> contenente le informazioni sulle impostazioni del certificato di sicurezza del client.</span><span class="sxs-lookup"><span data-stu-id="b0963-175">An <see cref="T:System.Web.HttpClientCertificate" /> object containing information about the client's security certificate settings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0963-176">Esempio di codice seguente invia le impostazioni del certificato client in una pagina HTML.</span><span class="sxs-lookup"><span data-stu-id="b0963-176">The following code example sends the client's certificate settings back to the client in an HTML page.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ClientCertificate Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ClientCertificate Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ClientCertificate Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ClientCertificate Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-177">Ottiene o imposta il set di caratteri del corpo dell'entità.</span><span class="sxs-lookup"><span data-stu-id="b0963-177">Gets or sets the character set of the entity-body.</span></span></summary>
        <value><span data-ttu-id="b0963-178">Oggetto <see cref="T:System.Text.Encoding" /> che rappresenta il set di caratteri del client.</span><span class="sxs-lookup"><span data-stu-id="b0963-178">An <see cref="T:System.Text.Encoding" /> object representing the client's character set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-179">È possibile specificare la codifica del contenuto di predefinito nel [globalization Element (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) di un file di configurazione.</span><span class="sxs-lookup"><span data-stu-id="b0963-179">Default content encoding can be specified in the [globalization Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) of a configuration file.</span></span> <span data-ttu-id="b0963-180">Se la codifica del contenuto viene specificata anche dal client, vengono sottoposte a override le impostazioni di configurazione predefinite.</span><span class="sxs-lookup"><span data-stu-id="b0963-180">If content encoding is also specified by the client, the default configuration settings are overridden.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0963-181">Esempio di codice seguente assegna un valore che rappresenta la descrizione della codifica HTTP corrente a una variabile di stringa.</span><span class="sxs-lookup"><span data-stu-id="b0963-181">The following code example assigns a value representing the description of the current HTTP encoding to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentEncoding Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentEncoding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public int ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContentLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-182">Specifica la lunghezza, in byte, del contenuto inviato dal client.</span><span class="sxs-lookup"><span data-stu-id="b0963-182">Specifies the length, in bytes, of content sent by the client.</span></span></summary>
        <value><span data-ttu-id="b0963-183">Lunghezza, in byte, del contenuto inviato dal client.</span><span class="sxs-lookup"><span data-stu-id="b0963-183">The length, in bytes, of content sent by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0963-184">Esempio di codice seguente assegna il valore che rappresenta la lunghezza del contenuto della richiesta in ingresso a una variabile integer.</span><span class="sxs-lookup"><span data-stu-id="b0963-184">The following code example assigns the value representing the content length of the incoming request to an integer variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentLength Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentLength Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-185">Ottiene o imposta il tipo di contenuto MIME della richiesta in ingresso.</span><span class="sxs-lookup"><span data-stu-id="b0963-185">Gets or sets the MIME content type of the incoming request.</span></span></summary>
        <value><span data-ttu-id="b0963-186">Stringa che rappresenta il tipo di contenuto MIME della richiesta in ingresso, ad esempio "text/html".</span><span class="sxs-lookup"><span data-stu-id="b0963-186">A string representing the MIME content type of the incoming request, for example, "text/html".</span></span> <span data-ttu-id="b0963-187">Altri esempi comuni di tipi MIME sono "audio.wav", "image/gif" e "application/pdf".</span><span class="sxs-lookup"><span data-stu-id="b0963-187">Additional common MIME types include "audio.wav", "image/gif", and "application/pdf".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0963-188">Esempio di codice seguente assegna il valore che rappresenta il tipo di contenuto della richiesta in ingresso a una variabile di stringa.</span><span class="sxs-lookup"><span data-stu-id="b0963-188">The following code example assigns the value representing the content type of the incoming request to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentType Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentType Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b0963-189">L'esempio seguente mostra l'output che possono essere prodotti da questo codice.</span><span class="sxs-lookup"><span data-stu-id="b0963-189">The following example shows output that might be produced by this code.</span></span>  
  
 `GET`  
  
 `127.0.0.1`  
  
 `127.0.0.1`  
  
 `GET`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As HttpCookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieCollection ^ Cookies { System::Web::HttpCookieCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-190">Ottiene la raccolta dei cookie inviati dal client.</span><span class="sxs-lookup"><span data-stu-id="b0963-190">Gets a collection of cookies sent by the client.</span></span></summary>
        <value><span data-ttu-id="b0963-191">Oggetto <see cref="T:System.Web.HttpCookieCollection" /> che rappresenta le variabili cookie del client.</span><span class="sxs-lookup"><span data-stu-id="b0963-191">An <see cref="T:System.Web.HttpCookieCollection" /> object representing the client's cookie variables.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-192">ASP.NET include due raccolte di cookie intrinseca.</span><span class="sxs-lookup"><span data-stu-id="b0963-192">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="b0963-193">La raccolta a cui si accede tramite il <xref:System.Web.HttpRequest.Cookies%2A> insieme di <xref:System.Web.HttpRequest> contiene i cookie trasmessi dal client al server nel `Cookie` intestazione.</span><span class="sxs-lookup"><span data-stu-id="b0963-193">The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of <xref:System.Web.HttpRequest> contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="b0963-194">La raccolta a cui si accede tramite il <xref:System.Web.HttpResponse.Cookies%2A> insieme di <xref:System.Web.HttpResponse> contiene i nuovi cookie creato nel server e trasmesso al client il `Set-Cookie` intestazione.</span><span class="sxs-lookup"><span data-stu-id="b0963-194">The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of <xref:System.Web.HttpResponse> contains new cookies created on the server and transmitted to the client in the `Set-Cookie` header.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0963-195">Dopo aver aggiunto un cookie utilizzando il <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> raccolta, il cookie è immediatamente disponibile nel <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> raccolta, anche se la risposta non è stata inviata al client.</span><span class="sxs-lookup"><span data-stu-id="b0963-195">After you add a cookie by using the <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> collection, the cookie is immediately available in the <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> collection, even if the response has not been sent to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0963-196">Esempio di codice seguente consente di scorrere tutti i cookie inviati dal client e invia il nome, data di scadenza, il parametro di sicurezza e valori di ciascun cookie nell'output HTTP.</span><span class="sxs-lookup"><span data-stu-id="b0963-196">The following code example loops through all cookies sent by the client and sends the name, expiration date, security parameter, and values of each cookie to the HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Cookies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Cookies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Cookies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Cookies Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public string CurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.CurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-197">Ottiene il percorso virtuale della richiesta corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-197">Gets the virtual path of the current request.</span></span></summary>
        <value><span data-ttu-id="b0963-198">Percorso virtuale della richiesta corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-198">The virtual path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-199"><xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> Restituisce il percorso del file al gestore di pagina attualmente in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="b0963-199"><xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> returns the file path to the currently executing page handler.</span></span> <span data-ttu-id="b0963-200">Per scenari di reindirizzamento in <xref:System.Web.HttpServerUtility.Execute%2A> e <xref:System.Web.HttpServerUtility.Transfer%2A> metodi, ciò significa che il <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> proprietà restituisce il percorso alla pagina di reindirizzamento (pagina figlio).</span><span class="sxs-lookup"><span data-stu-id="b0963-200">For redirect scenarios using <xref:System.Web.HttpServerUtility.Execute%2A> and <xref:System.Web.HttpServerUtility.Transfer%2A> methods this means that the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property returns the path to the page redirected to (child page).</span></span> <span data-ttu-id="b0963-201">Tuttavia, quando il client viene reindirizzato a un'altra pagina, il <xref:System.Web.HttpRequest.FilePath%2A> proprietà restituisce il percorso per la pagina originale.</span><span class="sxs-lookup"><span data-stu-id="b0963-201">However, when the client is redirected to another page, the <xref:System.Web.HttpRequest.FilePath%2A> property returns the path to the original page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0963-202">Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.HttpUtility.HtmlEncode%2A> metodo per la codifica HTML il valore della <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> proprietà e <xref:System.IO.TextWriter.WriteLine%2A> metodo per scrivere il valore codificato nel file.</span><span class="sxs-lookup"><span data-stu-id="b0963-202">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="b0963-203">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="b0963-203">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
        <altmember cref="M:System.Web.HttpServerUtility.Execute(System.String)" />
        <altmember cref="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePathExtension">
      <MemberSignature Language="C#" Value="public string CurrentExecutionFilePathExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePathExtension" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.CurrentExecutionFilePathExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentExecutionFilePathExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentExecutionFilePathExtension { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-204">Ottiene l'estensione del nome file specificato nella proprietà <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-204">Gets the extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span></span></summary>
        <value><span data-ttu-id="b0963-205">Estensione del nome file specificato nella proprietà <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-205">The extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public string FilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.FilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilePath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-206">Ottiene il percorso virtuale della richiesta corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-206">Gets the virtual path of the current request.</span></span></summary>
        <value><span data-ttu-id="b0963-207">Percorso virtuale della richiesta corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-207">The virtual path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-208">Il <xref:System.Web.HttpRequest.FilePath%2A> proprietà non include il <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span><span class="sxs-lookup"><span data-stu-id="b0963-208">The <xref:System.Web.HttpRequest.FilePath%2A> property does not include the <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span></span> <span data-ttu-id="b0963-209">Ad esempio, per l'URL http://www.contoso.com/virdir/page.html/tail, il <xref:System.Web.HttpRequest.FilePath%2A> valore è /virdir/page.HTML.</span><span class="sxs-lookup"><span data-stu-id="b0963-209">For example, for the URL http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequest.FilePath%2A> value is /virdir/page.html.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0963-210">Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.HttpUtility.HtmlEncode%2A> metodo per la codifica HTML il valore della <xref:System.Web.HttpRequest.FilePath%2A> proprietà e <xref:System.IO.TextWriter.WriteLine%2A> metodo per scrivere il valore codificato nel file.</span><span class="sxs-lookup"><span data-stu-id="b0963-210">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.FilePath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="b0963-211">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="b0963-211">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
        <altmember cref="P:System.Web.HttpRequest.Path" />
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public System.Web.HttpFileCollection Files { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpFileCollection Files" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Files" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Files As HttpFileCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpFileCollection ^ Files { System::Web::HttpFileCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpFileCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-212">Ottiene la raccolta di file caricati dal client, in formato MIME multipart.</span><span class="sxs-lookup"><span data-stu-id="b0963-212">Gets the collection of files uploaded by the client, in multipart MIME format.</span></span></summary>
        <value><span data-ttu-id="b0963-213">Oggetto <see cref="T:System.Web.HttpFileCollection" /> che rappresenta una raccolta di file caricati dal client.</span><span class="sxs-lookup"><span data-stu-id="b0963-213">An <see cref="T:System.Web.HttpFileCollection" /> object representing a collection of files uploaded by the client.</span></span> <span data-ttu-id="b0963-214">Gli elementi dell'oggetto <see cref="T:System.Web.HttpFileCollection" /> sono di tipo <see cref="T:System.Web.HttpPostedFile" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-214">The items of the <see cref="T:System.Web.HttpFileCollection" /> object are of type <see cref="T:System.Web.HttpPostedFile" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-215">La raccolta di file viene popolata solo quando la richiesta HTTP `Content-Type` valore è "multipart/form-data".</span><span class="sxs-lookup"><span data-stu-id="b0963-215">The file collection is populated only when the HTTP request `Content-Type` value is "multipart/form-data".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0963-216">Esempio di codice seguente vengono visualizzati i nomi di tutti i file di <xref:System.Web.HttpRequest.Files%2A> insieme.</span><span class="sxs-lookup"><span data-stu-id="b0963-216">The following code example displays the names of all files in the <xref:System.Web.HttpRequest.Files%2A> collection.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Files Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Files Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Files Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Files Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.IO.Stream Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Filter { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-217">Ottiene o imposta il filtro da usare per la lettura del flusso di input corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-217">Gets or sets the filter to use when reading the current input stream.</span></span></summary>
        <value><span data-ttu-id="b0963-218">Oggetto <see cref="T:System.IO.Stream" /> da usare come filtro.</span><span class="sxs-lookup"><span data-stu-id="b0963-218">A <see cref="T:System.IO.Stream" /> object to be used as the filter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0963-219">L'esempio di codice seguente crea due nuove classi, `QQQ1` e `QQQ2` che il filtro di <xref:System.Web.HttpRequest.InputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="b0963-219">The following code example creates two new classes, `QQQ1` and `QQQ2` that filter the <xref:System.Web.HttpRequest.InputStream%2A>.</span></span> <span data-ttu-id="b0963-220">Inserire le classi nel file Global. asax nella directory di un'applicazione ASP.NET in modo che tutti gli input per tutte le pagine Web ASP.NET nell'applicazione verranno filtrati.</span><span class="sxs-lookup"><span data-stu-id="b0963-220">Put the classes into the Global.asax file in an ASP.NET application's directory so that all input for all ASP.NET Web pages in the application will be filtered.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.Filter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.Filter/CS/systemwebhttprequestfilter.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.Filter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.Filter/VB/systemwebhttprequestfilter.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b0963-221">Il parametro <see cref="T:System.IO.Stream" /> specificato non è valido.</span><span class="sxs-lookup"><span data-stu-id="b0963-221">The specified <see cref="T:System.IO.Stream" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Form" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Form { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-222">Ottiene una raccolta di variabili form.</span><span class="sxs-lookup"><span data-stu-id="b0963-222">Gets a collection of form variables.</span></span></summary>
        <value><span data-ttu-id="b0963-223">Oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> che rappresenta una raccolta di variabili form.</span><span class="sxs-lookup"><span data-stu-id="b0963-223">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> representing a collection of form variables.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-224">Il <xref:System.Web.HttpRequest.Form%2A> proprietà viene popolata quando la richiesta HTTP `Content-Type` valore è "application/x-www-form-urlencoded" o "multipart/form-data".</span><span class="sxs-lookup"><span data-stu-id="b0963-224">The <xref:System.Web.HttpRequest.Form%2A> property is populated when the HTTP request `Content-Type` value is either "application/x-www-form-urlencoded" or "multipart/form-data".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0963-225">Nell'esempio seguente viene illustrato come leggere i valori nella raccolta di modulo registrato da un browser.</span><span class="sxs-lookup"><span data-stu-id="b0963-225">The following example shows how to read the values in the form collection posted from a browser.</span></span> <span data-ttu-id="b0963-226">Ogni coppia nome/valore nella raccolta rappresenta un controllo nel modulo e il relativo valore.</span><span class="sxs-lookup"><span data-stu-id="b0963-226">Each name/value pair in the collection represents a control in the form and its value.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Form Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Form Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferedInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferedInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferedInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferedInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferedInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferedInputStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0963-227">Ottiene un oggetto <see cref="T:System.IO.Stream" /> che può essere usato per leggere il corpo dell'entità HTTP in ingresso.</span><span class="sxs-lookup"><span data-stu-id="b0963-227">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></summary>
        <returns><span data-ttu-id="b0963-228">Oggetto <see cref="T:System.IO.Stream" /> che può essere usato per leggere il corpo dell'entità HTTP in ingresso.</span><span class="sxs-lookup"><span data-stu-id="b0963-228">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-229">Questo metodo è identico a <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> ad eccezione del fatto che copia i byte di lettura per l'archiviazione interna utilizzata da ASP.NET per popolare il <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Files%2A>, e <xref:System.Web.HttpRequest.InputStream%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="b0963-229">This method is identical to <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> except that it also copies the bytes that are read to the internal storage that is used by ASP.NET to populate the <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Files%2A>, and <xref:System.Web.HttpRequest.InputStream%2A> properties.</span></span> <span data-ttu-id="b0963-230">Dato che queste informazioni vengono mantenute, il codice downstream come quello delle pagine Web Form ASP.NET (file aspx) funzionerà correttamente.</span><span class="sxs-lookup"><span data-stu-id="b0963-230">Because this information is preserved, downstream code such as ASP.NET Web Forms pages (.aspx files) will run successfully.</span></span> <span data-ttu-id="b0963-231">Non è il caso del metodo <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="b0963-231">This is not the case with the <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b0963-232">Il corpo dell'entità della richiesta è già stato caricato e analizzato.</span><span class="sxs-lookup"><span data-stu-id="b0963-232">The request's entity body has already been loaded and parsed.</span></span> <span data-ttu-id="b0963-233">Tra le proprietà che generano il caricamento e l'analisi del corpo entità vi sono:</span><span class="sxs-lookup"><span data-stu-id="b0963-233">Examples of properties that cause the entity body to be loaded and parsed include the following:</span></span>  
  
-   <span data-ttu-id="b0963-234">La proprietà <see cref="P:System.Web.HttpRequest.Form" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-234">The <see cref="P:System.Web.HttpRequest.Form" /> property.</span></span>  
  
-   <span data-ttu-id="b0963-235">La proprietà <see cref="P:System.Web.HttpRequest.Files" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-235">The <see cref="P:System.Web.HttpRequest.Files" /> property.</span></span>  
  
-   <span data-ttu-id="b0963-236">La proprietà <see cref="P:System.Web.HttpRequest.InputStream" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-236">The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span></span>  
  
-   <span data-ttu-id="b0963-237">Metodo <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-237">The <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" /> method.</span></span>  
  
 <span data-ttu-id="b0963-238">Per evitare questa eccezione, chiamare il metodo di <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> per primo.</span><span class="sxs-lookup"><span data-stu-id="b0963-238">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span> <span data-ttu-id="b0963-239">Questa eccezione viene generata se il client viene disconnesso durante la lettura del corpo di entità.</span><span class="sxs-lookup"><span data-stu-id="b0963-239">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBufferlessInputStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b0963-240">Ottiene un oggetto <see cref="T:System.IO.Stream" /> che può essere usato per leggere il corpo dell'entità HTTP in ingresso.</span><span class="sxs-lookup"><span data-stu-id="b0963-240">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferlessInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferlessInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferlessInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferlessInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferlessInputStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0963-241">Ottiene un oggetto <see cref="T:System.IO.Stream" /> che può essere usato per leggere il corpo dell'entità HTTP in ingresso.</span><span class="sxs-lookup"><span data-stu-id="b0963-241">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></summary>
        <returns><span data-ttu-id="b0963-242">Oggetto <see cref="T:System.IO.Stream" /> che può essere usato per leggere il corpo dell'entità HTTP in ingresso.</span><span class="sxs-lookup"><span data-stu-id="b0963-242">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-243">Questo metodo offre un'alternativa all'utilizzo di <xref:System.Web.HttpRequest.InputStream%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="b0963-243">This method provides an alternative to using the <xref:System.Web.HttpRequest.InputStream%2A> property.</span></span> <span data-ttu-id="b0963-244">Il <xref:System.Web.HttpRequest.InputStream%2A> proprietà attende fino a quando l'intera richiesta è stata ricevuta prima di restituire un <xref:System.IO.Stream> oggetto.</span><span class="sxs-lookup"><span data-stu-id="b0963-244">The <xref:System.Web.HttpRequest.InputStream%2A> property waits until the whole request has been received before it returns a <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="b0963-245">Al contrario, il <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> metodo restituisce il <xref:System.IO.Stream> oggetto immediatamente.</span><span class="sxs-lookup"><span data-stu-id="b0963-245">In contrast, the <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method returns the <xref:System.IO.Stream> object immediately.</span></span> <span data-ttu-id="b0963-246">È possibile utilizzare il metodo inizi a elaborare il corpo dell'entità prima che il contenuto completo del corpo è stato ricevuto.</span><span class="sxs-lookup"><span data-stu-id="b0963-246">You can use the method to begin processing the entity body before the complete contents of the body have been received.</span></span>  
  
 <span data-ttu-id="b0963-247">Il corpo dell'entità (o la parte di esso durante la richiesta e ricevuta) viene restituito solo quando si utilizza l'oggetto restituito da questo metodo per leggere il flusso, chiamando i metodi, ad esempio il <xref:System.IO.Stream.Read%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="b0963-247">The entity body (or as much of it as you request and has been received) is returned only when you use the object that is returned by this method to read the stream, by calling methods such as the <xref:System.IO.Stream.Read%2A> method.</span></span> <span data-ttu-id="b0963-248">Si utilizzano i parametri del <xref:System.IO.Stream.Read%2A> per specificare quanta parte del corpo dell'entità per la lettura.</span><span class="sxs-lookup"><span data-stu-id="b0963-248">You use parameters of the <xref:System.IO.Stream.Read%2A> method to specify how much of the entity body to read.</span></span>  
  
 <span data-ttu-id="b0963-249">Il <xref:System.IO.Stream> oggetto restituito da ASP.NET da questo metodo supporta i metodi di lettura sincroni e asincroni.</span><span class="sxs-lookup"><span data-stu-id="b0963-249">The <xref:System.IO.Stream> object returned by ASP.NET from this method supports both synchronous and asynchronous read methods.</span></span> <span data-ttu-id="b0963-250">Il <xref:System.IO.Stream> oggetto implementa sia il <xref:System.IO.Stream.BeginRead%2A> e <xref:System.IO.Stream.EndRead%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="b0963-250">The <xref:System.IO.Stream> object implements both the <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> methods.</span></span> <span data-ttu-id="b0963-251">I metodi asincroni consentono di leggere in modo asincrono l'entità della richiesta in blocchi, mentre ASP.NET rilascia il thread corrente tra ogni iterazione di un ciclo di lettura asincrono.</span><span class="sxs-lookup"><span data-stu-id="b0963-251">The asynchronous methods let you asynchronously read the request entity in chunks, while ASP.NET releases the current thread in between each iteration of an asynchronous read loop.</span></span>  
  
 <span data-ttu-id="b0963-252">Questo metodo può essere utile se la richiesta sta caricando un file di grandi dimensioni e si desidera iniziare l'accesso al contenuto di file prima che il caricamento è completato.</span><span class="sxs-lookup"><span data-stu-id="b0963-252">This method can be useful if the request is uploading a large file and you want to begin accessing the file contents before the upload is finished.</span></span> <span data-ttu-id="b0963-253">Tuttavia, solo utilizzare questo metodo per gli scenari in cui si desidera assumere tutta l'elaborazione del corpo dell'entità.</span><span class="sxs-lookup"><span data-stu-id="b0963-253">However, you should only use this method for scenarios where you want to take over all processing of the entity body.</span></span> <span data-ttu-id="b0963-254">Ciò significa che è possibile utilizzare questo metodo da una pagina aspx, perché quando che una pagina aspx in esecuzione, il corpo dell'entità è già stato letto.</span><span class="sxs-lookup"><span data-stu-id="b0963-254">This means that you cannot use this method from an .aspx page, because by the time an .aspx page runs, the entity body has already been read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b0963-255">Il corpo dell'entità della richiesta è già stato caricato e analizzato.</span><span class="sxs-lookup"><span data-stu-id="b0963-255">The request's entity body has already been loaded and parsed.</span></span> <span data-ttu-id="b0963-256">Tra le proprietà che generano il caricamento e l'analisi del corpo entità vi sono:</span><span class="sxs-lookup"><span data-stu-id="b0963-256">Examples of properties that cause the entity body to be loaded and parsed include the following:</span></span>  
  
-   <see cref="P:System.Web.HttpRequest.Form" />  
  
-   <see cref="P:System.Web.HttpRequest.InputStream" />  
  
-   <see cref="P:System.Web.HttpRequest.Files" />  
  
-   <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" />  
  
 <span data-ttu-id="b0963-257">Per evitare questa eccezione, chiamare il metodo di <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> per primo.</span><span class="sxs-lookup"><span data-stu-id="b0963-257">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span> <span data-ttu-id="b0963-258">Questa eccezione viene generata se il client viene disconnesso durante la lettura del corpo di entità.</span><span class="sxs-lookup"><span data-stu-id="b0963-258">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferlessInputStream (bool disableMaxRequestLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferlessInputStream(bool disableMaxRequestLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferlessInputStream (disableMaxRequestLength As Boolean) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferlessInputStream(bool disableMaxRequestLength);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disableMaxRequestLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disableMaxRequestLength">
          <span data-ttu-id="b0963-259"><see langword="true" /> per disabilitare il limite di lunghezza della richiesta; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-259"><see langword="true" /> to disable the request-length limit; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b0963-260">Ottiene un oggetto <see cref="T:System.IO.Stream" /> che può essere usato per leggere il corpo dell'entità HTTP in ingresso, disabilitando facoltativamente il limite di lunghezza della richiesta impostato nella proprietà <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-260">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body, optionally disabling the request-length limit that is set in the <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /> property.</span></span></summary>
        <returns><span data-ttu-id="b0963-261">Oggetto <see cref="T:System.IO.Stream" /> che può essere usato per leggere il corpo dell'entità HTTP in ingresso.</span><span class="sxs-lookup"><span data-stu-id="b0963-261">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-262">Per ulteriori informazioni su questo metodo, vedere il <xref:System.Web.HttpRequest.GetBufferlessInputStream> rapporto di overload.</span><span class="sxs-lookup"><span data-stu-id="b0963-262">For more information about this method, see the <xref:System.Web.HttpRequest.GetBufferlessInputStream> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b0963-263">Il corpo dell'entità della richiesta è già stato caricato e analizzato.</span><span class="sxs-lookup"><span data-stu-id="b0963-263">The request's entity body has already been loaded and parsed.</span></span> <span data-ttu-id="b0963-264">Tra le proprietà che generano il caricamento e l'analisi del corpo entità vi sono:</span><span class="sxs-lookup"><span data-stu-id="b0963-264">Examples of properties that cause the entity body to be loaded and parsed include the following:</span></span>  
  
-   <span data-ttu-id="b0963-265">La proprietà <see cref="P:System.Web.HttpRequest.Form" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-265">The <see cref="P:System.Web.HttpRequest.Form" /> property.</span></span>  
  
-   <span data-ttu-id="b0963-266">La proprietà <see cref="P:System.Web.HttpRequest.Files" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-266">The <see cref="P:System.Web.HttpRequest.Files" /> property.</span></span>  
  
-   <span data-ttu-id="b0963-267">La proprietà <see cref="P:System.Web.HttpRequest.InputStream" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-267">The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span></span>  
  
-   <span data-ttu-id="b0963-268">Metodo <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-268">The <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" /> method.</span></span>  
  
 <span data-ttu-id="b0963-269">Per evitare questa eccezione, chiamare il metodo di <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> per primo.</span><span class="sxs-lookup"><span data-stu-id="b0963-269">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span> <span data-ttu-id="b0963-270">Questa eccezione viene generata se il client viene disconnesso durante la lettura del corpo di entità.</span><span class="sxs-lookup"><span data-stu-id="b0963-270">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-271">Ottiene una raccolta di intestazioni HTTP.</span><span class="sxs-lookup"><span data-stu-id="b0963-271">Gets a collection of HTTP headers.</span></span></summary>
        <value><span data-ttu-id="b0963-272">Oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> di intestazioni.</span><span class="sxs-lookup"><span data-stu-id="b0963-272">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of headers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-273">Per un elenco di tutte le intestazioni possibili, vedere [i campi di intestazione richiesta](http://go.microsoft.com/fwlink/?LinkId=73147) nel sito Web W3C.</span><span class="sxs-lookup"><span data-stu-id="b0963-273">For a listing of all possible headers, see [Request Header Fields](http://go.microsoft.com/fwlink/?LinkId=73147) on the W3C Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0963-274">Esempio di codice seguente consente di visualizzare i nomi e valori di tutte le intestazioni nella richiesta HTTP.</span><span class="sxs-lookup"><span data-stu-id="b0963-274">The following code example displays the names and values of all headers in the HTTP request.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Headers Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Headers Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpChannelBinding">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.HttpChannelBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpChannelBinding As ChannelBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ChannelBinding ^ HttpChannelBinding { System::Security::Authentication::ExtendedProtection::ChannelBinding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ChannelBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-275">Ottiene l'oggetto <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> dell'istanza corrente di <see cref="T:System.Web.HttpWorkerRequest" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-275">Gets the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span></span></summary>
        <value><span data-ttu-id="b0963-276">Oggetto <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> dell'istanza di <see cref="T:System.Web.HttpWorkerRequest" /> corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-276">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b0963-277">L'oggetto <see cref="T:System.Web.HttpWorkerRequest" /> corrente non è un oggetto <see langword="System.Web.Hosting.IIS7WorkerRequest" /> o <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-277">The current <see cref="T:System.Web.HttpWorkerRequest" /> object is not a <see langword="System.Web.Hosting.IIS7WorkerRequest" /> object or a <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-278">Ottiene il metodo di trasferimento dei dati HTTP, ad esempio <see langword="GET" />, <see langword="POST" /> o <see langword="HEAD" />, usato dal client.</span><span class="sxs-lookup"><span data-stu-id="b0963-278">Gets the HTTP data transfer method (such as <see langword="GET" />, <see langword="POST" />, or <see langword="HEAD" />) used by the client.</span></span></summary>
        <value><span data-ttu-id="b0963-279">Metodo di trasferimento dati HTTP usato dal client.</span><span class="sxs-lookup"><span data-stu-id="b0963-279">The HTTP data transfer method used by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0963-280">Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.HttpUtility.HtmlEncode%2A> metodo per la codifica HTML il valore della <xref:System.Web.HttpRequest.HttpMethod%2A> proprietà e <xref:System.IO.TextWriter.WriteLine%2A> metodo per scrivere il valore codificato nel file.</span><span class="sxs-lookup"><span data-stu-id="b0963-280">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.HttpMethod%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="b0963-281">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="b0963-281">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 <span data-ttu-id="b0963-282">L'esempio seguente mostra l'output prodotto dal codice.</span><span class="sxs-lookup"><span data-stu-id="b0963-282">The following example shows output that is produced by this code.</span></span>  
  
 `GET`  
  
 `127.0.0.1`  
  
 `127.0.0.1`  
  
 `GET`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-283">Ottiene il contenuto del corpo dell'entità HTTP in ingresso.</span><span class="sxs-lookup"><span data-stu-id="b0963-283">Gets the contents of the incoming HTTP entity body.</span></span></summary>
        <value><span data-ttu-id="b0963-284">Oggetto <see cref="T:System.IO.Stream" /> che rappresenta il contenuto del corpo dell'entità HTTP in ingresso.</span><span class="sxs-lookup"><span data-stu-id="b0963-284">A <see cref="T:System.IO.Stream" /> object representing the contents of the incoming HTTP content body.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0963-285">Esempio di codice seguente copia il contenuto di un <xref:System.Web.HttpRequest.InputStream%2A> in una stringa.</span><span class="sxs-lookup"><span data-stu-id="b0963-285">The following code example copies the contents of an <xref:System.Web.HttpRequest.InputStream%2A> into a string.</span></span>  
  
 [!code-csharp[Classic HttpRequest.InputStream Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.InputStream Example/cs/source.aspx#1)]
 [!code-vb[Classic HttpRequest.InputStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.InputStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertEntityBody">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b0963-286">Fornisce un wrapper gestito per il metodo IIS che inserisce un corpo dell'entità di richiesta HTTP in memoria.</span><span class="sxs-lookup"><span data-stu-id="b0963-286">Provides a managed wrapper for the IIS method that inserts an HTTP request entity body into memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-287">Il <xref:System.Web.HttpRequest.InsertEntityBody%2A> overload del metodo offrono l'accesso gestito in IIS 7 `IHttpRequest::InsertEntityBody` metodo.</span><span class="sxs-lookup"><span data-stu-id="b0963-287">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> method overloads provide managed access to the IIS 7 `IHttpRequest::InsertEntityBody` method.</span></span> <span data-ttu-id="b0963-288">Il metodo IIS inserisce un corpo entità di richiesta HTTP (i dati inviati da un client) in memoria.</span><span class="sxs-lookup"><span data-stu-id="b0963-288">The IIS method inserts an HTTP request entity body (the data that is posted by a client) into memory.</span></span> <span data-ttu-id="b0963-289">Ciò è utile perché IIS non gestisce una copia dell'entità della richiesta dopo che è stato letto.</span><span class="sxs-lookup"><span data-stu-id="b0963-289">This is useful because IIS does not maintain a copy of the request entity after it has been read.</span></span> <span data-ttu-id="b0963-290">Il <xref:System.Web.HttpRequest.InsertEntityBody%2A> metodi creare una copia dei dati di entità della richiesta HTTP e renderlo disponibile in IIS per la gestione personalizzata aggiuntiva.</span><span class="sxs-lookup"><span data-stu-id="b0963-290">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> methods create a copy of the HTTP request entity data and make it available to IIS for additional custom handling.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0963-291">Il <xref:System.Web.HttpRequest.InsertEntityBody%2A> overload del metodo funzionano solo in IIS 7.0 o versioni successive, in quanto il `IHttpRequest::InsertEntityBody` metodo è stato aggiunto in IIS 7.0.</span><span class="sxs-lookup"><span data-stu-id="b0963-291">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> method overloads work only on IIS 7.0 or later, because the `IHttpRequest::InsertEntityBody` method was added in IIS 7.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public void InsertEntityBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEntityBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.InsertEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertEntityBody ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEntityBody();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0963-292">Fornisce a IIS una copia del corpo dell'entità di richiesta HTTP.</span><span class="sxs-lookup"><span data-stu-id="b0963-292">Provides IIS with a copy of the HTTP request entity body.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-293">IIS non gestisce una copia della richiesta dopo che è stato letto.</span><span class="sxs-lookup"><span data-stu-id="b0963-293">IIS does not maintain a copy of the request after it has been read.</span></span> <span data-ttu-id="b0963-294">Pertanto, è consigliabile che solo il gestore per una richiesta HTTP deve leggere l'entità della richiesta.</span><span class="sxs-lookup"><span data-stu-id="b0963-294">Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</span></span>  
  
 <span data-ttu-id="b0963-295">Il <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> overload del metodo fornisce a IIS una copia dell'entità della richiesta se in precedenza sono state lette da ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="b0963-295">The <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> method overload provides IIS with a copy of the request entity if it was previously read by ASP.NET.</span></span> <span data-ttu-id="b0963-296">Questo overload del metodo è utile nei casi in cui ASP.NET ha letto la richiesta di entità e si desidera riutilizzare i dati della richiesta esistente.</span><span class="sxs-lookup"><span data-stu-id="b0963-296">This method overload is useful for cases where ASP.NET has read the entity request and you want to reuse the existing request data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b0963-297">Il metodo è stato richiamato su una versione di IIS precedente a IIS 7.0.</span><span class="sxs-lookup"><span data-stu-id="b0963-297">The method was invoked on a version of IIS earlier than IIS 7.0.</span></span></exception>
        <permission cref="T:System.Web.AspNetHostingPermission"><span data-ttu-id="b0963-298">per operare in un ambiente ospitato.</span><span class="sxs-lookup"><span data-stu-id="b0963-298">For operating in a hosted environment.</span></span> <span data-ttu-id="b0963-299">Azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-299">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b0963-300">Enumerazione associata: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span><span class="sxs-lookup"><span data-stu-id="b0963-300">Associated enumeration: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public void InsertEntityBody (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEntityBody(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertEntityBody (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEntityBody(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="b0963-301">Matrice che contiene i dati dell'entità di richiesta.</span><span class="sxs-lookup"><span data-stu-id="b0963-301">An array that contains the request entity data.</span></span></param>
        <param name="offset"><span data-ttu-id="b0963-302">Posizione in base zero in <c>buffer</c> in corrispondenza della quale iniziare ad archiviare i dati dell'entità di richiesta.</span><span class="sxs-lookup"><span data-stu-id="b0963-302">The zero-based position in <c>buffer</c> at which to begin storing the request entity data.</span></span></param>
        <param name="count"><span data-ttu-id="b0963-303">Numero di byte da leggere nella matrice <c>buffer</c>.</span><span class="sxs-lookup"><span data-stu-id="b0963-303">The number of bytes to read into the <c>buffer</c> array.</span></span></param>
        <summary><span data-ttu-id="b0963-304">Fornisce a IIS una copia del corpo dell'entità di richiesta HTTP nonché le informazioni sull'oggetto entità di richiesta.</span><span class="sxs-lookup"><span data-stu-id="b0963-304">Provides IIS with a copy of the HTTP request entity body and with information about the request entity object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-305">IIS non gestisce una copia della richiesta dopo che è stato letto.</span><span class="sxs-lookup"><span data-stu-id="b0963-305">IIS does not maintain a copy of the request after it has been read.</span></span> <span data-ttu-id="b0963-306">Pertanto, è consigliabile che solo il gestore per una richiesta HTTP deve leggere l'entità della richiesta.</span><span class="sxs-lookup"><span data-stu-id="b0963-306">Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</span></span>  
  
 <span data-ttu-id="b0963-307">Il <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> overload del metodo è utile quando si desidera eseguire un'elaborazione personalizzata, ad esempio l'inserimento di un corpo entità diverso in memoria.</span><span class="sxs-lookup"><span data-stu-id="b0963-307">The <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> method overload is useful when you want to perform custom processing, such as inserting a different entity body into memory.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b0963-308">Il metodo è stato richiamato su una versione di IIS precedente a IIS 7.0.</span><span class="sxs-lookup"><span data-stu-id="b0963-308">The method was invoked on a version of IIS earlier than IIS 7.0.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0963-309"><paramref name="buffer" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-309"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b0963-310"><paramref name="offset" /> è un valore negativo.</span><span class="sxs-lookup"><span data-stu-id="b0963-310"><paramref name="offset" /> is a negative value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b0963-311">Il numero di elementi nell'oggetto <paramref name="count" /> è maggiore dello spazio disponibile in <paramref name="buffer" />, dato il valore di <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-311">The number of items in <paramref name="count" /> is larger than the available space in <paramref name="buffer" />, given the <paramref name="offset" /> value.</span></span></exception>
        <permission cref="T:System.Web.AspNetHostingPermission"><span data-ttu-id="b0963-312">per il funzionamento in un ambiente host.</span><span class="sxs-lookup"><span data-stu-id="b0963-312">for operating in a hosted environment.</span></span> <span data-ttu-id="b0963-313">Azione di sicurezza: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-313">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b0963-314">Enumerazione associata: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span><span class="sxs-lookup"><span data-stu-id="b0963-314">Associated enumeration: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-315">Ottiene un valore che indica se la richiesta è stata autenticata.</span><span class="sxs-lookup"><span data-stu-id="b0963-315">Gets a value indicating whether the request has been authenticated.</span></span></summary>
        <value>
          <span data-ttu-id="b0963-316"><see langword="true" /> se la richiesta viene autenticata; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-316"><see langword="true" /> if the request is authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0963-317">Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.HttpRequest.IsAuthenticated%2A> proprietà per determinare se la richiesta corrente è stata autenticata.</span><span class="sxs-lookup"><span data-stu-id="b0963-317">The following code example uses the <xref:System.Web.HttpRequest.IsAuthenticated%2A> property to determine whether the current request has been authenticated.</span></span> <span data-ttu-id="b0963-318">Se non è stato autenticato, la richiesta viene reindirizzata a un'altra pagina in cui gli utenti possono immettere le credenziali all'applicazione Web.</span><span class="sxs-lookup"><span data-stu-id="b0963-318">If it has not been authenticated, the request is redirected to another page where users can enter their credentials into the Web application.</span></span> <span data-ttu-id="b0963-319">Si tratta di una tecnica comune utilizzata nella pagina predefinita per un'applicazione.</span><span class="sxs-lookup"><span data-stu-id="b0963-319">This is a common technique used in the default page for an application.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample3/CS/isauthenticatedcs.aspx#1)]
 [!code-vb[System.Web.HttpRequest_Sample3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample3/VB/isauthenticatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocal { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-320">Ottiene un valore che indica se la richiesta proviene dal computer locale.</span><span class="sxs-lookup"><span data-stu-id="b0963-320">Gets a value indicating whether the request is from the local computer.</span></span></summary>
        <value>
          <span data-ttu-id="b0963-321"><see langword="true" /> se la richiesta proviene dal computer locale; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-321"><see langword="true" /> if the request is from the local computer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-322">Il <xref:System.Web.HttpRequest.IsLocal%2A> restituisce proprietà `true` se l'indirizzo IP del creatore della richiesta è 127.0.0.1 o se l'indirizzo IP della richiesta è uguale all'indirizzo IP del server.</span><span class="sxs-lookup"><span data-stu-id="b0963-322">The <xref:System.Web.HttpRequest.IsLocal%2A> property returns `true` if the IP address of the request originator is 127.0.0.1 or if the IP address of the request is the same as the server's IP address.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecureConnection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-323">Ottiene un valore che indica se per la connessione HTTP viene usato Secure Sockets, ovvero HTTPS.</span><span class="sxs-lookup"><span data-stu-id="b0963-323">Gets a value indicating whether the HTTP connection uses secure sockets (that is, HTTPS).</span></span></summary>
        <value>
          <span data-ttu-id="b0963-324"><see langword="true" /> se la connessione è di tipo SSL; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-324"><see langword="true" /> if the connection is an SSL connection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0963-325">Esempio di codice seguente determina se il <xref:System.Web.HttpRequest.IsSecureConnection%2A> è impostata su false.</span><span class="sxs-lookup"><span data-stu-id="b0963-325">The following code example determines whether the <xref:System.Web.HttpRequest.IsSecureConnection%2A> property is set to false.</span></span> <span data-ttu-id="b0963-326">Questo caso, il <xref:System.Web.HttpResponse.SuppressContent%2A> è impostata su true per interrompere l'invio della risposta.</span><span class="sxs-lookup"><span data-stu-id="b0963-326">If it is, the <xref:System.Web.HttpResponse.SuppressContent%2A> property is set to true to stop the response from being sent.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Sample5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsesuppresscontentcs.aspx#3)]
 [!code-vb[System.Web.HttpResponse_Sample5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsesuppresscontentvb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="b0963-327">Nome del membro della raccolta da ottenere.</span><span class="sxs-lookup"><span data-stu-id="b0963-327">The name of the collection member to get.</span></span></param>
        <summary><span data-ttu-id="b0963-328">Ottiene l'oggetto specificato dalle raccolte <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" /> o <see cref="P:System.Web.HttpRequest.ServerVariables" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-328">Gets the specified object from the <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collections.</span></span></summary>
        <value><span data-ttu-id="b0963-329">Membro della raccolta <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" /> o <see cref="P:System.Web.HttpRequest.ServerVariables" /> specificato nel parametro <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-329">The <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collection member specified in the <paramref name="key" /> parameter.</span></span> <span data-ttu-id="b0963-330">Se il parametro <paramref name="key" /> specificato non viene trovato, viene restituito <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-330">If the specified <paramref name="key" /> is not found, then <see langword="null" /> is returned.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogonUserIdentity">
      <MemberSignature Language="C#" Value="public System.Security.Principal.WindowsIdentity LogonUserIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.WindowsIdentity LogonUserIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.LogonUserIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogonUserIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::WindowsIdentity ^ LogonUserIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-331">Ottiene il tipo <see cref="T:System.Security.Principal.WindowsIdentity" /> per l'utente corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-331">Gets the <see cref="T:System.Security.Principal.WindowsIdentity" /> type for the current user.</span></span></summary>
        <value><span data-ttu-id="b0963-332">Oggetto <see cref="T:System.Security.Principal.WindowsIdentity" /> per le impostazioni di autenticazione di Microsoft Internet Information Services (IIS).</span><span class="sxs-lookup"><span data-stu-id="b0963-332">A <see cref="T:System.Security.Principal.WindowsIdentity" /> object for the current Microsoft Internet Information Services (IIS) authentication settings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-333">Il <xref:System.Web.HttpRequest.LogonUserIdentity%2A> proprietà espone le proprietà e metodi di <xref:System.Security.Principal.WindowsIdentity> per l'utente attualmente connesso a Microsoft Internet Information Services (IIS).</span><span class="sxs-lookup"><span data-stu-id="b0963-333">The <xref:System.Web.HttpRequest.LogonUserIdentity%2A> property exposes the properties and methods of the <xref:System.Security.Principal.WindowsIdentity> object for the currently connected user to Microsoft Internet Information Services (IIS).</span></span> <span data-ttu-id="b0963-334">L'istanza del <xref:System.Security.Principal.WindowsIdentity> classe esposta da <xref:System.Web.HttpRequest.LogonUserIdentity%2A> tiene traccia del token di richiesta IIS e consente di accedere facilmente a questo token per la richiesta HTTP corrente in corso di elaborazione all'interno di ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="b0963-334">The instance of the <xref:System.Security.Principal.WindowsIdentity> class that is exposed by <xref:System.Web.HttpRequest.LogonUserIdentity%2A> tracks the IIS request token and provides easy access to this token for the current HTTP request being processed inside of ASP.NET.</span></span> <span data-ttu-id="b0963-335">Un'istanza di <xref:System.Security.Principal.WindowsIdentity> classe viene creata automaticamente in modo che non sia possibile costruita per accedere ai relativi metodi e proprietà.</span><span class="sxs-lookup"><span data-stu-id="b0963-335">An instance of the <xref:System.Security.Principal.WindowsIdentity> class is automatically created so it does not need to be constructed to in order to gain access to its methods and properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0963-336">Esempio di codice seguente viene illustrato come recuperare il <xref:System.Web.HttpRequest.LogonUserIdentity%2A> proprietà per l'utente corrente e vengono scritti i valori di ogni elemento in un file di testo.</span><span class="sxs-lookup"><span data-stu-id="b0963-336">The following code example shows how to retrieve the <xref:System.Web.HttpRequest.LogonUserIdentity%2A> property for the current user and write out the values of each item in a text file.</span></span> <span data-ttu-id="b0963-337">Inserire il codice della pagina ASP.NET a cui fa riferimento il modulo `ACTION` attributo.</span><span class="sxs-lookup"><span data-stu-id="b0963-337">Place this code on the ASP.NET page referenced by the form's `ACTION` attribute.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_LogonUserIdentity#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_LogonUserIdentity/CS/logonuseridentity_cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_LogonUserIdentity#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_LogonUserIdentity/VB/logonuseridentity_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b0963-338">L'applicazione Web viene eseguita in modalità integrata IIS 7 e l'evento <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> non è stato ancora generato.</span><span class="sxs-lookup"><span data-stu-id="b0963-338">The Web application is running in IIS 7 integrated mode and the <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> event has not yet been raised.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapImageCoordinates">
      <MemberSignature Language="C#" Value="public int[] MapImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] MapImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapImageCoordinates (imageFieldName As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ MapImageCoordinates(System::String ^ imageFieldName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFieldName"><span data-ttu-id="b0963-339">Nome della mappa immagine del form.</span><span class="sxs-lookup"><span data-stu-id="b0963-339">The name of the form image map.</span></span></param>
        <summary><span data-ttu-id="b0963-340">Esegue il mapping di un parametro form del campo immagine in ingresso ai valori appropriati delle coordinate x e y.</span><span class="sxs-lookup"><span data-stu-id="b0963-340">Maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.</span></span></summary>
        <returns><span data-ttu-id="b0963-341">Matrice bidimensionale di interi.</span><span class="sxs-lookup"><span data-stu-id="b0963-341">A two-dimensional array of integers.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MapPath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b0963-342">Esegue il mapping del percorso virtuale presente nell'URL richiesto a un percorso fisico sul server per la richiesta corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-342">Maps the virtual path in the requested URL to a physical path on the server for the current request.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="b0963-343">Percorso virtuale, assoluto o relativo, della richiesta corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-343">The virtual path (absolute or relative) for the current request.</span></span></param>
        <summary><span data-ttu-id="b0963-344">Esegue il mapping del percorso virtuale specificato a un percorso fisico.</span><span class="sxs-lookup"><span data-stu-id="b0963-344">Maps the specified virtual path to a physical path.</span></span></summary>
        <returns><span data-ttu-id="b0963-345">Percorso fisico sul server specificato da <paramref name="virtualPath" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-345">The physical path on the server specified by <paramref name="virtualPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="b0963-346">Il <xref:System.Web.HttpRequest.MapPath%2A> proprietà potenzialmente contiene informazioni riservate sull'ambiente di hosting.</span><span class="sxs-lookup"><span data-stu-id="b0963-346">The <xref:System.Web.HttpRequest.MapPath%2A> property potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="b0963-347">Il valore restituito non deve essere visibile agli utenti.</span><span class="sxs-lookup"><span data-stu-id="b0963-347">The return value should not be displayed to users.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0963-348">Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.HttpRequest.MapPath%2A> per convertire un percorso virtuale a un percorso fisico completo nel server.</span><span class="sxs-lookup"><span data-stu-id="b0963-348">The following code example uses the <xref:System.Web.HttpRequest.MapPath%2A> method to convert a virtual path to a fully qualified physical path on the server.</span></span> <span data-ttu-id="b0963-349">In questo esempio è costituito da due parti:</span><span class="sxs-lookup"><span data-stu-id="b0963-349">This example has two parts:</span></span>  
  
-   <span data-ttu-id="b0963-350">Una pagina aspx esegue il mapping di percorso, legge il file e visualizza i risultati dell'operazione di lettura.</span><span class="sxs-lookup"><span data-stu-id="b0963-350">An .aspx page maps the path, reads the file, and displays results of the read operation.</span></span>  
  
-   <span data-ttu-id="b0963-351">Una classe, `UpperCaseFilterStream`, che converte tutti i caratteri passati in lettere maiuscole.</span><span class="sxs-lookup"><span data-stu-id="b0963-351">A class, `UpperCaseFilterStream`, that changes all characters passed through it to uppercase.</span></span>  
  
 <span data-ttu-id="b0963-352">La prima parte dell'esempio viene illustrato come convertire un percorso virtuale in un percorso fisico completo usando il <xref:System.Web.HttpRequest.MapPath%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="b0963-352">The first part of the example shows how to convert a virtual path to a fully qualified physical path using the <xref:System.Web.HttpRequest.MapPath%2A> method.</span></span> <span data-ttu-id="b0963-353">Il percorso fisico viene quindi passato a un <xref:System.IO.StreamReader> oggetto, che ottiene il contenuto del file.</span><span class="sxs-lookup"><span data-stu-id="b0963-353">This physical path is then passed to a <xref:System.IO.StreamReader> object, which obtains the contents of the file.</span></span> <span data-ttu-id="b0963-354">Il <xref:System.Web.HttpResponse.Write%2A> viene quindi chiamato il metodo per visualizzare il contenuto del file della pagina.</span><span class="sxs-lookup"><span data-stu-id="b0963-354">The <xref:System.Web.HttpResponse.Write%2A> method is then called to display the content of the file on the page.</span></span> <span data-ttu-id="b0963-355">Il <xref:System.Web.HttpResponse.Filter%2A> proprietà viene utilizzata per associare un filtro nel flusso di risposta che il testo visualizzato per la pagina tutte lettere maiuscola.</span><span class="sxs-lookup"><span data-stu-id="b0963-355">The <xref:System.Web.HttpResponse.Filter%2A> property is used to attach a filter to the response stream that makes the text displayed to the page all uppercase.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_Samples2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/requestsamples2cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Samples2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/requestsamples2vb.aspx#1)]  
  
 <span data-ttu-id="b0963-356">La seconda parte dell'esempio viene illustrata una classe che eredita da <xref:System.IO.Stream> e converte tutti i caratteri in un flusso in lettere maiuscole.</span><span class="sxs-lookup"><span data-stu-id="b0963-356">The second part of the example shows a class that inherits from <xref:System.IO.Stream> and converts all characters in a stream to uppercase.</span></span> <span data-ttu-id="b0963-357">Inserire questo codice di `App_Code` cartella per l'applicazione.</span><span class="sxs-lookup"><span data-stu-id="b0963-357">Put this code in the `App_Code` folder for your application.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Samples2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/responsefilter.cs#2)]
 [!code-vb[System.Web.HttpRequest_Samples2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/responsefilter.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b0963-358">Non è stato definito alcun oggetto <see cref="T:System.Web.HttpContext" /> per la richiesta.</span><span class="sxs-lookup"><span data-stu-id="b0963-358">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath, string baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath, string baseVirtualDir, bool allowCrossAppMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String, baseVirtualDir As String, allowCrossAppMapping As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath, System::String ^ baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="baseVirtualDir" Type="System.String" />
        <Parameter Name="allowCrossAppMapping" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="b0963-359">Percorso virtuale, assoluto o relativo, della richiesta corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-359">The virtual path (absolute or relative) for the current request.</span></span></param>
        <param name="baseVirtualDir"><span data-ttu-id="b0963-360">Percorso della directory virtuale di base usato per la risoluzione relativa.</span><span class="sxs-lookup"><span data-stu-id="b0963-360">The virtual base directory path used for relative resolution.</span></span></param>
        <param name="allowCrossAppMapping">
          <span data-ttu-id="b0963-361"><see langword="true" /> per indicare che <c>virtualPath</c> può appartenere a un'altra applicazione; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-361"><see langword="true" /> to indicate that <c>virtualPath</c> may belong to another application; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b0963-362">Esegue il mapping del percorso virtuale specificato a un percorso fisico.</span><span class="sxs-lookup"><span data-stu-id="b0963-362">Maps the specified virtual path to a physical path.</span></span></summary>
        <returns><span data-ttu-id="b0963-363">Percorso fisico sul server.</span><span class="sxs-lookup"><span data-stu-id="b0963-363">The physical path on the server.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="b0963-364">Il <xref:System.Web.HttpRequest.MapPath%2A> proprietà potenzialmente contiene informazioni riservate sull'ambiente di hosting.</span><span class="sxs-lookup"><span data-stu-id="b0963-364">The <xref:System.Web.HttpRequest.MapPath%2A> property potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="b0963-365">Il valore restituito non deve essere visibile agli utenti.</span><span class="sxs-lookup"><span data-stu-id="b0963-365">The return value should not be displayed to users.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b0963-366">Non è stato definito alcun oggetto <see cref="T:System.Web.HttpContext" /> per la richiesta.</span><span class="sxs-lookup"><span data-stu-id="b0963-366">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapRawImageCoordinates">
      <MemberSignature Language="C#" Value="public double[] MapRawImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64[] MapRawImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapRawImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapRawImageCoordinates (imageFieldName As String) As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ MapRawImageCoordinates(System::String ^ imageFieldName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFieldName"><span data-ttu-id="b0963-367">Nome del campo immagine.</span><span class="sxs-lookup"><span data-stu-id="b0963-367">The name of the image field.</span></span></param>
        <summary><span data-ttu-id="b0963-368">Esegue il mapping di un parametro form del campo immagine in ingresso ai valori appropriati delle coordinate x e y.</span><span class="sxs-lookup"><span data-stu-id="b0963-368">Maps an incoming image field form parameter into appropriate x and y coordinate values.</span></span></summary>
        <returns><span data-ttu-id="b0963-369">Valori delle coordinate x e y.</span><span class="sxs-lookup"><span data-stu-id="b0963-369">The x and y coordinate values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Params">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Params { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Params" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Params" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Params As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Params { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-370">Ottiene una raccolta combinata di elementi <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" /> e <see cref="P:System.Web.HttpRequest.ServerVariables" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-370">Gets a combined collection of <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, and <see cref="P:System.Web.HttpRequest.ServerVariables" /> items.</span></span></summary>
        <value><span data-ttu-id="b0963-371">Un oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-371">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-372">Coppie nome-valore vengono aggiunti alla raccolta nell'ordine seguente:</span><span class="sxs-lookup"><span data-stu-id="b0963-372">Name-value pairs are added to the collection in the following order:</span></span>  
  
1.  <span data-ttu-id="b0963-373">Parametri della stringa di query.</span><span class="sxs-lookup"><span data-stu-id="b0963-373">Query-string parameters.</span></span>  
  
2.  <span data-ttu-id="b0963-374">Campi del form.</span><span class="sxs-lookup"><span data-stu-id="b0963-374">Form fields.</span></span>  
  
3.  <span data-ttu-id="b0963-375">Cookie.</span><span class="sxs-lookup"><span data-stu-id="b0963-375">Cookies.</span></span>  
  
4.  <span data-ttu-id="b0963-376">Variabili server.</span><span class="sxs-lookup"><span data-stu-id="b0963-376">Server variables.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0963-377">Esempio di codice seguente viene illustrato come scorrere in ciclo i <xref:System.Web.HttpRequest.Params%2A> proprietà per una pagina e come visualizzare ogni coppia chiave/valore.</span><span class="sxs-lookup"><span data-stu-id="b0963-377">The following code example shows how to loop through the <xref:System.Web.HttpRequest.Params%2A> property for a page and how to display each key/value pair.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.Params#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.Params/CS/requestparamscs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.Params#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.Params/VB/requestparamsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-378">Ottiene il percorso virtuale della richiesta corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-378">Gets the virtual path of the current request.</span></span></summary>
        <value><span data-ttu-id="b0963-379">Percorso virtuale della richiesta corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-379">The virtual path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-380">Il <xref:System.Web.HttpRequest.Path%2A> è composto il <xref:System.Web.HttpRequest.FilePath%2A> e <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span><span class="sxs-lookup"><span data-stu-id="b0963-380">The <xref:System.Web.HttpRequest.Path%2A> is the concatenation of the <xref:System.Web.HttpRequest.FilePath%2A> and the <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span></span> <span data-ttu-id="b0963-381">Ad esempio, per l'URL http://www.contoso.com/virdir/page.html/tail, il <xref:System.Web.HttpRequest.Path%2A> è /virdir/page.html/tail.</span><span class="sxs-lookup"><span data-stu-id="b0963-381">For example, for the URL http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequest.Path%2A> is /virdir/page.html/tail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0963-382">Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.HttpUtility.HtmlEncode%2A> metodo per la codifica HTML il valore della <xref:System.Web.HttpRequest.Path%2A> proprietà e <xref:System.IO.TextWriter.WriteLine%2A> metodo per scrivere il valore codificato nel file.</span><span class="sxs-lookup"><span data-stu-id="b0963-382">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.Path%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="b0963-383">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="b0963-383">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
      </Docs>
    </Member>
    <Member MemberName="PathInfo">
      <MemberSignature Language="C#" Value="public string PathInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PathInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathInfo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathInfo { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-384">Ottiene informazioni aggiuntive sul percorso di una risorsa con estensione URL.</span><span class="sxs-lookup"><span data-stu-id="b0963-384">Gets the additional path information for a resource with a URL extension.</span></span></summary>
        <value><span data-ttu-id="b0963-385">Informazioni aggiuntive sul percorso di una risorsa.</span><span class="sxs-lookup"><span data-stu-id="b0963-385">The additional path information for a resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-386">Per l'URL Http://www.contoso.com/virdir/page.html/tail, il <xref:System.Web.HttpRequest.PathInfo%2A> valore è /tail.</span><span class="sxs-lookup"><span data-stu-id="b0963-386">For the URL Http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequest.PathInfo%2A> value is /tail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0963-387">Esempio di codice seguente determina se il <xref:System.Web.HttpRequest.PathInfo%2A> proprietà contiene una stringa vuota.</span><span class="sxs-lookup"><span data-stu-id="b0963-387">The following code example determines whether the <xref:System.Web.HttpRequest.PathInfo%2A> property contains an empty string.</span></span> <span data-ttu-id="b0963-388">In caso affermativo, la <xref:System.IO.StreamWriter.Write%2A> metodo scrive una stringa che indica ciò a un file.</span><span class="sxs-lookup"><span data-stu-id="b0963-388">If it does, the <xref:System.IO.StreamWriter.Write%2A> method writes a string indicating this to a file.</span></span> <span data-ttu-id="b0963-389">In caso contrario, il <xref:System.Web.HttpUtility.HtmlEncode%2A> metodo codifica in HTML il valore della <xref:System.Web.HttpRequest.PathInfo%2A> proprietà e <xref:System.IO.TextWriter.WriteLine%2A> metodo scrive il valore codificato nel file.</span><span class="sxs-lookup"><span data-stu-id="b0963-389">If it does not, the <xref:System.Web.HttpUtility.HtmlEncode%2A> method HTML-encodes the value of the <xref:System.Web.HttpRequest.PathInfo%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method writes the encoded value to the file.</span></span> <span data-ttu-id="b0963-390">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="b0963-390">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#4)]
 [!code-vb[System.Web.HttpRequest_Sample1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
      </Docs>
    </Member>
    <Member MemberName="PhysicalApplicationPath">
      <MemberSignature Language="C#" Value="public string PhysicalApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PhysicalApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PhysicalApplicationPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-391">Ottiene il percorso fisico del file system della directory radice dell'applicazione server attualmente in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="b0963-391">Gets the physical file system path of the currently executing server application's root directory.</span></span></summary>
        <value><span data-ttu-id="b0963-392">Percorso del file system della directory radice dell'applicazione corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-392">The file system path of the current application's root directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0963-393">Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.HttpUtility.HtmlEncode%2A> metodo per la codifica HTML il valore della <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A> proprietà e <xref:System.IO.TextWriter.WriteLine%2A> metodo per scrivere il valore codificato nel file.</span><span class="sxs-lookup"><span data-stu-id="b0963-393">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="b0963-394">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="b0963-394">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicalPath">
      <MemberSignature Language="C#" Value="public string PhysicalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PhysicalPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PhysicalPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-395">Ottiene il percorso fisico del file system corrispondente all'URL richiesto.</span><span class="sxs-lookup"><span data-stu-id="b0963-395">Gets the physical file system path corresponding to the requested URL.</span></span></summary>
        <value><span data-ttu-id="b0963-396">Percorso del file system della richiesta corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-396">The file system path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-397">In scenari di reindirizzamento in <xref:System.Web.HttpServerUtility.Execute%2A> e <xref:System.Web.HttpServerUtility.Transfer%2A>, <xref:System.Web.HttpRequest.PhysicalPath%2A> proprietà restituisce il percorso per la pagina originale.</span><span class="sxs-lookup"><span data-stu-id="b0963-397">In redirect scenarios using <xref:System.Web.HttpServerUtility.Execute%2A> and <xref:System.Web.HttpServerUtility.Transfer%2A>, the <xref:System.Web.HttpRequest.PhysicalPath%2A> property returns the path to the original page.</span></span> <span data-ttu-id="b0963-398">Per individuare il percorso fisico dell'utilizzo di pagina attualmente in esecuzione il <xref:System.Web.HttpRequest.MapPath%2A> con l'argomento di input impostato come il <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="b0963-398">To find the physical path of the currently executing page use the <xref:System.Web.HttpRequest.MapPath%2A> method with the input argument set as the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0963-399">Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.HttpUtility.HtmlEncode%2A> metodo per la codifica HTML il valore della <xref:System.Web.HttpRequest.PhysicalPath%2A> proprietà e <xref:System.IO.TextWriter.WriteLine%2A> metodo per scrivere il valore codificato nel file.</span><span class="sxs-lookup"><span data-stu-id="b0963-399">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.PhysicalPath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="b0963-400">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="b0963-400">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.MapPath(System.String)" />
        <altmember cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-401">Ottiene la raccolta di variabili di tipo stringa di query HTTP.</span><span class="sxs-lookup"><span data-stu-id="b0963-401">Gets the collection of HTTP query string variables.</span></span></summary>
        <value><span data-ttu-id="b0963-402">Variabili di stringa di query inviate dal client.</span><span class="sxs-lookup"><span data-stu-id="b0963-402">The query string variables sent by the client.</span></span> <span data-ttu-id="b0963-403">Chiavi e valori vengono decodificati come una stringa URL.</span><span class="sxs-lookup"><span data-stu-id="b0963-403">Keys and values are URL-decoded.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0963-404">Esempio di codice seguente mostra due modi per ottenere il valore di una variabile di stringa di query denominato "fullname".</span><span class="sxs-lookup"><span data-stu-id="b0963-404">The following code example shows two ways to get the value of a query string variable named "fullname".</span></span> <span data-ttu-id="b0963-405">In ogni caso, se l'URL è `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`, quindi il valore restituito è "Fadi Fakhouri" perché il `%20` viene decodificato come URL in un carattere di spazio.</span><span class="sxs-lookup"><span data-stu-id="b0963-405">In each case, if the URL is `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`, then the value returned is "Fadi Fakhouri" because the `%20` is URL-decoded into a space character.</span></span> <span data-ttu-id="b0963-406">Se l'URL non ha un `fullname` ID di stringa di query, il valore restituito sarà `null`.</span><span class="sxs-lookup"><span data-stu-id="b0963-406">If the URL doesn’t have a `fullname` query string ID, the returned value would be `null`.</span></span>  
  
 <span data-ttu-id="b0963-407">La prima riga del codice cerca la chiave "fullname" solo nella stringa di query; la seconda riga è per la chiave "fullname" in tutte le raccolte di richiesta HTTP.</span><span class="sxs-lookup"><span data-stu-id="b0963-407">The first line of code looks for the key "fullname" only in the query string; the second line looks for the key "fullname" in all of the HTTP request collections.</span></span> <span data-ttu-id="b0963-408">Per ulteriori informazioni sulla seconda riga, vedere <xref:System.Web.HttpRequest.Item%2A>.</span><span class="sxs-lookup"><span data-stu-id="b0963-408">For more information about the second line, see <xref:System.Web.HttpRequest.Item%2A>.</span></span>  
  
```csharp  
string fullname1 = Request.QueryString["fullname"];  
string fullname2 = Request["fullname"];  
  
```  
  
```vb  
Dim fullname1 As String = Request.QueryString("fullname")  
Dim fullname2 As String = Request("fullname")  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-409">Ottiene l'URL non elaborato della richiesta corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-409">Gets the raw URL of the current request.</span></span></summary>
        <value><span data-ttu-id="b0963-410">URL non elaborato della richiesta corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-410">The raw URL of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-411">L'URL non elaborato è definito come parte dell'URL dopo le informazioni di dominio.</span><span class="sxs-lookup"><span data-stu-id="b0963-411">The raw URL is defined as the part of the URL following the domain information.</span></span> <span data-ttu-id="b0963-412">Nella stringa dell'URL http://www.contoso.com/articles/recent.aspx, l'URL non elaborato è /articles/recent.aspx.</span><span class="sxs-lookup"><span data-stu-id="b0963-412">In the URL string http://www.contoso.com/articles/recent.aspx, the raw URL is /articles/recent.aspx.</span></span> <span data-ttu-id="b0963-413">L'URL non elaborato include la stringa di query, se presente.</span><span class="sxs-lookup"><span data-stu-id="b0963-413">The raw URL includes the query string, if present.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0963-414">Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.HttpUtility.HtmlEncode%2A> metodo per la codifica HTML il valore della <xref:System.Web.HttpRequest.RawUrl%2A> proprietà e <xref:System.IO.TextWriter.WriteLine%2A> metodo per scrivere il valore codificato nel file.</span><span class="sxs-lookup"><span data-stu-id="b0963-414">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.RawUrl%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="b0963-415">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="b0963-415">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadEntityBodyMode">
      <MemberSignature Language="C#" Value="public System.Web.ReadEntityBodyMode ReadEntityBodyMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.ReadEntityBodyMode ReadEntityBodyMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ReadEntityBodyMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadEntityBodyMode As ReadEntityBodyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ReadEntityBodyMode ReadEntityBodyMode { System::Web::ReadEntityBodyMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ReadEntityBodyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-416">Ottiene un valore che indica se il corpo dell'entità di richiesta è stato letto e, in caso affermativo, la modalità di lettura.</span><span class="sxs-lookup"><span data-stu-id="b0963-416">Gets a value that indicates whether the request entity body has been read, and if so, how it was read.</span></span></summary>
        <value><span data-ttu-id="b0963-417">Valore che indica come è stato letto il corpo dell'entità di richiesta oppure che il corpo non è stato letto.</span><span class="sxs-lookup"><span data-stu-id="b0963-417">The value that indicates how the request entity body was read, or that it has not been read.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-418">Questo metodo viene utilizzato per evitare l'eccezione che viene generata se il corpo dell'entità è già stato letto e viene effettuato un tentativo di lettura tramite un metodo non compatibile.</span><span class="sxs-lookup"><span data-stu-id="b0963-418">This method is used to avoid the exception that is thrown if the entity body has already been read and an attempt is made to read it by using an incompatible method.</span></span> <span data-ttu-id="b0963-419">Metodi e proprietà che leggono il corpo dell'entità includono quanto segue:</span><span class="sxs-lookup"><span data-stu-id="b0963-419">Methods and properties that read the entity body include the following:</span></span>  
  
-   <span data-ttu-id="b0963-420">La proprietà <xref:System.Web.HttpRequest.Form%2A>.</span><span class="sxs-lookup"><span data-stu-id="b0963-420">The <xref:System.Web.HttpRequest.Form%2A> property.</span></span>  
  
-   <span data-ttu-id="b0963-421">La proprietà <xref:System.Web.HttpRequest.Files%2A>.</span><span class="sxs-lookup"><span data-stu-id="b0963-421">The <xref:System.Web.HttpRequest.Files%2A> property.</span></span>  
  
-   <span data-ttu-id="b0963-422">La proprietà <xref:System.Web.HttpRequest.InputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="b0963-422">The <xref:System.Web.HttpRequest.InputStream%2A> property.</span></span>  
  
-   <span data-ttu-id="b0963-423">Metodo <xref:System.Web.HttpRequest.GetBufferedInputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="b0963-423">The <xref:System.Web.HttpRequest.GetBufferedInputStream%2A> method.</span></span>  
  
-   <span data-ttu-id="b0963-424">Metodo <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="b0963-424">The <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestContext">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RequestContext RequestContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RequestContext RequestContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RequestContext" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestContext As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RequestContext ^ RequestContext { System::Web::Routing::RequestContext ^ get(); void set(System::Web::Routing::RequestContext ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RequestContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-425">Ottiene l'istanza di <see cref="T:System.Web.Routing.RequestContext" /> della richiesta corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-425">Gets the <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span></span></summary>
        <value><span data-ttu-id="b0963-426">Istanza di <see cref="T:System.Web.Routing.RequestContext" /> della richiesta corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-426">The <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span></span> <span data-ttu-id="b0963-427">Per le richieste non indirizzate, l'oggetto <see cref="T:System.Web.Routing.RequestContext" /> restituito è vuoto.</span><span class="sxs-lookup"><span data-stu-id="b0963-427">For non-routed requests, the <see cref="T:System.Web.Routing.RequestContext" /> object that is returned is empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-428">Questa proprietà fornisce l'accesso per il <xref:System.Web.Routing.RouteData> oggetto per la richiesta corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-428">This property provides access to the <xref:System.Web.Routing.RouteData> object for the current request.</span></span> <span data-ttu-id="b0963-429">Per ulteriori informazioni sul routing di ASP.NET, vedere. [Routing ASP.NET](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span><span class="sxs-lookup"><span data-stu-id="b0963-429">For more information about ASP.NET routing, see.[ASP.NET Routing](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestType">
      <MemberSignature Language="C#" Value="public string RequestType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RequestType" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-430">Ottiene o imposta il metodo di trasferimento dei dati HTTP (<see langword="GET" /> o <see langword="POST" />) usato dal client.</span><span class="sxs-lookup"><span data-stu-id="b0963-430">Gets or sets the HTTP data transfer method (<see langword="GET" /> or <see langword="POST" />) used by the client.</span></span></summary>
        <value><span data-ttu-id="b0963-431">Stringa che rappresenta il tipo di chiamata HTTP inviata dal client.</span><span class="sxs-lookup"><span data-stu-id="b0963-431">A string representing the HTTP invocation type sent by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0963-432">Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.HttpUtility.HtmlEncode%2A> metodo per la codifica HTML il valore della <xref:System.Web.HttpRequest.RequestType%2A> proprietà e <xref:System.IO.TextWriter.WriteLine%2A> metodo per scrivere il valore codificato nel file.</span><span class="sxs-lookup"><span data-stu-id="b0963-432">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.RequestType%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="b0963-433">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="b0963-433">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename, bool includeHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename, bool includeHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.SaveAs(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String, includeHeaders As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename, bool includeHeaders);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="includeHeaders" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="b0963-434">Percorso dell'unità fisica.</span><span class="sxs-lookup"><span data-stu-id="b0963-434">The physical drive path.</span></span></param>
        <param name="includeHeaders"><span data-ttu-id="b0963-435">Valore booleano che specifica se un'intestazione HTTP deve essere salvata su disco.</span><span class="sxs-lookup"><span data-stu-id="b0963-435">A Boolean value specifying whether an HTTP header should be saved to disk.</span></span></param>
        <summary><span data-ttu-id="b0963-436">Salva una richiesta HTTP su disco.</span><span class="sxs-lookup"><span data-stu-id="b0963-436">Saves an HTTP request to disk.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-437">Il contesto della richiesta di salvataggio su disco può essere utile per il debug.</span><span class="sxs-lookup"><span data-stu-id="b0963-437">Saving the request context to disk can be useful in debugging.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0963-438">Nell'esempio di codice viene chiamato il <xref:System.Web.HttpRequest.SaveAs%2A> metodo quando viene caricata una pagina.</span><span class="sxs-lookup"><span data-stu-id="b0963-438">The following code example calls the <xref:System.Web.HttpRequest.SaveAs%2A> method when a page is loaded.</span></span> <span data-ttu-id="b0963-439">La chiamata specifica che la richiesta di essere salvato come file di testo in una directory in cui l'identità del processo ASP.NET dispone delle autorizzazioni di scrittura e che le informazioni di intestazione inclusione nella richiesta sono incluso nel file.</span><span class="sxs-lookup"><span data-stu-id="b0963-439">The call specifies that the request be saved as a text file in a directory where the ASP.NET process identity has been granted write permissions, and that any header information included in the request is included in the file.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample6/cs/requestsample6cs.aspx#1)]
 [!code-vb[System.Web.HttpRequest_Sample6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample6/vb/requestsample6vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b0963-440">La proprietà <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> dell'oggetto <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> è impostata su <see langword="true" />, ma <paramref name="filename" /> non è un percorso assoluto.</span><span class="sxs-lookup"><span data-stu-id="b0963-440">The <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> property of the <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> is set to <see langword="true" /> but <paramref name="filename" /> is not an absolute path.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection ServerVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection ServerVariables" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ServerVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerVariables As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ ServerVariables { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-441">Ottiene una raccolta di variabili server Web.</span><span class="sxs-lookup"><span data-stu-id="b0963-441">Gets a collection of Web server variables.</span></span></summary>
        <value><span data-ttu-id="b0963-442">Oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> di variabili server.</span><span class="sxs-lookup"><span data-stu-id="b0963-442">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of server variables.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-443">Per un elenco di variabili server supportate da IIS, vedere [variabili del Server IIS](http://go.microsoft.com/fwlink/?LinkId=52471).</span><span class="sxs-lookup"><span data-stu-id="b0963-443">For a list of server variables supported by IIS, see [IIS Server Variables](http://go.microsoft.com/fwlink/?LinkId=52471).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0963-444">Esempio di codice seguente consente di visualizzare i nomi e valori di tutte le variabili di server specificato.</span><span class="sxs-lookup"><span data-stu-id="b0963-444">The following code example displays the names and values of all named server variables.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ServerVariables Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ServerVariables Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ServerVariables Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ServerVariables Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimedOutToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken TimedOutToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken TimedOutToken" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TimedOutToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimedOutToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken TimedOutToken { System::Threading::CancellationToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-445">Ottiene un oggetto <see cref="T:System.Threading.CancellationToken" /> che viene attivato quando scade una richiesta.</span><span class="sxs-lookup"><span data-stu-id="b0963-445">Gets a <see cref="T:System.Threading.CancellationToken" /> object that is tripped when a request times out.</span></span></summary>
        <value><span data-ttu-id="b0963-446">Token di annullamento.</span><span class="sxs-lookup"><span data-stu-id="b0963-446">The cancellation token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-447">Il periodo di timeout può essere specificato nel file Web. config (vedere <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType>) o a livello di codice (vedere <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="b0963-447">The timeout period can be specified in the Web.config file (see <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType>) or programmatically (see <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType>).</span></span> <span data-ttu-id="b0963-448">Il periodo di timeout viene misurato dal momento in cui che la richiesta.</span><span class="sxs-lookup"><span data-stu-id="b0963-448">The timeout period is measured from the time the request comes in.</span></span> <span data-ttu-id="b0963-449">Se il timeout predefinito di secondi 110 è attiva, il token di annullamento verrà attivato non precedente rispetto a 110 secondi dopo l'inizio dell'elaborazione della richiesta.</span><span class="sxs-lookup"><span data-stu-id="b0963-449">If the default timeout of 110 seconds is in effect, the cancellation token will be tripped no earlier than 110 seconds after request processing begins.</span></span> <span data-ttu-id="b0963-450">È possibile modificare il <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType> valore della proprietà e come tempo questo token non è stato attivato ancora, il nuovo valore di timeout verrà rispettato.</span><span class="sxs-lookup"><span data-stu-id="b0963-450">You can change the <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType> property value, and as long this token hasn't tripped yet, the new timeout value will be respected.</span></span>  
  
 <span data-ttu-id="b0963-451">Il token fornisce attualmente solo 15 granularità secondo, che significa che se il valore di timeout è 110 secondi, il token verrà essere attivato in un intervallo di tempo tra 110 e 125 secondi dopo l'inizio dell'elaborazione della richiesta.</span><span class="sxs-lookup"><span data-stu-id="b0963-451">Currently the token only provides 15 second granularity, which means that if the timeout value is 110 seconds, the token will be tripped sometime between 110 and 125 seconds after request processing begins.</span></span> <span data-ttu-id="b0963-452">La granularità potrebbe cambiare in futuro.</span><span class="sxs-lookup"><span data-stu-id="b0963-452">The granularity may change in the future.</span></span>  
  
 <span data-ttu-id="b0963-453">Anche se questa proprietà è thread-safe, esistono restrizioni per l'uso.</span><span class="sxs-lookup"><span data-stu-id="b0963-453">Even though this property is thread-safe, there are restrictions on its use.</span></span> <span data-ttu-id="b0963-454">Per ulteriori informazioni, vedere <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b0963-454">For more information, see <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b0963-455">Questa proprietà non produce alcun effetto se è stata avviata l'elaborazione della richiesta WebSocket.</span><span class="sxs-lookup"><span data-stu-id="b0963-455">This property is meaningless if WebSockets request processing has started.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TlsTokenBindingInfo">
      <MemberSignature Language="C#" Value="public System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TlsTokenBindingInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TlsTokenBindingInfo As ITlsTokenBindingInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ITlsTokenBindingInfo ^ TlsTokenBindingInfo { System::Web::ITlsTokenBindingInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ITlsTokenBindingInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-456">Ottiene le informazioni di associazione dei token TLS.</span><span class="sxs-lookup"><span data-stu-id="b0963-456">Gets the TLS token binding information.</span></span> <span data-ttu-id="b0963-457">La proprietà consente alle applicazioni di recuperare informazioni sul token da richieste HTTP in ingresso per l'autenticazione avanzata.</span><span class="sxs-lookup"><span data-stu-id="b0963-457">The property enables applications to retrieve token information from incoming HTTP requests for enhanced authentication.</span></span></summary>
        <value><span data-ttu-id="b0963-458">Token di associazione per la connessione corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-458">The binding token for the current connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-459">Questa proprietà restituisce `null` su piattaforme non windows10.</span><span class="sxs-lookup"><span data-stu-id="b0963-459">This property returns `null` on non-windows10 platforms.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalBytes">
      <MemberSignature Language="C#" Value="public int TotalBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalBytes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TotalBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalBytes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalBytes { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-460">Ottiene il numero di byte nel flusso di input corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-460">Gets the number of bytes in the current input stream.</span></span></summary>
        <value><span data-ttu-id="b0963-461">Numero di byte nel flusso di input.</span><span class="sxs-lookup"><span data-stu-id="b0963-461">The number of bytes in the input stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0963-462">Esempio di codice seguente determina se il <xref:System.Web.HttpRequest.TotalBytes%2A> valore della proprietà è maggiore di 1000 byte e scrive le informazioni in un file.</span><span class="sxs-lookup"><span data-stu-id="b0963-462">The following code example determines whether the <xref:System.Web.HttpRequest.TotalBytes%2A> property value is greater than 1000 bytes and writes that information to a file.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#6)]
 [!code-vb[System.Web.HttpRequest_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unvalidated">
      <MemberSignature Language="C#" Value="public System.Web.UnvalidatedRequestValues Unvalidated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UnvalidatedRequestValues Unvalidated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Unvalidated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Unvalidated As UnvalidatedRequestValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UnvalidatedRequestValues ^ Unvalidated { System::Web::UnvalidatedRequestValues ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UnvalidatedRequestValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-463">Ottiene i valori delle richieste HTTP senza attivare la convalida delle richieste.</span><span class="sxs-lookup"><span data-stu-id="b0963-463">Gets the HTTP request values without triggering request validation.</span></span></summary>
        <value><span data-ttu-id="b0963-464">Valori delle richieste HTTP che non sono stati controllati usando la convalida delle richieste.</span><span class="sxs-lookup"><span data-stu-id="b0963-464">The HTTP request values that have not been checked using request validation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-465">Richiesta di controlli di convalida per il markup HTML e script che potrebbero indicare un potenziale attacco di script tra siti.</span><span class="sxs-lookup"><span data-stu-id="b0963-465">Request validation checks for HTML markup and script that might indicate a potential cross-site scripting attack.</span></span> <span data-ttu-id="b0963-466">Per impostazione predefinita, tutti i valori sono controllati usando la convalida delle richieste e se i valori contengono markup o uno script, ASP.NET genera un <xref:System.Web.HttpRequestValidationException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="b0963-466">By default, all values are checked using request validation and if any values contain markup or script, ASP.NET throws an <xref:System.Web.HttpRequestValidationException> exception.</span></span> <span data-ttu-id="b0963-467">Utilizzare questo metodo se si prevede che la richiesta contiene markup (ad esempio, si consente agli utenti di pubblicare il contenuto che contiene markup) e si desidera ottenere il valore non elaborato di una richiesta.</span><span class="sxs-lookup"><span data-stu-id="b0963-467">Use this method if you anticipate that the request will contain markup (for example, you are allowing users to post content that contains markup) and you want to get the raw value of a request.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b0963-468">Se si utilizza questa proprietà, è necessario controllare manualmente i dati per potenziali attacchi script tra siti.</span><span class="sxs-lookup"><span data-stu-id="b0963-468">If you use this property, you must manually check the data for potential cross-site scripting attacks.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UnvalidatedRequestValues" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-469">Ottiene informazioni sull'URL della richiesta corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-469">Gets information about the URL of the current request.</span></span></summary>
        <value><span data-ttu-id="b0963-470">Oggetto <see cref="T:System.Uri" /> che contiene l'URL della richiesta corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-470">A <see cref="T:System.Uri" /> object that contains the URL of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0963-471">Nell'esempio di codice riportato di seguito viene assegnato il <xref:System.Uri> oggetto della richiesta corrente a una variabile oggetto e consente di visualizzare il valore di due proprietà dell'URL dell'oggetto nell'output HTTP.</span><span class="sxs-lookup"><span data-stu-id="b0963-471">The following code example assigns the <xref:System.Uri> object of the current request to an object variable and displays the value of two properties of the URL object to the HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Url Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Url Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Url Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Url Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Uri" />
        <altmember cref="P:System.Web.HttpRequest.RawUrl" />
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-472">Ottiene informazioni sull'URL della richiesta precedente del client collegato all'URL corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-472">Gets information about the URL of the client's previous request that linked to the current URL.</span></span></summary>
        <value><span data-ttu-id="b0963-473">Un oggetto <see cref="T:System.Uri" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-473">A <see cref="T:System.Uri" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0963-474">Esempio di codice seguente consente di visualizzare il valore di due proprietà dell'URL a cui il client all'applicazione corrente.</span><span class="sxs-lookup"><span data-stu-id="b0963-474">The following code example displays the value of two properties of the URL that referred the client to the current application.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UrlReferrer Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UrlReferrer Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UrlReferrer Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UrlReferrer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="b0963-475">L'intestazione della richiesta <see langword="Referer" /> HTTP è in formato non valido e non può essere convertita in un oggetto <see cref="T:System.Uri" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-475">The HTTP <see langword="Referer" /> request header is malformed and cannot be converted to a <see cref="T:System.Uri" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-476">Ottiene la stringa dell'agente utente non elaborata del browser client.</span><span class="sxs-lookup"><span data-stu-id="b0963-476">Gets the raw user agent string of the client browser.</span></span></summary>
        <value><span data-ttu-id="b0963-477">Stringa dell'agente utente non elaborata del browser client.</span><span class="sxs-lookup"><span data-stu-id="b0963-477">The raw user agent string of the client browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0963-478">Esempio di codice seguente assegna l'identificazione del tipo di browser richiedente a una variabile di stringa.</span><span class="sxs-lookup"><span data-stu-id="b0963-478">The following code example assigns the type identification of the requesting browser to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UserAgent Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UserAgent Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UserAgent Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UserAgent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.Browser" />
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-479">Ottiene l'indirizzo host IP del client remoto.</span><span class="sxs-lookup"><span data-stu-id="b0963-479">Gets the IP host address of the remote client.</span></span></summary>
        <value><span data-ttu-id="b0963-480">Indirizzo IP del client remoto.</span><span class="sxs-lookup"><span data-stu-id="b0963-480">The IP address of the remote client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0963-481">Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.HttpUtility.HtmlEncode%2A> metodo per la codifica HTML il valore della <xref:System.Web.HttpRequest.UserHostAddress%2A> proprietà e <xref:System.IO.TextWriter.WriteLine%2A> metodo per scrivere il valore codificato nel file.</span><span class="sxs-lookup"><span data-stu-id="b0963-481">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.UserHostAddress%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="b0963-482">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="b0963-482">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-483">Ottiene il nome DNS del client remoto.</span><span class="sxs-lookup"><span data-stu-id="b0963-483">Gets the DNS name of the remote client.</span></span></summary>
        <value><span data-ttu-id="b0963-484">Nome DNS del client remoto.</span><span class="sxs-lookup"><span data-stu-id="b0963-484">The DNS name of the remote client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0963-485">Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.HttpUtility.HtmlEncode%2A> metodo per la codifica HTML il valore della <xref:System.Web.HttpRequest.UserHostName%2A> proprietà e <xref:System.IO.TextWriter.WriteLine%2A> metodo per scrivere il valore codificato nel file.</span><span class="sxs-lookup"><span data-stu-id="b0963-485">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.UserHostName%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="b0963-486">Questo esempio di codice fa parte di un esempio più esaustivo disponibile per la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="b0963-486">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0963-487">Ottiene una matrice di stringhe ordinata di preferenze linguistiche del client.</span><span class="sxs-lookup"><span data-stu-id="b0963-487">Gets a sorted string array of client language preferences.</span></span></summary>
        <value><span data-ttu-id="b0963-488">Matrice di stringhe ordinata di preferenze linguistiche del client oppure <see langword="null" /> se è vuota.</span><span class="sxs-lookup"><span data-stu-id="b0963-488">A sorted string array of client language preferences, or <see langword="null" /> if empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0963-489">Esempio di codice seguente consente di acquisire i valori multipli restituiti dal <xref:System.Web.HttpRequest.UserLanguages%2A> proprietà in una matrice di stringhe e scrive il nome di ogni lingua su una riga separata dell'output HTTP.</span><span class="sxs-lookup"><span data-stu-id="b0963-489">The following code example captures the multiple values returned by the <xref:System.Web.HttpRequest.UserLanguages%2A> property into a string array and writes each language name to a separate line of HTTP output.</span></span>  
  
 <span data-ttu-id="b0963-490">I nomi di linguaggio vengono forniti dal browser, ed è presente alcun elenco di tutti i codici possibili definitivo.</span><span class="sxs-lookup"><span data-stu-id="b0963-490">The language names are provided by the browser, and there is no definitive list of all possible codes.</span></span>  <span data-ttu-id="b0963-491">In genere costituiti da un codici a due caratteri per la lingua, un trattino e un codice di due caratteri per le impostazioni cultura, ad esempio "en-us" per gli Stati Uniti Inglese e "fr-ca" per il francese canadese.</span><span class="sxs-lookup"><span data-stu-id="b0963-491">Typically these consist of a two-character codes for the language, a hyphen, and a two-character code for the culture, such as "en-us" for U.S. English and "fr-ca" for Canadian French.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UserLanguages Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UserLanguages Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UserLanguages Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UserLanguages Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public void ValidateInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateInput();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0963-492">Determina la convalida delle raccolte accessibili mediante le proprietà <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" /> e <see cref="P:System.Web.HttpRequest.QueryString" />.</span><span class="sxs-lookup"><span data-stu-id="b0963-492">Causes validation to occur for the collections accessed through the <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" />, and <see cref="P:System.Web.HttpRequest.QueryString" /> properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0963-493">Il <xref:System.Web.HttpRequest> classe utilizza il flag di convalida dell'input per tenere traccia se si desidera eseguire la convalida degli insiemi di richieste tramiti il <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, e <xref:System.Web.HttpRequest.QueryString%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="b0963-493">The <xref:System.Web.HttpRequest> class uses input validation flags to track whether to perform validation on the request collections accessed through the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, and <xref:System.Web.HttpRequest.QueryString%2A> properties.</span></span> <span data-ttu-id="b0963-494">Il <xref:System.Web.HttpRequest.ValidateInput%2A> metodo imposta questi flag, che, quando le funzioni di accesso get di <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, o <xref:System.Web.HttpRequest.QueryString%2A> proprietà vengono richiamati, viene eseguita la convalida dell'input.</span><span class="sxs-lookup"><span data-stu-id="b0963-494">The <xref:System.Web.HttpRequest.ValidateInput%2A> method sets these flags so that when the get accessors for the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, or <xref:System.Web.HttpRequest.QueryString%2A> property are invoked, input validation is performed.</span></span> <span data-ttu-id="b0963-495">La convalida funziona controllando tutti i dati di input con un elenco hardcoded di dati potenzialmente pericolosi.</span><span class="sxs-lookup"><span data-stu-id="b0963-495">Validation works by checking all input data against a hard-coded list of potentially dangerous data.</span></span>  
  
 <span data-ttu-id="b0963-496">Se la funzionalità di convalida è abilitata dall'istruzione di pagina o una configurazione, questo metodo viene chiamato durante la pagina `ProcessRequest` fase di elaborazione.</span><span class="sxs-lookup"><span data-stu-id="b0963-496">If the validation feature is enabled by page directive or configuration, this method is called during the page's `ProcessRequest` processing phase.</span></span> <span data-ttu-id="b0963-497">Il <xref:System.Web.HttpRequest.ValidateInput%2A> metodo può essere chiamato dal codice, se non è abilitata la funzionalità di convalida.</span><span class="sxs-lookup"><span data-stu-id="b0963-497">The <xref:System.Web.HttpRequest.ValidateInput%2A> method can be called by your code if the validation feature is not enabled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpRequestValidationException"><span data-ttu-id="b0963-498">Il client ha ricevuto dati potenzialmente pericolosi.</span><span class="sxs-lookup"><span data-stu-id="b0963-498">Potentially dangerous data was received from the client.</span></span></exception>
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
  </Members>
</Type>