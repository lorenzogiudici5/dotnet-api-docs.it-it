<Type Name="HttpCookieCollection" FullName="System.Web.HttpCookieCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a595e24d5bb12321103ca604d55d64744755a22b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30609495" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpCookieCollection : System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpCookieCollection extends System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpCookieCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpCookieCollection&#xA;Inherits NameObjectCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCookieCollection sealed : System::Collections::Specialized::NameObjectCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Specialized.NameObjectCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d9d97-101">Fornisce un modo indipendente dai tipi per modificare i cookie HTTP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d9d97-101">Provides a type-safe way to manipulate HTTP cookies.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d9d97-102">Esempio di codice riportato di seguito viene illustrato come leggere i cookie utilizzando il <xref:System.Web.HttpRequest.Cookies%2A> proprietà del <xref:System.Web.HttpRequest> dell'oggetto e scrivere i cookie utilizzando il <xref:System.Web.HttpResponse.Cookies%2A> proprietà del <xref:System.Web.HttpResponse> oggetto.</span><span class="sxs-lookup"><span data-stu-id="d9d97-102">The following code example demonstrates how to read cookies using the <xref:System.Web.HttpRequest.Cookies%2A> property of the <xref:System.Web.HttpRequest> object and write cookies using the <xref:System.Web.HttpResponse.Cookies%2A> property of the <xref:System.Web.HttpResponse> object.</span></span> <span data-ttu-id="d9d97-103">Entrambe restituiscono <xref:System.Web.HttpCookieCollection> oggetti.</span><span class="sxs-lookup"><span data-stu-id="d9d97-103">Both properties return <xref:System.Web.HttpCookieCollection> objects.</span></span> <span data-ttu-id="d9d97-104">Se uno dei due cookie denominato `userName` e `lastVisit` non sono nella richiesta HTTP, quindi vengono creati nella risposta HTTP.</span><span class="sxs-lookup"><span data-stu-id="d9d97-104">If either of two cookies named `userName` and `lastVisit` are not in the HTTP request, then they are created in the HTTP response.</span></span> <span data-ttu-id="d9d97-105">Se esistono due cookie, vengono visualizzate le proprietà dei cookie.</span><span class="sxs-lookup"><span data-stu-id="d9d97-105">If the two cookies exist, the properties of the cookies are displayed.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpCookieCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpCookieCollection/cs/HttpCookieCollection.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpCookieCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpCookieCollection/vb/HttpCookieCollection.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpCookie" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookieCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCookieCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9d97-106">Inizializza una nuova istanza della classe <see cref="T:System.Web.HttpCookieCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-106">Initializes a new instance of the <see cref="T:System.Web.HttpCookieCollection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9d97-107">ASP.NET include due raccolte di cookie intrinseca.</span><span class="sxs-lookup"><span data-stu-id="d9d97-107">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="d9d97-108">La raccolta è accessibile tramite <xref:System.Web.HttpRequest.Cookies%2A> contiene i cookie trasmessi dal client al server nel `Cookie` intestazione.</span><span class="sxs-lookup"><span data-stu-id="d9d97-108">The collection accessible through <xref:System.Web.HttpRequest.Cookies%2A> contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="d9d97-109">La raccolta è accessibile tramite <xref:System.Web.HttpResponse.Cookies%2A> contiene i cookie generati nel server e trasmesso al client il `Set-Cookie` intestazione.</span><span class="sxs-lookup"><span data-stu-id="d9d97-109">The collection accessible through <xref:System.Web.HttpResponse.Cookies%2A> contains cookies generated on the server and transmitted to the client in the `Set-Cookie` header.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9d97-110">Nell'esempio seguente viene creato un nuovo oggetto raccolta di cookie e vi collocherà i cookie ricevuti dal client.</span><span class="sxs-lookup"><span data-stu-id="d9d97-110">The following example creates a new cookie collection object and fills it with the cookies received from the client.</span></span>  
  
 [!code-csharp[Classic HttpCookieCollection.HttpCookieCollection Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.HttpCookieCollection Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.HttpCookieCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.HttpCookieCollection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="T:System.Web.HttpResponse" />
        <altmember cref="T:System.Web.HttpCookie" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.HttpCookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.HttpCookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Add(System.Web.HttpCookie)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (cookie As HttpCookie)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::HttpCookie ^ cookie);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Web.HttpCookie" />
      </Parameters>
      <Docs>
        <param name="cookie">
          <span data-ttu-id="d9d97-111">Oggetto <see cref="T:System.Web.HttpCookie" /> da aggiungere alla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-111">The <see cref="T:System.Web.HttpCookie" /> to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9d97-112">Aggiunge il cookie specificato alla raccolta di cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-112">Adds the specified cookie to the cookie collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9d97-113">Può esistere un numero qualsiasi di insiemi di cookie all'interno di un'applicazione, ma solo la raccolta a cui fa riferimento la funzione intrinseca <xref:System.Web.HttpResponse.Cookies%2A> l'oggetto viene inviato al client.</span><span class="sxs-lookup"><span data-stu-id="d9d97-113">Any number of cookie collections can exist within an application, but only the collection referenced by the intrinsic <xref:System.Web.HttpResponse.Cookies%2A> object is sent to the client.</span></span>  
  
 <span data-ttu-id="d9d97-114">Il <xref:System.Web.HttpCookieCollection.Add%2A> metodo consente di cookie duplicati nella raccolta di cookie.</span><span class="sxs-lookup"><span data-stu-id="d9d97-114">The <xref:System.Web.HttpCookieCollection.Add%2A> method allows duplicate cookies in the cookie collection.</span></span> <span data-ttu-id="d9d97-115">Utilizzare il <xref:System.Web.HttpCookieCollection.Set%2A> metodo per garantire l'univocità dei cookie nella raccolta di cookie.</span><span class="sxs-lookup"><span data-stu-id="d9d97-115">Use the <xref:System.Web.HttpCookieCollection.Set%2A> method to ensure the uniqueness of cookies in the cookie collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9d97-116">Nell'esempio seguente crea una nuova raccolta di cookie e un nuovo cookie denominato "tal caso, ne imposta il valore del cookie per la data e ora correnti e il cookie viene aggiunto alla nuova raccolta.</span><span class="sxs-lookup"><span data-stu-id="d9d97-116">The following example creates a new cookie collection and a new cookie named "LastVisit", sets the value of the cookie to the current date and time, and adds the cookie to the new collection.</span></span>  
  
 [!code-csharp[Classic HttpCookieCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Add Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Clear" />
        <altmember cref="M:System.Web.HttpCookieCollection.Set(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <Member MemberName="AllKeys">
      <MemberSignature Language="C#" Value="public string[] AllKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AllKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookieCollection.AllKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllKeys As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AllKeys { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9d97-117">Ottiene una matrice di stringhe contenente tutte le chiavi (nomi di cookie) nella raccolta di cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-117">Gets a string array containing all the keys (cookie names) in the cookie collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9d97-118">Matrice di nomi di cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-118">An array of cookie names.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d9d97-119">L'esempio seguente crea una matrice di stringhe contenente i nomi dei cookie nella raccolta di cookie del client.</span><span class="sxs-lookup"><span data-stu-id="d9d97-119">The following example creates a string array containing the names of the cookies in a client's cookie collection.</span></span>  
  
 [!code-csharp[Classic HttpCookieCollection.AllKeys Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.AllKeys Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.AllKeys Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.AllKeys Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpCookieCollection.Item" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9d97-120">Cancella tutti i cookie dalla raccolta di cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-120">Clears all cookies from the cookie collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d9d97-121">Nell'esempio seguente elimina tutti i cookie da una raccolta di cookie.</span><span class="sxs-lookup"><span data-stu-id="d9d97-121">The following example deletes all cookies from a cookie collection.</span></span>  
  
 [!code-csharp[Classic HttpCookieCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Add(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Array ^ dest, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">
          <span data-ttu-id="d9d97-122">Il <see cref="T:System.Array" /> di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-122">The destination <see cref="T:System.Array" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="d9d97-123">Indice della matrice di destinazione in cui ha inizio la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-123">The index of the destination array where copying starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9d97-124">Copia i membri della raccolta di cookie in un elemento <see cref="T:System.Array" /> a partire dall'indice specificato della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-124">Copies members of the cookie collection to an <see cref="T:System.Array" /> beginning at the specified index of the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d9d97-125">Nell'esempio seguente copia la raccolta di cookie intera in un nuovo oggetto matrice.</span><span class="sxs-lookup"><span data-stu-id="d9d97-125">The following example copies the entire cookie collection into a new Array object.</span></span>  
  
 [!code-csharp[Classic HttpCookieCollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Clear" />
        <altmember cref="M:System.Web.HttpCookieCollection.Add(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d9d97-126">Restituisce un singolo oggetto <see cref="T:System.Web.HttpCookie" /> dalla raccolta di cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-126">Returns an individual <see cref="T:System.Web.HttpCookie" /> object from the cookie collection.</span>
          </span>
          <span data-ttu-id="d9d97-127">Questa proprietà è in overload per consentire il recupero dei cookie per nome o indice numerico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-127">This property is overloaded to allow retrieval of cookies by either name or numerical index.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookie Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.HttpCookie Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Get(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (index As Integer) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::HttpCookie ^ Get(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="d9d97-128">Indice del cookie da restituire dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-128">The index of the cookie to return from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9d97-129">Restituisce l'elemento <see cref="T:System.Web.HttpCookie" /> con l'indice specificato dalla raccolta di cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-129">Returns the <see cref="T:System.Web.HttpCookie" /> item with the specified index from the cookie collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9d97-130">
            <see cref="T:System.Web.HttpCookie" /> specificato da <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-130">The <see cref="T:System.Web.HttpCookie" /> specified by <paramref name="index" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d9d97-131">Nell'esempio seguente viene restituito ogni cookie dalla raccolta di cookie, controlla se il nome "tal caso, ne e, in tal caso, ne" viene trovato, aggiornato il valore per la data e ora correnti.</span><span class="sxs-lookup"><span data-stu-id="d9d97-131">The following example returns each cookie from the cookie collection, checks whether it is named "LastVisit", and, if "LastVisit" is found, updates its value to the current date and time.</span></span>  
  
 [!code-csharp[Classic HttpCookieCollection.Get1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Get1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Get1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Get1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Set(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookie Get (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.HttpCookie Get(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (name As String) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::HttpCookie ^ Get(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d9d97-132">Nome del cookie da recuperare dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-132">The name of the cookie to retrieve from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9d97-133">Restituisce il cookie con il nome specificato dalla raccolta di cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-133">Returns the cookie with the specified name from the cookie collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9d97-134">
            <see cref="T:System.Web.HttpCookie" /> specificato da <paramref name="name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-134">The <see cref="T:System.Web.HttpCookie" /> specified by <paramref name="name" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9d97-135">Se il cookie denominato non esiste, questo metodo crea un nuovo cookie con lo stesso nome.</span><span class="sxs-lookup"><span data-stu-id="d9d97-135">If the named cookie does not exist, this method creates a new cookie with that name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9d97-136">Nell'esempio seguente acquisisce la raccolta di cookie inviata dal client in una nuova raccolta di cookie, recupera il cookie denominato "tal caso, ne dalla nuova raccolta e aggiorna il valore del cookie per la data e ora correnti.</span><span class="sxs-lookup"><span data-stu-id="d9d97-136">The following example captures the cookie collection sent by the client into a new cookie collection, retrieves the cookie named "LastVisit" from the new collection, and updates the cookie's value to the current date and time.</span></span>  
  
 [!code-csharp[Classic HttpCookieCollection.Get Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Get Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Set(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public string GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetKey (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetKey(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="d9d97-137">Indice della chiave da recuperare dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-137">The index of the key to retrieve from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9d97-138">Restituisce la chiave (nome) del cookie in corrispondenza dell'indice numerico specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-138">Returns the key (name) of the cookie at the specified numerical index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9d97-139">Nome del cookie specificato da <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-139">The name of the cookie specified by <paramref name="index" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d9d97-140">Nell'esempio seguente viene restituito ogni cookie dalla raccolta di cookie, controlla se il nome "tal caso, ne e, in tal caso, ne" viene trovato, aggiornato il valore per la data e ora correnti.</span><span class="sxs-lookup"><span data-stu-id="d9d97-140">The following example returns each cookie from the cookie collection, checks whether it is named "LastVisit", and, if "LastVisit" is found, updates its value to the current date and time.</span></span>  
  
 [!code-csharp[Classic HttpCookieCollection.GetKey Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.GetKey Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.GetKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.GetKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d9d97-141">Ottiene il cookie con il nome specificato dalla raccolta di cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-141">Gets the cookie with the specified name from the cookie collection.</span>
          </span>
          <span data-ttu-id="d9d97-142">Questa proprietà è in overload per consentire il recupero dei cookie per nome o indice numerico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-142">This property is overloaded to allow retrieval of cookies by either name or numerical index.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookie this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookie Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookieCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookie ^ default[int] { System::Web::HttpCookie ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="d9d97-143">Indice del cookie da recuperare dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-143">The index of the cookie to retrieve from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9d97-144">Ottiene il cookie con l'indice numerico specificato dalla raccolta di cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-144">Gets the cookie with the specified numerical index from the cookie collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9d97-145">
            <see cref="T:System.Web.HttpCookie" /> specificato da <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-145">The <see cref="T:System.Web.HttpCookie" /> specified by <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d9d97-146">Nell'esempio seguente archivia il nome del primo cookie come una variabile di tipo stringa (indice = 0) in una raccolta di cookie.</span><span class="sxs-lookup"><span data-stu-id="d9d97-146">The following example stores the name of the first cookie as a string variable (index = 0) in a cookie collection.</span></span>  
  
 [!code-csharp[Classic HttpCookieCollection.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpCookieCollection.Get" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookie this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookie Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookieCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookie ^ default[System::String ^] { System::Web::HttpCookie ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d9d97-147">Nome del cookie da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-147">Name of cookie to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9d97-148">Ottiene il cookie con il nome specificato dalla raccolta di cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-148">Gets the cookie with the specified name from the cookie collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9d97-149">Classe <see cref="T:System.Web.HttpCookie" /> specificata da <paramref name="name." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-149">The <see cref="T:System.Web.HttpCookie" /> specified by <paramref name="name." /></span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d9d97-150">Nell'esempio seguente ottiene i cookie con il nome "tal caso, ne ed estrae il relativo valore.</span><span class="sxs-lookup"><span data-stu-id="d9d97-150">The following example gets the cookie with the name "LastVisit" and extracts its value.</span></span>  
  
 [!code-csharp[Classic HttpCookieCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpCookieCollection.Get" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d9d97-151">Nome del cookie da rimuovere dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-151">The name of the cookie to remove from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9d97-152">Rimuove il cookie con il nome specificato dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-152">Removes the cookie with the specified name from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9d97-153">Se un cookie con l'oggetto specificato `name` non esiste nella raccolta, viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="d9d97-153">If a cookie with the specified `name` does not exist in the collection, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9d97-154">Nell'esempio seguente rimuove un cookie dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="d9d97-154">The following example removes a cookie from the collection.</span></span>  
  
 [!code-csharp[Classic HttpCookieCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Add(System.Web.HttpCookie)" />
        <altmember cref="M:System.Web.HttpCookieCollection.Set(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (System.Web.HttpCookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(class System.Web.HttpCookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Set(System.Web.HttpCookie)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (cookie As HttpCookie)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Set(System::Web::HttpCookie ^ cookie);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Web.HttpCookie" />
      </Parameters>
      <Docs>
        <param name="cookie">
          <span data-ttu-id="d9d97-155">Oggetto <see cref="T:System.Web.HttpCookie" /> da aggiornare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-155">The <see cref="T:System.Web.HttpCookie" /> object to update.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9d97-156">Aggiorna il valore di un cookie esistente in una raccolta di cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d97-156">Updates the value of an existing cookie in a cookie collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9d97-157">Il <xref:System.Web.HttpCookieCollection.Set%2A> metodo innanzitutto verifica se un cookie è già presente nella raccolta e, in tal caso viene aggiornato.</span><span class="sxs-lookup"><span data-stu-id="d9d97-157">The <xref:System.Web.HttpCookieCollection.Set%2A> method first checks to see if a cookie already exists in the collection and if so updates it.</span></span> <span data-ttu-id="d9d97-158">Il <xref:System.Web.HttpCookieCollection.Set%2A> metodo non consente i cookie duplicati nella raccolta di cookie.</span><span class="sxs-lookup"><span data-stu-id="d9d97-158">The <xref:System.Web.HttpCookieCollection.Set%2A> method does not allow duplicate cookies in the cookie collection.</span></span> <span data-ttu-id="d9d97-159">Per aggiungere cookie duplicati nella raccolta di cookie, utilizzare il <xref:System.Web.HttpCookieCollection.Add%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="d9d97-159">To add duplicate cookies in the cookie collection, use the <xref:System.Web.HttpCookieCollection.Add%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9d97-160">Nell'esempio seguente aggiorna il valore di un cookie esistente.</span><span class="sxs-lookup"><span data-stu-id="d9d97-160">The following example updates the value of an existing cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookieCollection.Set Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Set Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Set Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Set Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpCookieCollection.Get" />
        <altmember cref="M:System.Web.HttpCookieCollection.Add(System.Web.HttpCookie)" />
      </Docs>
    </Member>
  </Members>
</Type>