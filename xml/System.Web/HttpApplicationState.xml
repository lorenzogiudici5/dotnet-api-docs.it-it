<Type Name="HttpApplicationState" FullName="System.Web.HttpApplicationState">
  <TypeSignature Language="C#" Value="public sealed class HttpApplicationState : System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpApplicationState extends System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpApplicationState" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpApplicationState&#xA;Inherits NameObjectCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpApplicationState sealed : System::Collections::Specialized::NameObjectCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Specialized.NameObjectCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0871a-101">Abilita la condivisione delle informazioni globali tra più sessioni e richieste all'interno di un'applicazione ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="0871a-101">Enables sharing of global information across multiple sessions and requests within an ASP.NET application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0871a-102">Un'applicazione ASP.NET è la somma di tutti i file, pagine, i gestori, moduli e codice all'interno dell'ambito di una directory virtuale e nelle relative sottodirectory in un singolo server Web.</span><span class="sxs-lookup"><span data-stu-id="0871a-102">An ASP.NET application is the sum of all files, pages, handlers, modules, and code within the scope of a virtual directory and its subdirectories on a single Web server.</span></span>  
  
 <span data-ttu-id="0871a-103">Una singola istanza di un <xref:System.Web.HttpApplicationState> classe viene creata la prima volta che un client richiede una risorsa URL da all'interno di una particolare directory virtuale dell'applicazione ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="0871a-103">A single instance of an <xref:System.Web.HttpApplicationState> class is created the first time a client requests any URL resource from within a particular ASP.NET application virtual directory.</span></span> <span data-ttu-id="0871a-104">Una singola istanza separata viene creata per ogni applicazione ASP.NET in un server Web.</span><span class="sxs-lookup"><span data-stu-id="0871a-104">A separate single instance is created for each ASP.NET application on a Web server.</span></span> <span data-ttu-id="0871a-105">Un riferimento a ogni istanza viene quindi esposto tramite la funzione intrinseca <xref:System.Web.HttpContext.Application%2A> oggetto.</span><span class="sxs-lookup"><span data-stu-id="0871a-105">A reference to each instance is then exposed via the intrinsic <xref:System.Web.HttpContext.Application%2A> object.</span></span>  
  
 <span data-ttu-id="0871a-106">Lo stato dell'applicazione non è condivisa in una Web farm (in cui un'applicazione è ospitata in più server) o un Web garden (in cui un'applicazione è ospitata in più processi sullo stesso computer).</span><span class="sxs-lookup"><span data-stu-id="0871a-106">Application state is not shared across either a Web farm (in which an application is hosted across multiple servers) or a Web garden (in which an application is hosted across multiple processes on the same computer).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="0871a-107">Questo tipo è thread-safe.</span><span class="sxs-lookup"><span data-stu-id="0871a-107">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Web.HttpContext" />
    <altmember cref="T:System.Web.HttpApplication" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0871a-108">Nome dell'oggetto da aggiungere all'insieme.</span><span class="sxs-lookup"><span data-stu-id="0871a-108">The name of the object to be added to the collection.</span></span></param>
        <param name="value"><span data-ttu-id="0871a-109">Valore dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="0871a-109">The value of the object.</span></span></param>
        <summary><span data-ttu-id="0871a-110">Consente di aggiungere un nuovo oggetto all'insieme <see cref="T:System.Web.HttpApplicationState" />.</span><span class="sxs-lookup"><span data-stu-id="0871a-110">Adds a new object to the <see cref="T:System.Web.HttpApplicationState" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0871a-111">L'esempio seguente aggiunge due variabili di applicazione denominate MyAppVar1 e MyAppVar2 alla raccolta di applicazioni.</span><span class="sxs-lookup"><span data-stu-id="0871a-111">The following example adds two application variables named MyAppVar1 and MyAppVar2 to the Application collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Add Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllKeys">
      <MemberSignature Language="C#" Value="public string[] AllKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AllKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.AllKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllKeys As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AllKeys { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0871a-112">Restituisce le chiavi di accesso nell'insieme <see cref="T:System.Web.HttpApplicationState" />.</span><span class="sxs-lookup"><span data-stu-id="0871a-112">Gets the access keys in the <see cref="T:System.Web.HttpApplicationState" /> collection.</span></span></summary>
        <value><span data-ttu-id="0871a-113">Matrice di stringhe di nomi dell'oggetto <see cref="T:System.Web.HttpApplicationState" />.</span><span class="sxs-lookup"><span data-stu-id="0871a-113">A string array of <see cref="T:System.Web.HttpApplicationState" /> object names.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0871a-114">Nell'esempio seguente si riempie una matrice di stringhe con tutti i nomi degli oggetti nella raccolta degli Stati dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="0871a-114">The following example fills a string array with all the object names in the application state collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.AllKeys Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.AllKeys Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.AllKeys Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.AllKeys Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0871a-115">Rimuove tutti gli oggetti da un insieme <see cref="T:System.Web.HttpApplicationState" />.</span><span class="sxs-lookup"><span data-stu-id="0871a-115">Removes all objects from an <see cref="T:System.Web.HttpApplicationState" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0871a-116">Nell'esempio seguente rimuove tutti <xref:System.Web.HttpApplicationState> variabili dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="0871a-116">The following example removes all <xref:System.Web.HttpApplicationState> variables from the collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Contents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Contents" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.Contents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contents As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Contents { System::Web::HttpApplicationState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0871a-117">Ottiene un riferimento all'oggetto <see cref="T:System.Web.HttpApplicationState" />.</span><span class="sxs-lookup"><span data-stu-id="0871a-117">Gets a reference to the <see cref="T:System.Web.HttpApplicationState" /> object.</span></span></summary>
        <value><span data-ttu-id="0871a-118">Riferimento all'oggetto <see cref="T:System.Web.HttpApplicationState" />.</span><span class="sxs-lookup"><span data-stu-id="0871a-118">A reference to the <see cref="T:System.Web.HttpApplicationState" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0871a-119">Questa proprietà fornisce compatibilità con le versioni precedenti di ASP.</span><span class="sxs-lookup"><span data-stu-id="0871a-119">This property provides compatibility with earlier versions of ASP.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0871a-120">L'esempio seguente crea un nuovo <xref:System.Web.HttpApplicationState> oggetto utilizzato per accedere ai nomi di oggetto nella raccolta degli Stati dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="0871a-120">The following example creates a new <xref:System.Web.HttpApplicationState> object that is used to access the object names in the application state collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Contents Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Contents Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Contents Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Contents Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0871a-121">Ottiene il numero degli oggetti nella raccolta <see cref="T:System.Web.HttpApplicationState" />.</span><span class="sxs-lookup"><span data-stu-id="0871a-121">Gets the number of objects in the <see cref="T:System.Web.HttpApplicationState" /> collection.</span></span></summary>
        <value><span data-ttu-id="0871a-122">Numero di oggetti Item nell'insieme.</span><span class="sxs-lookup"><span data-stu-id="0871a-122">The number of item objects in the collection.</span></span> <span data-ttu-id="0871a-123">Il valore predefinito è 0.</span><span class="sxs-lookup"><span data-stu-id="0871a-123">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0871a-124">Nell'esempio seguente viene eseguita solo se il numero di oggetti nella raccolta è superiore a cinque.</span><span class="sxs-lookup"><span data-stu-id="0871a-124">The following example executes only if the number of objects in the collection exceeds five.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Count Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Count Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0871a-125">Restituisce un oggetto <see cref="T:System.Web.HttpApplicationState" /> in base al nome o all'indice.</span><span class="sxs-lookup"><span data-stu-id="0871a-125">Gets an <see cref="T:System.Web.HttpApplicationState" /> object by name or index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public object Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Get(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Get(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="0871a-126">Indice dell'oggetto application state.</span><span class="sxs-lookup"><span data-stu-id="0871a-126">The index of the application state object.</span></span></param>
        <summary><span data-ttu-id="0871a-127">Restituisce un oggetto <see cref="T:System.Web.HttpApplicationState" /> in base all'indice numerico.</span><span class="sxs-lookup"><span data-stu-id="0871a-127">Gets an <see cref="T:System.Web.HttpApplicationState" /> object by numerical index.</span></span></summary>
        <returns><span data-ttu-id="0871a-128">Oggetto a cui fa riferimento <paramref name="index" />.</span><span class="sxs-lookup"><span data-stu-id="0871a-128">The object referenced by <paramref name="index" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0871a-129">Nell'esempio seguente restituisce il primo oggetto (indice = 0) dal <xref:System.Web.HttpApplicationState> raccolta di proprietà intrinseche <xref:System.Web.HttpContext.Application%2A> dell'oggetto e lo copia in una nuova variabile di oggetto.</span><span class="sxs-lookup"><span data-stu-id="0871a-129">The following example returns the first object (index = 0) from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Get1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Get1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Get1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Get1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public object Get (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Get(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Get(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0871a-130">Nome dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="0871a-130">The name of the object.</span></span></param>
        <summary><span data-ttu-id="0871a-131">Restituisce un oggetto <see cref="T:System.Web.HttpApplicationState" /> in base al nome.</span><span class="sxs-lookup"><span data-stu-id="0871a-131">Gets an <see cref="T:System.Web.HttpApplicationState" /> object by name.</span></span></summary>
        <returns><span data-ttu-id="0871a-132">Oggetto a cui fa riferimento <paramref name="name" />.</span><span class="sxs-lookup"><span data-stu-id="0871a-132">The object referenced by <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0871a-133">L'esempio seguente restituisce un oggetto denominato MyAppVar1 dal <xref:System.Web.HttpApplicationState> raccolta di proprietà intrinseche <xref:System.Web.HttpContext.Application%2A> dell'oggetto e lo copia in una nuova variabile di oggetto.</span><span class="sxs-lookup"><span data-stu-id="0871a-133">The following example returns an object named MyAppVar1 from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.</span></span>  
  
```vb  
Dim MyObject As Object  
MyObject = Application.Get("MyAppVar1")  
```  
  
```csharp  
Object MyObject;  
MyObject = Application.Get("MyAppVar1");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public string GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetKey (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetKey(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="0871a-134">Indice dell'oggetto application state.</span><span class="sxs-lookup"><span data-stu-id="0871a-134">The index of the application state object.</span></span></param>
        <summary><span data-ttu-id="0871a-135">Restituisce il nome di un oggetto <see cref="T:System.Web.HttpApplicationState" /> in base all'indice.</span><span class="sxs-lookup"><span data-stu-id="0871a-135">Gets an <see cref="T:System.Web.HttpApplicationState" /> object name by index.</span></span></summary>
        <returns><span data-ttu-id="0871a-136">Nome con cui è stato salvato l'oggetto application state.</span><span class="sxs-lookup"><span data-stu-id="0871a-136">The name under which the application state object was saved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0871a-137">Nell'esempio seguente restituisce i nomi di tutti gli oggetti nella raccolta degli Stati dell'applicazione e archivia i nomi in una matrice di stringhe.</span><span class="sxs-lookup"><span data-stu-id="0871a-137">The following example returns the names of all the objects in the application state collection and stores the names in a string array.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.GetKey Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.GetKey Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.GetKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.GetKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0871a-138">Fornisce l'accesso a un oggetto in un insieme <see cref="T:System.Web.HttpApplicationState" />.</span><span class="sxs-lookup"><span data-stu-id="0871a-138">Gets access to an object in an <see cref="T:System.Web.HttpApplicationState" /> collection.</span></span> <span data-ttu-id="0871a-139">È possibile eseguire l'overload di questa proprietà per consentire l'accesso a un oggetto per nome o indice numerico.</span><span class="sxs-lookup"><span data-stu-id="0871a-139">This property is overloaded to allow access to an object by name or numerical index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="0871a-140">Indice numerico dell'oggetto nell'insieme.</span><span class="sxs-lookup"><span data-stu-id="0871a-140">The numerical index of the object in the collection.</span></span></param>
        <summary><span data-ttu-id="0871a-141">Restituisce un singolo oggetto <see cref="T:System.Web.HttpApplicationState" /> in base all'indice.</span><span class="sxs-lookup"><span data-stu-id="0871a-141">Gets a single <see cref="T:System.Web.HttpApplicationState" /> object by index.</span></span></summary>
        <value><span data-ttu-id="0871a-142">Oggetto a cui fa riferimento <paramref name="index" />.</span><span class="sxs-lookup"><span data-stu-id="0871a-142">The object referenced by <paramref name="index" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0871a-143">Nell'esempio seguente restituisce il primo oggetto (indice = 0) dal <xref:System.Web.HttpApplicationState> raccolta di proprietà intrinseche <xref:System.Web.HttpContext.Application%2A> dell'oggetto e lo copia in una nuova variabile di oggetto.</span><span class="sxs-lookup"><span data-stu-id="0871a-143">The following example returns the first object (index = 0) from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); void set(System::String ^ name, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0871a-144">Nome dell'oggetto nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="0871a-144">The name of the object in the collection.</span></span></param>
        <summary><span data-ttu-id="0871a-145">Restituisce il valore di un singolo oggetto <see cref="T:System.Web.HttpApplicationState" /> in base al nome.</span><span class="sxs-lookup"><span data-stu-id="0871a-145">Gets the value of a single <see cref="T:System.Web.HttpApplicationState" /> object by name.</span></span></summary>
        <value><span data-ttu-id="0871a-146">Oggetto a cui fa riferimento <paramref name="name" />.</span><span class="sxs-lookup"><span data-stu-id="0871a-146">The object referenced by <paramref name="name" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0871a-147">Nell'esempio seguente viene restituito un oggetto denominato `MyAppVar1` dal <xref:System.Web.HttpApplicationState> raccolta di proprietà intrinseche <xref:System.Web.HttpContext.Application%2A> dell'oggetto e lo copia in una nuova variabile di oggetto.</span><span class="sxs-lookup"><span data-stu-id="0871a-147">The following example returns an object named `MyAppVar1` from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.this Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.this Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public void Lock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Lock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Lock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Lock();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0871a-148">Consente di bloccare l'accesso a una variabile <see cref="T:System.Web.HttpApplicationState" /> per facilitare la sincronizzazione dell'accesso.</span><span class="sxs-lookup"><span data-stu-id="0871a-148">Locks access to an <see cref="T:System.Web.HttpApplicationState" /> variable to facilitate access synchronization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0871a-149">Il <xref:System.Web.HttpApplicationState> classe esegue il blocco e sblocco con la <xref:System.Web.HttpApplicationState.AllKeys%2A> e <xref:System.Web.HttpApplicationState.Count%2A> proprietà e <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> e <xref:System.Web.HttpApplicationState.Set%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="0871a-149">The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods.</span></span> <span data-ttu-id="0871a-150">Tuttavia, in modo esplicito utilizzando il <xref:System.Web.HttpApplicationState.Lock%2A> e <xref:System.Web.HttpApplicationState.UnLock%2A> metodi quando si dispone di una serie di operazioni possono essere più efficienti.</span><span class="sxs-lookup"><span data-stu-id="0871a-150">However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0871a-151">L'esempio seguente usa il <xref:System.Web.HttpApplicationState.Lock%2A> (metodo) e <xref:System.Web.HttpApplicationState.UnLock%2A> per impedire le altre sessioni di modifica del valore di due variabili di applicazione fino a dopo che la sessione locale sia stato modificato.</span><span class="sxs-lookup"><span data-stu-id="0871a-151">The following example uses the <xref:System.Web.HttpApplicationState.Lock%2A> method and <xref:System.Web.HttpApplicationState.UnLock%2A> method to prevent other sessions from changing the value of two application variables until after the local session has changed them.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Lock Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Lock Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Lock Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Lock Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpApplicationState.UnLock" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0871a-152">Nome dell'oggetto da rimuovere dall'insieme.</span><span class="sxs-lookup"><span data-stu-id="0871a-152">The name of the object to be removed from the collection.</span></span></param>
        <summary><span data-ttu-id="0871a-153">Consente di rimuovere tutti gli oggetti con nome da un insieme <see cref="T:System.Web.HttpApplicationState" />.</span><span class="sxs-lookup"><span data-stu-id="0871a-153">Removes the named object from an <see cref="T:System.Web.HttpApplicationState" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0871a-154">Nell'esempio seguente rimuove una variabile di stato dell'applicazione dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="0871a-154">The following example removes one application state variable from the collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0871a-155">Rimuove tutti gli oggetti da un insieme <see cref="T:System.Web.HttpApplicationState" />.</span><span class="sxs-lookup"><span data-stu-id="0871a-155">Removes all objects from an <see cref="T:System.Web.HttpApplicationState" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0871a-156"><xref:System.Web.HttpApplicationState.RemoveAll%2A> è una chiamata interna a <xref:System.Web.HttpApplicationState.Clear%2A>.</span><span class="sxs-lookup"><span data-stu-id="0871a-156"><xref:System.Web.HttpApplicationState.RemoveAll%2A> is an internal call to <xref:System.Web.HttpApplicationState.Clear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0871a-157">Nell'esempio seguente rimuove tutti <xref:System.Web.HttpApplicationState> variabili dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="0871a-157">The following example removes all <xref:System.Web.HttpApplicationState> variables from the collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="0871a-158">Posizione nella raccolta dell'elemento da rimuovere.</span><span class="sxs-lookup"><span data-stu-id="0871a-158">The position in the collection of the item to remove.</span></span></param>
        <summary><span data-ttu-id="0871a-159">Rimuove un oggetto <see cref="T:System.Web.HttpApplicationState" /> da un insieme in base all'indice.</span><span class="sxs-lookup"><span data-stu-id="0871a-159">Removes an <see cref="T:System.Web.HttpApplicationState" /> object from a collection by index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0871a-160">Esempio di codice riportato di seguito viene illustrato come inserire due variabili di applicazione nella raccolta e quindi utilizzare il <xref:System.Web.HttpApplicationState.RemoveAt%2A> metodo per rimuovere la prima variabile in un oggetto personalizzato <xref:System.Web.HttpApplicationState> oggetto.</span><span class="sxs-lookup"><span data-stu-id="0871a-160">The following code example demonstrates how to insert two application variables into the collection, and then use the <xref:System.Web.HttpApplicationState.RemoveAt%2A> method to remove the first variable in a custom <xref:System.Web.HttpApplicationState> object.</span></span>  
  
 [!code-aspx-csharp[HttpApplicationStateRemoveAt#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpApplicationStateRemoveAt/CS/httpapplicationstate_removeatcs.aspx#1)]
 [!code-aspx-vb[HttpApplicationStateRemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpApplicationStateRemoveAt/VB/httpapplicationstate_removeatvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Set(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Set(System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0871a-161">Nome dell'oggetto da aggiornare.</span><span class="sxs-lookup"><span data-stu-id="0871a-161">The name of the object to be updated.</span></span></param>
        <param name="value"><span data-ttu-id="0871a-162">Valore aggiornato dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="0871a-162">The updated value of the object.</span></span></param>
        <summary><span data-ttu-id="0871a-163">Consente di aggiornare il valore di un oggetto in un insieme <see cref="T:System.Web.HttpApplicationState" />.</span><span class="sxs-lookup"><span data-stu-id="0871a-163">Updates the value of an object in an <see cref="T:System.Web.HttpApplicationState" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0871a-164">Nell'esempio seguente aggiorna il valore di una variabile di stato esistente dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="0871a-164">The following example updates the value of an existing application state variable.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Set Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Set Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Set Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Set Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticObjects">
      <MemberSignature Language="C#" Value="public System.Web.HttpStaticObjectsCollection StaticObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpStaticObjectsCollection StaticObjects" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.StaticObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticObjects As HttpStaticObjectsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpStaticObjectsCollection ^ StaticObjects { System::Web::HttpStaticObjectsCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0871a-165">Ottiene tutti gli oggetti dichiarati da un tag <see langword="&lt;object&gt;" /> il cui ambito è impostato su "Application" nell'applicazione ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="0871a-165">Gets all objects declared by an <see langword="&lt;object&gt;" /> tag where the scope is set to "Application" within the ASP.NET application.</span></span></summary>
        <value><span data-ttu-id="0871a-166">Insieme di oggetti sulla pagina.</span><span class="sxs-lookup"><span data-stu-id="0871a-166">A collection of objects on the page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0871a-167">Gli oggetti dell'applicazione sono definiti nel file Global. asax all'interno di `<object runat="server" scope="Application"> </object>` tag.</span><span class="sxs-lookup"><span data-stu-id="0871a-167">Application objects are defined in the Global.asax file inside the `<object runat="server" scope="Application"> </object>` tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0871a-168">Nell'esempio seguente recupera tutti gli oggetti di applicazione in un <xref:System.Web.HttpStaticObjectsCollection> variabile ed esegue una routine solo se il numero di oggetti è maggiore di 0.</span><span class="sxs-lookup"><span data-stu-id="0871a-168">The following example gets all application objects into a <xref:System.Web.HttpStaticObjectsCollection> variable and executes a routine only if the number of objects is greater than 0.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.StaticObjects Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.StaticObjects Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.StaticObjects Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.StaticObjects Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnLock">
      <MemberSignature Language="C#" Value="public void UnLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.UnLock" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnLock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnLock();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0871a-169">Consente di sbloccare l'accesso a una variabile <see cref="T:System.Web.HttpApplicationState" /> per facilitare la sincronizzazione dell'accesso.</span><span class="sxs-lookup"><span data-stu-id="0871a-169">Unlocks access to an <see cref="T:System.Web.HttpApplicationState" /> variable to facilitate access synchronization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0871a-170">Il <xref:System.Web.HttpApplicationState> classe esegue il blocco e sblocco con la <xref:System.Web.HttpApplicationState.AllKeys%2A> e <xref:System.Web.HttpApplicationState.Count%2A> proprietà e <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> e <xref:System.Web.HttpApplicationState.Set%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="0871a-170">The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods.</span></span> <span data-ttu-id="0871a-171">Tuttavia, in modo esplicito utilizzando il <xref:System.Web.HttpApplicationState.Lock%2A> e <xref:System.Web.HttpApplicationState.UnLock%2A> metodi quando si dispone di una serie di operazioni possono essere più efficienti.</span><span class="sxs-lookup"><span data-stu-id="0871a-171">However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0871a-172">L'esempio seguente usa il <xref:System.Web.HttpApplicationState.Lock%2A> (metodo) e <xref:System.Web.HttpApplicationState.UnLock%2A> per impedire le altre sessioni di modifica del valore di due variabili di applicazione fino a dopo che la sessione locale sia stato modificato.</span><span class="sxs-lookup"><span data-stu-id="0871a-172">The following example uses the <xref:System.Web.HttpApplicationState.Lock%2A> method and <xref:System.Web.HttpApplicationState.UnLock%2A> method to prevent other sessions from changing the value of two application variables until after the local session has changed them.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Lock Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Lock Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Lock Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Lock Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpApplicationState.Lock" />
      </Docs>
    </Member>
  </Members>
</Type>