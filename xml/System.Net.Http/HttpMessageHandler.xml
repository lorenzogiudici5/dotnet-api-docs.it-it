<Type Name="HttpMessageHandler" FullName="System.Net.Http.HttpMessageHandler">
  <TypeSignature Language="C#" Value="public abstract class HttpMessageHandler : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpMessageHandler extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpMessageHandler&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpMessageHandler abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="11382-101">Tipo di base per i gestori di messaggi HTTP.</span><span class="sxs-lookup"><span data-stu-id="11382-101">A base type for HTTP message handlers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11382-102">Esistono vari handle messaggio HTTP che possono essere utilizzati.</span><span class="sxs-lookup"><span data-stu-id="11382-102">There are various HTTP message handles that can be used.</span></span> <span data-ttu-id="11382-103">Tra cui i seguenti.</span><span class="sxs-lookup"><span data-stu-id="11382-103">These include the following.</span></span>  
  
1.  <span data-ttu-id="11382-104"><xref:System.Net.Http.DelegatingHandler> -Una classe utilizzata per collegare un gestore in una catena di gestore.</span><span class="sxs-lookup"><span data-stu-id="11382-104"><xref:System.Net.Http.DelegatingHandler> - A class used to plug a handler into a handler chain.</span></span>  
  
2.  <span data-ttu-id="11382-105"><xref:System.Net.Http.HttpMessageHandler> -Un semplice alla classe da cui derivare che supportino i requisiti più comuni per la maggior parte delle applicazioni.</span><span class="sxs-lookup"><span data-stu-id="11382-105"><xref:System.Net.Http.HttpMessageHandler> - A simple to class to derive from that supports the most common requirements for most applications.</span></span>  
  
3.  <span data-ttu-id="11382-106"><xref:System.Net.Http.HttpClientHandler> -Una classe che agisca nella parte inferiore della catena di gestore che gestisce le operazioni di trasporto HTTP.</span><span class="sxs-lookup"><span data-stu-id="11382-106"><xref:System.Net.Http.HttpClientHandler> - A class that operates at the bottom of the handler chain that actually handles the HTTP transport operations.</span></span>  
  
4.  <span data-ttu-id="11382-107"><xref:System.Net.Http.WebRequestHandler> -Una classe speciale che opera a fondo la classe del gestore catena che gestisce le operazioni di trasporto HTTP con le opzioni specifiche per la <xref:System.Net.HttpWebRequest?displayProperty=nameWithType> oggetto.</span><span class="sxs-lookup"><span data-stu-id="11382-107"><xref:System.Net.Http.WebRequestHandler> - A specialty class that operates at the bottom of the handler chain class that handles HTTP transport operations with options that are specific to the <xref:System.Net.HttpWebRequest?displayProperty=nameWithType> object.</span></span>  
  
 <span data-ttu-id="11382-108">Se gli sviluppatori di derivano le classi da <xref:System.Net.Http.HttpMessageHandler> ed eseguire l'override di <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> (metodo), è necessario assicurarsi che <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> può ottenere chiamato simultaneamente da thread diversi.</span><span class="sxs-lookup"><span data-stu-id="11382-108">If developers derive classes from <xref:System.Net.Http.HttpMessageHandler> and override the <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> method, they must make sure that <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> can get called concurrently by different threads.</span></span>  
  
 <span data-ttu-id="11382-109">Questa operazione è necessaria perché i metodi su <xref:System.Net.Http.HttpClient> può essere chiamato contemporaneamente ed è necessario una garanzia di thread-safe.</span><span class="sxs-lookup"><span data-stu-id="11382-109">This is necessary since methods on <xref:System.Net.Http.HttpClient> can be called concurrently and need a guarantee of thread safety.</span></span> <span data-ttu-id="11382-110">Pertanto, se un gestore viene assegnato a un <xref:System.Net.Http.HttpClient> istanza, il <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> metodo del gestore può venire chiamata contemporaneamente dal <xref:System.Net.Http.HttpClient> istanza e deve essere thread-safe.</span><span class="sxs-lookup"><span data-stu-id="11382-110">So if a handler is assigned to an <xref:System.Net.Http.HttpClient> instance, the <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> method of the handler may get called concurrently by the <xref:System.Net.Http.HttpClient> instance and needs to be thread safe.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpMessageHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpMessageHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpMessageHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="11382-111">Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.HttpMessageHandler" />.</span><span class="sxs-lookup"><span data-stu-id="11382-111">Initializes a new instance of the <see cref="T:System.Net.Http.HttpMessageHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="11382-112">Rilascia le risorse non gestite usate da <see cref="T:System.Net.Http.HttpMessageHandler" /> e, facoltativamente, elimina le risorse gestite.</span><span class="sxs-lookup"><span data-stu-id="11382-112">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpMessageHandler" /> and optionally disposes of the managed resources.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpMessageHandler.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="11382-113">Rilascia le risorse non gestite ed elimina le risorse gestite utilizzate dall'oggetto <see cref="T:System.Net.Http.HttpMessageHandler" />.</span><span class="sxs-lookup"><span data-stu-id="11382-113">Releases the unmanaged resources and disposes of the managed resources used by the <see cref="T:System.Net.Http.HttpMessageHandler" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="11382-114"><see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</span><span class="sxs-lookup"><span data-stu-id="11382-114"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="11382-115">Rilascia le risorse non gestite usate da <see cref="T:System.Net.Http.HttpMessageHandler" /> e, facoltativamente, elimina le risorse gestite.</span><span class="sxs-lookup"><span data-stu-id="11382-115">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpMessageHandler" /> and optionally disposes of the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11382-116">Questo metodo viene chiamato dal metodo pubblico `Dispose()` (metodo) e <xref:System.Object.Finalize%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="11382-116">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="11382-117">`Dispose()` richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="11382-117">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="11382-118"><xref:System.Object.Finalize%2A> richiama `Dispose` con `disposing` impostato su `false`. Quando il `disposing` parametro `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.Net.Http.HttpMessageHandler> riferimenti.</span><span class="sxs-lookup"><span data-stu-id="11382-118"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpMessageHandler> references.</span></span> <span data-ttu-id="11382-119">Il metodo richiama il metodo `Dispose()` di ciascun oggetto cui viene fatto riferimento.</span><span class="sxs-lookup"><span data-stu-id="11382-119">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="protected internal abstract System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="11382-120">Messaggio di richiesta HTTP da inviare.</span><span class="sxs-lookup"><span data-stu-id="11382-120">The HTTP request message to send.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="11382-121">Token di annullamento per annullare l'operazione.</span><span class="sxs-lookup"><span data-stu-id="11382-121">The cancellation token to cancel operation.</span></span></param>
        <summary><span data-ttu-id="11382-122">Inviare una richiesta HTTP come operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="11382-122">Send an HTTP request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="11382-123">Oggetto dell'attività che rappresenta l'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="11382-123">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11382-124">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="11382-124">This operation will not block.</span></span> <span data-ttu-id="11382-125">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che viene letta l'intera risposta, incluso il contenuto.</span><span class="sxs-lookup"><span data-stu-id="11382-125">The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.</span></span>  
  
 <span data-ttu-id="11382-126">Il <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> metodo viene utilizzato principalmente dal sistema.</span><span class="sxs-lookup"><span data-stu-id="11382-126">The <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> method is used primarily by the system.</span></span> <span data-ttu-id="11382-127">Questo metodo viene chiamato dal sistema di uno il <xref:System.Net.Http.HttpClient.SendAsync%2A?displayProperty=nameWithType> metodi viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="11382-127">This method is called by the system one of the  <xref:System.Net.Http.HttpClient.SendAsync%2A?displayProperty=nameWithType> methods is called.</span></span> <span data-ttu-id="11382-128">La maggior parte delle App non verrà mai chiamare questo metodo.</span><span class="sxs-lookup"><span data-stu-id="11382-128">Most apps will never call this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="11382-129">Il parametro <paramref name="request" /> era <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="11382-129">The <paramref name="request" /> was <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>