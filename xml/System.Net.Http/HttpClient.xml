<Type Name="HttpClient" FullName="System.Net.Http.HttpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8bdfa8a28d1505a3cbf22bbc3c44a7b9263ea47c" />
    <Meta Name="ms.sourcegitcommit" Value="81d387351cc43c342755705908f4a5eb8af153d3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/04/2018" />
    <Meta Name="ms.locfileid" Value="34567782" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpClient : System.Net.Http.HttpMessageInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpClient extends System.Net.Http.HttpMessageInvoker" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpClient&#xA;Inherits HttpMessageInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpClient : System::Net::Http::HttpMessageInvoker" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpMessageInvoker</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c3564-101">Fornisce una classe base per l'invio di richieste HTTP e la ricezione di risposte HTTP da una risorsa identificata da un URI.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c3564-101">Provides a base class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-102">La <xref:System.Net.Http.HttpClient> classe istanza agisce come una sessione per inviare richieste HTTP.</span><span class="sxs-lookup"><span data-stu-id="c3564-102">The <xref:System.Net.Http.HttpClient> class instance acts as a session to send HTTP requests.</span></span> <span data-ttu-id="c3564-103">Un <xref:System.Net.Http.HttpClient> istanza è una raccolta di impostazioni applicate a tutte le richieste eseguite da quell'istanza.</span><span class="sxs-lookup"><span data-stu-id="c3564-103">An <xref:System.Net.Http.HttpClient> instance is a collection of settings applied to all requests executed by that instance.</span></span> <span data-ttu-id="c3564-104">Inoltre, ogni <xref:System.Net.Http.HttpClient> istanza utilizza un proprio pool di connessioni, isolare le richieste di richieste eseguite da altri <xref:System.Net.Http.HttpClient> istanze.</span><span class="sxs-lookup"><span data-stu-id="c3564-104">In addition, every <xref:System.Net.Http.HttpClient> instance uses its own connection pool, isolating its requests from requests executed by other <xref:System.Net.Http.HttpClient> instances.</span></span>  
  
 <span data-ttu-id="c3564-105">Il <xref:System.Net.Http.HttpClient> funge anche da una classe di base per i client più specifici di HTTP.</span><span class="sxs-lookup"><span data-stu-id="c3564-105">The <xref:System.Net.Http.HttpClient> also acts as a base class for more specific HTTP clients.</span></span> <span data-ttu-id="c3564-106">Un esempio può essere un FacebookHttpClient fornendo i metodi aggiuntivi specifici per un servizio web Facebook (un metodo GetFriends, ad esempio).</span><span class="sxs-lookup"><span data-stu-id="c3564-106">An example would be a FacebookHttpClient providing additional methods specific to a Facebook web service (a GetFriends method, for instance).</span></span> <span data-ttu-id="c3564-107">Le classi derivate non eseguire l'override dei metodi virtuali nella classe.</span><span class="sxs-lookup"><span data-stu-id="c3564-107">Derived classes should not override the virtual methods on the class.</span></span> <span data-ttu-id="c3564-108">In alternativa, usare un overload del costruttore che accetta <xref:System.Net.Http.HttpMessageHandler> per configurare qualsiasi pre-elaborazione o la post-richiesta elaborazione invece.</span><span class="sxs-lookup"><span data-stu-id="c3564-108">Instead, use a constructor overload that accepts <xref:System.Net.Http.HttpMessageHandler> to configure any pre- or post-request processing instead.</span></span>
  
 <span data-ttu-id="c3564-109">Per impostazione predefinita, <xref:System.Net.HttpWebRequest> verrà utilizzato per inviare richieste al server.</span><span class="sxs-lookup"><span data-stu-id="c3564-109">By default, <xref:System.Net.HttpWebRequest> will be used to send requests to the server.</span></span> <span data-ttu-id="c3564-110">È possibile modificare questo comportamento specificando un altro canale in uno degli overload del costruttore richiede un <xref:System.Net.Http.HttpMessageHandler> istanza come parametro.</span><span class="sxs-lookup"><span data-stu-id="c3564-110">This behavior can be modified by specifying a different channel in one of the constructor overloads taking a <xref:System.Net.Http.HttpMessageHandler> instance as parameter.</span></span> <span data-ttu-id="c3564-111">Se sono richieste, funzionalità come l'autenticazione o la memorizzazione nella cache <xref:System.Net.Http.WebRequestHandler> può essere usato per configurare le impostazioni e l'istanza di può essere passato al costruttore.</span><span class="sxs-lookup"><span data-stu-id="c3564-111">If features like authentication or caching are required, <xref:System.Net.Http.WebRequestHandler> can be used to configure settings and the instance can be passed to the constructor.</span></span> <span data-ttu-id="c3564-112">Il gestore restituito può essere passato a uno degli overload del costruttore richiede un <xref:System.Net.Http.HttpMessageHandler> parametro.</span><span class="sxs-lookup"><span data-stu-id="c3564-112">The returned handler can be passed to one of the constructor overloads taking a <xref:System.Net.Http.HttpMessageHandler> parameter.</span></span>  
  
 <span data-ttu-id="c3564-113">Se un'app usando <xref:System.Net.Http.HttpClient> e le classi correlate nel <xref:System.Net.Http> intende scaricare grandi quantità di dati (o 50 megabyte) dello spazio dei nomi, quindi l'app deve trasmettere i download e non utilizzare la memorizzazione nel buffer predefinita.</span><span class="sxs-lookup"><span data-stu-id="c3564-113">If an app using <xref:System.Net.Http.HttpClient> and related classes in the  <xref:System.Net.Http> namespace intends to download large amounts of data (50 megabytes or more), then the app should stream those downloads and not use the default buffering.</span></span> <span data-ttu-id="c3564-114">Se il buffering predefinito viene utilizzato l'utilizzo della memoria client riceverà molto elevato, ciò può rendere sostanzialmente una riduzione delle prestazioni.</span><span class="sxs-lookup"><span data-stu-id="c3564-114">If the default buffering is used the client memory usage will get very large, potentially resulting in substantially reduced performance.</span></span>  
  
 <span data-ttu-id="c3564-115">I metodi seguenti sono thread-safe:</span><span class="sxs-lookup"><span data-stu-id="c3564-115">The following methods are thread safe:</span></span>  
  
1.  <xref:System.Net.Http.HttpClient.CancelPendingRequests%2A>  
  
2.  <xref:System.Net.Http.HttpClient.DeleteAsync%2A>  
  
3.  <xref:System.Net.Http.HttpClient.GetAsync%2A>  
  
4.  <xref:System.Net.Http.HttpClient.GetByteArrayAsync%2A>  
  
5.  <xref:System.Net.Http.HttpClient.GetStreamAsync%2A>  
  
6.  <xref:System.Net.Http.HttpClient.GetStringAsync%2A>  
  
7.  <xref:System.Net.Http.HttpClient.PostAsync%2A>  
  
8.  <xref:System.Net.Http.HttpClient.PutAsync%2A>  
  
9. <xref:System.Net.Http.HttpClient.SendAsync%2A>  
  
 <span data-ttu-id="c3564-116"><xref:System.Net.Http.HttpClient> deve essere creata un'istanza di una volta e riutilizzate per tutta la durata di un'applicazione.</span><span class="sxs-lookup"><span data-stu-id="c3564-116"><xref:System.Net.Http.HttpClient> is intended to be instantiated once and re-used throughout the life of an application.</span></span> <span data-ttu-id="c3564-117">Creazione di una classe HttpClient per ogni richiesta verrà esaurire il numero di socket disponibile in presenza di carichi.</span><span class="sxs-lookup"><span data-stu-id="c3564-117">Instantiating an HttpClient class for every request will exhaust the number of sockets available under heavy loads.</span></span> <span data-ttu-id="c3564-118">Questo si verificheranno errori SocketException.</span><span class="sxs-lookup"><span data-stu-id="c3564-118">This will result in SocketException errors.</span></span> <span data-ttu-id="c3564-119">Di seguito è riportato un esempio di utilizzo corretto di HttpClient.</span><span class="sxs-lookup"><span data-stu-id="c3564-119">Below is an example using HttpClient correctly.</span></span>  
  
```csharp  
public class GoodController : ApiController  
{  
    // OK  
    private static readonly HttpClient HttpClient;  
  
    static GoodController()  
    {  
        HttpClient = new HttpClient();  
    }  
}  
  
```  
  
<span data-ttu-id="c3564-120">Il <xref:System.Net.Http.HttpClient> è un'API di alto livello che include la funzionalità di livello più basso disponibile in ogni piattaforma in cui viene eseguito.</span><span class="sxs-lookup"><span data-stu-id="c3564-120">The <xref:System.Net.Http.HttpClient> is a high-level API that wraps the lower-level functionality available on each platform where it runs.</span></span>

<span data-ttu-id="c3564-121">In ogni piattaforma, <xref:System.Net.Http.HttpClient> tenta di utilizzare il trasporto migliore:</span><span class="sxs-lookup"><span data-stu-id="c3564-121">On each platform, <xref:System.Net.Http.HttpClient> tries to use the best available transport:</span></span>

| <span data-ttu-id="c3564-122">**Host/Runtime**</span><span class="sxs-lookup"><span data-stu-id="c3564-122">**Host/Runtime**</span></span>            | <span data-ttu-id="c3564-123">**Back-end**</span><span class="sxs-lookup"><span data-stu-id="c3564-123">**Backend**</span></span>                                                                               |
| --------------------------- | ----------------------------------------------------------------------------------------- |
| <span data-ttu-id="c3564-124">Windows/.NET Framework</span><span class="sxs-lookup"><span data-stu-id="c3564-124">Windows/.NET Framework</span></span>      | <xref:System.Net.HttpWebRequest>                                                          |
| <span data-ttu-id="c3564-125">Windows/Mono</span><span class="sxs-lookup"><span data-stu-id="c3564-125">Windows/Mono</span></span>                | <xref:System.Net.HttpWebRequest>                                                          |
| <span data-ttu-id="c3564-126">Windows/UWP</span><span class="sxs-lookup"><span data-stu-id="c3564-126">Windows/UWP</span></span>                 | <span data-ttu-id="c3564-127">Windows nativo <xref:System.Net.Http.WinHttpHandler> (che supportano HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="c3564-127">Windows native <xref:System.Net.Http.WinHttpHandler> (HTTP 2.0 capable)</span></span>                   |
| <span data-ttu-id="c3564-128">Windows/.NET Core</span><span class="sxs-lookup"><span data-stu-id="c3564-128">Windows/.NET Core</span></span>           | <span data-ttu-id="c3564-129">Windows nativo <xref:System.Net.Http.WinHttpHandler> (che supportano HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="c3564-129">Windows native <xref:System.Net.Http.WinHttpHandler> (HTTP 2.0 capable)</span></span>                   |
| <span data-ttu-id="c3564-130">Android o Xamarin</span><span class="sxs-lookup"><span data-stu-id="c3564-130">Android/Xamarin</span></span>             | <span data-ttu-id="c3564-131">Selezionare in fase di compilazione.</span><span class="sxs-lookup"><span data-stu-id="c3564-131">Selected at build-time.</span></span> <span data-ttu-id="c3564-132">Possibile utilizzare <xref:System.Net.HttpWebRequest> o essere configurato per usare native di Android [`HttpURLConnection`](https://developer.xamarin.com/api/type/Java.Net.HttpURLConnection/)</span><span class="sxs-lookup"><span data-stu-id="c3564-132">Can either use <xref:System.Net.HttpWebRequest> or be configured to use Android's native [`HttpURLConnection`](https://developer.xamarin.com/api/type/Java.Net.HttpURLConnection/)</span></span> |
| <span data-ttu-id="c3564-133">iOS, tvOS, watchOS/Xamarin</span><span class="sxs-lookup"><span data-stu-id="c3564-133">iOS, tvOS, watchOS/Xamarin</span></span>  | <span data-ttu-id="c3564-134">Selezionare in fase di compilazione.</span><span class="sxs-lookup"><span data-stu-id="c3564-134">Selected at build-time.</span></span> <span data-ttu-id="c3564-135">Possibile utilizzare <xref:System.Net.HttpWebRequest> o essere configurato per l'utilizzo di Apple [ `NSUrlSession` ](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (che supportano HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="c3564-135">Can either use <xref:System.Net.HttpWebRequest> or be configured to use Apple's [`NSUrlSession`](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (HTTP 2.0 capable)</span></span> |
| <span data-ttu-id="c3564-136">macOS/Xamarin</span><span class="sxs-lookup"><span data-stu-id="c3564-136">macOS/Xamarin</span></span>               | <span data-ttu-id="c3564-137">Selezionare in fase di compilazione.</span><span class="sxs-lookup"><span data-stu-id="c3564-137">Selected at build-time.</span></span> <span data-ttu-id="c3564-138">Possibile utilizzare <xref:System.Net.HttpWebRequest> o essere configurato per l'utilizzo di Apple [ `NSUrlSession` ](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (che supportano HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="c3564-138">Can either use <xref:System.Net.HttpWebRequest> or be configured to use Apple's [`NSUrlSession`](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (HTTP 2.0 capable)</span></span> |
| <span data-ttu-id="c3564-139">macOS/Mono</span><span class="sxs-lookup"><span data-stu-id="c3564-139">macOS/Mono</span></span>                  | <xref:System.Net.HttpWebRequest>                                                                          |
| <span data-ttu-id="c3564-140">macOS/.NET Core</span><span class="sxs-lookup"><span data-stu-id="c3564-140">macOS/.NET Core</span></span>             | <span data-ttu-id="c3564-141">`libcurl`-basato su trasporto HTTP (che supportano HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="c3564-141">`libcurl`-based HTTP transport (HTTP 2.0 capable)</span></span>                                         |
| <span data-ttu-id="c3564-142">Linux/Mono</span><span class="sxs-lookup"><span data-stu-id="c3564-142">Linux/Mono</span></span>                  | <xref:System.Net.HttpWebRequest>                                                          |
| <span data-ttu-id="c3564-143">Linux/.NET Core</span><span class="sxs-lookup"><span data-stu-id="c3564-143">Linux/.NET Core</span></span>             | <span data-ttu-id="c3564-144">`libcurl`-basato su trasporto HTTP (che supportano HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="c3564-144">`libcurl`-based HTTP transport (HTTP 2.0 capable)</span></span>                                         |

<span data-ttu-id="c3564-145">Gli utenti possono anche configurare un trasporto specifico per <xref:System.Net.Http.HttpClient> richiamando il <xref:System.Net.Http.HttpClient.%23ctor*> costruttore che accetta un <xref:System.Net.Http.HttpMessageHandler>.</span><span class="sxs-lookup"><span data-stu-id="c3564-145">Users can also configure a specific transport for <xref:System.Net.Http.HttpClient> by invoking the <xref:System.Net.Http.HttpClient.%23ctor*> constructor that takes an <xref:System.Net.Http.HttpMessageHandler>.</span></span>

### <a name="httpclient-and-net-core"></a><span data-ttu-id="c3564-146">HttpClient e .NET Core</span><span class="sxs-lookup"><span data-stu-id="c3564-146">HttpClient and .NET Core</span></span>

<span data-ttu-id="c3564-147">A partire da .NET Core 2.1, il <xref:System.Net.Http.SocketsHttpHandler?displayProperty=nameWithType> classe anziché `HttpClientHandler` fornisce l'implementazione utilizzata dalle classi di rete HTTP livello superiore, ad esempio `HttpClient`.</span><span class="sxs-lookup"><span data-stu-id="c3564-147">Starting with .NET Core 2.1, the <xref:System.Net.Http.SocketsHttpHandler?displayProperty=nameWithType> class instead of `HttpClientHandler` provides the implementation used by higher-level HTTP networking classes such as `HttpClient`.</span></span> <span data-ttu-id="c3564-148">È possibile configurare l'applicazione per usare il precedente <xref:System.Net.Http.HttpClientHandler?displayProperty=nameWithType> invece chiamando il <xref:System.AppContext.SetSwitch%2A> metodo come indicato di seguito:</span><span class="sxs-lookup"><span data-stu-id="c3564-148">You can configure your application to use the older <xref:System.Net.Http.HttpClientHandler?displayProperty=nameWithType> instead by calling the <xref:System.AppContext.SetSwitch%2A> method as follows:</span></span>

```csharp
AppContext.SetSwitch("System.Net.Http.useSocketsHttpHandler", false);
```
```vb
AppContext.SetSwitch("System.Net.Http.useSocketsHttpHandler", False)
``` 
  
## Examples  
 [!code-csharp[System.Net.Http.HttpClient#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.net.http.httpclient/cs/source.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c3564-149">Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-149">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-150"><xref:System.Net.Http.HttpClient> deve essere creata un'istanza di una volta e riutilizzate per tutta la durata di un'applicazione.</span><span class="sxs-lookup"><span data-stu-id="c3564-150"><xref:System.Net.Http.HttpClient> is intended to be instantiated once and re-used throughout the life of an application.</span></span> <span data-ttu-id="c3564-151">Creazione di una classe HttpClient per ogni richiesta verrà esaurire il numero di socket disponibile in presenza di carichi.</span><span class="sxs-lookup"><span data-stu-id="c3564-151">Instantiating an HttpClient class for every request will exhaust the number of sockets available under heavy loads.</span></span> <span data-ttu-id="c3564-152">Questo si verificheranno errori SocketException.</span><span class="sxs-lookup"><span data-stu-id="c3564-152">This will result in SocketException errors.</span></span> <span data-ttu-id="c3564-153">Di seguito è riportato un esempio di utilizzo corretto di HttpClient.</span><span class="sxs-lookup"><span data-stu-id="c3564-153">Below is an example using HttpClient correctly.</span></span>  
  
```csharp  
public class GoodController : ApiController  
{  
    // OK  
    private static readonly HttpClient HttpClient;  
  
    static GoodController()  
    {  
        HttpClient = new HttpClient();  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c3564-154">Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-154">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClient (System.Net.Http.HttpMessageHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.HttpMessageHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As HttpMessageHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClient(System::Net::Http::HttpMessageHandler ^ handler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Net.Http.HttpMessageHandler" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="c3564-155">Stack del gestore HTTP da usare per inviare le richieste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-155">The HTTP handler stack to use for sending requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-156">Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.HttpClient" /> con un gestore specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-156">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class with a specific handler.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-157">`handler` verrà eliminato chiamando [HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose).</span><span class="sxs-lookup"><span data-stu-id="c3564-157">`handler` will be disposed of by calling [HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-158">L'elemento <paramref name="handler" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-158">The <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClient (System.Net.Http.HttpMessageHandler handler, bool disposeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.HttpMessageHandler handler, bool disposeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As HttpMessageHandler, disposeHandler As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClient(System::Net::Http::HttpMessageHandler ^ handler, bool disposeHandler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Net.Http.HttpMessageHandler" />
        <Parameter Name="disposeHandler" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="c3564-159">Oggetto <see cref="T:System.Net.Http.HttpMessageHandler" /> responsabile dell'elaborazione dei messaggi di risposta HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-159">The <see cref="T:System.Net.Http.HttpMessageHandler" /> responsible for processing the HTTP response messages.</span>
          </span>
        </param>
        <param name="disposeHandler">
          <span data-ttu-id="c3564-160">
            <see langword="true" /> se il gestore interno deve essere eliminato da [HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose), <see langword="false" /> se si intende riusare il gestore interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-160">
              <see langword="true" /> if the inner handler should be disposed of by [HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose), <see langword="false" /> if you intend to reuse the inner handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-161">Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.HttpClient" /> con un gestore specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-161">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class with a specific handler.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-162">L'elemento <paramref name="handler" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-162">The <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public Uri BaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.BaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c3564-163">Ottiene o imposta l'indirizzo di base dell'URI (Uniform Resource Identifier) della risorsa Internet usata quando si inviano le richieste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-163">Gets or sets the base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c3564-164">L'indirizzo di base dell'URI (Uniform Resource Identifier) della risorsa Internet usata quando si inviano le richieste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-164">The base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-165">Quando si invia un <xref:System.Net.Http.HttpRequestMessage> con un Uri relativo, verrà aggiunto il messaggio di Uri per il <xref:System.Net.Http.HttpClient.BaseAddress%2A> proprietà per creare un Uri assoluto.</span><span class="sxs-lookup"><span data-stu-id="c3564-165">When sending a <xref:System.Net.Http.HttpRequestMessage> with a relative Uri, the message Uri will be added to the <xref:System.Net.Http.HttpClient.BaseAddress%2A> property to create an absolute Uri.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelPendingRequests">
      <MemberSignature Language="C#" Value="public void CancelPendingRequests ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelPendingRequests() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.CancelPendingRequests" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelPendingRequests ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelPendingRequests();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c3564-166">Annullare tutte le richieste in sospeso in questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-166">Cancel all pending requests on this instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-167">Dopo aver chiamato questo metodo, il <xref:System.Net.Http.HttpClient> istanza può ancora essere utilizzata per eseguire altre richieste.</span><span class="sxs-lookup"><span data-stu-id="c3564-167">After calling this method, the <xref:System.Net.Http.HttpClient> instance can still be used to execute additional requests.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRequestHeaders">
      <MemberSignature Language="C#" Value="public System.Net.Http.Headers.HttpRequestHeaders DefaultRequestHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.Headers.HttpRequestHeaders DefaultRequestHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.DefaultRequestHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultRequestHeaders As HttpRequestHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::Headers::HttpRequestHeaders ^ DefaultRequestHeaders { System::Net::Http::Headers::HttpRequestHeaders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.Headers.HttpRequestHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c3564-168">Ottiene le intestazioni che devono essere inviate con ogni richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-168">Gets the headers which should be sent with each request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c3564-169">Intestazioni da inviare con ogni richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-169">The headers which should be sent with each request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-170">Non necessario intestazioni impostato su questa proprietà deve essere impostato nuovamente su messaggi di richiesta.</span><span class="sxs-lookup"><span data-stu-id="c3564-170">Headers set on this property don't need to be set on request messages again.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c3564-171">Inviare una richiesta DELETE all'URI specificato come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-171">Send a DELETE request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteAsync (requestUri As String) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(System::String ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-172">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-172">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-173">Inviare una richiesta DELETE all'URI specificato come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-173">Send a DELETE request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-174">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-174">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-175">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-175">This operation will not block.</span></span> <span data-ttu-id="c3564-176">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intera risposta (contenuto incluso) verrà letta.</span><span class="sxs-lookup"><span data-stu-id="c3564-176">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-177">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-177">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c3564-178">Il messaggio di richiesta è già stato inviato dall'istanza di <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-178">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-179">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-179">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteAsync (requestUri As Uri) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(Uri ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-180">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-180">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-181">Inviare una richiesta DELETE all'URI specificato come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-181">Send a DELETE request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-182">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-182">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-183">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-183">This operation will not block.</span></span> <span data-ttu-id="c3564-184">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intera risposta (contenuto incluso) verrà letta.</span><span class="sxs-lookup"><span data-stu-id="c3564-184">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-185">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-185">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c3564-186">Il messaggio di richiesta è già stato inviato dall'istanza di <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-186">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-187">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-187">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (string requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(string requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(System::String ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-188">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-188">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c3564-189">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-189">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-190">Inviare una richiesta DELETE all'URI specificato con un token di annullamento come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-190">Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-191">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-191">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-192">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-192">This operation will not block.</span></span> <span data-ttu-id="c3564-193">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intera risposta (contenuto incluso) verrà letta.</span><span class="sxs-lookup"><span data-stu-id="c3564-193">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-194">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-194">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c3564-195">Il messaggio di richiesta è già stato inviato dall'istanza di <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-195">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-196">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-196">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (Uri requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(class System.Uri requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(Uri ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-197">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-197">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c3564-198">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-198">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-199">Inviare una richiesta DELETE all'URI specificato con un token di annullamento come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-199">Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-200">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-200">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-201">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-201">This operation will not block.</span></span> <span data-ttu-id="c3564-202">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intera risposta (contenuto incluso) verrà letta.</span><span class="sxs-lookup"><span data-stu-id="c3564-202">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-203">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-203">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c3564-204">Il messaggio di richiesta è già stato inviato dall'istanza di <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-204">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-205">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-205">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="c3564-206">
            <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-206">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-207">Rilascia le risorse non gestite usate da <see cref="T:System.Net.Http.HttpClient" /> e, facoltativamente, elimina le risorse gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-207">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpClient" /> and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-208">Questo metodo viene chiamato dal metodo pubblico `Dispose()` (metodo) e <xref:System.Object.Finalize%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="c3564-208">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="c3564-209">`Dispose()` richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="c3564-209">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="c3564-210"><xref:System.Object.Finalize%2A> richiama `Dispose` con `disposing` impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="c3564-210"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="c3564-211">Se il parametro `disposing` è `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti a cui la classe <xref:System.Net.Http.HttpClient> fa riferimento.</span><span class="sxs-lookup"><span data-stu-id="c3564-211">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpClient> references.</span></span> <span data-ttu-id="c3564-212">Il metodo richiama il metodo `Dispose()` di ciascun oggetto cui viene fatto riferimento.</span><span class="sxs-lookup"><span data-stu-id="c3564-212">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 <span data-ttu-id="c3564-213">Quando questo metodo viene chiamato, il <xref:System.Net.Http.HttpClient.CancelPendingRequests%2A> metodo viene chiamato per interrompere tutte le richieste in sospeso.</span><span class="sxs-lookup"><span data-stu-id="c3564-213">When this method is called, the <xref:System.Net.Http.HttpClient.CancelPendingRequests%2A> method is called to abort all pending requests.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c3564-214">Inviare una richiesta GET all'URI specificato come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-214">Send a GET request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-215">L'operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-215">The operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As String) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-216">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-216">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-217">Inviare una richiesta GET all'URI specificato come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-217">Send a GET request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-218">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-218">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-219">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-219">This operation will not block.</span></span> <span data-ttu-id="c3564-220">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intera risposta (contenuto incluso) verrà letta.</span><span class="sxs-lookup"><span data-stu-id="c3564-220">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-221">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-221">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-222">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-222">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As Uri) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-223">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-223">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-224">Inviare una richiesta GET all'URI specificato come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-224">Send a GET request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-225">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-225">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-226">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-226">This operation will not block.</span></span> <span data-ttu-id="c3564-227">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intera risposta (contenuto incluso) verrà letta.</span><span class="sxs-lookup"><span data-stu-id="c3564-227">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-228">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-228">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-229">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-229">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri, System.Net.Http.HttpCompletionOption completionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As String, completionOption As HttpCompletionOption) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri, System::Net::Http::HttpCompletionOption completionOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-230">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-230">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="c3564-231">Valore di opzione di completamento HTTP che indica quando l'operazione deve essere considerata completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-231">An HTTP completion option value that indicates when the operation should be considered completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-232">Inviare una richiesta GET all'URI specificato con un'opzione di completamento HTTP come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-232">Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-233">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-233">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-234">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-234">This operation will not block.</span></span> <span data-ttu-id="c3564-235">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato in base al parametro `completionOption` dopo che le risposte verranno lette parzialmente o totalmente (contenuto incluso).</span><span class="sxs-lookup"><span data-stu-id="c3564-235">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-236">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-236">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-237">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-237">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-238">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-238">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c3564-239">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-239">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-240">Inviare una richiesta GET all'URI specificato con un token di annullamento come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-240">Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-241">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-241">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-242">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-242">This operation will not block.</span></span> <span data-ttu-id="c3564-243">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intera risposta (contenuto incluso) verrà letta.</span><span class="sxs-lookup"><span data-stu-id="c3564-243">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-244">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-244">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-245">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-245">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri, System.Net.Http.HttpCompletionOption completionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As Uri, completionOption As HttpCompletionOption) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri, System::Net::Http::HttpCompletionOption completionOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-246">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-246">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="c3564-247">Valore di opzione di completamento HTTP che indica quando l'operazione deve essere considerata completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-247">An HTTP completion option value that indicates when the operation should be considered completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-248">Inviare una richiesta GET all'URI specificato con un'opzione di completamento HTTP come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-248">Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-249">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-249">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-250">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-250">This operation will not block.</span></span> <span data-ttu-id="c3564-251">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato in base al parametro `completionOption` dopo che le risposte verranno lette parzialmente o totalmente (contenuto incluso).</span><span class="sxs-lookup"><span data-stu-id="c3564-251">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-252">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-252">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-253">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-253">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-254">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-254">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c3564-255">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-255">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-256">Inviare una richiesta GET all'URI specificato con un token di annullamento come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-256">Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-257">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-257">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-258">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-258">This operation will not block.</span></span> <span data-ttu-id="c3564-259">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intera risposta (contenuto incluso) verrà letta.</span><span class="sxs-lookup"><span data-stu-id="c3564-259">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-260">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-260">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-261">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-261">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-262">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-262">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="c3564-263">Valore di opzione di completamento HTTP che indica quando l'operazione deve essere considerata completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-263">An HTTP  completion option value that indicates when the operation should be considered completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c3564-264">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-264">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-265">Inviare una richiesta GET all'URI specificato con un'opzione di completamento HTTP e un token di annullamento come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-265">Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-266">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-266">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-267">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-267">This operation will not block.</span></span> <span data-ttu-id="c3564-268">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato in base al parametro `completionOption` dopo che le risposte verranno lette parzialmente o totalmente (contenuto incluso).</span><span class="sxs-lookup"><span data-stu-id="c3564-268">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-269">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-269">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-270">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-270">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-271">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-271">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="c3564-272">Valore di opzione di completamento HTTP che indica quando l'operazione deve essere considerata completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-272">An HTTP  completion option value that indicates when the operation should be considered completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c3564-273">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-273">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-274">Inviare una richiesta GET all'URI specificato con un'opzione di completamento HTTP e un token di annullamento come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-274">Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-275">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-275">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-276">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-276">This operation will not block.</span></span> <span data-ttu-id="c3564-277">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato in base al parametro `completionOption` dopo che le risposte verranno lette parzialmente o totalmente (contenuto incluso).</span><span class="sxs-lookup"><span data-stu-id="c3564-277">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-278">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-278">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-279">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-279">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteArrayAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c3564-280">Inviare una richiesta GET all'URI specificato e restituire il corpo della risposta come matrice di byte in un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-280">Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-281">L'operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-281">The operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteArrayAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; GetByteArrayAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; GetByteArrayAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteArrayAsync (requestUri As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ GetByteArrayAsync(System::String ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetByteArrayAsync&gt;c__async1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-282">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-282">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-283">Inviare una richiesta GET all'URI specificato e restituire il corpo della risposta come matrice di byte in un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-283">Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-284">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-284">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-285">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-285">This operation will not block.</span></span> <span data-ttu-id="c3564-286">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intero corpo della risposta verrà letto.</span><span class="sxs-lookup"><span data-stu-id="c3564-286">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-287">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-287">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-288">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-288">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByteArrayAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; GetByteArrayAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; GetByteArrayAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteArrayAsync (requestUri As Uri) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ GetByteArrayAsync(Uri ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetByteArrayAsync&gt;c__async2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-289">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-289">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-290">Inviare una richiesta GET all'URI specificato e restituire il corpo della risposta come matrice di byte in un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-290">Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-291">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-291">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-292">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-292">This operation will not block.</span></span> <span data-ttu-id="c3564-293">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intero corpo della risposta verrà letto.</span><span class="sxs-lookup"><span data-stu-id="c3564-293">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-294">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-294">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-295">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-295">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStreamAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c3564-296">Inviare una richiesta GET all'URI specificato e restituisce il corpo della risposta come flusso in un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-296">Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-297">L'operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-297">The operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStreamAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetStreamAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetStreamAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStreamAsync (requestUri As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ GetStreamAsync(System::String ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetStreamAsync&gt;c__async3))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-298">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-298">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-299">Inviare una richiesta GET all'URI specificato e restituisce il corpo della risposta come flusso in un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-299">Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-300">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-300">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-301">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-301">This operation will not block.</span></span> <span data-ttu-id="c3564-302">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intero corpo della risposta verrà letto.</span><span class="sxs-lookup"><span data-stu-id="c3564-302">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span> <span data-ttu-id="c3564-303">Questo metodo non memorizza nel buffer nel flusso.</span><span class="sxs-lookup"><span data-stu-id="c3564-303">This method does not buffer the stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-304">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-304">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-305">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-305">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStreamAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetStreamAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetStreamAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStreamAsync (requestUri As Uri) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ GetStreamAsync(Uri ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetStreamAsync&gt;c__async4))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-306">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-306">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-307">Inviare una richiesta GET all'URI specificato e restituisce il corpo della risposta come flusso in un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-307">Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-308">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-308">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-309">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-309">This operation will not block.</span></span> <span data-ttu-id="c3564-310">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intero corpo della risposta verrà letto.</span><span class="sxs-lookup"><span data-stu-id="c3564-310">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span> <span data-ttu-id="c3564-311">Questo metodo non memorizza nel buffer nel flusso.</span><span class="sxs-lookup"><span data-stu-id="c3564-311">This method does not buffer the stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-312">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-312">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-313">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-313">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStringAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c3564-314">Inviare una richiesta GET all'URI specificato e restituisce il corpo della risposta come stringa in un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-314">Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-315">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-315">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetStringAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; GetStringAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStringAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStringAsync (requestUri As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ GetStringAsync(System::String ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetStringAsync&gt;c__async5))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-316">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-316">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-317">Inviare una richiesta GET all'URI specificato e restituisce il corpo della risposta come stringa in un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-317">Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-318">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-318">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-319">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-319">This operation will not block.</span></span> <span data-ttu-id="c3564-320">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intero corpo della risposta verrà letto.</span><span class="sxs-lookup"><span data-stu-id="c3564-320">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-321">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-321">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-322">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-322">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetStringAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; GetStringAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStringAsync (requestUri As Uri) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ GetStringAsync(Uri ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetStringAsync&gt;c__async6))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-323">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-323">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-324">Inviare una richiesta GET all'URI specificato e restituisce il corpo della risposta come stringa in un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-324">Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-325">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-325">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-326">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-326">This operation will not block.</span></span> <span data-ttu-id="c3564-327">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intero corpo della risposta verrà letto.</span><span class="sxs-lookup"><span data-stu-id="c3564-327">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-328">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-328">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-329">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-329">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaxResponseContentBufferSize">
      <MemberSignature Language="C#" Value="public long MaxResponseContentBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxResponseContentBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxResponseContentBufferSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxResponseContentBufferSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c3564-330">Ottiene o imposta il numero massimo di byte per la memorizzazione nel buffer durante la lettura del contenuto della risposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-330">Gets or sets the maximum number of bytes to buffer when reading the response content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c3564-331">Numero massimo di byte per la memorizzazione nel buffer durante la lettura del contenuto della risposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-331">The maximum number of bytes to buffer when reading the response content.</span>
          </span>
          <span data-ttu-id="c3564-332">Il valore predefinito di questa proprietà è 2 gigabyte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-332">The default value for this property is 2 gigabytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-333">Un'app è possibile impostare il <xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A> proprietà su un valore inferiore per limitare le dimensioni della risposta nel buffer durante la lettura della risposta.</span><span class="sxs-lookup"><span data-stu-id="c3564-333">An app can set the <xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A> property to a lower value to limit the size of the response to buffer when reading the response.</span></span> <span data-ttu-id="c3564-334">Se le dimensioni del contenuto della risposta sono maggiore di <xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A> proprietà, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="c3564-334">If the size of the response content is greater than the  <xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A> property, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c3564-335">Le dimensioni specificate sono inferiori o uguali a zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-335">The size specified is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c3564-336">È già stata avviata un'operazione sull'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-336">An operation has already been started on the current instance.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c3564-337">L'istanza corrente è stata eliminata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-337">The current instance has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (string requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(string requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PatchAsync (requestUri As String, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (Uri requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PatchAsync (requestUri As Uri, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(string requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PostAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c3564-338">Inviare una richiesta POST all'URI specificato come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-338">Send a POST request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-339">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-339">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (string requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(string requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PostAsync (requestUri As String, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-340">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-340">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="c3564-341">Il contenuto della richiesta HTTP inviato al server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-341">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-342">Inviare una richiesta POST all'URI specificato come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-342">Send a POST request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-343">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-343">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-344">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-344">This operation will not block.</span></span> <span data-ttu-id="c3564-345">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intera risposta (contenuto incluso) verrà letta.</span><span class="sxs-lookup"><span data-stu-id="c3564-345">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-346">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-346">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-347">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-347">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (Uri requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PostAsync (requestUri As Uri, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-348">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-348">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="c3564-349">Il contenuto della richiesta HTTP inviato al server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-349">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-350">Inviare una richiesta POST all'URI specificato come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-350">Send a POST request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-351">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-351">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-352">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-352">This operation will not block.</span></span> <span data-ttu-id="c3564-353">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intera risposta (contenuto incluso) verrà letta.</span><span class="sxs-lookup"><span data-stu-id="c3564-353">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-354">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-354">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-355">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-355">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(string requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-356">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-356">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="c3564-357">Il contenuto della richiesta HTTP inviato al server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-357">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c3564-358">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-358">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-359">Inviare una richiesta POST con un token di annullamento come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-359">Send a POST request with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-360">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-360">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-361">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-361">This operation will not block.</span></span> <span data-ttu-id="c3564-362">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intera risposta (contenuto incluso) verrà letta.</span><span class="sxs-lookup"><span data-stu-id="c3564-362">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-363">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-363">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-364">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-364">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-365">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-365">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="c3564-366">Il contenuto della richiesta HTTP inviato al server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-366">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c3564-367">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-367">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-368">Inviare una richiesta POST con un token di annullamento come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-368">Send a POST request with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-369">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-369">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-370">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-370">This operation will not block.</span></span> <span data-ttu-id="c3564-371">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intera risposta (contenuto incluso) verrà letta.</span><span class="sxs-lookup"><span data-stu-id="c3564-371">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-372">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-372">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-373">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-373">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="PutAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c3564-374">Inviare una richiesta PUT all'URI specificato come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-374">Send a PUT request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-375">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-375">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (string requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(string requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PutAsync (requestUri As String, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-376">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-376">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="c3564-377">Il contenuto della richiesta HTTP inviato al server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-377">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-378">Inviare una richiesta PUT all'URI specificato come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-378">Send a PUT request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-379">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-379">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-380">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-380">This operation will not block.</span></span> <span data-ttu-id="c3564-381">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intera risposta (contenuto incluso) verrà letta.</span><span class="sxs-lookup"><span data-stu-id="c3564-381">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-382">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-382">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-383">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-383">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (Uri requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PutAsync (requestUri As Uri, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-384">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-384">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="c3564-385">Il contenuto della richiesta HTTP inviato al server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-385">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-386">Inviare una richiesta PUT all'URI specificato come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-386">Send a PUT request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-387">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-387">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-388">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-388">This operation will not block.</span></span> <span data-ttu-id="c3564-389">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intera risposta (contenuto incluso) verrà letta.</span><span class="sxs-lookup"><span data-stu-id="c3564-389">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-390">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-390">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-391">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-391">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(string requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-392">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-392">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="c3564-393">Il contenuto della richiesta HTTP inviato al server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-393">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c3564-394">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-394">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-395">Inviare una richiesta PUT con un token di annullamento come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-395">Send a PUT request with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-396">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-396">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-397">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-397">This operation will not block.</span></span> <span data-ttu-id="c3564-398">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intera risposta (contenuto incluso) verrà letta.</span><span class="sxs-lookup"><span data-stu-id="c3564-398">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-399">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-399">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-400">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-400">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="c3564-401">L'URI a cui viene inviata la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-401">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="c3564-402">Il contenuto della richiesta HTTP inviato al server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-402">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c3564-403">Token di annullamento utilizzabile da altri oggetti o thread per ricevere l'avviso dell'annullamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-403">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-404">Inviare una richiesta PUT con un token di annullamento come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-404">Send a PUT request with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-405">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-405">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-406">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-406">This operation will not block.</span></span> <span data-ttu-id="c3564-407">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> verrà completato dopo che l'intera risposta (contenuto incluso) verrà letta.</span><span class="sxs-lookup"><span data-stu-id="c3564-407">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-408">L'elemento <paramref name="requestUri" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-408">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-409">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-409">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c3564-410">Inviare una richiesta HTTP come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-410">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-411">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-411">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (request As HttpRequestMessage) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="c3564-412">Messaggio di richiesta HTTP da inviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-412">The HTTP request message to send.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-413">Inviare una richiesta HTTP come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-413">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-414">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-414">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-415">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-415">This operation will not block.</span></span> <span data-ttu-id="c3564-416">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che viene letta l'intera risposta, incluso il contenuto.</span><span class="sxs-lookup"><span data-stu-id="c3564-416">The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-417">L'elemento <paramref name="request" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-417">The <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c3564-418">Il messaggio di richiesta è già stato inviato dall'istanza di <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-418">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-419">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-419">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.Http.HttpCompletionOption completionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (request As HttpRequestMessage, completionOption As HttpCompletionOption) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Net::Http::HttpCompletionOption completionOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="c3564-420">Messaggio di richiesta HTTP da inviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-420">The HTTP request message to send.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="c3564-421">Quando l'operazione deve essere completata (non appena la risposta è disponibile o dopo aver letto l'intero contenuto della risposta).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-421">When the operation should complete (as soon as a response is available or after reading the whole response content).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-422">Inviare una richiesta HTTP come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-422">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-423">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-423">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-424">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-424">This operation will not block.</span></span> <span data-ttu-id="c3564-425">In base al valore di `completionOption` parametro, l'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completata non appena è disponibile una risposta o l'intera risposta, incluso il contenuto viene letto.</span><span class="sxs-lookup"><span data-stu-id="c3564-425">Depending on the value of the `completionOption` parameter, the returned <xref:System.Threading.Tasks.Task%601> object will complete as soon as a response is available or the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-426">L'elemento <paramref name="request" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-426">The <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c3564-427">Il messaggio di richiesta è già stato inviato dall'istanza di <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-427">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-428">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-428">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="c3564-429">Messaggio di richiesta HTTP da inviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-429">The HTTP request message to send.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c3564-430">Token di annullamento per annullare l'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-430">The cancellation token to cancel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-431">Inviare una richiesta HTTP come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-431">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-432">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-432">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-433">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-433">This operation will not block.</span></span> <span data-ttu-id="c3564-434">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che viene letta l'intera risposta, incluso il contenuto.</span><span class="sxs-lookup"><span data-stu-id="c3564-434">The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-435">L'elemento <paramref name="request" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-435">The <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c3564-436">Il messaggio di richiesta è già stato inviato dall'istanza di <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-436">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-437">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-437">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.Http.HttpCompletionOption completionOption, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="c3564-438">Messaggio di richiesta HTTP da inviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-438">The HTTP request message to send.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="c3564-439">Quando l'operazione deve essere completata (non appena la risposta è disponibile o dopo aver letto l'intero contenuto della risposta).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-439">When the operation should complete (as soon as a response is available or after reading the whole response content).</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="c3564-440">Token di annullamento per annullare l'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-440">The cancellation token to cancel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3564-441">Inviare una richiesta HTTP come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-441">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3564-442">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-442">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-443">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c3564-443">This operation will not block.</span></span> <span data-ttu-id="c3564-444">In base al valore di `completionOption` parametro, l'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completata non appena è disponibile una risposta o l'intera risposta, incluso il contenuto viene letto.</span><span class="sxs-lookup"><span data-stu-id="c3564-444">Depending on the value of the `completionOption` parameter, the returned <xref:System.Threading.Tasks.Task%601> object will complete as soon as a response is available or the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3564-445">L'elemento <paramref name="request" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-445">The <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c3564-446">Il messaggio di richiesta è già stato inviato dall'istanza di <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-446">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="c3564-447">La richiesta non è riuscita a causa di un problema sottostante, ad esempio un problema di connettività di rete, del DNS, di convalida del certificato server o di timeout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-447">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public TimeSpan Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Timeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c3564-448">Ottiene o imposta l'intervallo di tempo da attendere prima che si verifichi il timeout della richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-448">Gets or sets the timespan to wait before the request times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c3564-449">Intervallo di tempo da attendere prima che si verifichi il timeout della richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-449">The timespan to wait before the request times out.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3564-450">Il valore predefinito è 100.000 millisecondi (100 secondi).</span><span class="sxs-lookup"><span data-stu-id="c3564-450">The default value is 100,000 milliseconds (100 seconds).</span></span>  
  
 <span data-ttu-id="c3564-451">Per impostare un timeout infinito, impostare il valore della proprietà su <xref:System.Threading.Timeout.InfiniteTimeSpan>.</span><span class="sxs-lookup"><span data-stu-id="c3564-451">To set an infinite timeout, set the property value to <xref:System.Threading.Timeout.InfiniteTimeSpan>.</span></span>  
  
 <span data-ttu-id="c3564-452">Una query di sistema DNS (Domain Name) può richiedere fino a 15 secondi o il timeout. Se la richiesta contiene un nome host che richiede la risoluzione e si imposta <xref:System.Net.Http.HttpClient.Timeout%2A> su un valore inferiore a 15 secondi, potrebbe richiedere più di 15 secondi prima di un <xref:System.Net.WebException> viene generata per indicare un timeout della richiesta.</span><span class="sxs-lookup"><span data-stu-id="c3564-452">A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set <xref:System.Net.Http.HttpClient.Timeout%2A> to a value less than 15 seconds, it may take 15 seconds or more before a <xref:System.Net.WebException> is thrown to indicate a timeout on your request.</span></span>  
  
 <span data-ttu-id="c3564-453">Il timeout stesso sarà valide per tutte le richieste utilizzando questo <xref:System.Net.Http.HttpClient> istanza.</span><span class="sxs-lookup"><span data-stu-id="c3564-453">The same timeout will apply for all requests using this <xref:System.Net.Http.HttpClient> instance.</span></span>  <span data-ttu-id="c3564-454">È inoltre possibile impostare timeout diversi per le singole richieste utilizzando un <xref:System.Threading.CancellationTokenSource> su un'attività.</span><span class="sxs-lookup"><span data-stu-id="c3564-454">You may also set different timeouts for individual requests using a <xref:System.Threading.CancellationTokenSource> on a task.</span></span> <span data-ttu-id="c3564-455">Si noti che verranno applicate solo dei due timeout più breve.</span><span class="sxs-lookup"><span data-stu-id="c3564-455">Note that only the shorter of the two timeouts will apply.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c3564-456">Il timeout specificato è minore o uguale a zero e non è <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-456">The timeout specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c3564-457">È già stata avviata un'operazione sull'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-457">An operation has already been started on the current instance.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c3564-458">L'istanza corrente è stata eliminata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3564-458">The current instance has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>