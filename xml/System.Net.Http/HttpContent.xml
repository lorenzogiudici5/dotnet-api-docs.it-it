<Type Name="HttpContent" FullName="System.Net.Http.HttpContent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="48f984a2490e5cb14e5add7c00a1d776d6d06ddc" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39973846" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HttpContent : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpContent extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpContent" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpContent&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpContent abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type HttpContent = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="2fb66-101">Classe di base che rappresenta il corpo di un'entità HTTP e le intestazioni del contenuto.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2fb66-101">A base class representing an HTTP entity body and content headers.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpContent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2fb66-102">Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.HttpContent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-102">Initializes a new instance of the <see cref="T:System.Net.Http.HttpContent" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyToAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2fb66-103">Serializza il contenuto HTTP in un flusso di byte e lo copia nell'oggetto flusso fornito come parametro di <paramref name="stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-103">Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <paramref name="stream" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb66-104">Questa operazione non blocca.</span><span class="sxs-lookup"><span data-stu-id="2fb66-104">This operation does not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.CopyToAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task" Usage="httpContent.CopyToAsync stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="2fb66-105">Il flusso di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-105">The target stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2fb66-106">Serializza il contenuto HTTP in un flusso di byte e lo copia nell'oggetto flusso fornito come parametro di <paramref name="stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-106">Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <paramref name="stream" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2fb66-107">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-107">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb66-108">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="2fb66-108">This operation will not block.</span></span> <span data-ttu-id="2fb66-109">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che tutto il contenuto è stato scritto per l'oggetto di flusso passato come il `stream` parametro.</span><span class="sxs-lookup"><span data-stu-id="2fb66-109">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the stream object passed as the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream stream, System.Net.TransportContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream stream, class System.Net.TransportContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.CopyToAsync : System.IO.Stream * System.Net.TransportContext -&gt; System.Threading.Tasks.Task" Usage="httpContent.CopyToAsync (stream, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="context" Type="System.Net.TransportContext" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="2fb66-110">Il flusso di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-110">The target stream.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="2fb66-111">Informazioni relative al trasporto, ad esempio il token di associazione del canale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-111">Information about the transport (channel binding token, for example).</span>
          </span>
          <span data-ttu-id="2fb66-112">Questo parametro può essere <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-112">This parameter may be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2fb66-113">Serializza il contenuto HTTP in un flusso di byte e lo copia nell'oggetto flusso fornito come parametro di <paramref name="stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-113">Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <paramref name="stream" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2fb66-114">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-114">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb66-115">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="2fb66-115">This operation will not block.</span></span> <span data-ttu-id="2fb66-116">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che tutto il contenuto è stato scritto per l'oggetto di flusso passato come il `stream` parametro.</span><span class="sxs-lookup"><span data-stu-id="2fb66-116">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the stream object passed as the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContentReadStreamAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; CreateContentReadStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; CreateContentReadStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateContentReadStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ CreateContentReadStreamAsync();" />
      <MemberSignature Language="F#" Value="abstract member CreateContentReadStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.CreateContentReadStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="httpContent.CreateContentReadStreamAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2fb66-117">Serializza il contenuto HTTP in un flusso di memoria come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-117">Serialize the HTTP content to a memory stream as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2fb66-118">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-118">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb66-119">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="2fb66-119">This operation will not block.</span></span> <span data-ttu-id="2fb66-120">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che tutto il contenuto è stato scritto nel flusso di memoria.</span><span class="sxs-lookup"><span data-stu-id="2fb66-120">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the memory stream.</span></span>  
  
 <span data-ttu-id="2fb66-121">Al termine dell'operazione, il <xref:System.Threading.Tasks.Task%601.Result%2A> proprietà nell'oggetto attività restituito contiene il flusso di memoria che rappresenta il contenuto HTTP.</span><span class="sxs-lookup"><span data-stu-id="2fb66-121">Once the operation completes, the  <xref:System.Threading.Tasks.Task%601.Result%2A> property on the returned task object contains the memory stream that that represents the HTTP content.</span></span> <span data-ttu-id="2fb66-122">Il flusso restituito è quindi utilizzabile per leggere il contenuto usando varie API di flusso.</span><span class="sxs-lookup"><span data-stu-id="2fb66-122">The returned stream can then be used to read the content using various stream APIs.</span></span>  
  
 <span data-ttu-id="2fb66-123">Il <xref:System.Net.Http.HttpContent.CreateContentReadStreamAsync%2A> metodo memorizza nel buffer il contenuto da un flusso di memoria.</span><span class="sxs-lookup"><span data-stu-id="2fb66-123">The <xref:System.Net.Http.HttpContent.CreateContentReadStreamAsync%2A> method buffers the content to a memory stream.</span></span> <span data-ttu-id="2fb66-124">Le classi derivate possono ignorare questo comportamento se vi è un modo migliore per recuperare il contenuto come flusso.</span><span class="sxs-lookup"><span data-stu-id="2fb66-124">Derived classes can override this behavior if there is a better way to retrieve the content as stream.</span></span> <span data-ttu-id="2fb66-125">Ad esempio, una matrice di byte o una stringa è stato possibile usare un modo più efficiente metodo, ad esempio il wrapping di sola lettura <xref:System.IO.MemoryStream> intorno al byte o stringa.)</span><span class="sxs-lookup"><span data-stu-id="2fb66-125">For example, a byte array or a string could use a more efficient method way such as wrapping a read-only <xref:System.IO.MemoryStream> around the bytes or string.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2fb66-126">Rilascia le risorse non gestite usate da <see cref="T:System.Net.Http.HttpContent" /> e, facoltativamente, elimina le risorse gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-126">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpContent" /> and optionally disposes of the managed resources.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="httpContent.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2fb66-127">Rilascia le risorse non gestite ed elimina le risorse gestite utilizzate dall'oggetto <see cref="T:System.Net.Http.HttpContent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-127">Releases the unmanaged resources and disposes of the managed resources used by the <see cref="T:System.Net.Http.HttpContent" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="httpContent.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="2fb66-128">
            <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-128">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2fb66-129">Rilascia le risorse non gestite usate da <see cref="T:System.Net.Http.HttpContent" /> e, facoltativamente, elimina le risorse gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-129">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpContent" /> and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb66-130">Questo metodo viene chiamato da parte del pubblico `Dispose()` metodo e <xref:System.Object.Finalize%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="2fb66-130">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="2fb66-131">`Dispose()` richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="2fb66-131">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="2fb66-132"><xref:System.Object.Finalize%2A> richiama `Dispose` con `disposing` impostato su `false`. Quando la `disposing` parametro è `true`, questo metodo rilascia tutte le risorse utilizzate da qualsiasi oggetto gestito da questo <xref:System.Net.Http.HttpContent> riferimenti.</span><span class="sxs-lookup"><span data-stu-id="2fb66-132"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpContent> references.</span></span> <span data-ttu-id="2fb66-133">Il metodo richiama il metodo `Dispose()` di ciascun oggetto cui viene fatto riferimento.</span><span class="sxs-lookup"><span data-stu-id="2fb66-133">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Net.Http.Headers.HttpContentHeaders Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.Headers.HttpContentHeaders Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpContent.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As HttpContentHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::Headers::HttpContentHeaders ^ Headers { System::Net::Http::Headers::HttpContentHeaders ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.Http.Headers.HttpContentHeaders" Usage="System.Net.Http.HttpContent.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.Headers.HttpContentHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fb66-134">Ottiene le intestazioni di contenuto HTTP, come definito in RFC 2616.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-134">Gets the HTTP content headers as defined in RFC 2616.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fb66-135">Intestazioni di contenuto HTTP, come definito in RFC 2616.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-135">The content headers as defined in RFC 2616.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadIntoBufferAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2fb66-136">Serializza il contenuto HTTP in un buffer di memoria come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-136">Serialize the HTTP content to a memory buffer as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb66-137">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="2fb66-137">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadIntoBufferAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoadIntoBufferAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LoadIntoBufferAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadIntoBufferAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ LoadIntoBufferAsync();" />
      <MemberSignature Language="F#" Value="member this.LoadIntoBufferAsync : unit -&gt; System.Threading.Tasks.Task" Usage="httpContent.LoadIntoBufferAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2fb66-138">Serializza il contenuto HTTP in un buffer di memoria come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-138">Serialize the HTTP content to a memory buffer as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2fb66-139">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-139">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb66-140">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="2fb66-140">This operation will not block.</span></span> <span data-ttu-id="2fb66-141">L'oggetto restituito <xref:System.Threading.Tasks.Task> oggetto verrà completato dopo che tutto il contenuto è stato serializzato al buffer di memoria.</span><span class="sxs-lookup"><span data-stu-id="2fb66-141">The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been serialized to the memory buffer.</span></span>  
  
 <span data-ttu-id="2fb66-142">Dopo che il contenuto viene serializzato in un buffer di memoria, le chiamate a uno del <xref:System.Net.Http.HttpContent.CopyToAsync%2A> metodi verranno copiato il contenuto del buffer di memoria per il flusso di destinazione.</span><span class="sxs-lookup"><span data-stu-id="2fb66-142">After content is serialized to a memory buffer, calls to one of the  <xref:System.Net.Http.HttpContent.CopyToAsync%2A> methods will copy the content of the memory buffer to the target stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadIntoBufferAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoadIntoBufferAsync (long maxBufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LoadIntoBufferAsync(int64 maxBufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadIntoBufferAsync (maxBufferSize As Long) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ LoadIntoBufferAsync(long maxBufferSize);" />
      <MemberSignature Language="F#" Value="member this.LoadIntoBufferAsync : int64 -&gt; System.Threading.Tasks.Task" Usage="httpContent.LoadIntoBufferAsync maxBufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxBufferSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="maxBufferSize">
          <span data-ttu-id="2fb66-143">Dimensione massima, in byte, del buffer da usare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-143">The maximum size, in bytes, of the buffer to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2fb66-144">Serializza il contenuto HTTP in un buffer di memoria come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-144">Serialize the HTTP content to a memory buffer as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2fb66-145">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-145">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb66-146">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="2fb66-146">This operation will not block.</span></span> <span data-ttu-id="2fb66-147">L'oggetto restituito <xref:System.Threading.Tasks.Task> oggetto verrà completato dopo che tutto il contenuto è stato serializzato al buffer di memoria.</span><span class="sxs-lookup"><span data-stu-id="2fb66-147">The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been serialized to the memory buffer.</span></span>  
  
 <span data-ttu-id="2fb66-148">Dopo che il contenuto viene serializzato in un buffer di memoria, le chiamate a uno del <xref:System.Net.Http.HttpContent.CopyToAsync%2A> metodi verranno copiato il contenuto del buffer di memoria per il flusso di destinazione.</span><span class="sxs-lookup"><span data-stu-id="2fb66-148">After content is serialized to a memory buffer, calls to one of the  <xref:System.Net.Http.HttpContent.CopyToAsync%2A> methods will copy the content of the memory buffer to the target stream.</span></span>  
  
 <span data-ttu-id="2fb66-149">Se il contenuto supera il valore passato il `maxBufferSize` parametro, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="2fb66-149">If the content exceeds the value  passed in the `maxBufferSize` parameter , an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsByteArrayAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; ReadAsByteArrayAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; ReadAsByteArrayAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsByteArrayAsync () As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ ReadAsByteArrayAsync();" />
      <MemberSignature Language="F#" Value="member this.ReadAsByteArrayAsync : unit -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="httpContent.ReadAsByteArrayAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2fb66-150">Serializza il contenuto HTTP in una matrice di byte come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-150">Serialize the HTTP content to a byte array as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2fb66-151">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-151">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb66-152">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="2fb66-152">This operation will not block.</span></span> <span data-ttu-id="2fb66-153">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che tutto il contenuto è stato scritto come una matrice di byte.</span><span class="sxs-lookup"><span data-stu-id="2fb66-153">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written as a byte array.</span></span>  
  
 <span data-ttu-id="2fb66-154">Al termine dell'operazione, il <xref:System.Threading.Tasks.Task%601.Result%2A> proprietà nell'oggetto attività restituito contiene la matrice di byte con il contenuto HTTP.</span><span class="sxs-lookup"><span data-stu-id="2fb66-154">Once the operation completes, the  <xref:System.Threading.Tasks.Task%601.Result%2A> property on the returned task object contains the byte array with the HTTP content.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsStreamAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; ReadAsStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; ReadAsStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.ReadAsStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ ReadAsStreamAsync();" />
      <MemberSignature Language="F#" Value="member this.ReadAsStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="httpContent.ReadAsStreamAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2fb66-155">Serializza il contenuto HTTP e restituisce un flusso che rappresenta il contenuto come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-155">Serialize the HTTP content and return a stream that represents the content as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2fb66-156">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-156">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb66-157">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="2fb66-157">This operation will not block.</span></span> <span data-ttu-id="2fb66-158">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completata dopo tutti del flusso che rappresenta il contenuto è stato letto.</span><span class="sxs-lookup"><span data-stu-id="2fb66-158">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the stream that represents content has been read.</span></span>  
  
 <span data-ttu-id="2fb66-159">Al termine dell'operazione, il <xref:System.Threading.Tasks.Task%601.Result%2A> proprietà nell'oggetto attività restituito contiene il flusso che rappresenta il contenuto HTTP.</span><span class="sxs-lookup"><span data-stu-id="2fb66-159">Once the operation completes, the  <xref:System.Threading.Tasks.Task%601.Result%2A> property on the returned task object contains the stream that that represents the HTTP content.</span></span> <span data-ttu-id="2fb66-160">Il flusso restituito è quindi utilizzabile per leggere il contenuto usando varie API di flusso.</span><span class="sxs-lookup"><span data-stu-id="2fb66-160">The returned stream can then be used to read the content using various stream APIs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; ReadAsStringAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadAsStringAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.ReadAsStringAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsStringAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadAsStringAsync();" />
      <MemberSignature Language="F#" Value="member this.ReadAsStringAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="httpContent.ReadAsStringAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2fb66-161">Serializza il contenuto HTTP in una stringa come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-161">Serialize the HTTP content to a string as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2fb66-162">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-162">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb66-163">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="2fb66-163">This operation will not block.</span></span> <span data-ttu-id="2fb66-164">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che tutto il contenuto è stato scritto sotto forma di stringa.</span><span class="sxs-lookup"><span data-stu-id="2fb66-164">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written as a string.</span></span>  
  
 <span data-ttu-id="2fb66-165">Al termine dell'operazione, il <xref:System.Threading.Tasks.Task%601.Result%2A> proprietà nell'oggetto attività restituito contiene la stringa con il contenuto HTTP.</span><span class="sxs-lookup"><span data-stu-id="2fb66-165">Once the operation completes, the  <xref:System.Threading.Tasks.Task%601.Result%2A> property on the returned task object contains the string with the HTTP content.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeToStreamAsync">
      <MemberSignature Language="C#" Value="protected internal abstract System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task SerializeToStreamAsync(class System.IO.Stream stream, class System.Net.TransportContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Threading::Tasks::Task ^ SerializeToStreamAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member SerializeToStreamAsync : System.IO.Stream * System.Net.TransportContext -&gt; System.Threading.Tasks.Task" Usage="httpContent.SerializeToStreamAsync (stream, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="context" Type="System.Net.TransportContext" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="2fb66-166">Il flusso di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-166">The target stream.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="2fb66-167">Informazioni relative al trasporto, ad esempio il token di associazione del canale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-167">Information about the transport (channel binding token, for example).</span>
          </span>
          <span data-ttu-id="2fb66-168">Questo parametro può essere <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-168">This parameter may be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2fb66-169">Serializza il contenuto HTTP in un flusso come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-169">Serialize the HTTP content to a stream as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2fb66-170">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-170">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb66-171">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="2fb66-171">This operation will not block.</span></span> <span data-ttu-id="2fb66-172">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che tutto il contenuto è stato serializzato nell'oggetto flusso passato il `stream` parametro.</span><span class="sxs-lookup"><span data-stu-id="2fb66-172">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been serialized to the stream object passed in the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryComputeLength">
      <MemberSignature Language="C#" Value="protected internal abstract bool TryComputeLength (out long length);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryComputeLength([out] int64&amp; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function TryComputeLength (ByRef length As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool TryComputeLength([Runtime::InteropServices::Out] long % length);" />
      <MemberSignature Language="F#" Value="abstract member TryComputeLength :  -&gt; bool" Usage="httpContent.TryComputeLength length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="length">
          <span data-ttu-id="2fb66-173">Lunghezza in byte del contenuto HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-173">The length in bytes of the HTTP content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2fb66-174">Determina se il contenuto HTTP ha una lunghezza in byte valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-174">Determines whether the HTTP content has a valid length in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2fb66-175">
            <see langword="true" /> se <paramref name="length" /> è una lunghezza valida; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fb66-175">
              <see langword="true" /> if <paramref name="length" /> is a valid length; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb66-176">Il <xref:System.Net.Http.HttpContent.TryComputeLength%2A> metodo fornisce un contenuto HTTP la possibilità di calcolare la lunghezza del contenuto.</span><span class="sxs-lookup"><span data-stu-id="2fb66-176">The <xref:System.Net.Http.HttpContent.TryComputeLength%2A> method gives a HTTP content the ability to calculate the content length.</span></span> <span data-ttu-id="2fb66-177">Ciò è utile per i tipi di contenuto che sono in grado di calcolare con facilità la lunghezza del contenuto.</span><span class="sxs-lookup"><span data-stu-id="2fb66-177">This is useful for content types which are able to easily calculate the content length.</span></span> <span data-ttu-id="2fb66-178">Se la lunghezza del contenuto non è possibile o costoso (richiede il sistema per memorizzare nel buffer l'intero contenuto in cui la serializzazione sarebbe costoso o richiedere al sistema di allocare una grande quantità di memoria) di elaborazione, questo metodo può restituire `false`.</span><span class="sxs-lookup"><span data-stu-id="2fb66-178">If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`.</span></span> <span data-ttu-id="2fb66-179">Se questo metodo restituisce `false`, ciò implica che il trasferimento in blocchi è necessaria o il contenuto deve ottenere memorizzato nel buffer prima dell'invio al server.</span><span class="sxs-lookup"><span data-stu-id="2fb66-179">If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>