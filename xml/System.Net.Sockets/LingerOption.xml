<Type Name="LingerOption" FullName="System.Net.Sockets.LingerOption">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="220b97634aece2bfc4c196565939b807c250bace" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39887621" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LingerOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LingerOption extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.LingerOption" />
  <TypeSignature Language="VB.NET" Value="Public Class LingerOption" />
  <TypeSignature Language="C++ CLI" Value="public ref class LingerOption" />
  <TypeSignature Language="F#" Value="type LingerOption = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Specifica se un oggetto <see cref="T:System.Net.Sockets.Socket" /> resterà connesso dopo una chiamata ai metodi <see cref="M:System.Net.Sockets.Socket.Close" /> o <see cref="M:System.Net.Sockets.TcpClient.Close" /> e il periodo di tempo che resterà connesso, se restano dati da inviare.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si potrebbero ancora essere dati disponibile nel buffer di rete in uscita dopo che un'applicazione chiama il <xref:System.Net.Sockets.Socket> o <xref:System.Net.Sockets.TcpClient> (metodo). Se si desidera specificare la quantità di tempo che il <xref:System.Net.Sockets.Socket> tenterà di trasmettere i dati dopo la chiusura, creare un <xref:System.Net.Sockets.LingerOption> con il `enable` parametro impostato su `true`e il `seconds` parametro impostato per la quantità di tempo desiderata . Il `seconds` parametro viene utilizzato per indicare quanto tempo si desidera che il <xref:System.Net.Sockets.Socket> per mantenere la connessione prima del timeout. Se non si desidera la <xref:System.Net.Sockets.Socket> per rimanere connesso per un periodo di tempo dopo la chiusura, creare un <xref:System.Net.Sockets.LingerOption> dell'istanza con la `enable` parametro impostato su `true` e il `seconds` parametro impostato su zero. In questo caso, il <xref:System.Net.Sockets.Socket> verrà chiusa immediatamente ed eventuali messaggi non inviati i dati andranno persi. Una volta creato, passare il <xref:System.Net.Sockets.LingerOption> per il <xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=nameWithType> (metodo). Se si inviano e ricevono i dati con un <xref:System.Net.Sockets.TcpClient>, quindi impostare il <xref:System.Net.Sockets.LingerOption> dell'istanza nel <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=nameWithType> proprietà.  
  
 Lo stack IP calcola il periodo di timeout predefinito protocollo IP da usare in base all'ora di andata e ritorno della connessione. Nella maggior parte dei casi, il timeout calcolato da parte dello stack è più utile rispetto a quello definito da un'applicazione. Si tratta del comportamento predefinito per un <xref:System.Net.Sockets.Socket> quando il <xref:System.Net.Sockets.Socket.LingerState%2A> non è impostata e per una <xref:System.Net.Sockets.TcpClient> quando il <xref:System.Net.Sockets.TcpClient.LingerState%2A> proprietà non è impostata.  
  
   
  
## Examples  
 L'esempio seguente imposta un oggetto creato in precedenza <xref:System.Net.Sockets.Socket> su un ritardo di un secondo dopo la chiamata di <xref:System.Net.Sockets.Socket.Close%2A> (metodo).  
  
 [!code-cpp[Classic LingerOption Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic LingerOption Example/CPP/source.cpp#1)]
 [!code-csharp[Classic LingerOption Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic LingerOption Example/CS/source.cs#1)]
 [!code-vb[Classic LingerOption Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic LingerOption Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LingerOption (bool enable, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enable, int32 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enable As Boolean, seconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LingerOption(bool enable, int seconds);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.LingerOption : bool * int -&gt; System.Net.Sockets.LingerOption" Usage="new System.Net.Sockets.LingerOption (enable, seconds)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enable">
          <see langword="true" /> per mantenere la connessione dopo la chiamata del metodo <see cref="M:System.Net.Sockets.Socket.Close" />, in caso contrario <see langword="false" />.</param>
        <param name="seconds">Numero di secondi di permanenza della connessione dopo la chiamata del metodo <see cref="M:System.Net.Sockets.Socket.Close" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.LingerOption" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si potrebbe ancora essere disponibili dati nel buffer di rete in uscita dopo la chiusura di <xref:System.Net.Sockets.Socket>. Usare la `enable` parametro per specificare se vuole che il <xref:System.Net.Sockets.Socket> per continuare a trasmettere i dati dopo la chiamata del metodo close. Usare la `seconds` parametro per indicare quanto tempo si vuole il <xref:System.Net.Sockets.Socket> tenti di trasferire i dati non inviati prima del timeout. Se si specifica `true` per il `enable` parametro e 0 per il `seconds` parametro, il <xref:System.Net.Sockets.Socket> tenterà di inviare i dati fino a quando non vi è alcun sinistra dei dati nel buffer di rete in uscita. Se si specifica `false` per il `enable` parametro, il <xref:System.Net.Sockets.Socket> verrà chiusa immediatamente ed eventuali messaggi non inviati i dati andranno persi.  
  
 Nella tabella seguente viene descritto il comportamento nel <xref:System.Net.Sockets.Socket.Close%2A?displayProperty=nameWithType> e <xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=nameWithType> metodi basati sui valori possibili delle `enable` e `seconds` parametri quando un'istanza di LingerOption viene creata e impostata nel <xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=nameWithType> o <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=nameWithType> proprietà.  
  
|`enable`|`seconds`|Comportamento|  
|--------------|---------------|--------------|  
|`false` (disabilitato), il valore predefinito|Non è applicabile, il timeout (impostazione predefinita).|I tentativi di invio in attesa di dati per un socket orientato alla connessione (TCP, ad esempio) finché il valore predefinito di timeout del protocollo IP scade.|  
|`true` (abilitato)|Un timeout diverso da zero|Tenta di inviare dati in sospeso fino a quando non scade il timeout specificato e se il tentativo non riesce, Winsock reimposta la connessione.|  
|`true` (abilitato)|Un timeout pari a zero.|Ignora tutti i dati in sospeso. Per il socket orientati alla connessione (TCP, ad esempio), Winsock reimposta la connessione.|  
  
 Lo stack IP calcola il periodo di timeout predefinito protocollo IP da usare in base all'ora di andata e ritorno della connessione. Nella maggior parte dei casi, il timeout calcolato da parte dello stack è più utile rispetto a quello definito da un'applicazione. Si tratta del comportamento predefinito per un socket quando il <xref:System.Net.Sockets.Socket.LingerState%2A> proprietà non è impostata.  
  
 Quando la <xref:System.Net.Sockets.LingerOption.LingerTime%2A> proprietà archiviata nel <xref:System.Net.Sockets.Socket.LingerState%2A> viene impostata maggiore del timeout di protocollo IP predefinito, il timeout predefinito di protocollo IP verrà comunque applicare ed eseguire l'override.  
  
   
  
## Examples  
 L'esempio seguente imposta un oggetto creato in precedenza <xref:System.Net.Sockets.Socket> su un ritardo di un secondo dopo la chiamata di <xref:System.Net.Sockets.Socket.Close%2A> (metodo).  
  
 [!code-cpp[Classic LingerOption Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic LingerOption Example/CPP/source.cpp#1)]
 [!code-csharp[Classic LingerOption Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic LingerOption Example/CS/source.cs#1)]
 [!code-vb[Classic LingerOption Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic LingerOption Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.LingerOption.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Net.Sockets.LingerOption.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se attivare un ritardo dopo la chiusura del <see cref="T:System.Net.Sockets.Socket" />.</summary>
        <value>
          <see langword="true" /> se deve essere generato un ritardo per il <see cref="T:System.Net.Sockets.Socket" /> dopo la chiamata a <see cref="M:System.Net.Sockets.Socket.Close" />; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare la <xref:System.Net.Sockets.LingerOption.Enabled%2A> proprietà per determinare se il <xref:System.Net.Sockets.Socket> sarà un ritardo dopo la chiusura. Modifica questo valore in `true` oppure `false` e passare la versione modificata <xref:System.Net.Sockets.LingerOption> per il <xref:System.Net.Sockets.Socket.SetSocketOption%2A> metodo o un set il <xref:System.Net.Sockets.TcpClient.LingerState%2A> o <xref:System.Net.Sockets.Socket.LingerState%2A> per disabilitare o abilitare il tempo di ritardo.  
  
 La tabella seguente descrive il comportamento per i valori possibili del <xref:System.Net.Sockets.LingerOption.Enabled%2A> proprietà e i <xref:System.Net.Sockets.LingerOption.LingerTime%2A> proprietà archiviata nel <xref:System.Net.Sockets.Socket.LingerState%2A> proprietà.  
  
|`enable`|`seconds`|Comportamento|  
|--------------|---------------|--------------|  
|`false` (disabilitato), il valore predefinito|Non è applicabile, il timeout (impostazione predefinita).|I tentativi di invio in attesa di dati per un socket orientato alla connessione (TCP, ad esempio) finché il valore predefinito di timeout del protocollo IP scade.|  
|`true` (abilitato)|Un timeout diverso da zero|Tenta di inviare dati in sospeso fino a quando non scade il timeout specificato e se il tentativo non riesce, Winsock reimposta la connessione.|  
|`true` (abilitato)|Un timeout pari a zero.|Ignora tutti i dati in sospeso. Per il socket orientati alla connessione (TCP, ad esempio), Winsock reimposta la connessione.|  
  
 Lo stack IP calcola il periodo di timeout predefinito protocollo IP da usare in base all'ora di andata e ritorno della connessione. Nella maggior parte dei casi, il timeout calcolato da parte dello stack è più utile rispetto a quello definito da un'applicazione. Si tratta del comportamento predefinito per un socket quando il <xref:System.Net.Sockets.Socket.LingerState%2A> proprietà non è impostata.  
  
 Quando la <xref:System.Net.Sockets.LingerOption.LingerTime%2A> proprietà archiviata nel <xref:System.Net.Sockets.Socket.LingerState%2A> viene impostata maggiore del timeout di protocollo IP predefinito, il timeout predefinito di protocollo IP verrà comunque applicare ed eseguire l'override.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LingerTime">
      <MemberSignature Language="C#" Value="public int LingerTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LingerTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.LingerOption.LingerTime" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerTime As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LingerTime { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LingerTime : int with get, set" Usage="System.Net.Sockets.LingerOption.LingerTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il periodo di tempo durante il quale la connessione deve restare attiva dopo la chiamata del metodo <see cref="M:System.Net.Sockets.Socket.Close" /> se restano dati da inviare.</summary>
        <value>Tempo di permanenza della connessione, espresso in secondi, dopo la chiamata a <see cref="M:System.Net.Sockets.Socket.Close" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo valore se si desidera determinare quanto tempo un chiuso <xref:System.Net.Sockets.Socket> tenterà di trasferire i dati prima del timeout. È anche possibile impostare questo valore per il periodo di timeout desiderato, in secondi.  
  
 Se il <xref:System.Net.Sockets.LingerOption.Enabled%2A> proprietà viene `true`, e si imposta <xref:System.Net.Sockets.LingerOption.LingerTime%2A> su 0, il <xref:System.Net.Sockets.Socket> ignora tutti i dati da inviare nel buffer di rete in uscita in sospeso. Se si modifica questo valore, è necessario passare la versione modificata <xref:System.Net.Sockets.LingerOption> dell'istanza per il <xref:System.Net.Sockets.Socket.SetSocketOption%2A> metodo o un set di <xref:System.Net.Sockets.TcpClient.LingerState%2A> o <xref:System.Net.Sockets.Socket.LingerState%2A> proprietà.  
  
 La tabella seguente descrive il comportamento per i valori possibili del <xref:System.Net.Sockets.LingerOption.Enabled%2A> proprietà e i <xref:System.Net.Sockets.LingerOption.LingerTime%2A> proprietà archiviata nel <xref:System.Net.Sockets.Socket.LingerState%2A> proprietà.  
  
|`enable`|`seconds`|Comportamento|  
|--------------|---------------|--------------|  
|`false` (disabilitato), il valore predefinito|Non è applicabile, il timeout (impostazione predefinita).|I tentativi di invio in attesa di dati per un socket orientato alla connessione (TCP, ad esempio) finché il valore predefinito di timeout del protocollo IP scade.|  
|`true` (abilitato)|Un timeout diverso da zero|Tenta di inviare dati in sospeso fino a quando non scade il timeout specificato e se il tentativo non riesce, Winsock reimposta la connessione.|  
|`true` (abilitato)|Un timeout pari a zero.|Ignora tutti i dati in sospeso. Per il socket orientati alla connessione (TCP, ad esempio), Winsock reimposta la connessione.|  
  
 Lo stack IP calcola il periodo di timeout predefinito protocollo IP da usare in base all'ora di andata e ritorno della connessione. Nella maggior parte dei casi, il timeout calcolato da parte dello stack è più utile rispetto a quello definito da un'applicazione. Si tratta del comportamento predefinito per un socket quando il <xref:System.Net.Sockets.Socket.LingerState%2A> proprietà non è impostata.  
  
 Quando la <xref:System.Net.Sockets.LingerOption.LingerTime%2A> proprietà archiviata nel <xref:System.Net.Sockets.Socket.LingerState%2A> viene impostata maggiore del timeout di protocollo IP predefinito, il timeout predefinito di protocollo IP verrà comunque applicare ed eseguire l'override.  
  
   
  
## Examples  
 Nell'esempio seguente visualizza il valore di questa proprietà.  
  
 [!code-cpp[Socket_Socket_Options#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#2)]
 [!code-csharp[Socket_Socket_Options#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#2)]
 [!code-vb[Socket_Socket_Options#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>