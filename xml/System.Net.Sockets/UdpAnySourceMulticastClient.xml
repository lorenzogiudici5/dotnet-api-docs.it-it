<Type Name="UdpAnySourceMulticastClient" FullName="System.Net.Sockets.UdpAnySourceMulticastClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e524a8150ab7e64fcf23d572a61bd3a3e47b35a8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460945" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UdpAnySourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpAnySourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpAnySourceMulticastClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpAnySourceMulticastClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpAnySourceMulticastClient : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Destinatario client del traffico multicast proveniente da qualsiasi origine, noto anche come ASM (Any Source Multicast) o ISM (Internet Standard Multicast).</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpAnySourceMulticastClient (System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (groupAddress As IPAddress, localPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpAnySourceMulticastClient(System::Net::IPAddress ^ groupAddress, int localPort);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="groupAddress">Indirizzo di gruppo multicast che può sottoscrivere questo ricevente.</param>
        <param name="localPort">Porta locale per il binding di questo ricevente.</param>
        <summary>Crea un nuovo client UDP <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> in grado di sottoscrivere un indirizzo di gruppo e ricevere datagrammi da qualsiasi origine.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> costruttore associa il socket di multicast UDP con un indirizzo di gruppo e una porta, ma non associare o in caso contrario, utilizzare il socket.  
  
 Il `groupAddress` parametro può essere IPv4 o IPv6 multicast indirizzo.  
  
 Il `localPort` parametro non è necessario specificare una porta inferiore a 1024.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupAddress" /> è <see langword="null" />. riferimento</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="localPort" /> è minore di 0 -oppure- <paramref name="localPort" /> è maggiore di 65.535.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginJoinGroup (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginJoinGroup(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Metodo di callback da richiamare al completamento dell'operazione.</param>
        <param name="state">Informazioni di stato facoltative da passare al metodo <c>callback</c> per l'operazione.</param>
        <summary>Associa il socket e avvia un'operazione di aggiunta al gruppo multicast per consentire la ricezione di datagrammi da qualsiasi partecipante del gruppo.</summary>
        <returns>Restituisce <see cref="T:System.IAsyncResult" />.  
  
 <see cref="T:System.IAsyncResult" /> che fa riferimento a questa operazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> metodo associa un socket multicast UDP a una porta locale e viene aggiunto un gruppo multicast per consentire la ricezione dei datagrammi da qualsiasi membro di gruppo multicast. La porta locale e l'indirizzo del gruppo multicast vengono specificate nel <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> costruttore.  
  
 Il metodo specificato nella `callback` parametro viene richiamato quando viene completata l'operazione per aggiungere il gruppo multicast.  
  
 Se richiesto dal runtime, il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> metodo esegue inoltre una verifica di criteri per verificare che il client può accedere il gruppo multicast. Se il client non è consentito l'accesso, un <xref:System.Net.Sockets.SocketException> viene generata un'eccezione con <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il gruppo multicast è già stato aggiunto o è in corso un'operazione di join.</exception>
        <exception cref="T:System.ObjectDisposedException">L'interfaccia <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> è stata eliminata.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromGroup(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFromGroup (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFromGroup(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Buffer per archiviare i dati ricevuti.</param>
        <param name="offset">Offset, in byte, dall'inizio del <c>buffer</c> in cui devono essere archiviati i dati.</param>
        <param name="count">Numero massimo di byte da ricevere e archiviare nel <c>buffer</c>.</param>
        <param name="callback">Metodo di callback da richiamare al completamento dell'operazione.</param>
        <param name="state">Informazioni di stato facoltative da passare al metodo <c>callback</c> per l'operazione.</param>
        <summary>Avvia l'operazione di ricezione di un pacchetto dal gruppo multicast unito e richiama il callback specificato quando arriva un pacchetto per il gruppo da qualsiasi mittente.</summary>
        <returns>Restituisce <see cref="T:System.IAsyncResult" />.  
  
 <see cref="T:System.IAsyncResult" /> che fa riferimento a questa operazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> metodo inizia un'operazione di ricezione di un pacchetto UDP dal gruppo multicast unito da qualsiasi mittente. La porta locale e l'indirizzo del gruppo multicast vengono specificate nel <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> costruttore. Il client multicast deve inoltre aver completato un join al gruppo multicast.  
  
 Il metodo specificato nella `callback` parametro viene richiamato quando ha ricevuto un pacchetto.  
  
 È possibile disporre di un errore socket se un'operazione di ricezione ha esito negativo in modo sincrono, anche se ciò è insolito con UDP. Se si verifica un errore di socket, un <xref:System.Net.Sockets.SocketException> viene generata un'eccezione. L'errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError> enumerazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> è un riferimento null (Nothing in Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> è minore di 0.  
  
 oppure  
  
 <paramref name="offset" /> è maggiore della lunghezza di <paramref name="buffer" />.  
  
 oppure  
  
 <paramref name="count" /> è minore di 0.  
  
 oppure  
  
 <paramref name="offset" /> più il conteggio è maggiore della lunghezza di <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">Il gruppo multicast non è ancora stato unito.</exception>
        <exception cref="T:System.ObjectDisposedException">L'interfaccia <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> è stata eliminata.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendTo">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendTo (byte[] buffer, int offset, int count, System.Net.IPEndPoint remoteEndPoint, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendTo(unsigned int8[] buffer, int32 offset, int32 count, class System.Net.IPEndPoint remoteEndPoint, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendTo (buffer As Byte(), offset As Integer, count As Integer, remoteEndPoint As IPEndPoint, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendTo(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Net::IPEndPoint ^ remoteEndPoint, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remoteEndPoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Buffer che contiene i dati da inviare.</param>
        <param name="offset">Offset, in byte, dall'inizio del <c>buffer</c> per leggere i dati da inviare.</param>
        <param name="count">Numero di byte da inviare dal <c>buffer</c>.</param>
        <param name="remoteEndPoint">Endpoint remoto a cui inviare il pacchetto.</param>
        <param name="callback">Metodo di callback da richiamare al completamento dell'operazione.</param>
        <param name="state">Informazioni di stato facoltative da passare al metodo <c>callback</c> per l'operazione.</param>
        <summary>Avvia l'operazione di invio di un pacchetto unicast alla destinazione specificata.</summary>
        <returns>Restituisce <see cref="T:System.IAsyncResult" />.  
  
 <see cref="T:System.IAsyncResult" /> che fa riferimento a questa operazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> metodo inizia un'operazione di invio di un pacchetto UDP per il gruppo multicast unito.  
  
 Il client è necessario aver completato un join al gruppo multicast. L'indirizzo di destinazione specificato nella `remoteEndPoint` parametro deve avere già inviato un pacchetto multicast a questo ricevente. Alcuni protocolli utilizzano queste informazioni per passare al controllo del flusso di qualità del servizio statistiche o messaggi di ripristino.  
  
 Il metodo specificato nella `callback` parametro viene richiamato quando ha ricevuto un pacchetto.  
  
 La trasmissione è consentita solo se l'indirizzo specificato nel `remoteEndPoint` parametro ha già inviato un pacchetto multicast per il ricevitore. Se il client non è consentito l'accesso, un <xref:System.Net.Sockets.SocketException> viene generata un'eccezione con <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 Se la porta di destinazione specificato nella `remoteEndPoint` parametro è minore di 1024, un <xref:System.Net.Sockets.SocketException> viene generata un'eccezione con <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 È possibile disporre di un errore socket se un'operazione di ricezione ha esito negativo in modo sincrono, anche se ciò è insolito con UDP. Se si verifica un errore di socket, un <xref:System.Net.Sockets.SocketException> viene generata un'eccezione. L'errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError> enumerazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> è un riferimento null (Nothing in Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> è minore di 0.  
  
 oppure  
  
 <paramref name="offset" /> è maggiore della lunghezza di <paramref name="buffer" />.  
  
 oppure  
  
 <paramref name="count" /> è minore di 0.  
  
 oppure  
  
 <paramref name="offset" /> più il conteggio è maggiore della lunghezza di <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">Il gruppo multicast non è ancora stato unito.</exception>
        <exception cref="T:System.ObjectDisposedException">L'interfaccia <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> è stata eliminata.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToGroup(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendToGroup (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendToGroup(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Buffer che contiene i dati da inviare.</param>
        <param name="offset">Offset, in byte, dall'inizio del <c>buffer</c> per leggere i dati da inviare.</param>
        <param name="count">Numero di byte da inviare dal <c>buffer</c>.</param>
        <param name="callback">Metodo di callback da richiamare al completamento dell'operazione.</param>
        <param name="state">Informazioni di stato facoltative da passare al metodo <c>callback</c> per l'operazione.</param>
        <summary>Avvia l'operazione di invio di un pacchetto a un gruppo multicast unito e richiama il callback specificato dopo che un pacchetto è stato inviato al gruppo.</summary>
        <returns>Restituisce <see cref="T:System.IAsyncResult" />.  
  
 <see cref="T:System.IAsyncResult" /> che fa riferimento a questa operazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> metodo inizia un'operazione di invio di un pacchetto UDP per il gruppo multicast unito.  
  
 Il client è necessario aver completato un join al gruppo multicast.  
  
 Il metodo specificato nella `callback` parametro viene richiamato quando ha ricevuto un pacchetto.  
  
 È possibile disporre di un errore socket se un'operazione di ricezione ha esito negativo in modo sincrono, anche se ciò è insolito con UDP. Se si verifica un errore di socket, un <xref:System.Net.Sockets.SocketException> viene generata un'eccezione. L'errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError> enumerazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> è un riferimento null (Nothing in Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> è minore di 0.  
  
 oppure  
  
 <paramref name="offset" /> è maggiore della lunghezza di <paramref name="buffer" />.  
  
 oppure  
  
 <paramref name="count" /> è minore di 0.  
  
 oppure  
  
 <paramref name="offset" /> più il conteggio è maggiore della lunghezza di <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">Il gruppo multicast non è ancora stato unito.</exception>
        <exception cref="T:System.ObjectDisposedException">L'interfaccia <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> è stata eliminata.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="BlockSource">
      <MemberSignature Language="C#" Value="public void BlockSource (System.Net.IPAddress sourceAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BlockSource(class System.Net.IPAddress sourceAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BlockSource (sourceAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BlockSource(System::Net::IPAddress ^ sourceAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">Indirizzo dell'origine da bloccare.</param>
        <summary>Blocca un'origine in modo che non vengano più ricevuti pacchetti multicast provenienti dall'origine stessa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> metodo si blocca i pacchetti multicast provenienti da un indirizzo di origine specificato da ricevuti. Il client è necessario aver completato un join al gruppo multicast.  
  
 Il `sourceAddress` parametro può essere l'indirizzo IPv4 o IPv6, ma la `sourceAddress` parametro deve corrispondere la famiglia di indirizzi del gruppo multicast che fanno parte di client.  
  
 Il metodo specificato nella `callback` parametro viene richiamato quando ha ricevuto un pacchetto.  
  
 Se si verifica un errore socket durante l'esecuzione dell'operazione di origine del blocco, un <xref:System.Net.Sockets.SocketException> viene generata un'eccezione. L'errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError> enumerazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il gruppo multicast non è ancora stato unito.</exception>
        <exception cref="T:System.ObjectDisposedException">L'interfaccia <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> è stata eliminata.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Esce dal gruppo multicast e rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> e dell'oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare il metodo <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> dopo aver terminato di utilizzare l'oggetto <xref:System.Net.Sockets.UdpAnySourceMulticastClient>. Il metodo Dispose lascia il <xref:System.Net.Sockets.UdpAnySourceMulticastClient> in uno stato inutilizzabile. Dopo la chiamata <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>, è necessario rilasciare tutti i riferimenti al <xref:System.Net.Sockets.UdpAnySourceMulticastClient> in modo che il garbage collector può recuperare la memoria che di <xref:System.Net.Sockets.UdpAnySourceMulticastClient> occupata.  
  
 Chiamare sempre il metodo <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> prima di rilasciare l'ultimo riferimento a <xref:System.Net.Sockets.UdpAnySourceMulticastClient>. In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.Net.Sockets.UdpAnySourceMulticastClient> dell'oggetto <xref:System.Object.Finalize%2A> non viene richiamato dal Garbage Collector.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndJoinGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndJoinGroup(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Risultato dell'operazione di join asincrona.</param>
        <summary>Completa l'operazione asincrona Partecipa a gruppo in un gruppo multicast.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> metodo viene completato un binding asincrono a un'operazione di join e socket a un gruppo multicast.  
  
 Se richiesto dal runtime, il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> metodo esegue inoltre una verifica di criteri per verificare che il client può accedere il gruppo multicast. Se il client non è consentito l'accesso, un <xref:System.Net.Sockets.SocketException> viene generata un'eccezione con <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 Se si verifica un errore socket durante l'esecuzione dell'operazione di gruppo di join, un <xref:System.Net.Sockets.SocketException> viene generata un'eccezione. L'errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError> enumerazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> è un riferimento null (Nothing in Visual Basic).</exception>
        <exception cref="T:System.ObjectDisposedException">L'interfaccia <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> è stata eliminata.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromGroup">
      <MemberSignature Language="C#" Value="public int EndReceiveFromGroup (IAsyncResult result, out System.Net.IPEndPoint source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromGroup(class System.IAsyncResult result, [out] class System.Net.IPEndPoint&amp; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFromGroup (result As IAsyncResult, ByRef source As IPEndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFromGroup(IAsyncResult ^ result, [Runtime::InteropServices::Out] System::Net::IPEndPoint ^ % source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="source" Type="System.Net.IPEndPoint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">Risultato dell'operazione di ricezione asincrona.</param>
        <param name="source">Endpoint di origine da cui è stato ricevuto il pacchetto.</param>
        <summary>Completa l'operazione asincrona di ricezione di un pacchetto dal gruppo multicast unito e fornisce le informazioni ricevute.</summary>
        <returns>Lunghezza, espressa in byte, del messaggio archiviato nel parametro buffer passato al metodo <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> metodo completa un'operazione asincrona per ricevere un pacchetto da un gruppo multicast.  
  
 Se si verifica un errore socket durante l'esecuzione dell'operazione di ricezione, una <xref:System.Net.Sockets.SocketException> viene generata un'eccezione. L'errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError> enumerazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> è un riferimento null (Nothing in Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Il gruppo multicast non è ancora stato unito.</exception>
        <exception cref="T:System.ObjectDisposedException">L'interfaccia <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> è stata eliminata.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendTo">
      <MemberSignature Language="C#" Value="public void EndSendTo (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendTo(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendTo (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendTo(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Risultato dell'operazione di invio asincrona.</param>
        <summary>Completa l'operazione di invio di un pacchetto unicast alla destinazione specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo%2A> metodo completa un'operazione asincrona per inviare un pacchetto all'indirizzo di destinazione specificato.  
  
 Se si verifica un errore socket durante l'esecuzione dell'operazione di ricezione, una <xref:System.Net.Sockets.SocketException> viene generata un'eccezione. L'errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError> enumerazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> è un riferimento null (Nothing in Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Il gruppo multicast non è ancora stato unito.</exception>
        <exception cref="T:System.ObjectDisposedException">L'interfaccia <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> è stata eliminata.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToGroup">
      <MemberSignature Language="C#" Value="public void EndSendToGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendToGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendToGroup(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Risultato dell'operazione di invio asincrona.</param>
        <summary>Completa l'operazione di invio di un pacchetto a un gruppo multicast.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup%2A> metodo completa un'operazione asincrona per inviare un pacchetto a un gruppo multicast.  
  
 Se si verifica un errore socket durante l'esecuzione dell'operazione di ricezione, una <xref:System.Net.Sockets.SocketException> viene generata un'eccezione. L'errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError> enumerazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> è un riferimento null (Nothing in Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Il gruppo multicast non è ancora stato unito.</exception>
        <exception cref="T:System.ObjectDisposedException">L'interfaccia <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> è stata eliminata.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MulticastLoopback { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica se i pacchetti multicast in uscita devono essere recapitati all'applicazione mittente.</summary>
        <value>Restituisce <see cref="T:System.Boolean" />.  
  
 Valore che specifica se i pacchetti in uscita a un gruppo multicast devono essere recapitati all'applicazione mittente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il traffico multicast è un metodo scalabile per la comunicazione di molti-a-molti su Internet. Un processo di sottoscrizione da un indirizzo di un gruppo multicast. Quindi, i pacchetti inviati da un processo sottoscritto il gruppo multicast vengono ricevuti da ogni altro processo ha sottoscritto l'indirizzo multicast. Il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback%2A> proprietà controlla se qualsiasi processo nel computer locale riceve i pacchetti multicast inviati dal client al gruppo multicast.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il gruppo multicast non è ancora stato unito.</exception>
        <exception cref="T:System.ObjectDisposedException">L'interfaccia <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> è stata eliminata.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta le dimensioni, in byte, del buffer di ricezione dell'oggetto <see cref="T:System.Net.Sockets.Socket" /> usato per le operazioni di ricezione multicast in questa istanza di <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />.</summary>
        <value>Restituisce <see cref="T:System.Int32" />.  
  
 Dimensioni in byte del buffer di ricezione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> proprietà ottiene o imposta la dimensione, in byte, del buffer di ricezione dell'oggetto sottostante <xref:System.Net.Sockets.Socket> utilizzato per le operazioni di ricezione multicast su questo <xref:System.Net.Sockets.UdpAnySourceMulticastClient> istanza. In particolare, il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> proprietà controlla le dimensioni del buffer utilizzato da parte dello stack quando arriva un pacchetto, ma l'applicazione non ha ancora chiamato il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> metodo. Se questo buffer viene riempito e pacchetti ancora prima l'applicazione chiama il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> e <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> metodi, i pacchetti precedenti verranno eliminati. L'applicazione non sarà in grado di ricevere i pacchetti precedenti e riceveranno i pacchetti più recenti quando si chiama il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> metodo.  
  
 Le dimensioni predefinite del buffer di ricezione in Windows sono 8192 byte.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le dimensioni del buffer specificate sono minori di 0.</exception>
        <exception cref="T:System.InvalidOperationException">Il gruppo multicast non è ancora stato unito.</exception>
        <exception cref="T:System.ObjectDisposedException">L'interfaccia <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> è stata eliminata.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta le dimensioni, in byte, del buffer di invio dell'oggetto <see cref="T:System.Net.Sockets.Socket" /> usato per le operazioni di invio multicast in questa istanza di <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />.</summary>
        <value>Restituisce <see cref="T:System.Int32" />.  
  
 Dimensioni in byte del buffer di invio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> proprietà ottiene o imposta la dimensione, in byte, del buffer di invio del Socket sottostante utilizzato per le operazioni di invio multicast su questo <xref:System.Net.Sockets.UdpAnySourceMulticastClient> istanza.  
  
 le chiamate al <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> o <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> metodi richiederà più tempo per chiamare il callback in base al valore di <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> proprietà se il buffer di trasmissione è pieno. Il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> proprietà controlla solo se il buffer utente rimane bloccato nella memoria fisica finché non viene completata la trasmissione.  
  
 Le dimensioni predefinite del buffer di invio in Windows sono 8192 byte.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le dimensioni del buffer specificate sono minori di 0.</exception>
        <exception cref="T:System.InvalidOperationException">Il gruppo multicast non è ancora stato unito.</exception>
        <exception cref="T:System.ObjectDisposedException">L'interfaccia <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> è stata eliminata.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnblockSource">
      <MemberSignature Language="C#" Value="public void UnblockSource (System.Net.IPAddress sourceAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnblockSource(class System.Net.IPAddress sourceAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnblockSource (sourceAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnblockSource(System::Net::IPAddress ^ sourceAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">Indirizzo dell'origine da sbloccare.</param>
        <summary>Sblocca un'origine precedentemente bloccata da una chiamata al metodo <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" /> in modo che sia possibile ricevere i pacchetti multicast provenienti dall'origine stessa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource%2A> metodo sblocca pacchetti multicast provenienti da un indirizzo di origine specificato in modo che possano essere ricevuti. Indirizzo di origine specificato deve avere stata precedentemente bloccata da una chiamata al <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> metodo.  
  
 Il client è necessario aver completato un join al gruppo multicast.  
  
 Il `sourceAddress` parametro può essere IPv4 o IPv6 multicast indirizzo.  
  
 Se l'indirizzo di origine specificata nel `sourceAddress` parametro non è stato bloccato in precedenza da una chiamata al <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> (metodo), un <xref:System.Net.Sockets.SocketException> viene generata un'eccezione con <xref:System.Net.Sockets.SocketError.AddressNotAvailable>.  
  
 Se si verifica un errore socket durante l'esecuzione dell'operazione di origine, sblocca un <xref:System.Net.Sockets.SocketException> viene generata un'eccezione. L'errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError> enumerazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il gruppo multicast non è ancora stato unito.</exception>
        <exception cref="T:System.ObjectDisposedException">L'interfaccia <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> è stata eliminata.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      </Docs>
    </Member>
  </Members>
</Type>