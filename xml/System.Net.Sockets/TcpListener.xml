<Type Name="TcpListener" FullName="System.Net.Sockets.TcpListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="70b4efe2d402b27e3285b56bb7a50aff7def9e09" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30461085" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TcpListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpListener extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpListener" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpListener" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c50dc-101">Vengono attese le connessioni dai client di rete TCP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c50dc-101">Listens for connections from TCP network clients.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c50dc-102">La <xref:System.Net.Sockets.TcpListener> classe fornisce metodi semplici che attendono e accettano le richieste di connessione in ingresso in modalità sincrona di blocco.</span><span class="sxs-lookup"><span data-stu-id="c50dc-102">The <xref:System.Net.Sockets.TcpListener> class provides simple methods that listen for and accept incoming connection requests in blocking synchronous mode.</span></span> <span data-ttu-id="c50dc-103">È possibile utilizzare un <xref:System.Net.Sockets.TcpClient> o <xref:System.Net.Sockets.Socket> per la connessione con un <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="c50dc-103">You can use either a <xref:System.Net.Sockets.TcpClient> or a <xref:System.Net.Sockets.Socket> to connect with a <xref:System.Net.Sockets.TcpListener>.</span></span> <span data-ttu-id="c50dc-104">Creare un <xref:System.Net.Sockets.TcpListener> utilizzando un <xref:System.Net.IPEndPoint>, un indirizzo IP locale e il numero di porta o un numero di porta.</span><span class="sxs-lookup"><span data-stu-id="c50dc-104">Create a <xref:System.Net.Sockets.TcpListener> using an <xref:System.Net.IPEndPoint>, a Local IP address and port number, or just a port number.</span></span> <span data-ttu-id="c50dc-105">Specificare <xref:System.Net.IPAddress.Any> per l'indirizzo IP locale e 0 per il numero di porta locale se si desidera il provider del servizio sottostante per assegnare i valori per l'utente.</span><span class="sxs-lookup"><span data-stu-id="c50dc-105">Specify <xref:System.Net.IPAddress.Any> for the local IP address and 0 for the local port number if you want the underlying service provider to assign those values for you.</span></span> <span data-ttu-id="c50dc-106">Se si sceglie di eseguire questa operazione, è possibile utilizzare il <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> proprietà per identificare le informazioni assegnate, dopo la connessione del socket.</span><span class="sxs-lookup"><span data-stu-id="c50dc-106">If you choose to do this, you can use the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property to identify the assigned information, after the socket has connected.</span></span>  
  
 <span data-ttu-id="c50dc-107">Utilizzare il <xref:System.Net.Sockets.TcpListener.Start%2A> metodo può mettersi in ascolto delle richieste di connessione in ingresso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-107">Use the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection requests.</span></span> <span data-ttu-id="c50dc-108"><xref:System.Net.Sockets.TcpListener.Start%2A> verranno inseriti nella coda le connessioni in ingresso fino alla chiamata di <xref:System.Net.Sockets.TcpListener.Stop%2A> metodo o all'accodamento <xref:System.Net.Sockets.SocketOptionName.MaxConnections>.</span><span class="sxs-lookup"><span data-stu-id="c50dc-108"><xref:System.Net.Sockets.TcpListener.Start%2A> will queue incoming connections until you either call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method or it has queued <xref:System.Net.Sockets.SocketOptionName.MaxConnections>.</span></span> <span data-ttu-id="c50dc-109">Utilizzare uno <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> o <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> per estrarre una connessione dalla coda di richieste di connessione in ingresso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-109">Use either <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> or <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> to pull a connection from the incoming connection request queue.</span></span> <span data-ttu-id="c50dc-110">Questi due metodi verranno bloccata.</span><span class="sxs-lookup"><span data-stu-id="c50dc-110">These two methods will block.</span></span> <span data-ttu-id="c50dc-111">Se si desidera evitare il blocco, è possibile utilizzare il <xref:System.Net.Sockets.TcpListener.Pending%2A> metodo per determinare se sono disponibili nella coda di richieste di connessione.</span><span class="sxs-lookup"><span data-stu-id="c50dc-111">If you want to avoid blocking, you can use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method first to determine if connection requests are available in the queue.</span></span>  
  
 <span data-ttu-id="c50dc-112">Chiamare il <xref:System.Net.Sockets.TcpListener.Stop%2A> metodo per chiudere la <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="c50dc-112">Call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-113">Il <xref:System.Net.Sockets.TcpListener.Stop%2A> metodo non chiude le connessioni accettate.</span><span class="sxs-lookup"><span data-stu-id="c50dc-113">The <xref:System.Net.Sockets.TcpListener.Stop%2A> method does not close any accepted connections.</span></span> <span data-ttu-id="c50dc-114">È responsabili della chiusura questi separatamente.</span><span class="sxs-lookup"><span data-stu-id="c50dc-114">You are responsible for closing these separately.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c50dc-115">L'esempio di codice seguente crea un <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="c50dc-115">The following code example creates a <xref:System.Net.Sockets.TcpListener>.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CPP/tcpserver.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CS/tcpserver.cs#1)]
 [!code-vb[System.Net.Sockets.TcpListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/VB/tcpserver.vb#1)]  
  
 <span data-ttu-id="c50dc-116">Vedere <xref:System.Net.Sockets.TcpClient> per un esempio di client.</span><span class="sxs-lookup"><span data-stu-id="c50dc-116">See <xref:System.Net.Sockets.TcpClient> for a client example.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="c50dc-117">per stabilire una connessione in uscita o accettare una richiesta in ingresso.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c50dc-117">to establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c50dc-118">Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.TcpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-118">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use TcpListener (IPAddress address, int port) instead")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="c50dc-119">Porta su cui attendere i tentativi di connessione in ingresso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-119">The port on which to listen for incoming connection attempts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c50dc-120">Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.TcpListener" /> che è in attesa sulla porta specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-120">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens on the specified port.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c50dc-121">Questo costruttore è obsoleto.</span><span class="sxs-lookup"><span data-stu-id="c50dc-121">This constructor is obsolete.</span></span> <span data-ttu-id="c50dc-122">Utilizzare il <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPAddress%2CSystem.Int32%29?displayProperty=nameWithType> o <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType> costruttori.</span><span class="sxs-lookup"><span data-stu-id="c50dc-122">Use the <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPAddress%2CSystem.Int32%29?displayProperty=nameWithType> or <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType> constructors.</span></span>  
  
 <span data-ttu-id="c50dc-123">Questo costruttore consente di specificare il numero di porta su cui restare in attesa per i tentativi di connessione in ingresso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-123">This constructor allows you to specify the port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="c50dc-124">Con questo costruttore, il provider del servizio sottostante assegna l'indirizzo di rete più appropriato.</span><span class="sxs-lookup"><span data-stu-id="c50dc-124">With this constructor, the underlying service provider assigns the most appropriate network address.</span></span> <span data-ttu-id="c50dc-125">Se non si desidera eseguire la porta locale utilizzata, è possibile specificare 0 per il numero di porta.</span><span class="sxs-lookup"><span data-stu-id="c50dc-125">If you do not care which local port is used, you can specify 0 for the port number.</span></span> <span data-ttu-id="c50dc-126">In questo caso, il provider del servizio verrà assegnato un numero di porte effimere disponibili.</span><span class="sxs-lookup"><span data-stu-id="c50dc-126">In this case, the service provider will assign an available ephemeral port number.</span></span> <span data-ttu-id="c50dc-127">Se si utilizza questo approccio, è possibile individuare il numero di porta e indirizzo di rete locale è stato assegnato utilizzando il <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="c50dc-127">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="c50dc-128">Chiamare il <xref:System.Net.Sockets.TcpListener.Start%2A> (metodo) deve rimanere in attesa per i tentativi di connessione in ingresso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-128">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c50dc-129">L'esempio di codice seguente crea un <xref:System.Net.Sockets.TcpListener> utilizzando un numero di porta locale.</span><span class="sxs-lookup"><span data-stu-id="c50dc-129">The following code example creates a <xref:System.Net.Sockets.TcpListener> using a local port number.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c50dc-130">Il parametro <paramref name="port" /> non è compreso tra <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-130">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(System::Net::IPEndPoint ^ localEP);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="c50dc-131">
            <see cref="T:System.Net.IPEndPoint" /> che rappresenta l'endpoint locale a cui associare il <see cref="T:System.Net.Sockets.Socket" /> listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-131">An <see cref="T:System.Net.IPEndPoint" /> that represents the local endpoint to which to bind the listener <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c50dc-132">Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.TcpListener" /> con l'endpoint locale specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class with the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c50dc-133">Questo costruttore consente di specificare l'indirizzo IP locale e tenta di numero di porta su cui restare in attesa per la connessione in ingresso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-133">This constructor allows you to specify the local IP address and port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="c50dc-134">Prima di utilizzare questo costruttore, è necessario creare un <xref:System.Net.IPEndPoint> utilizzando il numero porta e indirizzo IP locale desiderato.</span><span class="sxs-lookup"><span data-stu-id="c50dc-134">Before using this constructor, you must create an <xref:System.Net.IPEndPoint> using the desired local IP address and port number.</span></span> <span data-ttu-id="c50dc-135">Passare la variabile <xref:System.Net.IPEndPoint> al costruttore come il `localEP` parametro.</span><span class="sxs-lookup"><span data-stu-id="c50dc-135">Pass this <xref:System.Net.IPEndPoint> to the constructor as the `localEP` parameter.</span></span>  
  
 <span data-ttu-id="c50dc-136">Se non si desidera viene assegnato l'indirizzo locale, è possibile creare un <xref:System.Net.IPEndPoint> utilizzando <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> come parametro l'indirizzo e il servizio sottostante provider verrà assegnato l'indirizzo di rete più appropriato.</span><span class="sxs-lookup"><span data-stu-id="c50dc-136">If you do not care which local address is assigned, you can create an <xref:System.Net.IPEndPoint> using <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> as the address parameter, and the underlying service provider will assign the most appropriate network address.</span></span> <span data-ttu-id="c50dc-137">In questo modo è possibile semplificare l'applicazione se si dispongono di più interfacce di rete.</span><span class="sxs-lookup"><span data-stu-id="c50dc-137">This might help simplify your application if you have multiple network interfaces.</span></span> <span data-ttu-id="c50dc-138">Se non si desidera eseguire la porta locale utilizzata, è possibile creare un <xref:System.Net.IPEndPoint> utilizzando 0 per il numero di porta.</span><span class="sxs-lookup"><span data-stu-id="c50dc-138">If you do not care which local port is used, you can create an <xref:System.Net.IPEndPoint> using 0 for the port number.</span></span> <span data-ttu-id="c50dc-139">In questo caso, il provider del servizio verrà assegnato un numero di porte effimere disponibili.</span><span class="sxs-lookup"><span data-stu-id="c50dc-139">In this case, the service provider will assign an available ephemeral port number.</span></span> <span data-ttu-id="c50dc-140">Se si utilizza questo approccio, è possibile individuare il numero di porta e indirizzo di rete locale è stato assegnato utilizzando il <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="c50dc-140">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="c50dc-141">Chiamare il <xref:System.Net.Sockets.TcpListener.Start%2A> (metodo) deve rimanere in attesa per i tentativi di connessione in ingresso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-141">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-142">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-142">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c50dc-143">Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c50dc-143">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c50dc-144">Esempio di codice seguente crea un'istanza di <xref:System.Net.Sockets.TcpListener> classe utilizzando l'endpoint locale.</span><span class="sxs-lookup"><span data-stu-id="c50dc-144">The following code example creates an instance of the <xref:System.Net.Sockets.TcpListener> class using the local endpoint.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c50dc-145">
            <paramref name="localEP" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-145">
              <paramref name="localEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (System.Net.IPAddress localaddr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress localaddr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localaddr As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(System::Net::IPAddress ^ localaddr, int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localaddr" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="localaddr">
          <span data-ttu-id="c50dc-146">
            <see cref="T:System.Net.IPAddress" /> che rappresenta l'indirizzo IP locale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-146">An <see cref="T:System.Net.IPAddress" /> that represents the local IP address.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="c50dc-147">Porta su cui attendere i tentativi di connessione in ingresso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-147">The port on which to listen for incoming connection attempts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c50dc-148">Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.TcpListener" /> in attesa dei tentativi di connessione in ingrasso sull'indirizzo IP e sul numero di porta specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-148">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens for incoming connection attempts on the specified local IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c50dc-149">Questo costruttore consente di specificare l'indirizzo IP locale e tenta di numero di porta su cui restare in attesa per la connessione in ingresso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-149">This constructor allows you to specify the local IP address and port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="c50dc-150">Prima di chiamare questo costruttore è necessario creare innanzitutto un <xref:System.Net.IPAddress> utilizzando l'indirizzo locale desiderato.</span><span class="sxs-lookup"><span data-stu-id="c50dc-150">Before calling this constructor you must first create an <xref:System.Net.IPAddress> using the desired local address.</span></span> <span data-ttu-id="c50dc-151">Passare la variabile <xref:System.Net.IPAddress> al costruttore come il `localaddr` parametro.</span><span class="sxs-lookup"><span data-stu-id="c50dc-151">Pass this <xref:System.Net.IPAddress> to the constructor as the `localaddr` parameter.</span></span> <span data-ttu-id="c50dc-152">Se non si desidera viene assegnato l'indirizzo locale, specificare <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> per il `localaddr` parametro e il provider del servizio sottostante assegnerà l'indirizzo di rete più appropriato.</span><span class="sxs-lookup"><span data-stu-id="c50dc-152">If you do not care which local address is assigned, specify <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> for the `localaddr` parameter, and the underlying service provider will assign the most appropriate network address.</span></span> <span data-ttu-id="c50dc-153">In questo modo è possibile semplificare l'applicazione se si dispongono di più interfacce di rete.</span><span class="sxs-lookup"><span data-stu-id="c50dc-153">This might help simplify your application if you have multiple network interfaces.</span></span> <span data-ttu-id="c50dc-154">Se non si desidera eseguire la porta locale utilizzata, è possibile specificare 0 per il numero di porta.</span><span class="sxs-lookup"><span data-stu-id="c50dc-154">If you do not care which local port is used, you can specify 0 for the port number.</span></span> <span data-ttu-id="c50dc-155">In questo caso, il provider del servizio verrà assegnato un numero di porta disponibile tra 1024 e 5000.</span><span class="sxs-lookup"><span data-stu-id="c50dc-155">In this case, the service provider will assign an available port number between 1024 and 5000.</span></span> <span data-ttu-id="c50dc-156">Se si utilizza questo approccio, è possibile individuare il numero di porta e indirizzo di rete locale è stato assegnato utilizzando il <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="c50dc-156">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="c50dc-157">Chiamare il <xref:System.Net.Sockets.TcpListener.Start%2A> (metodo) deve rimanere in attesa per i tentativi di connessione in ingresso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-157">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-158">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-158">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c50dc-159">Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c50dc-159">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c50dc-160">Esempio di codice seguente crea un'istanza di <xref:System.Net.Sockets.TcpListener> classe utilizzando un numero di porta e indirizzo IP locale.</span><span class="sxs-lookup"><span data-stu-id="c50dc-160">The following code example creates an instance of the <xref:System.Net.Sockets.TcpListener> class using a local IP address and port number.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c50dc-161">
            <paramref name="localaddr" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-161">
              <paramref name="localaddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c50dc-162">Il parametro <paramref name="port" /> non è compreso tra <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-162">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPAddress" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName="AcceptSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket AcceptSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket AcceptSocket() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptSocket" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptSocket () As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ AcceptSocket();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c50dc-163">Accetta una richiesta di connessione in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-163">Accepts a pending connection request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c50dc-164">Oggetto <see cref="T:System.Net.Sockets.Socket" /> utilizzato per inviare e ricevere dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-164">A <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c50dc-165"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> un metodo di blocco che restituisce un <xref:System.Net.Sockets.Socket> che è possibile utilizzare per inviare e ricevere dati.</span><span class="sxs-lookup"><span data-stu-id="c50dc-165"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> is a blocking method that returns a <xref:System.Net.Sockets.Socket> that you can use to send and receive data.</span></span> <span data-ttu-id="c50dc-166">Se si desidera evitare il blocco, utilizzare il <xref:System.Net.Sockets.TcpListener.Pending%2A> metodo per determinare se le richieste di connessione sono disponibili nella coda di connessione in ingresso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-166">If you want to avoid blocking, use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method to determine if connection requests are available in the incoming connection queue.</span></span>  
  
 <span data-ttu-id="c50dc-167">Il <xref:System.Net.Sockets.Socket> restituito viene inizializzato con il numero di porta e indirizzo IP dell'host remoto.</span><span class="sxs-lookup"><span data-stu-id="c50dc-167">The <xref:System.Net.Sockets.Socket> returned is initialized with the IP address and port number of the remote host.</span></span> <span data-ttu-id="c50dc-168">È possibile utilizzare uno qualsiasi del <xref:System.Net.Sockets.Socket.Send%2A> e <xref:System.Net.Sockets.Socket.Receive%2A> metodi disponibili nel <xref:System.Net.Sockets.Socket> classe per comunicare con l'host remoto.</span><span class="sxs-lookup"><span data-stu-id="c50dc-168">You can use any of the <xref:System.Net.Sockets.Socket.Send%2A> and <xref:System.Net.Sockets.Socket.Receive%2A> methods available in the <xref:System.Net.Sockets.Socket> class to communicate with the remote host.</span></span> <span data-ttu-id="c50dc-169">Quando si è finito utilizzando il <xref:System.Net.Sockets.Socket>, verificare di chiamare il relativo <xref:System.Net.Sockets.Socket.Close%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="c50dc-169">When you are finished using the <xref:System.Net.Sockets.Socket>, be sure to call its <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span> <span data-ttu-id="c50dc-170">Se l'applicazione è relativamente semplice, considerare l'utilizzo di <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metodo anziché <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="c50dc-170">If your application is relatively simple, consider using the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method rather than the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="c50dc-171"><xref:System.Net.Sockets.TcpClient> fornisce metodi semplici per l'invio e ricezione di dati in una rete in modalità sincrona di blocco.</span><span class="sxs-lookup"><span data-stu-id="c50dc-171"><xref:System.Net.Sockets.TcpClient> provides you with simple methods for sending and receiving data over a network in blocking synchronous mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-172">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-172">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c50dc-173">Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c50dc-173">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c50dc-174">Nell'esempio di codice seguente, il <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metodo viene utilizzato per restituire un <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="c50dc-174">In the following code example, the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method is used to return a <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="c50dc-175">Questo <xref:System.Net.Sockets.Socket> viene utilizzato per comunicare con il client appena connesso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-175">This <xref:System.Net.Sockets.Socket> is used to communicate with the newly connected client.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c50dc-176">Il listener non è stato avviato con una chiamata a <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-176">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Pending" />
      </Docs>
    </Member>
    <Member MemberName="AcceptSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt; AcceptSocketAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Sockets.Socket&gt; AcceptSocketAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptSocketAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptSocketAsync () As Task(Of Socket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::Socket ^&gt; ^ AcceptSocketAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c50dc-177">Accetta una richiesta di connessione in sospeso come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-177">Accepts a pending connection request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c50dc-178">Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-178">Returns <see cref="T:System.Threading.Tasks.Task`1" /></span>
          </span>
          <span data-ttu-id="c50dc-179">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-179">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="c50dc-180">La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce <see cref="T:System.Net.Sockets.Socket" /> utilizzato per inviare e ricevere i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-180">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c50dc-181">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c50dc-181">This operation will not block.</span></span> <span data-ttu-id="c50dc-182">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che la connessione socket è stata accettata.</span><span class="sxs-lookup"><span data-stu-id="c50dc-182">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the socket connection has been accepted.</span></span>  
  
 <span data-ttu-id="c50dc-183">Il <xref:System.Net.Sockets.Socket> restituito in <xref:System.Threading.Tasks.Task%601> viene inizializzato con il numero di porta e indirizzo IP dell'host remoto.</span><span class="sxs-lookup"><span data-stu-id="c50dc-183">The <xref:System.Net.Sockets.Socket> returned in <xref:System.Threading.Tasks.Task%601> is initialized with the IP address and port number of the remote host.</span></span> <span data-ttu-id="c50dc-184">È possibile utilizzare uno qualsiasi del <xref:System.Net.Sockets.Socket.Send%2A> e <xref:System.Net.Sockets.Socket.Receive%2A> metodi disponibili nel <xref:System.Net.Sockets.Socket> classe per comunicare con l'host remoto.</span><span class="sxs-lookup"><span data-stu-id="c50dc-184">You can use any of the <xref:System.Net.Sockets.Socket.Send%2A> and <xref:System.Net.Sockets.Socket.Receive%2A> methods available in the <xref:System.Net.Sockets.Socket> class to communicate with the remote host.</span></span> <span data-ttu-id="c50dc-185">Quando si è finito utilizzando il <xref:System.Net.Sockets.Socket>, verificare di chiamare il relativo <xref:System.Net.Sockets.Socket.Close%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="c50dc-185">When you are finished using the <xref:System.Net.Sockets.Socket>, be sure to call its <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span> <span data-ttu-id="c50dc-186">Se l'applicazione è relativamente semplice, considerare l'utilizzo di <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metodo anziché <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="c50dc-186">If your application is relatively simple, consider using the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method rather than the <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A> method.</span></span> <span data-ttu-id="c50dc-187"><xref:System.Net.Sockets.TcpClient> fornisce metodi semplici per l'invio e ricezione di dati in una rete in modalità sincrona di blocco.</span><span class="sxs-lookup"><span data-stu-id="c50dc-187"><xref:System.Net.Sockets.TcpClient> provides you with simple methods for sending and receiving data over a network in blocking synchronous mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-188">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-188">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c50dc-189">Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c50dc-189">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c50dc-190">Il listener non è stato avviato con una chiamata a <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-190">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Pending" />
      </Docs>
    </Member>
    <Member MemberName="AcceptTcpClient">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.TcpClient AcceptTcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.TcpClient AcceptTcpClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptTcpClient () As TcpClient" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::TcpClient ^ AcceptTcpClient();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpClient</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c50dc-191">Accetta una richiesta di connessione in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-191">Accepts a pending connection request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c50dc-192">Oggetto <see cref="T:System.Net.Sockets.TcpClient" /> utilizzato per inviare e ricevere dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-192">A <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c50dc-193"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> un metodo di blocco che restituisce un <xref:System.Net.Sockets.TcpClient> che è possibile utilizzare per inviare e ricevere dati.</span><span class="sxs-lookup"><span data-stu-id="c50dc-193"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> is a blocking method that returns a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="c50dc-194">Utilizzare il <xref:System.Net.Sockets.TcpListener.Pending%2A> metodo per determinare se le richieste di connessione sono disponibili nella coda di connessione in ingresso, se si desidera evitare il blocco.</span><span class="sxs-lookup"><span data-stu-id="c50dc-194">Use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method to determine if connection requests are available in the incoming connection queue if you want to avoid blocking.</span></span>  
  
 <span data-ttu-id="c50dc-195">Utilizzare il <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> per ottenere l'oggetto sottostante <xref:System.Net.Sockets.NetworkStream> dell'oggetto restituito <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="c50dc-195">Use the <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream> of the returned <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="c50dc-196">Il <xref:System.Net.Sockets.NetworkStream> fornirà i metodi per l'invio e ricezione con l'host remoto.</span><span class="sxs-lookup"><span data-stu-id="c50dc-196">The <xref:System.Net.Sockets.NetworkStream> will provide you with methods for sending and receiving with the remote host.</span></span> <span data-ttu-id="c50dc-197">Quando si è tramite il <xref:System.Net.Sockets.TcpClient>, verificare di chiamare il relativo <xref:System.Net.Sockets.TcpClient.Close%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="c50dc-197">When you are through with the <xref:System.Net.Sockets.TcpClient>, be sure to call its <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span> <span data-ttu-id="c50dc-198">Se si desidera maggiore flessibilità rispetto a un <xref:System.Net.Sockets.TcpClient> offerte, è consigliabile utilizzare <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span><span class="sxs-lookup"><span data-stu-id="c50dc-198">If you want greater flexibility than a <xref:System.Net.Sockets.TcpClient> offers, consider using <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-199">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-199">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c50dc-200">Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c50dc-200">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c50dc-201">Nell'esempio di codice seguente, il <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metodo viene utilizzato per restituire un <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="c50dc-201">In the following code example, the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method is used to return a <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="c50dc-202">Questo <xref:System.Net.Sockets.TcpClient> viene utilizzato per comunicare con il client appena connesso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-202">This <xref:System.Net.Sockets.TcpClient> is used to communicate with the newly connected client.</span></span>  
  
 [!code-cpp[Classic TcpListenerExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListenerExample/CPP/source.cpp#1)]
 [!code-csharp[Classic TcpListenerExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListenerExample/CS/source.cs#1)]
 [!code-vb[Classic TcpListenerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListenerExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c50dc-203">Il listener non è stato avviato con una chiamata a <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-203">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="c50dc-204">Per ottenere il codice di errore specificato, utilizzare la proprietà <see cref="P:System.Net.Sockets.SocketException.ErrorCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-204">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span>
          </span>
          <span data-ttu-id="c50dc-205">Una volta ottenuto il codice, è possibile trovare una descrizione dettagliata dell'errore nella documentazione relativa ai codici di errore dell'API di Windows Sockets versione 2 in MSDN.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-205">When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
      </Docs>
    </Member>
    <Member MemberName="AcceptTcpClientAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt; AcceptTcpClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Sockets.TcpClient&gt; AcceptTcpClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptTcpClientAsync () As Task(Of TcpClient)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::TcpClient ^&gt; ^ AcceptTcpClientAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c50dc-206">Accetta una richiesta di connessione in sospeso come operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-206">Accepts a pending connection request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c50dc-207">Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-207">Returns <see cref="T:System.Threading.Tasks.Task`1" /></span>
          </span>
          <span data-ttu-id="c50dc-208">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-208">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="c50dc-209">La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce <see cref="T:System.Net.Sockets.TcpClient" /> utilizzato per inviare e ricevere i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-209">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c50dc-210">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="c50dc-210">This operation will not block.</span></span> <span data-ttu-id="c50dc-211">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che è stata accettata la connessione TCP.</span><span class="sxs-lookup"><span data-stu-id="c50dc-211">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the TCP connection has been accepted.</span></span>  
  
 <span data-ttu-id="c50dc-212">Utilizzare il <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> per ottenere l'oggetto sottostante <xref:System.Net.Sockets.NetworkStream> dell'oggetto restituito <xref:System.Net.Sockets.TcpClient> nel <xref:System.Threading.Tasks.Task%601>.</span><span class="sxs-lookup"><span data-stu-id="c50dc-212">Use the <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream> of the returned <xref:System.Net.Sockets.TcpClient> in the <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="c50dc-213">Il <xref:System.Net.Sockets.NetworkStream> fornirà i metodi per l'invio e ricezione con l'host remoto.</span><span class="sxs-lookup"><span data-stu-id="c50dc-213">The <xref:System.Net.Sockets.NetworkStream> will provide you with methods for sending and receiving with the remote host.</span></span> <span data-ttu-id="c50dc-214">Quando si è tramite il <xref:System.Net.Sockets.TcpClient>, verificare di chiamare il relativo <xref:System.Net.Sockets.TcpClient.Close%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="c50dc-214">When you are through with the <xref:System.Net.Sockets.TcpClient>, be sure to call its <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span> <span data-ttu-id="c50dc-215">Se si desidera maggiore flessibilità rispetto a un <xref:System.Net.Sockets.TcpClient> offerte, è consigliabile utilizzare <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> o <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="c50dc-215">If you want greater flexibility than a <xref:System.Net.Sockets.TcpClient> offers, consider using <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> or <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-216">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-216">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c50dc-217">Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c50dc-217">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c50dc-218">Il listener non è stato avviato con una chiamata a <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-218">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="c50dc-219">Per ottenere il codice di errore specificato, utilizzare la proprietà <see cref="P:System.Net.Sockets.SocketException.ErrorCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-219">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span>
          </span>
          <span data-ttu-id="c50dc-220">Una volta ottenuto il codice, è possibile trovare una descrizione dettagliata dell'errore nella documentazione relativa ai codici di errore dell'API di Windows Sockets versione 2 in MSDN.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-220">When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.Active" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c50dc-221">Ottiene un valore che indica se <see cref="T:System.Net.Sockets.TcpListener" /> è attivamente in attesa di connessioni client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-221">Gets a value that indicates whether <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening for client connections.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c50dc-222">
            <see langword="true" /> se <see cref="T:System.Net.Sockets.TcpListener" /> è attivamente in attesa; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-222">
              <see langword="true" /> if <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c50dc-223">Le classi che derivano da <xref:System.Net.Sockets.TcpListener> possibile utilizzare questa proprietà per determinare se il <xref:System.Net.Sockets.Socket> è attualmente in attesa per i tentativi di connessione in ingresso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-223">Classes deriving from <xref:System.Net.Sockets.TcpListener> can use this property to determine if the <xref:System.Net.Sockets.Socket> is currently listening for incoming connection attempts.</span></span> <span data-ttu-id="c50dc-224">Il <xref:System.Net.Sockets.TcpClient.Active%2A> proprietà può essere utilizzata per evitare la ridondanza <xref:System.Net.Sockets.TcpListener.Start%2A> tentativi.</span><span class="sxs-lookup"><span data-stu-id="c50dc-224">The <xref:System.Net.Sockets.TcpClient.Active%2A> property can be used to avoid redundant <xref:System.Net.Sockets.TcpListener.Start%2A> attempts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName="AllowNatTraversal">
      <MemberSignature Language="C#" Value="public void AllowNatTraversal (bool allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AllowNatTraversal(bool allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllowNatTraversal (allowed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllowNatTraversal(bool allowed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowed">
          <span data-ttu-id="c50dc-225">Valore booleano che specifica se abilitare o disabilitare l'attraversamento NAT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-225">A Boolean value that specifies whether to enable or disable NAT traversal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c50dc-226">Abilita o disabilita l'attraversamento NAT (Network Address Translation) in un'istanza di <see cref="T:System.Net.Sockets.TcpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-226">Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.TcpListener" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c50dc-227">Il <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> consente di abilitare o disabilitare l'attraversamento NAT per un <xref:System.Net.Sockets.TcpListener> istanza.</span><span class="sxs-lookup"><span data-stu-id="c50dc-227">The <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method is used to enable or disable NAT traversal for a <xref:System.Net.Sockets.TcpListener> instance.</span></span> <span data-ttu-id="c50dc-228">È possibile specificare l'attraversamento NAT con Teredo, 6to4 o un tunnel ISATAP.</span><span class="sxs-lookup"><span data-stu-id="c50dc-228">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="c50dc-229">Quando il `allowed` parametro è false, il <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> opzione sul socket associato è impostata su <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span><span class="sxs-lookup"><span data-stu-id="c50dc-229">When the `allowed` parameter is false, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span></span> <span data-ttu-id="c50dc-230">Disabilita in modo esplicito l'attraversamento NAT per un <xref:System.Net.Sockets.TcpListener> istanza.</span><span class="sxs-lookup"><span data-stu-id="c50dc-230">This explicitly disables NAT traversal for a <xref:System.Net.Sockets.TcpListener> instance.</span></span>  
  
 <span data-ttu-id="c50dc-231">Quando il `allowed` parametro è true, il <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> opzione sul socket associato è impostata su <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span><span class="sxs-lookup"><span data-stu-id="c50dc-231">When the `allowed` parameter is true, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="c50dc-232">Può consentire l'attraversamento NAT per un <xref:System.Net.Sockets.TcpListener> a seconda delle regole del firewall sul posto del sistema.</span><span class="sxs-lookup"><span data-stu-id="c50dc-232">This may allow NAT traversal for a <xref:System.Net.Sockets.TcpListener> depending on firewall rules in place on the system.</span></span>  
  
 <span data-ttu-id="c50dc-233">Il <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> metodo deve essere richiamato prima di chiamare il <xref:System.Net.Sockets.TcpListener.Start%2A> metodo può mettersi in ascolto delle richieste di connessione in ingresso (prima che venga associato il socket).</span><span class="sxs-lookup"><span data-stu-id="c50dc-233">The <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method must be invoked prior to calling the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection requests (before the socket is bound).</span></span> <span data-ttu-id="c50dc-234">Se <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> metodo viene chiamato dopo il <xref:System.Net.Sockets.TcpListener.Start%2A> (metodo), quindi un <xref:System.InvalidOperationException> verrà generata.</span><span class="sxs-lookup"><span data-stu-id="c50dc-234">If <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method is called after the <xref:System.Net.Sockets.TcpListener.Start%2A> method, then an <xref:System.InvalidOperationException> will be thrown.</span></span>  
  
 <span data-ttu-id="c50dc-235">Un indirizzo Teredo è un indirizzo IPv6 con il prefisso 2001::/ / 32.</span><span class="sxs-lookup"><span data-stu-id="c50dc-235">A Teredo address is an IPv6 address with the prefix of 2001::/32.</span></span> <span data-ttu-id="c50dc-236">Gli indirizzi Teredo possono essere restituiti tramite normale risoluzione dei nomi DNS o enumerati come un indirizzo IPv6 assegnato a un'interfaccia locale.</span><span class="sxs-lookup"><span data-stu-id="c50dc-236">Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c50dc-237">Il metodo <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> è stato chiamato dopo avere chiamato il metodo <see cref="M:System.Net.Sockets.TcpListener.Start" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-237">The <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> method was called after calling the <see cref="M:System.Net.Sockets.TcpListener.Start" /> method</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptSocket">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptSocket (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAcceptSocket(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptSocket (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptSocket(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="c50dc-238">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-238">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c50dc-239">Oggetto definito dall'utente contenente informazioni sull'operazione di accettazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-239">A user-defined object containing information about the accept operation.</span>
          </span>
          <span data-ttu-id="c50dc-240">L'oggetto viene passato al delegato <c>callback</c> al completamento dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-240">This object is passed to the <c>callback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c50dc-241">Avvia un'operazione asincrona per accettare un tentativo di connessione in ingresso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-241">Begins an asynchronous operation to accept an incoming connection attempt.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c50dc-242">Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla creazione asincrona di <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-242">An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c50dc-243">Asincrona <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> operazione deve essere completata chiamando il <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="c50dc-243">The asynchronous <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method.</span></span> <span data-ttu-id="c50dc-244">In genere, il metodo viene richiamato dal `callback` delegato.</span><span class="sxs-lookup"><span data-stu-id="c50dc-244">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="c50dc-245">Questo metodo si blocca fino al completamento dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="c50dc-245">This method does not block until the operation completes.</span></span> <span data-ttu-id="c50dc-246">Per il blocco fino al completamento dell'operazione, utilizzare il <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="c50dc-246">To block until the operation completes, use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span>  
  
 <span data-ttu-id="c50dc-247">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere [la chiamata dei metodi sincroni](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="c50dc-247">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-248">È possibile chiamare il <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> proprietà dell'oggetto restituito <xref:System.Net.Sockets.Socket> per identificare il numero porta e indirizzo di rete dell'host remoto.</span><span class="sxs-lookup"><span data-stu-id="c50dc-248">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-249">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare il <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> proprietà per ottenere il codice di errore specifico e fare riferimento alla documentazione relativa ai codici di errore dell'API di Windows Sockets versione 2 disponibile in MSDN library al [ http://msdn.microsoft.com/library/ ](http://msdn.microsoft.com/library/) per dettagliate Descrizione dell'errore.</span><span class="sxs-lookup"><span data-stu-id="c50dc-249">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](http://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-250">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-250">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c50dc-251">Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c50dc-251">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c50dc-252">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> per creare e collegare un socket.</span><span class="sxs-lookup"><span data-stu-id="c50dc-252">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> method to create and connect a socket.</span></span> <span data-ttu-id="c50dc-253">Il delegato di callback chiama il <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> metodo per terminare la richiesta asincrona.</span><span class="sxs-lookup"><span data-stu-id="c50dc-253">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#4)]
 [!code-vb[System.Net.Sockets.TcpListener1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="c50dc-254">Si è verificato un errore durante il tentativo di accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-254">An error occurred while attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c50dc-255">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-255">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptTcpClient">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptTcpClient (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAcceptTcpClient(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptTcpClient (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptTcpClient(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="c50dc-256">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-256">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c50dc-257">Oggetto definito dall'utente contenente informazioni sull'operazione di accettazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-257">A user-defined object containing information about the accept operation.</span>
          </span>
          <span data-ttu-id="c50dc-258">L'oggetto viene passato al delegato <c>callback</c> al completamento dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-258">This object is passed to the <c>callback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c50dc-259">Avvia un'operazione asincrona per accettare un tentativo di connessione in ingresso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-259">Begins an asynchronous operation to accept an incoming connection attempt.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c50dc-260">Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla creazione asincrona di <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-260">An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c50dc-261">Asincrona <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> operazione deve essere completata chiamando il <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="c50dc-261">The asynchronous <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method.</span></span> <span data-ttu-id="c50dc-262">In genere, il metodo viene richiamato dal `callback` delegato.</span><span class="sxs-lookup"><span data-stu-id="c50dc-262">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="c50dc-263">Questo metodo si blocca fino al completamento dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="c50dc-263">This method does not block until the operation completes.</span></span> <span data-ttu-id="c50dc-264">Per il blocco fino al completamento dell'operazione, utilizzare il <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="c50dc-264">To block until the operation completes, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method.</span></span>  
  
 <span data-ttu-id="c50dc-265">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere [la chiamata dei metodi sincroni](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="c50dc-265">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-266">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare il <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> proprietà per ottenere il codice di errore specifico e fare riferimento alla documentazione relativa ai codici di errore dell'API di Windows Sockets versione 2 disponibile in MSDN library al [ http://msdn.microsoft.com/library/ ](http://msdn.microsoft.com/library/) per dettagliate Descrizione dell'errore.</span><span class="sxs-lookup"><span data-stu-id="c50dc-266">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](http://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-267">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-267">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c50dc-268">Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c50dc-268">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c50dc-269">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> per creare e collegare un socket.</span><span class="sxs-lookup"><span data-stu-id="c50dc-269">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> method to create and connect a socket.</span></span> <span data-ttu-id="c50dc-270">Il delegato di callback chiama il <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> metodo per terminare la richiesta asincrona.</span><span class="sxs-lookup"><span data-stu-id="c50dc-270">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#5)]
 [!code-vb[System.Net.Sockets.TcpListener1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="c50dc-271">Si è verificato un errore durante il tentativo di accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-271">An error occurred while attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c50dc-272">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-272">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.Sockets.TcpListener Create (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Sockets.TcpListener Create(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Create(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (port As Integer) As TcpListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Sockets::TcpListener ^ Create(int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpListener</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="c50dc-273">Porta su cui attendere i tentativi di connessione in ingresso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-273">The port on which to listen for incoming connection attempts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c50dc-274">Crea una nuova istanza di <see cref="T:System.Net.Sockets.TcpListener" /> in ascolto sulla porta specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-274">Creates a new <see cref="T:System.Net.Sockets.TcpListener" /> instance to listen on the specified port.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c50dc-275">Restituisce <see cref="T:System.Net.Sockets.TcpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-275">Returns <see cref="T:System.Net.Sockets.TcpListener" />.</span>
          </span>
          <span data-ttu-id="c50dc-276">Nuova istanza di <see cref="T:System.Net.Sockets.TcpListener" /> in ascolto sulla porta specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-276">A new <see cref="T:System.Net.Sockets.TcpListener" /> instance to listen on the specified port.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket EndAcceptSocket (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket EndAcceptSocket(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptSocket (asyncResult As IAsyncResult) As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ EndAcceptSocket(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="c50dc-277">
            <see cref="T:System.IAsyncResult" /> restituito da una chiamata al metodo <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-277">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c50dc-278">Accetta in modo asincrono una connessione in ingresso e crea un nuovo oggetto <see cref="T:System.Net.Sockets.Socket" /> per gestire la comunicazione con l'host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-278">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> to handle remote host communication.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c50dc-279">Oggetto <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-279">A <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
          <span data-ttu-id="c50dc-280">Oggetto <see cref="T:System.Net.Sockets.Socket" /> utilizzato per inviare e ricevere dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-280">The <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c50dc-281">Questo metodo si blocca fino a quando l'operazione è completata.</span><span class="sxs-lookup"><span data-stu-id="c50dc-281">This method blocks until the operation is complete.</span></span> <span data-ttu-id="c50dc-282">Per eseguire questa operazione in modo sincrono, utilizzare il <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="c50dc-282">To perform this operation synchronously, use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-283">È possibile chiamare il <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> proprietà dell'oggetto restituito <xref:System.Net.Sockets.Socket> per identificare il numero porta e indirizzo di rete dell'host remoto.</span><span class="sxs-lookup"><span data-stu-id="c50dc-283">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-284">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare il <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> proprietà per ottenere il codice di errore specifico e fare riferimento alla documentazione relativa ai codici di errore dell'API di Windows Sockets versione 2 disponibile in MSDN library al [ http://msdn.microsoft.com/library/ ](http://msdn.microsoft.com/library/) per dettagliate Descrizione dell'errore.</span><span class="sxs-lookup"><span data-stu-id="c50dc-284">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](http://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-285">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-285">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c50dc-286">Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c50dc-286">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c50dc-287">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> per creare e collegare un socket.</span><span class="sxs-lookup"><span data-stu-id="c50dc-287">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> method to create and connect a socket.</span></span> <span data-ttu-id="c50dc-288">Il delegato di callback chiama il <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> metodo per terminare la richiesta asincrona.</span><span class="sxs-lookup"><span data-stu-id="c50dc-288">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#4)]
 [!code-vb[System.Net.Sockets.TcpListener1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c50dc-289">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-289">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c50dc-290">Il valore del parametro <paramref name="asyncResult" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-290">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c50dc-291">Il parametro <paramref name="asyncResult" /> non è stato creato da una chiamata al metodo <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-291">The <paramref name="asyncResult" /> parameter was not created by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c50dc-292">Il metodo <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> è stato chiamato precedentemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-292">The <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> method was previously called.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="c50dc-293">Si è verificato un errore durante il tentativo di accesso al <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-293">An error occurred while attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptTcpClient">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.TcpClient EndAcceptTcpClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.TcpClient EndAcceptTcpClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptTcpClient (asyncResult As IAsyncResult) As TcpClient" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::TcpClient ^ EndAcceptTcpClient(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="c50dc-294">
            <see cref="T:System.IAsyncResult" /> restituito da una chiamata al metodo <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-294">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c50dc-295">Accetta in modo asincrono una connessione in ingresso e crea un nuovo oggetto <see cref="T:System.Net.Sockets.TcpClient" /> per gestire la comunicazione con l'host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-295">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.TcpClient" /> to handle remote host communication.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c50dc-296">Oggetto <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-296">A <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          </span>
          <span data-ttu-id="c50dc-297">Oggetto <see cref="T:System.Net.Sockets.TcpClient" /> utilizzato per inviare e ricevere dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-297">The <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c50dc-298">Questo metodo si blocca fino a quando l'operazione è completata.</span><span class="sxs-lookup"><span data-stu-id="c50dc-298">This method blocks until the operation is complete.</span></span> <span data-ttu-id="c50dc-299">Per eseguire questa operazione in modo sincrono, utilizzare il <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="c50dc-299">To perform this operation synchronously, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-300">È possibile chiamare il <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> proprietà del socket sottostante (<xref:System.Net.Sockets.TcpClient.Client%2A>) per identificare il numero porta e indirizzo di rete dell'host remoto.</span><span class="sxs-lookup"><span data-stu-id="c50dc-300">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the underlying socket (<xref:System.Net.Sockets.TcpClient.Client%2A>) to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-301">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare il <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> proprietà per ottenere il codice di errore specifico e fare riferimento alla documentazione relativa ai codici di errore dell'API di Windows Sockets versione 2 disponibile in MSDN library al [ http://msdn.microsoft.com/library/ ](http://msdn.microsoft.com/library/) per dettagliate Descrizione dell'errore.</span><span class="sxs-lookup"><span data-stu-id="c50dc-301">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](http://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-302">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-302">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c50dc-303">Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c50dc-303">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c50dc-304">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> per creare e collegare un socket.</span><span class="sxs-lookup"><span data-stu-id="c50dc-304">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> method to create and connect a socket.</span></span> <span data-ttu-id="c50dc-305">Il delegato di callback chiama il <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> metodo per terminare la richiesta asincrona.</span><span class="sxs-lookup"><span data-stu-id="c50dc-305">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#5)]
 [!code-vb[System.Net.Sockets.TcpListener1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c50dc-306">Ottiene o imposta un valore <see cref="T:System.Boolean" /> che specifica se il <see cref="T:System.Net.Sockets.TcpListener" /> consente a un unico socket sottostante di restare in attesa di una porta specifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-306">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one underlying socket to listen to a specific port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c50dc-307">
            <see langword="true" /> se il <see cref="T:System.Net.Sockets.TcpListener" /> consente a un solo <see cref="T:System.Net.Sockets.TcpListener" /> di restare in attesa di una porta specifica; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-307">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one <see cref="T:System.Net.Sockets.TcpListener" /> to listen to a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c50dc-308">.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-308">.</span>
          </span>
          <span data-ttu-id="c50dc-309">Il valore predefinito è <see langword="true" /> per Windows Server 2003 e Windows XP Service Pack 2 e versioni successive e <see langword="false" /> per tutte le altre versioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-309">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c50dc-310">Per impostazione predefinita, più listener può restare in ascolto su una porta specifica.</span><span class="sxs-lookup"><span data-stu-id="c50dc-310">By default, multiple listeners can listen to a specific port.</span></span> <span data-ttu-id="c50dc-311">Tuttavia, solo uno dei listener può eseguire operazioni sul traffico di rete inviato alla porta.</span><span class="sxs-lookup"><span data-stu-id="c50dc-311">However, only one of the listeners can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="c50dc-312">Se più di un listener tenta di associare a una porta specifica, quella con l'indirizzo IP più specifico gestisce il traffico di rete inviato alla porta.</span><span class="sxs-lookup"><span data-stu-id="c50dc-312">If more than one listener attempts to bind to a particular port, then the one with the more specific IP address handles the network traffic sent to that port.</span></span> <span data-ttu-id="c50dc-313">È possibile utilizzare il <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> proprietà per impedire a una porta specifica in attesa di più listener.</span><span class="sxs-lookup"><span data-stu-id="c50dc-313">You can use the <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> property to prevent multiple listeners from listening to a specific port.</span></span>  
  
 <span data-ttu-id="c50dc-314">Impostare questa proprietà prima di chiamare <xref:System.Net.Sockets.TcpListener.Start%2A>, oppure chiamare il <xref:System.Net.Sockets.TcpListener.Stop%2A> (metodo) e quindi impostare questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="c50dc-314">Set this property before calling <xref:System.Net.Sockets.TcpListener.Start%2A>, or call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method and then set this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c50dc-315">Esempio di codice seguente ottiene e imposta il <xref:System.Net.Sockets.TcpListener.ExclusiveAddressUse%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="c50dc-315">The following code example gets and sets the <xref:System.Net.Sockets.TcpListener.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpListener1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#2)]
 [!code-vb[System.Net.Sockets.TcpListener1#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c50dc-316">Il <see cref="T:System.Net.Sockets.TcpListener" /> è stato avviato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-316">The <see cref="T:System.Net.Sockets.TcpListener" /> has been started.</span>
          </span>
          <span data-ttu-id="c50dc-317">Chiamare il metodo <see cref="M:System.Net.Sockets.TcpListener.Stop" />, quindi impostare la proprietà <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-317">Call the <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method and then set the <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="c50dc-318">Si è verificato un errore durante il tentativo di accesso al socket sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-318">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c50dc-319">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-319">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpListener ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpListener ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalEndpoint">
      <MemberSignature Language="C#" Value="public System.Net.EndPoint LocalEndpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.EndPoint LocalEndpoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.LocalEndpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndpoint As EndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::EndPoint ^ LocalEndpoint { System::Net::EndPoint ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.EndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c50dc-320">Ottiene il <see cref="T:System.Net.EndPoint" /> sottostante del <see cref="T:System.Net.Sockets.TcpListener" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-320">Gets the underlying <see cref="T:System.Net.EndPoint" /> of the current <see cref="T:System.Net.Sockets.TcpListener" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c50dc-321">
            <see cref="T:System.Net.EndPoint" /> a cui è associato il <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-321">The <see cref="T:System.Net.EndPoint" /> to which the <see cref="T:System.Net.Sockets.Socket" /> is bound.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c50dc-322">È possibile utilizzare il <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> proprietà per identificare il numero di porta e di interfaccia di rete locale utilizzato per l'ascolto delle richieste di connessione client in ingresso, una volta stabilita una connessione socket.</span><span class="sxs-lookup"><span data-stu-id="c50dc-322">You can use the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property to identify the local network interface and port number being used to listen for incoming client connection requests, after a socket connection has been made.</span></span> <span data-ttu-id="c50dc-323">È necessario innanzitutto eseguire il cast questo <xref:System.Net.EndPoint> per un <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="c50dc-323">You must first cast this <xref:System.Net.EndPoint> to an <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="c50dc-324">È quindi possibile chiamare il <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> proprietà per recuperare l'indirizzo IP locale e <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> proprietà per recuperare il numero di porta locale.</span><span class="sxs-lookup"><span data-stu-id="c50dc-324">You can then call the <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> property to retrieve the local IP address, and the <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> property to retrieve the local port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c50dc-325">Esempio di codice seguente consente di visualizzare il numero di porta e indirizzo IP locale in cui il <xref:System.Net.Sockets.TcpListener> è in ascolto delle richieste di connessione in ingresso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-325">The following code example displays the local IP address and port number on which the <xref:System.Net.Sockets.TcpListener> is listening for incoming connection requests.</span></span>  
  
 [!code-cpp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CPP/source.cpp#1)]
 [!code-csharp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CS/source.cs#1)]
 [!code-vb[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="T:System.Net.EndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Pending">
      <MemberSignature Language="C#" Value="public bool Pending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Pending() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Pending" />
      <MemberSignature Language="VB.NET" Value="Public Function Pending () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Pending();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c50dc-326">Determina se sono presenti richieste di connessione in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-326">Determines if there are pending connection requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c50dc-327">
            <see langword="true" /> se vi sono connessioni in sospeso; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-327">
              <see langword="true" /> if connections are pending; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c50dc-328">Questo metodo non bloccante determina se vi sono richieste di connessione in sospeso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-328">This non-blocking method determines if there are any pending connection requests.</span></span> <span data-ttu-id="c50dc-329">Poiché il <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> e <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metodi bloccano l'esecuzione fino a quando il <xref:System.Net.Sockets.TcpListener.Start%2A> metodo è in coda una richiesta di connessione in ingresso, il <xref:System.Net.Sockets.TcpListener.Pending%2A> metodo può essere utilizzato per determinare se sono disponibili connessioni prima di tentare di accettarle.</span><span class="sxs-lookup"><span data-stu-id="c50dc-329">Because the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> and <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> methods block execution until the <xref:System.Net.Sockets.TcpListener.Start%2A> method has queued an incoming connection request, the <xref:System.Net.Sockets.TcpListener.Pending%2A> method can be used to determine if connections are available before attempting to accept them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c50dc-330">Nell'esempio di codice viene controllato il <xref:System.Net.Sockets.TcpListener.Pending%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="c50dc-330">The following code example checks the <xref:System.Net.Sockets.TcpListener.Pending%2A> method.</span></span> <span data-ttu-id="c50dc-331">Se una richiesta di connessione è in attesa di essere accettata, quindi una chiamata al <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="c50dc-331">If a connection request is waiting to be accepted, then a call to the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method is made.</span></span>  
  
 [!code-cpp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CPP/source.cpp#1)]
 [!code-csharp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CS/source.cs#1)]
 [!code-vb[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c50dc-332">Il listener non è stato avviato con una chiamata a <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-332">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Server" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Server { System::Net::Sockets::Socket ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c50dc-333">Ottiene il <see cref="T:System.Net.Sockets.Socket" /> di rete sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-333">Gets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c50dc-334">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-334">The underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c50dc-335"><xref:System.Net.Sockets.TcpListener> Crea un <xref:System.Net.Sockets.Socket> ascoltare le richieste di connessione client in ingresso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-335"><xref:System.Net.Sockets.TcpListener> creates a <xref:System.Net.Sockets.Socket> to listen for incoming client connection requests.</span></span> <span data-ttu-id="c50dc-336">Le classi che derivano da <xref:System.Net.Sockets.TcpListener> possibile utilizzare questa proprietà per ottenere questo <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="c50dc-336">Classes deriving from <xref:System.Net.Sockets.TcpListener> can use this property to get this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="c50dc-337">Utilizzare sottostante <xref:System.Net.Sockets.Socket> restituito dal <xref:System.Net.Sockets.TcpListener.Server%2A> proprietà se occorre accesso diverso da quello <xref:System.Net.Sockets.TcpListener> fornisce.</span><span class="sxs-lookup"><span data-stu-id="c50dc-337">Use the underlying <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpListener.Server%2A> property if you require access beyond that which <xref:System.Net.Sockets.TcpListener> provides.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-338">Il <xref:System.Net.Sockets.TcpListener.Server%2A> proprietà restituisce solo il <xref:System.Net.Sockets.Socket> utilizzati per l'ascolto delle richieste di connessione client in ingresso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-338">The <xref:System.Net.Sockets.TcpListener.Server%2A> property only returns the <xref:System.Net.Sockets.Socket> used to listen for incoming client connection requests.</span></span> <span data-ttu-id="c50dc-339">Utilizzare il <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metodo per accettare una richiesta di connessione in sospeso e ottenere un <xref:System.Net.Sockets.Socket> per l'invio e ricezione di dati.</span><span class="sxs-lookup"><span data-stu-id="c50dc-339">Use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method to accept a pending connection request and obtain a <xref:System.Net.Sockets.Socket> for sending and receiving data.</span></span> <span data-ttu-id="c50dc-340">È inoltre possibile utilizzare il <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metodo per accettare una richiesta di connessione in sospeso e ottenere un <xref:System.Net.Sockets.TcpClient> per l'invio e ricezione di dati.</span><span class="sxs-lookup"><span data-stu-id="c50dc-340">You can also use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method to accept a pending connection request and obtain a <xref:System.Net.Sockets.TcpClient> for sending and receiving data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c50dc-341">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Net.Sockets.TcpListener.Server%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="c50dc-341">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.Server%2A> property.</span></span> <span data-ttu-id="c50dc-342">Sottostante <xref:System.Net.Sockets.Socket> viene recuperato e <xref:System.Net.Sockets.SocketOptionName.Linger> <xref:System.Net.Sockets.Socket> opzione è configurata per il timeout dopo 10 secondi se i dati rimangono nel buffer di rete dopo la connessione viene chiusa.</span><span class="sxs-lookup"><span data-stu-id="c50dc-342">The underlying <xref:System.Net.Sockets.Socket> is retrieved and the <xref:System.Net.Sockets.SocketOptionName.Linger><xref:System.Net.Sockets.Socket> option is configured to time out after 10 seconds if data still remains in the network buffer after the connection is closed.</span></span>  
  
 [!code-csharp[TcpListenerProtectedMembers1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListenerProtectedMembers1/CS/source.cs#1)]
 [!code-vb[TcpListenerProtectedMembers1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListenerProtectedMembers1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c50dc-343">Avvia l'attesa delle richieste di connessione in ingresso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-343">Starts listening for incoming connection requests.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c50dc-344">Avvia l'attesa delle richieste di connessione in ingresso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-344">Starts listening for incoming connection requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c50dc-345">Il <xref:System.Net.Sockets.TcpListener.Start%2A> metodo inizializza sottostante <xref:System.Net.Sockets.Socket>, viene associata a un endpoint locale e resta in attesa di tentativi di connessione in ingresso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-345">The <xref:System.Net.Sockets.TcpListener.Start%2A> method initializes the underlying <xref:System.Net.Sockets.Socket>, binds it to a local endpoint, and listens for incoming connection attempts.</span></span> <span data-ttu-id="c50dc-346">Se viene ricevuta una richiesta di connessione, il <xref:System.Net.Sockets.TcpListener.Start%2A> metodo accodare la richiesta e continuerà ad attendere ulteriori richieste finché non si chiama il <xref:System.Net.Sockets.TcpListener.Stop%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="c50dc-346">If a connection request is received, the <xref:System.Net.Sockets.TcpListener.Start%2A> method will queue the request and continue listening for additional requests until you call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method.</span></span> <span data-ttu-id="c50dc-347">Se <xref:System.Net.Sockets.TcpListener> riceve una richiesta di connessione dopo aver accodato già il numero massimo di connessioni, verrà generata una <xref:System.Net.Sockets.SocketException> sul client.</span><span class="sxs-lookup"><span data-stu-id="c50dc-347">If <xref:System.Net.Sockets.TcpListener> receives a connection request after it has already queued the maximum number of connections, it will throw a <xref:System.Net.Sockets.SocketException> on the client.</span></span>  
  
 <span data-ttu-id="c50dc-348">Per rimuovere una connessione dalla coda di connessioni in ingresso, utilizzare il <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metodo o <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="c50dc-348">To remove a connection from the incoming connection queue, use either the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method or the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="c50dc-349">Il <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metodo rimuovere una connessione dalla coda e restituirà un <xref:System.Net.Sockets.TcpClient> che è possibile utilizzare per inviare e ricevere dati.</span><span class="sxs-lookup"><span data-stu-id="c50dc-349">The <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method will remove a connection from the queue and return a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="c50dc-350">Il <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metodo restituirà un <xref:System.Net.Sockets.Socket> che è possibile utilizzare per eseguire la stessa.</span><span class="sxs-lookup"><span data-stu-id="c50dc-350">The <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method will return a <xref:System.Net.Sockets.Socket> that you can use to do the same.</span></span> <span data-ttu-id="c50dc-351">Se l'applicazione richiede solo i/o sincrono, utilizzare <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="c50dc-351">If your application only requires synchronous I/O, use <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span></span> <span data-ttu-id="c50dc-352">Per informazioni dettagliate controllo del funzionamento, utilizzare <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span><span class="sxs-lookup"><span data-stu-id="c50dc-352">For more detailed behavioral control, use <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span></span> <span data-ttu-id="c50dc-353">Entrambi questi metodi bloccata fino a quando non è disponibile nella coda di una richiesta di connessione.</span><span class="sxs-lookup"><span data-stu-id="c50dc-353">Both of these methods block until a connection request is available in the queue.</span></span>  
  
 <span data-ttu-id="c50dc-354">Utilizzare il <xref:System.Net.Sockets.TcpListener.Stop%2A> metodo per chiudere la <xref:System.Net.Sockets.TcpListener> e interrompono l'ascolto.</span><span class="sxs-lookup"><span data-stu-id="c50dc-354">Use the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener> and stop listening.</span></span> <span data-ttu-id="c50dc-355">Si è responsabili della chiusura delle connessioni accettate separatamente.</span><span class="sxs-lookup"><span data-stu-id="c50dc-355">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-356">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-356">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c50dc-357">Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c50dc-357">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c50dc-358">Esempio di codice riportato di seguito viene illustrato come <xref:System.Net.Sockets.TcpListener.Start%2A> viene utilizzata per restare in attesa per i tentativi di connessione client in ingresso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-358">The following code example demonstrates how <xref:System.Net.Sockets.TcpListener.Start%2A> is used to listen for incoming client connection attempts.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#3)]
 [!code-vb[System.Net.Sockets.TcpListener1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="c50dc-359">Per ottenere il codice di errore specificato, utilizzare la proprietà <see cref="P:System.Net.Sockets.SocketException.ErrorCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-359">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span>
          </span>
          <span data-ttu-id="c50dc-360">Una volta ottenuto il codice, è possibile trovare una descrizione dettagliata dell'errore nella documentazione relativa ai codici di errore dell'API di Windows Sockets versione 2 in MSDN.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-360">When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start (int backlog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start(int32 backlog) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Start(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start (backlog As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start(int backlog);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backlog" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="backlog">
          <span data-ttu-id="c50dc-361">Lunghezza massima della coda delle connessioni in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-361">The maximum length of the pending connections queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c50dc-362">Avvia l'attesa delle richieste di connessione in ingresso specificando un numero massimo di possibili connessioni in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-362">Starts listening for incoming connection requests with a maximum number of pending connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c50dc-363">Il <xref:System.Net.Sockets.TcpListener.Start%2A> metodo inizializza sottostante <xref:System.Net.Sockets.Socket>, viene associata a un endpoint locale e resta in attesa di tentativi di connessione in ingresso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-363">The <xref:System.Net.Sockets.TcpListener.Start%2A> method initializes the underlying <xref:System.Net.Sockets.Socket>, binds it to a local endpoint, and listens for incoming connection attempts.</span></span> <span data-ttu-id="c50dc-364">Se viene ricevuta una richiesta di connessione, <xref:System.Net.Sockets.TcpListener.Start%2A> verrà accodare la richiesta e continuerà ad attendere ulteriori richieste finché non si chiama il <xref:System.Net.Sockets.TcpListener.Stop%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="c50dc-364">If a connection request is received, <xref:System.Net.Sockets.TcpListener.Start%2A> will queue the request and continue listening for additional requests until you call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method.</span></span> <span data-ttu-id="c50dc-365">Se <xref:System.Net.Sockets.TcpListener> riceve una richiesta di connessione dopo aver accodato già il numero massimo di connessioni, genererà un <xref:System.Net.Sockets.SocketException> sul client.</span><span class="sxs-lookup"><span data-stu-id="c50dc-365">If <xref:System.Net.Sockets.TcpListener> receives a connection request after it has already queued the maximum number of connections it will throw a <xref:System.Net.Sockets.SocketException> on the client.</span></span>  
  
 <span data-ttu-id="c50dc-366">Per rimuovere una connessione dalla coda di connessioni in ingresso, utilizzare il <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metodo o <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="c50dc-366">To remove a connection from the incoming connection queue, use either the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method or the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="c50dc-367">Il <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metodo rimuovere una connessione dalla coda e restituirà un <xref:System.Net.Sockets.TcpClient> che è possibile utilizzare per inviare e ricevere dati.</span><span class="sxs-lookup"><span data-stu-id="c50dc-367">The <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method will remove a connection from the queue and return a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="c50dc-368">Il <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metodo restituirà un <xref:System.Net.Sockets.Socket> che è possibile utilizzare per eseguire la stessa.</span><span class="sxs-lookup"><span data-stu-id="c50dc-368">The <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method will return a <xref:System.Net.Sockets.Socket> that you can use to do the same.</span></span> <span data-ttu-id="c50dc-369">Se l'applicazione richiede solo i/o sincrono, utilizzare il <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="c50dc-369">If your application only requires synchronous I/O, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span></span> <span data-ttu-id="c50dc-370">Per informazioni dettagliate controllo del funzionamento, utilizzare <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="c50dc-370">For more detailed behavioral control, use <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="c50dc-371">Entrambi questi metodi bloccata fino a quando non è disponibile nella coda di una richiesta di connessione.</span><span class="sxs-lookup"><span data-stu-id="c50dc-371">Both of these methods block until a connection request is available in the queue.</span></span>  
  
 <span data-ttu-id="c50dc-372">Utilizzare il <xref:System.Net.Sockets.TcpListener.Stop%2A> metodo per chiudere la <xref:System.Net.Sockets.TcpListener> e interrompono l'ascolto.</span><span class="sxs-lookup"><span data-stu-id="c50dc-372">Use the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener> and stop listening.</span></span> <span data-ttu-id="c50dc-373">Si è responsabili della chiusura delle connessioni accettate separatamente.</span><span class="sxs-lookup"><span data-stu-id="c50dc-373">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-374">Usare la <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> proprietà per ottenere il codice di errore specifico e fare riferimento alla documentazione relativa ai codici di errore dell'API di Windows Sockets versione 2 disponibile in MSDN library al [ http://msdn.microsoft.com/library/ ](http://msdn.microsoft.com/library/) per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="c50dc-374">Use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](http://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-375">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-375">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c50dc-376">Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c50dc-376">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c50dc-377">Esempio di codice riportato di seguito viene illustrato come <xref:System.Net.Sockets.TcpListener.Start%2A> viene utilizzata per restare in attesa per i tentativi di connessione client in ingresso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-377">The following code example demonstrates how <xref:System.Net.Sockets.TcpListener.Start%2A> is used to listen for incoming client connection attempts.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#3)]
 [!code-vb[System.Net.Sockets.TcpListener1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="c50dc-378">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-378">An error occurred while accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c50dc-379">Il parametro <paramref name="backlog" /> è minore di zero o supera il numero massimo di connessioni consentite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-379">The <paramref name="backlog" /> parameter is less than zero or exceeds the maximum number of permitted connections.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c50dc-380">Il <see cref="T:System.Net.Sockets.Socket" /> sottostante è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-380">The underlying <see cref="T:System.Net.Sockets.Socket" /> is null.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c50dc-381">Chiude il listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-381">Closes the listener.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c50dc-382"><xref:System.Net.Sockets.TcpListener.Stop%2A> Chiude il listener.</span><span class="sxs-lookup"><span data-stu-id="c50dc-382"><xref:System.Net.Sockets.TcpListener.Stop%2A> closes the listener.</span></span> <span data-ttu-id="c50dc-383">Le richieste di connessione non accettato nella coda andranno perse.</span><span class="sxs-lookup"><span data-stu-id="c50dc-383">Any unaccepted connection requests in the queue will be lost.</span></span> <span data-ttu-id="c50dc-384">Gli host remoti in attesa di una connessione di essere accettati genereranno un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="c50dc-384">Remote hosts waiting for a connection to be accepted will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="c50dc-385">Si è responsabili della chiusura delle connessioni accettate separatamente.</span><span class="sxs-lookup"><span data-stu-id="c50dc-385">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c50dc-386">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</span><span class="sxs-lookup"><span data-stu-id="c50dc-386">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c50dc-387">Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c50dc-387">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c50dc-388">Esempio di codice seguente viene illustrato l'utilizzo di <xref:System.Net.Sockets.TcpListener.Stop%2A> metodo per chiudere sottostante <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="c50dc-388">The following code example demonstrates using the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CPP/tcpserver.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CS/tcpserver.cs#1)]
 [!code-vb[System.Net.Sockets.TcpListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/VB/tcpserver.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="c50dc-389">Per ottenere il codice di errore specificato, utilizzare la proprietà <see cref="P:System.Net.Sockets.SocketException.ErrorCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-389">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span>
          </span>
          <span data-ttu-id="c50dc-390">Una volta ottenuto il codice, è possibile trovare una descrizione dettagliata dell'errore nella documentazione relativa ai codici di errore dell'API di Windows Sockets versione 2 in MSDN.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c50dc-390">When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="c50dc-391">Il <see cref="M:System.Net.Sockets.TcpListener.Stop" /> metodo chiude anche sottostante <see cref="T:System.Net.Sockets.Socket" />e crea un nuovo <see cref="T:System.Net.Sockets.Socket" /> per il <see cref="T:System.Net.Sockets.TcpListener" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c50dc-391">The <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method also closes the underlying <see cref="T:System.Net.Sockets.Socket" />, and creates a new <see cref="T:System.Net.Sockets.Socket" /> for the <see cref="T:System.Net.Sockets.TcpListener" />.</span>
            </span>
            <span data-ttu-id="c50dc-392">Se si impostano le proprietà sull'oggetto sottostante <see cref="T:System.Net.Sockets.Socket" /> prima di chiamare il <see cref="M:System.Net.Sockets.TcpListener.Stop" /> (metodo), tali proprietà non verranno trasferite al nuovo <see cref="T:System.Net.Sockets.Socket" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c50dc-392">If you set any properties on the underlying <see cref="T:System.Net.Sockets.Socket" /> prior to calling the <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method, those properties will not carry over to the new <see cref="T:System.Net.Sockets.Socket" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
  </Members>
</Type>