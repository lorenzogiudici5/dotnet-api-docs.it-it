<Type Name="SocketAsyncEventArgs" FullName="System.Net.Sockets.SocketAsyncEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6d32f2dd9ef982cbfb02299292560de5184866e8" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37644043" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SocketAsyncEventArgs : EventArgs, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SocketAsyncEventArgs extends System.EventArgs implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.SocketAsyncEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SocketAsyncEventArgs&#xA;Inherits EventArgs&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SocketAsyncEventArgs : EventArgs, IDisposable" />
  <TypeSignature Language="F#" Value="type SocketAsyncEventArgs = class&#xA;    inherit EventArgs&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="ec6bd-101">Rappresenta un'operazione socket asincrona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ec6bd-101">Represents an asynchronous socket operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-102">Il <xref:System.Net.Sockets.SocketAsyncEventArgs> classe fa parte di un set di miglioramenti per la <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> classi che forniscono un modello asincrono alternativo che può essere utilizzato da applicazioni socket ad alte prestazioni specializzate.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-102">The <xref:System.Net.Sockets.SocketAsyncEventArgs> class is part of a set of enhancements to the <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> class that provide an alternative asynchronous pattern that can be used by specialized high-performance socket applications.</span></span> <span data-ttu-id="ec6bd-103">Questa classe è stata progettata specificamente per le applicazioni server di rete che richiedono prestazioni elevate.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-103">This class was specifically designed for network server applications that require high performance.</span></span> <span data-ttu-id="ec6bd-104">Un'applicazione può usare il modello asincrono migliorato in modo esclusivo o solo nelle aree sensibili (ad esempio, quando si ricevono grandi quantità di dati) di destinazione.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-104">An application can use the enhanced asynchronous pattern exclusively or only in targeted hot areas (for example, when receiving large amounts of data).</span></span>  
  
 <span data-ttu-id="ec6bd-105">La funzionalità principale di questi miglioramenti è evitare l'allocazione ripetuta e la sincronizzazione degli oggetti durante operazioni di I/O su socket asincrone con volumi elevati di dati.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-105">The main feature of these enhancements is the avoidance of the repeated allocation and synchronization of objects during high-volume asynchronous socket I/O.</span></span> <span data-ttu-id="ec6bd-106">Lo schema progettuale inizio/fine attualmente implementato dal <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> classe richiede un <xref:System.IAsyncResult?displayProperty=nameWithType> oggetti da allocare per ogni operazione socket asincrona.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-106">The Begin/End design pattern currently implemented by the <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> class requires a <xref:System.IAsyncResult?displayProperty=nameWithType> object be allocated for each asynchronous socket operation.</span></span>  
  
 <span data-ttu-id="ec6bd-107">Nel nuovo <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> miglioramenti, socket asincrone operazioni sono descritte da riutilizzabile per la classe <xref:System.Net.Sockets.SocketAsyncEventArgs> gli oggetti allocati e gestiti dall'applicazione.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-107">In the new <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> class enhancements, asynchronous socket operations are described by reusable <xref:System.Net.Sockets.SocketAsyncEventArgs> objects allocated and maintained by the application.</span></span> <span data-ttu-id="ec6bd-108">Le applicazioni ad alte prestazioni che usano socket conoscono bene la quantità di operazioni su socket sovrapposte che occorre supportare.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-108">High-performance socket applications know best the amount of overlapped socket operations that must be sustained.</span></span> <span data-ttu-id="ec6bd-109">L'applicazione può creare il numero di oggetti <xref:System.Net.Sockets.SocketAsyncEventArgs> necessari.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-109">The application can create as many of the <xref:System.Net.Sockets.SocketAsyncEventArgs> objects that it needs.</span></span> <span data-ttu-id="ec6bd-110">Ad esempio, se un'applicazione server deve avere 15 socket accettare operazioni in sospeso in qualsiasi momento per supportare le velocità di connessione client in ingresso, può allocare 15 riutilizzabili <xref:System.Net.Sockets.SocketAsyncEventArgs> gli oggetti a tale scopo.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-110">For example, if a server application needs to have 15 socket accept operations outstanding at all times to support incoming client connection rates, it can allocate 15 reusable <xref:System.Net.Sockets.SocketAsyncEventArgs> objects for that purpose.</span></span>  
  
 <span data-ttu-id="ec6bd-111">Il modello per l'esecuzione di un'operazione socket asincrona con questa classe è costituito dai passaggi seguenti:</span><span class="sxs-lookup"><span data-stu-id="ec6bd-111">The pattern for performing an asynchronous socket operation with this class consists of the following steps:</span></span>  
  
1.  <span data-ttu-id="ec6bd-112">Allocare un nuovo oggetto contesto <xref:System.Net.Sockets.SocketAsyncEventArgs> oppure ottenerne uno libero da un pool di applicazioni.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-112">Allocate a new <xref:System.Net.Sockets.SocketAsyncEventArgs> context object, or get a free one from an application pool.</span></span>  
  
2.  <span data-ttu-id="ec6bd-113">Impostare le proprietà nel contesto dell'oggetto all'operazione per essere eseguite (il metodo di callback di completamento, il buffer dei dati, l'offset nel buffer e la quantità massima di dati da trasferire, ad esempio).</span><span class="sxs-lookup"><span data-stu-id="ec6bd-113">Set properties on the context object to the operation about to be performed (the completion callback method, the data buffer, the offset into the buffer, and the maximum amount of data to transfer, for example).</span></span>  
  
3.  <span data-ttu-id="ec6bd-114">Chiamare il metodo socket appropriato (xxxAsync) per avviare l'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-114">Call the appropriate socket method (xxxAsync) to initiate the asynchronous operation.</span></span>  
  
4.  <span data-ttu-id="ec6bd-115">Se il metodo socket asincrono (xxxAsync) restituisce true, nella richiamata, eseguire una query la proprietà di contesto per lo stato di completamento.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-115">If the asynchronous socket method (xxxAsync) returns true, in the callback, query the context properties for completion status.</span></span>  
  
5.  <span data-ttu-id="ec6bd-116">Se il metodo socket asincrono (xxxAsync) restituisce false, l'operazione viene completata in modo sincrono.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-116">If the asynchronous socket method (xxxAsync) returns false, the operation completed synchronously.</span></span> <span data-ttu-id="ec6bd-117">È possibile recuperare il risultato dell'operazione dalle proprietà di contesto.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-117">The context properties may be queried for the operation result.</span></span>  
  
6.  <span data-ttu-id="ec6bd-118">Riutilizzare il contesto per un'altra operazione, inserirlo nuovamente nel pool o rimuoverlo.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-118">Reuse the context for another operation, put it back in the pool, or discard it.</span></span>  
  
 <span data-ttu-id="ec6bd-119">La durata del nuovo oggetto di contesto di operazione socket asincrona è determinata dai riferimenti dal codice dell'applicazione e i riferimenti dei / o asincroni.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-119">The lifetime of the new asynchronous socket operation context object is determined by references by the application code and asynchronous I/O references.</span></span> <span data-ttu-id="ec6bd-120">Non è necessario che l'applicazione mantenga un riferimento a un oggetto di contesto dell'operazione socket asincrona dopo l'invio come parametro a uno dei metodi per operazioni socket asincrone.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-120">It is not necessary for the application to retain a reference to an asynchronous socket operation context object after it is submitted as a parameter to one of the asynchronous socket operation methods.</span></span> <span data-ttu-id="ec6bd-121">Il riferimento verrà mantenuto attivo fino a quando il callback di completamento non restituisce il controllo.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-121">It will remain referenced until the completion callback returns.</span></span> <span data-ttu-id="ec6bd-122">È tuttavia vantaggioso per l'applicazione mantenga un riferimento al contesto può essere riutilizzato per un'operazione socket asincrona futura.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-122">However it is advantageous for the application to retain the reference to the context so that it can be reused for a future asynchronous socket operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec6bd-123">Esempio di codice seguente implementa la logica di connessione per il server di socket che utilizza il <xref:System.Net.Sockets.SocketAsyncEventArgs> classe.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-123">The following code example implements the connection logic for the socket server that uses the <xref:System.Net.Sockets.SocketAsyncEventArgs> class.</span></span> <span data-ttu-id="ec6bd-124">Dopo aver accettato una connessione, tutti i dati letti dal client viene inviato al client.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-124">After accepting a connection, all data read from the client is sent back to the client.</span></span> <span data-ttu-id="ec6bd-125">La lettura ed echo al modello client continua fino a quando il client si disconnette.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-125">The read and echo back to the client pattern is continued until the client disconnects.</span></span> <span data-ttu-id="ec6bd-126">La classe BufferManager utilizzato da questo esempio viene visualizzata nell'esempio di codice per il <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ec6bd-126">The BufferManager class that is used by this example is displayed in the code example for the <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="ec6bd-127">La classe SocketAsyncEventArgsPool viene usata in questo esempio viene visualizzata nell'esempio di codice per il <xref:System.Net.Sockets.SocketAsyncEventArgs.%23ctor%2A> costruttore.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-127">The SocketAsyncEventArgsPool class that is used in this example is displayed in the code example for the <xref:System.Net.Sockets.SocketAsyncEventArgs.%23ctor%2A> constructor.</span></span>  
  
 [!code-csharp[NCLAsyncSocketServer#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLAsyncSocketServer/CS/AsyncSocketServer.cs#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IAsyncResult" />
    <altmember cref="T:System.Net.Sockets.Socket" />
    <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SocketAsyncEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SocketAsyncEventArgs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-128">Crea un'istanza vuota della classe <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-128">Creates an empty <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-129">Dopo aver chiamato questo costruttore tutte le proprietà verranno impostate sui valori predefiniti:</span><span class="sxs-lookup"><span data-stu-id="ec6bd-129">After calling this constructor all properties will have their default values:</span></span>  
  
-   <span data-ttu-id="ec6bd-130">Riferimenti a oggetti è null</span><span class="sxs-lookup"><span data-stu-id="ec6bd-130">Object references will be null</span></span>  
  
-   <span data-ttu-id="ec6bd-131">Le proprietà che restituiscono un numero intero restituirà zero.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-131">Properties that return an integer will return zero.</span></span>  
  
-   <span data-ttu-id="ec6bd-132">Il <xref:System.Net.Sockets.SocketAsyncEventArgs.LastOperation%2A> sarà uguale alla proprietà <xref:System.Net.Sockets.SocketAsyncOperation.None>.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-132">The <xref:System.Net.Sockets.SocketAsyncEventArgs.LastOperation%2A> property will be equal to <xref:System.Net.Sockets.SocketAsyncOperation.None>.</span></span>  
  
-   <span data-ttu-id="ec6bd-133">Il <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags%2A> sarà uguale alla proprietà <xref:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread?displayProperty=nameWithType>, che non specifica alcun flag verrà utilizzato.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-133">The <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags%2A> property will be equal to <xref:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread?displayProperty=nameWithType>, which specifies no flags will be used.</span></span>  
  
-   <span data-ttu-id="ec6bd-134">Il <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags%2A> sarà uguale alla proprietà <xref:System.Net.Sockets.SocketAsyncOperation.None>.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-134">The <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags%2A> property will be equal to <xref:System.Net.Sockets.SocketAsyncOperation.None>.</span></span>  
  
 <span data-ttu-id="ec6bd-135">Il chiamante deve impostare le proprietà appropriate prima di passare l'oggetto al metodo socket asincrono appropriato (xxxAsync).</span><span class="sxs-lookup"><span data-stu-id="ec6bd-135">The caller must set the appropriate properties prior to passing the object to the appropriate asynchronous socket (xxxAsync) method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec6bd-136">Esempio di codice seguente rappresenta una raccolta di riutilizzabile <xref:System.Net.Sockets.SocketAsyncEventArgs> oggetti.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-136">The following code example represents a collection of reusable <xref:System.Net.Sockets.SocketAsyncEventArgs> objects.</span></span>  
  
 [!code-csharp[NCLAsyncSocketServer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLAsyncSocketServer/CS/AsyncSocketServer.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ec6bd-137">La piattaforma non è supportata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-137">The platform is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AcceptSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket AcceptSocket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket AcceptSocket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptSocket As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ AcceptSocket { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptSocket : System.Net.Sockets.Socket with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-138">Ottiene o imposta il socket da utilizzare o il socket creato per accettare una connessione con un metodo socket asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-138">Gets or sets the socket to use or the socket created for accepting a connection with an asynchronous socket method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec6bd-139">Oggetto <see cref="T:System.Net.Sockets.Socket" /> da utilizzare o socket creato per accettare una connessione con un metodo socket asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-139">The <see cref="T:System.Net.Sockets.Socket" /> to use or the socket created for accepting a connection with an asynchronous socket method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-140">Questa proprietà può essere utilizzata per fornire un oggetto già creato <xref:System.Net.Sockets.Socket> che verrà usato per un socket asincrono accettare l'operazione.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-140">This property can be used to provide an already created <xref:System.Net.Sockets.Socket> that will be used for an asynchronous socket accept operation.</span></span> <span data-ttu-id="ec6bd-141">Dopo il completamento dell'operazione di accettazione, è il socket che rappresenta la connessione accettata.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-141">Upon completion of the accept operation, it is the socket representing the accepted connection.</span></span> <span data-ttu-id="ec6bd-142">Se non specificato (impostato su null) prima di chiamare il <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType> metodo, verrà creato automaticamente un nuovo socket e siano accessibili nel callback di completamento con questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-142">If not supplied (set to null) before calling the <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType> method, a new socket will be created automatically and be accessible in the completion callback with this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public byte[] Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Buffer { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : byte[]" Usage="System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-143">Ottiene il buffer di dati da utilizzare con un metodo socket asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-143">Gets the data buffer to use with an asynchronous socket method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec6bd-144">Matrice <see cref="T:System.Byte" /> che rappresenta il buffer di dati da utilizzare con un metodo socket asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-144">A <see cref="T:System.Byte" /> array that represents the data buffer to use with an asynchronous socket method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-145">Questa proprietà ottiene il buffer di dati attualmente associato il <xref:System.Net.Sockets.SocketAsyncEventArgs> istanza.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-145">This property gets the data buffer currently associated with the <xref:System.Net.Sockets.SocketAsyncEventArgs> instance.</span></span> <span data-ttu-id="ec6bd-146">Per impostare il buffer, il <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A> necessario usare il metodo.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-146">To set the buffer, the <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A> method must be used.</span></span>  
  
 <span data-ttu-id="ec6bd-147">Questa proprietà viene utilizzata con il <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>, e <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> metodi.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-147">This property is used with the <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>, and <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="Overload:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer" />
      </Docs>
    </Member>
    <Member MemberName="BufferList">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; BufferList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; BufferList" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferList As IList(Of ArraySegment(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ BufferList { System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ get(); void set(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BufferList : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.BufferList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-148">Ottiene o imposta una matrice di buffer di dati da utilizzare con un metodo socket asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-148">Gets or sets an array of data buffers to use with an asynchronous socket method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec6bd-149">Matrice <see cref="T:System.Collections.IList" /> che rappresenta una matrice di buffer di dati da utilizzare con un metodo socket asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-149">An <see cref="T:System.Collections.IList" /> that represents an array of data buffers to use with an asynchronous socket method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-150">Questa proprietà viene utilizzata con il <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType> e <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType> metodi.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-150">This property is used with the <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="ec6bd-151">Questa proprietà viene utilizzata per fornire più buffer di dati da inviare o per fornire più buffer in cui archiviare i dati ricevuti per un'operazione socket asincrona che possono inviare o ricevere dati.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-151">This property is used to provide multiple buffers of data to be sent or to provide multiple buffers in which to store received data for an asynchronous socket operation that can send or receive data.</span></span> <span data-ttu-id="ec6bd-152">Più buffer utilizzando il <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> proprietà sono supportate per il <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType> e <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType> metodi.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-152">Multiple buffers using the <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> property are supported by the <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="ec6bd-153">Se il <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> proprietà è impostata su un valore diverso da null, il <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> proprietà deve essere null e pertanto ignorata dalle <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType> e <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType> metodi.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-153">If the <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> property is set to a non-null value, the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> property must be null and is ignored by the <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="ec6bd-154">Se il <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> è stata impostata su un valore diverso da null e viene effettuato un tentativo di impostare il <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> proprietà su un valore diverso da null, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-154">If the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> was set to a non-null value and an attempt is made to set the <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> property to a non-null value, an exception is thrown.</span></span>  
  
 <span data-ttu-id="ec6bd-155">Se il <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> proprietà è impostata su un valore diverso da null, il <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType> e <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType> genereranno un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-155">If the <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> property is set to a non-null value, the <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType> methods will throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="ec6bd-156">Il <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> parametro viene ignorato per il <xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType> e <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> metodi.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-156">The <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> parameter is ignored by the <xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ec6bd-157">Esistono buffer ambigui specificati su un'operazione di impostazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-157">There are ambiguous buffers specified on a set operation.</span>
          </span>
          <span data-ttu-id="ec6bd-158">Questa eccezione si verifica se la proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> è stata impostata su un valore non Null e si tenta di impostare la proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> su un valore non Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-158">This exception occurs if the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property has been set to a non-null value and an attempt was made to set the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property to a non-null value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
      </Docs>
    </Member>
    <Member MemberName="BytesTransferred">
      <MemberSignature Language="C#" Value="public int BytesTransferred { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesTransferred" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesTransferred As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BytesTransferred { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesTransferred : int" Usage="System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-159">Ottiene il numero di byte trasferiti nell'operazione socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-159">Gets the number of bytes transferred in the socket operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec6bd-160">Oggetto <see cref="T:System.Int32" /> contenente il numero di byte trasferiti nell'operazione socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-160">An <see cref="T:System.Int32" /> that contains the number of bytes transferred in the socket operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-161">Questa proprietà fornisce il numero di byte trasferiti nell'operazione socket asincrona che può ricevere o inviare i dati.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-161">This property provides the number of bytes transferred in an asynchronous socket operation that can receive or send data.</span></span> <span data-ttu-id="ec6bd-162">Se viene restituito zero da un'operazione di lettura, all'estremità remota ha chiuso la connessione.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-162">If zero is returned from a read operation, the remote end has closed the connection.</span></span>  
  
 <span data-ttu-id="ec6bd-163">Questa proprietà è impostata da tutte le operazioni socket asincrone, ad eccezione di <xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ec6bd-163">This property is set by all asynchronous socket operations except the <xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.Sockets.SocketAsyncEventArgs&gt; Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.Sockets.SocketAsyncEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Completed As EventHandler(Of SocketAsyncEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::Sockets::SocketAsyncEventArgs ^&gt; ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : EventHandler&lt;System.Net.Sockets.SocketAsyncEventArgs&gt; " Usage="member this.Completed : System.EventHandler&lt;System.Net.Sockets.SocketAsyncEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.Sockets.SocketAsyncEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-164">Evento utilizzato per completare un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-164">The event used to complete an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-165">Il <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed> eventi fornisce un modo per le applicazioni client completare un'operazione socket asincrona.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-165">The <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed> event provides a way for client applications to complete an asynchronous socket operation.</span></span> <span data-ttu-id="ec6bd-166">Un gestore eventi deve essere collegato all'evento all'interno di un <xref:System.Net.Sockets.SocketAsyncEventArgs> istanza quando viene avviata un'operazione socket asincrona, in caso contrario, l'applicazione non sarà in grado di determinare quando l'operazione viene completata.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-166">An event handler should be attached to the event within a <xref:System.Net.Sockets.SocketAsyncEventArgs> instance when an asynchronous socket operation is initiated, otherwise the application will not be able to determine when the operation completes.</span></span>  
  
 <span data-ttu-id="ec6bd-167">I delegati di callback di completamento fa riferimento il <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed> evento contiene la logica di programma per completare l'elaborazione dell'operazione socket asincrona per il client.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-167">The completion callback delegates referenced by the <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed> event contains program logic to finish processing the asynchronous socket operation for the client.</span></span>  
  
 <span data-ttu-id="ec6bd-168">Quando viene segnalato l'evento, l'applicazione usa il <xref:System.Net.Sockets.SocketAsyncEventArgs> oggetto parametro in modo da ottenere lo stato dell'operazione socket asincrona completata.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-168">When the event is signaled, the application uses the <xref:System.Net.Sockets.SocketAsyncEventArgs> object parameter to obtain the status of the completed asynchronous socket operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectByNameError">
      <MemberSignature Language="C#" Value="public Exception ConnectByNameError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ConnectByNameError" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectByNameError As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ ConnectByNameError { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectByNameError : Exception" Usage="System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-169">Ottiene l'eccezione nel caso di errore di connessione quando viene utilizzato <see cref="T:System.Net.DnsEndPoint" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-169">Gets the exception in the case of a connection failure when a <see cref="T:System.Net.DnsEndPoint" /> was used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec6bd-170">Oggetto <see cref="T:System.Exception" /> che indica la causa dell'errore di connessione quando è stato specificato un oggetto <see cref="T:System.Net.DnsEndPoint" /> per la proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-170">An <see cref="T:System.Exception" /> that indicates the cause of the connection error when a <see cref="T:System.Net.DnsEndPoint" /> was specified for the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-171">In caso di errore di connessione quando un <xref:System.Net.DnsEndPoint> è stato specificato per il <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A> proprietà, il <xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A> proprietà conterrà l'eccezione che indica la causa dell'errore di socket dettagliata.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-171">In the case of a connection failure when a <xref:System.Net.DnsEndPoint> was specified for the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A> property, the <xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A> property will contain the exception that indicates the detailed cause of the socket error.</span></span>  
  
 <span data-ttu-id="ec6bd-172">Quando un <xref:System.Net.IPEndPoint> è stato specificato per il <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A> si verifica un errore di connessione e proprietà, il <xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A> proprietà sarà un `null` riferimento.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-172">When an <xref:System.Net.IPEndPoint> was specified for the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A> property and a connection failure occurs, the <xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A> property will be a `null` reference.</span></span>  
  
 <span data-ttu-id="ec6bd-173">Il <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A> viene sempre impostata nel caso di un errore di connessione.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-173">The <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A> property is always set in the case of a connection failure.</span></span> <span data-ttu-id="ec6bd-174">Il <xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A> proprietà contiene altre informazioni sull'errore se si tratta di un errore durante la connessione a un <xref:System.Net.DnsEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-174">The <xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A> property contains more information about the failure if it was a failure connecting to a <xref:System.Net.DnsEndPoint>.</span></span> <span data-ttu-id="ec6bd-175">Se un'applicazione è interessata solo se l'operazione di connessione ha avuto esito positivo o negativo, quindi l'applicazione deve solo verificare il <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-175">If an application is only interested in whether the connect operation succeeded or failed, then the application only needs to check the <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.Sockets.Socket.ConnectAsync" />
      </Docs>
    </Member>
    <Member MemberName="ConnectSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket ConnectSocket { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket ConnectSocket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectSocket As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ ConnectSocket { System::Net::Sockets::Socket ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectSocket : System.Net.Sockets.Socket" Usage="System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-176">Oggetto <see cref="T:System.Net.Sockets.Socket" /> creato e connesso dopo il completamento del metodo <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-176">The created and connected <see cref="T:System.Net.Sockets.Socket" /> object after successful completion of the <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec6bd-177">Oggetto <see cref="T:System.Net.Sockets.Socket" /> connesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-177">The connected <see cref="T:System.Net.Sockets.Socket" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-178">Dopo il completamento dei <xref:System.Net.Sockets.Socket.ConnectAsync%2A> metodo, questa proprietà contiene appena creato e connesso <xref:System.Net.Sockets.Socket> oggetto.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-178">After successful completion of the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method, this property contains the newly created and connected <xref:System.Net.Sockets.Socket> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.Sockets.Socket.ConnectAsync" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Net.Sockets.SocketAsyncEventArgs.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-179">Ottiene la quantità massima di dati, in byte, da inviare o ricevere in un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-179">Gets the maximum amount of data, in bytes, to send or receive in an asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec6bd-180">Oggetto <see cref="T:System.Int32" /> che contiene la quantità massima di dati, in byte, da inviare o ricevere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-180">An <see cref="T:System.Int32" /> that contains the maximum amount of data, in bytes, to send or receive.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-181">Questa proprietà viene impostata chiamando il <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ec6bd-181">This property is set by calling the <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A> method.</span></span>  
  
 <span data-ttu-id="ec6bd-182">Questa proprietà viene utilizzata con il <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>, e <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> metodi.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-182">This property is used with the <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>, and <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="Overload:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer" />
      </Docs>
    </Member>
    <Member MemberName="DisconnectReuseSocket">
      <MemberSignature Language="C#" Value="public bool DisconnectReuseSocket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisconnectReuseSocket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket" />
      <MemberSignature Language="VB.NET" Value="Public Property DisconnectReuseSocket As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisconnectReuseSocket { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisconnectReuseSocket : bool with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-183">Ottiene o imposta un valore che specifica se il socket può essere riutilizzato dopo un'operazione di disconnessione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-183">Gets or sets a value that specifies if socket can be reused after a disconnect operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec6bd-184">Oggetto <see cref="T:System.Boolean" /> che specifica se il socket può essere riutilizzato dopo un'operazione di disconnessione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-184">A <see cref="T:System.Boolean" /> that specifies if socket can be reused after a disconnect operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-185">Questa proprietà viene usata per modificare il comportamento di <xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ec6bd-185">This property is used to alter the behavior of <xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ec6bd-186">Se true, un socket disconnesso dal <xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType> metodo può essere riutilizzato dopo il completamento nel socket successivi di disconnessione accettare o operazioni di connessione.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-186">If true, a socket disconnected by the <xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType> method can be reused after disconnect completion in subsequent socket accept or connect operations.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="socketAsyncEventArgs.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-187">Rilascia le risorse non gestite utilizzate dall'istanza <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> e facoltativamente elimina anche le risorse gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-187">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> instance and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-188">Questo metodo viene chiamato da parte del pubblico `Dispose()` metodo e <xref:System.Object.Finalize%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ec6bd-188">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="ec6bd-189">`Dispose()` richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-189">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="ec6bd-190"><xref:System.Object.Finalize%2A> richiama `Dispose` con `disposing` impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-190"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="ec6bd-191">Se il parametro `disposing` è `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti a cui la classe <xref:System.Net.Sockets.SocketAsyncEventArgs> fa riferimento.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-191">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.SocketAsyncEventArgs> references.</span></span> <span data-ttu-id="ec6bd-192">Il metodo richiama il metodo `Dispose()` di ciascun oggetto cui viene fatto riferimento.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-192">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec6bd-193">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-193">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ec6bd-194">Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="ec6bd-194">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ec6bd-195">
            <para>
              <see langword="Dispose" /> può essere chiamato più volte da altri oggetti. In caso di override di <see langword="Dispose(Boolean)" />, non fare riferimento a oggetti già eliminati in una chiamata precedente a <see langword="Dispose" />. Per altre informazioni su come implementare <see langword="Dispose(Boolean)" />, vedere [che implementa un Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Per altre informazioni sulle <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, vedere [pulizia backup Resources](~/docs/standard/garbage-collection/unmanaged.md) non gestito e [override del metodo Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-195">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SocketAsyncEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SocketAsyncEventArgs.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SocketAsyncEventArgs ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="socketAsyncEventArgs.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-196">Rilascia le risorse usate dalla classe <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-196">Frees resources used by the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-197">Il <xref:System.Net.Sockets.SocketAsyncEventArgs> classe finalizzatore si chiude il <xref:System.Net.Sockets.SocketAsyncEventArgs> e rilasciare le risorse associate di <xref:System.Net.Sockets.SocketAsyncEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-197">The <xref:System.Net.Sockets.SocketAsyncEventArgs> class finalizer closes the <xref:System.Net.Sockets.SocketAsyncEventArgs> and free resources associated with the <xref:System.Net.Sockets.SocketAsyncEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOperation">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.SocketAsyncOperation LastOperation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.SocketAsyncOperation LastOperation" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastOperation As SocketAsyncOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::SocketAsyncOperation LastOperation { System::Net::Sockets::SocketAsyncOperation get(); };" />
      <MemberSignature Language="F#" Value="member this.LastOperation : System.Net.Sockets.SocketAsyncOperation" Usage="System.Net.Sockets.SocketAsyncEventArgs.LastOperation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketAsyncOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-198">Ottiene il tipo di operazione socket eseguita più di recente con questo oggetto di contesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-198">Gets the type of socket operation most recently performed with this context object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec6bd-199">Istanza di <see cref="T:System.Net.Sockets.SocketAsyncOperation" /> che indica il tipo di operazione socket eseguita più di recente con questo oggetto di contesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-199">A <see cref="T:System.Net.Sockets.SocketAsyncOperation" /> instance that indicates the type of socket operation most recently performed with this context object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-200">Questa proprietà descrive l'operazione socket asincrona è stata completata più di recente usando questo <xref:System.Net.Sockets.SocketAsyncEventArgs> oggetto.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-200">This property describes the asynchronous socket operation that was most recently completed using this <xref:System.Net.Sockets.SocketAsyncEventArgs> object.</span></span> <span data-ttu-id="ec6bd-201">Il valore di questa proprietà sarà <xref:System.Net.Sockets.SocketAsyncOperation.None?displayProperty=nameWithType> fino a quando non la <xref:System.Net.Sockets.SocketAsyncEventArgs> istanza viene usata per avviare un'operazione socket asincrona.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-201">The value of this property will be <xref:System.Net.Sockets.SocketAsyncOperation.None?displayProperty=nameWithType> until the <xref:System.Net.Sockets.SocketAsyncEventArgs> instance is used to begin an asynchronous socket operation.</span></span> <span data-ttu-id="ec6bd-202">Verrà quindi impostata la proprietà al tipo di operazione da eseguire nei metodi che accettano il <xref:System.Net.Sockets.SocketAsyncEventArgs> come parametro.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-202">The property will then be set to the type of operation being performed in the methods that take the <xref:System.Net.Sockets.SocketAsyncEventArgs> as a parameter.</span></span> <span data-ttu-id="ec6bd-203">Questa proprietà semplifica più facilmente utilizzando un delegato di callback di completamento singolo per più tipi di operazioni su socket asincrone.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-203">This property more easily facilitates using a single completion callback delegate for multiple kinds of asynchronous socket operations.</span></span>  
  
 <span data-ttu-id="ec6bd-204">Tale proprietà rimane valida in una <xref:System.Net.Sockets.SocketAsyncEventArgs> istanza finché il <xref:System.Net.Sockets.SocketAsyncEventArgs> istanza viene utilizzata per un'altra operazione socket asincrono (xxxAsync).</span><span class="sxs-lookup"><span data-stu-id="ec6bd-204">This property remains valid in a <xref:System.Net.Sockets.SocketAsyncEventArgs> instance until the <xref:System.Net.Sockets.SocketAsyncEventArgs> instance is used for another asynchronous socket (xxxAsync) operation.</span></span>  
  
 <span data-ttu-id="ec6bd-205">Questa proprietà è impostata per tutti i metodi di socket asincrono (xxxAsync).</span><span class="sxs-lookup"><span data-stu-id="ec6bd-205">This property is set by all asynchronous socket (xxxAsync) methods.</span></span>  
  
 <span data-ttu-id="ec6bd-206">La chiamata di un metodo socket asincrono (xxxAsync) sul <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> classe imposta questo valore della proprietà.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-206">Calling an asynchronous socket method (xxxAsync) on the <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> class sets this property value.</span></span> <span data-ttu-id="ec6bd-207">Questa proprietà è destinata all'utilizzo con il database di completamento SocketAsyncCallback implementato dall'applicazione.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-207">This property is intended for use with the SocketAsyncCallback completion routine implemented by the application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="T:System.Net.Sockets.SocketAsyncOperation" />
      </Docs>
    </Member>
    <Member MemberName="MemoryBuffer">
      <MemberSignature Language="C#" Value="public Memory&lt;byte&gt; MemoryBuffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Memory`1&lt;unsigned int8&gt; MemoryBuffer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.MemoryBuffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryBuffer As Memory(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Memory&lt;System::Byte&gt; MemoryBuffer { Memory&lt;System::Byte&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.MemoryBuffer : Memory&lt;byte&gt;" Usage="System.Net.Sockets.SocketAsyncEventArgs.MemoryBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Memory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int" Usage="System.Net.Sockets.SocketAsyncEventArgs.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-208">Ottiene l'offset, in byte, nel buffer di dati a cui fa riferimento la proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-208">Gets the offset, in bytes, into the data buffer referenced by the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec6bd-209">Oggetto <see cref="T:System.Int32" /> che contiene l'offset, in byte, nel buffer di dati a cui fa riferimento la proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-209">An <see cref="T:System.Int32" /> that contains the offset, in bytes, into the data buffer referenced by the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-210">Questa proprietà descrive l'offset di byte iniziale dei dati nel <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-210">This property describes the starting byte offset of data in the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> property.</span></span> <span data-ttu-id="ec6bd-211">Questo valore viene impostato chiamando il <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ec6bd-211">This value is set by calling the <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A> method.</span></span>  
  
 <span data-ttu-id="ec6bd-212">Questa proprietà non è applicabile per il <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-212">This property does not apply to the <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> property.</span></span>  
  
 <span data-ttu-id="ec6bd-213">Questa proprietà viene utilizzata con il <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>, e <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> metodi.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-213">This property is used with the <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>, and <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
      </Docs>
    </Member>
    <Member MemberName="OnCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnCompleted (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCompleted(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCompleted (e As SocketAsyncEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCompleted(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCompleted : System.Net.Sockets.SocketAsyncEventArgs -&gt; unit&#xA;override this.OnCompleted : System.Net.Sockets.SocketAsyncEventArgs -&gt; unit" Usage="socketAsyncEventArgs.OnCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ec6bd-214">Evento segnalato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-214">The event that is signaled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec6bd-215">Rappresenta un metodo chiamato quando un'operazione asincrona viene completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-215">Represents a method that is called when an asynchronous operation completes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-216">Questo metodo non può essere chiamato dal codice utente.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-216">This method is not callable by user code.</span></span> <span data-ttu-id="ec6bd-217">Questo metodo viene chiamato per gli elementi interni del <xref:System.Net.Sockets.SocketAsyncEventArgs> oggetto una volta completata l'operazione corrente.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-217">This method gets called by the internals of the <xref:System.Net.Sockets.SocketAsyncEventArgs> object when the current operation is complete.</span></span> <span data-ttu-id="ec6bd-218">Questo metodo viene utilizzato con tutti i metodi di socket asincrono (xxxAsync).</span><span class="sxs-lookup"><span data-stu-id="ec6bd-218">This method is used with all asynchronous socket (xxxAsync) methods.</span></span>  
  
 <span data-ttu-id="ec6bd-219">Un'applicazione che crea una classe che eredita da <xref:System.Net.Sockets.SocketAsyncEventArgs> possono eseguire l'override di questo metodo per effettuare l'hook in questa notifica di completamento e pulire le risorse allocate per l'operazione.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-219">An application that creates a class inheriting from <xref:System.Net.Sockets.SocketAsyncEventArgs> can override this method to hook into this completion notification and clean up any resources that it allocated for the operation.</span></span> <span data-ttu-id="ec6bd-220">L'implementazione predefinita genera semplicemente il <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed> evento.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-220">The default implementation just raises the <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed> event.</span></span>  
  
 <span data-ttu-id="ec6bd-221">Questo metodo viene utilizzato per associare un gestore eventi da utilizzare come il callback di completamento per un'operazione socket asincrona successive.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-221">This method is used to hook up an event handler to be used as the completion callback for a subsequent asynchronous socket operation.</span></span> <span data-ttu-id="ec6bd-222">Il chiamante deve implementare almeno un delegato di callback ereditato da questo metodo prima di avviare un'operazione socket asincrona usando uno dei metodi asincrono (xxxAsync) sul <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-222">The caller must implement at least one callback delegate inherited from this method prior to starting an asynchronous socket operation using one of the asynchronous (xxxAsync) methods on the <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="ec6bd-223">Il chiamante <xref:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted%2A> metodo offre un modo per le applicazioni client completare un'operazione socket asincrona.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-223">The caller's <xref:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted%2A> method provides a way for client applications to complete an asynchronous socket operation.</span></span> <span data-ttu-id="ec6bd-224">Quando viene avviata un'operazione socket asincrona, è necessario implementare un delegato di callback.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-224">A callback delegate must be implemented when an asynchronous socket operation is initiated.</span></span> <span data-ttu-id="ec6bd-225">Delegati di callback di completamento ereditata dal <xref:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted%2A> metodo deve contenere la logica di programma per completare l'elaborazione dell'operazione socket asincrona per il client.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-225">The completion callback delegate(s) inherited from the <xref:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted%2A> method must contain program logic to finish processing the asynchronous socket operation for the client.</span></span>  
  
 <span data-ttu-id="ec6bd-226">Quando un'operazione asincrona viene segnalata, l'applicazione usa il <xref:System.Net.Sockets.SocketAsyncEventArgs> oggetto parametro per ottenere lo stato dell'operazione socket asincrona completata.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-226">When an asynchronous operation is signaled, the application uses the <xref:System.Net.Sockets.SocketAsyncEventArgs> object parameter to obtain status of the completed asynchronous socket operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessageFromPacketInfo">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.IPPacketInformation ReceiveMessageFromPacketInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.IPPacketInformation ReceiveMessageFromPacketInfo" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiveMessageFromPacketInfo As IPPacketInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::IPPacketInformation ReceiveMessageFromPacketInfo { System::Net::Sockets::IPPacketInformation get(); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveMessageFromPacketInfo : System.Net.Sockets.IPPacketInformation" Usage="System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.IPPacketInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-227">Ottiene l'indirizzo IP e l'interfaccia di un pacchetto ricevuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-227">Gets the IP address and interface of a received packet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec6bd-228">Istanza di <see cref="T:System.Net.Sockets.IPPacketInformation" /> che contiene l'indirizzo IP di destinazione e l'interfaccia di un pacchetto ricevuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-228">An <see cref="T:System.Net.Sockets.IPPacketInformation" /> instance that contains the destination IP address and interface of a received packet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-229">Questa proprietà fornisce informazioni su un pacchetto ricevuto tramite il <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ec6bd-229">This property provides information about a packet received using the <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ec6bd-230">Questa proprietà viene utilizzata con la <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ec6bd-230">This property is used with the <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.IPAddress" />
        <altmember cref="T:System.Net.Sockets.IPPacketInformation" />
        <altmember cref="P:System.Net.Sockets.IPPacketInformation.Address" />
        <altmember cref="P:System.Net.Sockets.IPPacketInformation.Interface" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RemoteEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.EndPoint RemoteEndPoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.EndPoint RemoteEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public Property RemoteEndPoint As EndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::EndPoint ^ RemoteEndPoint { System::Net::EndPoint ^ get(); void set(System::Net::EndPoint ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RemoteEndPoint : System.Net.EndPoint with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.EndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-231">Ottiene o imposta l'endpoint IP remoto per un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-231">Gets or sets the remote IP endpoint for an asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec6bd-232">Oggetto <see cref="T:System.Net.EndPoint" /> che rappresenta l'endpoint IP remoto per un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-232">An <see cref="T:System.Net.EndPoint" /> that represents the remote IP endpoint for an asynchronous operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-233">Questa proprietà specifica l'endpoint remoto.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-233">This property specifies the remote endpoint.</span></span> <span data-ttu-id="ec6bd-234">Questa proprietà può specificare l'endpoint remoto a cui connettersi utilizzando il <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ec6bd-234">This property can specify the remote endpoint to which to connect using the <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ec6bd-235">Questa proprietà può specificare l'endpoint remoto a cui inviare i dati usando <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ec6bd-235">This property can specify the remote endpoint to which to send data using <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ec6bd-236">Questa proprietà può specificare l'endpoint remoto da cui sono stati ricevuti dati utilizzando il <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType> o <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType> metodi.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-236">This property can specify the remote endpoint from which data was received using the <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType> or <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="ec6bd-237">Questo endpoint remoto specificato da questa proprietà può includere un indirizzo IPv4 o IPv6.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-237">This remote endpoint specified by this property can include an IPv4 or IPv6 address.</span></span>  
  
 <span data-ttu-id="ec6bd-238">Questa proprietà viene utilizzata con il <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>, o <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> metodi.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-238">This property is used with the <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>, or <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.EndPoint" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SendPacketsElements">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.SendPacketsElement[] SendPacketsElements { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.SendPacketsElement[] SendPacketsElements" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      <MemberSignature Language="VB.NET" Value="Public Property SendPacketsElements As SendPacketsElement()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Net::Sockets::SendPacketsElement ^&gt; ^ SendPacketsElements { cli::array &lt;System::Net::Sockets::SendPacketsElement ^&gt; ^ get(); void set(cli::array &lt;System::Net::Sockets::SendPacketsElement ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SendPacketsElements : System.Net.Sockets.SendPacketsElement[] with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SendPacketsElement[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-239">Ottiene o imposta una matrice di buffer da inviare per un'operazione asincrona utilizzata dal metodo <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-239">Gets or sets an array of buffers to be sent for an asynchronous operation used by the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec6bd-240">Matrice di oggetti <see cref="T:System.Net.Sockets.SendPacketsElement" /> che rappresentano una matrice di buffer da inviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-240">An array of <see cref="T:System.Net.Sockets.SendPacketsElement" /> objects that represent an array of buffers to be sent.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-241">La matrice di buffer può rappresentare uno o più file in memoria o un set di buffer di dati di memoria.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-241">The array of buffers can represent a file or files in memory or a set of memory data buffers.</span></span> <span data-ttu-id="ec6bd-242">Questa proprietà viene utilizzata con la <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ec6bd-242">This property is used with the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.SendPacketsElement" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SendPacketsFlags">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.TransmitFileOptions SendPacketsFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.TransmitFileOptions SendPacketsFlags" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property SendPacketsFlags As TransmitFileOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::TransmitFileOptions SendPacketsFlags { System::Net::Sockets::TransmitFileOptions get(); void set(System::Net::Sockets::TransmitFileOptions value); };" />
      <MemberSignature Language="F#" Value="member this.SendPacketsFlags : System.Net.Sockets.TransmitFileOptions with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TransmitFileOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-243">Ottiene o imposta una combinazione bit per bit di valori <see cref="T:System.Net.Sockets.TransmitFileOptions" /> per un'operazione asincrona utilizzata dal metodo <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-243">Gets or sets a bitwise combination of <see cref="T:System.Net.Sockets.TransmitFileOptions" /> values for an asynchronous operation used by the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec6bd-244">Oggetto <see cref="T:System.Net.Sockets.TransmitFileOptions" /> che contiene una combinazione bit per bit di valori utilizzati con un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-244">A <see cref="T:System.Net.Sockets.TransmitFileOptions" /> that contains a bitwise combination of values that are used with an asynchronous operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-245">Questa proprietà specifica la <xref:System.Net.Sockets.TransmitFileOptions> usate dal <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ec6bd-245">This property specifies the <xref:System.Net.Sockets.TransmitFileOptions> that are used by the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="T:System.Net.Sockets.TransmitFileOptions" />
      </Docs>
    </Member>
    <Member MemberName="SendPacketsSendSize">
      <MemberSignature Language="C#" Value="public int SendPacketsSendSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendPacketsSendSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendPacketsSendSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendPacketsSendSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendPacketsSendSize : int with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("unused property")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-246">Ottiene o imposta la dimensione, in byte, del blocco di dati utilizzato nell'operazione di invio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-246">Gets or sets the size, in bytes, of the data block used in the send operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec6bd-247">Oggetto <see cref="T:System.Int32" /> contenente la dimensione, in byte, del blocco di dati utilizzato nell'operazione di invio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-247">An <see cref="T:System.Int32" /> that contains the size, in bytes, of the data block used in the send operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-248">Impostare questa proprietà su zero per consentire il protocollo SSL selezionare una dimensione di trasmissione predefinito.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-248">Set this property to zero to let the sockets layer select a default send size.</span></span> <span data-ttu-id="ec6bd-249">Impostando questa proprietà su 0xFFFFFFFF consente al chiamante di controllare le dimensioni e il contenuto di ogni richiesta di invio, ottenuta tramite il <xref:System.Net.Sockets.SendPacketsElement.EndOfPacket%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-249">Setting this property to 0xFFFFFFFF enables the caller to control the size and content of each send request, achieved by using the <xref:System.Net.Sockets.SendPacketsElement.EndOfPacket%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="ec6bd-250">Questa funzionalità è utile per i protocolli di messaggio che consentono di posizionare le limitazioni alla dimensione delle singole richieste di invio.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-250">This capability is useful for message protocols that place limitations on the size of individual send requests.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.SendPacketsElement.EndOfPacket" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBuffer">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-251">Inizializza il buffer di dati da utilizzare con un metodo socket asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-251">Initializes the data buffer to use with an asynchronous socket method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-252">Questo metodo imposta la <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> proprietà su null e il <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A> e <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A> proprietà su zero.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-252">This method sets the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> property to null and the <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A> and <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A> properties to zero.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBuffer">
      <MemberSignature Language="C#" Value="public void SetBuffer (Memory&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBuffer(valuetype System.Memory`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Memory{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBuffer (buffer As Memory(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBuffer(Memory&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="member this.SetBuffer : Memory&lt;byte&gt; -&gt; unit" Usage="socketAsyncEventArgs.SetBuffer buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBuffer">
      <MemberSignature Language="C#" Value="public void SetBuffer (int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBuffer(int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBuffer (offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBuffer(int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.SetBuffer : int * int -&gt; unit" Usage="socketAsyncEventArgs.SetBuffer (offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="ec6bd-253">Offset, in byte, nel buffer di dati dove viene avviata l'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-253">The offset, in bytes, in the data buffer where the operation starts.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="ec6bd-254">Quantità massima di dati, in byte, da inviare o ricevere nel buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-254">The maximum amount of data, in bytes, to send or receive in the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec6bd-255">Imposta il buffer di dati da utilizzare con un metodo socket asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-255">Sets the data buffer to use with an asynchronous socket method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-256">Il `offset` e `count` parametri non possono essere numeri negativi.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-256">The `offset` and `count` parameters can't be negative numbers.</span></span> <span data-ttu-id="ec6bd-257">La combinazione dei `offset` e `count` parametri devono essere compresa nei limiti della matrice del buffer nel <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-257">The combination of the `offset` and `count` parameters must be in bounds of the buffer array in the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> property.</span></span>  
  
 <span data-ttu-id="ec6bd-258">Questo metodo imposta la <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A> proprietà per il `count` parametro e il <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A> proprietà per il `offset` parametro.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-258">This method sets the <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A> property to the `count` parameter and the <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A> property to the `offset` parameter.</span></span> <span data-ttu-id="ec6bd-259">Se il <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> proprietà è null, questo metodo ignora la `offset` e `count` parametri e set di <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A> e <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A> proprietà su 0.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-259">If the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> property is null, this method ignores the `offset` and `count` parameters and sets the <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A> and <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A> properties to 0.</span></span>  
  
 <span data-ttu-id="ec6bd-260">Questo metodo non modifica il <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-260">This method does not change the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ec6bd-261">Un argomento non è stato compreso nell'intervallo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-261">An argument was out of range.</span>
          </span>
          <span data-ttu-id="ec6bd-262">Questa eccezione si verifica se il parametro <paramref name="offset" /> è minore di zero o maggiore della lunghezza della matrice nella proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-262">This exception occurs if the <paramref name="offset" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property.</span>
          </span>
          <span data-ttu-id="ec6bd-263">Questa eccezione si verifica anche se il parametro <paramref name="count" /> è minore di zero o maggiore della lunghezza della matrice nella proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> meno il parametro <paramref name="offset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-263">This exception also occurs if the <paramref name="count" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property minus the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
      </Docs>
    </Member>
    <Member MemberName="SetBuffer">
      <MemberSignature Language="C#" Value="public void SetBuffer (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBuffer(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBuffer (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBuffer(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.SetBuffer : byte[] * int * int -&gt; unit" Usage="socketAsyncEventArgs.SetBuffer (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="ec6bd-264">Buffer di dati da utilizzare con un metodo socket asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-264">The data buffer to use with an asynchronous socket method.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="ec6bd-265">Offset, in byte, nel buffer di dati dove viene avviata l'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-265">The offset, in bytes, in the data buffer where the operation starts.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="ec6bd-266">Quantità massima di dati, in byte, da inviare o ricevere nel buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-266">The maximum amount of data, in bytes, to send or receive in the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec6bd-267">Imposta il buffer di dati da utilizzare con un metodo socket asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-267">Sets the data buffer to use with an asynchronous socket method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-268">Il `offset` e `count` parametri non possono essere numeri negativi.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-268">The `offset` and `count` parameters can't be negative numbers.</span></span> <span data-ttu-id="ec6bd-269">La combinazione dei `offset` e `count` parametri devono essere compresa nei limiti della matrice di dati nel `buffer` parametro.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-269">The combination of the `offset` and `count` parameters must be in bounds of the data array in the `buffer` parameter.</span></span>  
  
 <span data-ttu-id="ec6bd-270">Questo metodo imposta il [SetBuffer (metodo) (Byte\<xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A > proprietà per il `buffer` parametro, il [SetBuffer (metodo) (Byte\<xref: System.Net.Sockets.SocketAsyncEventArgs.Count%2A > proprietà per il `count` parametro e il [SetBuffer (metodo) (Byte\<xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A > proprietà di `offset` parametro.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-270">This method sets the [SetBuffer Method (Byte\<xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> property to the `buffer` parameter, the [SetBuffer Method (Byte\<xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A> property to the `count` parameter, and the [SetBuffer Method (Byte\<xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A> property to the `offset` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec6bd-271">Esempio di codice seguente crea un solo buffer di grandi dimensioni che possono essere divisi e assegnate a [SetBuffer (metodo) (Byte\<xref:System.Net.Sockets.SocketAsyncEventArgs > gli oggetti da utilizzare con ogni operazione dei / o socket.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-271">The following code example creates a single large buffer which can be divided up and assigned to [SetBuffer Method (Byte\<xref:System.Net.Sockets.SocketAsyncEventArgs> objects for use with each socket I/O operation.</span></span> <span data-ttu-id="ec6bd-272">Ciò consente di riutilizzare facilmente i buffer ed evita la frammentazione della memoria dell'heap.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-272">This enables buffers to be easily reused and guards against fragmenting heap memory.</span></span>  
  
 [!code-csharp[NCLAsyncSocketServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLAsyncSocketServer/CS/AsyncSocketServer.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ec6bd-273">Sono stati specificati buffer ambigui.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-273">There are ambiguous buffers specified.</span>
          </span>
          <span data-ttu-id="ec6bd-274">Questa eccezione si verifica anche se le proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> e <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> non sono null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-274">This exception occurs if the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property is also not null and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property is also not null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ec6bd-275">Un argomento non è stato compreso nell'intervallo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-275">An argument was out of range.</span>
          </span>
          <span data-ttu-id="ec6bd-276">Questa eccezione si verifica se il parametro <paramref name="offset" /> è minore di zero o maggiore della lunghezza della matrice nella proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-276">This exception occurs if the <paramref name="offset" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property.</span>
          </span>
          <span data-ttu-id="ec6bd-277">Questa eccezione si verifica anche se il parametro <paramref name="count" /> è minore di zero o maggiore della lunghezza della matrice nella proprietà <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> meno il parametro <paramref name="offset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-277">This exception also occurs if the <paramref name="count" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property minus the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
      </Docs>
    </Member>
    <Member MemberName="SocketClientAccessPolicyProtocol">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.SocketClientAccessPolicyProtocol SocketClientAccessPolicyProtocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.SocketClientAccessPolicyProtocol SocketClientAccessPolicyProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.SocketClientAccessPolicyProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Property SocketClientAccessPolicyProtocol As SocketClientAccessPolicyProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::SocketClientAccessPolicyProtocol SocketClientAccessPolicyProtocol { System::Net::Sockets::SocketClientAccessPolicyProtocol get(); void set(System::Net::Sockets::SocketClientAccessPolicyProtocol value); };" />
      <MemberSignature Language="F#" Value="member this.SocketClientAccessPolicyProtocol : System.Net.Sockets.SocketClientAccessPolicyProtocol with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.SocketClientAccessPolicyProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketClientAccessPolicyProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-278">Ottiene o imposta il protocollo da usare per scaricare il file dei criteri di accesso client socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-278">Gets or sets the protocol to use to download the socket client access policy file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec6bd-279">Restituisce <see cref="T:System.Net.Sockets.SocketClientAccessPolicyProtocol" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-279">Returns <see cref="T:System.Net.Sockets.SocketClientAccessPolicyProtocol" />.</span>
          </span>
          <span data-ttu-id="ec6bd-280">Protocollo da usare per scaricare il file dei criteri di accesso client socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-280">The protocol to use to download the socket client access policy file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-281">Il <xref:System.Net.Sockets.SocketClientAccessPolicyProtocol> specifica il metodo per scaricare un file di criteri di accesso client.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-281">The <xref:System.Net.Sockets.SocketClientAccessPolicyProtocol> specifies the method to download a client access policy file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SocketError">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.SocketError SocketError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.SocketError SocketError" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError" />
      <MemberSignature Language="VB.NET" Value="Public Property SocketError As SocketError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::SocketError SocketError { System::Net::Sockets::SocketError get(); void set(System::Net::Sockets::SocketError value); };" />
      <MemberSignature Language="F#" Value="member this.SocketError : System.Net.Sockets.SocketError with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.SocketError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketError</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-282">Ottiene o imposta i risultati dell'operazione socket asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-282">Gets or sets the result of the asynchronous socket operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec6bd-283">Oggetto <see cref="T:System.Net.Sockets.SocketError" /> che rappresenta il risultato dell'operazione socket asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-283">A <see cref="T:System.Net.Sockets.SocketError" /> that represents the result of the asynchronous socket operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-284">Questa proprietà fornisce lo stato di completamento di un'operazione socket asincrona.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-284">This property provides the completion status of an asynchronous socket operation.</span></span> <span data-ttu-id="ec6bd-285">Un valore di <xref:System.Net.Sockets.SocketError.Success?displayProperty=nameWithType> indicherà il completamento di un'operazione.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-285">A value of <xref:System.Net.Sockets.SocketError.Success?displayProperty=nameWithType> indicates successful completion of an operation.</span></span> <span data-ttu-id="ec6bd-286">Questa proprietà viene utilizzata principalmente nelle routine del gestore eventi dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-286">This property is primarily used in an application’s event handler routine.</span></span>  
  
 <span data-ttu-id="ec6bd-287">Questa proprietà viene utilizzata con tutti i metodi socket asincrono (xxxAsync).</span><span class="sxs-lookup"><span data-stu-id="ec6bd-287">This property is used with all of the asynchronous socket (xxxAsync) methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="T:System.Net.Sockets.SocketError" />
      </Docs>
    </Member>
    <Member MemberName="SocketFlags">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.SocketFlags SocketFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.SocketFlags SocketFlags" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property SocketFlags As SocketFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::SocketFlags SocketFlags { System::Net::Sockets::SocketFlags get(); void set(System::Net::Sockets::SocketFlags value); };" />
      <MemberSignature Language="F#" Value="member this.SocketFlags : System.Net.Sockets.SocketFlags with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-288">Ottiene i risultati di un'operazione socket asincrona o imposta il comportamento di un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-288">Gets the results of an asynchronous socket operation or sets the behavior of an asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec6bd-289">Oggetto <see cref="T:System.Net.Sockets.SocketFlags" /> che rappresenta i risultati di un'operazione socket asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-289">A <see cref="T:System.Net.Sockets.SocketFlags" /> that represents the results of an asynchronous socket operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-290">La proprietà specifica la combinazione bit per bit di <xref:System.Net.Sockets.SocketFlags?displayProperty=nameWithType> da utilizzare per un'operazione socket asincrona.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-290">The property specifies the bitwise combination of the <xref:System.Net.Sockets.SocketFlags?displayProperty=nameWithType> to be used for an asynchronous socket operation.</span></span>  
  
 <span data-ttu-id="ec6bd-291">Questa proprietà viene utilizzata con il <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>, e <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> metodi.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-291">This property is used with the <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>, and <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="T:System.Net.Sockets.SocketFlags" />
      </Docs>
    </Member>
    <Member MemberName="UserToken">
      <MemberSignature Language="C#" Value="public object UserToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserToken" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      <MemberSignature Language="VB.NET" Value="Public Property UserToken As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserToken { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserToken : obj with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec6bd-292">Ottiene o imposta un oggetto utente o applicazione associato a questa operazione socket asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-292">Gets or sets a user or application object associated with this asynchronous socket operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec6bd-293">Oggetto che rappresenta l'oggetto utente o applicazione associato a questa operazione socket asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec6bd-293">An object that represents the user or application object associated with this asynchronous socket operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec6bd-294">Questa proprietà può essere utilizzata da un'applicazione per associare un oggetto di stato dell'applicazione con il <xref:System.Net.Sockets.SocketAsyncEventArgs> oggetto.</span><span class="sxs-lookup"><span data-stu-id="ec6bd-294">This property can be used by an application to associate an application state object with the <xref:System.Net.Sockets.SocketAsyncEventArgs> object.</span></span> <span data-ttu-id="ec6bd-295">In primo luogo, questa proprietà è un modo per un'applicazione da passare lo stato al gestore eventi dell'applicazione (ad esempio, il metodo di completamento operazione asincrona).</span><span class="sxs-lookup"><span data-stu-id="ec6bd-295">Primarily, this property is a way for an application to pass state to the application’s event handler (for example, the asynchronous operation completion method).</span></span>  
  
 <span data-ttu-id="ec6bd-296">Questa proprietà viene utilizzata con tutti i metodi socket asincrono (xxxAsync).</span><span class="sxs-lookup"><span data-stu-id="ec6bd-296">This property is used with all of the asynchronous socket (xxxAsync) methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
  </Members>
</Type>