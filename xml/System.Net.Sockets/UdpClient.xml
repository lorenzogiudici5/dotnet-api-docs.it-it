<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UdpClient.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56637514a0d67fe6299f5e3d0a20f346399311c43.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6637514a0d67fe6299f5e3d0a20f346399311c43</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Provides User Datagram Protocol (UDP) network services.</source>
          <target state="translated">Fornisce servizi di rete UDP (User Datagram Protocol).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class provides simple methods for sending and receiving connectionless UDP datagrams in blocking synchronous mode.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> classe fornisce metodi semplici per inviare e ricevere datagrammi UDP senza connessione in modalità sincrona di blocco.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Because UDP is a connectionless transport protocol, you do not need to establish a remote host connection prior to sending and receiving data.</source>
          <target state="translated">Poiché UDP è un protocollo senza connessione di trasporto, non è necessario stabilire una connessione all'host remoto prima di inviare e ricevere dati.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>You do, however, have the option of establishing a default remote host in one of the following two ways:</source>
          <target state="translated">Tuttavia, è l'opzione di creazione di un host remoto predefinito in uno dei due modi seguenti:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class using the remote host name and port number as parameters.</source>
          <target state="translated">Creare un'istanza di <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> classe utilizzando il nome host remoto e il numero di porta come parametri.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class and then call the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">Creare un'istanza di <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> classe e quindi chiamare il <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> (metodo).</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>You can use any of the send methods provided in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> to send data to a remote device.</source>
          <target state="translated">È possibile utilizzare uno qualsiasi dei metodi di invio forniti nel <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> per inviare dati a un dispositivo remoto.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method to receive data from remote hosts.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> per ricevere dati da un host remoto.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Do not call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> using a host name or <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> if you have already specified a default remote host.</source>
          <target state="translated">Non chiamare <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> utilizzando un nome host o <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> se è già stato specificato un host remoto predefinito.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>If you do, <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> will throw an exception.</source>
          <target state="translated">In caso contrario, <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> genererà un'eccezione.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> methods also allow you to send and receive multicast datagrams.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> anche i metodi consentono di inviare e ricevere datagrammi multicast.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method to subscribe a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> to a multicast group.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> metodo sottoscrivere un <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> a un gruppo multicast.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method to unsubscribe a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> from a multicast group.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> metodo annullare la sottoscrizione a un <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> da un gruppo multicast.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>The following example establishes a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> connection using the host name www.contoso.com on port 11000.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> connessione utilizzando il nome host www.contoso.com sulla porta 11000.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>A small string message is sent to two separate remote host machines.</source>
          <target state="translated">Un piccolo messaggio stringa viene inviato a due computer host remoto separato.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method blocks execution until a message is received.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> metodo interrompe l'esecuzione fino a quando non viene ricevuto un messaggio.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Using the <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> passed to <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>, the identity of the responding host is revealed.</source>
          <target state="translated">Utilizzando il <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> passato a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>, viene mostrata l'identità dell'host risponde.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>To establish an outgoing connection or accept an incoming request.</source>
          <target state="translated">per stabilire una connessione in uscita o accettare una richiesta in ingresso.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> and allows the underlying service provider to assign the most appropriate local IPv4 address and port number.</source>
          <target state="translated">Questo costruttore crea un nuovo <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> e consente al provider del servizio sottostante assegnare il numero porta e indirizzo IPv4 locale più appropriato.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>If this constructor is used, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</source>
          <target state="translated">Se si utilizza questo costruttore, il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> istanza viene impostata con una famiglia di indirizzi di IPv4 che non può essere modificata o sovrascritto da una chiamata al metodo connect con una destinazione di IPv6.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>This constructor is not suitable for joining a multicast group because it does not perform socket binding.</source>
          <target state="translated">Questo costruttore non è adatto per l'aggiunta di un gruppo multicast perché non è possibile eseguire il binding di socket.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>Also, it works only with IPv4 address types.</source>
          <target state="translated">Inoltre, funziona solo con tipi di indirizzi IPv4.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>The following example demonstrates how to use the default constructor to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare il costruttore predefinito per creare un'istanza di <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>The local port number from which you intend to communicate.</source>
          <target state="translated">Numero di porta locale da cui si desidera comunicare.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class and binds it to the local port number provided.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> e la associa al numero di porta locale fornito.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>This constructor creates an underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> and binds it to the port number from which you intend to communicate.</source>
          <target state="translated">Questo costruttore crea un oggetto sottostante <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> e lo associa al numero di porta da cui si desidera comunicare.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>Use this constructor if you are only interested in setting the local port number.</source>
          <target state="translated">Utilizzare questo costruttore se desidera solo impostando il numero di porta locale.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>The underlying service provider will assign the local IP address.</source>
          <target state="translated">Il provider del servizio sottostante assegnerà l'indirizzo IP locale.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>If you pass 0 to the constructor, the underlying service provider will assign a port number.</source>
          <target state="translated">Se si passa 0 al costruttore, il provider del servizio sottostante assegnerà un numero di porta.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>If this constructor is used, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</source>
          <target state="translated">Se si utilizza questo costruttore, il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> istanza viene impostata con una famiglia di indirizzi di IPv4 che non può essere modificata o sovrascritto da una chiamata al metodo connect con una destinazione di IPv6.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>This constructor works only with IPv4 address types.</source>
          <target state="translated">Questo costruttore funziona solo con tipi di indirizzi IPv4.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>The following example demonstrates using a local port number to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class.</source>
          <target state="translated">Nell'esempio seguente viene illustrato l'utilizzo di un numero di porta locale per creare un'istanza del <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> parameter is greater than <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph>.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="port" /&gt;</ph> è maggiore di <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> o minore di <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that respresents the local endpoint to which you bind the UDP connection.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> che rappresenta l'endpoint locale a cui associare la connessione UDP.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class and binds it to the specified local endpoint.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> e la associa all'endpoint locale specificato.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> and binds it to the <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> specified by the <ph id="ph3">`localEP`</ph> parameter.</source>
          <target state="translated">Questo costruttore crea un nuovo <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> e li associa al <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> specificato per il <ph id="ph3">`localEP`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>Before you call this constructor, you must create an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> using the IP address and port number from which you intend to send and receive data.</source>
          <target state="translated">Prima di chiamare questo costruttore, è necessario creare un <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> utilizzando il numero di porta e indirizzo IP da cui si desidera inviare e ricevere dati.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>You do not need to specify a local IP address and port number for sending and receiving data.</source>
          <target state="translated">Non è necessario specificare un numero di porta e indirizzo IP locale per l'invio e ricezione di dati.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>If you do not, the underlying service provider will assign the most appropriate local IP address and port number.</source>
          <target state="translated">In caso contrario, il provider del servizio sottostante assegnerà il numero porta e indirizzo IP locale più appropriato.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>If this constructor is used, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance is set with the address family specified by the <ph id="ph2">`localEP`</ph> parameter  that cannot be changed or overwritten by a connect method call with a different address family.</source>
          <target state="translated">Se si utilizza questo costruttore, il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> istanza viene impostata con la famiglia di indirizzi specificata per il <ph id="ph2">`localEP`</ph> parametro che non può essere modificata o sovrascritto da una chiamata al metodo connect con una famiglia di indirizzi diverso.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>The following example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class using a local endpoint.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come creare un'istanza di <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> classe utilizzando un endpoint locale.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;paramref name="localEP" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localEP" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> values that specifies the addressing scheme of the socket.</source>
          <target state="translated">Uno dei valori <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> mediante il quale viene specificato lo schema di indirizzamento del socket.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">`family`</ph> parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</source>
          <target state="translated">Il <ph id="ph1">`family`</ph> parametro determina se il listener utilizza un indirizzo IP versione 4 (IPv4) o una IP versione 6 (IPv6) indirizzo.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>To use an IPv4 address, pass the <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetwork&gt;</ph> value.</source>
          <target state="translated">Per utilizzare un indirizzo IPv4, passare il <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetwork&gt;</ph> valore.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>To use an IPv6 address, pass the <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetworkV6&gt;</ph> value.</source>
          <target state="translated">Per utilizzare un indirizzo IPv6, passare il <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetworkV6&gt;</ph> valore.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>Passing any other value will cause the method to throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Il passaggio di qualsiasi altro valore causerà il metodo generare un <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>If this constructor is used, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance is set with the address family specified by the <ph id="ph2">`family`</ph> parameter  that cannot be changed or overwritten by a connect method call with a different address family.</source>
          <target state="translated">Se si utilizza questo costruttore, il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> istanza viene impostata con la famiglia di indirizzi specificata per il <ph id="ph2">`family`</ph> parametro che non può essere modificata o sovrascritto da una chiamata al metodo connect con una famiglia di indirizzi diverso.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph> is not suitable for joining a multicast group because it does not perform socket binding.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph> non è adatto per l'aggiunta di un gruppo multicast perché non è possibile eseguire il binding di socket.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source><ph id="ph1">&lt;paramref name="family" /&gt;</ph> is not <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="family" /&gt;</ph> non è <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> o <ph id="ph3">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>The port on which to listen for incoming connection attempts.</source>
          <target state="translated">Porta su cui attendere i tentativi di connessione in ingresso.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> values that specifies the addressing scheme of the socket.</source>
          <target state="translated">Uno dei valori <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> mediante il quale viene specificato lo schema di indirizzamento del socket.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class and binds it to the local port number provided.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> e la associa al numero di porta locale fornito.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>This constructor creates an underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> and binds it to the port number from which you intend to communicate.</source>
          <target state="translated">Questo costruttore crea un oggetto sottostante <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> e lo associa al numero di porta da cui si desidera comunicare.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">`family`</ph> parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</source>
          <target state="translated">Il <ph id="ph1">`family`</ph> parametro determina se il listener utilizza un indirizzo IP versione 4 (IPv4) o una IP versione 6 (IPv6) indirizzo.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>To use an IPv4 address, pass the <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetwork&gt;</ph> value.</source>
          <target state="translated">Per utilizzare un indirizzo IPv4, passare il <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetwork&gt;</ph> valore.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>To use an IPv6 address, pass the <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetworkV6&gt;</ph> value.</source>
          <target state="translated">Per utilizzare un indirizzo IPv6, passare il <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetworkV6&gt;</ph> valore.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>Passing any other value will cause the method to throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Il passaggio di qualsiasi altro valore causerà il metodo generare un <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>If this constructor is used, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance is set with the address family specified by the <ph id="ph2">`family`</ph> parameter  that cannot be changed or overwritten by a connect method call with a different address family.</source>
          <target state="translated">Se si utilizza questo costruttore, il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> istanza viene impostata con la famiglia di indirizzi specificata per il <ph id="ph2">`family`</ph> parametro che non può essere modificata o sovrascritto da una chiamata al metodo connect con una famiglia di indirizzi diverso.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>Once you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, fare riferimento alla documentazione relativa ai codici di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>The following code example shows how to create a UDP client to use in a multicast group.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come creare un client UDP per utilizzare un gruppo multicast.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source><ph id="ph1">&lt;paramref name="family" /&gt;</ph> is not <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="family" /&gt;</ph> non è <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> o <ph id="ph3">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source><ph id="ph1">&lt;paramref name="port" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> è maggiore di <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> o minore di <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>The name of the remote DNS host to which you intend to connect.</source>
          <target state="translated">Nome dell'host remoto DNS a cui si desidera connettersi.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>The remote port number to which you intend to connect.</source>
          <target state="translated">Numero di porta remota a cui si desidera connettersi.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class and establishes a default remote host.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> e stabilisce un host remoto predefinito.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>This constructor initializes a new <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> and establishes a remote host using the <ph id="ph2">`hostname`</ph> and <ph id="ph3">`port`</ph> parameters.</source>
          <target state="translated">Questo costruttore inizializza un nuovo <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> e stabilisce un host remoto utilizzando il <ph id="ph2">`hostname`</ph> e <ph id="ph3">`port`</ph> parametri.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>Establishing a default remote host is optional.</source>
          <target state="translated">La definizione di un host remoto predefinito è facoltativa.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>If you use this constructor, you do not have to specify a remote host in each call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Se si utilizza questo costruttore, non è necessario specificare un host remoto in ogni chiamata al <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>Specifying a default remote host limits you to that host only.</source>
          <target state="translated">Specifica un host remoto predefinito si limita a tale host.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>You can change the default remote host at any time by calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">È possibile modificare l'host remoto predefinito in qualsiasi momento chiamando la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>If you want to specify a remote host in your call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method, do not use this constructor.</source>
          <target state="translated">Se si desidera specificare un host remoto nella chiamata per il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> (metodo), non utilizzare questo costruttore.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>The following example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class using a host name and port number.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come creare un'istanza di <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> classe utilizzando un nome host e il numero di porta.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="port" /&gt;</ph> non è compreso tra <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> e <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Active">
          <source>Gets or sets a value indicating whether a default remote host has been established.</source>
          <target state="translated">Ottiene o imposta un valore che indica se è stato stabilito un host remoto predefinito.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Active">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a connection is active; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se è attiva una connessione; in caso contrario <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Active">
          <source>Classes deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> can use this property to determine if a default remote host has been established.</source>
          <target state="translated">Le classi che derivano da <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> può utilizzare questa proprietà per determinare se è stato stabilito un host remoto predefinito.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Active">
          <source>You can establish a default remote host by using the appropriate constructor or by calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">È possibile stabilire un host remoto predefinito utilizzando il costruttore appropriato o chiamando il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Active">
          <source>If you do establish a default remote host, you cannot specify a remote host in your call to <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>.</source>
          <target state="translated">Se si stabilisce un host remoto predefinito, è possibile specificare un host remoto nella chiamata a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>A Boolean value that specifies whether to enable or disable NAT traversal.</source>
          <target state="translated">Valore booleano che specifica se abilitare o disabilitare l'attraversamento NAT.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>Enables or disables Network Address Translation (NAT) traversal on a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> instance.</source>
          <target state="translated">Abilita o disabilita l'attraversamento NAT (Network Address Translation) in un'istanza di <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A&gt;</ph> method is used to enable or disable NAT traversal for a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A&gt;</ph> consente di abilitare o disabilitare l'attraversamento NAT per un <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> istanza.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</source>
          <target state="translated">È possibile specificare l'attraversamento NAT con Teredo, 6to4 o un tunnel ISATAP.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>When the <ph id="ph1">`allowed`</ph> parameter is false, the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel&gt;</ph> option on the associated socket is set to <ph id="ph3">&lt;xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted&gt;</ph>.</source>
          <target state="translated">Quando il <ph id="ph1">`allowed`</ph> parametro è false, il <ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel&gt;</ph> opzione sul socket associato è impostata su <ph id="ph3">&lt;xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>This explicitly disables NAT traversal for a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance.</source>
          <target state="translated">Disabilita in modo esplicito l'attraversamento NAT per un <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> istanza.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>When the <ph id="ph1">`allowed`</ph> parameter is true, the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel&gt;</ph> option on the associated socket is set to <ph id="ph3">&lt;xref:System.Net.Sockets.IPProtectionLevel.Unrestricted&gt;</ph>.</source>
          <target state="translated">Quando il <ph id="ph1">`allowed`</ph> parametro è true, il <ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel&gt;</ph> opzione sul socket associato è impostata su <ph id="ph3">&lt;xref:System.Net.Sockets.IPProtectionLevel.Unrestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>This may allow NAT traversal for a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> depending on firewall rules in place on the system.</source>
          <target state="translated">Può consentire l'attraversamento NAT per un <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> a seconda delle regole del firewall sul posto del sistema.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>A Teredo address is an IPv6 address with the prefix of 2001::/32.</source>
          <target state="translated">Un indirizzo Teredo è un indirizzo IPv6 con il prefisso 2001::/ / 32.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</source>
          <target state="translated">Gli indirizzi Teredo possono essere restituiti tramite normale risoluzione dei nomi DNS o enumerati come un indirizzo IPv6 assegnato a un'interfaccia locale.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>Gets the amount of data received from the network that is available to read.</source>
          <target state="translated">Ottiene la quantità di dati ricevuti dalla rete disponibili per essere letti.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>The number of bytes of data received from the network.</source>
          <target state="translated">Numero di byte di dati ricevuti dalla rete.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> property is used to determine the amount of data queued in the network buffer for reading.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> proprietà viene utilizzata per determinare la quantità di dati accodati nel buffer di rete per la lettura.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>If data is available, call <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> to get the data.</source>
          <target state="translated">Se sono disponibili i dati, chiamare <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> per ottenere i dati.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>If no data is available, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> property returns 0.</source>
          <target state="translated">Se nessun dato è disponibile, il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> restituirà 0.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>If the remote host shuts down or closes the connection, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> property throws a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Se l'host remoto viene arrestato o chiude la connessione, il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> proprietà genera un <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph3">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept>/ for a detailed description of the error.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico e fare riferimento alla documentazione relativa ai codici di errore dell'API di Windows Sockets versione 2 disponibile in MSDN library al <bpt id="p1">[</bpt> <ph id="ph3">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept>/ per una descrizione dettagliata del errore.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> property.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>An error occurred while attempting to access the socket.</source>
          <target state="translated">Si è verificato un errore durante il tentativo di accesso al socket.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> è stato chiuso.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Delegato <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the receive operation.</source>
          <target state="translated">Oggetto definito dall'utente contenente informazioni sull'operazione di ricezione.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Questo oggetto viene passato al delegato <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>Receives a datagram from a remote host asynchronously.</source>
          <target state="translated">Riceve un datagramma da un host remoto in modalità asincrona.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous receive.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> che fa riferimento alla ricezione asincrona.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginReceive%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndReceive%2A&gt;</ph> method.</source>
          <target state="translated">Asincrona <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginReceive%2A&gt;</ph> operazione deve essere completata chiamando il <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndReceive%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`requestCallback`</ph> delegate.</source>
          <target state="translated">In genere, il metodo viene richiamato dal <ph id="ph1">`requestCallback`</ph> delegato.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation is complete.</source>
          <target state="translated">Questo metodo non è bloccata fino al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>To block until the operation is complete, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method.</source>
          <target state="translated">Per il blocco fino al completamento dell'operazione, utilizzare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere <bpt id="p1">[</bpt>la chiamata dei metodi sincroni<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginReceive%2A&gt;</ph> to asynchronously receive a server response.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginReceive%2A&gt;</ph> la ricezione asincrona di una risposta del server.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Sends a datagram to a remote host asynchronously.</source>
          <target state="translated">Invia un datagramma a un host remoto in modalità asincrona.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains the data to be sent.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> contenente i dati da inviare.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The number of bytes to send.</source>
          <target state="translated">Numero di byte da inviare.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Delegato <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the send operation.</source>
          <target state="translated">Oggetto definito dall'utente contenente informazioni sull'operazione di invio.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Questo oggetto viene passato al delegato <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>Sends a datagram to a remote host asynchronously.</source>
          <target state="translated">Invia un datagramma a un host remoto in modalità asincrona.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The destination was specified previously by a call to <ph id="ph1">&lt;see cref="Overload:System.Net.Sockets.UdpClient.Connect" /&gt;</ph>.</source>
          <target state="translated">La destinazione è stata specificata precedentemente da una chiamata al metodo <ph id="ph1">&lt;see cref="Overload:System.Net.Sockets.UdpClient.Connect" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous send.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> che fa riferimento all'invio asincrono.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph> method.</source>
          <target state="translated">Asincrona <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> operazione deve essere completata chiamando il <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`requestCallback`</ph> delegate.</source>
          <target state="translated">In genere, il metodo viene richiamato dal <ph id="ph1">`requestCallback`</ph> delegato.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation completes.</source>
          <target state="translated">Questo metodo si blocca fino al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation is complete, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method overloads.</source>
          <target state="translated">Per il blocco fino al completamento dell'operazione, utilizzare uno del <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> overload del metodo.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere <bpt id="p1">[</bpt>la chiamata dei metodi sincroni<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> to asynchronously send a server request.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> inviare in modo asincrono una richiesta al server.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains the data to be sent.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> contenente i dati da inviare.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The number of bytes to send.</source>
          <target state="translated">Numero di byte da inviare.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph> that represents the destination for the data.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph> che rappresenta la destinazione dei dati.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Delegato <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the send operation.</source>
          <target state="translated">Oggetto definito dall'utente contenente informazioni sull'operazione di invio.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Questo oggetto viene passato al delegato <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>Sends a datagram to a destination asynchronously.</source>
          <target state="translated">Invia un datagramma a una destinazione in modalità asincrona.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The destination is specified by a <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph>.</source>
          <target state="translated">La destinazione è specificata da una classe <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous send.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> che fa riferimento all'invio asincrono.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph> method.</source>
          <target state="translated">Asincrona <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> operazione deve essere completata chiamando il <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`requestCallback`</ph> delegate.</source>
          <target state="translated">In genere, il metodo viene richiamato dal <ph id="ph1">`requestCallback`</ph> delegato.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation is complete.</source>
          <target state="translated">Questo metodo non è bloccata fino al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>To block until the operation is complete, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method overloads.</source>
          <target state="translated">Per il blocco fino al completamento dell'operazione, utilizzare uno del <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> overload del metodo.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere <bpt id="p1">[</bpt>la chiamata dei metodi sincroni<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> to asynchronously send a server request.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> inviare in modo asincrono una richiesta al server.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains the data to be sent.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> contenente i dati da inviare.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The number of bytes to send.</source>
          <target state="translated">Numero di byte da inviare.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The destination host.</source>
          <target state="translated">Host di destinazione.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The destination port number.</source>
          <target state="translated">Numero della porta di destinazione.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Delegato <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the send operation.</source>
          <target state="translated">Oggetto definito dall'utente contenente informazioni sull'operazione di invio.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Questo oggetto viene passato al delegato <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>Sends a datagram to a destination asynchronously.</source>
          <target state="translated">Invia un datagramma a una destinazione in modalità asincrona.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The destination is specified by the host name and port number.</source>
          <target state="translated">La destinazione è specificata mediante il nome dell'host e il numero di porta.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous send.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> che fa riferimento all'invio asincrono.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph> method.</source>
          <target state="translated">Asincrona <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> operazione deve essere completata chiamando il <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`requestCallback`</ph> delegate.</source>
          <target state="translated">In genere, il metodo viene richiamato dal <ph id="ph1">`requestCallback`</ph> delegato.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation is complete.</source>
          <target state="translated">Questo metodo non è bloccata fino al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation is complete, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method overloads.</source>
          <target state="translated">Per il blocco fino al completamento dell'operazione, utilizzare uno del <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> overload del metodo.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere <bpt id="p1">[</bpt>la chiamata dei metodi sincroni<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> to asynchronously send a server request.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> inviare in modo asincrono una richiesta al server.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>Gets or sets the underlying network <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Ottiene o imposta l'oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> di rete sottostante.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>The underlying Network <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> di rete sottostante.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> creates a <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> used to send and receive data over a network.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> Crea un <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> utilizzato per inviare e ricevere dati in rete.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>Classes deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> can use this property to get or set this <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">Le classi che derivano da <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> questa proprietà consente di ottenere o impostare questo <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>Use the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returned from <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> if you require access beyond that which <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> provides.</source>
          <target state="translated">Utilizzare sottostante <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> restituito da <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> se è necessario un accesso diverso da quello <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> fornisce.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>You can also use <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> to set the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> to an existing <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">È inoltre possibile utilizzare <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> impostare sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> esistente <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>This is useful if you want to take advantage of the simplicity of <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> using a pre-existing <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">Ciò è utile se si desidera sfruttare la semplicità di <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> utilizzando una già esistente <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> property.</source>
          <target state="translated">Nell'esempio seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>In this example, broadcasting is enabled for the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">In questo esempio, la trasmissione è abilitata per l'oggetto sottostante <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>Closes the UDP connection.</source>
          <target state="translated">Chiude la connessione UDP.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Close%2A&gt;</ph> disables the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> and releases all managed and unmanaged resources associated with the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Close%2A&gt;</ph> Disabilita sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> e rilascia tutte le risorse gestite e non gestite associate di <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>The following example demonstrates closing a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Close%2A&gt;</ph> method.</source>
          <target state="translated">Nell'esempio seguente viene illustrata la chiusura un <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> chiamando il <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Close%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Establishes a default remote host.</source>
          <target state="translated">Stabilisce un host remoto predefinito.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that specifies the network endpoint to which you intend to send data.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> che specifica l'endpoint di rete a cui si intende inviare dati.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Establishes a default remote host using the specified network endpoint.</source>
          <target state="translated">Stabilisce un host remoto predefinito utilizzando l'endpoint di rete specificato.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method establishes a default remote host using the value specified in the <ph id="ph2">`endPoint`</ph> parameter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo stabilisce un host remoto predefinito utilizzando il valore specificato nel <ph id="ph2">`endPoint`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Once established, you do not have to specify a remote host in each call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Una volta stabilita, non è necessario specificare un host remoto in ogni chiamata al <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Establishing a default remote host is optional.</source>
          <target state="translated">La definizione di un host remoto predefinito è facoltativa.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Specifying a default remote host limits you to that host only.</source>
          <target state="translated">Specifica un host remoto predefinito si limita a tale host.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>If you want to send datagrams to a different remote host, you must make another call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method or create another <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> without a default remote host.</source>
          <target state="translated">Se si desidera inviare datagrammi in un altro host remoto, è necessario eseguire un'altra chiamata al <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo o creare un altro <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> senza un host remoto predefinito.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>If you have established a default remote host and you also provide a remote host in your call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method, <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> will throw a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Se è stato stabilito un computer remoto predefinito host e anche specificare un host remoto nella chiamata al <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> metodo <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> genererà un <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph> method, any datagrams that arrive from an address other than the specified default will be discarded.</source>
          <target state="translated">Se si chiama il <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph> (metodo), tutti i datagrammi provenienti da un indirizzo diverso verrà eliminato il valore predefinito specificato.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>You cannot set the default remote host to a broadcast address using this method unless you inherit from <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, use the Client method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Non è possibile impostare l'host remoto predefinito per un indirizzo di broadcast utilizzando questo metodo, a meno che non si eredita da <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, utilizzare il metodo di Client per ottenere l'oggetto sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>e impostare l'opzione socket su <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph> in your call to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">È tuttavia possibile trasmettere i dati per il valore predefinito indirizzo di broadcast, 255.255.255.255, se si specifica <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph> nella chiamata al <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>If your application requires greater control over broadcast addresses, you can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">Se l'applicazione richiede un maggiore controllo sull'indirizzo di broadcast, è inoltre possibile ripristinare l'utilizzo di <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Since the UDP protocol is connectionless, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method does not block.</source>
          <target state="translated">Poiché il protocollo UDP è orientato alla connessione, il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo non blocca.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method if you intend to receive multicasted datagrams.</source>
          <target state="translated">Non chiamare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo se si prevede di ricevere datagrammi multicast.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>The following example uses an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> to establish a default remote host.</source>
          <target state="translated">Nell'esempio seguente viene utilizzato un <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> per stabilire un host remoto predefinito.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;paramref name="endPoint" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="endPoint" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> è chiuso.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the remote host to which you intend to send data.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> dell'host remoto a cui si desidera inviare dati.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The port number to which you intend send data.</source>
          <target state="translated">Numero di porta a cui si intende inviare dati.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Establishes a default remote host using the specified IP address and port number.</source>
          <target state="translated">Stabilisce un host remoto predefinito utilizzando l'indirizzo IP e il numero di porta specificati.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method establishes a default remote host using the values specified in the <ph id="ph2">`addr`</ph> and <ph id="ph3">`port`</ph> parameters.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo stabilisce un host remoto predefinito utilizzando i valori specificati nel <ph id="ph2">`addr`</ph> e <ph id="ph3">`port`</ph> parametri.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Once established, you do not have to specify a remote host in each call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Una volta stabilita, non è necessario specificare un host remoto in ogni chiamata al <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Establishing a default remote host is optional.</source>
          <target state="translated">La definizione di un host remoto predefinito è facoltativa.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Specifying a default remote host limits you to that host only.</source>
          <target state="translated">Specifica un host remoto predefinito si limita a tale host.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If you want to send datagrams to a different remote host, you must make another call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method or create another <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> without a default remote host.</source>
          <target state="translated">Se si desidera inviare datagrammi in un altro host remoto, è necessario eseguire un'altra chiamata al <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo o creare un altro <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> senza un host remoto predefinito.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If you have established a default remote host and you also provide a remote host in your call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method, <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> will throw a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Se è stato stabilito un computer remoto predefinito host e anche specificare un host remoto nella chiamata al <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> metodo <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> genererà un <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph> method, any datagrams that arrive from an address other than the specified default will be discarded.</source>
          <target state="translated">Se si chiama il <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph> (metodo), tutti i datagrammi provenienti da un indirizzo diverso verrà eliminato il valore predefinito specificato.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>You cannot set the default remote host to a broadcast address using this method unless you inherit from <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, use the client method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Non è possibile impostare l'host remoto predefinito per un indirizzo di broadcast utilizzando questo metodo, a meno che non si eredita da <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, utilizzare il metodo di client per ottenere l'oggetto sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>e impostare l'opzione socket su <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph> in your call to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">È tuttavia possibile trasmettere i dati per il valore predefinito indirizzo di broadcast, 255.255.255.255, se si specifica <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph> nella chiamata al <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If your application requires greater control over broadcast addresses, you can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">Se l'applicazione richiede un maggiore controllo sull'indirizzo di broadcast, è inoltre possibile ripristinare l'utilizzo di <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Since the UDP protocol is connectionless, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method does not block.</source>
          <target state="translated">Poiché il protocollo UDP è orientato alla connessione, il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo non blocca.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method if you intend to receive multicasted datagrams.</source>
          <target state="translated">Non chiamare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo se si prevede di ricevere datagrammi multicast.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The following example uses an IP address and port number to connect with a remote host.</source>
          <target state="translated">L'esempio seguente usa un numero di porta e indirizzo IP per connettersi a un host remoto.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> è chiuso.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="addr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="addr" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="port" /&gt;</ph> non è compreso tra <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> e <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>The DNS name of the remote host to which you intend send data.</source>
          <target state="translated">Nome DNS dell'host remoto a cui si desidera inviare dati.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>The port number on the remote host to which you intend to send data.</source>
          <target state="translated">Numero di porta sull'host remoto a cui si desidera inviare dati.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Establishes a default remote host using the specified host name and port number.</source>
          <target state="translated">Stabilisce un host remoto predefinito utilizzando il nome host e il numero di porta specificati.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method establishes a default remote host using the values specified in the <ph id="ph2">`port`</ph> and <ph id="ph3">`hostname`</ph> parameters.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo stabilisce un host remoto predefinito utilizzando i valori specificati nel <ph id="ph2">`port`</ph> e <ph id="ph3">`hostname`</ph> parametri.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Once established, you do not have to specify a remote host in each call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Una volta stabilita, non è necessario specificare un host remoto in ogni chiamata al <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Establishing a default remote host is optional.</source>
          <target state="translated">La definizione di un host remoto predefinito è facoltativa.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Specifying a default remote host limits you to that host only.</source>
          <target state="translated">Specifica un host remoto predefinito si limita a tale host.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>If you want to send datagrams to a different remote host, you must make another call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method or create another <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> without a default remote host.</source>
          <target state="translated">Se si desidera inviare datagrammi in un altro host remoto, è necessario eseguire un'altra chiamata al <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo o creare un altro <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> senza un host remoto predefinito.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>If you have established a default remote host and you also provide a remote host in your call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method, <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> will throw a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Se è stato stabilito un computer remoto predefinito host e anche specificare un host remoto nella chiamata al <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> metodo <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> genererà un <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph> method, any datagrams that arrive from an address other than the specified default will be discarded.</source>
          <target state="translated">Se si chiama il <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph> (metodo), tutti i datagrammi provenienti da un indirizzo diverso verrà eliminato il valore predefinito specificato.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>You cannot set the default remote host to a broadcast address using this method unless you inherit from <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, use the client method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Non è possibile impostare l'host remoto predefinito per un indirizzo di broadcast utilizzando questo metodo, a meno che non si eredita da <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, utilizzare il metodo di client per ottenere l'oggetto sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>e impostare l'opzione socket su <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph> in your call to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">È tuttavia possibile trasmettere i dati per il valore predefinito indirizzo di broadcast, 255.255.255.255, se si specifica <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph> nella chiamata al <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>If your application requires greater control over broadcast addresses, you can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">Se l'applicazione richiede un maggiore controllo sull'indirizzo di broadcast, è inoltre possibile ripristinare l'utilizzo di <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Since the UDP protocol is connectionless, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method does not block.</source>
          <target state="translated">Poiché il protocollo UDP è orientato alla connessione, il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo non blocca.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method if you intend to receive multicasted datagrams.</source>
          <target state="translated">Non chiamare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo se si prevede di ricevere datagrammi multicast.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>The following example uses the host name and port number to connect to a remote host.</source>
          <target state="translated">Nell'esempio seguente il nome host e la porta numero per la connessione a un host remoto.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> è chiuso.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="port" /&gt;</ph> non è compreso tra <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> e <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Dispose">
          <source>Releases the managed and unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</source>
          <target state="translated">Rilascia le risorse gestite e non gestite usate dall'oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per rilasciare sia le risorse gestite sia quelle non gestite; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per rilasciare solo le risorse non gestite.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Rilascia le risorse non gestite usate da <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> e, facoltativamente, le risorse gestite.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Questo metodo viene chiamato dal metodo pubblico <ph id="ph1">`Dispose()`</ph> (metodo) e <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> richiama il metodo protetto <ph id="ph2">`Dispose(Boolean)`</ph> metodo con il <ph id="ph3">`disposing`</ph> parametro impostato su <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> richiama <ph id="ph2">`Dispose`</ph> con <ph id="ph3">`disposing`</ph> impostato su <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> references.</source>
          <target state="translated">Quando il <ph id="ph1">`disposing`</ph> parametro è true, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> riferimenti.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Il metodo richiama il metodo <ph id="ph1">`Dispose()`</ph> di ciascun oggetto cui viene fatto riferimento.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> può essere chiamato più volte da altri oggetti.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Quando si esegue l'override <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> prestare attenzione a non fare riferimento a oggetti che sono stati eliminati in una precedente chiamata a <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su come implementare <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, vedere <bpt id="p1">[</bpt>implementazione di un metodo Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>si esegue l'override del metodo Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> allows Internet Protocol (IP) datagrams to be fragmented.</source>
          <target state="translated">Ottiene o imposta un valore <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> che specifica se il <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> consente la frammentazione dei datagrammi IP (Internet Protocol).</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> allows datagram fragmentation; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> consente la frammentazione dei datagrammi; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>Datagrams require fragmentation when their size exceeds the Maximum Transfer Unit (MTU) of the transmission medium.</source>
          <target state="translated">I datagrammi richiedono la frammentazione quando le dimensioni superano l'unità MTU (Maximum Transfer) del mezzo di trasmissione.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>Datagrams may be fragmented by the sending host or by an intermediate router.</source>
          <target state="translated">Essi possono essere frammentati dall'host di invio o da un router intermedio.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>If a datagram must be fragmented, and the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DontFragment%2A&gt;</ph> option is set, the datagram is discarded, and an Internet Control Message Protocol (ICMP) error message is sent back to the sender of the datagram.</source>
          <target state="translated">Se un datagramma deve essere frammentato e <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DontFragment%2A&gt;</ph> opzione è impostata, il datagramma viene eliminato e viene inviato un messaggio di errore di controllo messaggio protocollo ICMP (Internet) al mittente del datagramma.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DontFragment%2A&gt;</ph> property.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DontFragment%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>This property can be set only for sockets that use the <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> flag or the <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph> flag.</source>
          <target state="translated">Questa proprietà può essere impostata soltanto per i socket con cui viene utilizzato il flag <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> o <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Leaves a multicast group.</source>
          <target state="translated">Esce da un gruppo multicast.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the multicast group to leave.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> del gruppo multicast da cui uscire.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>Leaves a multicast group.</source>
          <target state="translated">Esce da un gruppo multicast.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method withdraws the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> from the multicast group identified by the specified <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> metodo estrae il <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> dal gruppo multicast identificato dall'oggetto specificato <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>After calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method, the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</source>
          <target state="translated">Dopo la chiamata di <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> metodo sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> invia un pacchetto (IGMP (Internet Group Management Protocol) per il router, rimuovendo il router dal gruppo multicast.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>After a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</source>
          <target state="translated">Dopo un <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> viene estratta dal gruppo, non saranno in grado di ricevere datagrammi inviati a tale gruppo.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>The following example demonstrates how to drop a multicast group by providing a multicast address.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come eliminare un gruppo multicast fornendo un indirizzo multicast.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> sottostante è stato chiuso.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>The IP address is not compatible with the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> value that defines the addressing scheme of the socket.</source>
          <target state="translated">L'indirizzo IP non è compatibile con il valore <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> che definisce lo schema di indirizzamento del socket.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the multicast group to leave.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> del gruppo multicast da cui uscire.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The local address of the multicast group to leave.</source>
          <target state="translated">Indirizzo locale del gruppo multicast da cui uscire.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Leaves a multicast group.</source>
          <target state="translated">Esce da un gruppo multicast.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method withdraws the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> from the multicast group identified by the specified <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> metodo estrae il <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> dal gruppo multicast identificato dall'oggetto specificato <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>After calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method, the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</source>
          <target state="translated">Dopo la chiamata di <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> metodo sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> invia un pacchetto (IGMP (Internet Group Management Protocol) per il router, rimuovendo il router dal gruppo multicast.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>After a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</source>
          <target state="translated">Dopo un <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> viene estratta dal gruppo, non saranno in grado di ricevere datagrammi inviati a tale gruppo.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> property to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare il <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> proprietà per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The following code example demonstrates how to drop a multicast group by providing a multicast address.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come eliminare un gruppo multicast fornendo un indirizzo multicast.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> sottostante è stato chiuso.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The IP address is not compatible with the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> value that defines the addressing scheme of the socket.</source>
          <target state="translated">L'indirizzo IP non è compatibile con il valore <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> che definisce lo schema di indirizzamento del socket.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> may send or receive broadcast packets.</source>
          <target state="translated">Ottiene o imposta un valore <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> che specifica se la classe <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> può inviare o ricevere pacchetti broadcast.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> allows broadcast packets; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> consente lo scambio di pacchetti broadcast; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>Broadcasting is limited to a specific subnet.</source>
          <target state="translated">La trasmissione è limitata a una subnet specifica.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>You can broadcast to your local subnet by sending a packet to 255.255.255.255; or, you can use the directed broadcast address, which is the network portion of an Internet Protocol (IP) address with all bits set in the host portion.</source>
          <target state="translated">È possibile trasmettere alla subnet locale mediante l'invio di un pacchetto all'indirizzo 255.255.255.255; In alternativa, è possibile utilizzare l'indirizzo broadcast con riferimento, ovvero la parte di rete di un indirizzo IP (Internet Protocol) con tutti i bit impostati nella sezione host.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>For example, if your IP address is 192.168.1.40 (a Class C address, with the network portion as the first three octets, and the host portion is the last octet), your directed broadcast address is 192.168.1.255.</source>
          <target state="translated">Ad esempio, se l'indirizzo IP è 192.168.1.40 (un indirizzo di classe C, con la parte di rete come i primi tre ottetti e la parte host è l'ultimo ottetto), l'indirizzo di broadcast diretto è 192.168.1.255.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A&gt;</ph> property.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object returned by a call to <ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> restituito da un chiamata a <ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>The specified remote endpoint.</source>
          <target state="translated">Endpoint remoto specificato.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>Ends a pending asynchronous receive.</source>
          <target state="translated">Termina una ricezione asincrona in attesa.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>If successful, an array of bytes that contains datagram data.</source>
          <target state="translated">In caso di esito positivo, matrice di byte che contiene i dati del datagramma.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>This method blocks until the operation is complete.</source>
          <target state="translated">Questo metodo si blocca fino a quando l'operazione è completata.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>To perform this operation synchronously, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method.</source>
          <target state="translated">Per eseguire questa operazione in modo sincrono, utilizzare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> to complete an asynchronous receive of a server response.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> per completare un'operazione di ricezione asincrona di una risposta del server.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not returned by a call to the <ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> non è stato restituito da una chiamata al metodo <ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source><ph id="ph1">&lt;see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /&gt;</ph> was previously called for the asynchronous read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /&gt;</ph> è stato precedentemente chiamato per la lettura asincrona.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>An error occurred when attempting to access the underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Si è verificato un errore durante il tentativo di accesso all'oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> sottostante.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> sottostante è stato chiuso.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object returned by a call to <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> restituito da un chiamata a <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>Ends a pending asynchronous send.</source>
          <target state="translated">Termina un invio asincrono in attesa.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>If successful, the number of bytes sent to the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</source>
          <target state="translated">Se ha esito positivo, numero di byte inviati alla classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>This method blocks until the operation is complete.</source>
          <target state="translated">Questo metodo si blocca fino a quando l'operazione è completata.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>To perform this operation synchronously, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Per eseguire questa operazione in modo sincrono, utilizzare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> to complete an asynchronous send of a server request.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> per completare un'operazione asincrona di invio di una richiesta al server.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not returned by a call to the <ph id="ph2">&lt;see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> non è stato restituito da una chiamata al metodo <ph id="ph2">&lt;see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /&gt;</ph> was previously called for the asynchronous read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /&gt;</ph> è stato precedentemente chiamato per la lettura asincrona.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>An error occurred when attempting to access the underlying socket.</source>
          <target state="translated">Si è verificato un errore durante il tentativo di accesso al socket sottostante.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> sottostante è stato chiuso.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> allows only one client to use a port.</source>
          <target state="translated">Ottiene o imposta un valore <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> che specifica se la classe <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> consente a un unico client di usare una porta.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> allows only one client to use a specific port; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se la classe <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> consente a un solo client di usare una porta specifica; in caso contrario <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <ph id="ph2">&lt;see langword="false" /&gt;</ph> for all other versions.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="true" /&gt;</ph> per Windows Server 2003 e Windows XP Service Pack 2 e versioni successive e <ph id="ph2">&lt;see langword="false" /&gt;</ph> per tutte le altre versioni.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</source>
          <target state="translated">Per impostazione predefinita, più client possono utilizzare una porta specifica. Tuttavia, solo uno dei client possa eseguire operazioni sul traffico di rete inviato alla porta.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph> property to prevent multiple clients from using a specific port.</source>
          <target state="translated">È possibile utilizzare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph> proprietà per impedire che più client utilizzando una porta specifica.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>This property must be set before the underlying socket is bound to a client port.</source>
          <target state="translated">Questa proprietà deve essere impostata prima di socket sottostante è associato a una porta del client.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>If you call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>, the client port is bound as a side effect of the constructor, and you cannot subsequently set the <ph id="ph5">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph> property</source>
          <target state="translated">Se si chiama <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType&gt;</ph>, o <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>, la porta del client viene associata come effetto collaterale del costruttore e successivamente non è possibile impostare il <ph id="ph5">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph> proprietà</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, and gets and sets the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph> property.</source>
          <target state="translated">L'esempio di codice seguente crea un <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>e ottiene e imposta il <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>An error occurred when attempting to access the underlying socket.</source>
          <target state="translated">Si è verificato un errore durante il tentativo di accesso al socket sottostante.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> sottostante è stato chiuso.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> to a multicast group.</source>
          <target state="translated">Aggiunge una classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> a un gruppo multicast.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The multicast <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the group you want to join.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> multicast del gruppo a cui si desidera unirsi.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> to a multicast group.</source>
          <target state="translated">Aggiunge una classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> a un gruppo multicast.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method subscribes the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> to a multicast group using the specified <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> metodo sottoscrive il <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> a un gruppo multicast utilizzando l'oggetto specificato <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>After calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method, the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</source>
          <target state="translated">Dopo la chiamata di <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> metodo sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> invia un pacchetto (IGMP (Internet Group Management Protocol) per il router che richiede l'appartenenza al gruppo multicast.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The multicast address range is 224.0.0.0 to 239.255.255.255.</source>
          <target state="translated">L'intervallo di indirizzi multicast è tra 224.0.0.0 e 239.255.255.255.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Se si specifica un indirizzo esterno all'intervallo o se il router a cui viene effettuata la richiesta non multicast abilitato, <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> genererà un <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Once the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated">Una volta il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> è elencato nel router come membro del gruppo multicast, sarà in grado di ricevere datagrammi multicast inviati all'oggetto specificato <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>You must create the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> using the multicast port number; otherwise, you will not be able to receive multicasted datagrams.</source>
          <target state="translated">È necessario creare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> utilizzando il numero di porta multicast; in caso contrario, non sarà in grado di ricevere datagrammi multicast.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method prior to calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method, or the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method will not work.</source>
          <target state="translated">Non chiamare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo prima di chiamare il <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> metodo, o <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> metodo avrà esito negativo.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>You do not need to belong to a multicast group to send datagrams to a multicast IP address.</source>
          <target state="translated">Non è necessario appartenere a un gruppo multicast per inviare datagrammi a un indirizzo IP multicast.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Before joining a multicast group, make sure the socket is bound to the port or endpoint.</source>
          <target state="translated">Prima di unire un gruppo multicast, assicurarsi che il socket è associato alla porta o l'endpoint.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>You do that by calling one of the constructors that accept a port or an endpoint as a parameter.</source>
          <target state="translated">Tale scopo, è una chiamata a uno dei costruttori che accettano una porta o un endpoint come parametro.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>To stop receiving multicasted datagrams, call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method and provide the <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> of the group from which you would like to withdraw.</source>
          <target state="translated">Per arrestare la ricezione di datagrammi multicast, chiamare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> (metodo) e fornire il <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> del gruppo da cui si desidera ritirare.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>In the IPv6 case, there are several multicast address ranges you can choose from.</source>
          <target state="translated">In caso di IPv6, esistono è possibile scegliere tra diversi intervalli di indirizzi multicast.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Please, refer to the IETF RFC 2375.</source>
          <target state="translated">Consultare la specifica IETF RFC 2375.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>You cannot call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> constructed without a specific local port (that is, using the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph> constructor).</source>
          <target state="translated">Non è possibile chiamare <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> in un <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> creata senza una specifica porta locale (ovvero, che utilizza il <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph> o <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph> costruttore).</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The following code example demonstrates how to join a multicast group by providing a multicast address.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come accedere a un gruppo multicast fornendo un indirizzo multicast.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> sottostante è stato chiuso.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The IP address is not compatible with the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> value that defines the addressing scheme of the socket.</source>
          <target state="translated">L'indirizzo IP non è compatibile con il valore <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> che definisce lo schema di indirizzamento del socket.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>The interface index associated with the local IP address on which to join the multicast group.</source>
          <target state="translated">L'indice dell'interfaccia associato all'indirizzo IP locale a cui unire il gruppo multicast.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>The multicast <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the group you want to join.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> multicast del gruppo a cui si desidera unirsi.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> to a multicast group.</source>
          <target state="translated">Aggiunge una classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> a un gruppo multicast.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>Before joining a multicast group, be sure the socket is bound to the port or endpoint.</source>
          <target state="translated">Prima di unire un gruppo multicast, assicurarsi che il socket è associato alla porta o l'endpoint.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</source>
          <target state="translated">È possibile farlo chiamando uno dei costruttori che accettano una porta o un endpoint come parametro.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>The <ph id="ph1">`infindex`</ph> parameter is used to identify a hardware interface on the same link.</source>
          <target state="translated">Il <ph id="ph1">`infindex`</ph> parametro viene utilizzato per identificare un'interfaccia hardware nello stesso collegamento.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>There are several multicast address ranges to choose from.</source>
          <target state="translated">Esistono più intervalli di indirizzi multicast da selezionare.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>Refer to the IETF RFC 2375.</source>
          <target state="translated">Fare riferimento alla specifica IETF RFC 2375.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>You cannot call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> constructed without a specific local port (that is, using the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph> constructor).</source>
          <target state="translated">Non è possibile chiamare <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> in un <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> creata senza una specifica porta locale (ovvero, che utilizza il <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType&gt;</ph> o <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph> costruttore).</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> sottostante è stato chiuso.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the multicast group to join.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> del gruppo multicast a cui unirsi.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The Time to Live (TTL), measured in router hops.</source>
          <target state="translated">TTL misurato in hop di router.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> to a multicast group with the specified Time to Live (TTL).</source>
          <target state="translated">Aggiunge una classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> a un gruppo multicast con il Time to Live (TTL) specificato.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method subscribes the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> to a multicast group using the specified <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> metodo sottoscrive il <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> a un gruppo multicast utilizzando l'oggetto specificato <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>After calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method, the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</source>
          <target state="translated">Dopo la chiamata di <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> metodo sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> invia un pacchetto (IGMP (Internet Group Management Protocol) per il router che richiede l'appartenenza al gruppo multicast.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The multicast address range is 224.0.0.0 to 239.255.255.255.</source>
          <target state="translated">L'intervallo di indirizzi multicast è tra 224.0.0.0 e 239.255.255.255.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Se si specifica un indirizzo esterno all'intervallo o se il router a cui viene effettuata la richiesta non multicast abilitato, <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> genererà un <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">`timeToLive`</ph> parameter specifies how many router hops will be allowed for a multicasted datagram before being discarded.</source>
          <target state="translated">Il <ph id="ph1">`timeToLive`</ph> parametro specifica il numero di hop router sarà consentito per un datagramma multicast prima di essere eliminato.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Once the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated">Una volta il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> è elencato nel router come membro del gruppo multicast, sarà in grado di ricevere datagrammi multicast inviati all'oggetto specificato <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>You must create the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> using the multicast port number otherwise you will not be able to receive multicasted datagrams.</source>
          <target state="translated">È necessario creare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> utilizzando il numero di porta multicast in caso contrario non sarà in grado di ricevere datagrammi multicast.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method prior to calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method or the receive method will not work.</source>
          <target state="translated">Non chiamare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo prima di chiamare il <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> metodo o il metodo di ricezione non funzionerà.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>You do not need to belong to a multicast group to send datagrams to a multicast IP address.</source>
          <target state="translated">Non è necessario appartenere a un gruppo multicast per inviare datagrammi a un indirizzo IP multicast.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Before joining a multicast group make sure the socket is bound to the port or endpoint.</source>
          <target state="translated">Prima di unire un gruppo multicast assicurarsi che il socket è associato alla porta o l'endpoint.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>You do that by calling one of the constructors that accept as parameter a port or an endpoint.</source>
          <target state="translated">Tale scopo, è una chiamata a uno dei costruttori che accettano come parametro una porta o un endpoint.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>To stop receiving multicasted datagrams, call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method and provide the <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> of the group from which you would like to withdraw.</source>
          <target state="translated">Per arrestare la ricezione di datagrammi multicast, chiamare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> (metodo) e fornire il <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> del gruppo da cui si desidera ritirare.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>You cannot call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> constructed without a specific local port (that is, using the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph> constructor).</source>
          <target state="translated">Non è possibile chiamare <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> in un <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> creata senza una specifica porta locale (ovvero, che utilizza il <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph> o <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph> costruttore).</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The following example demonstrates how to join a multicast group by providing two parameters, a multicast address, and a number that represents the TTL.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come accedere a un gruppo multicast fornendo due parametri, un indirizzo multicast e un numero che rappresenta la durata (TTL).</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The TTL provided is not between 0 and 255</source>
          <target state="translated">Il TTL fornito non è compreso tra 0 e 255</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> sottostante è stato chiuso.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The IP address is not compatible with the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> value that defines the addressing scheme of the socket.</source>
          <target state="translated">L'indirizzo IP non è compatibile con il valore <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> che definisce lo schema di indirizzamento del socket.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>The multicast <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the group you want to join.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> multicast del gruppo a cui si desidera unirsi.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>The local <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> locale.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> to a multicast group.</source>
          <target state="translated">Aggiunge una classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> a un gruppo multicast.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>Before you join a multicast group, be sure that the socket is bound to the port or endpoint.</source>
          <target state="translated">Prima di aggiungere un gruppo multicast, assicurarsi che il socket è associato alla porta o l'endpoint.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</source>
          <target state="translated">È possibile farlo chiamando uno dei costruttori che accettano una porta o un endpoint come parametro.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>There are several multicast address ranges to choose from.</source>
          <target state="translated">Esistono più intervalli di indirizzi multicast da selezionare.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>You can find them in the IETF RFC 2375.</source>
          <target state="translated">È possibile trovarli in specifica IETF RFC 2375.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>You cannot call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> constructed without a specific local port (that is, using the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph> constructor).</source>
          <target state="translated">Non è possibile chiamare <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> in un <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> creata senza una specifica porta locale (ovvero, che utilizza il <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph> o <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph> costruttore).</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> sottostante è stato chiuso.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.MulticastLoopback">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether outgoing multicast packets are delivered to the sending application.</source>
          <target state="translated">Ottiene o imposta un valore <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> che specifica se i pacchetti multicast in uscita devono essere recapitati all'applicazione mittente.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.MulticastLoopback">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> receives outgoing multicast packets; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> riceve pacchetti multicast; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.MulticastLoopback">
          <source>Multicast is a scalable method for many-to-many communication on the Internet.</source>
          <target state="translated">Il multicast è un metodo scalabile per la comunicazione di molti-a-molti su Internet.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.MulticastLoopback">
          <source>If a process subscribes to a multicast address, any packets sent by that process are received by every other process that has subscribed to the multicast address.</source>
          <target state="translated">Se un processo esegue la sottoscrizione a un indirizzo multicast, tutti i pacchetti inviati da quel processo vengono ricevuti da ogni altro processo che ha sottoscritto l'indirizzo multicast.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.MulticastLoopback">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A&gt;</ph> property.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that represents the remote host from which the data was sent.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> che rappresenta l'host remoto dal quale sono stati inviati i dati.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>Returns a UDP datagram that was sent by a remote host.</source>
          <target state="translated">Restituisce un datagramma UDP che era stato inviato da un host remoto.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains datagram data.</source>
          <target state="translated">Matrice di tipo <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> che contiene dati di datagrammi.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method will block until a datagram arrives from a remote host.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> metodo verrà bloccati finché non arriva un datagramma da un host remoto.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>When data is available, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method will read the first enqueued datagram and return the data portion as a byte array.</source>
          <target state="translated">Quando i dati sono disponibili, il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> metodo leggerà il primo datagramma e restituirà la parte di dati come una matrice di byte.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>This method populates the <ph id="ph1">`remoteEP`</ph> parameter with the <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> and port number of the sender.</source>
          <target state="translated">Questo metodo consente di popolare il <ph id="ph1">`remoteEP`</ph> parametro con il <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> e il numero di porta del mittente.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>If you specify a default remote host in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method will accept datagrams from that host only.</source>
          <target state="translated">Se si specifica un host remoto predefinito nel <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> (metodo), il <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> metodo accetterà datagrammi solo da tale host.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>All other datagrams will be discarded.</source>
          <target state="translated">Tutti gli altri datagrammi verranno eliminati.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>If you intend to receive multicasted datagrams, do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method prior to calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method.</source>
          <target state="translated">Se si prevede di ricevere datagrammi multicast, non viene chiamato il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo prima di chiamare il <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> you use to receive datagrams must be created using the multicast port number.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> utilizzata per ricevere datagrammi deve essere creata utilizzando il numero di porta multicast.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method.</source>
          <target state="translated">Nell'esempio seguente viene illustrato il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method blocks execution until it receives a message.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> metodo interrompe l'esecuzione finché riceve un messaggio.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>Using the <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> passed to <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>, the identity of the responding host is revealed.</source>
          <target state="translated">Utilizzando il <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> passato a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>, viene mostrata l'identità dell'host risponde.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> sottostante è stato chiuso.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>Returns a UDP datagram asynchronously that was sent by a remote host.</source>
          <target state="translated">Restituisce in modo asincrono un datagramma UDP inviato da un host remoto.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Oggetto dell'attività che rappresenta l'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>This operation will not block.</source>
          <target state="translated">Questa operazione non verrà bloccata.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; object will complete after the UDP packet has been received.</source>
          <target state="translated">L'oggetto restituito <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; oggetto verrà completato dopo che è stato ricevuto il pacchetto UDP.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>If you specify a default remote host in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method, this method will accept datagrams from that host only.</source>
          <target state="translated">Se si specifica un host remoto predefinito nel <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> (metodo), questo metodo accetterà datagrammi solo da tale host.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>All other datagrams will be discarded.</source>
          <target state="translated">Tutti gli altri datagrammi verranno eliminati.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>If you intend to receive multicasted datagrams, do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method prior to calling this method.</source>
          <target state="translated">Se si prevede di ricevere datagrammi multicast, non viene chiamato il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo prima di chiamare questo metodo.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> you use to receive datagrams must be created using the multicast port number.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> utilizzata per ricevere datagrammi deve essere creata utilizzando il numero di porta multicast.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> sottostante è stato chiuso.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Sends a UDP datagram to a remote host.</source>
          <target state="translated">Invia un datagramma UDP a un host remoto.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send represented as an array of bytes.</source>
          <target state="translated">Matrice di tipo <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> che specifica il datagramma UDP da inviare, rappresentato come una matrice di byte.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">Numero di byte nel datagramma.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>Sends a UDP datagram to a remote host.</source>
          <target state="translated">Invia un datagramma UDP a un host remoto.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>The number of bytes sent.</source>
          <target state="translated">Numero di byte inviati.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>This overload sends datagrams to the remote host established in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method and returns the number of bytes sent.</source>
          <target state="translated">Questo overload invia datagrammi all'host remoto stabilito nel <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo e restituisce il numero di byte inviato.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>If you do not call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> before calling this overload, the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method will throw a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Se non si chiama <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> prima di chiamare questo overload, la <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> metodo genererà un <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>If you want to send datagrams to a different remote host, you must call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method and specify the desired remote host.</source>
          <target state="translated">Se si desidera inviare datagrammi in un altro host remoto, è necessario chiamare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> (metodo) e specificare l'host remoto desiderato.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>Use either of the other <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method overloads to send datagrams to a broadcast address.</source>
          <target state="translated">Utilizzare una delle altre <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> overload del metodo per inviare datagrammi a un indirizzo di broadcast.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Nell'esempio seguente viene illustrato il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>You must establish a default remote host prior to using this overload.</source>
          <target state="translated">È necessario stabilire un host remoto predefinito prima di utilizzare questo overload.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ha già stabilito un host remoto predefinito.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> è chiuso.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send, represented as an array of bytes.</source>
          <target state="translated">Matrice di tipo <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> che specifica il datagramma UDP che si intende inviare rappresentato come una matrice di byte.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">Numero di byte nel datagramma.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that represents the host and port to which to send the datagram.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> che rappresenta l'host e la porta a cui inviare il datagramma.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Sends a UDP datagram to the host at the specified remote endpoint.</source>
          <target state="translated">Invia un datagramma UDP all'host all'endpoint remoto specificato.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>The number of bytes sent.</source>
          <target state="translated">Numero di byte inviati.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method sends datagrams to the specified endpoint and returns the number of bytes successfully sent.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> metodo invia datagrammi all'endpoint specificato e restituisce il numero di byte inviati.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Before calling this overload, you must first create an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> using the IP address and port number of the remote host to which your datagrams will be delivered.</source>
          <target state="translated">Prima di chiamare questo overload, è necessario creare innanzitutto un <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> utilizzando il numero di porta e indirizzo IP dell'host remoto a cui verranno inviati i datagrammi.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <ph id="ph1">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph> for the <ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</source>
          <target state="translated">È possibile inviare datagrammi alla trasmissione predefinito di indirizzi, 255.255.255.255, specificando <ph id="ph1">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph> per il <ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph> proprietà del <ph id="ph3">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>After you have created this <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>, pass it to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method as the <ph id="ph3">`endPoint`</ph> parameter.</source>
          <target state="translated">Dopo aver creato questo <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>, passa al <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> metodo come la <ph id="ph3">`endPoint`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you want to send datagrams to any other broadcast address, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se si desidera inviare datagrammi a qualsiasi altro indirizzo di broadcast, utilizzare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> per ottenere l'oggetto sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>e impostare l'opzione socket su <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>You can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">È inoltre possibile ripristinare l'utilizzo di <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Do not provide an <ph id="ph1">`endPoint`</ph> parameter to this method if you have already established a remote host with the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">Non viene fornito un <ph id="ph1">`endPoint`</ph> parametro a questo metodo se è già stato stabilito un host remoto con il <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you do, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">In caso contrario, il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> metodo genererà un <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Nell'esempio seguente viene illustrato il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>This example uses an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> to specify the target host.</source>
          <target state="translated">Questo esempio viene utilizzato un <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> per specificare l'host di destinazione.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ha già stabilito un host remoto predefinito.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> è chiuso.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send represented as an array of bytes.</source>
          <target state="translated">Matrice di tipo <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> che specifica il datagramma UDP da inviare, rappresentato come una matrice di byte.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">Numero di byte nel datagramma.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The name of the remote host to which you intend to send the datagram.</source>
          <target state="translated">Nome dell'host remoto a cui si vuole inviare il datagramma.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The remote port number with which you intend to communicate.</source>
          <target state="translated">Numero di porta remota con cui si vuole comunicare.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Sends a UDP datagram to a specified port on a specified remote host.</source>
          <target state="translated">Invia un datagramma UDP a una porta specificata in un host remoto specificato.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The number of bytes sent.</source>
          <target state="translated">Numero di byte inviati.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method sends datagrams to the values specified by the <ph id="ph2">`hostname`</ph> and <ph id="ph3">`port`</ph> parameters and returns the number of bytes successfully sent.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> metodo invia datagrammi ai valori specificati per il <ph id="ph2">`hostname`</ph> e <ph id="ph3">`port`</ph> parametri e restituisce il numero di byte inviati.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the <ph id="ph1">`hostname`</ph> parameter value.</source>
          <target state="translated">È possibile inviare datagrammi all'indirizzo di broadcast predefinito specificando "255.255.255.255" per il <ph id="ph1">`hostname`</ph> valore del parametro.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you want to send datagrams to any other broadcast address, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se si desidera inviare datagrammi a qualsiasi altro indirizzo di broadcast, utilizzare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> per ottenere l'oggetto sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>e impostare l'opzione socket su <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>You can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">È inoltre possibile ripristinare l'utilizzo di <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Do not provide a host name or port number to this method if you have already established a remote host with the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">Non specificare un nome host o la porta numero da questo metodo se è già stato stabilito un host remoto con il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you do, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">In caso contrario, il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> metodo genererà un <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Nell'esempio seguente viene illustrato il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>This example uses a host name and a port number to identify the target host.</source>
          <target state="translated">In questo esempio utilizza un nome host e un numero di porta per identificare l'host di destinazione.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ha già stabilito un host remoto predefinito.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> è chiuso.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Sends a UDP datagram asynchronously to a remote host.</source>
          <target state="translated">Invia un datagramma UDP in modo asincrono a un host remoto.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send represented as an array of bytes.</source>
          <target state="translated">Matrice di tipo <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> che specifica il datagramma UDP da inviare, rappresentato come una matrice di byte.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">Numero di byte nel datagramma.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>Sends a UDP datagram asynchronously to a remote host.</source>
          <target state="translated">Invia un datagramma UDP in modo asincrono a un host remoto.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>This overload sends datagrams to the remote host established in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">Questo overload invia datagrammi all'host remoto stabilito nel <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>If you do not call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> before calling this overload, the method will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Se non si chiama <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> prima di chiamare questo overload, il metodo genererà un <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>If you want to send datagrams to a different remote host, you must call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method and specify the desired remote host.</source>
          <target state="translated">Se si desidera inviare datagrammi in un altro host remoto, è necessario chiamare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> (metodo) e specificare l'host remoto desiderato.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>Use either of the other <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.SendAsync%2A&gt;</ph> method overloads to send datagrams to a broadcast address.</source>
          <target state="translated">Utilizzare una delle altre <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.SendAsync%2A&gt;</ph> overload del metodo per inviare datagrammi a un indirizzo di broadcast.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ha già stabilito un host remoto predefinito.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> è chiuso.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send represented as an array of bytes.</source>
          <target state="translated">Matrice di tipo <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> che specifica il datagramma UDP da inviare, rappresentato come una matrice di byte.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">Numero di byte nel datagramma.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that represents the host and port to which to send the datagram.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> che rappresenta l'host e la porta a cui inviare il datagramma.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Sends a UDP datagram asynchronously to a remote host.</source>
          <target state="translated">Invia un datagramma UDP in modo asincrono a un host remoto.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>This method sends datagrams to the specified endpoint.</source>
          <target state="translated">Questo metodo invia datagrammi all'endpoint specificato.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Before calling this overload, you must first create an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> using the IP address and port number of the remote host to which your datagrams will be delivered.</source>
          <target state="translated">Prima di chiamare questo overload, è necessario creare innanzitutto un <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> utilizzando il numero di porta e indirizzo IP dell'host remoto a cui verranno inviati i datagrammi.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <ph id="ph1">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph> for the <ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</source>
          <target state="translated">È possibile inviare datagrammi alla trasmissione predefinito di indirizzi, 255.255.255.255, specificando <ph id="ph1">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph> per il <ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph> proprietà del <ph id="ph3">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>After you have created this <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>, pass it to this method as the <ph id="ph2">`endPoint`</ph> parameter.</source>
          <target state="translated">Dopo aver creato questo <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>, passare a questo metodo come la <ph id="ph2">`endPoint`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you want to send datagrams to any other broadcast address, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se si desidera inviare datagrammi a qualsiasi altro indirizzo di broadcast, utilizzare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> per ottenere l'oggetto sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>e impostare l'opzione socket su <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>You can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">È inoltre possibile ripristinare l'utilizzo di <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Do not provide an <ph id="ph1">`endPoint`</ph> parameter to this method if you have already established a remote host with the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">Non viene fornito un <ph id="ph1">`endPoint`</ph> parametro a questo metodo se è già stato stabilito un host remoto con il <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you do, this method will throw a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">In caso contrario, questo metodo genererà un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ha già stabilito un host remoto predefinito.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> è chiuso.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send represented as an array of bytes.</source>
          <target state="translated">Matrice di tipo <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> che specifica il datagramma UDP da inviare, rappresentato come una matrice di byte.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">Numero di byte nel datagramma.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The name of the remote host to which you intend to send the datagram.</source>
          <target state="translated">Nome dell'host remoto a cui si vuole inviare il datagramma.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The remote port number with which you intend to communicate.</source>
          <target state="translated">Numero di porta remota con cui si vuole comunicare.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Sends a UDP datagram asynchronously to a remote host.</source>
          <target state="translated">Invia un datagramma UDP in modo asincrono a un host remoto.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>This method sends datagrams to the values specified by the <ph id="ph1">`hostname`</ph> and <ph id="ph2">`port`</ph> parameters.</source>
          <target state="translated">Questo metodo invia datagrammi ai valori specificati per il <ph id="ph1">`hostname`</ph> e <ph id="ph2">`port`</ph> parametri.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the <ph id="ph1">`hostname`</ph> parameter value.</source>
          <target state="translated">È possibile inviare datagrammi all'indirizzo di broadcast predefinito specificando "255.255.255.255" per il <ph id="ph1">`hostname`</ph> valore del parametro.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you want to send datagrams to any other broadcast address, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se si desidera inviare datagrammi a qualsiasi altro indirizzo di broadcast, utilizzare il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> per ottenere l'oggetto sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>e impostare l'opzione socket su <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>You can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">È inoltre possibile ripristinare l'utilizzo di <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Do not provide a host name or port number to this method if you have already established a remote host with the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">Non specificare un nome host o la porta numero da questo metodo se è già stato stabilito un host remoto con il <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you do, this method will throw a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">In caso contrario, questo metodo genererà un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ha già stabilito un host remoto predefinito.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> è chiuso.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Ttl">
          <source>Gets or sets a value that specifies the Time to Live (TTL) value of Internet Protocol (IP) packets sent by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</source>
          <target state="translated">Ottiene o imposta un valore che specifica la durata (TTL) dei pacchetti IP inviati dall'oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Ttl">
          <source>The TTL value.</source>
          <target state="translated">La durata (TTL).</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Ttl">
          <source>The TTL value indicates the maximum number of routers a packet can traverse before the router discards the packet and an Internet Control Message Protocol (ICMP) "TTL exceeded" error message is returned to the sender.</source>
          <target state="translated">Il valore di durata (TTL) indica il numero massimo di router, un pacchetto può attraversare prima che il router ignora il pacchetto e un messaggio di protocollo ICMP (Internet Control) "TTL superato" messaggio di errore viene restituito al mittente.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Ttl">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Ttl%2A&gt;</ph> property.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Ttl%2A&gt;</ph> proprietà.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>