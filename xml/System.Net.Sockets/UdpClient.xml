<Type Name="UdpClient" FullName="System.Net.Sockets.UdpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7303a7e93d44ff0dec4634d108595cec87c458e6" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39911638" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UdpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="8267e-101">Fornisce servizi di rete UDP (User Datagram Protocol).</span>
      <span class="sxs-lookup">
        <span data-stu-id="8267e-101">Provides User Datagram Protocol (UDP) network services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-102">Il <xref:System.Net.Sockets.UdpClient> classe fornisce metodi semplici per l'invio e ricezione di datagrammi UDP senza connessione in modalità di blocco sincrono.</span><span class="sxs-lookup"><span data-stu-id="8267e-102">The <xref:System.Net.Sockets.UdpClient> class provides simple methods for sending and receiving connectionless UDP datagrams in blocking synchronous mode.</span></span> <span data-ttu-id="8267e-103">Poiché UDP è un protocollo di trasporto senza connessione, non devi stabilire una connessione all'host remoto prima dell'invio e ricezione di dati.</span><span class="sxs-lookup"><span data-stu-id="8267e-103">Because UDP is a connectionless transport protocol, you do not need to establish a remote host connection prior to sending and receiving data.</span></span> <span data-ttu-id="8267e-104">, Tuttavia, è possibile stabilire un host remoto predefinito in uno dei due modi seguenti:</span><span class="sxs-lookup"><span data-stu-id="8267e-104">You do, however, have the option of establishing a default remote host in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="8267e-105">Creare un'istanza di <xref:System.Net.Sockets.UdpClient> classe usando il nome host remoto e il numero di porta come parametri.</span><span class="sxs-lookup"><span data-stu-id="8267e-105">Create an instance of the <xref:System.Net.Sockets.UdpClient> class using the remote host name and port number as parameters.</span></span>  
  
-   <span data-ttu-id="8267e-106">Creare un'istanza del <xref:System.Net.Sockets.UdpClient> classe e quindi chiamare il <xref:System.Net.Sockets.UdpClient.Connect%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-106">Create an instance of the <xref:System.Net.Sockets.UdpClient> class and then call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span>  
  
 <span data-ttu-id="8267e-107">È possibile usare uno qualsiasi dei metodi di invio forniti nel <xref:System.Net.Sockets.UdpClient> per inviare dati a un dispositivo remoto.</span><span class="sxs-lookup"><span data-stu-id="8267e-107">You can use any of the send methods provided in the <xref:System.Net.Sockets.UdpClient> to send data to a remote device.</span></span> <span data-ttu-id="8267e-108">Usare il <xref:System.Net.Sockets.UdpClient.Receive%2A> metodo per ricevere dati da host remoti.</span><span class="sxs-lookup"><span data-stu-id="8267e-108">Use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method to receive data from remote hosts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-109">Non chiamare <xref:System.Net.Sockets.UdpClient.Send%2A> utilizzando un nome host o <xref:System.Net.IPEndPoint> se è già stato specificato un host remoto predefinito.</span><span class="sxs-lookup"><span data-stu-id="8267e-109">Do not call <xref:System.Net.Sockets.UdpClient.Send%2A> using a host name or <xref:System.Net.IPEndPoint> if you have already specified a default remote host.</span></span> <span data-ttu-id="8267e-110">In caso contrario <xref:System.Net.Sockets.UdpClient> verrà generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="8267e-110">If you do, <xref:System.Net.Sockets.UdpClient> will throw an exception.</span></span>  
  
 <span data-ttu-id="8267e-111"><xref:System.Net.Sockets.UdpClient> i metodi consentono anche di inviare e ricevere datagrammi multicast.</span><span class="sxs-lookup"><span data-stu-id="8267e-111"><xref:System.Net.Sockets.UdpClient> methods also allow you to send and receive multicast datagrams.</span></span> <span data-ttu-id="8267e-112">Usare la <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> metodo sottoscrivere un <xref:System.Net.Sockets.UdpClient> a un gruppo multicast.</span><span class="sxs-lookup"><span data-stu-id="8267e-112">Use the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method to subscribe a <xref:System.Net.Sockets.UdpClient> to a multicast group.</span></span> <span data-ttu-id="8267e-113">Usare la <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> metodo per annullare la sottoscrizione una <xref:System.Net.Sockets.UdpClient> da un gruppo multicast.</span><span class="sxs-lookup"><span data-stu-id="8267e-113">Use the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method to unsubscribe a <xref:System.Net.Sockets.UdpClient> from a multicast group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-114">L'esempio seguente stabilisce un <xref:System.Net.Sockets.UdpClient> connessione usando il nome host www.contoso.com su porte 11000.</span><span class="sxs-lookup"><span data-stu-id="8267e-114">The following example establishes a <xref:System.Net.Sockets.UdpClient> connection using the host name www.contoso.com on port 11000.</span></span> <span data-ttu-id="8267e-115">Un messaggio di stringhe di piccole dimensioni viene inviato a due macchine host remoto separato.</span><span class="sxs-lookup"><span data-stu-id="8267e-115">A small string message is sent to two separate remote host machines.</span></span> <span data-ttu-id="8267e-116">Il <xref:System.Net.Sockets.UdpClient.Receive%2A> metodo blocca l'esecuzione fino a quando non viene ricevuto un messaggio.</span><span class="sxs-lookup"><span data-stu-id="8267e-116">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until a message is received.</span></span> <span data-ttu-id="8267e-117">Usando il <xref:System.Net.IPEndPoint> passato a <xref:System.Net.Sockets.UdpClient.Receive%2A>, viene visualizzato l'identità dell'host ricevente.</span><span class="sxs-lookup"><span data-stu-id="8267e-117">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClientExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClientExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClientExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClientExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClientExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClientExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="8267e-118">Per stabilire una connessione in uscita o accettare una richiesta in ingresso.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8267e-118">To establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8267e-119">Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-119">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8267e-120">Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-120">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-121">Questo costruttore crea un nuovo <xref:System.Net.Sockets.UdpClient> e consente al provider di servizi assegnare il numero porta e indirizzo IPv4 locale più appropriato.</span><span class="sxs-lookup"><span data-stu-id="8267e-121">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and allows the underlying service provider to assign the most appropriate local IPv4 address and port number.</span></span> <span data-ttu-id="8267e-122">Se questo costruttore viene utilizzato, il <xref:System.Net.Sockets.UdpClient> istanza viene impostata con una famiglia di indirizzi di IPv4 che non può essere modificato o sovrascritto da una chiamata al metodo connect con un IPv6 di destinazione.</span><span class="sxs-lookup"><span data-stu-id="8267e-122">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-123">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-123">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8267e-124">Dopo aver ottenuto il codice, è possibile vedere le [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-124">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="8267e-125">Questo costruttore non è adatto per la partecipazione a un gruppo multicast perché non esegue l'associazione del socket.</span><span class="sxs-lookup"><span data-stu-id="8267e-125">This constructor is not suitable for joining a multicast group because it does not perform socket binding.</span></span> <span data-ttu-id="8267e-126">Inoltre, funziona solo con tipi di indirizzi IPv4.</span><span class="sxs-lookup"><span data-stu-id="8267e-126">Also, it works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-127">L'esempio seguente illustra come usare il costruttore predefinito per creare un'istanza di <xref:System.Net.Sockets.UdpClient> classe.</span><span class="sxs-lookup"><span data-stu-id="8267e-127">The following example demonstrates how to use the default constructor to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-128">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-128">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : int -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient port" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="8267e-129">Numero di porta locale da cui si desidera comunicare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-129">The local port number from which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-130">Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.UdpClient" /> e la associa al numero di porta locale fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-130">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-131">Questo costruttore crea un oggetto sottostante <xref:System.Net.Sockets.Socket> e lo associa al numero di porta da cui si vuole comunicare.</span><span class="sxs-lookup"><span data-stu-id="8267e-131">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span> <span data-ttu-id="8267e-132">Utilizzare questo costruttore se è interessati solo impostando il numero di porta locale.</span><span class="sxs-lookup"><span data-stu-id="8267e-132">Use this constructor if you are only interested in setting the local port number.</span></span> <span data-ttu-id="8267e-133">Il provider di servizi sottostanti assegnerà l'indirizzo IP locale.</span><span class="sxs-lookup"><span data-stu-id="8267e-133">The underlying service provider will assign the local IP address.</span></span> <span data-ttu-id="8267e-134">Se 0 viene passato al costruttore, il provider di servizi sottostante verrà assegnato un numero di porta.</span><span class="sxs-lookup"><span data-stu-id="8267e-134">If you pass 0 to the constructor, the underlying service provider will assign a port number.</span></span> <span data-ttu-id="8267e-135">Se questo costruttore viene utilizzato, il <xref:System.Net.Sockets.UdpClient> istanza viene impostata con una famiglia di indirizzi di IPv4 che non può essere modificato o sovrascritto da una chiamata al metodo connect con un IPv6 di destinazione.</span><span class="sxs-lookup"><span data-stu-id="8267e-135">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-136">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-136">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8267e-137">Dopo aver ottenuto il codice, è possibile vedere le [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-137">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="8267e-138">Questo costruttore funziona solo con tipi di indirizzi IPv4.</span><span class="sxs-lookup"><span data-stu-id="8267e-138">This constructor works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-139">Nell'esempio seguente illustra l'uso di un numero di porta locale per creare un'istanza del <xref:System.Net.Sockets.UdpClient> classe.</span><span class="sxs-lookup"><span data-stu-id="8267e-139">The following example demonstrates using a local port number to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8267e-140">Il parametro <paramref name="port" /> è maggiore di <see cref="F:System.Net.IPEndPoint.MaxPort" /> o minore di <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-140">The <paramref name="port" /> parameter is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-141">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-141">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : System.Net.IPEndPoint -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="8267e-142">Classe <see cref="T:System.Net.IPEndPoint" /> che rappresenta l'endpoint locale a cui associare la connessione UDP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-142">An <see cref="T:System.Net.IPEndPoint" /> that respresents the local endpoint to which you bind the UDP connection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-143">Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.UdpClient" /> e la associa all'endpoint locale specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-143">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-144">Questo costruttore crea un nuovo <xref:System.Net.Sockets.UdpClient> e lo associa al <xref:System.Net.IPEndPoint> specificato da di `localEP` parametro.</span><span class="sxs-lookup"><span data-stu-id="8267e-144">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="8267e-145">Prima di chiamare questo costruttore, è necessario creare un <xref:System.Net.IPEndPoint> utilizzando il numero di porta e indirizzo IP da cui si prevede di inviare e ricevere dati.</span><span class="sxs-lookup"><span data-stu-id="8267e-145">Before you call this constructor, you must create an <xref:System.Net.IPEndPoint> using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="8267e-146">Non devi specificare un numero di porta e indirizzo IP locale per l'invio e ricezione di dati.</span><span class="sxs-lookup"><span data-stu-id="8267e-146">You do not need to specify a local IP address and port number for sending and receiving data.</span></span> <span data-ttu-id="8267e-147">In caso contrario, il provider di servizi sottostante verrà assegnato il numero porta e indirizzo IP locale più appropriato.</span><span class="sxs-lookup"><span data-stu-id="8267e-147">If you do not, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="8267e-148">Se questo costruttore viene utilizzato, il <xref:System.Net.Sockets.UdpClient> istanza viene impostata con la famiglia di indirizzi specificata da di `localEP` parametro che non può essere modificato o sovrascritto da una chiamata al metodo connect con una famiglia di indirizzi diversi.</span><span class="sxs-lookup"><span data-stu-id="8267e-148">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `localEP` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-149">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-149">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8267e-150">Dopo aver ottenuto il codice, è possibile vedere le [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-150">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-151">Nell'esempio seguente viene illustrato come creare un'istanza di <xref:System.Net.Sockets.UdpClient> classe utilizzando un endpoint locale.</span><span class="sxs-lookup"><span data-stu-id="8267e-151">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8267e-152">
            <paramref name="localEP" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-152">
              <paramref name="localEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-153">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-153">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient family" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="8267e-154">Uno dei valori <see cref="T:System.Net.Sockets.AddressFamily" /> mediante il quale viene specificato lo schema di indirizzamento del socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-154">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-155">Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-155">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-156">Il `family` parametro determina se il listener Usa un indirizzo IP versione 4 (IPv4) o una IP versione 6 (IPv6) indirizzo.</span><span class="sxs-lookup"><span data-stu-id="8267e-156">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="8267e-157">Per usare un indirizzo IPv4, passare il <xref:System.Net.Sockets.AddressFamily.InterNetwork> valore.</span><span class="sxs-lookup"><span data-stu-id="8267e-157">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="8267e-158">Per usare un indirizzo IPv6, passare il <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> valore.</span><span class="sxs-lookup"><span data-stu-id="8267e-158">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="8267e-159">Il passaggio di qualsiasi altro valore provocherà il metodo generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="8267e-159">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="8267e-160">Se questo costruttore viene utilizzato, il <xref:System.Net.Sockets.UdpClient> istanza viene impostata con la famiglia di indirizzi specificata da di `family` parametro che non può essere modificato o sovrascritto da una chiamata al metodo connect con una famiglia di indirizzi diversi.</span><span class="sxs-lookup"><span data-stu-id="8267e-160">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-161">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-161">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8267e-162">Dopo aver ottenuto il codice, è possibile vedere le [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-162">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="8267e-163">Il <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> non è adatto per la partecipazione a un gruppo multicast perché non esegue l'associazione del socket.</span><span class="sxs-lookup"><span data-stu-id="8267e-163">The <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> is not suitable for joining a multicast group because it does not perform socket binding.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8267e-164">
            <paramref name="family" /> non è <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-164">
              <paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-165">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-165">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port, System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port, valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer, family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port, System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : int * System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient (port, family)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="8267e-166">Porta su cui attendere i tentativi di connessione in ingresso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-166">The port on which to listen for incoming connection attempts.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="8267e-167">Uno dei valori <see cref="T:System.Net.Sockets.AddressFamily" /> mediante il quale viene specificato lo schema di indirizzamento del socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-167">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-168">Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.UdpClient" /> e la associa al numero di porta locale fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-168">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-169">Questo costruttore crea un oggetto sottostante <xref:System.Net.Sockets.Socket> e lo associa al numero di porta da cui si vuole comunicare.</span><span class="sxs-lookup"><span data-stu-id="8267e-169">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span>  
  
 <span data-ttu-id="8267e-170">Il `family` parametro determina se il listener Usa un indirizzo IP versione 4 (IPv4) o una IP versione 6 (IPv6) indirizzo.</span><span class="sxs-lookup"><span data-stu-id="8267e-170">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="8267e-171">Per usare un indirizzo IPv4, passare il <xref:System.Net.Sockets.AddressFamily.InterNetwork> valore.</span><span class="sxs-lookup"><span data-stu-id="8267e-171">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="8267e-172">Per usare un indirizzo IPv6, passare il <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> valore.</span><span class="sxs-lookup"><span data-stu-id="8267e-172">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="8267e-173">Il passaggio di qualsiasi altro valore provocherà il metodo generare un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="8267e-173">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="8267e-174">Se questo costruttore viene utilizzato, il <xref:System.Net.Sockets.UdpClient> istanza viene impostata con la famiglia di indirizzi specificata da di `family` parametro che non può essere modificato o sovrascritto da una chiamata al metodo connect con una famiglia di indirizzi diversi.</span><span class="sxs-lookup"><span data-stu-id="8267e-174">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-175">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-175">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8267e-176">Dopo aver ottenuto il codice, vedere la [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-176">Once you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-177">Esempio di codice seguente viene illustrato come creare un client UDP da usare in un gruppo multicast.</span><span class="sxs-lookup"><span data-stu-id="8267e-177">The following code example shows how to create a UDP client to use in a multicast group.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#3)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8267e-178">
            <paramref name="family" /> non è <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-178">
              <paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8267e-179">
            <paramref name="port" /> è maggiore di <see cref="F:System.Net.IPEndPoint.MaxPort" /> o minore di <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-179">
              <paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-180">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-180">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : string * int -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient (hostname, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="8267e-181">Nome dell'host remoto DNS a cui si desidera connettersi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-181">The name of the remote DNS host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8267e-182">Numero di porta remota a cui si desidera connettersi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-182">The remote port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-183">Inizializza una nuova istanza della classe <see cref="T:System.Net.Sockets.UdpClient" /> e stabilisce un host remoto predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-183">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and establishes a default remote host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-184">Questo costruttore inizializza un nuovo <xref:System.Net.Sockets.UdpClient> e stabilisce un host remoto usando il `hostname` e `port` parametri.</span><span class="sxs-lookup"><span data-stu-id="8267e-184">This constructor initializes a new <xref:System.Net.Sockets.UdpClient> and establishes a remote host using the `hostname` and `port` parameters.</span></span> <span data-ttu-id="8267e-185">La definizione di un host remoto predefinito è facoltativa.</span><span class="sxs-lookup"><span data-stu-id="8267e-185">Establishing a default remote host is optional.</span></span> <span data-ttu-id="8267e-186">Se si utilizza questo costruttore, non è necessario specificare un host remoto in ogni chiamata al <xref:System.Net.Sockets.UdpClient.Send%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-186">If you use this constructor, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="8267e-187">Specifica di un host remoto predefinito è limitato a tale host.</span><span class="sxs-lookup"><span data-stu-id="8267e-187">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="8267e-188">È possibile modificare l'host remoto predefinito in qualsiasi momento chiamando la <xref:System.Net.Sockets.UdpClient.Connect%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-188">You can change the default remote host at any time by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="8267e-189">Se si desidera specificare un host remoto nella chiamata al <xref:System.Net.Sockets.UdpClient.Send%2A> metodo, non utilizzare questo costruttore.</span><span class="sxs-lookup"><span data-stu-id="8267e-189">If you want to specify a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, do not use this constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-190">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-190">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8267e-191">Dopo aver ottenuto il codice, è possibile vedere le [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-191">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-192">Nell'esempio seguente viene illustrato come creare un'istanza di <xref:System.Net.Sockets.UdpClient> classe utilizzando un nome host e il numero di porta.</span><span class="sxs-lookup"><span data-stu-id="8267e-192">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8267e-193">
            <paramref name="hostname" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-193">
              <paramref name="hostname" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8267e-194">Il parametro <paramref name="port" /> non è compreso tra <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-194">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-195">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-195">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool with get, set" Usage="System.Net.Sockets.UdpClient.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8267e-196">Ottiene o imposta un valore che indica se è stato stabilito un host remoto predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-196">Gets or sets a value indicating whether a default remote host has been established.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8267e-197">
            <see langword="true" /> se è attiva una connessione; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-197">
              <see langword="true" /> if a connection is active; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-198">Le classi che derivano da <xref:System.Net.Sockets.UdpClient> può usare questa proprietà per determinare se è stato stabilito un host remoto predefinito.</span><span class="sxs-lookup"><span data-stu-id="8267e-198">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to determine if a default remote host has been established.</span></span> <span data-ttu-id="8267e-199">È possibile stabilire un host remoto predefinito utilizzando il costruttore appropriato o chiamando la <xref:System.Net.Sockets.UdpClient.Connect%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-199">You can establish a default remote host by using the appropriate constructor or by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="8267e-200">Se si stabilisce un host remoto predefinito, è possibile specificare un host remoto nella chiamata a <xref:System.Net.Sockets.UdpClient.Send%2A>.</span><span class="sxs-lookup"><span data-stu-id="8267e-200">If you do establish a default remote host, you cannot specify a remote host in your call to <xref:System.Net.Sockets.UdpClient.Send%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.UdpClient" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      </Docs>
    </Member>
    <Member MemberName="AllowNatTraversal">
      <MemberSignature Language="C#" Value="public void AllowNatTraversal (bool allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AllowNatTraversal(bool allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllowNatTraversal (allowed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllowNatTraversal(bool allowed);" />
      <MemberSignature Language="F#" Value="member this.AllowNatTraversal : bool -&gt; unit" Usage="udpClient.AllowNatTraversal allowed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowed">
          <span data-ttu-id="8267e-201">Valore booleano che specifica se abilitare o disabilitare l'attraversamento NAT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-201">A Boolean value that specifies whether to enable or disable NAT traversal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-202">Abilita o disabilita l'attraversamento NAT (Network Address Translation) in un'istanza di <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-202">Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.UdpClient" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-203">Il <xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A> metodo viene utilizzato per abilitare o disabilitare l'attraversamento di NAT per un <xref:System.Net.Sockets.UdpClient> istanza.</span><span class="sxs-lookup"><span data-stu-id="8267e-203">The <xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A> method is used to enable or disable NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span> <span data-ttu-id="8267e-204">Attraversamento NAT può essere fornito tramite un tunnel ISATAP, 6to4 o Teredo.</span><span class="sxs-lookup"><span data-stu-id="8267e-204">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="8267e-205">Quando la `allowed` parametro è impostato su false, il <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> opzione sul socket associato è impostata su <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span><span class="sxs-lookup"><span data-stu-id="8267e-205">When the `allowed` parameter is false, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span></span> <span data-ttu-id="8267e-206">Ciò disabilita in modo esplicito l'attraversamento di NAT per un <xref:System.Net.Sockets.UdpClient> istanza.</span><span class="sxs-lookup"><span data-stu-id="8267e-206">This explicitly disables NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span>  
  
 <span data-ttu-id="8267e-207">Quando la `allowed` parametro è true, il <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> opzione sul socket associato è impostata su <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span><span class="sxs-lookup"><span data-stu-id="8267e-207">When the `allowed` parameter is true, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="8267e-208">Questo può consentire l'attraversamento di NAT per una <xref:System.Net.Sockets.UdpClient> a seconda delle regole firewall attive sul sistema.</span><span class="sxs-lookup"><span data-stu-id="8267e-208">This may allow NAT traversal for a <xref:System.Net.Sockets.UdpClient> depending on firewall rules in place on the system.</span></span>  
  
 <span data-ttu-id="8267e-209">Un indirizzo di Teredo è un indirizzo IPv6 con il prefisso del 2001,::/ / 32.</span><span class="sxs-lookup"><span data-stu-id="8267e-209">A Teredo address is an IPv6 address with the prefix of 2001::/32.</span></span> <span data-ttu-id="8267e-210">Gli indirizzi Teredo possono essere restituiti attraverso normale risoluzione dei nomi DNS o enumerati come un indirizzo IPv6 assegnato a un'interfaccia locale.</span><span class="sxs-lookup"><span data-stu-id="8267e-210">Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Available : int" Usage="System.Net.Sockets.UdpClient.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8267e-211">Ottiene la quantità di dati ricevuti dalla rete disponibili per essere letti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-211">Gets the amount of data received from the network that is available to read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8267e-212">Numero di byte di dati ricevuti dalla rete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-212">The number of bytes of data received from the network.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-213">Il <xref:System.Net.Sockets.UdpClient.Available%2A> proprietà viene utilizzata per determinare la quantità di dati in coda nel buffer di rete per la lettura.</span><span class="sxs-lookup"><span data-stu-id="8267e-213">The <xref:System.Net.Sockets.UdpClient.Available%2A> property is used to determine the amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="8267e-214">Se sono disponibili dati, chiamare <xref:System.Net.Sockets.NetworkStream.Read%2A> per ottenere i dati.</span><span class="sxs-lookup"><span data-stu-id="8267e-214">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="8267e-215">Se non sono disponibili, dati il <xref:System.Net.Sockets.UdpClient.Available%2A> proprietà restituisce 0.</span><span class="sxs-lookup"><span data-stu-id="8267e-215">If no data is available, the <xref:System.Net.Sockets.UdpClient.Available%2A> property returns 0.</span></span>  
  
 <span data-ttu-id="8267e-216">Se l'host remoto viene arrestato o chiude la connessione, il <xref:System.Net.Sockets.UdpClient.Available%2A> proprietà genera un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8267e-216">If the remote host shuts down or closes the connection, the <xref:System.Net.Sockets.UdpClient.Available%2A> property throws a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-217">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico e fare riferimento alla documentazione relativa ai codici di errore dell'API Windows Sockets versione 2 disponibile in MSDN library all'indirizzo [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)/ per una descrizione dettagliata del errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-217">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)/ for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-218">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Net.Sockets.UdpClient.Available%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="8267e-218">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Available%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-219">Si è verificato un errore durante il tentativo di accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-219">An error occurred while attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8267e-220">L'oggetto <see cref="T:System.Net.Sockets.Socket" /> è stato chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-220">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginReceive (requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestCallback">
          <span data-ttu-id="8267e-221">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-221">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8267e-222">Oggetto definito dall'utente contenente informazioni sull'operazione di ricezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-222">A user-defined object that contains information about the receive operation.</span>
          </span>
          <span data-ttu-id="8267e-223">Questo oggetto viene passato al delegato <c>requestCallback</c> al completamento dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-223">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-224">Riceve un datagramma da un host remoto in modalità asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-224">Receives a datagram from a remote host asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8267e-225">Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla ricezione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-225">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous receive.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-226">Asincrona <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> operazione deve essere completata chiamando il <xref:System.Net.Sockets.UdpClient.EndReceive%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-226">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndReceive%2A> method.</span></span> <span data-ttu-id="8267e-227">In genere, il metodo viene richiamato dal `requestCallback` delegare.</span><span class="sxs-lookup"><span data-stu-id="8267e-227">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="8267e-228">Questo metodo non blocca fino al completamento dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="8267e-228">This method does not block until the operation is complete.</span></span> <span data-ttu-id="8267e-229">Per bloccare fino al completamento dell'operazione, usare il <xref:System.Net.Sockets.UdpClient.Receive%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-229">To block until the operation is complete, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="8267e-230">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="8267e-230">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-231">Il codice seguente viene illustrato come utilizzare <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> ricezione asincrona di una risposta del server.</span><span class="sxs-lookup"><span data-stu-id="8267e-231">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> to asynchronously receive a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSend">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8267e-232">Invia un datagramma a un host remoto in modalità asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-232">Sends a datagram to a remote host asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginSend (datagram, bytes, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="8267e-233">Matrice <see cref="T:System.Byte" /> contenente i dati da inviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-233">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="8267e-234">Numero di byte da inviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-234">The number of bytes to send.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="8267e-235">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-235">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8267e-236">Oggetto definito dall'utente contenente informazioni sull'operazione di invio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-236">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="8267e-237">Questo oggetto viene passato al delegato <c>requestCallback</c> al completamento dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-237">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-238">Invia un datagramma a un host remoto in modalità asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-238">Sends a datagram to a remote host asynchronously.</span>
          </span>
          <span data-ttu-id="8267e-239">La destinazione è stata specificata precedentemente da una chiamata al metodo <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-239">The destination was specified previously by a call to <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8267e-240">Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento all'invio asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-240">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-241">Asincrona <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operazione deve essere completata chiamando il <xref:System.Net.Sockets.UdpClient.EndSend%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-241">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="8267e-242">In genere, il metodo viene richiamato dal `requestCallback` delegare.</span><span class="sxs-lookup"><span data-stu-id="8267e-242">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="8267e-243">Questo metodo non blocca fino al completamento dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="8267e-243">This method does not block until the operation completes.</span></span> <span data-ttu-id="8267e-244">Per bloccare fino al completamento dell'operazione, usare uno del <xref:System.Net.Sockets.UdpClient.Send%2A> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="8267e-244">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8267e-245">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="8267e-245">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-246">Il codice seguente viene illustrato come utilizzare <xref:System.Net.Sockets.UdpClient.BeginSend%2A> per inviare in modo asincrono una richiesta al server.</span><span class="sxs-lookup"><span data-stu-id="8267e-246">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * System.Net.IPEndPoint * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginSend (datagram, bytes, endPoint, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="8267e-247">Matrice <see cref="T:System.Byte" /> contenente i dati da inviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-247">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="8267e-248">Numero di byte da inviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-248">The number of bytes to send.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="8267e-249">Classe <see cref="T:System.Net.EndPoint" /> che rappresenta la destinazione dei dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-249">The <see cref="T:System.Net.EndPoint" /> that represents the destination for the data.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="8267e-250">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-250">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8267e-251">Oggetto definito dall'utente contenente informazioni sull'operazione di invio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-251">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="8267e-252">Questo oggetto viene passato al delegato <c>requestCallback</c> al completamento dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-252">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-253">Invia un datagramma a una destinazione in modalità asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-253">Sends a datagram to a destination asynchronously.</span>
          </span>
          <span data-ttu-id="8267e-254">La destinazione è specificata da una classe <see cref="T:System.Net.EndPoint" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-254">The destination is specified by a <see cref="T:System.Net.EndPoint" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8267e-255">Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento all'invio asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-255">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-256">Asincrona <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operazione deve essere completata chiamando il <xref:System.Net.Sockets.UdpClient.EndSend%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-256">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="8267e-257">In genere, il metodo viene richiamato dal `requestCallback` delegare.</span><span class="sxs-lookup"><span data-stu-id="8267e-257">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="8267e-258">Questo metodo non blocca fino al completamento dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="8267e-258">This method does not block until the operation is complete.</span></span> <span data-ttu-id="8267e-259">Per bloccare fino al completamento dell'operazione, usare uno del <xref:System.Net.Sockets.UdpClient.Send%2A> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="8267e-259">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8267e-260">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="8267e-260">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-261">Il codice seguente viene illustrato come utilizzare <xref:System.Net.Sockets.UdpClient.BeginSend%2A> per inviare in modo asincrono una richiesta al server.</span><span class="sxs-lookup"><span data-stu-id="8267e-261">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, string hostname, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, string hostname, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, hostname As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * string * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginSend (datagram, bytes, hostname, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="8267e-262">Matrice <see cref="T:System.Byte" /> contenente i dati da inviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-262">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="8267e-263">Numero di byte da inviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-263">The number of bytes to send.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="8267e-264">Host di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-264">The destination host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8267e-265">Numero della porta di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-265">The destination port number.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="8267e-266">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-266">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8267e-267">Oggetto definito dall'utente contenente informazioni sull'operazione di invio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-267">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="8267e-268">Questo oggetto viene passato al delegato <c>requestCallback</c> al completamento dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-268">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-269">Invia un datagramma a una destinazione in modalità asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-269">Sends a datagram to a destination asynchronously.</span>
          </span>
          <span data-ttu-id="8267e-270">La destinazione è specificata mediante il nome dell'host e il numero di porta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-270">The destination is specified by the host name and port number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8267e-271">Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento all'invio asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-271">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-272">Asincrona <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operazione deve essere completata chiamando il <xref:System.Net.Sockets.UdpClient.EndSend%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-272">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="8267e-273">In genere, il metodo viene richiamato dal `requestCallback` delegare.</span><span class="sxs-lookup"><span data-stu-id="8267e-273">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="8267e-274">Questo metodo non blocca fino al completamento dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="8267e-274">This method does not block until the operation is complete.</span></span> <span data-ttu-id="8267e-275">Per bloccare fino al completamento dell'operazione, usare uno del <xref:System.Net.Sockets.UdpClient.Send%2A> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="8267e-275">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8267e-276">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="8267e-276">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-277">Il codice seguente viene illustrato come utilizzare <xref:System.Net.Sockets.UdpClient.BeginSend%2A> per inviare in modo asincrono una richiesta al server.</span><span class="sxs-lookup"><span data-stu-id="8267e-277">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Client : System.Net.Sockets.Socket with get, set" Usage="System.Net.Sockets.UdpClient.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8267e-278">Ottiene o imposta l'oggetto <see cref="T:System.Net.Sockets.Socket" /> di rete sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-278">Gets or sets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8267e-279">Oggetto <see cref="T:System.Net.Sockets.Socket" /> di rete sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-279">The underlying Network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-280"><xref:System.Net.Sockets.UdpClient> Crea un <xref:System.Net.Sockets.Socket> usato per inviare e ricevere dati in rete.</span><span class="sxs-lookup"><span data-stu-id="8267e-280"><xref:System.Net.Sockets.UdpClient> creates a <xref:System.Net.Sockets.Socket> used to send and receive data over a network.</span></span> <span data-ttu-id="8267e-281">Le classi che derivano da <xref:System.Net.Sockets.UdpClient> possibile usare questa proprietà da ottenere o impostare questa opzione <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="8267e-281">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to get or set this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="8267e-282">Usare l'oggetto sottostante <xref:System.Net.Sockets.Socket> restituito da <xref:System.Net.Sockets.UdpClient.Client%2A> se è necessario un accesso diverso da quello <xref:System.Net.Sockets.UdpClient> fornisce.</span><span class="sxs-lookup"><span data-stu-id="8267e-282">Use the underlying <xref:System.Net.Sockets.Socket> returned from <xref:System.Net.Sockets.UdpClient.Client%2A> if you require access beyond that which <xref:System.Net.Sockets.UdpClient> provides.</span></span> <span data-ttu-id="8267e-283">È anche possibile usare <xref:System.Net.Sockets.UdpClient.Client%2A> per impostare l'oggetto sottostante <xref:System.Net.Sockets.Socket> esistente <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="8267e-283">You can also use <xref:System.Net.Sockets.UdpClient.Client%2A> to set the underlying <xref:System.Net.Sockets.Socket> to an existing <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="8267e-284">Ciò è utile se si desidera sfruttare la semplicità della <xref:System.Net.Sockets.UdpClient> utilizzando un pre-esistente <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="8267e-284">This is useful if you want to take advantage of the simplicity of <xref:System.Net.Sockets.UdpClient> using a pre-existing <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-285">Nell'esempio seguente viene illustrato l'utilizzo del <xref:System.Net.Sockets.UdpClient.Client%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="8267e-285">The following example demonstrates the use of the <xref:System.Net.Sockets.UdpClient.Client%2A> property.</span></span> <span data-ttu-id="8267e-286">In questo esempio, la trasmissione è abilitata per l'oggetto sottostante <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="8267e-286">In this example, broadcasting is enabled for the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="udpClient.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8267e-287">Chiude la connessione UDP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-287">Closes the UDP connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-288">Il <xref:System.Net.Sockets.UdpClient.Close%2A> Disabilita sottostante <xref:System.Net.Sockets.Socket> e rilascia tutte le risorse gestite sia associate il <xref:System.Net.Sockets.UdpClient>.</span><span class="sxs-lookup"><span data-stu-id="8267e-288">The <xref:System.Net.Sockets.UdpClient.Close%2A> disables the underlying <xref:System.Net.Sockets.Socket> and releases all managed and unmanaged resources associated with the <xref:System.Net.Sockets.UdpClient>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-289">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-289">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8267e-290">Dopo aver ottenuto il codice, è possibile vedere le [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-290">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-291">Nell'esempio seguente viene illustrata la chiusura una <xref:System.Net.Sockets.UdpClient> chiamando il <xref:System.Net.Sockets.UdpClient.Close%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-291">The following example demonstrates closing a <xref:System.Net.Sockets.UdpClient> by calling the <xref:System.Net.Sockets.UdpClient.Close%2A> method.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-292">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-292">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8267e-293">Stabilisce un host remoto predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-293">Establishes a default remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (endPoint As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPEndPoint -&gt; unit" Usage="udpClient.Connect endPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="endPoint">
          <span data-ttu-id="8267e-294">Classe <see cref="T:System.Net.IPEndPoint" /> che specifica l'endpoint di rete a cui si intende inviare dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-294">An <see cref="T:System.Net.IPEndPoint" /> that specifies the network endpoint to which you intend to send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-295">Stabilisce un host remoto predefinito utilizzando l'endpoint di rete specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-295">Establishes a default remote host using the specified network endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-296">Il <xref:System.Net.Sockets.UdpClient.Connect%2A> metodo stabilisce un host remoto predefinito utilizzando il valore specificato nel `endPoint` parametro.</span><span class="sxs-lookup"><span data-stu-id="8267e-296">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the value specified in the `endPoint` parameter.</span></span> <span data-ttu-id="8267e-297">Una volta stabilita, non è necessario specificare un host remoto in ogni chiamata al <xref:System.Net.Sockets.UdpClient.Send%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-297">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="8267e-298">La definizione di un host remoto predefinito è facoltativa.</span><span class="sxs-lookup"><span data-stu-id="8267e-298">Establishing a default remote host is optional.</span></span> <span data-ttu-id="8267e-299">Specifica di un host remoto predefinito è limitato a tale host.</span><span class="sxs-lookup"><span data-stu-id="8267e-299">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="8267e-300">Se si desidera inviare datagrammi da un altro host remoto, è necessario apportare un'altra chiamata ai <xref:System.Net.Sockets.UdpClient.Connect%2A> metodo oppure crearne uno nuovo <xref:System.Net.Sockets.UdpClient> senza un host remoto predefinito.</span><span class="sxs-lookup"><span data-stu-id="8267e-300">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="8267e-301">Se è stato stabilito un computer remoto predefinito host ed è fornire anche un host remoto nella chiamata ai <xref:System.Net.Sockets.UdpClient.Send%2A> metodo <xref:System.Net.Sockets.UdpClient.Send%2A> genererà un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8267e-301">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8267e-302">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-302">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8267e-303">Dopo aver ottenuto il codice, è possibile vedere le [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-303">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="8267e-304">Se si chiama il <xref:System.Net.Sockets.Socket.Connect%2A> (metodo), tutti i datagrammi provenienti da un indirizzo diverso verrà rimosse il valore predefinito specificato.</span><span class="sxs-lookup"><span data-stu-id="8267e-304">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="8267e-305">Non è possibile impostare l'host remoto predefinito utilizzando questo metodo, a meno che non si eredita da un indirizzo di broadcast <xref:System.Net.Sockets.UdpClient>, usare il Client per ottenere l'oggetto sottostante <xref:System.Net.Sockets.Socket>e impostare l'opzione di socket <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8267e-305">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the Client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8267e-306">È tuttavia possibile trasmettere i dati per il valore predefinito di broadcast indirizzo, 255.255.255.255, se si specifica <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> nella chiamata al <xref:System.Net.Sockets.UdpClient.Send%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-306">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="8267e-307">Se l'applicazione richiede un maggiore controllo sull'indirizzo di broadcast, è possibile anche ripristinare l'uso di <xref:System.Net.Sockets.Socket> classe.</span><span class="sxs-lookup"><span data-stu-id="8267e-307">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-308">Poiché il protocollo UDP è orientato alla connessione, il <xref:System.Net.Sockets.UdpClient.Connect%2A> metodo non blocca.</span><span class="sxs-lookup"><span data-stu-id="8267e-308">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="8267e-309">Non chiamare il <xref:System.Net.Sockets.UdpClient.Connect%2A> metodo se si prevede di ricevere datagrammi multicast.</span><span class="sxs-lookup"><span data-stu-id="8267e-309">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-310">L'esempio seguente usa un <xref:System.Net.IPEndPoint> per stabilire un host remoto predefinito.</span><span class="sxs-lookup"><span data-stu-id="8267e-310">The following example uses an <xref:System.Net.IPEndPoint> to establish a default remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-311">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-311">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8267e-312">
            <paramref name="endPoint" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-312">
              <paramref name="endPoint" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8267e-313">
            <see cref="T:System.Net.Sockets.UdpClient" /> è chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-313">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress addr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress addr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (addr As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ addr, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress * int -&gt; unit" Usage="udpClient.Connect (addr, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addr">
          <span data-ttu-id="8267e-314">Classe <see cref="T:System.Net.IPAddress" /> dell'host remoto a cui si desidera inviare dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-314">The <see cref="T:System.Net.IPAddress" /> of the remote host to which you intend to send data.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8267e-315">Numero di porta a cui si intende inviare dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-315">The port number to which you intend send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-316">Stabilisce un host remoto predefinito utilizzando l'indirizzo IP e il numero di porta specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-316">Establishes a default remote host using the specified IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-317">Il <xref:System.Net.Sockets.UdpClient.Connect%2A> metodo stabilisce un host remoto predefinito utilizzando i valori specificati nel `addr` e `port` parametri.</span><span class="sxs-lookup"><span data-stu-id="8267e-317">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `addr` and `port` parameters.</span></span> <span data-ttu-id="8267e-318">Una volta stabilita, non è necessario specificare un host remoto in ogni chiamata al <xref:System.Net.Sockets.UdpClient.Send%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-318">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="8267e-319">La definizione di un host remoto predefinito è facoltativa.</span><span class="sxs-lookup"><span data-stu-id="8267e-319">Establishing a default remote host is optional.</span></span> <span data-ttu-id="8267e-320">Specifica di un host remoto predefinito è limitato a tale host.</span><span class="sxs-lookup"><span data-stu-id="8267e-320">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="8267e-321">Se si desidera inviare datagrammi da un altro host remoto, è necessario apportare un'altra chiamata ai <xref:System.Net.Sockets.UdpClient.Connect%2A> metodo oppure crearne uno nuovo <xref:System.Net.Sockets.UdpClient> senza un host remoto predefinito.</span><span class="sxs-lookup"><span data-stu-id="8267e-321">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="8267e-322">Se è stato stabilito un computer remoto predefinito host ed è fornire anche un host remoto nella chiamata ai <xref:System.Net.Sockets.UdpClient.Send%2A> metodo <xref:System.Net.Sockets.UdpClient.Send%2A> genererà un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8267e-322">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8267e-323">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-323">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8267e-324">Dopo aver ottenuto il codice, è possibile vedere le [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-324">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="8267e-325">Se si chiama il <xref:System.Net.Sockets.Socket.Connect%2A> (metodo), tutti i datagrammi provenienti da un indirizzo diverso verrà rimosse il valore predefinito specificato.</span><span class="sxs-lookup"><span data-stu-id="8267e-325">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="8267e-326">Non è possibile impostare l'host remoto predefinito utilizzando questo metodo, a meno che non si eredita da un indirizzo di broadcast <xref:System.Net.Sockets.UdpClient>, usare il client per ottenere l'oggetto sottostante <xref:System.Net.Sockets.Socket>e impostare l'opzione di socket <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8267e-326">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8267e-327">È tuttavia possibile trasmettere i dati per il valore predefinito di broadcast indirizzo, 255.255.255.255, se si specifica <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> nella chiamata al <xref:System.Net.Sockets.UdpClient.Send%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-327">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="8267e-328">Se l'applicazione richiede un maggiore controllo sull'indirizzo di broadcast, è possibile anche ripristinare l'uso di <xref:System.Net.Sockets.Socket> classe.</span><span class="sxs-lookup"><span data-stu-id="8267e-328">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-329">Poiché il protocollo UDP è orientato alla connessione, il <xref:System.Net.Sockets.UdpClient.Connect%2A> metodo non blocca.</span><span class="sxs-lookup"><span data-stu-id="8267e-329">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="8267e-330">Non chiamare il <xref:System.Net.Sockets.UdpClient.Connect%2A> metodo se si prevede di ricevere datagrammi multicast.</span><span class="sxs-lookup"><span data-stu-id="8267e-330">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-331">L'esempio seguente usa un numero di porta e indirizzo IP per la connessione con un host remoto.</span><span class="sxs-lookup"><span data-stu-id="8267e-331">The following example uses an IP address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8267e-332">
            <see cref="T:System.Net.Sockets.UdpClient" /> è chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-332">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8267e-333">
            <paramref name="addr" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-333">
              <paramref name="addr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8267e-334">Il parametro <paramref name="port" /> non è compreso tra <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-334">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-335">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-335">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : string * int -&gt; unit" Usage="udpClient.Connect (hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="8267e-336">Nome DNS dell'host remoto a cui si desidera inviare dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-336">The DNS name of the remote host to which you intend send data.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8267e-337">Numero di porta sull'host remoto a cui si desidera inviare dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-337">The port number on the remote host to which you intend to send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-338">Stabilisce un host remoto predefinito utilizzando il nome host e il numero di porta specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-338">Establishes a default remote host using the specified host name and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-339">Il <xref:System.Net.Sockets.UdpClient.Connect%2A> metodo stabilisce un host remoto predefinito utilizzando i valori specificati nel `port` e `hostname` parametri.</span><span class="sxs-lookup"><span data-stu-id="8267e-339">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `port` and `hostname` parameters.</span></span> <span data-ttu-id="8267e-340">Una volta stabilita, non è necessario specificare un host remoto in ogni chiamata al <xref:System.Net.Sockets.UdpClient.Send%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-340">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="8267e-341">La definizione di un host remoto predefinito è facoltativa.</span><span class="sxs-lookup"><span data-stu-id="8267e-341">Establishing a default remote host is optional.</span></span> <span data-ttu-id="8267e-342">Specifica di un host remoto predefinito è limitato a tale host.</span><span class="sxs-lookup"><span data-stu-id="8267e-342">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="8267e-343">Se si desidera inviare datagrammi da un altro host remoto, è necessario apportare un'altra chiamata ai <xref:System.Net.Sockets.UdpClient.Connect%2A> metodo oppure crearne uno nuovo <xref:System.Net.Sockets.UdpClient> senza un host remoto predefinito.</span><span class="sxs-lookup"><span data-stu-id="8267e-343">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span>  
  
 <span data-ttu-id="8267e-344">Se è stato stabilito un computer remoto predefinito host ed è fornire anche un host remoto nella chiamata ai <xref:System.Net.Sockets.UdpClient.Send%2A> metodo <xref:System.Net.Sockets.UdpClient.Send%2A> genererà un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8267e-344">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8267e-345">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-345">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8267e-346">Dopo aver ottenuto il codice, è possibile vedere le [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-346">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="8267e-347">Se si chiama il <xref:System.Net.Sockets.Socket.Connect%2A> (metodo), tutti i datagrammi provenienti da un indirizzo diverso verrà rimosse il valore predefinito specificato.</span><span class="sxs-lookup"><span data-stu-id="8267e-347">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="8267e-348">Non è possibile impostare l'host remoto predefinito utilizzando questo metodo, a meno che non si eredita da un indirizzo di broadcast <xref:System.Net.Sockets.UdpClient>, usare il client per ottenere l'oggetto sottostante <xref:System.Net.Sockets.Socket>e impostare l'opzione di socket <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8267e-348">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8267e-349">È tuttavia possibile trasmettere i dati per il valore predefinito di broadcast indirizzo, 255.255.255.255, se si specifica <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> nella chiamata al <xref:System.Net.Sockets.UdpClient.Send%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-349">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="8267e-350">Se l'applicazione richiede un maggiore controllo sull'indirizzo di broadcast, è possibile anche ripristinare l'uso di <xref:System.Net.Sockets.Socket> classe.</span><span class="sxs-lookup"><span data-stu-id="8267e-350">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-351">Poiché il protocollo UDP è orientato alla connessione, il <xref:System.Net.Sockets.UdpClient.Connect%2A> metodo non blocca.</span><span class="sxs-lookup"><span data-stu-id="8267e-351">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="8267e-352">Non chiamare il <xref:System.Net.Sockets.UdpClient.Connect%2A> metodo se si prevede di ricevere datagrammi multicast.</span><span class="sxs-lookup"><span data-stu-id="8267e-352">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-353">L'esempio seguente usa il nome host e porta il numero per la connessione a un host remoto.</span><span class="sxs-lookup"><span data-stu-id="8267e-353">The following example uses the host name and port number to connect to a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8267e-354">
            <see cref="T:System.Net.Sockets.UdpClient" /> è chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-354">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8267e-355">Il parametro <paramref name="port" /> non è compreso tra <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-355">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-356">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-356">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8267e-357">Rilascia le risorse gestite e non gestite usate dall'oggetto <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-357">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="udpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="8267e-358">
            <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-358">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-359">Rilascia le risorse non gestite usate da <see cref="T:System.Net.Sockets.UdpClient" /> e, facoltativamente, le risorse gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-359">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-360">Questo metodo viene chiamato da parte del pubblico `Dispose()` metodo e <xref:System.Object.Finalize%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-360">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="8267e-361">`Dispose()` richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="8267e-361">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="8267e-362"><xref:System.Object.Finalize%2A> richiama `Dispose` con `disposing` impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="8267e-362"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="8267e-363">Quando la `disposing` parametro è true, questo metodo rilascia tutte le risorse utilizzate da qualsiasi oggetto gestito da questo <xref:System.Net.Sockets.UdpClient> riferimenti.</span><span class="sxs-lookup"><span data-stu-id="8267e-363">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.UdpClient> references.</span></span> <span data-ttu-id="8267e-364">Il metodo richiama il metodo `Dispose()` di ciascun oggetto cui viene fatto riferimento.</span><span class="sxs-lookup"><span data-stu-id="8267e-364">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8267e-365">
            <para>
              <see langword="Dispose" /> può essere chiamato più volte da altri oggetti. Quando si esegue l'override <see langword="Dispose(Boolean)" /> prestare attenzione a non fare riferimento agli oggetti che sono stati eliminati in una precedente chiamata a <see langword="Dispose" />. Per altre informazioni su come implementare <see langword="Dispose(Boolean)" />, vedere [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  Per altre informazioni sulle <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [override del metodo Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-365">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DontFragment">
      <MemberSignature Language="C#" Value="public bool DontFragment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DontFragment" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.DontFragment" />
      <MemberSignature Language="VB.NET" Value="Public Property DontFragment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DontFragment { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DontFragment : bool with get, set" Usage="System.Net.Sockets.UdpClient.DontFragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8267e-366">Ottiene o imposta un valore <see cref="T:System.Boolean" /> che specifica se il <see cref="T:System.Net.Sockets.UdpClient" /> consente la frammentazione dei datagrammi IP (Internet Protocol).</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-366">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows Internet Protocol (IP) datagrams to be fragmented.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8267e-367">
            <see langword="true" /> se il <see cref="T:System.Net.Sockets.UdpClient" /> consente la frammentazione dei datagrammi; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-367">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows datagram fragmentation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8267e-368">Il valore predefinito è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-368">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-369">Datagrammi richiedono la frammentazione se le dimensioni superano le unità di MTU (Maximum Transfer) di mezzo di trasmissione.</span><span class="sxs-lookup"><span data-stu-id="8267e-369">Datagrams require fragmentation when their size exceeds the Maximum Transfer Unit (MTU) of the transmission medium.</span></span> <span data-ttu-id="8267e-370">Essi possono essere frammentati dall'host di invio o da un router intermedio.</span><span class="sxs-lookup"><span data-stu-id="8267e-370">Datagrams may be fragmented by the sending host or by an intermediate router.</span></span> <span data-ttu-id="8267e-371">Se un datagramma deve essere frammentato e il <xref:System.Net.Sockets.Socket.DontFragment%2A> opzione è impostata, viene eliminato il datagramma e viene inviato un messaggio di errore di controllo messaggio protocollo ICMP (Internet) al mittente del datagramma.</span><span class="sxs-lookup"><span data-stu-id="8267e-371">If a datagram must be fragmented, and the <xref:System.Net.Sockets.Socket.DontFragment%2A> option is set, the datagram is discarded, and an Internet Control Message Protocol (ICMP) error message is sent back to the sender of the datagram.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-372">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Net.Sockets.Socket.DontFragment%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="8267e-372">The following code example shows the use of the <xref:System.Net.Sockets.Socket.DontFragment%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8267e-373">Questa proprietà può essere impostata soltanto per i socket con cui viene utilizzato il flag <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-373">This property can be set only for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DropMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8267e-374">Esce da un gruppo multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-374">Leaves a multicast group.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberSignature Language="F#" Value="member this.DropMulticastGroup : System.Net.IPAddress -&gt; unit" Usage="udpClient.DropMulticastGroup multicastAddr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="8267e-375">Oggetto <see cref="T:System.Net.IPAddress" /> del gruppo multicast da cui uscire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-375">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-376">Esce da un gruppo multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-376">Leaves a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-377">Il <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> metodo estrae il <xref:System.Net.Sockets.UdpClient> dal gruppo multicast identificato dall'oggetto specificato <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="8267e-377">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="8267e-378">Dopo la chiamata di <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> metodo sottostante <xref:System.Net.Sockets.Socket> invia un pacchetto (IGMP (Internet Group Management Protocol) per il router, rimuovendo il router dal gruppo multicast.</span><span class="sxs-lookup"><span data-stu-id="8267e-378">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="8267e-379">Dopo un <xref:System.Net.Sockets.UdpClient> viene estratta dal gruppo, non sarà in grado di ricevere datagrammi inviati a tale gruppo.</span><span class="sxs-lookup"><span data-stu-id="8267e-379">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-380">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-380">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8267e-381">Dopo aver ottenuto il codice, è possibile vedere le [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-381">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-382">Nell'esempio seguente viene illustrato come eliminare un gruppo multicast, fornendo un indirizzo multicast.</span><span class="sxs-lookup"><span data-stu-id="8267e-382">The following example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8267e-383">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-383">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-384">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-384">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8267e-385">L'indirizzo IP non è compatibile con il valore <see cref="T:System.Net.Sockets.AddressFamily" /> che definisce lo schema di indirizzamento del socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-385">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8267e-386">
            <paramref name="multicastAddr" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-386">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr, int ifindex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr, int32 ifindex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress, ifindex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr, int ifindex);" />
      <MemberSignature Language="F#" Value="member this.DropMulticastGroup : System.Net.IPAddress * int -&gt; unit" Usage="udpClient.DropMulticastGroup (multicastAddr, ifindex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="ifindex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="8267e-387">Oggetto <see cref="T:System.Net.IPAddress" /> del gruppo multicast da cui uscire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-387">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span>
          </span>
        </param>
        <param name="ifindex">
          <span data-ttu-id="8267e-388">Indirizzo locale del gruppo multicast da cui uscire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-388">The local address of the multicast group to leave.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-389">Esce da un gruppo multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-389">Leaves a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-390">Il <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> metodo estrae il <xref:System.Net.Sockets.UdpClient> dal gruppo multicast identificato dall'oggetto specificato <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="8267e-390">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="8267e-391">Dopo la chiamata di <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> metodo sottostante <xref:System.Net.Sockets.Socket> invia un pacchetto (IGMP (Internet Group Management Protocol) per il router, rimuovendo il router dal gruppo multicast.</span><span class="sxs-lookup"><span data-stu-id="8267e-391">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="8267e-392">Dopo un <xref:System.Net.Sockets.UdpClient> viene estratta dal gruppo, non sarà in grado di ricevere datagrammi inviati a tale gruppo.</span><span class="sxs-lookup"><span data-stu-id="8267e-392">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-393">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare il <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> proprietà per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-393">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="8267e-394">Dopo aver ottenuto il codice, è possibile vedere le [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-394">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-395">Esempio di codice seguente viene illustrato come eliminare un gruppo multicast, fornendo un indirizzo multicast.</span><span class="sxs-lookup"><span data-stu-id="8267e-395">The following code example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8267e-396">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-396">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-397">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-397">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8267e-398">L'indirizzo IP non è compatibile con il valore <see cref="T:System.Net.Sockets.AddressFamily" /> che definisce lo schema di indirizzamento del socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-398">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8267e-399">
            <paramref name="multicastAddr" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-399">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="EnableBroadcast">
      <MemberSignature Language="C#" Value="public bool EnableBroadcast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableBroadcast" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.EnableBroadcast" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableBroadcast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableBroadcast { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableBroadcast : bool with get, set" Usage="System.Net.Sockets.UdpClient.EnableBroadcast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8267e-400">Ottiene o imposta un valore <see cref="T:System.Boolean" /> che specifica se la classe <see cref="T:System.Net.Sockets.UdpClient" /> può inviare o ricevere pacchetti broadcast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-400">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> may send or receive broadcast packets.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8267e-401">
            <see langword="true" /> se il <see cref="T:System.Net.Sockets.UdpClient" /> consente lo scambio di pacchetti broadcast; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-401">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows broadcast packets; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8267e-402">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-402">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-403">La trasmissione è limitata a una subnet specifica.</span><span class="sxs-lookup"><span data-stu-id="8267e-403">Broadcasting is limited to a specific subnet.</span></span> <span data-ttu-id="8267e-404">È possibile trasmettere alla subnet locale mediante l'invio di un pacchetto a 255.255.255.255; In alternativa, è possibile usare l'indirizzo di broadcast, ovvero la parte di rete di un indirizzo IP (Internet Protocol) con tutti i bit impostati nella porzione di host.</span><span class="sxs-lookup"><span data-stu-id="8267e-404">You can broadcast to your local subnet by sending a packet to 255.255.255.255; or, you can use the directed broadcast address, which is the network portion of an Internet Protocol (IP) address with all bits set in the host portion.</span></span> <span data-ttu-id="8267e-405">Ad esempio, se l'indirizzo IP è 192.168.1.40 (un indirizzo di classe C, con la parte relativa alla rete come i primi tre ottetti e la parte host è l'ultimo ottetto), l'indirizzo broadcast è diretto 192.168.1.255.</span><span class="sxs-lookup"><span data-stu-id="8267e-405">For example, if your IP address is 192.168.1.40 (a Class C address, with the network portion as the first three octets, and the host portion is the last octet), your directed broadcast address is 192.168.1.255.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-406">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="8267e-406">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public byte[] EndReceive (IAsyncResult asyncResult, ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EndReceive(class System.IAsyncResult asyncResult, class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (asyncResult As IAsyncResult, ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EndReceive(IAsyncResult ^ asyncResult, System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.EndReceive : IAsyncResult *  -&gt; byte[]" Usage="udpClient.EndReceive (asyncResult, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8267e-407">Oggetto <see cref="T:System.IAsyncResult" /> restituito da un chiamata a <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-407">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</span>
          </span>
        </param>
        <param name="remoteEP">
          <span data-ttu-id="8267e-408">Endpoint remoto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-408">The specified remote endpoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-409">Termina una ricezione asincrona in attesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-409">Ends a pending asynchronous receive.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8267e-410">In caso di esito positivo, matrice di byte che contiene i dati del datagramma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-410">If successful, an array of bytes that contains datagram data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-411">Questo metodo si blocca fino a quando l'operazione è completata.</span><span class="sxs-lookup"><span data-stu-id="8267e-411">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="8267e-412">Per eseguire questa operazione in modo sincrono, usare il <xref:System.Net.Sockets.UdpClient.Receive%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-412">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-413">Il codice seguente viene illustrato come utilizzare <xref:System.Net.Sockets.UdpClient.BeginSend%2A> per completare un'operazione di ricezione asincrona di una risposta del server.</span><span class="sxs-lookup"><span data-stu-id="8267e-413">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous receive of a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8267e-414">
            <paramref name="asyncResult" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-414">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8267e-415">
            <paramref name="asyncResult" /> non è stato restituito da una chiamata al metodo <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-415">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8267e-416">
            <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> è stato precedentemente chiamato per la lettura asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-416">
              <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> was previously called for the asynchronous read.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-417">Si è verificato un errore durante il tentativo di accesso all'oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-417">An error occurred when attempting to access the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8267e-418">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-418">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndSend">
      <MemberSignature Language="C#" Value="public int EndSend (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSend(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSend (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSend(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndSend : IAsyncResult -&gt; int" Usage="udpClient.EndSend asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8267e-419">Oggetto <see cref="T:System.IAsyncResult" /> restituito da un chiamata a <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-419">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-420">Termina un invio asincrono in attesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-420">Ends a pending asynchronous send.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8267e-421">Se ha esito positivo, numero di byte inviati alla classe <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-421">If successful, the number of bytes sent to the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-422">Questo metodo si blocca fino a quando l'operazione è completata.</span><span class="sxs-lookup"><span data-stu-id="8267e-422">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="8267e-423">Per eseguire questa operazione in modo sincrono, usare il <xref:System.Net.Sockets.UdpClient.Send%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-423">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-424">Il codice seguente viene illustrato come utilizzare <xref:System.Net.Sockets.UdpClient.BeginSend%2A> per completare un'operazione di invio asincrono di una richiesta al server.</span><span class="sxs-lookup"><span data-stu-id="8267e-424">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous send of a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8267e-425">
            <paramref name="asyncResult" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-425">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8267e-426">
            <paramref name="asyncResult" /> non è stato restituito da una chiamata al metodo <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-426">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8267e-427">
            <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> è stato precedentemente chiamato per la lettura asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-427">
              <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> was previously called for the asynchronous read.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-428">Si è verificato un errore durante il tentativo di accesso al socket sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-428">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8267e-429">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-429">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.UdpClient.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8267e-430">Ottiene o imposta un valore <see cref="T:System.Boolean" /> che specifica se la classe <see cref="T:System.Net.Sockets.UdpClient" /> consente a un unico client di usare una porta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-430">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8267e-431">
            <see langword="true" /> se la classe <see cref="T:System.Net.Sockets.UdpClient" /> consente a un solo client di usare una porta specifica; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-431">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8267e-432">Il valore predefinito è <see langword="true" /> per Windows Server 2003 e Windows XP Service Pack 2 e versioni successive e <see langword="false" /> per tutte le altre versioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-432">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-433">Per impostazione predefinita, i client più possono usare una porta specifica. Tuttavia, solo uno dei client può eseguire operazioni sul traffico di rete inviati alla porta.</span><span class="sxs-lookup"><span data-stu-id="8267e-433">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="8267e-434">È possibile usare il <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> proprietà per impedire a più client di usare una porta specifica.</span><span class="sxs-lookup"><span data-stu-id="8267e-434">You can use the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="8267e-435">Questa proprietà deve essere impostata prima che il socket sottostante è associato a una porta di client.</span><span class="sxs-lookup"><span data-stu-id="8267e-435">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="8267e-436">Se si chiama <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>, o <xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>, la porta del client viene associata come effetto collaterale del costruttore e successivamente non è possibile impostare il <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> proprietà</span><span class="sxs-lookup"><span data-stu-id="8267e-436">If you call <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>, or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>, the client port is bound as a side effect of the constructor, and you cannot subsequently set the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-437">L'esempio di codice seguente crea una <xref:System.Net.Sockets.UdpClient>e ottiene e imposta il <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="8267e-437">The following code example creates a <xref:System.Net.Sockets.UdpClient>, and gets and sets the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-438">Si è verificato un errore durante il tentativo di accesso al socket sottostante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-438">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8267e-439">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-439">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!UdpClient ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="udpClient.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="JoinMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8267e-440">Aggiunge una classe <see cref="T:System.Net.Sockets.UdpClient" /> a un gruppo multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-440">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : System.Net.IPAddress -&gt; unit" Usage="udpClient.JoinMulticastGroup multicastAddr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="8267e-441">Classe <see cref="T:System.Net.IPAddress" /> multicast del gruppo a cui si desidera unirsi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-441">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-442">Aggiunge una classe <see cref="T:System.Net.Sockets.UdpClient" /> a un gruppo multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-442">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-443">Il <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> metodo sottoscrive il <xref:System.Net.Sockets.UdpClient> a un gruppo multicast utilizzando l'oggetto specificato <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="8267e-443">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="8267e-444">Dopo la chiamata di <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> metodo sottostante <xref:System.Net.Sockets.Socket> invia un pacchetto (IGMP (Internet Group Management Protocol) per il router che richiede l'appartenenza al gruppo multicast.</span><span class="sxs-lookup"><span data-stu-id="8267e-444">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="8267e-445">L'intervallo di indirizzi multicast è tra 224.0.0.0 e 239.255.255.255.</span><span class="sxs-lookup"><span data-stu-id="8267e-445">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="8267e-446">Se si specifica un indirizzo esterno all'intervallo o se il router in cui viene effettuata la richiesta non multicast abilitati, <xref:System.Net.Sockets.UdpClient> genererà un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8267e-446">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8267e-447">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-447">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8267e-448">Dopo aver ottenuto il codice, è possibile vedere le [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-448">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span> <span data-ttu-id="8267e-449">Una volta il <xref:System.Net.Sockets.UdpClient> sia elencato con il router come membro del gruppo multicast, sarà in grado di ricevere datagrammi multicast inviati all'entità specificata <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="8267e-449">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-450">È necessario creare il <xref:System.Net.Sockets.UdpClient> utilizzando il numero di porta multicast; in caso contrario, non sarà in grado di ricevere datagrammi multicast.</span><span class="sxs-lookup"><span data-stu-id="8267e-450">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number; otherwise, you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="8267e-451">Non chiamare il <xref:System.Net.Sockets.UdpClient.Connect%2A> metodo prima di chiamare il <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> metodo, o <xref:System.Net.Sockets.UdpClient.Receive%2A> metodo avrà esito negativo.</span><span class="sxs-lookup"><span data-stu-id="8267e-451">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, or the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will not work.</span></span> <span data-ttu-id="8267e-452">Non è necessario appartenere a un gruppo multicast per inviare datagrammi a un indirizzo IP multicast.</span><span class="sxs-lookup"><span data-stu-id="8267e-452">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="8267e-453">Prima di unirsi a un gruppo multicast, assicurarsi che il socket è associato alla porta o l'endpoint.</span><span class="sxs-lookup"><span data-stu-id="8267e-453">Before joining a multicast group, make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="8267e-454">Farlo chiamando uno dei costruttori che accettano una porta o un endpoint come parametro.</span><span class="sxs-lookup"><span data-stu-id="8267e-454">You do that by calling one of the constructors that accept a port or an endpoint as a parameter.</span></span>  
  
 <span data-ttu-id="8267e-455">Per arrestare la ricezione di datagrammi multicast, chiamare il <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> metodo e fornire il <xref:System.Net.IPAddress> del gruppo da cui si desidera ritirare.</span><span class="sxs-lookup"><span data-stu-id="8267e-455">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-456">In caso di IPv6, esistono diversi intervalli di indirizzi multicast che è possibile scegliere tra.</span><span class="sxs-lookup"><span data-stu-id="8267e-456">In the IPv6 case, there are several multicast address ranges you can choose from.</span></span> <span data-ttu-id="8267e-457">Vedere la specifica IETF RFC 2375.</span><span class="sxs-lookup"><span data-stu-id="8267e-457">Please, refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-458">Non è possibile chiamare <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> in un <xref:System.Net.Sockets.UdpClient> create senza una porta locale specifica (vale a dire, tramite il <xref:System.Net.Sockets.UdpClient.%23ctor> o <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> costruttore).</span><span class="sxs-lookup"><span data-stu-id="8267e-458">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-459">Esempio di codice seguente viene illustrato come aggiungere un gruppo multicast, fornendo un indirizzo multicast.</span><span class="sxs-lookup"><span data-stu-id="8267e-459">The following code example demonstrates how to join a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#1)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8267e-460">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-460">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-461">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-461">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8267e-462">L'indirizzo IP non è compatibile con il valore <see cref="T:System.Net.Sockets.AddressFamily" /> che definisce lo schema di indirizzamento del socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-462">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (int ifindex, System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(int32 ifindex, class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (ifindex As Integer, multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(int ifindex, System::Net::IPAddress ^ multicastAddr);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : int * System.Net.IPAddress -&gt; unit" Usage="udpClient.JoinMulticastGroup (ifindex, multicastAddr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifindex" Type="System.Int32" />
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="ifindex">
          <span data-ttu-id="8267e-463">L'indice dell'interfaccia associato all'indirizzo IP locale a cui unire il gruppo multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-463">The interface index associated with the local IP address on which to join the multicast group.</span>
          </span>
        </param>
        <param name="multicastAddr">
          <span data-ttu-id="8267e-464">Classe <see cref="T:System.Net.IPAddress" /> multicast del gruppo a cui si desidera unirsi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-464">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-465">Aggiunge una classe <see cref="T:System.Net.Sockets.UdpClient" /> a un gruppo multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-465">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-466">Prima di unirsi a un gruppo multicast, assicurarsi che il socket è associato alla porta o l'endpoint.</span><span class="sxs-lookup"><span data-stu-id="8267e-466">Before joining a multicast group, be sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="8267e-467">È possibile farlo chiamando uno dei costruttori che accettano una porta o un endpoint come parametro.</span><span class="sxs-lookup"><span data-stu-id="8267e-467">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
 <span data-ttu-id="8267e-468">Il `infindex` parametro viene usato per identificare un'interfaccia hardware nello stesso collegamento.</span><span class="sxs-lookup"><span data-stu-id="8267e-468">The `infindex` parameter is used to identify a hardware interface on the same link.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-469">Esistono diversi intervalli di indirizzi multicast tra cui scegliere.</span><span class="sxs-lookup"><span data-stu-id="8267e-469">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="8267e-470">Vedere la specifica IETF RFC 2375.</span><span class="sxs-lookup"><span data-stu-id="8267e-470">Refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-471">Non è possibile chiamare <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> in un <xref:System.Net.Sockets.UdpClient> create senza una porta locale specifica (vale a dire, tramite il <xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType> o <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> costruttore).</span><span class="sxs-lookup"><span data-stu-id="8267e-471">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> constructor).</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#5)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8267e-472">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-472">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-473">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-473">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, int timeToLive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, int32 timeToLive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, timeToLive As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, int timeToLive);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : System.Net.IPAddress * int -&gt; unit" Usage="udpClient.JoinMulticastGroup (multicastAddr, timeToLive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="timeToLive" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="8267e-474">Oggetto <see cref="T:System.Net.IPAddress" /> del gruppo multicast a cui unirsi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-474">The <see cref="T:System.Net.IPAddress" /> of the multicast group to join.</span>
          </span>
        </param>
        <param name="timeToLive">
          <span data-ttu-id="8267e-475">TTL misurato in hop di router.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-475">The Time to Live (TTL), measured in router hops.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-476">Aggiunge una classe <see cref="T:System.Net.Sockets.UdpClient" /> a un gruppo multicast con il Time to Live (TTL) specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-476">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group with the specified Time to Live (TTL).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-477">Il <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> metodo sottoscrive il <xref:System.Net.Sockets.UdpClient> a un gruppo multicast utilizzando l'oggetto specificato <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="8267e-477">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="8267e-478">Dopo la chiamata di <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> metodo sottostante <xref:System.Net.Sockets.Socket> invia un pacchetto (IGMP (Internet Group Management Protocol) per il router che richiede l'appartenenza al gruppo multicast.</span><span class="sxs-lookup"><span data-stu-id="8267e-478">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="8267e-479">L'intervallo di indirizzi multicast è tra 224.0.0.0 e 239.255.255.255.</span><span class="sxs-lookup"><span data-stu-id="8267e-479">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="8267e-480">Se si specifica un indirizzo esterno all'intervallo o se il router in cui viene effettuata la richiesta non multicast abilitati, <xref:System.Net.Sockets.UdpClient> genererà un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8267e-480">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8267e-481">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-481">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8267e-482">Dopo aver ottenuto il codice, è possibile vedere le [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-482">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span> <span data-ttu-id="8267e-483">Il `timeToLive` parametro consente di specificare quanti hop router potrà essere per un datagramma multicast prima di essere eliminato.</span><span class="sxs-lookup"><span data-stu-id="8267e-483">The `timeToLive` parameter specifies how many router hops will be allowed for a multicasted datagram before being discarded.</span></span> <span data-ttu-id="8267e-484">Una volta il <xref:System.Net.Sockets.UdpClient> sia elencato con il router come membro del gruppo multicast, sarà in grado di ricevere datagrammi multicast inviati all'entità specificata <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="8267e-484">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-485">È necessario creare il <xref:System.Net.Sockets.UdpClient> utilizzando il numero di porta multicast in caso contrario non sarà in grado di ricevere datagrammi multicast.</span><span class="sxs-lookup"><span data-stu-id="8267e-485">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number otherwise you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="8267e-486">Non si chiama il <xref:System.Net.Sockets.UdpClient.Connect%2A> metodo prima di chiamare il <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> metodo o del metodo receive non funzionerà.</span><span class="sxs-lookup"><span data-stu-id="8267e-486">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method or the receive method will not work.</span></span> <span data-ttu-id="8267e-487">Non è necessario appartenere a un gruppo multicast per inviare datagrammi a un indirizzo IP multicast.</span><span class="sxs-lookup"><span data-stu-id="8267e-487">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="8267e-488">Prima di unirsi a un gruppo multicast assicurarsi che il socket è associato alla porta o l'endpoint.</span><span class="sxs-lookup"><span data-stu-id="8267e-488">Before joining a multicast group make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="8267e-489">Farlo, chiamando uno dei costruttori che accettano come parametro di una porta o un endpoint.</span><span class="sxs-lookup"><span data-stu-id="8267e-489">You do that by calling one of the constructors that accept as parameter a port or an endpoint.</span></span>  
  
 <span data-ttu-id="8267e-490">Per arrestare la ricezione di datagrammi multicast, chiamare il <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> metodo e fornire il <xref:System.Net.IPAddress> del gruppo da cui si desidera ritirare.</span><span class="sxs-lookup"><span data-stu-id="8267e-490">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-491">Non è possibile chiamare <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> in un <xref:System.Net.Sockets.UdpClient> create senza una porta locale specifica (vale a dire, tramite il <xref:System.Net.Sockets.UdpClient.%23ctor> o <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> costruttore).</span><span class="sxs-lookup"><span data-stu-id="8267e-491">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-492">Nell'esempio seguente viene illustrato come aggiungere un gruppo multicast, fornendo due parametri, un indirizzo multicast e un numero che rappresenta la durata (TTL).</span><span class="sxs-lookup"><span data-stu-id="8267e-492">The following example demonstrates how to join a multicast group by providing two parameters, a multicast address, and a number that represents the TTL.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8267e-493">Il TTL fornito non è compreso tra 0 e 255</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-493">The TTL provided is not between 0 and 255</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8267e-494">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-494">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-495">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-495">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8267e-496">
            <paramref name="multicastAddr" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-496">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8267e-497">L'indirizzo IP non è compatibile con il valore <see cref="T:System.Net.Sockets.AddressFamily" /> che definisce lo schema di indirizzamento del socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-497">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, System.Net.IPAddress localAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, class System.Net.IPAddress localAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, localAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, System::Net::IPAddress ^ localAddress);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : System.Net.IPAddress * System.Net.IPAddress -&gt; unit" Usage="udpClient.JoinMulticastGroup (multicastAddr, localAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="localAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="8267e-498">Classe <see cref="T:System.Net.IPAddress" /> multicast del gruppo a cui si desidera unirsi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-498">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <param name="localAddress">
          <span data-ttu-id="8267e-499">Classe <see cref="T:System.Net.IPAddress" /> locale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-499">The local <see cref="T:System.Net.IPAddress" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-500">Aggiunge una classe <see cref="T:System.Net.Sockets.UdpClient" /> a un gruppo multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-500">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-501">Prima di unirsi a un gruppo multicast, assicurarsi che il socket è associato alla porta o l'endpoint.</span><span class="sxs-lookup"><span data-stu-id="8267e-501">Before you join a multicast group, be sure that the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="8267e-502">È possibile farlo chiamando uno dei costruttori che accettano una porta o un endpoint come parametro.</span><span class="sxs-lookup"><span data-stu-id="8267e-502">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-503">Esistono diversi intervalli di indirizzi multicast tra cui scegliere.</span><span class="sxs-lookup"><span data-stu-id="8267e-503">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="8267e-504">È possibile trovarli nella specifica IETF RFC 2375.</span><span class="sxs-lookup"><span data-stu-id="8267e-504">You can find them in the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-505">Non è possibile chiamare <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> in un <xref:System.Net.Sockets.UdpClient> create senza una porta locale specifica (vale a dire, tramite il <xref:System.Net.Sockets.UdpClient.%23ctor> o <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> costruttore).</span><span class="sxs-lookup"><span data-stu-id="8267e-505">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-506">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-506">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.UdpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8267e-507">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-507">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-508">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-508">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.MulticastLoopback" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MulticastLoopback { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastLoopback : bool with get, set" Usage="System.Net.Sockets.UdpClient.MulticastLoopback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8267e-509">Ottiene o imposta un valore <see cref="T:System.Boolean" /> che specifica se i pacchetti multicast in uscita devono essere recapitati all'applicazione mittente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-509">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether outgoing multicast packets are delivered to the sending application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8267e-510">
            <see langword="true" /> se il <see cref="T:System.Net.Sockets.UdpClient" /> riceve pacchetti multicast; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-510">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> receives outgoing multicast packets; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-511">Il multicast è un metodo scalabile per la comunicazione di molti-a-molti in Internet.</span><span class="sxs-lookup"><span data-stu-id="8267e-511">Multicast is a scalable method for many-to-many communication on the Internet.</span></span> <span data-ttu-id="8267e-512">Se un processo esegue la sottoscrizione a un indirizzo multicast, tutti i pacchetti inviati da quel processo vengono ricevuti da ogni altro processo che ha sottoscritto l'indirizzo multicast.</span><span class="sxs-lookup"><span data-stu-id="8267e-512">If a process subscribes to a multicast address, any packets sent by that process are received by every other process that has subscribed to the multicast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-513">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="8267e-513">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.UdpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public byte[] Receive (ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Receive(class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Receive(System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.Receive :  -&gt; byte[]" Usage="udpClient.Receive remoteEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="remoteEP">
          <span data-ttu-id="8267e-514">Classe <see cref="T:System.Net.IPEndPoint" /> che rappresenta l'host remoto dal quale sono stati inviati i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-514">An <see cref="T:System.Net.IPEndPoint" /> that represents the remote host from which the data was sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-515">Restituisce un datagramma UDP che era stato inviato da un host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-515">Returns a UDP datagram that was sent by a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8267e-516">Matrice di tipo <see cref="T:System.Byte" /> che contiene dati di datagrammi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-516">An array of type <see cref="T:System.Byte" /> that contains datagram data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-517">Il <xref:System.Net.Sockets.UdpClient.Receive%2A> metodo si blocca fino all'arrivo di un datagramma da un host remoto.</span><span class="sxs-lookup"><span data-stu-id="8267e-517">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method will block until a datagram arrives from a remote host.</span></span> <span data-ttu-id="8267e-518">Quando i dati sono disponibili, il <xref:System.Net.Sockets.UdpClient.Receive%2A> metodo leggere il primo datagramma e restituirà la parte di dati come matrice di byte.</span><span class="sxs-lookup"><span data-stu-id="8267e-518">When data is available, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will read the first enqueued datagram and return the data portion as a byte array.</span></span> <span data-ttu-id="8267e-519">Questo metodo popola i `remoteEP` parametro con il <xref:System.Net.IPAddress> e numero di porta del mittente.</span><span class="sxs-lookup"><span data-stu-id="8267e-519">This method populates the `remoteEP` parameter with the <xref:System.Net.IPAddress> and port number of the sender.</span></span>  
  
 <span data-ttu-id="8267e-520">Se si specifica un host remoto predefinito nel <xref:System.Net.Sockets.UdpClient.Connect%2A> metodo, il <xref:System.Net.Sockets.UdpClient.Receive%2A> metodo accetterà datagrammi solo da tale host.</span><span class="sxs-lookup"><span data-stu-id="8267e-520">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will accept datagrams from that host only.</span></span> <span data-ttu-id="8267e-521">Verranno rimosse tutte le altre datagrammi.</span><span class="sxs-lookup"><span data-stu-id="8267e-521">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="8267e-522">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-522">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8267e-523">Dopo aver ottenuto il codice, è possibile vedere le [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-523">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-524">Se si prevede di ricevere datagrammi multicast, non si chiama il <xref:System.Net.Sockets.UdpClient.Connect%2A> metodo prima di chiamare il <xref:System.Net.Sockets.UdpClient.Receive%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-524">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="8267e-525">Il <xref:System.Net.Sockets.UdpClient> utilizzata per ricevere datagrammi devono essere creata usando il numero di porta multicast.</span><span class="sxs-lookup"><span data-stu-id="8267e-525">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-526">Nell'esempio seguente viene illustrato il <xref:System.Net.Sockets.UdpClient.Receive%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-526">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="8267e-527">Il <xref:System.Net.Sockets.UdpClient.Receive%2A> metodo blocca l'esecuzione finché non riceve un messaggio.</span><span class="sxs-lookup"><span data-stu-id="8267e-527">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until it receives a message.</span></span> <span data-ttu-id="8267e-528">Usando il <xref:System.Net.IPEndPoint> passato a <xref:System.Net.Sockets.UdpClient.Receive%2A>, viene visualizzato l'identità dell'host ricevente.</span><span class="sxs-lookup"><span data-stu-id="8267e-528">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8267e-529">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-529">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-530">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-530">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.IPAddress" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;valuetype System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.ReceiveAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveAsync () As Task(Of UdpReceiveResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::UdpReceiveResult&gt; ^ ReceiveAsync();" />
      <MemberSignature Language="F#" Value="member this.ReceiveAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt;" Usage="udpClient.ReceiveAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8267e-531">Restituisce in modo asincrono un datagramma UDP inviato da un host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-531">Returns a UDP datagram asynchronously that was sent by a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8267e-532">Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-532">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="8267e-533">Oggetto dell'attività che rappresenta l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-533">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-534">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="8267e-534">This operation will not block.</span></span> <span data-ttu-id="8267e-535">L'oggetto restituito <xref:System.Threading.Tasks.Task%601>> oggetto verrà completato dopo che è stato ricevuto il pacchetto UDP.</span><span class="sxs-lookup"><span data-stu-id="8267e-535">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the UDP packet has been received.</span></span>  
  
 <span data-ttu-id="8267e-536">Se si specifica un host remoto predefinito nel <xref:System.Net.Sockets.UdpClient.Connect%2A> (metodo), questo metodo accetterà datagrammi solo da tale host.</span><span class="sxs-lookup"><span data-stu-id="8267e-536">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, this method will accept datagrams from that host only.</span></span> <span data-ttu-id="8267e-537">Verranno rimosse tutte le altre datagrammi.</span><span class="sxs-lookup"><span data-stu-id="8267e-537">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="8267e-538">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-538">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8267e-539">Dopo aver ottenuto il codice, è possibile vedere le [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-539">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="8267e-540">Se si prevede di ricevere datagrammi multicast, non viene chiamato il <xref:System.Net.Sockets.UdpClient.Connect%2A> metodo prima di chiamare questo metodo.</span><span class="sxs-lookup"><span data-stu-id="8267e-540">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling this method.</span></span> <span data-ttu-id="8267e-541">Il <xref:System.Net.Sockets.UdpClient> utilizzata per ricevere datagrammi devono essere creata usando il numero di porta multicast.</span><span class="sxs-lookup"><span data-stu-id="8267e-541">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8267e-542">Oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante è stato chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-542">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-543">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-543">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8267e-544">Invia un datagramma UDP a un host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-544">Sends a UDP datagram to a remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int -&gt; int" Usage="udpClient.Send (dgram, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="8267e-545">Matrice di tipo <see cref="T:System.Byte" /> che specifica il datagramma UDP da inviare, rappresentato come una matrice di byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-545">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="8267e-546">Numero di byte nel datagramma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-546">The number of bytes in the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-547">Invia un datagramma UDP a un host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-547">Sends a UDP datagram to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8267e-548">Numero di byte inviati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-548">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-549">Questo overload invia datagrammi all'host remoto stabilite nel <xref:System.Net.Sockets.UdpClient.Connect%2A> metodo e restituisce il numero di byte inviato.</span><span class="sxs-lookup"><span data-stu-id="8267e-549">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and returns the number of bytes sent.</span></span> <span data-ttu-id="8267e-550">Se non si chiama <xref:System.Net.Sockets.UdpClient.Connect%2A> prima di chiamare questo overload, il <xref:System.Net.Sockets.UdpClient.Send%2A> metodo genererà un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8267e-550">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8267e-551">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-551">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8267e-552">Dopo aver ottenuto il codice, è possibile vedere le [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-552">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="8267e-553">Se si desidera inviare datagrammi da un altro host remoto, è necessario chiamare il <xref:System.Net.Sockets.UdpClient.Connect%2A> (metodo) e specificare l'host remoto desiderato.</span><span class="sxs-lookup"><span data-stu-id="8267e-553">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="8267e-554">Usare una delle altre <xref:System.Net.Sockets.UdpClient.Send%2A> overload del metodo per inviare datagrammi a un indirizzo di broadcast.</span><span class="sxs-lookup"><span data-stu-id="8267e-554">Use either of the other <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-555">Nell'esempio seguente viene illustrato il <xref:System.Net.Sockets.UdpClient.Send%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-555">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="8267e-556">Un host remoto predefinito prima di utilizzare questo overload deve essere stabilita.</span><span class="sxs-lookup"><span data-stu-id="8267e-556">You must establish a default remote host prior to using this overload.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8267e-557">
            <paramref name="dgram" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-557">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8267e-558">
            <see cref="T:System.Net.Sockets.UdpClient" /> ha già stabilito un host remoto predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-558">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8267e-559">
            <see cref="T:System.Net.Sockets.UdpClient" /> è chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-559">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-560">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-560">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int * System.Net.IPEndPoint -&gt; int" Usage="udpClient.Send (dgram, bytes, endPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="8267e-561">Matrice di tipo <see cref="T:System.Byte" /> che specifica il datagramma UDP che si intende inviare rappresentato come una matrice di byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-561">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send, represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="8267e-562">Numero di byte nel datagramma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-562">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="8267e-563">
            <see cref="T:System.Net.IPEndPoint" /> che rappresenta l'host e la porta a cui inviare il datagramma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-563">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-564">Invia un datagramma UDP all'host all'endpoint remoto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-564">Sends a UDP datagram to the host at the specified remote endpoint.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8267e-565">Numero di byte inviati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-565">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-566">Il <xref:System.Net.Sockets.UdpClient.Send%2A> metodo invia datagrammi all'endpoint specificato e restituisce il numero di byte inviati.</span><span class="sxs-lookup"><span data-stu-id="8267e-566">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the specified endpoint and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="8267e-567">Prima di chiamare questo overload, è necessario creare innanzitutto un <xref:System.Net.IPEndPoint> utilizzando il numero di porta e indirizzo IP dell'host remoto a cui verranno inviati i datagrammi.</span><span class="sxs-lookup"><span data-stu-id="8267e-567">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="8267e-568">È possibile inviare datagrammi per la trasmissione di predefinito di indirizzi, 255.255.255.255, specificando <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> per il <xref:System.Net.IPAddress.Address%2A> proprietà del <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="8267e-568">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="8267e-569">Dopo aver creato questo <xref:System.Net.IPEndPoint>, passarlo per il <xref:System.Net.Sockets.UdpClient.Send%2A> metodo come la `endPoint` parametro.</span><span class="sxs-lookup"><span data-stu-id="8267e-569">After you have created this <xref:System.Net.IPEndPoint>, pass it to the <xref:System.Net.Sockets.UdpClient.Send%2A> method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="8267e-570">Se si desidera inviare datagrammi da un altro indirizzo di broadcast, usare il <xref:System.Net.Sockets.UdpClient.Client%2A> metodo per ottenere l'oggetto sottostante <xref:System.Net.Sockets.Socket>e impostare l'opzione di socket <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8267e-570">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8267e-571">È anche possibile ripristinare l'utilizzo di <xref:System.Net.Sockets.Socket> classe.</span><span class="sxs-lookup"><span data-stu-id="8267e-571">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-572">Non si specifica un `endPoint` parametro per questo metodo se è già stato stabilito un host remoto con la <xref:System.Net.Sockets.UdpClient.Connect%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-572">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="8267e-573">Se esegue l'operazione, il <xref:System.Net.Sockets.UdpClient.Send%2A> metodo genererà un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8267e-573">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8267e-574">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-574">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8267e-575">Dopo aver ottenuto il codice, è possibile vedere le [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-575">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-576">Nell'esempio seguente viene illustrato il <xref:System.Net.Sockets.UdpClient.Send%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-576">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="8267e-577">Questo esempio viene usato un <xref:System.Net.IPEndPoint> per specificare l'host di destinazione.</span><span class="sxs-lookup"><span data-stu-id="8267e-577">This example uses an <xref:System.Net.IPEndPoint> to specify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8267e-578">
            <paramref name="dgram" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-578">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8267e-579">
            <see cref="T:System.Net.Sockets.UdpClient" /> ha già stabilito un host remoto predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-579">
              <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8267e-580">
            <see cref="T:System.Net.Sockets.UdpClient" /> è chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-580">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-581">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-581">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, hostname As String, port As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int * string * int -&gt; int" Usage="udpClient.Send (dgram, bytes, hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="8267e-582">Matrice di tipo <see cref="T:System.Byte" /> che specifica il datagramma UDP da inviare, rappresentato come una matrice di byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-582">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="8267e-583">Numero di byte nel datagramma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-583">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="8267e-584">Nome dell'host remoto a cui si vuole inviare il datagramma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-584">The name of the remote host to which you intend to send the datagram.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8267e-585">Numero di porta remota con cui si vuole comunicare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-585">The remote port number with which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-586">Invia un datagramma UDP a una porta specificata in un host remoto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-586">Sends a UDP datagram to a specified port on a specified remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8267e-587">Numero di byte inviati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-587">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-588">Il <xref:System.Net.Sockets.UdpClient.Send%2A> metodo invia datagrammi sui valori specificati per il `hostname` e `port` parametri e restituisce il numero di byte inviato.</span><span class="sxs-lookup"><span data-stu-id="8267e-588">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the values specified by the `hostname` and `port` parameters and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="8267e-589">È possibile inviare datagrammi all'indirizzo di broadcast predefinita specificando "255.255.255.255" per il `hostname` valore del parametro.</span><span class="sxs-lookup"><span data-stu-id="8267e-589">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="8267e-590">Se si desidera inviare datagrammi da un altro indirizzo di broadcast, usare il <xref:System.Net.Sockets.UdpClient.Client%2A> metodo per ottenere l'oggetto sottostante <xref:System.Net.Sockets.Socket>e impostare l'opzione di socket <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8267e-590">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8267e-591">È anche possibile ripristinare l'utilizzo di <xref:System.Net.Sockets.Socket> classe.</span><span class="sxs-lookup"><span data-stu-id="8267e-591">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8267e-592">Non specificare un nome host o la porta numero da questo metodo se è già stato stabilito un host remoto con la <xref:System.Net.Sockets.UdpClient.Connect%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-592">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="8267e-593">Se esegue l'operazione, il <xref:System.Net.Sockets.UdpClient.Send%2A> metodo genererà un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8267e-593">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8267e-594">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-594">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8267e-595">Dopo aver ottenuto il codice, è possibile vedere le [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-595">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-596">Nell'esempio seguente viene illustrato il <xref:System.Net.Sockets.UdpClient.Send%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-596">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="8267e-597">In questo esempio Usa un nome host e un numero di porta per identificare l'host di destinazione.</span><span class="sxs-lookup"><span data-stu-id="8267e-597">This example uses a host name and a port number to identify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8267e-598">
            <paramref name="dgram" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-598">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8267e-599">
            <see cref="T:System.Net.Sockets.UdpClient" /> ha già stabilito un host remoto predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-599">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8267e-600">
            <see cref="T:System.Net.Sockets.UdpClient" /> è chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-600">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-601">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-601">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8267e-602">Invia un datagramma UDP in modo asincrono a un host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-602">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : byte[] * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="udpClient.SendAsync (datagram, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="8267e-603">Matrice di tipo <see cref="T:System.Byte" /> che specifica il datagramma UDP da inviare, rappresentato come una matrice di byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-603">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="8267e-604">Numero di byte nel datagramma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-604">The number of bytes in the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-605">Invia un datagramma UDP in modo asincrono a un host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-605">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8267e-606">Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-606">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-607">Questo overload invia datagrammi all'host remoto stabilite nel <xref:System.Net.Sockets.UdpClient.Connect%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-607">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="8267e-608">Se non si chiama <xref:System.Net.Sockets.UdpClient.Connect%2A> prima di chiamare questo overload, il metodo genererà un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8267e-608">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8267e-609">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-609">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8267e-610">Dopo aver ottenuto il codice, è possibile vedere le [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-610">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="8267e-611">Se si desidera inviare datagrammi da un altro host remoto, è necessario chiamare il <xref:System.Net.Sockets.UdpClient.Connect%2A> (metodo) e specificare l'host remoto desiderato.</span><span class="sxs-lookup"><span data-stu-id="8267e-611">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="8267e-612">Usare una delle altre <xref:System.Net.Sockets.UdpClient.SendAsync%2A> overload del metodo per inviare datagrammi a un indirizzo di broadcast.</span><span class="sxs-lookup"><span data-stu-id="8267e-612">Use either of the other <xref:System.Net.Sockets.UdpClient.SendAsync%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8267e-613">
            <paramref name="dgram" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-613">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8267e-614">
            <see cref="T:System.Net.Sockets.UdpClient" /> ha già stabilito un host remoto predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-614">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8267e-615">
            <see cref="T:System.Net.Sockets.UdpClient" /> è chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-615">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-616">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-616">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : byte[] * int * System.Net.IPEndPoint -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="udpClient.SendAsync (datagram, bytes, endPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="8267e-617">Matrice di tipo <see cref="T:System.Byte" /> che specifica il datagramma UDP da inviare, rappresentato come una matrice di byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-617">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="8267e-618">Numero di byte nel datagramma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-618">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="8267e-619">
            <see cref="T:System.Net.IPEndPoint" /> che rappresenta l'host e la porta a cui inviare il datagramma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-619">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-620">Invia un datagramma UDP in modo asincrono a un host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-620">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8267e-621">Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-621">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-622">Questo metodo invia datagrammi all'endpoint specificato.</span><span class="sxs-lookup"><span data-stu-id="8267e-622">This method sends datagrams to the specified endpoint.</span></span> <span data-ttu-id="8267e-623">Prima di chiamare questo overload, è necessario creare innanzitutto un <xref:System.Net.IPEndPoint> utilizzando il numero di porta e indirizzo IP dell'host remoto a cui verranno inviati i datagrammi.</span><span class="sxs-lookup"><span data-stu-id="8267e-623">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="8267e-624">È possibile inviare datagrammi per la trasmissione di predefinito di indirizzi, 255.255.255.255, specificando <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> per il <xref:System.Net.IPAddress.Address%2A> proprietà del <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="8267e-624">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="8267e-625">Dopo aver creato questo <xref:System.Net.IPEndPoint>, passare a questo metodo come la `endPoint` parametro.</span><span class="sxs-lookup"><span data-stu-id="8267e-625">After you have created this <xref:System.Net.IPEndPoint>, pass it to this method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="8267e-626">Se si desidera inviare datagrammi da un altro indirizzo di broadcast, usare il <xref:System.Net.Sockets.UdpClient.Client%2A> metodo per ottenere l'oggetto sottostante <xref:System.Net.Sockets.Socket>e impostare l'opzione di socket <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8267e-626">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8267e-627">È anche possibile ripristinare l'utilizzo di <xref:System.Net.Sockets.Socket> classe.</span><span class="sxs-lookup"><span data-stu-id="8267e-627">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="8267e-628">Non si specifica un `endPoint` parametro per questo metodo se è già stato stabilito un host remoto con la <xref:System.Net.Sockets.UdpClient.Connect%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-628">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="8267e-629">In caso contrario questo metodo genererà un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8267e-629">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8267e-630">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-630">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8267e-631">Dopo aver ottenuto il codice, è possibile vedere le [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-631">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8267e-632">
            <paramref name="dgram" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-632">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8267e-633">
            <see cref="T:System.Net.Sockets.UdpClient" /> ha già stabilito un host remoto predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-633">
              <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8267e-634">
            <see cref="T:System.Net.Sockets.UdpClient" /> è chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-634">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-635">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-635">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, hostname As String, port As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : byte[] * int * string * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="udpClient.SendAsync (datagram, bytes, hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="8267e-636">Matrice di tipo <see cref="T:System.Byte" /> che specifica il datagramma UDP da inviare, rappresentato come una matrice di byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-636">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="8267e-637">Numero di byte nel datagramma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-637">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="8267e-638">Nome dell'host remoto a cui si vuole inviare il datagramma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-638">The name of the remote host to which you intend to send the datagram.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8267e-639">Numero di porta remota con cui si vuole comunicare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-639">The remote port number with which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8267e-640">Invia un datagramma UDP in modo asincrono a un host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-640">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8267e-641">Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-641">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-642">Questo metodo invia datagrammi sui valori specificati per il `hostname` e `port` parametri.</span><span class="sxs-lookup"><span data-stu-id="8267e-642">This method sends datagrams to the values specified by the `hostname` and `port` parameters.</span></span> <span data-ttu-id="8267e-643">È possibile inviare datagrammi all'indirizzo di broadcast predefinita specificando "255.255.255.255" per il `hostname` valore del parametro.</span><span class="sxs-lookup"><span data-stu-id="8267e-643">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="8267e-644">Se si desidera inviare datagrammi da un altro indirizzo di broadcast, usare il <xref:System.Net.Sockets.UdpClient.Client%2A> metodo per ottenere l'oggetto sottostante <xref:System.Net.Sockets.Socket>e impostare l'opzione di socket <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8267e-644">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8267e-645">È anche possibile ripristinare l'utilizzo di <xref:System.Net.Sockets.Socket> classe.</span><span class="sxs-lookup"><span data-stu-id="8267e-645">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="8267e-646">Non specificare un nome host o la porta numero da questo metodo se è già stato stabilito un host remoto con la <xref:System.Net.Sockets.UdpClient.Connect%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8267e-646">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="8267e-647">In caso contrario questo metodo genererà un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8267e-647">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8267e-648">Se si riceve un <xref:System.Net.Sockets.SocketException>, usare <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> per ottenere il codice di errore specifico.</span><span class="sxs-lookup"><span data-stu-id="8267e-648">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8267e-649">Dopo aver ottenuto il codice, è possibile vedere le [codice di errore API Windows Sockets versione 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentazione per una descrizione dettagliata dell'errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-649">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8267e-650">
            <paramref name="dgram" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-650">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8267e-651">
            <see cref="T:System.Net.Sockets.UdpClient" /> ha già stabilito un host remoto predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-651">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8267e-652">
            <see cref="T:System.Net.Sockets.UdpClient" /> è chiuso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-652">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8267e-653">Si è verificato un errore durante l'accesso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-653">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ttl">
      <MemberSignature Language="C#" Value="public short Ttl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Ttl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Ttl" />
      <MemberSignature Language="VB.NET" Value="Public Property Ttl As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short Ttl { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.Ttl : int16 with get, set" Usage="System.Net.Sockets.UdpClient.Ttl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8267e-654">Ottiene o imposta un valore che specifica la durata (TTL) dei pacchetti IP inviati dall'oggetto <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-654">Gets or sets a value that specifies the Time to Live (TTL) value of Internet Protocol (IP) packets sent by the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8267e-655">La durata (TTL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="8267e-655">The TTL value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8267e-656">Il valore di durata (TTL) indica il numero massimo di router di un pacchetto può attraversare prima che il router scarta il pacchetto e un messaggio di protocollo ICMP (Internet Control) "TTL superato" viene restituito al mittente del messaggio di errore.</span><span class="sxs-lookup"><span data-stu-id="8267e-656">The TTL value indicates the maximum number of routers a packet can traverse before the router discards the packet and an Internet Control Message Protocol (ICMP) "TTL exceeded" error message is returned to the sender.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8267e-657">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Net.Sockets.UdpClient.Ttl%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="8267e-657">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Ttl%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>