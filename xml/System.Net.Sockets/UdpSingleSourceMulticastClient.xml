<Type Name="UdpSingleSourceMulticastClient" FullName="System.Net.Sockets.UdpSingleSourceMulticastClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22d8e0a33fcc708ac83a1356d04077ab35d0449c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460935" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpSingleSourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpSingleSourceMulticastClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpSingleSourceMulticastClient : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Destinatario client per il traffico multicast proveniente da una singola origine, noto anche come SSM (Source Specific Multicast).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario conoscere l'indirizzo di gruppo multicast e un indirizzo di origine del mittente.  
  
 Oltre a ricevere dati multicast da un mittente specifico, il <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> client può inoltre inviare dati unicast al mittente.  
  
 Per ricevere multicast provenienti da più origini, o quando le origini non sono noti in anticipo, utilizzare la <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> classe.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpSingleSourceMulticastClient (System.Net.IPAddress sourceAddress, System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress sourceAddress, class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceAddress As IPAddress, groupAddress As IPAddress, localPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpSingleSourceMulticastClient(System::Net::IPAddress ^ sourceAddress, System::Net::IPAddress ^ groupAddress, int localPort);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">Indirizzo di origine del mittente che può sottoscrivere questo ricevente.</param>
        <param name="groupAddress">Indirizzo di gruppo multicast che può sottoscrivere questo ricevente.</param>
        <param name="localPort">Porta locale per il binding di questo ricevente.</param>
        <summary>Crea un nuovo client UDP <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> in grado di sottoscrivere un indirizzo di gruppo e ricevere datagrammi da una singola origine.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> costruttore associa il socket di multicast UDP con un indirizzo di gruppo e una porta, ma non associare o in caso contrario, utilizzare il socket.  
  
 Il `groupAddress` parametro può essere IPv4 o IPv6 multicast indirizzo. Tuttavia, la famiglia di indirizzi del `sourceAddress` e `groupAddress` parametri devono essere identico.  
  
 Il `localPort` parametro non è necessario specificare una porta inferiore a 1024.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourceAddress" /> e <paramref name="groupAddress" /> devono appartenere alla stessa famiglia di indirizzi.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceAddress" /> è un riferimento null (Nothing in Visual Basic).  
  
 oppure  
  
 <paramref name="groupAddress" /> è un riferimento null (Nothing in Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="localPort" /> è minore di 0.  
  
 oppure  
  
 <paramref name="localPort" /> è maggiore di 65.535.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="localPort" /> è minore di 1024</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginJoinGroup (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginJoinGroup(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Metodo di callback da richiamare al completamento dell'operazione.</param>
        <param name="state">Informazioni di stato facoltative da passare al metodo <c>callback</c> per l'operazione.</param>
        <summary>Associa il socket e inizia un'operazione di join al gruppo multicast per consentire la ricezione dei datagrammi da parte di un indirizzo di origine singolo.</summary>
        <returns>Restituisce <see cref="T:System.IAsyncResult" />.  
  
 <see cref="T:System.IAsyncResult" /> che fa riferimento a questa operazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> metodo associa un socket multicast UDP a una porta locale e viene aggiunto un gruppo multicast per consentire la ricezione dei datagrammi da un indirizzo di origine singolo. Il gruppo multicast, indirizzo di origine singolo, porta locale da associare al vengono specificati l'indirizzo e nel <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> costruttore.  
  
 Il metodo specificato nella `callback` parametro viene richiamato quando viene completata l'operazione per aggiungere il gruppo multicast.  
  
 Se richiesto dal runtime, il <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> metodo esegue inoltre una verifica di criteri per verificare che il client può accedere il gruppo multicast. Se il client non è consentito l'accesso, un <xref:System.Net.Sockets.SocketException> viene generata un'eccezione con <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il gruppo multicast è già stato aggiunto o è in corso un'operazione di join.</exception>
        <exception cref="T:System.ObjectDisposedException">L'interfaccia <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> è stata eliminata.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromSource (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromSource(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFromSource (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFromSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Buffer per archiviare i dati ricevuti.</param>
        <param name="offset">Offset, in byte, dall'inizio del <c>buffer</c> in cui devono essere archiviati i dati.</param>
        <param name="count">Numero massimo di byte da ricevere e archiviare nel <c>buffer</c>.</param>
        <param name="callback">Metodo di callback da richiamare al completamento dell'operazione.</param>
        <param name="state">Informazioni di stato facoltative da passare al metodo <c>callback</c> per l'operazione.</param>
        <summary>Avvia l'operazione di ricezione di un pacchetto dal gruppo multicast unito e richiama il callback specificato quando arriva un pacchetto per il gruppo da un mittente specificato.</summary>
        <returns>Restituisce <see cref="T:System.IAsyncResult" />.  
  
 <see cref="T:System.IAsyncResult" /> che fa riferimento a questa operazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> metodo inizia un'operazione di ricezione di un pacchetto UDP dal gruppo multicast unito da un singolo mittente. La porta locale, un gruppo multicast e un indirizzo di origine mittente vengono specificate nel <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> costruttore. Il client multicast deve inoltre aver completato un join al gruppo multicast.  
  
 Il metodo specificato nella `callback` parametro viene richiamato quando ha ricevuto un pacchetto.  
  
 È possibile disporre di un errore socket se un'operazione di ricezione ha esito negativo in modo sincrono, anche se ciò è insolito con UDP. Se si verifica un errore di socket, un <xref:System.Net.Sockets.SocketException> viene generata un'eccezione. L'errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError> enumerazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> è un riferimento null (Nothing in Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> è minore di 0.  
  
 oppure  
  
 <paramref name="offset" /> è maggiore della lunghezza di <paramref name="buffer" />.  
  
 oppure  
  
 <paramref name="count" /> è minore di 0.  
  
 oppure  
  
 <paramref name="offset" /> più il conteggio è maggiore della lunghezza di <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">Il gruppo multicast non è ancora stato unito.</exception>
        <exception cref="T:System.ObjectDisposedException">L'interfaccia <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> è stata eliminata.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket per la ricezione.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToSource (byte[] buffer, int offset, int count, int remotePort, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToSource(unsigned int8[] buffer, int32 offset, int32 count, int32 remotePort, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendToSource (buffer As Byte(), offset As Integer, count As Integer, remotePort As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendToSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, int remotePort, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remotePort" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Buffer che contiene i dati da inviare.</param>
        <param name="offset">Offset, in byte, dall'inizio del <c>buffer</c> per leggere i dati da inviare.</param>
        <param name="count">Numero di byte da inviare dal <c>buffer</c>.</param>
        <param name="remotePort">Porta remota a cui viene inviato il pacchetto. L'indirizzo remoto è specificato dal costruttore <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" />.</param>
        <param name="callback">Metodo di callback da richiamare al completamento dell'operazione.</param>
        <param name="state">Informazioni di stato facoltative da passare al metodo <c>callback</c> per l'operazione.</param>
        <summary>Avvia l'operazione di invio di un pacchetto unicast per l'origine specificata in precedenza.</summary>
        <returns>Restituisce <see cref="T:System.IAsyncResult" />.  
  
 <see cref="T:System.IAsyncResult" /> che fa riferimento a questa operazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> metodo inizia un'operazione di invio di un pacchetto UDP per l'origine specificata in precedenza.  
  
 Alcuni protocolli utilizzano queste informazioni per passare al controllo del flusso di qualità del servizio statistiche o messaggi di ripristino.  
  
 Il metodo specificato nella `callback` parametro viene richiamato quando è stato inviato un pacchetto.  
  
 Il client è necessario aver completato un join al gruppo multicast.  
  
 Se la porta di destinazione specificato nella `remotePort` parametro è minore di 1024, un <xref:System.Net.Sockets.SocketException> viene generata un'eccezione con <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 È possibile disporre di un errore socket se un'operazione di invio ha esito negativo in modo sincrono, anche se ciò è insolito con UDP. Se si verifica un errore di socket, un <xref:System.Net.Sockets.SocketException> viene generata un'eccezione. L'errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError> enumerazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> è un riferimento null (Nothing in Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> è minore di 0.  
  
 oppure  
  
 <paramref name="offset" /> è maggiore della lunghezza di <paramref name="buffer" />.  
  
 oppure  
  
 <paramref name="count" /> è minore di 0.  
  
 oppure  
  
 <paramref name="offset" /> più il conteggio è maggiore della lunghezza di <paramref name="buffer" />.  
  
 oppure  
  
 <paramref name="remotePort" /> è minore di 0 o maggiore di 65.535.</exception>
        <exception cref="T:System.InvalidOperationException">Il gruppo multicast non è ancora stato unito.</exception>
        <exception cref="T:System.ObjectDisposedException">L'interfaccia <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> è stata eliminata.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Esce dal gruppo multicast e rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> e dell'oggetto <see cref="T:System.Net.Sockets.Socket" /> sottostante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare il metodo <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> dopo aver terminato di utilizzare l'oggetto <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. Il metodo <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> lascia l'oggetto <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> in una condizione di inutilizzabilità. Dopo la chiamata <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>, è necessario rilasciare tutti i riferimenti al <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> in modo che il garbage collector può recuperare la memoria che di <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> occupata.  
  
 Chiamare sempre il metodo <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> prima di rilasciare l'ultimo riferimento a <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> dell'oggetto <xref:System.Object.Finalize%2A> non viene richiamato dal Garbage Collector.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndJoinGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndJoinGroup(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Risultato dell'operazione di join asincrona.</param>
        <summary>Completa l'operazione asincrona Partecipa a gruppo in un gruppo multicast.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> metodo viene completato un binding asincrono a un'operazione di join e socket a un gruppo multicast.  
  
 Se richiesto dal runtime, il <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> metodo esegue inoltre una verifica di criteri per verificare che il client può accedere il gruppo multicast. Se il client non è consentito l'accesso, un <xref:System.Net.Sockets.SocketException> viene generata un'eccezione con <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 Se si verifica un errore socket durante l'esecuzione dell'operazione di gruppo di join, un <xref:System.Net.Sockets.SocketException> viene generata un'eccezione. L'errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError> enumerazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> è un riferimento null (Nothing in Visual Basic).</exception>
        <exception cref="T:System.ObjectDisposedException">L'interfaccia <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> è stata eliminata.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromSource">
      <MemberSignature Language="C#" Value="public int EndReceiveFromSource (IAsyncResult result, out int sourcePort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromSource(class System.IAsyncResult result, [out] int32&amp; sourcePort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFromSource (result As IAsyncResult, ByRef sourcePort As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFromSource(IAsyncResult ^ result, [Runtime::InteropServices::Out] int % sourcePort);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="sourcePort" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">Risultato dell'operazione di ricezione asincrona.</param>
        <param name="sourcePort">Endpoint di origine da cui è stato ricevuto il pacchetto.</param>
        <summary>Completa l'operazione asincrona di ricezione di un pacchetto dal gruppo multicast unito e fornisce le informazioni ricevute.</summary>
        <returns>Restituisce <see cref="T:System.Int32" />.  
  
 Lunghezza, in byte, del messaggio archiviato nel parametro <paramref name="buffer" /> passato al metodo <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> metodo completa un'operazione asincrona per ricevere un pacchetto da un'unica origine in un gruppo multicast.  
  
 Se si verifica un errore socket durante l'esecuzione dell'operazione di ricezione, una <xref:System.Net.Sockets.SocketException> viene generata un'eccezione. L'errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError> enumerazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> è un riferimento null (Nothing in Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Il gruppo multicast non è ancora stato unito.</exception>
        <exception cref="T:System.ObjectDisposedException">L'interfaccia <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> è stata eliminata.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToSource">
      <MemberSignature Language="C#" Value="public void EndSendToSource (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToSource(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendToSource (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendToSource(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Risultato dell'operazione di invio asincrona.</param>
        <summary>Completa l'operazione di invio di un pacchetto unicast a una singola origine.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A> metodo completa un'operazione asincrona per inviare un pacchetto a una singola origine specificata in precedenza.  
  
 Se si verifica un errore socket durante l'esecuzione dell'operazione di ricezione, una <xref:System.Net.Sockets.SocketException> viene generata un'eccezione. L'errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError> enumerazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> è un riferimento null (Nothing in Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Il gruppo multicast non è ancora stato unito.</exception>
        <exception cref="T:System.ObjectDisposedException">L'interfaccia <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> è stata eliminata.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante il tentativo di accesso al socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta le dimensioni, in byte, del buffer di ricezione dell'oggetto <see cref="T:System.Net.Sockets.Socket" /> usato per le operazioni di ricezione multicast in questa istanza di <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />.</summary>
        <value>Restituisce <see cref="T:System.Int32" />.  
  
 Dimensioni in byte del buffer di ricezione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `ReceiveBufferSize` proprietà ottiene o imposta la dimensione, in byte, del buffer di ricezione dell'oggetto sottostante <xref:System.Net.Sockets.Socket> utilizzato per le operazioni di ricezione multicast su questo <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> istanza. In particolare, il `ReceiveBufferSize` proprietà controlla le dimensioni del buffer utilizzato da parte dello stack quando arriva un pacchetto, ma l'applicazione non ha ancora chiamato il <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> metodo. Se questo buffer viene riempito e pacchetti ancora prima l'applicazione chiama il <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> e <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> metodi, i pacchetti precedenti verranno eliminati. L'applicazione non sarà in grado di ricevere i pacchetti precedenti e riceveranno i pacchetti più recenti quando si chiama il <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> metodo.  
  
 Le dimensioni predefinite del buffer di ricezione in Windows sono 8192.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le dimensioni del buffer specificate sono minori di 0.</exception>
        <exception cref="T:System.InvalidOperationException">Il gruppo multicast non è ancora stato unito.</exception>
        <exception cref="T:System.ObjectDisposedException">L'interfaccia <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> è stata eliminata.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta le dimensioni, in byte, del buffer di invio dell'oggetto <see cref="T:System.Net.Sockets.Socket" /> usato per le operazioni di invio multicast in questa istanza di <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />.</summary>
        <value>Restituisce <see cref="T:System.Int32" />.  
  
 Dimensioni in byte del buffer di invio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ottiene o imposta la dimensione, in byte, del buffer di invio dell'oggetto sottostante di SendBufferSize-proprietà <xref:System.Net.Sockets.Socket> utilizzato per le operazioni di invio multicast su questo <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> istanza.  
  
 In Mac OS X, il <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> controlla la proprietà può essere il numero di byte nel buffer in attesa di invio di stack di rete prima di eventuali chiamate aggiuntive dal <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> metodo ha esito negativo. Le applicazioni in Mac OS X potrebbero essere necessario occuparsi di questa proprietà se si inviano un numero elevato di pacchetti UDP in un intervallo di tempo breve.  
  
 In Windows, le chiamate al <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> metodo richiederà più tempo per chiamare il callback in base al valore di <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> proprietà se il buffer di trasmissione è pieno. Il <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> proprietà controlla solo se il buffer utente rimane bloccato nella memoria fisica finché non viene completata la trasmissione.  
  
 Le dimensioni predefinite del buffer di invio in Windows sono 8192.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le dimensioni del buffer specificate sono minori di 0.</exception>
        <exception cref="T:System.InvalidOperationException">Il gruppo multicast non è ancora stato unito.</exception>
        <exception cref="T:System.ObjectDisposedException">L'interfaccia <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> è stata eliminata.</exception>
      </Docs>
    </Member>
  </Members>
</Type>