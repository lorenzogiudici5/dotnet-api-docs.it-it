<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TcpClient.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f0b32dcca3fd97eae4e5ede9f35c940ea0ad6c30.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0b32dcca3fd97eae4e5ede9f35c940ea0ad6c30</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Provides client connections for TCP network services.</source>
          <target state="translated">Fornisce connessioni client per i servizi di rete TCP.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class provides simple methods for connecting, sending, and receiving stream data over a network in synchronous blocking mode.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> classe fornisce metodi semplici per la connessione, l'invio, e la ricezione flusso di dati in rete in modalità di blocco sincrono.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>In order for <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> to connect and exchange data, a <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> created with the TCP <ph id="ph4">&lt;xref:System.Net.Sockets.ProtocolType&gt;</ph> must be listening for incoming connection requests.</source>
          <target state="translated">Affinché <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> potersi collegare e scambiare dati, un <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> o <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> creato con il protocollo TCP <ph id="ph4">&lt;xref:System.Net.Sockets.ProtocolType&gt;</ph> deve essere in ascolto delle richieste di connessione in ingresso.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>You can connect to this listener in one of the following two ways:</source>
          <target state="translated">È possibile connettersi al listener in uno dei due modi seguenti:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Create a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and call one of the three available <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> methods.</source>
          <target state="translated">Creare un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> e chiamare uno dei tre disponibili <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> metodi.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Create a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> using the host name and port number of the remote host.</source>
          <target state="translated">Creare un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> utilizzando il nome host e numero di porta dell'host remoto.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>This constructor will automatically attempt a connection.</source>
          <target state="translated">Questo costruttore tenterà automaticamente una connessione.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>If you want to send connectionless datagrams in synchronous blocking mode, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class.</source>
          <target state="translated">Se si desidera inviare datagrammi senza connessione in modalità di blocco sincrona, utilizzare la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>The following code example establishes a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> connection.</source>
          <target state="translated">Esempio di codice seguente consente di stabilire un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> connessione.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Permission to establish an outgoing connection or accept an incoming request.</source>
          <target state="translated">Autorizzazione per stabilire una connessione in uscita o accettare una richiesta in ingresso.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>To send and receive data, use the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpClient.GetStream" /&gt;</ph> method to obtain a <ph id="ph2">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>.</source>
          <target state="translated">Per inviare e ricevere dati, utilizzare il <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpClient.GetStream" /&gt;</ph> per ottenere un <ph id="ph2">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Call the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> methods of the <ph id="ph3">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> to send and receive data with the remote host.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> metodi di <ph id="ph3">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> per inviare e ricevere dati con l'host remoto.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /&gt;</ph> method to release all resources associated with the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /&gt;</ph> metodo per rilasciare tutte le risorse associate di <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and allows the underlying service provider to assign the most appropriate local IP address and port number.</source>
          <target state="translated">Questo costruttore crea un nuovo <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> e consente al provider del servizio sottostante assegnare il numero porta e indirizzo IP locale più appropriato.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>You must first call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method before sending and receiving data.</source>
          <target state="translated">È necessario chiamare prima il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> metodo prima di inviare e ricevere dati.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>This constructor works only with IPv4 address types.</source>
          <target state="translated">Questo costruttore funziona solo con tipi di indirizzi IPv4.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>traccia di rete in .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>The following code example demonstrates how to use the default constructor to create a new <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come utilizzare il costruttore predefinito per creare un nuovo <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> to which you bind the TCP <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> a cui associare l'oggetto <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> TCP.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class and binds it to the specified local endpoint.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> e la associa all'endpoint locale specificato.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and binds it to the <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> specified by the <ph id="ph3">`localEP`</ph> parameter.</source>
          <target state="translated">Questo costruttore crea un nuovo <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> e li associa al <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> specificato per il <ph id="ph3">`localEP`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>Before you call this constructor, you must create an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> using the IP address and port number from which you intend to send and receive data.</source>
          <target state="translated">Prima di chiamare questo costruttore, è necessario creare un <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> utilizzando il numero di porta e indirizzo IP da cui si desidera inviare e ricevere dati.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>You do not need to specify a local IP address and port number before connecting and communicating.</source>
          <target state="translated">Non è necessario specificare un numero di porta e indirizzo IP locale prima di connessione e la comunicazione.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>If you create a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> using any other constructor, the underlying service provider will assign the most appropriate local IP address and port number.</source>
          <target state="translated">Se si crea un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> utilizzando un altro costruttore, il provider del servizio sottostante assegnerà il numero porta e indirizzo IP locale più appropriato.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>You must call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method before sending and receiving data.</source>
          <target state="translated">È necessario chiamare il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> metodo prima di inviare e ricevere dati.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>traccia di rete in .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>The following code example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class using a local endpoint.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come creare un'istanza di <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> classe utilizzando un endpoint locale.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>The  <ph id="ph1">&lt;paramref name="localEP" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="localEP" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.IPAddress.AddressFamily" /&gt;</ph> of the IP protocol.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.IPAddress.AddressFamily" /&gt;</ph> del protocollo IP.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class with the specified family.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> con la famiglia specificata.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>traccia di rete in .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The following code example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come creare un'istanza di <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">&lt;paramref name="family" /&gt;</ph> parameter is not equal to AddressFamily.InterNetwork</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="family" /&gt;</ph> non è uguale a AddressFamily.InterNetwork</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">&lt;paramref name="family" /&gt;</ph> parameter is not equal to AddressFamily.InterNetworkV6</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="family" /&gt;</ph> non è uguale a AddressFamily.InterNetworkV6</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The DNS name of the remote host to which you intend to connect.</source>
          <target state="translated">Nome DNS dell'host remoto a cui si intende connettersi.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The port number of the remote host to which you intend to connect.</source>
          <target state="translated">Numero di porta dell'host remoto a cui si intende connettersi.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class and connects to the specified port on the specified host.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> ed effettua la connessione alla porta specificata sull'host specificato.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and makes a synchronous connection attempt to the provided host name and port number.</source>
          <target state="translated">Questo costruttore crea un nuovo <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> ed effettua una connessione sincrona tentativo con il nome host specificato e il numero di porta.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The underlying service provider will assign the most appropriate local IP address and port number.</source>
          <target state="translated">Il provider del servizio sottostante assegnerà il numero porta e indirizzo IP locale più appropriato.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> will block until it either connects or fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> verrà bloccata finché si connette o si verifica un errore.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>This constructor allows you to initialize, resolve the DNS host name, and connect in one convenient step.</source>
          <target state="translated">Questo costruttore consente di inizializzare, risolvere il nome host DNS e la connessione in un solo passaggio.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>If IPv6 is enabled and the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</source>
          <target state="translated">Se IPv6 è abilitato e <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph> metodo viene chiamato per connettersi a un host che si risolve in IPv6 e gli indirizzi IPv4, la connessione all'indirizzo IPv6 verrà tentata prima l'indirizzo IPv4.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</source>
          <target state="translated">Ciò può avere l'effetto di ritardare il tempo necessario per stabilire la connessione se l'host non è in ascolto sull'indirizzo IPv6.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>traccia di rete in .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The following code example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class using a host name and port number.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come creare un'istanza di <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> classe utilizzando un nome host e il numero di porta.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> parameter is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="port" /&gt;</ph> non è compreso tra <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> e <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>Gets or set a value that indicates whether a connection has been made.</source>
          <target state="translated">Ottiene o imposta un valore che indica se è stata stabilita una connessione.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the connection has been made; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se la connessione è stata stabilita; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>Classes deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> can use this property to determine if a connection attempt has succeeded.</source>
          <target state="translated">Le classi che derivano da <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> possibile utilizzare questa proprietà per determinare se un tentativo di connessione ha avuto esito positivo.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>It does not monitor the ongoing connection state of <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</source>
          <target state="translated">Non effettua il monitoraggio stato di connessione in corso di <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>If the remote host closes the connection, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Active%2A&gt;</ph> will not be updated.</source>
          <target state="translated">Se l'host remoto chiude la connessione, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Active%2A&gt;</ph> non verrà aggiornato.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>If you are deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and require closer attention to the connection state, use the <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Connected%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> method.</source>
          <target state="translated">Se si deriva da <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> e richiedono maggiore attenzione allo stato della connessione, utilizzare il <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Connected%2A&gt;</ph> proprietà del <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> restituito dal <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>Gets the amount of data that has been received from the network and is available to be read.</source>
          <target state="translated">Ottiene la quantità dei dati ricevuti dalla rete e disponibili per essere letti.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>The number of bytes of data received from the network and available to be read.</source>
          <target state="translated">Numero di byte di dati ricevuti dalla rete e disponibili per essere letti.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> is a way to determine whether data is queued for reading.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> è un modo per determinare se i dati sono accodati per la lettura.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>If data is available, call <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> to get the data.</source>
          <target state="translated">Se sono disponibili i dati, chiamare <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> per ottenere i dati.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>The available data is the total amount of data queued in the network buffer for reading.</source>
          <target state="translated">I dati disponibili sono che la quantità totale di dati accodati nel buffer di rete per la lettura.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>If no data is queued in the network buffer, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> returns 0.</source>
          <target state="translated">Se non sono accodati dati nel buffer di rete, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> restituisce 0.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>If the remote host shuts down or closes the connection, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> may throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Se l'host remoto viene arrestato o chiude la connessione, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> può generare un <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept> for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codici di errore dell'API di Windows Sockets versione 2 disponibile in MSDN library al <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept> per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> property.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Si è verificato un errore durante il tentativo di accesso al socket.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> è stato chiuso.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Begins an asynchronous request for a remote host connection.</source>
          <target state="translated">Avvia una richiesta asincrona di una connessione all'host remoto.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> dell'host remoto.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number of the remote host.</source>
          <target state="translated">Numero di porta dell'host remoto.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Delegato <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the connect operation.</source>
          <target state="translated">Oggetto definito dall'utente che contiene informazioni sull'operazione di connessione.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Questo oggetto viene passato al delegato <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request for a remote host connection.</source>
          <target state="translated">Avvia una richiesta asincrona di una connessione all'host remoto.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The remote host is specified by an <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> and a port number (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</source>
          <target state="translated">L'host remoto viene specificato da un <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> e da un numero di porta (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous connection.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> che fa riferimento alla connessione asincrona.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> method.</source>
          <target state="translated">Asincrona <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> operazione deve essere completata chiamando il <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">In genere, il metodo viene richiamato dal <ph id="ph1">`asyncCallback`</ph> delegato.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation completes.</source>
          <target state="translated">Questo metodo si blocca fino al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method overloads.</source>
          <target state="translated">Per il blocco fino al completamento dell'operazione, utilizzare uno del <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> overload del metodo.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere <bpt id="p1">[</bpt>la chiamata dei metodi sincroni<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and connects to a remote host.</source>
          <target state="translated">L'esempio di codice seguente crea un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> e si connette a un host remoto.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="address" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="address" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Si è verificato un errore durante il tentativo di accesso al socket.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> è stato chiuso.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">Un chiamante di livello superiore nello stack di chiamate non ha l'autorizzazione per l'operazione richiesta.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number is not valid.</source>
          <target state="translated">Il numero di porta non è valido.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>At least one <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> that designates the remote hosts.</source>
          <target state="translated">Almeno un <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>, che specifica gli host remoti.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number of the remote hosts.</source>
          <target state="translated">Numero di porta degli host remoti.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Delegato <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the connect operation.</source>
          <target state="translated">Oggetto definito dall'utente che contiene informazioni sull'operazione di connessione.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Questo oggetto viene passato al delegato <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request for a remote host connection.</source>
          <target state="translated">Avvia una richiesta asincrona di una connessione all'host remoto.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The remote host is specified by an <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> array and a port number (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</source>
          <target state="translated">L'host remoto viene specificato da una matrice di <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> e da un numero di porta (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous connection.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> che fa riferimento alla connessione asincrona.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> method.</source>
          <target state="translated">Asincrona <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> operazione deve essere completata chiamando il <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">In genere, il metodo viene richiamato dal <ph id="ph1">`asyncCallback`</ph> delegato.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation completes.</source>
          <target state="translated">Questo metodo si blocca fino al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method overloads.</source>
          <target state="translated">Per il blocco fino al completamento dell'operazione, utilizzare uno del <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> overload del metodo.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere <bpt id="p1">[</bpt>la chiamata dei metodi sincroni<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This method is typically used immediately after a call to the <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> method, which can return multiple IP addresses for a single host.</source>
          <target state="translated">Questo metodo viene in genere utilizzato immediatamente dopo una chiamata al <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> (metodo), che può restituire più indirizzi IP per un singolo host.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and connects to a remote host.</source>
          <target state="translated">L'esempio di codice seguente crea un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> e si connette a un host remoto.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="addresses" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="addresses" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Si è verificato un errore durante il tentativo di accesso al socket.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> è stato chiuso.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">Un chiamante di livello superiore nello stack di chiamate non ha l'autorizzazione per l'operazione richiesta.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number is not valid.</source>
          <target state="translated">Il numero di porta non è valido.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The name of the remote host.</source>
          <target state="translated">Il nome dell'host remoto.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number of the remote host.</source>
          <target state="translated">Numero di porta dell'host remoto.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Delegato <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the connect operation.</source>
          <target state="translated">Oggetto definito dall'utente che contiene informazioni sull'operazione di connessione.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Questo oggetto viene passato al delegato <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request for a remote host connection.</source>
          <target state="translated">Avvia una richiesta asincrona di una connessione all'host remoto.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The remote host is specified by a host name (<ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>) and a port number (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</source>
          <target state="translated">L'host remoto viene specificato da un nome host (<ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>) e da un numero di porta (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous connection.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> che fa riferimento alla connessione asincrona.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> method.</source>
          <target state="translated">Asincrona <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> operazione deve essere completata chiamando il <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">In genere, il metodo viene richiamato dal <ph id="ph1">`asyncCallback`</ph> delegato.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation completes.</source>
          <target state="translated">Questo metodo si blocca fino al completamento dell'operazione.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method overloads.</source>
          <target state="translated">Per il blocco fino al completamento dell'operazione, utilizzare uno del <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> overload del metodo.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere <bpt id="p1">[</bpt>la chiamata dei metodi sincroni<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and connects to a remote host.</source>
          <target state="translated">L'esempio di codice seguente crea un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> e si connette a un host remoto.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="host" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="host" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Si è verificato un errore durante il tentativo di accesso al socket.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> è stato chiuso.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">Un chiamante di livello superiore nello stack di chiamate non ha l'autorizzazione per l'operazione richiesta.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number is not valid.</source>
          <target state="translated">Il numero di porta non è valido.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>Gets or sets the underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Ottiene o imposta l'oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> sottostante.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>The underlying network <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> di rete sottostante.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> creates a <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> to send and receive data over a network.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> Crea un <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> per inviare e ricevere dati in rete.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>Classes deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> can use this property to get or set this <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">Le classi che derivano da <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> questa proprietà consente di ottenere o impostare questo <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>Use the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returned from <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> if you require access beyond that which <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> provides.</source>
          <target state="translated">Utilizzare sottostante <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> restituito da <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> se è necessario un accesso diverso da quello <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> fornisce.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>You can also use <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> to set the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> to an existing <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">È inoltre possibile utilizzare <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> impostare sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> esistente <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>This might be useful if you want to take advantage of the simplicity of <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> using a pre-existing <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">Questo potrebbe essere utile se si desidera sfruttare la semplicità di <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> utilizzando una già esistente <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> property.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo del <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>In this example, the receive buffer size of the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> is changed.</source>
          <target state="translated">In questo esempio, la dimensione del buffer di ricezione dell'oggetto sottostante <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> viene modificato.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>Disposes this <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> instance and requests that the underlying TCP connection be closed.</source>
          <target state="translated">Elimina questa istanza di <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> e richiede che la connessione TCP sottostante venga chiusa.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method marks the instance as disposed and requests that the associated <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> close the TCP connection.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> metodo contrassegna l'istanza come eliminata e richiede che l'oggetto associato <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> chiudere la connessione TCP.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>Based on the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property, the TCP connection may stay open for some time after the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method is called when data remains to be sent.</source>
          <target state="translated">In base il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> proprietà, la connessione TCP può rimanere aperta per qualche tempo dopo il <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> metodo viene chiamato quando i dati rimangono da inviare.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>There is no notification provided when the underlying connection has completed closing.</source>
          <target state="translated">Non è fornita alcuna notifica quando la connessione sottostante ha completato la chiusura.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>Calling this method will eventually result in the close of the associated <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> and will also close the associated <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> that is used to send and receive data if one was created.</source>
          <target state="translated">Chiamare questo metodo causa la chiusura dell'oggetto associato <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> e verranno inoltre chiuse associato <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> utilizzato per inviare e ricevere dati se ne è stato creato.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>traccia di rete in .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>The following code example demonstrates closing a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrata la chiusura un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> chiamando il <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Connects the client to a remote TCP host using the specified host name and port number.</source>
          <target state="translated">Connette il client a un host TCP remoto usando il nome host e il numero di porta specificati.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> to which you intend to connect.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> a cui si intende connettersi.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Connects the client to a remote TCP host using the specified remote network endpoint.</source>
          <target state="translated">Connette il client a un host TCP remoto usando l'endpoint remoto della rete specificato.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Call this method to establish a synchronous remote host connection to the specified <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</source>
          <target state="translated">Chiamare questo metodo per stabilire una connessione sincrona dell'host remoto specificato <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Before you call <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> you must create an instance of the <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> class using an IP address and a port number.</source>
          <target state="translated">Prima di chiamare <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> è necessario creare un'istanza di <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> classe utilizzando un indirizzo IP e un numero di porta.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> as the <ph id="ph2">`remoteEP`</ph> parameter.</source>
          <target state="translated">Utilizzare questo <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> come il <ph id="ph2">`remoteEP`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method will block until it either connects or fails.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> metodo verrà bloccato fino a quando la connessione avrà esito positivo o negativo.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Dopo la connessione all'host remoto, utilizzare il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> per ottenere l'oggetto sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">Utilizzare questo <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> per inviare e ricevere dati.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept></source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>traccia di rete in .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept></target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The following code example uses an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> to connect with a remote host.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare un <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> per connettersi a un host remoto.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;paramref name="remoteEp" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="remoteEp" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> è chiuso.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the host to which you intend to connect.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> dell'host a cui si intende connettersi.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The port number to which you intend to connect.</source>
          <target state="translated">Numero di porta a cui si intende connettersi.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Connects the client to a remote TCP host using the specified IP address and port number.</source>
          <target state="translated">Connette il client a un host TCP remoto usando l'indirizzo IP e il numero di porta specificati.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the specified <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> and port number.</source>
          <target state="translated">Chiamare questo metodo per stabilire una connessione sincrona dell'host remoto specificato <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> e numero di porta.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method will block until it either connects or fails.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> metodo verrà bloccato fino a quando la connessione avrà esito positivo o negativo.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Dopo la connessione all'host remoto, utilizzare il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> per ottenere l'oggetto sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">Utilizzare questo <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> per inviare e ricevere dati.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>traccia di rete in .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The following code example uses an IP Address and port number to connect with a remote host.</source>
          <target state="translated">Esempio di codice seguente usa un indirizzo IP e numero di porta per connettersi a un host remoto.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="address" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="address" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> non è compreso tra <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> e <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> è chiuso.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> array of the host to which you intend to connect.</source>
          <target state="translated">Matrice di <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> dell'host a cui si intende connettersi.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The port number to which you intend to connect.</source>
          <target state="translated">Numero di porta a cui si intende connettersi.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>Connects the client to a remote TCP host using the specified IP addresses and port number.</source>
          <target state="translated">Connette il client a un host TCP remoto usando gli indirizzi IP e il numero di porta specificati.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>This method is typically used immediately after a call to the <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> method, which can return multiple IP addresses for a single host.</source>
          <target state="translated">Questo metodo viene in genere utilizzato immediatamente dopo una chiamata al <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> (metodo), che può restituire più indirizzi IP per un singolo host.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method to establish a synchronous remote host connection to the host specified by the array of <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> elements and the port number.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> metodo per stabilire una connessione sincrona dell'host remoto all'host specificato dalla matrice di <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> elementi e il numero di porta.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method will block until it either connects or fails.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> metodo verrà bloccato fino a quando la connessione avrà esito positivo o negativo.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Dopo la connessione all'host remoto, utilizzare il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> per ottenere l'oggetto sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">Utilizzare questo <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> per inviare e ricevere dati.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept> for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codici di errore dell'API di Windows Sockets versione 2 disponibile in MSDN library al <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept> per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>traccia di rete in .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The following code example uses an IP Address and port number to connect with a remote host.</source>
          <target state="translated">Esempio di codice seguente usa un indirizzo IP e numero di porta per connettersi a un host remoto.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="ipAddresses" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="ipAddresses" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The port number is not valid.</source>
          <target state="translated">Il numero di porta non è valido.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Si è verificato un errore durante il tentativo di accesso al socket.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> è stato chiuso.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">Un chiamante di livello superiore nello stack di chiamate non ha l'autorizzazione per l'operazione richiesta.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>This method is valid for sockets that use the <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> flag or the <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph> flag.</source>
          <target state="translated">Questo metodo è valido per i socket che utilizzano il flag <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> o <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The DNS name of the remote host to which you intend to connect.</source>
          <target state="translated">Nome DNS dell'host remoto a cui si intende connettersi.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The port number of the remote host to which you intend to connect.</source>
          <target state="translated">Numero di porta dell'host remoto a cui si intende connettersi.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>Connects the client to the specified port on the specified host.</source>
          <target state="translated">Connette il client alla porta specificata sull'host specificato.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the specified host name and port number.</source>
          <target state="translated">Chiamare questo metodo per stabilire una connessione sincrona dell'host remoto per il nome host specificato e il numero di porta.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method will block until it either connects or fails.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> metodo verrà bloccato fino a quando la connessione avrà esito positivo o negativo.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Dopo la connessione all'host remoto, utilizzare il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> per ottenere l'oggetto sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">Utilizzare questo <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> per inviare e ricevere dati.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>If IPv6 is enabled and the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29&gt;</ph> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</source>
          <target state="translated">Se IPv6 è abilitato e <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29&gt;</ph> metodo viene chiamato per connettersi a un host che si risolve in IPv6 e gli indirizzi IPv4, la connessione all'indirizzo IPv6 verrà tentata prima l'indirizzo IPv4.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</source>
          <target state="translated">Ciò può avere l'effetto di ritardare il tempo necessario per stabilire la connessione se l'host non è in ascolto sull'indirizzo IPv6.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>traccia di rete in .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The following code example uses the host name and port number to connect with a remote host.</source>
          <target state="translated">Il codice seguente viene utilizzato il nome host e la porta numero per la connessione a un host remoto.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> parameter is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="port" /&gt;</ph> non è compreso tra <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> e <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> è chiuso.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</source>
          <target state="translated">Connette il client a un host TCP remoto usando il nome host e il numero di porta specificati come operazione asincrona.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the host to which you intend to connect.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> dell'host a cui si intende connettersi.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The port number to which you intend to connect.</source>
          <target state="translated">Numero di porta a cui si intende connettersi.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</source>
          <target state="translated">Connette il client a un host TCP remoto usando l'indirizzo IP e il numero di porta specificati come operazione asincrona.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Oggetto dell'attività che rappresenta l'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>This operation will not block.</source>
          <target state="translated">Questa operazione non verrà bloccata.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The returned Returns <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the TCP connection has been established.</source>
          <target state="translated">Restituisce i restituito <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> oggetto verrà completata dopo aver stabilita la connessione TCP.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>This method does not block the calling thread while the connection request is underway.</source>
          <target state="translated">Questo metodo non blocca il thread chiamante, mentre la richiesta di connessione è in corso.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the specified <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> and port number as an asynchronous operation.</source>
          <target state="translated">Chiamare questo metodo per stabilire una connessione sincrona dell'host remoto specificato <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> e il numero di porta come operazione asincrona.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Dopo la connessione all'host remoto, utilizzare il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> per ottenere l'oggetto sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">Utilizzare questo <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> per inviare e ricevere dati.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>traccia di rete in .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="address" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="address" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> non è compreso tra <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> e <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> è chiuso.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> array of the host to which you intend to connect.</source>
          <target state="translated">Matrice di <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> dell'host a cui si intende connettersi.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The port number to which you intend to connect.</source>
          <target state="translated">Numero di porta a cui si intende connettersi.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</source>
          <target state="translated">Connette il client a un host TCP remoto usando gli indirizzi IP e il numero di porta specificati come operazione asincrona.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Oggetto dell'attività che rappresenta l'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This operation will not block.</source>
          <target state="translated">Questa operazione non verrà bloccata.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The returned Returns <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the TCP connection has been established.</source>
          <target state="translated">Restituisce i restituito <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> oggetto verrà completata dopo aver stabilita la connessione TCP.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This method does not block the calling thread while the connection request is underway.</source>
          <target state="translated">Questo metodo non blocca il thread chiamante, mentre la richiesta di connessione è in corso.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This method is typically used immediately after a call to the <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> method, which can return multiple IP addresses for a single host.</source>
          <target state="translated">Questo metodo viene in genere utilizzato immediatamente dopo una chiamata al <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> (metodo), che può restituire più indirizzi IP per un singolo host.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the host specified by the array of <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> elements and the port number as an asynchronous operation.</source>
          <target state="translated">Chiamare questo metodo per stabilire una connessione sincrona dell'host remoto all'host specificato dalla matrice di <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> elementi e il numero di porta come operazione asincrona.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Dopo la connessione all'host remoto, utilizzare il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> per ottenere l'oggetto sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">Utilizzare questo <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> per inviare e ricevere dati.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept> for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codici di errore dell'API di Windows Sockets versione 2 disponibile in MSDN library al <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept> per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>traccia di rete in .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="ipAddresses" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="ipAddresses" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The port number is not valid.</source>
          <target state="translated">Il numero di porta non è valido.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Si è verificato un errore durante il tentativo di accesso al socket.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> è stato chiuso.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">Un chiamante di livello superiore nello stack di chiamate non ha l'autorizzazione per l'operazione richiesta.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This method is valid for sockets that use the <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> flag or the <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph> flag.</source>
          <target state="translated">Questo metodo è valido per i socket che utilizzano il flag <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> o <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The DNS name of the remote host to which you intend to connect.</source>
          <target state="translated">Nome DNS dell'host remoto a cui si intende connettersi.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The port number of the remote host to which you intend to connect.</source>
          <target state="translated">Numero di porta dell'host remoto a cui si intende connettersi.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>Connects the client to the specified TCP port on the specified host as an asynchronous operation.</source>
          <target state="translated">Connette il client alla porta TCP specificata sull'host specificato come operazione asincrona.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Oggetto dell'attività che rappresenta l'operazione asincrona.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>This operation will not block.</source>
          <target state="translated">Questa operazione non verrà bloccata.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The returned Returns <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the TCP connection has been established.</source>
          <target state="translated">Restituisce i restituito <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> oggetto verrà completata dopo aver stabilita la connessione TCP.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>This method does not block the calling thread while the connection request is underway.</source>
          <target state="translated">Questo metodo non blocca il thread chiamante, mentre la richiesta di connessione è in corso.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the specified host name and port number as an asynchronous operation.</source>
          <target state="translated">Chiamare questo metodo per stabilire una connessione sincrona dell'host remoto per il nome host specificato e la porta numero come operazione asincrona.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Dopo la connessione all'host remoto, utilizzare il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> per ottenere l'oggetto sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">Utilizzare questo <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> per inviare e ricevere dati.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>If IPv6 is enabled and the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29&gt;</ph> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</source>
          <target state="translated">Se IPv6 è abilitato e <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29&gt;</ph> metodo viene chiamato per connettersi a un host che si risolve in IPv6 e gli indirizzi IPv4, la connessione all'indirizzo IPv6 verrà tentata prima l'indirizzo IPv4.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</source>
          <target state="translated">Ciò può avere l'effetto di ritardare il tempo necessario per stabilire la connessione se l'host non è in ascolto sull'indirizzo IPv6.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>traccia di rete in .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> parameter is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="port" /&gt;</ph> non è compreso tra <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> e <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Si è verificato un errore durante l'accesso al socket.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> è chiuso.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>Gets a value indicating whether the underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> for a <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is connected to a remote host.</source>
          <target state="translated">Ottiene un valore che indica se l'oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> sottostante di un oggetto <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> è connesso a un host remoto.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Net.Sockets.TcpClient.Client" /&gt;</ph> socket was connected to a remote resource as of the most recent operation; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il socket <ph id="ph2">&lt;see cref="P:System.Net.Sockets.TcpClient.Client" /&gt;</ph> è stato connesso a una risorsa remota nel corso dell'operazione più recente, in caso contrario <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connected%2A&gt;</ph> property gets the connection state of the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> socket as of the last I/O operation.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connected%2A&gt;</ph> proprietà ottiene lo stato della connessione di <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> socket nel corso dell'ultima operazione dei / o.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>When it returns <ph id="ph1">`false`</ph>, the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> socket was either never connected, or is no longer connected.</source>
          <target state="translated">Quando restituisce <ph id="ph1">`false`</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> socket non si era mai connesso o non è più connesso.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>Because the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connected%2A&gt;</ph> property only reflects the state of the connection as of the most recent operation, you should attempt to send or receive a message to determine the current state.</source>
          <target state="translated">Poiché il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connected%2A&gt;</ph> proprietà riflette solo lo stato della connessione nel corso dell'operazione più recente, è consigliabile tentare di inviare o ricevere un messaggio per determinare lo stato corrente.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>After the message send fails, this property no longer returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Dopo l'invio del messaggio ha esito negativo, questa proprietà non restituisce più <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>Note that this behavior is by design.</source>
          <target state="translated">Si noti che questo comportamento è strutturale.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>You cannot reliably test the state of the connection because, in the time between the test and a send/receive, the connection could have been lost.</source>
          <target state="translated">È possibile verificare lo stato della connessione in modo affidabile poiché, nel periodo di tempo tra il test e di invio/ricezione, la connessione potrebbe essere andato persa.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>Your code should assume the socket is connected, and gracefully handle failed transmissions.</source>
          <target state="translated">Il codice deve presupporre il socket è connesso e normalmente le trasmissioni non riuscite di handle.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>The following code example connects to a remote endpoint and then verifies the connection.</source>
          <target state="translated">Esempio di codice seguente si connette a un endpoint remoto e quindi si verifica la connessione.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Dispose">
          <source>Releases the managed and unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</source>
          <target state="translated">Rilascia le risorse gestite e non gestite usate dall'oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>Set to <ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Impostare su <ph id="ph1">&lt;see langword="true" /&gt;</ph> per rilasciare sia le risorse gestite sia quelle non gestite; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per rilasciare solo le risorse non gestite.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Rilascia le risorse non gestite usate da <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> e, facoltativamente, le risorse gestite.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Questo metodo viene chiamato dal metodo pubblico <ph id="ph1">`Dispose()`</ph> (metodo) e <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes this method with the <ph id="ph2">`disposing`</ph> parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> richiama il metodo con il <ph id="ph2">`disposing`</ph> parametro impostato su <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes this method with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> richiama il metodo con <ph id="ph2">`disposing`</ph> impostato su <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> references.</source>
          <target state="translated">Se il parametro <ph id="ph1">`disposing`</ph> è <ph id="ph2">`true`</ph>, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti a cui la classe <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> fa riferimento.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>It does this by invoking the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">A tale scopo, viene chiamata la <ph id="ph1">`Dispose()`</ph> metodo di ciascun oggetto cui viene fatto riferimento.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>traccia di rete in .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> può essere chiamato più volte da altri oggetti.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">In caso di override di <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, non fare riferimento a oggetti già eliminati in una chiamata precedente a <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su come implementare <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, vedere <bpt id="p1">[</bpt>implementazione di un metodo Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>si esegue l'override del metodo Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object returned by a call to <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> restituito da un chiamata a <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>Ends a pending asynchronous connection attempt.</source>
          <target state="translated">Termina un tentativo di connessione sincrona in sospeso.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>This method blocks until the operation is complete.</source>
          <target state="translated">Questo metodo si blocca fino a quando l'operazione è completata.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>To perform this operation synchronously, use a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">Per eseguire questa operazione in modo sincrono, utilizzare un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept> for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codici di errore dell'API di Windows Sockets versione 2 disponibile in MSDN library al <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept> per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The following code example ends the asynchronous connection attempt.</source>
          <target state="translated">Esempio di codice seguente è terminato il tentativo di connessione asincrona.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il valore del parametro <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter was not returned by a call to a <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /&gt;</ph> method.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> non è stato restituito da una chiamata a un metodo <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /&gt;</ph> method was previously called for the asynchronous connection.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /&gt;</ph> è stato precedentemente chiamato per la connessione asincrona.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>An error occurred when attempting to access the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Si è verificato un errore durante il tentativo di accesso al <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> sottostante è stato chiuso.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> allows only one client to use a port.</source>
          <target state="translated">Ottiene o imposta un valore <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> che specifica se la classe <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> consente a un unico client di usare una porta.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> allows only one client to use a specific port; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se la classe <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> consente a un solo client di usare una porta specifica; in caso contrario <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <ph id="ph2">&lt;see langword="false" /&gt;</ph> for all other versions.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="true" /&gt;</ph> per Windows Server 2003 e Windows XP Service Pack 2 e versioni successive e <ph id="ph2">&lt;see langword="false" /&gt;</ph> per tutte le altre versioni.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</source>
          <target state="translated">Per impostazione predefinita, più client possono utilizzare una porta specifica. Tuttavia, solo uno dei client possa eseguire operazioni sul traffico di rete inviato alla porta.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> property to prevent multiple clients from using a specific port.</source>
          <target state="translated">È possibile utilizzare il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> proprietà per impedire che più client utilizzando una porta specifica.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>This property must be set before the underlying socket is bound to a client port.</source>
          <target state="translated">Questa proprietà deve essere impostata prima di socket sottostante è associato a una porta del client.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>If you call <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph>, the client port is bound as a side effect of the method, and you cannot subsequently set the <ph id="ph5">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> property</source>
          <target state="translated">Se si chiama <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29&gt;</ph>, o <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph>, la porta del client viene associata come effetto collaterale del metodo e successivamente non è possibile impostare il <ph id="ph5">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> proprietà</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and gets and sets the value of the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> property.</source>
          <target state="translated">L'esempio di codice seguente crea un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> Ottiene e imposta il valore della <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>An error occurred when attempting to access the underlying socket.</source>
          <target state="translated">Si è verificato un errore durante il tentativo di accesso al socket sottostante.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> sottostante è stato chiuso.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>Frees resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class.</source>
          <target state="translated">Rilascia le risorse usate dalla classe <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Questo metodo esegue l'override del metodo <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>Application code should not call this method; an object's <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Il codice dell'applicazione non deve chiamare questo metodo. un oggetto <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> metodo viene richiamato automaticamente durante l'operazione di garbage collection, a meno che la finalizzazione del garbage collector non è stata disabilitata da una chiamata al <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class finalizer closes the TCP connection and releases all managed resources associated with the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> classe chiude la connessione TCP e rilascia tutte le risorse gestite associate di <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>These resources include the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> used for connecting with the remote host, and the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> used to send and receive data.</source>
          <target state="translated">Queste risorse includono sottostante <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> utilizzati per la connessione con l'host remoto e <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> utilizzato per inviare e ricevere dati.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>The finalizer does not release any unmanaged resources.</source>
          <target state="translated">Il finalizzatore non rilascia risorse non gestite.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>metodi Finalize e distruttori<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>la pulizia di risorse non gestite<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, e <bpt id="p3">[</bpt>si esegue l'override del metodo Finalize<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> used to send and receive data.</source>
          <target state="translated">Restituisce l'oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> usato per inviare e ricevere dati.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> sottostante.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> returns a <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> that you can use to send and receive data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> Restituisce un <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> che è possibile utilizzare per inviare e ricevere dati.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> class inherits from the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> class, which provides a rich collection of methods and properties used to facilitate network communications.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> classe eredita la <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> classe che fornisce una vasta raccolta di metodi e proprietà utilizzati per semplificare le comunicazioni di rete.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>You must call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method first, or the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method will throw an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">È necessario chiamare il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> metodo prima di tutto, o <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> metodo genererà un' <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>After you have obtained the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, call the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method to send data to the remote host.</source>
          <target state="translated">Dopo aver ottenuto il <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, chiamare il <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> metodo per inviare dati all'host remoto.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method to receive data arriving from the remote host.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> per ricevere i dati provenienti dall'host remoto.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>Both of these methods block until the specified operation is performed.</source>
          <target state="translated">Entrambi questi metodi bloccati finché non viene eseguita l'operazione specificata.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>You can avoid blocking on a read operation by checking the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.DataAvailable%2A&gt;</ph> property.</source>
          <target state="translated">È possibile evitare il blocco su un'operazione di lettura verificando la <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.DataAvailable%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>A <ph id="ph1">`true`</ph> value means that data has arrived from the remote host and is available for reading.</source>
          <target state="translated">Oggetto <ph id="ph1">`true`</ph> valore indica che i dati sono arrivati dall'host remoto e sono disponibili per la lettura.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>In this case, <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> is guaranteed to complete immediately.</source>
          <target state="translated">In questo caso, <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> è garantita per completare immediatamente.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>If the remote host has shutdown its connection, <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> will immediately return with zero bytes.</source>
          <target state="translated">Se l'host remoto ha chiuso la connessione, <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> verrà restituito immediatamente con zero byte.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>You must close the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> when you are through sending and receiving data.</source>
          <target state="translated">È necessario chiudere il <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> quando si è l'invio e ricezione di dati.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>Closing <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> does not release the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Chiusura <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> non rilascia la <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Se si riceve un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, utilizzare <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> per ottenere il codice di errore specifico.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Dopo aver ottenuto il codice, è possibile fare riferimento alla documentazione relativa ai codice di errore dell'API Windows Sockets versione 2 disponibile in MSDN per una descrizione dettagliata dell'errore.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>traccia di rete in .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> per ottenere il sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>After obtaining the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, it sends and receives using its <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> methods.</source>
          <target state="translated">Dopo aver ottenuto il <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, invia e riceve tramite i relativi <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> metodi.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is not connected to a remote host.</source>
          <target state="translated">Il <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> non è connesso a un host remoto.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> has been closed.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> è stato chiuso.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Gets or sets information about the linger state of the associated socket.</source>
          <target state="translated">Ottiene o imposta le informazioni sullo stato di ritardo del socket associato.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Sockets.LingerOption" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.LingerOption" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>By default, lingering is disabled.</source>
          <target state="translated">Per impostazione predefinita, il tempo di ritardo è disabilitato.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property changes the way <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Close%2A&gt;</ph> method behaves.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> proprietà cambia la modalità <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Close%2A&gt;</ph> comportamento del metodo.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>This property when set modifies the conditions under which the connection can be reset by Winsock.</source>
          <target state="translated">Questa proprietà quando è impostata Modifica le condizioni in cui è possibile reimpostare la connessione da Winsock.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Connection resets can still occur based on the IP protocol behavior.</source>
          <target state="translated">Connessione può essere reimpostata in base al comportamento del protocollo IP.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>This property controls the length of time that the TCP connection will remain open after a call to <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> when data remains to be sent.</source>
          <target state="translated">Questa proprietà controlla il periodo di tempo che la connessione TCP resterà aperta dopo una chiamata a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> quando i dati rimangono da inviare.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>When you call the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method, data is placed in the outgoing network buffer.</source>
          <target state="translated">Quando si chiama il <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> (metodo), dati viene inserito nel buffer di rete in uscita.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>This property can be used to ensure that this data is sent to the remote host before the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method drops the connection.</source>
          <target state="translated">Questa proprietà può essere utilizzata per garantire che i dati siano inviati all'host remoto prima di <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> metodo elimina la connessione.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>To enable lingering, create a <ph id="ph1">&lt;xref:System.Net.Sockets.LingerOption&gt;</ph> instance containing the desired values, and set the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property to this instance.</source>
          <target state="translated">Per abilitare il tempo di ritardo, creare un <ph id="ph1">&lt;xref:System.Net.Sockets.LingerOption&gt;</ph> istanza contenente i valori desiderati, quindi impostare il <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> proprietà a questa istanza.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The following table describes the behavior of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method for the possible values of the <ph id="ph2">&lt;xref:System.Net.Sockets.LingerOption.Enabled%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt;</ph> property stored in the <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property.</source>
          <target state="translated">Nella tabella seguente viene descritto il comportamento del <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> metodo per i valori possibili del <ph id="ph2">&lt;xref:System.Net.Sockets.LingerOption.Enabled%2A&gt;</ph> proprietà e <ph id="ph3">&lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt;</ph> proprietà archiviata nel <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>LingerState.Enabled</source>
          <target state="translated">LingerState.Enabled</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>LingerState.LingerTime</source>
          <target state="translated">LingerState.LingerTime</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Behavior</source>
          <target state="translated">Comportamento</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source><ph id="ph1">`false`</ph> (disabled), the default value</source>
          <target state="translated"><ph id="ph1">`false`</ph> (disabilitato), il valore predefinito</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The time-out is not applicable, (default).</source>
          <target state="translated">Il timeout non è applicabile, (impostazione predefinita).</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Attempts to send pending data until the default IP protocol time-out expires.</source>
          <target state="translated">Tenta di inviare dati in sospeso finché non scade il timeout di protocollo IP predefinito.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source><ph id="ph1">`true`</ph> (enabled)</source>
          <target state="translated"><ph id="ph1">`true`</ph> (abilitata)</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>A nonzero time-out</source>
          <target state="translated">Un periodo di timeout diverso da zero</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</source>
          <target state="translated">Tenta di inviare dati in sospeso finché non scade il timeout specificato, se il tentativo non riesce, Winsock reimposta la connessione.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source><ph id="ph1">`true`</ph> (enabled)</source>
          <target state="translated"><ph id="ph1">`true`</ph> (abilitata)</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>A zero timeout.</source>
          <target state="translated">Un timeout pari a zero.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Discards any pending data and Winsock resets the connection.</source>
          <target state="translated">Ignora tutti i dati in sospeso e Winsock reimposta la connessione.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</source>
          <target state="translated">Lo stack IP calcola il periodo di timeout predefinito protocollo IP da utilizzare in base all'ora di round trip della connessione.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>In most cases, the time-out computed by the stack is more relevant than one defined by an application.</source>
          <target state="translated">Nella maggior parte dei casi, il timeout calcolato dallo stack è più utile rispetto a quello definito da un'applicazione.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>This is the default behavior for a socket when the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property is not set.</source>
          <target state="translated">Si tratta del comportamento predefinito per un socket quando il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> non è impostata.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>When the <ph id="ph1">&lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt;</ph> property stored in the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt;</ph> proprietà archiviata nel <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> proprietà è maggiore del timeout di protocollo IP predefinito, il timeout del protocollo IP predefinito verrà comunque applicare ed eseguire l'override.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The following code example sets and gets the sockets linger time.</source>
          <target state="translated">Nell'esempio di codice riportato di seguito viene imposta e ottiene il ritardo del socket ora.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>Gets or sets a value that disables a delay when send or receive buffers are not full.</source>
          <target state="translated">Ottiene o imposta un valore che disabilita un ritardo quando i buffer di invio o di ricezione non sono pieni.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the delay is disabled, otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il ritardo è disabilitato, in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>When <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.NoDelay%2A&gt;</ph> is <ph id="ph2">`false`</ph>, a <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> does not send a packet over the network until it has collected a significant amount of outgoing data.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.NoDelay%2A&gt;</ph> è <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> non invia un pacchetto tramite la rete prima di avere raccolto una quantità significativa di dati in uscita.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>Because of the amount of overhead in a TCP segment, sending small amounts of data is inefficient.</source>
          <target state="translated">A causa della quantità di overhead in un segmento TCP, l'invio di piccole quantità di dati è inefficiente.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>However, situations do exist where you need to send very small amounts of data or expect immediate responses from each packet you send.</source>
          <target state="translated">Tuttavia, esistono situazioni in cui è necessario inviare piccole quantità di dati o ottenere risposte immediate da ogni pacchetto inviato.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>Your decision should weigh the relative importance of network efficiency versus application requirements.</source>
          <target state="translated">La decisione è opportuno valutare l'importanza relativa dell'efficienza della rete e i requisiti dell'applicazione.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>The following code example disables the delay.</source>
          <target state="translated">Esempio di codice seguente disabilita il ritardo.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>It then checks the value of <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.NoDelay%2A&gt;</ph> to verify that the property was successfully set.</source>
          <target state="translated">E viene controllato il valore di <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.NoDelay%2A&gt;</ph> per verificare che la proprietà è stata impostata correttamente.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>Gets or sets the size of the receive buffer.</source>
          <target state="translated">Ottiene o imposta la dimensione del buffer di ricezione.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>The size of the receive buffer, in bytes.</source>
          <target state="translated">Dimensione del buffer di ricezione, espressa in byte.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>The default value is 8192 bytes.</source>
          <target state="translated">Il valore predefinito è 8192 byte.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A&gt;</ph> property gets or sets the number of bytes that you are expecting to store in the receive buffer for each read operation.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A&gt;</ph> proprietà ottiene o imposta il numero di byte che si prevede di archiviare nel buffer di ricezione per ogni operazione di lettura.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>This property actually manipulates the network buffer space allocated for receiving incoming data.</source>
          <target state="translated">Questa proprietà consente di modificare effettivamente lo spazio di buffer di rete allocato per la ricezione di dati in arrivo.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>Your network buffer should be at least as large as your application buffer to ensure that the desired data will be available when you call the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Il buffer di rete deve essere uguali almeno alle dimensioni del buffer di applicazione per assicurarsi che i dati desiderati saranno disponibili quando si chiama il <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A&gt;</ph> property to set this size.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A&gt;</ph> proprietà per impostare le dimensioni.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>If your application will be receiving bulk data, you should pass the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method a very large application buffer.</source>
          <target state="translated">Se l'applicazione riceverà bulk dei dati, è necessario passare il <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> metodo un buffer di applicazione di grandi dimensioni.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>If the network buffer is smaller than the amount of data you request in the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method, you will not be able to retrieve the desired amount of data in one read operation.</source>
          <target state="translated">Se il buffer di rete è inferiore rispetto alla quantità di dati richiesta nel <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> (metodo), non sarà in grado di recuperare la quantità di dati in un'operazione di lettura desiderata.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>This incurs the overhead of additional calls to the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method.</source>
          <target state="translated">Questo genera un overhead di chiamate aggiuntive al <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>The following code example sets and gets the receive buffer size.</source>
          <target state="translated">Esempio di codice seguente imposta e ottiene la dimensione del buffer di ricezione.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>An error occurred when setting the buffer size.</source>
          <target state="translated">Si è verificato un errore durante l'impostazione delle dimensioni del buffer.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>In .NET Compact Framework applications, you cannot set this property.</source>
          <target state="translated">Nelle applicazioni di .NET Compact Framework non è possibile impostare questa proprietà.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>For a workaround, see the Platform Note in Remarks.</source>
          <target state="translated">Per risolvere il problema, vedere la nota sulla piattaforma nella sezione Osservazioni.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>Gets or sets the amount of time a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> will wait to receive data once a read operation is initiated.</source>
          <target state="translated">Ottiene o imposta il tempo per cui un <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> attende la ricezione di dati dopo l'inizio di un'operazione di lettura.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>The time-out value of the connection in milliseconds.</source>
          <target state="translated">Valore di timeout della connessione in millisecondi.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>The default value is 0.</source>
          <target state="translated">Il valore predefinito è 0.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A&gt;</ph> property determines the amount of time that the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method will block until it is able to receive data.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A&gt;</ph> proprietà determina la quantità di tempo che il <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> metodo verrà bloccato fino a quando non è in grado di ricevere i dati.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>This time is measured in milliseconds.</source>
          <target state="translated">Questo tempo viene misurato in millisecondi.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>If the time-out expires before <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> successfully completes, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> throws a <ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph>.</source>
          <target state="translated">Se il timeout scade prima <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> è stata completata correttamente, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> genera un <ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>There is no time-out by default.</source>
          <target state="translated">Per impostazione predefinita non è impostato alcun timeout.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>The following code example sets and gets the receive time out.</source>
          <target state="translated">Esempio di codice seguente imposta e ottiene il valore di timeout di ricezione.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>Gets or sets the size of the send buffer.</source>
          <target state="translated">Ottiene o imposta la dimensione del buffer di invio.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>The size of the send buffer, in bytes.</source>
          <target state="translated">Dimensione del buffer di invio, espressa in byte.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>The default value is 8192 bytes.</source>
          <target state="translated">Il valore predefinito è 8192 byte.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendBufferSize%2A&gt;</ph> property gets or sets the number of bytes that you are expecting to send in each call to the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendBufferSize%2A&gt;</ph> proprietà ottiene o imposta il numero di byte che si prevede di inviare in ogni chiamata al <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>This property actually manipulates the network buffer space allocated for send operation.</source>
          <target state="translated">Questa proprietà modifica lo spazio di buffer di rete allocato per l'operazione di invio.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>Your network buffer should be at least as large as your application buffer to ensure that the desired data will be stored and sent in one operation.</source>
          <target state="translated">Il buffer di rete debba essere uguali almeno alle dimensioni del buffer di applicazione per assicurarsi che i dati desiderati verranno memorizzati e inviati in un'unica operazione.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendBufferSize%2A&gt;</ph> property to set this size.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendBufferSize%2A&gt;</ph> proprietà per impostare le dimensioni.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>If your application will be sending bulk data, you should pass the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method a very large application buffer.</source>
          <target state="translated">Se l'applicazione verrà inviato bulk dei dati, è necessario passare il <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> metodo un buffer di applicazione di grandi dimensioni.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>If the network buffer is smaller than the amount of data you provide the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method, several network send operations will be performed for every call you make to the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method.</source>
          <target state="translated">Se il buffer di rete è inferiore rispetto alla quantità di dati forniscono il <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> (metodo), diversi operazioni verranno eseguite per ogni chiamata di trasmissione di rete di <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> (metodo).</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>You can achieve greater data throughput by ensuring that your network buffer is at least as large as your application buffer.</source>
          <target state="translated">È possibile ottenere maggiore velocità effettiva dei dati assicurando che il buffer di rete sia uguali almeno alle dimensioni del buffer di applicazione.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>The following code example sets and gets the send buffer size.</source>
          <target state="translated">Esempio di codice seguente imposta e ottiene la dimensione del buffer di trasmissione.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>Gets or sets the amount of time a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> will wait for a send operation to complete successfully.</source>
          <target state="translated">Ottiene o imposta il tempo per cui un <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> attende che un'operazione di invio venga completata.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The send time-out value, in milliseconds.</source>
          <target state="translated">Valore del timeout di invio in millisecondi.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The default is 0.</source>
          <target state="translated">Il valore predefinito è 0.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> property determines the amount of time that the <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> method will block until it is able to return successfully.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> proprietà determina la quantità di tempo che il <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> metodo verrà bloccato fino a quando non è in grado di restituire correttamente.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>This time is measured in milliseconds.</source>
          <target state="translated">Questo tempo viene misurato in millisecondi.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>After you call the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method, the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returns the number of bytes actually sent to the host.</source>
          <target state="translated">Dopo aver chiamato il <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> metodo sottostante <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> restituisce il numero di byte effettivamente inviati all'host.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> property determines the amount of time a <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> will wait before receiving the number of bytes returned.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> proprietà determina la quantità di tempo un <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> attenderà prima di ricevere il numero di byte restituito.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>If the time-out expires before the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> method successfully completes, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> will throw a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Se il timeout scade prima di <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> metodo viene completato correttamente, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> genererà un <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>There is no time-out by default.</source>
          <target state="translated">Per impostazione predefinita non è impostato alcun timeout.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The following code example sets and gets the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> value.</source>
          <target state="translated">Esempio di codice seguente imposta e ottiene il <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> valore.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>