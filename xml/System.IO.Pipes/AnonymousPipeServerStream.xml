<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AnonymousPipeServerStream.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53f79e272db701f012912103823d00ec3d830fa8c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f79e272db701f012912103823d00ec3d830fa8c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Pipes.AnonymousPipeServerStream">
          <source>Exposes a stream around an anonymous pipe, which supports both synchronous and asynchronous read and write operations.</source>
          <target state="translated">Espone un flusso di una unnamed pipe, che supporta operazioni di lettura e scrittura sincrone e asincrone.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeServerStream">
          <source>Anonymous pipes help provide safe and secure interprocess communication between child and parent processes.</source>
          <target state="translated">Le unnamed pipe consentono di fornire sicuro e proteggere la comunicazione interprocesso tra padre e figlio processi.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeServerStream">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> class enables a parent process to send or receive information from a child process.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> classe consente a un processo padre inviare o ricevere informazioni da un processo figlio.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeServerStream">
          <source>Anonymous pipes are unnamed, one-way pipes that typically transfer data between parent and child processes.</source>
          <target state="translated">Le unnamed pipe sono senza nome pipe unidirezionali che in genere trasferiscono dati tra processi padre e figlio.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeServerStream">
          <source>Anonymous pipes are always local; they cannot be used over a network.</source>
          <target state="translated">Le unnamed pipe sono sempre locali. non possono essere utilizzati in una rete.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeServerStream">
          <source>A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> valore <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> non è supportato perché le unnamed pipe vengono definite come unidirezionali.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeServerStream">
          <source>Anonymous pipes do not support <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> read modes.</source>
          <target state="translated">Le unnamed pipe non supportano <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> le modalità di lettura.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeServerStream">
          <source>The client side of an anonymous pipe must be created from a pipe handle provided by the server side by calling the <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A&gt;</ph> method.</source>
          <target state="translated">Il lato client di un'unnamed pipe deve essere creato da un handle di pipe fornito dal lato server chiamando il <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeServerStream">
          <source>The string is then passed as a parameter when creating the client process.</source>
          <target state="translated">La stringa viene quindi passata come parametro durante la creazione del processo client.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeServerStream">
          <source>From the client process, it is then passed to the <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> constructor as the <ph id="ph2">`pipeHandleAsString`</ph> parameter.</source>
          <target state="translated">Dal processo client, viene quindi passato per il <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> costruttore come il <ph id="ph2">`pipeHandleAsString`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeServerStream">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object must dispose the client handle using the <ph id="ph2">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;</ph> method in order to be notified when the client exits.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> oggetto deve eliminare l'handle del client utilizzando il <ph id="ph2">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;</ph> metodo per ricevere una notifica quando il client viene chiusa.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeServerStream">
          <source>For <ph id="ph1">[!INCLUDE[winxppro](~/includes/winxppro-md.md)]</ph> and <ph id="ph2">[!INCLUDE[win2kserver](~/includes/win2kserver-md.md)]</ph>, a maximum of 10 pipes can simultaneously connect over the network.</source>
          <target state="translated">Per <ph id="ph1">[!INCLUDE[winxppro](~/includes/winxppro-md.md)]</ph> e <ph id="ph2">[!INCLUDE[win2kserver](~/includes/win2kserver-md.md)]</ph>, un massimo di 10 pipe possa connettersi contemporaneamente attraverso la rete.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeServerStream">
          <source>The following example demonstrates a way to send a string from a parent process to a child process using anonymous pipes.</source>
          <target state="translated">L'esempio seguente illustra come inviare una stringa da un processo padre a un processo figlio usando unnamed pipe.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeServerStream">
          <source>This example creates an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object in a parent process with a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.Out&gt;</ph>.</source>
          <target state="translated">Questo esempio crea un oggetto <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> in un processo padre con un valore di <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> equivalente a <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.Out&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeServerStream">
          <source>It also creates an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> object in a child process with a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>.</source>
          <target state="translated">Crea inoltre un <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> oggetto in un processo figlio con un <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> valore <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeServerStream">
          <source>The parent process then sends a user-supplied string to the child process.</source>
          <target state="translated">Il processo padre invia quindi una stringa fornita dall'utente al processo figlio.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeServerStream">
          <source>The string is displayed to the console.</source>
          <target state="translated">La stringa viene visualizzata nella console.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeServerStream">
          <source>This example is for the server process, which uses the <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> class.</source>
          <target state="translated">Questo esempio è relativo al processo del server, che utilizza il <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeServerStream">
          <source>For the entire code example, including the code for both the pipe client and server, see <bpt id="p1">[</bpt>How to: Use Anonymous Pipes for Local Interprocess Communication<ept id="p1">](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md)</ept>.</source>
          <target state="translated">Per un esempio di codice completo, incluso il codice per la pipe client e server, vedere <bpt id="p1">[</bpt>procedura: utilizzare le unnamed pipe per la comunicazione locale Interprocess<ept id="p1">](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.IO.Pipes.AnonymousPipeServerStream">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor">
          <source>For <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> constructors without a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> parameter, the default direction is <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.Out&gt;</ph>.</source>
          <target state="translated">Per <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> costruttori senza un <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> parametro, la direzione predefinita è <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.Out&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor">
          <source>A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> valore <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> non è supportato perché le unnamed pipe vengono definite come unidirezionali.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor">
          <source>This constructor creates an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object that has the default buffer size, no pipe security, and a <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> value of <ph id="ph3">&lt;xref:System.IO.HandleInheritability.None&gt;</ph>.</source>
          <target state="translated">Questo costruttore crea un <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> oggetto contenente la dimensione del buffer, nessuna sicurezza della pipe, e un <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> valore <ph id="ph3">&lt;xref:System.IO.HandleInheritability.None&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">per l'attendibilità totale per il chiamante immediato.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Impossibile usare questo membro in codice parzialmente attendibile.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">Uno dei valori di enumerazione che determina la direzione della pipe.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)">
          <source>Anonymous pipes can only be in one direction, so <bpt id="p1">&lt;c&gt;</bpt>direction<ept id="p1">&lt;/c&gt;</ept> cannot be set to <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</source>
          <target state="translated">Le unnamed pipe possono avere una sola direzione, quindi non è possibile impostare <bpt id="p1">&lt;c&gt;</bpt>direction<ept id="p1">&lt;/c&gt;</ept> su <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph> class with the specified pipe direction.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph> con la direzione della pipe specificata.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)">
          <source>A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> valore <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> non è supportato perché le unnamed pipe vengono definite come unidirezionali.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)">
          <source>This constructor creates an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object that has the default buffer size, no pipe security, and a <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> value of <ph id="ph3">&lt;xref:System.IO.HandleInheritability.None&gt;</ph>.</source>
          <target state="translated">Questo costruttore crea un <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> oggetto contenente la dimensione del buffer, nessuna sicurezza della pipe, e un <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> valore <ph id="ph3">&lt;xref:System.IO.HandleInheritability.None&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)">
          <source><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> è impostato su <ph id="ph2">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">per l'attendibilità totale per il chiamante immediato.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Impossibile usare questo membro in codice parzialmente attendibile.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">Uno dei valori di enumerazione che determina la direzione della pipe.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
          <source>Anonymous pipes can only be in one direction, so <bpt id="p1">&lt;c&gt;</bpt>direction<ept id="p1">&lt;/c&gt;</ept> cannot be set to <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</source>
          <target state="translated">Le unnamed pipe possono avere una sola direzione, quindi non è possibile impostare <bpt id="p1">&lt;c&gt;</bpt>direction<ept id="p1">&lt;/c&gt;</ept> su <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
          <source>One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</source>
          <target state="translated">Uno dei valori di enumerazione che determina se l'handle sottostante può essere ereditato dai processi figlio.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
          <source>Must be set to either <ph id="ph1">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.IO.HandleInheritability.Inheritable" /&gt;</ph>.</source>
          <target state="translated">Deve essere impostato a <ph id="ph1">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph> o <ph id="ph2">&lt;see cref="F:System.IO.HandleInheritability.Inheritable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph> class with the specified pipe direction and inheritability mode.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph> con la direzione della pipe e la modalità di ereditarietà specificate.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
          <source>A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> valore <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> non è supportato perché le unnamed pipe vengono definite come unidirezionali.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
          <source>This constructor creates an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object that has the default buffer size and no pipe security.</source>
          <target state="translated">Questo costruttore crea un <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> oggetto con la dimensione del buffer e nessuna sicurezza della pipe.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
          <source>The following example demonstrates a method to send a string from a parent process to a child process using anonymous pipes.</source>
          <target state="translated">Nell'esempio seguente viene illustrato un metodo per inviare una stringa da un processo padre a un processo figlio utilizzando le unnamed pipe.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
          <source>In this example, an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object is created in a parent process with a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.Out&gt;</ph>.</source>
          <target state="translated">In questo esempio, un <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> oggetto viene creato in un processo padre con un <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> valore <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.Out&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> is not set to either <ph id="ph2">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.IO.HandleInheritability.Inheritable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> non è impostato su <ph id="ph2">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph> o su <ph id="ph3">&lt;see cref="F:System.IO.HandleInheritability.Inheritable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> è impostato su <ph id="ph2">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">per l'attendibilità totale per il chiamante immediato.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Impossibile usare questo membro in codice parzialmente attendibile.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">Uno dei valori di enumerazione che determina la direzione della pipe.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>Anonymous pipes can only be in one direction, so <bpt id="p1">&lt;c&gt;</bpt>direction<ept id="p1">&lt;/c&gt;</ept> cannot be set to <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</source>
          <target state="translated">Le unnamed pipe possono avere una sola direzione, quindi non è possibile impostare <bpt id="p1">&lt;c&gt;</bpt>direction<ept id="p1">&lt;/c&gt;</ept> su <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>A safe handle for the pipe that this <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph> object will encapsulate.</source>
          <target state="translated">Handle sicuro per la pipe che verrà incapsulata da questo oggetto <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>A safe handle for the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> object.</source>
          <target state="translated">Handle sicuro per l'oggetto <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph> class from the specified pipe handles.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph> dagli handle di pipe specificati.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> valore <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> non è supportato perché le unnamed pipe vengono definite come unidirezionali.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source><ph id="ph1">&lt;paramref name="serverSafePipeHandle" /&gt;</ph> or <ph id="ph2">&lt;paramref name="clientSafePipeHandle" /&gt;</ph> is an invalid handle.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serverSafePipeHandle" /&gt;</ph> è <ph id="ph2">&lt;paramref name="clientSafePipeHandle" /&gt;</ph> o non è un handle valido.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source><ph id="ph1">&lt;paramref name="serverSafePipeHandle" /&gt;</ph> or <ph id="ph2">&lt;paramref name="clientSafePipeHandle" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serverSafePipeHandle" /&gt;</ph> o <ph id="ph2">&lt;paramref name="clientSafePipeHandle" /&gt;</ph> è <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> è impostato su <ph id="ph2">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>An I/O error, such as a disk error, has occurred.</source>
          <target state="translated">Si è verificato un errore di I/O, ad esempio un errore su disco.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>The stream has been closed.</source>
          <target state="translated">Il flusso è stato chiuso.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">per l'attendibilità totale per il chiamante immediato.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Impossibile usare questo membro in codice parzialmente attendibile.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">Uno dei valori di enumerazione che determina la direzione della pipe.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
          <source>Anonymous pipes can only be in one direction, so <bpt id="p1">&lt;c&gt;</bpt>direction<ept id="p1">&lt;/c&gt;</ept> cannot be set to <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</source>
          <target state="translated">Le unnamed pipe possono avere una sola direzione, quindi non è possibile impostare <bpt id="p1">&lt;c&gt;</bpt>direction<ept id="p1">&lt;/c&gt;</ept> su <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
          <source>One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</source>
          <target state="translated">Uno dei valori di enumerazione che determina se l'handle sottostante può essere ereditato dai processi figlio.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
          <source>Must be set to either <ph id="ph1">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.IO.HandleInheritability.Inheritable" /&gt;</ph>.</source>
          <target state="translated">Deve essere impostato a <ph id="ph1">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph> o <ph id="ph2">&lt;see cref="F:System.IO.HandleInheritability.Inheritable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
          <source>The size of the buffer.</source>
          <target state="translated">Dimensione del buffer.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
          <source>This value must be greater than or equal to 0.</source>
          <target state="translated">Questo valore deve essere uguale o maggiore di 0.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph> class with the specified pipe direction, inheritability mode, and buffer size.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph> con la direzione della pipe, la modalità di ereditarietà e la dimensione di buffer specificate.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
          <source>A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> valore <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> non è supportato perché le unnamed pipe vengono definite come unidirezionali.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
          <source>This constructor creates an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object without pipe security.</source>
          <target state="translated">Questo costruttore crea un <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> oggetto senza sicurezza di pipe.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> is not set to either <ph id="ph2">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.IO.HandleInheritability.Inheritable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> non è impostato su <ph id="ph2">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph> o su <ph id="ph3">&lt;see cref="F:System.IO.HandleInheritability.Inheritable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> è minore di 0.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> è impostato su <ph id="ph2">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">per l'attendibilità totale per il chiamante immediato.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Impossibile usare questo membro in codice parzialmente attendibile.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">Uno dei valori di enumerazione che determina la direzione della pipe.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)">
          <source>Anonymous pipes can only be in one direction, so <bpt id="p1">&lt;c&gt;</bpt>direction<ept id="p1">&lt;/c&gt;</ept> cannot be set to <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</source>
          <target state="translated">Le unnamed pipe possono avere una sola direzione, quindi non è possibile impostare <bpt id="p1">&lt;c&gt;</bpt>direction<ept id="p1">&lt;/c&gt;</ept> su <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)">
          <source>One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</source>
          <target state="translated">Uno dei valori di enumerazione che determina se l'handle sottostante può essere ereditato dai processi figlio.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)">
          <source>The size of the buffer.</source>
          <target state="translated">Dimensione del buffer.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)">
          <source>This value must be greater than or equal to 0.</source>
          <target state="translated">Questo valore deve essere uguale o maggiore di 0.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)">
          <source>An object that determines the access control and audit security for the pipe.</source>
          <target state="translated">Oggetto che determina il controllo di accesso e la sicurezza di controllo per la pipe.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph> class with the specified pipe direction, inheritability mode, buffer size, and pipe security.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph> con la direzione della pipe, la modalità di ereditarietà, la dimensione di buffer e la sicurezza della pipe specificate.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)">
          <source>A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> valore <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> non è supportato perché le unnamed pipe vengono definite come unidirezionali.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)">
          <source><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> is not set to either <ph id="ph2">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.IO.HandleInheritability.Inheritable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> non è impostato su <ph id="ph2">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph> o su <ph id="ph3">&lt;see cref="F:System.IO.HandleInheritability.Inheritable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> è minore di 0.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)">
          <source><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> è impostato su <ph id="ph2">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">per l'attendibilità totale per il chiamante immediato.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Impossibile usare questo membro in codice parzialmente attendibile.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle">
          <source>Gets the safe handle for the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> object that is currently connected to the <ph id="ph2">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph> object.</source>
          <target state="translated">Ottiene l'handle protetto per l'oggetto <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph>, attualmente connesso all'oggetto <ph id="ph2">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle">
          <source>A handle for the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> object that is currently connected to the <ph id="ph2">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph> object.</source>
          <target state="translated">Handle per l'oggetto <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> attualmente connesso all'oggetto <ph id="ph2">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;</ph> method should be called after a client handle has been passed to a client process.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;</ph> metodo deve essere chiamato dopo che è stato passato un handle del client a un processo client.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle">
          <source>If this method is not called, the <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object will not receive notice when the client disposes of its <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object.</source>
          <target state="translated">Se non viene chiamato questo metodo, il <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> oggetto non verrà notificato quando il client Elimina relativo <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle">
          <source>Closes the local copy of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> object's handle.</source>
          <target state="translated">Chiude la copia locale dell'handle dell'oggetto <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;</ph> method should be called after the client handle has been passed to the client.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;</ph> (metodo) deve essere chiamato dopo l'handle del client è stato passato al client.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle">
          <source>If this method is not called, the <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object will not receive notice when the client disposes of its <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object.</source>
          <target state="translated">Se non viene chiamato questo metodo, il <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> oggetto non verrà notificato quando il client Elimina relativo <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle">
          <source>The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</source>
          <target state="translated">Nell'esempio seguente viene illustrato un modo per inviare una stringa da un processo padre a un processo figlio utilizzando le unnamed pipe.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle">
          <source>In this example, an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object is created in a parent process with a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.Out&gt;</ph>.</source>
          <target state="translated">In questo esempio, un <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> oggetto viene creato in un processo padre con un <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> valore <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.Out&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.Finalize">
          <source>Releases unmanaged resources and performs other cleanup operations before the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph> instance is reclaimed by garbage collection.</source>
          <target state="translated">Rilascia le risorse non gestite ed esegue altre operazioni di pulizia prima che l'istanza di <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph> venga recuperata da Garbage Collection.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString">
          <source>Gets the connected <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> object's handle as a string.</source>
          <target state="translated">Ottiene l'handle dell'oggetto <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> collegato come stringa.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString">
          <source>A string that represents the connected <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> object's handle.</source>
          <target state="translated">Stringa che rappresenta l'handle dell'oggetto connesso <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;</ph> method should be called after a client handle has been passed to a client process.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A&gt;</ph> metodo deve essere chiamato dopo che è stato passato un handle del client a un processo client.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString">
          <source>If this method is not called, the <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object will not receive notice when the client disposes of its <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object.</source>
          <target state="translated">Se non viene chiamato questo metodo, il <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> oggetto non verrà notificato quando il client Elimina relativo <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString">
          <source>The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</source>
          <target state="translated">Nell'esempio seguente viene illustrato un modo per inviare una stringa da un processo padre a un processo figlio utilizzando le unnamed pipe.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString">
          <source>In this example, an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object is created in a parent process with a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.Out&gt;</ph>.</source>
          <target state="translated">In questo esempio, un <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> oggetto viene creato in un processo padre con un <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> valore <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.Out&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode">
          <source>Sets the reading mode for the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph> object.</source>
          <target state="translated">Imposta la modalità di lettura per l'oggetto <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode">
          <source>For anonymous pipes, transmission mode must be <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /&gt;</ph>.</source>
          <target state="translated">Per gli unnamed pipe, la modalità di trasmissione deve essere <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode">
          <source>The reading mode for the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph> object.</source>
          <target state="translated">Modalità di lettura per l'oggetto <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode">
          <source>Anonymous pipes do not support <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> read mode.</source>
          <target state="translated">Le unnamed pipe non supportano <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> in modalità lettura.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode">
          <source>The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</source>
          <target state="translated">Nell'esempio seguente viene illustrato un modo per inviare una stringa da un processo padre a un processo figlio utilizzando le unnamed pipe.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode">
          <source>In this example, the <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> is caught when the <ph id="ph2">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.ReadMode%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph>.</source>
          <target state="translated">In questo esempio, il <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> viene rilevata quando il <ph id="ph2">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.ReadMode%2A&gt;</ph> è impostata su <ph id="ph3">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode">
          <source>The transmission mode is not valid.</source>
          <target state="translated">La modalità di trasmissione non è valida.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode">
          <source>For anonymous pipes, only <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /&gt;</ph> is supported.</source>
          <target state="translated">Per unnamed pipe, è supportato solo il campo <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode">
          <source>The property is set to <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" /&gt;</ph>, which is not supported for anonymous pipes.</source>
          <target state="translated">La proprietà è impostata su <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" /&gt;</ph>, che non è supportata per unnamed pipe.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode">
          <source>The connection is broken or another I/O error occurs.</source>
          <target state="translated">La connessione si è interrotta o si è verificato un altro errore di I/O.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode">
          <source>The pipe is closed.</source>
          <target state="translated">La pipe è chiusa.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode">
          <source>Gets the pipe transmission mode that is supported by the current pipe.</source>
          <target state="translated">Ottiene la modalità di trasmissione della pipe supportata dalla pipe corrente.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph> that is supported by the current pipe.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph> supportate dal pipe corrente.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode">
          <source>Anonymous pipes do not support <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> read mode.</source>
          <target state="translated">Le unnamed pipe non supportano <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> in modalità lettura.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode">
          <source>The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</source>
          <target state="translated">Nell'esempio seguente viene illustrato un modo per inviare una stringa da un processo padre a un processo figlio utilizzando le unnamed pipe.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode">
          <source>In this example, an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object is created in a parent process and the <ph id="ph2">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode%2A&gt;</ph> property is displayed to the console.</source>
          <target state="translated">In questo esempio, un <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> oggetto viene creato in un processo padre e <ph id="ph2">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode%2A&gt;</ph> proprietà viene visualizzata nella console.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>