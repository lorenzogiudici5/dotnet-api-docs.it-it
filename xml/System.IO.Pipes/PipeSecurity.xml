<Type Name="PipeSecurity" FullName="System.IO.Pipes.PipeSecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1eead0220ae9da892b78cf71ae96a98169946116" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30419615" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PipeSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PipeSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.PipeSecurity" />
  <TypeSignature Language="VB.NET" Value="Public Class PipeSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class PipeSecurity : System::Security::AccessControl::NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta il controllo di accesso e la sicurezza del controllo di una pipe.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.IO.Pipes.PipeSecurity> classe specifica i diritti di accesso per una pipe e come controllare i tentativi di accesso.  Questa classe rappresenta i diritti di accesso e controllo come un set di regole. Ogni regola di accesso è rappresentato da un <xref:System.IO.Pipes.PipeAccessRule> dell'oggetto, mentre ogni regola è rappresentata da un <xref:System.IO.Pipes.PipeAuditRule> oggetto.  
  
 La <xref:System.IO.Pipes.PipeSecurity> classe è un'astrazione di sistema di sicurezza file di Microsoft Windows sottostante. In questo sistema, ogni pipe dispone di un elenco di controllo di accesso discrezionale (DACL), che controlla l'accesso alla pipe e un elenco di controllo di accesso di sistema (SACL), che specifica i tentativi di accesso da controllare.  Il <xref:System.IO.Pipes.PipeAccessRule> e <xref:System.IO.Pipes.PipeAuditRule> classi sono astrazioni delle voci di controllo di accesso (ACE) che comprendono DACL e SACL.  
  
 La <xref:System.IO.Pipes.PipeSecurity> classe nasconde molti dettagli degli elenchi DACL e SACL; non è necessario preoccuparsi ACE ordinamento o DACL null.  
  
 Utilizzare la <xref:System.IO.Pipes.PipeSecurity> classe per recuperare, aggiungere o modificare le regole di accesso che rappresentano gli elenchi DACL e SACL di una pipe.  
  
 Per mantenere l'accesso a nuova o modificata o le regole a una pipe di controllo, utilizzare il <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> metodo. Per recuperare le regole di accesso o controllo da un file esistente, usare il metodo <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PipeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PipeSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.Pipes.PipeSecurity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore crea un oggetto vuoto <xref:System.IO.Pipes.PipeSecurity> oggetto che non si basa su una pipe esistente. È quindi possibile popolare l'oggetto con informazioni sul controllo di accesso e applicarlo a una pipe.  
  
 È possibile aggiungere l'accesso o regole di controllo di <xref:System.IO.Pipes.PipeSecurity> utilizzando il <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> metodo. È possibile rimuovere l'accesso o utilizzando le regole di controllo di <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> metodo.  
  
 Per mantenere l'accesso a nuova o modificata o le regole a una pipe di controllo, utilizzare il <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> metodo. Per recuperare le regole di accesso o controllo da un file esistente, usare il metodo <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Type" /> dell'oggetto da proteggere associato all'oggetto <see cref="T:System.IO.Pipes.PipeSecurity" /> corrente.</summary>
        <value>Tipo dell'oggetto da proteggere associato all'oggetto <see cref="T:System.IO.Pipes.PipeSecurity" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che derivano dal <xref:System.Security.AccessControl.ObjectSecurity> classe sostituzione il <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> proprietà e restituiscono il tipo utilizzato per rappresentare i diritti di accesso. Quando si utilizzano matrici o raccolte che contengono più tipi di oggetti di sicurezza, è possibile utilizzare questa proprietà per determinare il tipo di enumerazione appropriata da utilizzare con ogni oggetto di sicurezza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">Identità a cui viene applicata la regola di accesso. Deve essere un oggetto di cui è possibile eseguire il cast in un oggetto <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
        <param name="accessMask">Maschera di accesso di questa regola. La maschera di accesso è un insieme di bit anonimi a 32 bit, il cui significato è definito dai singoli integratori.</param>
        <param name="isInherited">
          <see langword="true" /> se la regola è ereditata da un contenitore padre; in caso contrario, false</param>
        <param name="inheritanceFlags">Uno dei valori <see cref="T:System.Security.AccessControl.InheritanceFlags" /> che specifica la proprietà di ereditarietà della regola di accesso.</param>
        <param name="propagationFlags">Uno dei valori <see cref="T:System.Security.AccessControl.PropagationFlags" /> che specifica se le regole di accesso ereditate vengono propagate automaticamente. I flag di propagazione vengono ignorati se <c>inheritanceFlags</c> è impostato su <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</param>
        <param name="type">Specifica il tipo di controllo di accesso valido.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.AccessRule" /> con i valori specificati.</summary>
        <returns>Oggetto <see cref="T:System.Security.AccessControl.AccessRule" /> creato dal metodo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo consigliato per creare le regole di controllo di accesso consiste nell'utilizzare i costruttori del <xref:System.IO.Pipes.PipeAccessRule> classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> o <paramref name="type" /> specifica un valore non valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identityReference" /> è <see langword="null" />.  
  
 oppure  
  
 <paramref name="accessMask" /> è zero.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identityReference" /> non è di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> né di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> che può essere convertito nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la classe <see cref="T:System.Type" /> dell'oggetto associato alle regole di accesso dell'oggetto <see cref="T:System.IO.Pipes.PipeSecurity" /> corrente.</summary>
        <value>Tipo dell'oggetto associato alle regole di accesso dell'oggetto <see cref="T:System.IO.Pipes.PipeSecurity" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che derivano dal <xref:System.Security.AccessControl.ObjectSecurity> classe sostituzione il <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> proprietà e restituiscono il tipo utilizzato per rappresentare i diritti di accesso. Quando si utilizzano matrici o raccolte che contengono più tipi di oggetti di sicurezza, è possibile utilizzare questa proprietà per determinare il tipo di enumerazione appropriata da utilizzare con ogni oggetto di sicurezza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As PipeAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Regola di accesso da aggiungere.</param>
        <summary>Aggiunge una regola di accesso all'elenco DACL (Discretionary Access Control List) associato all'oggetto <see cref="T:System.IO.Pipes.PipeSecurity" /> corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> metodo aggiunge una nuova regola per l'elenco di regole che un <xref:System.IO.Pipes.PipeSecurity> oggetto contiene. Se per la regola specificata esiste già un elenco di controllo di accesso (ACL) di <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> metodo aggiunge comunque la regola, con una sola eccezione: un <xref:System.IO.Pipes.PipeAccessRule> oggetto creato tramite il <xref:System.Security.AccessControl.AccessControlType.Deny> valore sostituisce un oggetto che viene creato utilizzando il <xref:System.Security.AccessControl.AccessControlType.Allow> valore.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As PipeAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Regola di controllo da aggiungere.</param>
        <summary>Aggiunge una regola di controllo all'elenco di controllo di accesso di sistema (SACL) associato all'oggetto <see cref="T:System.IO.Pipes.PipeSecurity" /> corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A> metodo aggiunge una nuova regola di controllo per l'elenco di regole che un <xref:System.IO.Pipes.PipeSecurity> oggetto contiene.  
  
 Se per la regola specificata esiste già una regola di controllo di <xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A> metodo aggiunge comunque la regola.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">Identità a cui viene applicata la regola di accesso. Deve essere un oggetto di cui è possibile eseguire il cast in un oggetto <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
        <param name="accessMask">Maschera di accesso di questa regola. La maschera di accesso è un insieme di bit anonimi a 32 bit, il cui significato è definito dai singoli integratori.</param>
        <param name="isInherited">
          <see langword="true" /> se la regola è ereditata da un contenitore padre; in caso contrario, false</param>
        <param name="inheritanceFlags">Uno dei valori <see cref="T:System.Security.AccessControl.InheritanceFlags" /> che specifica la proprietà di ereditarietà della regola di accesso.</param>
        <param name="propagationFlags">Uno dei valori <see cref="T:System.Security.AccessControl.PropagationFlags" /> che specifica se le regole di accesso ereditate vengono propagate automaticamente. I flag di propagazione vengono ignorati se <c>inheritanceFlags</c> è impostato su <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</param>
        <param name="flags">Uno dei valori <see cref="T:System.Security.AccessControl.AuditFlags" /> che specifica il tipo di controllo di accesso valido.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.AccessControl.AuditRule" /> con i valori specificati.</summary>
        <returns>Oggetto <see cref="T:System.Security.AccessControl.AuditRule" /> creato dal metodo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo consigliato per creare regole di controllo consiste nell'utilizzare i costruttori del <xref:System.IO.Pipes.PipeAuditRule> classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La proprietà <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> o <paramref name="flags" /> specifica un valore non valido.</exception>
        <exception cref="T:System.ArgumentNullException">La proprietà <paramref name="identityReference" /> è <see langword="null" />.  
  
 oppure  
  
 La proprietà <paramref name="accessMask" /> è zero.</exception>
        <exception cref="T:System.ArgumentException">La proprietà <paramref name="identityReference" /> non è di tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> né di un tipo quale <see cref="T:System.Security.Principal.NTAccount" /> convertibile nel tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Type" /> associato alle regole di controllo dell'oggetto <see cref="T:System.IO.Pipes.PipeSecurity" /> corrente.</summary>
        <value>Tipo dell'oggetto associato alle regole di controllo dell'oggetto <see cref="T:System.IO.Pipes.PipeSecurity" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che derivano dal <xref:System.Security.AccessControl.ObjectSecurity> classe sostituzione il <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> proprietà e restituiscono il tipo utilizzato per rappresentare i diritti di accesso. Quando si utilizzano matrici o raccolte che contengono più tipi di oggetti di sicurezza, è possibile utilizzare questa proprietà per determinare il tipo di enumerazione appropriata da utilizzare con ogni oggetto di sicurezza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Persist">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Consente di salvare in un archivio permanente le sezioni specificate del descrittore di sicurezza associato all'oggetto <see cref="T:System.IO.Pipes.PipeSecurity" /> corrente.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="protected internal void Persist (System.Runtime.InteropServices.SafeHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Persist(class System.Runtime.InteropServices.SafeHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Persist (handle As SafeHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void Persist(System::Runtime::InteropServices::SafeHandle ^ handle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.InteropServices.SafeHandle" />
      </Parameters>
      <Docs>
        <param name="handle">L'handle dell'oggetto da proteggere associato all'oggetto <see cref="T:System.IO.Pipes.PipeSecurity" /> corrente.</param>
        <summary>Consente di salvare in un archivio permanente le sezioni specificate del descrittore di sicurezza associato all'oggetto <see cref="T:System.IO.Pipes.PipeSecurity" /> corrente.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="protected internal void Persist (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Persist(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.Persist(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Persist (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void Persist(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome dell'oggetto da proteggere al quale è associato l'oggetto <see cref="T:System.IO.Pipes.PipeSecurity" /> corrente.</param>
        <summary>Consente di salvare in un archivio permanente le sezioni specificate del descrittore di sicurezza associato all'oggetto <see cref="T:System.IO.Pipes.PipeSecurity" /> corrente.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As PipeAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Regola di accesso da rimuovere.</param>
        <summary>Rimuove una regola di accesso dall'elenco DACL (Discretionary Access Control List) associato all'oggetto <see cref="T:System.IO.Pipes.PipeSecurity" /> corrente.</summary>
        <returns>
          <see langword="true" /> se l'operazione riesce; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> metodo rimuove tutti i corrispondenti <xref:System.Security.AccessControl.AccessControlType.Deny> regole di accesso o tutti i corrispondenti <xref:System.Security.AccessControl.AccessControlType.Allow> le regole di accesso dall'oggetto corrente <xref:System.IO.Pipes.PipeSecurity> oggetto. Ad esempio, è possibile utilizzare questo metodo per rimuovere tutti <xref:System.Security.AccessControl.AccessControlType.Deny> regole di accesso per un utente passando un <xref:System.IO.Pipes.PipeAccessRule> oggetto creato utilizzando il <xref:System.Security.AccessControl.AccessControlType.Deny> valore, il <xref:System.IO.Pipes.PipeAccessRights.Read> valore e un account utente. Il <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> metodo rimuove le regole di negazione che specificano il <xref:System.IO.Pipes.PipeAccessRights.Read> valore o <xref:System.IO.Pipes.PipeAccessRights.Write> valore.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As PipeAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Regola di accesso da rimuovere.</param>
        <summary>Rimuove la regola di accesso specificata dall'elenco DACL (Discretionary Access Control List) associato all'oggetto <see cref="T:System.IO.Pipes.PipeSecurity" /> corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> metodo rimuove tutti i corrispondenti <xref:System.Security.AccessControl.AccessControlType.Deny> regole di accesso o tutti i corrispondenti <xref:System.Security.AccessControl.AccessControlType.Allow> le regole di accesso dall'oggetto corrente <xref:System.IO.Pipes.PipeSecurity> oggetto. Ad esempio, è possibile utilizzare questo metodo per rimuovere tutti <xref:System.Security.AccessControl.AccessControlType.Deny> regole di accesso per un utente passando un <xref:System.IO.Pipes.PipeAccessRule> oggetto creato utilizzando il <xref:System.Security.AccessControl.AccessControlType.Deny> valore, il <xref:System.IO.Pipes.PipeAccessRights.Read> valore e un account utente. Il <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> metodo rimuove le regole di negazione che specificano il <xref:System.IO.Pipes.PipeAccessRights.Read> valore o <xref:System.IO.Pipes.PipeAccessRights.Write> valore.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As PipeAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Regola di controllo da rimuovere.</param>
        <summary>Rimuove una regola di controllo dall'elenco SACL (System Access Control List) associato all'oggetto <see cref="T:System.IO.Pipes.PipeSecurity" /> corrente.</summary>
        <returns>
          <see langword="true" /> se la regola di accesso è stata rimossa. In caso contrario, <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A> metodo rimuove tutti i corrispondenti <xref:System.Security.AccessControl.AccessControlType.Deny> regole di controllo o tutti i corrispondenti <xref:System.Security.AccessControl.AccessControlType.Allow> audit regole corrente <xref:System.IO.Pipes.PipeSecurity> oggetto.  Ad esempio, è possibile utilizzare questo metodo per rimuovere tutti <xref:System.Security.AccessControl.AccessControlType.Deny> controllare le regole per un utente passando un <xref:System.Security.AccessControl.FileSystemAuditRule> oggetto creato utilizzando il <xref:System.Security.AccessControl.AccessControlType.Deny> valore, il <xref:System.Security.AccessControl.AuditFlags.Failure> valore e un account utente.  Quando si esegue questa operazione, il <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A> metodo rimuove le regole di negazione che specificano il <xref:System.Security.AccessControl.AuditFlags.Failure> valore o <xref:System.Security.AccessControl.AuditFlags.Success> valore.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As PipeAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Regola di controllo da rimuovere.</param>
        <summary>Rimuove tutte le regole di controllo che dispongono dello stesso identificatore di sicurezza e della stessa regola di controllo specificata dall'elenco SACL (System Access Control List) associato all'oggetto <see cref="T:System.IO.Pipes.PipeSecurity" /> corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll%2A> metodo rimuove tutte le regole di controllo per l'utente specificato.  Ignora tutti i valori di <xref:System.IO.Pipes.PipeAuditRule> oggetto tranne l'account utente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As PipeAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Regola di controllo da rimuovere.</param>
        <summary>Rimuove la regola di controllo specificata dall'elenco SACL (System Access Control List) associato all'oggetto <see cref="T:System.IO.Pipes.PipeSecurity" /> corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A> metodo rimuove il corrispondente specificata <xref:System.Security.AccessControl.AccessControlType.Deny> controllo regola o il corrispondente specificata <xref:System.Security.AccessControl.AccessControlType.Allow> regola di controllo dall'oggetto corrente <xref:System.IO.Pipes.PipeSecurity> oggetto.  Ad esempio, è possibile utilizzare questo metodo per rimuovere un oggetto specificato <xref:System.Security.AccessControl.AccessControlType.Deny> regola di controllo per un utente passando un <xref:System.Security.AccessControl.FileSystemAuditRule> oggetto creato utilizzando il <xref:System.Security.AccessControl.AccessControlType.Deny> valore, il <xref:System.Security.AccessControl.AuditFlags.Failure> valore e un account utente.  Quando si esegue questa operazione, il <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A> metodo rimuove solo una regola che specifica il <xref:System.Security.AccessControl.AuditFlags.Failure> valore.  Non rimuove le regole di negazione che specificano il <xref:System.Security.AccessControl.AuditFlags.Success> valore.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As PipeAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Regola di accesso da aggiungere.</param>
        <summary>Rimuove tutte le regole di accesso nell'elenco DACL (Discretionary Access Control List) associato all'oggetto <see cref="T:System.IO.Pipes.PipeSecurity" /> corrente, quindi aggiunge la regola di accesso specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> metodo aggiunge la regola di elenco (ACL) di controllo di accesso specificato o sovrascrive qualsiasi regola ACL identica corrispondente il `rule` parametro.  Ad esempio, se il `rule` parametro specifica un <xref:System.IO.Pipes.PipeAccessRights.Read> valore e <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> metodo individua una regola ACL identica che specifica il <xref:System.IO.Pipes.PipeAccessRights.Read> valore, la regola identica verrà sovrascritta.  Se il <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> metodo individua una regola ACL identica che specifica il <xref:System.IO.Pipes.PipeAccessRights.Write> valore, la regola identica anche verrà sovrascritta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As PipeAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Regola da impostare.</param>
        <summary>Imposta una regola di accesso nell'elenco DACL (Discretionary Access Control List) associato all'oggetto <see cref="T:System.IO.Pipes.PipeSecurity" /> corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> metodo aggiunge la regola di elenco (ACL) di controllo di accesso specificato o sovrascrive qualsiasi regola ACL identica corrispondente il <xref:System.IO.Pipes.PipeAccessRights> valore il `rule` parametro.  Ad esempio, se il `rule` parametro specifica un <xref:System.IO.Pipes.PipeAccessRights.Read> valore e <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> metodo individua una regola ACL identica che specifica il <xref:System.IO.Pipes.PipeAccessRights.Read> valore, la regola identica verrà sovrascritta.  Se il <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> metodo individua una regola ACL identica che specifica il <xref:System.IO.Pipes.PipeAccessRights.Write> valore, la regola identica non verrà sovrascritta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As PipeAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Regola da impostare.</param>
        <summary>Imposta una regola di controllo nell'elenco SACL (System Access Control List) associato all'oggetto <see cref="T:System.IO.Pipes.PipeSecurity" /> corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> metodo aggiunge la regola di controllo specificata o sovrascrive qualsiasi regola di controllo identica corrispondente il <xref:System.IO.Pipes.PipeAccessRights> valore il `rule` parametro.  Ad esempio, se il `rule` parametro specifica un <xref:System.IO.Pipes.PipeAccessRights.Read> valore e <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> metodo individua una regola di controllo identica che specifica il <xref:System.IO.Pipes.PipeAccessRights.Read> valore, la regola identica verrà sovrascritta.  Se il <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> metodo individua una regola di controllo identica che specifica il <xref:System.IO.Pipes.PipeAccessRights.Write> valore, la regola identica non verrà sovrascritta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="rule" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>