<Type Name="NamedPipeClientStream" FullName="System.IO.Pipes.NamedPipeClientStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="145ed8417b729beaf7802c52d9b3f51577c3b254" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30419885" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class NamedPipeClientStream : System.IO.Pipes.PipeStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NamedPipeClientStream extends System.IO.Pipes.PipeStream" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.NamedPipeClientStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NamedPipeClientStream&#xA;Inherits PipeStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NamedPipeClientStream sealed : System::IO::Pipes::PipeStream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Pipes.PipeStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Espone un oggetto <see cref="T:System.IO.Stream" /> di una named pipe, che supporta operazioni di lettura e scrittura sincrone e asincrone.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le named pipe forniscono pipe unidirezionale o duplex per la comunicazione tra un server di pipe e uno o più client pipe. Named pipe possono essere utilizzate per la comunicazione interprocesso localmente o in una rete. Un solo nome di pipe può essere condiviso da più <xref:System.IO.Pipes.NamedPipeClientStream> oggetti.  
  
 Qualsiasi processo può fungere da server named pipe o client o entrambi.  
  
> [!NOTE]
>  Per [!INCLUDE[winxppro](~/includes/winxppro-md.md)] e [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], un massimo di 10 pipe possa connettersi contemporaneamente attraverso la rete.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato un modo per inviare una stringa da un processo padre a un processo figlio sullo stesso computer utilizzando named pipe. Questo esempio viene creato un <xref:System.IO.Pipes.NamedPipeServerStream> oggetto in un processo padre. Il <xref:System.IO.Pipes.NamedPipeServerStream> oggetto ha un <xref:System.IO.Pipes.PipeDirection> valore <xref:System.IO.Pipes.PipeDirection.Out>. Il server attende quindi un <xref:System.IO.Pipes.NamedPipeClientStream> oggetto in un processo figlio per la connessione. In questo esempio, entrambi i processi sono nello stesso computer e <xref:System.IO.Pipes.NamedPipeClientStream> oggetto ha un <xref:System.IO.Pipes.PipeDirection> valore <xref:System.IO.Pipes.PipeDirection.In>. Il processo padre invia quindi una stringa fornita dall'utente al processo figlio. La stringa viene visualizzata nella console.  
  
 Questo esempio è relativo al processo client, che si connette al processo del server. Per l'esempio di codice completo, incluso il codice per la pipe client e server, vedere [How to: Use Named Pipes per la comunicazione di rete Interprocess](~/docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md).  
  
 [!code-csharp[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/vb/program.vb#01)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.Pipes.NamedPipeClientStream" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeClientStream (string pipeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pipeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeClientStream(System::String ^ pipeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pipeName">Nome della pipe.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> con il nome di pipe specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore utilizza i valori predefiniti seguenti:  
  
-   Nome del server predefinito ".".  
  
-   Valore predefinito è <xref:System.IO.Pipes.PipeDirection> valore <xref:System.IO.Pipes.PipeDirection.InOut>.  
  
-   Valore predefinito è <xref:System.IO.Pipes.PipeOptions> valore <xref:System.IO.Pipes.PipeOptions.None>.  
  
-   Valore predefinito è <xref:System.Security.Principal.TokenImpersonationLevel> valore <xref:System.Security.Principal.TokenImpersonationLevel.None>.  
  
-   Valore predefinito è <xref:System.IO.HandleInheritability> valore <xref:System.IO.HandleInheritability.None>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> è una stringa di lunghezza zero.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> è impostato su "anonymous".</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeClientStream (string serverName, string pipeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serverName, string pipeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serverName As String, pipeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeClientStream(System::String ^ serverName, System::String ^ pipeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="pipeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serverName">Nome del computer remoto a cui connettersi oppure "." per specificare il computer locale.</param>
        <param name="pipeName">Nome della pipe.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> con i nomi della pipe e del server specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore utilizza i valori predefiniti seguenti:  
  
-   Valore predefinito è <xref:System.IO.Pipes.PipeDirection> valore <xref:System.IO.Pipes.PipeDirection.InOut>.  
  
-   Valore predefinito è <xref:System.IO.Pipes.PipeOptions> valore <xref:System.IO.Pipes.PipeOptions.None>.  
  
-   Valore predefinito è <xref:System.Security.Principal.TokenImpersonationLevel> valore <xref:System.Security.Principal.TokenImpersonationLevel.None>.  
  
-   Valore predefinito è <xref:System.IO.HandleInheritability> valore <xref:System.IO.HandleInheritability.None>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> o <paramref name="serverName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> oppure <paramref name="serverName" /> è una stringa di lunghezza zero.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> è impostato su "anonymous".</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serverName, string pipeName, valuetype System.IO.Pipes.PipeDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serverName As String, pipeName As String, direction As PipeDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeClientStream(System::String ^ serverName, System::String ^ pipeName, System::IO::Pipes::PipeDirection direction);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
      </Parameters>
      <Docs>
        <param name="serverName">Nome del computer remoto a cui connettersi oppure "." per specificare il computer locale.</param>
        <param name="pipeName">Nome della pipe.</param>
        <param name="direction">Uno dei valori di enumerazione che determina la direzione della pipe.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> con i nomi della pipe e del server specificati e la direzione della pipe indicata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore utilizza i valori predefiniti seguenti:  
  
-   Valore predefinito è <xref:System.IO.Pipes.PipeOptions> valore <xref:System.IO.Pipes.PipeOptions.None>.  
  
-   Valore predefinito è <xref:System.Security.Principal.TokenImpersonationLevel> valore <xref:System.Security.Principal.TokenImpersonationLevel.None>.  
  
-   Valore predefinito è <xref:System.IO.HandleInheritability> valore <xref:System.IO.HandleInheritability.None>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato un metodo per inviare una stringa da un processo padre a un processo figlio utilizzando named pipe. Questo esempio viene creato un <xref:System.IO.Pipes.NamedPipeClientStream> oggetto in un processo figlio, che quindi si connette a una pipe nel computer locale. Esempio del server può essere visualizzato nel <xref:System.IO.Pipes.NamedPipeServerStream> classe. In questo esempio fa parte di un esempio più esaustivo disponibile per il <xref:System.IO.Pipes.NamedPipeServerStream> e <xref:System.IO.Pipes.NamedPipeClientStream> classi.  
  
 [!code-csharp[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> o <paramref name="serverName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> oppure <paramref name="serverName" /> è una stringa di lunghezza zero.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> è impostato su "anonymous".  
  
 oppure  
  
 <paramref name="direction" /> non è un valore valido di <see cref="T:System.IO.Pipes.PipeDirection" />.</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeClientStream (System.IO.Pipes.PipeDirection direction, bool isAsync, bool isConnected, Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, bool isAsync, bool isConnected, class Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeClientStream(System::IO::Pipes::PipeDirection direction, bool isAsync, bool isConnected, Microsoft::Win32::SafeHandles::SafePipeHandle ^ safePipeHandle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="isAsync" Type="System.Boolean" />
        <Parameter Name="isConnected" Type="System.Boolean" />
        <Parameter Name="safePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
      </Parameters>
      <Docs>
        <param name="direction">Uno dei valori di enumerazione che determina la direzione della pipe.</param>
        <param name="isAsync">
          <see langword="true" /> per indicare che l'handle è stato aperto in modo asincrono; in caso contrario, <see langword="false" />.</param>
        <param name="isConnected">
          <see langword="true" /> per indicare che la pipe è connessa; in caso contrario, <see langword="false" />.</param>
        <param name="safePipeHandle">Handle sicuro per la pipe che verrà incapsulata da questo oggetto <see cref="T:System.IO.Pipes.NamedPipeClientStream" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> per l'handle di pipe specificato con la direzione della pipe indicata.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException">Il flusso è stato chiuso.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="safePipeHandle" /> non è un handle valido.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="safePipeHandle" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="direction" /> non è un valore valido di <see cref="T:System.IO.Pipes.PipeDirection" />.</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serverName, string pipeName, valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.Pipes.PipeOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serverName As String, pipeName As String, direction As PipeDirection, options As PipeOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeClientStream(System::String ^ serverName, System::String ^ pipeName, System::IO::Pipes::PipeDirection direction, System::IO::Pipes::PipeOptions options);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
      </Parameters>
      <Docs>
        <param name="serverName">Nome del computer remoto a cui connettersi oppure "." per specificare il computer locale.</param>
        <param name="pipeName">Nome della pipe.</param>
        <param name="direction">Uno dei valori di enumerazione che determina la direzione della pipe.</param>
        <param name="options">Uno dei valori di enumerazione che determina come aprire o creare la pipe.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> con i nomi della pipe e del server specificati nonché la direzione e le opzioni della pipe indicate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore utilizza i valori predefiniti seguenti:  
  
-   Valore predefinito è <xref:System.Security.Principal.TokenImpersonationLevel> valore <xref:System.Security.Principal.TokenImpersonationLevel.None>.  
  
-   Valore predefinito è <xref:System.IO.HandleInheritability> valore <xref:System.IO.HandleInheritability.None>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> o <paramref name="serverName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> oppure <paramref name="serverName" /> è una stringa di lunghezza zero.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> è impostato su "anonymous".  
  
 oppure  
  
 <paramref name="direction" /> non è un valore valido di <see cref="T:System.IO.Pipes.PipeDirection" />.  
  
 oppure  
  
 <paramref name="options" /> non è un valore valido di <see cref="T:System.IO.Pipes.PipeOptions" />.</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serverName, string pipeName, valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.Pipes.PipeOptions options, valuetype System.Security.Principal.TokenImpersonationLevel impersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serverName As String, pipeName As String, direction As PipeDirection, options As PipeOptions, impersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeClientStream(System::String ^ serverName, System::String ^ pipeName, System::IO::Pipes::PipeDirection direction, System::IO::Pipes::PipeOptions options, System::Security::Principal::TokenImpersonationLevel impersonationLevel);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
        <Parameter Name="impersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="serverName">Nome del computer remoto a cui connettersi oppure "." per specificare il computer locale.</param>
        <param name="pipeName">Nome della pipe.</param>
        <param name="direction">Uno dei valori di enumerazione che determina la direzione della pipe.</param>
        <param name="options">Uno dei valori di enumerazione che determina come aprire o creare la pipe.</param>
        <param name="impersonationLevel">Uno dei valori di enumerazione che determina il livello di rappresentazione di sicurezza.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> con i nomi della pipe e del server specificati nonché la direzione e le opzioni della pipe e il livello di rappresentazione di sicurezza indicati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore utilizza un valore predefinito <xref:System.IO.HandleInheritability> valore <xref:System.IO.HandleInheritability.None>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> o <paramref name="serverName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> oppure <paramref name="serverName" /> è una stringa di lunghezza zero.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> è impostato su "anonymous".  
  
 oppure  
  
 <paramref name="direction" /> non è un valore valido di <see cref="T:System.IO.Pipes.PipeDirection" />.  
  
 oppure  
  
 <paramref name="options" /> non è un valore valido di <see cref="T:System.IO.Pipes.PipeOptions" />.  
  
 oppure  
  
 <paramref name="impersonationLevel" /> non è un valore valido di <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeAccessRights desiredAccessRights, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serverName, string pipeName, valuetype System.IO.Pipes.PipeAccessRights desiredAccessRights, valuetype System.IO.Pipes.PipeOptions options, valuetype System.Security.Principal.TokenImpersonationLevel impersonationLevel, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serverName As String, pipeName As String, desiredAccessRights As PipeAccessRights, options As PipeOptions, impersonationLevel As TokenImpersonationLevel, inheritability As HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeClientStream(System::String ^ serverName, System::String ^ pipeName, System::IO::Pipes::PipeAccessRights desiredAccessRights, System::IO::Pipes::PipeOptions options, System::Security::Principal::TokenImpersonationLevel impersonationLevel, System::IO::HandleInheritability inheritability);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="desiredAccessRights" Type="System.IO.Pipes.PipeAccessRights" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
        <Parameter Name="impersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="serverName">Nome del computer remoto a cui connettersi oppure "." per specificare il computer locale.</param>
        <param name="pipeName">Nome della pipe.</param>
        <param name="desiredAccessRights">Uno dei valori di enumerazione che specifica le autorizzazioni di accesso della pipe desiderate.</param>
        <param name="options">Uno dei valori di enumerazione che determina come aprire o creare la pipe.</param>
        <param name="impersonationLevel">Uno dei valori di enumerazione che determina il livello di rappresentazione di sicurezza.</param>
        <param name="inheritability">Uno dei valori di enumerazione che determina se l'handle sottostante sarà ereditabile dai processi figlio.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> con i nomi della pipe e del server specificati e le opzioni di pipe, il livello di rappresentazione di sicurezza e la modalità di ereditarietà indicati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La direzione della pipe per questo costruttore è determinata dal `desiredAccessRights` parametro. Se il `desiredAccessRights` valore <xref:System.IO.Pipes.PipeAccessRights.ReadData>, la direzione della pipe sarà <xref:System.IO.Pipes.PipeDirection.In>. Se il valore di `desiredAccessRights` è <xref:System.IO.Pipes.PipeAccessRights.WriteData>, la direzione della pipe sarà <xref:System.IO.Pipes.PipeDirection.Out>. Se il valore di `desiredAccessRights` include sia <xref:System.IO.Pipes.PipeAccessRights.ReadData> e <xref:System.IO.Pipes.PipeAccessRights.WriteData>, la direzione della pipe sarà <xref:System.IO.Pipes.PipeDirection.InOut>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> o <paramref name="serverName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> oppure <paramref name="serverName" /> è una stringa di lunghezza zero.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> è impostato su "anonymous".  
  
 oppure  
  
 <paramref name="options" /> non è un valore valido di <see cref="T:System.IO.Pipes.PipeOptions" />.  
  
 oppure  
  
 <paramref name="impersonationLevel" /> non è un valore valido di <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.  
  
 oppure  
  
 <paramref name="inheritability" /> non è un valore valido di <see cref="T:System.IO.HandleInheritability" />.</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serverName, string pipeName, valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.Pipes.PipeOptions options, valuetype System.Security.Principal.TokenImpersonationLevel impersonationLevel, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serverName As String, pipeName As String, direction As PipeDirection, options As PipeOptions, impersonationLevel As TokenImpersonationLevel, inheritability As HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeClientStream(System::String ^ serverName, System::String ^ pipeName, System::IO::Pipes::PipeDirection direction, System::IO::Pipes::PipeOptions options, System::Security::Principal::TokenImpersonationLevel impersonationLevel, System::IO::HandleInheritability inheritability);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
        <Parameter Name="impersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="serverName">Nome del computer remoto a cui connettersi oppure "." per specificare il computer locale.</param>
        <param name="pipeName">Nome della pipe.</param>
        <param name="direction">Uno dei valori di enumerazione che determina la direzione della pipe.</param>
        <param name="options">Uno dei valori di enumerazione che determina come aprire o creare la pipe.</param>
        <param name="impersonationLevel">Uno dei valori di enumerazione che determina il livello di rappresentazione di sicurezza.</param>
        <param name="inheritability">Uno dei valori di enumerazione che determina se l'handle sottostante sarà ereditabile dai processi figlio.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> con i nomi della pipe e del server specificati nonché la direzione e le opzioni della pipe, il livello di rappresentazione di sicurezza e la modalità di ereditarietà indicati.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> o <paramref name="serverName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> oppure <paramref name="serverName" /> è una stringa di lunghezza zero.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> è impostato su "anonymous".  
  
 oppure  
  
 <paramref name="direction" /> non è un valore valido di <see cref="T:System.IO.Pipes.PipeDirection" />.  
  
 oppure  
  
 <paramref name="options" /> non è un valore valido di <see cref="T:System.IO.Pipes.PipeOptions" />.  
  
 oppure  
  
 <paramref name="impersonationLevel" /> non è un valore valido di <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.  
  
 oppure  
  
 <paramref name="inheritability" /> non è un valore valido di <see cref="T:System.IO.HandleInheritability" />.</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">per l'attendibilità totale per il chiamante immediato. Impossibile usare questo membro in codice parzialmente attendibile.</permission>
      </Docs>
    </Member>
    <Member MemberName="CheckPipePropertyOperations">
      <MemberSignature Language="C#" Value="protected internal override void CheckPipePropertyOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CheckPipePropertyOperations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CheckPipePropertyOperations ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CheckPipePropertyOperations();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Effettua la connessione a un server in attesa.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.Connect" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Si connette a un server in attesa con un valore di timeout infinito.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo chiama il <xref:System.IO.Pipes.NamedPipeClientStream.Connect%28System.Int32%29> metodo con un valore di timeout infinito.  
  
 Questo metodo attende per un'istanza di pipe diventi disponibile. <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> potrebbe restituire prima <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> viene chiamato dal <xref:System.IO.Pipes.NamedPipeServerStream> oggetto, ma <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> non restituirà finché <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> ha restituito.  
  
 Tutti i dati scritti nella pipe dopo un <xref:System.IO.Pipes.NamedPipeClientStream> è connesso l'oggetto, ma prima della chiamata di <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>, saranno disponibili per il server dopo la chiamata a <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato un metodo per inviare una stringa da un processo padre a un processo figlio utilizzando named pipe. Questo esempio viene creato un <xref:System.IO.Pipes.NamedPipeClientStream> oggetto in un processo figlio, che quindi si connette a una pipe nel computer locale. Esempio del server può essere visualizzato nel <xref:System.IO.Pipes.NamedPipeServerStream> classe. In questo esempio fa parte di un esempio più esaustivo disponibile per il <xref:System.IO.Pipes.NamedPipeServerStream> e <xref:System.IO.Pipes.NamedPipeClientStream> classi.  
  
 [!code-csharp[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il client è già connesso.</exception>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(int timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout">Numero di millisecondi di attesa per la risposta del server prima del timeout della connessione.</param>
        <summary>Effettua la connessione a un server in attesa entro il periodo di timeout specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo attende per un'istanza di pipe diventi disponibile. <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> potrebbe restituire prima <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> viene chiamato dal <xref:System.IO.Pipes.NamedPipeServerStream>, ma <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> non restituirà finché <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> ha restituito. Impostare il `timeout` parametro <xref:System.Threading.Timeout.Infinite> per specificare un valore di timeout infinito.  
  
 Tutti i dati scritti nella pipe dopo un <xref:System.IO.Pipes.NamedPipeClientStream> è connesso l'oggetto, ma prima della chiamata di <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>, saranno disponibili per il server dopo la chiamata a <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TimeoutException">Impossibile connettersi al server entro il periodo <paramref name="timeout" /> specificato.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="timeout" /> è minore di 0 e non impostato su <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
        <exception cref="T:System.InvalidOperationException">Il client è già connesso.</exception>
        <exception cref="T:System.IO.IOException">Il server è connesso a un altro client e il periodo di timeout è scaduto.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Attività che rappresenta l'operazione di connessione asincrona.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Si connette in modalità asincrona a un server in attesa con un valore di timeout infinito.</summary>
        <returns>Attività che rappresenta l'operazione di connessione asincrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (timeout As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(int timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout">Numero di millisecondi di attesa per la risposta del server prima del timeout della connessione.</param>
        <summary>Si connette in modalità asincrona a un server in attesa entro il periodo di timeout specificato.</summary>
        <returns>Attività che rappresenta l'operazione di connessione asincrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Token per il monitoraggio delle richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>Si connette in modalità asincrona a un server in attesa ed esegue il monitoraggio delle richieste di annullamento.</summary>
        <returns>Attività che rappresenta l'operazione di connessione asincrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (int timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(int32 timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(int timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeout">Numero di millisecondi di attesa per la risposta del server prima del timeout della connessione.</param>
        <param name="cancellationToken">Token per il monitoraggio delle richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
        <summary>Si connette in modalità asincrona a un server in attesa entro il periodo di timeout specificato ed esegue il monitoraggio delle richieste di annullamento.</summary>
        <returns>Attività che rappresenta l'operazione di connessione asincrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~NamedPipeClientStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeClientStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!NamedPipeClientStream ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia le risorse non gestite ed esegue altre operazioni di pulizia prima che l'istanza di <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> venga recuperata da Garbage Collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfServerInstances">
      <MemberSignature Language="C#" Value="public int NumberOfServerInstances { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfServerInstances" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberOfServerInstances As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberOfServerInstances { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di istanze del server che condividono lo stesso nome di pipe.</summary>
        <value>Numero di istanze del server che condividono lo stesso nome di pipe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà restituisce il numero di istanze del server per il <xref:System.IO.Pipes.NamedPipeServerStream> che l'oggetto corrente <xref:System.IO.Pipes.NamedPipeClientStream> oggetto dispone di un handle o è connesso. Se l'oggetto corrente <xref:System.IO.Pipes.NamedPipeClientStream> oggetto non è ancora connesso a un server di named pipe o se l'handle di pipe corrente non è ancora stata impostata, questa proprietà genera un <xref:System.InvalidOperationException>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato un metodo per inviare una stringa da un processo padre a un processo figlio utilizzando named pipe. In questo esempio, un <xref:System.IO.Pipes.NamedPipeClientStream> oggetto viene creato in un processo figlio, che quindi si connette a una pipe nel computer locale. Esempio del server può essere visualizzato nel <xref:System.IO.Pipes.NamedPipeServerStream> classe. In questo esempio fa parte di un esempio più esaustivo disponibile per il <xref:System.IO.Pipes.NamedPipeServerStream> e <xref:System.IO.Pipes.NamedPipeClientStream> classi.  
  
 [!code-csharp[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'handle di pipe non è stato impostato.  
  
 oppure  
  
 L'oggetto <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> corrente non è stato ancora connesso a un oggetto <see cref="T:System.IO.Pipes.NamedPipeServerStream" />.</exception>
        <exception cref="T:System.IO.IOException">Pipe danneggiata oppure errore di I/O.</exception>
        <exception cref="T:System.ObjectDisposedException">L'handle della pipe sottostante è chiuso.</exception>
      </Docs>
    </Member>
  </Members>
</Type>