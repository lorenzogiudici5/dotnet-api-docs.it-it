<Type Name="IsVolatile" FullName="System.Runtime.CompilerServices.IsVolatile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bb30468630aa8d74a2407d01b7e38f4270d381f0" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37639232" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class IsVolatile" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsVolatile extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsVolatile" />
  <TypeSignature Language="VB.NET" Value="Public Class IsVolatile" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsVolatile abstract sealed" />
  <TypeSignature Language="F#" Value="type IsVolatile = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7ce5f-101">Contrassegna un campo come volatile.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7ce5f-101">Marks a field as volatile.</span>
      </span>
      <span data-ttu-id="7ce5f-102">Questa classe non può essere ereditata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7ce5f-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce5f-103">`IsVolatile` viene utilizzato solo in modificatori personalizzati delle firme del metodo per indicare che il campo contrassegnato è volatile.</span><span class="sxs-lookup"><span data-stu-id="7ce5f-103">`IsVolatile` is used only in custom modifiers of method signatures to indicate that the field it marks is volatile.</span></span> <span data-ttu-id="7ce5f-104">Qualsiasi compilatore importazione di metadati con uno o più campi contrassegnati come volatile deve utilizzare le istruzioni con precedute `volatile.` per accedere a tali campi.</span><span class="sxs-lookup"><span data-stu-id="7ce5f-104">Any compiler that imports metadata with one or more fields marked as volatile must use instructions prefixed with `volatile.` to access such fields.</span></span>  
  
 <span data-ttu-id="7ce5f-105">Le classi in <xref:System.Runtime.CompilerServices> sono per solo uso ai writer di compilatori.</span><span class="sxs-lookup"><span data-stu-id="7ce5f-105">The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.</span></span>  
  
 <span data-ttu-id="7ce5f-106">I compilatori creano i modificatori personalizzati all'interno dei metadati per modificare il modo in cui il compilatore JIT just-in-time gestisce i valori quando il comportamento predefinito non è appropriato.</span><span class="sxs-lookup"><span data-stu-id="7ce5f-106">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="7ce5f-107">Quando il compilatore JIT rileva un modificatore personalizzato, che gestisce il valore in modo che il modificatore specifica.</span><span class="sxs-lookup"><span data-stu-id="7ce5f-107">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="7ce5f-108">I compilatori possono applicare i modificatori personalizzati a metodi e parametri e valori restituiti.</span><span class="sxs-lookup"><span data-stu-id="7ce5f-108">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="7ce5f-109">Il compilatore JIT deve rispondere ai modificatori necessari, ma possa ignorare i modificatori facoltativi.</span><span class="sxs-lookup"><span data-stu-id="7ce5f-109">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  <span data-ttu-id="7ce5f-110">Un compilatore C++ è stato possibile creare un modificatore personalizzato per descrivere come un byte deve essere considerato nei casi in cui il compilatore JIT considera i byte in modo che non è compatibile con C++ per impostazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="7ce5f-110">A C++ compiler could emit a custom modifier to describe how a byte should be treated in cases where the JIT compiler treats bytes in a manner that is not compatible with C++ by default.</span></span>  
  
 <span data-ttu-id="7ce5f-111">È possibile generare modificatori personalizzati nei metadati tramite una delle tecniche seguenti:</span><span class="sxs-lookup"><span data-stu-id="7ce5f-111">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="7ce5f-112">Utilizzo dei metodi di <xref:System.Reflection.Emit.TypeBuilder> classe, ad esempio <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, e <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce5f-112">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="7ce5f-113">Generazione di un file di istruzioni di Microsoft intermediate language (MSIL) che contiene le chiamate a `modopt` e `modreq`e assemblare il file con il [Ilasm.exe (Assembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="7ce5f-113">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="7ce5f-114">Usando l'API di reflection non gestita.</span><span class="sxs-lookup"><span data-stu-id="7ce5f-114">Using the unmanaged reflection API.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>