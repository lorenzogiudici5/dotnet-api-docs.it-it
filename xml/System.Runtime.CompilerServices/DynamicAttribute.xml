<Type Name="DynamicAttribute" FullName="System.Runtime.CompilerServices.DynamicAttribute">
  <TypeSignature Language="C#" Value="public sealed class DynamicAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DynamicAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.DynamicAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DynamicAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Dynamic.Runtime</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f3420-101">Indica che è l'utilizzo di <see cref="T:System.Object" /> su un membro va trattato come tipo inviato dinamicamente.</span><span class="sxs-lookup"><span data-stu-id="f3420-101">Indicates that the use of <see cref="T:System.Object" /> on a member is meant to be treated as a dynamically dispatched type.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f3420-102">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.DynamicAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="f3420-102">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.DynamicAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.DynamicAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3420-103">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.DynamicAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="f3420-103">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.DynamicAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3420-104">Quando utilizzato in una specifica di attributo, il costruttore predefinito è semanticamente equivalente a `DynamicAttribute({ true })`e può essere considerata una sintassi abbreviata per l'espressione.</span><span class="sxs-lookup"><span data-stu-id="f3420-104">When used in an attribute specification, the default constructor is semantically equivalent to `DynamicAttribute({ true })`, and can be considered a shorthand for that expression.</span></span> <span data-ttu-id="f3420-105">E deve pertanto essere usato solo su un elemento di tipo <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="f3420-105">It should therefore only be used on an element of type <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicAttribute (bool[] transformFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool[] transformFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.DynamicAttribute.#ctor(System.Boolean[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transformFlags As Boolean())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicAttribute(cli::array &lt;bool&gt; ^ transformFlags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transformFlags" Type="System.Boolean[]" />
      </Parameters>
      <Docs>
        <param name="transformFlags"><span data-ttu-id="f3420-106">Specifica, in un prefisso traversal della costruzione di un tipo, quali occorrenze <see cref="T:System.Object" /> vanno trattate come tipo dinamicamente inviato.</span><span class="sxs-lookup"><span data-stu-id="f3420-106">Specifies, in a prefix traversal of a type's construction, which <see cref="T:System.Object" /> occurrences are meant to be treated as a dynamically dispatched type.</span></span></param>
        <summary><span data-ttu-id="f3420-107">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.DynamicAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="f3420-107">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.DynamicAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3420-108">Questo costruttore è destinato a essere utilizzato nei tipi che si basano su un'occorrenza sottostante del <xref:System.Object> che deve essere gestito in modo dinamico.</span><span class="sxs-lookup"><span data-stu-id="f3420-108">This constructor is meant to be used on types that are built on an underlying occurrence of <xref:System.Object> that is meant to be treated dynamically.</span></span>  
  
 <span data-ttu-id="f3420-109">Ad esempio, se `C` è un tipo generico con due parametri di tipo, un utilizzo del tipo costruito `C<Object,Object>` potrebbe essere destinato a trattare il primo argomento di tipo in modo dinamico e il secondo in genere, nel qual caso la specifica di attributo appropriato deve utilizzare un `transformFlags` valore `{ false, true, false }`.</span><span class="sxs-lookup"><span data-stu-id="f3420-109">For instance, if `C` is a generic type with two type parameters, a use of the constructed type `C<Object,Object>` might be intended to treat the first type argument dynamically and the second typically, in which case the appropriate attribute specification should use a `transformFlags` value of `{ false, true, false }`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformFlags">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;bool&gt; TransformFlags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;bool&gt; TransformFlags" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.DynamicAttribute.TransformFlags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransformFlags As IList(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;bool&gt; ^ TransformFlags { System::Collections::Generic::IList&lt;bool&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f3420-110">Specifica, in un prefisso traversal della costruzione di un tipo, quali occorrenze <see cref="T:System.Object" /> vanno trattate come tipo dinamicamente inviato.</span><span class="sxs-lookup"><span data-stu-id="f3420-110">Specifies, in a prefix traversal of a type's construction, which <see cref="T:System.Object" /> occurrences are meant to be treated as a dynamically dispatched type.</span></span></summary>
        <value><span data-ttu-id="f3420-111">Elenco di occorrenze di <see cref="T:System.Object" /> da trattare come tipo inviato dinamicamente.</span><span class="sxs-lookup"><span data-stu-id="f3420-111">The list of <see cref="T:System.Object" /> occurrences that are meant to be treated as a dynamically dispatched type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>