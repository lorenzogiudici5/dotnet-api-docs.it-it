<Type Name="IsConst" FullName="System.Runtime.CompilerServices.IsConst">
  <TypeSignature Language="C#" Value="public static class IsConst" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsConst extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsConst" />
  <TypeSignature Language="VB.NET" Value="Public Class IsConst" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsConst abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4cb13-101">Indica che per il tipo modificato è disponibile un modificatore <see langword="const" />.</span><span class="sxs-lookup"><span data-stu-id="4cb13-101">Indicates that the modified type has a <see langword="const" /> modifier.</span></span> <span data-ttu-id="4cb13-102">Questa classe non può essere ereditata.</span><span class="sxs-lookup"><span data-stu-id="4cb13-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cb13-103">Il compilatore Microsoft C++ genera questo modificatore nei metadati per qualsiasi parametro, il tipo restituito, o dichiarazione dell'oggetto dichiarato come `const` nel codice sorgente.</span><span class="sxs-lookup"><span data-stu-id="4cb13-103">The Microsoft C++ compiler emits this modifier into metadata for any parameter, return type, or object declaration declared as `const` in the source code.</span></span>  
  
 <span data-ttu-id="4cb13-104">I compilatori creano modificatori personalizzati all'interno dei metadati per modificare il modo in cui il compilatore JIT just-in-time gestisce valori quando il comportamento predefinito non è appropriato.</span><span class="sxs-lookup"><span data-stu-id="4cb13-104">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="4cb13-105">Quando il compilatore JIT rileva un modificatore personalizzato, gestisce il valore in modo che specifica il modificatore.</span><span class="sxs-lookup"><span data-stu-id="4cb13-105">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="4cb13-106">Compilatori possono applicare modificatori personalizzati a metodi, parametri e valori restituiti.</span><span class="sxs-lookup"><span data-stu-id="4cb13-106">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="4cb13-107">Il compilatore JIT deve rispondere ai modificatori obbligatori, ma possa ignorare i modificatori facoltativi.</span><span class="sxs-lookup"><span data-stu-id="4cb13-107">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  
  
 <span data-ttu-id="4cb13-108">È possibile creare i modificatori personalizzati nei metadati tramite una delle tecniche seguenti:</span><span class="sxs-lookup"><span data-stu-id="4cb13-108">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="4cb13-109">Utilizzo dei metodi di <xref:System.Reflection.Emit.TypeBuilder> classe, ad esempio <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, e <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="4cb13-109">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="4cb13-110">Generazione di un file di istruzioni di Microsoft intermediate language (MSIL) che contiene chiamate a `modopt` e `modreq`e l'assemblaggio del file con il [Ilasm.exe (Assembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="4cb13-110">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="4cb13-111">Usando l'API di reflection non gestita.</span><span class="sxs-lookup"><span data-stu-id="4cb13-111">Using the unmanaged reflection API.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4cb13-112">Nell'esempio riportato di seguito viene illustrato come creare un <xref:System.Runtime.CompilerServices.IsConst> oggetto in un assembly tramite reflection.</span><span class="sxs-lookup"><span data-stu-id="4cb13-112">The following example demonstrates how to emit an <xref:System.Runtime.CompilerServices.IsConst> object into an assembly using reflection.</span></span>  
  
 [!code-cpp[Runtime.CompilerServices.IsConst#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsConst/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>