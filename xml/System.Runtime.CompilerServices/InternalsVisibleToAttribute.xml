<Type Name="InternalsVisibleToAttribute" FullName="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fce3c411e3d6daf4320db60d4d1e2a5898d7ff9d" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51903034" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class InternalsVisibleToAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InternalsVisibleToAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InternalsVisibleToAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalsVisibleToAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InternalsVisibleToAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifica che i tipi che sono in genere visibili solo all'interno dall'assembly corrente possono essere visualizzati da un assembly specificato.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, i tipi e membri con `internal` ambito (in c#) e `friend` ambito (in Visual Basic) sono visibili solo nell'assembly in cui sono definiti. Il <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attributo li rende visibile anche ai tipi in un assembly specificato, che è noto come un assembly friend.  
  
 L'attributo viene applicato a livello di assembly. Ciò significa che può essere incluso all'inizio del file del codice sorgente, o può essere incluso nel file AssemblyInfo in un progetto di Visual Studio. È possibile usare l'attributo per specificare un solo assembly friend che possono accedere i tipi e membri interni dell'assembly corrente. È possibile definire più assembly friend in due modi. Possono essere visualizzati come singoli attributi a livello di assembly, come illustrato nell'esempio seguente.  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple1.cs#3)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple1.vb#3)]  
  
 Possono apparire anche con separato <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> tag, ma un singolo `assembly` (parola chiave), come illustrato nell'esempio seguente viene illustrato.  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple2.cs#4)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple2.vb#4)]  
  
 Assembly friend è identificato dal <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> costruttore. L'assembly corrente e l'assembly friend devono essere entrambi non firmati o entrambi gli assembly devono essere firmati con un nome sicuro.  
  
 Se entrambi gli assembly non firmati, la `assemblyName` argomento costituito dal nome dell'assembly friend specificato senza estensione di nome file o percorso di directory.  
  
 Se entrambi gli assembly vengono firmati con un nome sicuro nome, l'argomento di <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> costruttore deve essere costituito il nome dell'assembly senza la relativa directory file o percorso nome estensione, insieme a chiave pubblica completa (e non il relativo token di chiave pubblica). Per ottenere la chiave pubblica completa di un assembly con nome sicuro, vedere la [ottenere la chiave pubblica completa](#Key) sezione più avanti in questo articolo. Per altre informazioni sull'uso <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> con assembly con nome sicuro, vedere il <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> costruttore.  
  
 Non includere valori per il <xref:System.Reflection.AssemblyName.CultureInfo%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, o <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A> campo nell'argomento; i compilatori Visual Basic, c# e C++ trattarlo come un errore del compilatore. Se si usa un compilatore che non viene considerato un errore (ad esempio la [Assembler IL (ILAsm.exe)](~/docs/framework/tools/ilasm-exe-il-assembler.md)) e gli assembly sono sicuro, un <xref:System.MethodAccessException> eccezione al primo accesso assembly friend specificato il assembly che contiene il <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attributo.  
  
 Per altre informazioni su come usare questo attributo, vedere gli argomenti seguenti:  
  
-   [Assembly di tipo friend (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [Assembly Friend](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
<a name="Key"></a>   
## <a name="getting-the-full-public-key"></a>Ottenere la chiave pubblica completa  
 È possibile usare la [strumento nome sicuro (Sn.exe)](~/docs/framework/tools/sn-exe-strong-name-tool.md) per recuperare la chiave pubblica completa da un file chiave con nome sicuro (snk). A tale scopo, attenersi alla procedura seguente:  
  
1.  Estrarre la chiave pubblica dal file di chiave assembly con nome sicuro in un file separato:  
  
     **Sn -p***snk_file* *FileOut*   
  
2.  Visualizzare la chiave pubblica completa nella console:  
  
     **Sn - tp***FileOut*  
  
3.  Copiare e incollare il valore della chiave pubblico completa nel codice sorgente.  
  
## <a name="compiling-the-friend-assembly-with-c"></a>La compilazione dell'assembly friend con c#  
 Se si usa il compilatore c# per compilare l'assembly friend, è necessario specificare esplicitamente il nome del file di output (.exe o DLL) usando il **/out** opzione del compilatore. Il compilatore non ha infatti ancora generato il nome dell'assembly in fase di compilazione quando crea l'associazione a riferimenti esterni. Il **/out** l'opzione del compilatore è facoltativa per il compilatore Visual Basic e il corrispondente **-out** o **-o** opzione del compilatore non deve essere usata durante la compilazione di tipo friend gli assembly con il F# compilatore.  
  
## <a name="compiling-the-friend-assembly-with-c"></a>La compilazione dell'assembly friend con C++  
 In C++, per rendere i membri interni abilitati per il <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attributo accessibile a un assembly friend, è necessario usare il `as_friend` attributo della direttiva di C++. Per altre informazioni, vedere [gli assembly Friend (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd).  
  
   
  
## Examples  
 **Assembly firmati**  
  
 L'esempio seguente usa il <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attributi per rendere un' `internal` metodo denominato `AppendDirectorySeparator` in un assembly firmato visibile a un altro assembly firmato. Definisce un `FileUtilities` classe che include un interno `AppendDirectorySeparator` (metodo). Il <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attributo è applicato all'assembly che contiene il `FileUtilities` classe. L'attributo consente a un assembly denominato `Friend1` per accedere a questo membro interno.  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 Se l'esempio seguente viene compilato in un assembly con nome sicuro denominato `Friend1`, il `Example.Main` metodo nella `Friend1` potere chiamare correttamente il `FileUtilities.AppendDirectorySeparator` metodo, anche se il metodo è interno al `Assembly1` assembly. Si noti che se esegue la compilazione nel linguaggio c# dalla riga di comando, è necessario usare il **/out** opzione del compilatore per garantire che il nome dell'assembly friend è disponibile quando il compilatore associa a riferimenti esterni.  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 **Assembly non firmati**  
  
 L'esempio seguente usa il <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attributi per rendere un `internal` unsigned di membro di un assembly non firmato visibile a un altro assembly. L'attributo assicura che il `internal` `StringLib.IsFirstLetterUpperCase` metodo in un assembly denominato `UtilityLib` è visibile al codice in un assembly denominato `Friend2`.  Di seguito è riportato il codice sorgente per UtilityLib.dll:  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 Nell'esempio seguente fornisce il codice sorgente per il `Friend2` assembly. Si noti che se esegue la compilazione nel linguaggio c# dalla riga di comando, è necessario usare il **/out** opzione del compilatore per garantire che il nome dell'assembly friend è disponibile quando il compilatore associa a riferimenti esterni.  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalsVisibleToAttribute (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalsVisibleToAttribute(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.CompilerServices.InternalsVisibleToAttribute : string -&gt; System.Runtime.CompilerServices.InternalsVisibleToAttribute" Usage="new System.Runtime.CompilerServices.InternalsVisibleToAttribute assemblyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">Nome di un assembly Friend.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> con il nome dell'assembly Friend specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> costruttore definisce un assembly friend, che è un assembly che ha accesso per i tipi e membri interni dell'assembly corrente.  
  
 L'assembly corrente e l'assembly friend devono essere entrambi non firmati o entrambi devono essere firmati con un nome sicuro. (Per altre informazioni sugli assembly con nome sicuro, vedere [creazione e assembly con nome sicuro](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md).) Se entrambi non sono firmati, la `assemblyName` argomento costituito dal nome dell'assembly friend specificato senza estensione di file o percorso directory. Se entrambi sono firmati, `assemblyName` costituita dal nome dell'assembly friend senza la relativa directory file o percorso nome estensione, insieme alla chiave pubblica completa (ma non il relativo token di chiave pubblica). Gli altri componenti di un nome sicuro, ad esempio quelli che forniscono le impostazioni cultura, versione o sull'architettura del processore, non è possibile specificare nel `assemblyName` argomento.  
  
> [!IMPORTANT]
>  Se si usa il compilatore c# per compilare l'assembly friend, è necessario specificare esplicitamente il nome del file di output (.exe o DLL) usando il **/out** opzione del compilatore. Il compilatore non ha infatti ancora generato il nome dell'assembly in fase di compilazione quando crea l'associazione a riferimenti esterni. Il **/out** l'opzione del compilatore è facoltativa per il compilatore Visual Basic e il corrispondente **-out** o **-o** opzione del compilatore non deve essere usata durante la compilazione di tipo friend gli assembly con il F# compilatore.  
  
 È possibile usare [Sn.exe (Strong Name Tool)](~/docs/framework/tools/sn-exe-strong-name-tool.md) per recuperare la chiave pubblica completa da un file chiave con nome sicuro (snk). A tale scopo, attenersi alla procedura seguente:  
  
1.  Estrarre la chiave pubblica dal file di chiave assembly con nome sicuro in un file separato:  
  
     **Sn -p***snk_file* *FileOut*   
  
2.  Visualizzare la chiave pubblica completa nella console:  
  
     **Sn - tp***FileOut*  
  
3.  Copiare e incollare il valore della chiave pubblico completa nel codice sorgente.  
  
 Per altre informazioni su come usare il <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attributo, vedere gli argomenti seguenti:  
  
-   [Assembly di tipo friend (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [Assembly Friend](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
   
  
## Examples  
 **Assembly firmati**  
  
 L'esempio seguente usa il <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attributi per rendere un' `internal` metodo denominato `AppendDirectorySeparator` in un assembly firmato visibile a un altro assembly firmato. Definisce un `FileUtilities` classe che include un interno `AppendDirectorySeparator` (metodo). Il <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attributo è applicato all'assembly che contiene il `FileUtilities` classe. L'attributo consente a un assembly denominato `Friend1` per accedere a questo membro interno.  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 Se l'esempio seguente viene compilato in un assembly con nome sicuro denominato `Friend1`, può chiamare correttamente il `FileUtilities.AppendDirectorySeparator` metodo, anche se il metodo è interno al `Assembly1` assembly. Si noti che se esegue la compilazione nel linguaggio c# dalla riga di comando, è necessario usare il **/out** opzione del compilatore per garantire che il nome dell'assembly friend è disponibile quando il compilatore associa a riferimenti esterni.  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 L'esempio seguente usa il <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attributi per rendere un `internal` unsigned di membro di un assembly non firmato visibile a un altro assembly. L'attributo assicura che il `internal` `StringLib.IsFirstLetterUpperCase` metodo in un assembly denominato `UtilityLib` è visibile al codice in un assembly denominato `Friend2`.  Di seguito è riportato il codice sorgente per UtilityLib.dll:  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 **Assembly non firmati**  
  
 Nell'esempio seguente fornisce il codice sorgente per il `Friend2` assembly. Si noti che se esegue la compilazione nel linguaggio c# dalla riga di comando, è necessario usare il **/out** opzione del compilatore per garantire che il nome dell'assembly friend è disponibile quando il compilatore associa a riferimenti esterni.  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllInternalsVisible">
      <MemberSignature Language="C#" Value="public bool AllInternalsVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllInternalsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property AllInternalsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllInternalsVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllInternalsVisible : bool with get, set" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Questa proprietà non è implementata.</summary>
        <value>Questa proprietà non restituisce valori.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : string" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome dell'assembly Friend al quale vengono resi visibili tutti i tipi e i membri dei tipi contrassegnati con la parola chiave <see langword="internal" />.</summary>
        <value>Stringa che rappresenta il nome dell'assembly Friend.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni su come usare il <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attributo, vedere gli argomenti seguenti:  
  
-   [Assembly di tipo friend (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [Assembly Friend](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>