<Type Name="TupleElementNamesAttribute" FullName="System.Runtime.CompilerServices.TupleElementNamesAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a7ad11236886c74ca374e4cc3b566e6eea4a40ef" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36636102" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TupleElementNamesAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TupleElementNamesAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.TupleElementNamesAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TupleElementNamesAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TupleElementNamesAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TupleElementNamesAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ValueTuple</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Event | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Indica che l'utilizzo di una tupla di valori in un membro deve essere considerato come quello di una tupla con nomi di elementi.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TupleElementNamesAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.TupleElementNamesAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TupleElementNamesAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TupleElementNamesAttribute (string[] transformNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] transformNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.TupleElementNamesAttribute.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transformNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TupleElementNamesAttribute(cli::array &lt;System::String ^&gt; ^ transformNames);" />
      <MemberSignature Language="F#" Value="new System.Runtime.CompilerServices.TupleElementNamesAttribute : string[] -&gt; System.Runtime.CompilerServices.TupleElementNamesAttribute" Usage="new System.Runtime.CompilerServices.TupleElementNamesAttribute transformNames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transformNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="transformNames">Matrice di stringhe che specifica le occorrenze di tuple di valori che devono portare i nomi degli elementi in un attraversamento pre-ordine in profondità di costruzione di un tipo.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.TupleElementNamesAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore viene utilizzato nei tipi che contengono un'istanza di tupla valore con i nomi degli elementi.  Ad esempio, se `C` è un tipo generico con due parametri di tipo, quindi l'utilizzo del tipo costruito `C(` <xref:System.ValueTuple%602> `,` <xref:System.ValueTuple%603> `)` può essere destinato a gestire il primo argomento di tipo come una tupla con ele menta i nomi e il secondo come una tupla senza nomi di elemento. In questo caso, la specifica di attributo appropriato deve utilizzare un `transformNames` valore `{ "name1", "name2", null, null,          null}`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; TransformNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; TransformNames" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.TupleElementNamesAttribute.TransformNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransformNames As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::String ^&gt; ^ TransformNames { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransformNames : System.Collections.Generic.IList&lt;string&gt;" Usage="System.Runtime.CompilerServices.TupleElementNamesAttribute.TransformNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifica gli elementi delle tuple di valori che devono portare i nomi degli elementi in un attraversamento pre-ordine in profondità di costruzione di un tipo.</summary>
        <value>Matrice che indica gli elementi delle tuple di valori che devono portare i nomi degli elementi.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>