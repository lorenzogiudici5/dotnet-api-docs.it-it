<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="46abe19aea8376a990307ff0ed9a404e52a57119" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36637483" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate TValue ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback(TKey key) where TKey : class where TValue : class;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed ConditionalWeakTable`2/CreateValueCallback&lt;class TKey, class TValue&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ConditionalWeakTable(Of TKey, TValue).CreateValueCallback(key As TKey) As TValue " />
  <TypeSignature Language="C++ CLI" Value="public:  where TKey : class where TValue : classdelegate TValue ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback(TKey key);" />
  <TypeSignature Language="F#" Value="type ConditionalWeakTable&lt;'Key, 'Value (requires 'Key : null and 'Value : null)&gt;.CreateValueCallback = delegate of 'Key -&gt; 'Value" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TValue">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="key" Type="TKey" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TValue</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="key">Chiave che appartiene al valore da creare.</param>
    <summary>Rappresenta un metodo che crea un valore non predefinito da aggiungere come parte di una coppia chiave/valore a un oggetto <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />.</summary>
    <returns>Istanza di un tipo riferimento che rappresenta il valore da associare alla chiave specificata.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegato incapsula un metodo di callback che viene richiamato dal <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=nameWithType> metodo quando la chiave passata al metodo non viene trovato nel <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> oggetto. Il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> metodo passa al metodo di callback la chiave che rappresenta un oggetto gestito a cui è un valore della proprietà da associare in modo dinamico. Il metodo è responsabile della restituzione del valore di proprietà per il chiamante che, a sua volta, aggiunge la coppia chiave/valore per la tabella.  
  
 Il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> metodo viene utilizzato per restituire un'istanza di un tipo riferimento che può essere collegato alla chiave specificata. Consente che l'istanza venga inizializzata utilizzando valori non predefiniti. Se la chiave non viene trovata nella tabella, la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=nameWithType> metodo aggiunge una coppia chiave/valore in cui il valore viene inizializzato usando i valori predefiniti.  
  
   
  
## Examples  
 L'esempio seguente definisce una `MainClass` classe e un `MainInfo` classe. `MainInfo` vengono fornite informazioni sul `MainClass` istanza. Definisce anche un valore statico (`Shared` in Visual Basic) `CreateAttachedValue` metodo che può essere assegnato alle <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegare e passato al <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> (metodo). L'esempio chiama il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> metodo per aggiungere un `MainClass` oggetto e il corrispondente `MainInfo` dell'oggetto a un <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabella. L'esempio illustra anche le chiamate per il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> e <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> metodi per aggiungere coppie chiave/valore per la tabella e una chiamata al <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> metodo per recuperare il valore che appartiene a una chiave esistente.  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
  </Docs>
</Type>