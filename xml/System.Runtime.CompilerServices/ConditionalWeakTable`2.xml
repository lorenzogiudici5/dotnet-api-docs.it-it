<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;">
  <TypeSignature Language="C#" Value="public sealed class ConditionalWeakTable&lt;TKey,TValue&gt; where TKey : class where TValue : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConditionalWeakTable`2&lt;class TKey, class TValue&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConditionalWeakTable(Of TKey, TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA; where TKey : class where TValue : classpublic ref class ConditionalWeakTable sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TValue">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="8008b-101">Tipo di riferimento al quale è associato il campo.</span><span class="sxs-lookup"><span data-stu-id="8008b-101">The reference type to which the field is attached.</span></span></typeparam>
    <typeparam name="TValue"><span data-ttu-id="8008b-102">Il tipo del campo.</span><span class="sxs-lookup"><span data-stu-id="8008b-102">The field's type.</span></span> <span data-ttu-id="8008b-103">Deve essere un tipo di riferimento.</span><span class="sxs-lookup"><span data-stu-id="8008b-103">This must be a reference type.</span></span></typeparam>
    <summary><span data-ttu-id="8008b-104">Consente ai compilatori di allegare dinamicamente campi dell'oggetto agli oggetti gestiti.</span><span class="sxs-lookup"><span data-stu-id="8008b-104">Enables compilers to dynamically attach object fields to managed objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8008b-105">La <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> classe consente ai compilatori di linguaggio associare le proprietà arbitrarie agli oggetti gestiti in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="8008b-105">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class enables language compilers to attach arbitrary properties to managed objects at run time.</span></span> <span data-ttu-id="8008b-106">Oggetto <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> oggetto è un dizionario che associa un oggetto gestito, è rappresentato da una chiave, alla proprietà associata è rappresentato da un valore.</span><span class="sxs-lookup"><span data-stu-id="8008b-106">A <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object is a dictionary that binds a managed object, which is represented by a key, to its attached property, which is represented by a value.</span></span> <span data-ttu-id="8008b-107">Le chiavi dell'oggetto sono le singole istanze del `TKey` classe a cui è associata la proprietà e i relativi valori sono i valori di proprietà che vengono assegnati agli oggetti corrispondenti.</span><span class="sxs-lookup"><span data-stu-id="8008b-107">The object's keys are the individual instances of the `TKey` class to which the property is attached, and its values are the property values that are assigned to the corresponding objects.</span></span>  
  
 <span data-ttu-id="8008b-108">Le chiavi devono essere univoche. in altre parole, la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> classe supporta un solo valore associato per ogni oggetto gestito.</span><span class="sxs-lookup"><span data-stu-id="8008b-108">Keys must be unique; in other words, the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class supports one attached value per managed object.</span></span> <span data-ttu-id="8008b-109">Due chiavi sono uguali se passandoli al <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> restituisce `true`.</span><span class="sxs-lookup"><span data-stu-id="8008b-109">Two keys are equal if passing them to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8008b-110">Non è possibile controllare i confronti di uguaglianza eseguendo l'override <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> impostare in modo esplicito il codice hash per una chiave.</span><span class="sxs-lookup"><span data-stu-id="8008b-110">You cannot control equality comparisons by overriding <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> to explicitly set the hash code for a key.</span></span> <span data-ttu-id="8008b-111">Il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> classe utilizza il <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> metodo per calcolare i codici hash e pertanto non richiama <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> esegue l'override.</span><span class="sxs-lookup"><span data-stu-id="8008b-111">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class does not use the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method to compute hash codes, and therefore does not invoke <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> overrides.</span></span>  
  
 <span data-ttu-id="8008b-112">Sebbene la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> classe contiene una raccolta di coppie chiave/valore, viene considerata come una tabella anziché un oggetto dizionario.</span><span class="sxs-lookup"><span data-stu-id="8008b-112">Although the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class holds a collection of key/value pairs, it is best thought of as a table rather than a dictionary object.</span></span> <span data-ttu-id="8008b-113">La <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> classe differisce da un dizionario in diversi modi:</span><span class="sxs-lookup"><span data-stu-id="8008b-113">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class differs from a dictionary in several ways:</span></span>  
  
-   <span data-ttu-id="8008b-114">Non vengono mantenute le chiavi.</span><span class="sxs-lookup"><span data-stu-id="8008b-114">It does not persist keys.</span></span> <span data-ttu-id="8008b-115">Una chiave, ovvero non vengono mantenuta attiva solo perché è un membro della raccolta.</span><span class="sxs-lookup"><span data-stu-id="8008b-115">That is, a key is not kept alive only because it is a member of the collection.</span></span>  
  
-   <span data-ttu-id="8008b-116">Non include tutti i metodi (ad esempio `GetEnumerator` o `Contains`) che ha in genere un dizionario.</span><span class="sxs-lookup"><span data-stu-id="8008b-116">It does not include all the methods (such as `GetEnumerator` or `Contains`) that a dictionary typically has.</span></span>  
  
-   <span data-ttu-id="8008b-117">Non implementa il <xref:System.Collections.Generic.IDictionary%602> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="8008b-117">It does not implement the <xref:System.Collections.Generic.IDictionary%602> interface.</span></span>  
  
 <span data-ttu-id="8008b-118">La <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> classe differisce da altri oggetti della raccolta nella gestione la durata degli oggetti di chiavi archiviate nell'insieme.</span><span class="sxs-lookup"><span data-stu-id="8008b-118">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class differs from other collection objects in its management of the object lifetime of keys stored in the collection.</span></span> <span data-ttu-id="8008b-119">In genere, quando un oggetto viene archiviato in una raccolta, la sua durata dura fino a quando non viene rimosso (e non sono presenti altri riferimenti all'oggetto) o finché non viene eliminato l'oggetto raccolta stesso.</span><span class="sxs-lookup"><span data-stu-id="8008b-119">Ordinarily, when an object is stored in a collection, its lifetime lasts until it is removed (and there are no additional references to the object) or until the collection object itself is destroyed.</span></span> <span data-ttu-id="8008b-120">Tuttavia, nel <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> (classe), aggiunta di una coppia chiave/valore per la tabella non garantisce che la chiave verrà mantenuta, anche se può essere raggiunta direttamente da un valore archiviato nella tabella (ad esempio, se la tabella contiene una chiave, con un valore V1 e una seconda chiave, B, con un valore di P2 che contiene un riferimento ad A).</span><span class="sxs-lookup"><span data-stu-id="8008b-120">However, in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class, adding a key/value pair to the table does not ensure that the key will persist, even if it can be reached directly from a value stored in the table (for example, if the table contains one key, A, with a value V1, and a second key, B, with a value P2 that contains a reference to A).</span></span> <span data-ttu-id="8008b-121">In alternativa, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> rimuove automaticamente la voce di chiave/valore, non appena non esistono altri riferimenti a una chiave esterna alla tabella.</span><span class="sxs-lookup"><span data-stu-id="8008b-121">Instead, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> automatically removes the key/value entry as soon as no other references to a key exist outside the table.</span></span> <span data-ttu-id="8008b-122">Nell'esempio viene illustrata una situazione di questo tipo.</span><span class="sxs-lookup"><span data-stu-id="8008b-122">The example provides an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8008b-123">Nell'esempio seguente viene illustrato come una chiave archiviata nel <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabella non vengono mantenute dopo i riferimenti all'esterno della tabella vengono eliminati definitivamente.</span><span class="sxs-lookup"><span data-stu-id="8008b-123">The following example illustrates that a key stored in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table does not persist after references to it outside the table are destroyed.</span></span> <span data-ttu-id="8008b-124">L'esempio definisce due classi: `ManagedClass`, che rappresenta la chiave nella tabella, e `ClassData`, che rappresenta il valore della chiave.</span><span class="sxs-lookup"><span data-stu-id="8008b-124">The example defines two classes: `ManagedClass`, which represents the key in the table, and `ClassData`, which represents the key's value.</span></span> <span data-ttu-id="8008b-125">Nell'esempio viene creata un'istanza di tre oggetti di ogni tipo.</span><span class="sxs-lookup"><span data-stu-id="8008b-125">The example instantiates three objects of each type.</span></span> <span data-ttu-id="8008b-126">Crea inoltre un <xref:System.WeakReference> oggetto che rappresenta il secondo `ManagedClass`e quindi elimina la seconda `ManagedClass` istanza.</span><span class="sxs-lookup"><span data-stu-id="8008b-126">It also instantiates a <xref:System.WeakReference> object that represents the second `ManagedClass`, and then destroys the second `ManagedClass` instance.</span></span> <span data-ttu-id="8008b-127">Il tentativo di recuperare il secondo `ManagedClass` dall'oggetto di <xref:System.WeakReference.Target%2A> proprietà indica che non rimangono riferimenti all'oggetto.</span><span class="sxs-lookup"><span data-stu-id="8008b-127">The attempt to retrieve the second `ManagedClass` object from the <xref:System.WeakReference.Target%2A> property indicates that no references to the object remain.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.class/cs/example1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.class/vb/example1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="8008b-128">Le istanze del <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> classe sono thread-safe.</span><span class="sxs-lookup"><span data-stu-id="8008b-128">Instances of the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> class are thread safe.</span></span> <span data-ttu-id="8008b-129">Non richiedono che ai chiamanti di alcun blocco aggiuntivo.</span><span class="sxs-lookup"><span data-stu-id="8008b-129">They do not require callers to do any additional locking.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalWeakTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalWeakTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8008b-130">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />.</span><span class="sxs-lookup"><span data-stu-id="8008b-130">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8008b-131">Il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.%23ctor%2A> costruttore crea un'istanza vuota <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabella; ovvero, la tabella non contiene alcun coppie chiave/valore.</span><span class="sxs-lookup"><span data-stu-id="8008b-131">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.%23ctor%2A> constructor instantiates an empty <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table; that is, the table contains no key/value pairs.</span></span> <span data-ttu-id="8008b-132">È possibile aggiungere coppie chiave/valore chiamando il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>, o <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="8008b-132">You can add key/value pairs by calling the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>, or <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method.</span></span>  
  
 <span data-ttu-id="8008b-133">Ogni chiave in un <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> l'oggetto deve essere univoco.</span><span class="sxs-lookup"><span data-stu-id="8008b-133">Every key in a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object must be unique.</span></span> <span data-ttu-id="8008b-134">Le chiavi non sono univoche se fanno riferimento allo stesso oggetto (vale a dire se essere passate come argomenti il <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> restituisce `true`).</span><span class="sxs-lookup"><span data-stu-id="8008b-134">Keys are not unique if they refer to the same object (that is, if passing them as arguments to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(TKey key, TValue value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8008b-135">Chiave da aggiungere.</span><span class="sxs-lookup"><span data-stu-id="8008b-135">The key to add.</span></span> <span data-ttu-id="8008b-136"><c>key</c> rappresenta l'oggetto a cui è associata la proprietà.</span><span class="sxs-lookup"><span data-stu-id="8008b-136"><c>key</c> represents the object to which the property is attached.</span></span></param>
        <param name="value"><span data-ttu-id="8008b-137">Valore della proprietà della chiave.</span><span class="sxs-lookup"><span data-stu-id="8008b-137">The key's property value.</span></span></param>
        <summary><span data-ttu-id="8008b-138">Aggiunge una chiave alla tabella.</span><span class="sxs-lookup"><span data-stu-id="8008b-138">Adds a key to the table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8008b-139">Ogni chiave in un <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> l'oggetto deve essere univoco.</span><span class="sxs-lookup"><span data-stu-id="8008b-139">Every key in a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object must be unique.</span></span> <span data-ttu-id="8008b-140">Le chiavi non sono univoche se fanno riferimento allo stesso oggetto (vale a dire se essere passate come argomenti il <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> restituisce `true`).</span><span class="sxs-lookup"><span data-stu-id="8008b-140">Keys are not unique if they refer to the same object (that is, if passing them as arguments to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`).</span></span>  
  
 <span data-ttu-id="8008b-141">Se la chiave è sottoposto a garbage collection durante l'operazione di addizione, la coppia chiave/valore esistente viene rimosso e viene aggiunta la nuova coppia chiave/valore senza viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="8008b-141">If the key is garbage-collected during the addition operation, the existing key/value pair is removed and the new key/value pair is added without an exception being thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8008b-142">L'esempio seguente definisce un `MainClass` classe e un `MainInfo` (classe), che fornisce informazioni sul `MainClass` istanza.</span><span class="sxs-lookup"><span data-stu-id="8008b-142">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="8008b-143">Nell'esempio viene quindi chiamato il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> metodo per aggiungere un `MainClass` oggetto e il relativo collegato `MainInfo` l'oggetto in un <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabella.</span><span class="sxs-lookup"><span data-stu-id="8008b-143">The example then calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="8008b-144">L'esempio illustra anche le chiamate al <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> e <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> metodi per aggiungere coppie chiave/valore per la tabella e per il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> metodo per recuperare il valore di una chiave esistente.</span><span class="sxs-lookup"><span data-stu-id="8008b-144">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8008b-145"><paramref name="key" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8008b-145"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8008b-146"><paramref name="key" /> esiste già.</span><span class="sxs-lookup"><span data-stu-id="8008b-146"><paramref name="key" /> already exists.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="8008b-147">richiede l'attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="8008b-147">requires full trust for the immediate caller.</span></span> <span data-ttu-id="8008b-148">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span><span class="sxs-lookup"><span data-stu-id="8008b-148">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdate">
      <MemberSignature Language="C#" Value="public void AddOrUpdate (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOrUpdate(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.AddOrUpdate(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOrUpdate (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOrUpdate(TKey key, TValue value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ConditionalWeakTable`2 ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ConditionalWeakTable`2 ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8008b-149">Garantisce che le risorse vengano liberate e che vengano eseguite le altre operazioni di pulizia quando l'oggetto <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> viene recuperato da Garbage Collector.</span><span class="sxs-lookup"><span data-stu-id="8008b-149">Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8008b-150">Il garbage collector chiama <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Finalize%2A> quando l'oggetto corrente è pronto per essere completato.</span><span class="sxs-lookup"><span data-stu-id="8008b-150">The garbage collector calls <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Finalize%2A> when the current object is ready to be finalized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateValue">
      <MemberSignature Language="C#" Value="public TValue GetOrCreateValue (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrCreateValue(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrCreateValue (key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetOrCreateValue(TKey key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8008b-151">Chiave da ricercare.</span><span class="sxs-lookup"><span data-stu-id="8008b-151">The key to search for.</span></span> <span data-ttu-id="8008b-152"><c>key</c> rappresenta l'oggetto a cui è associata la proprietà.</span><span class="sxs-lookup"><span data-stu-id="8008b-152"><c>key</c> represents the object to which the property is attached.</span></span></param>
        <summary><span data-ttu-id="8008b-153">Ricerca atomicamente una chiave specificata nella tabella e restituisce il valore corrispondente.</span><span class="sxs-lookup"><span data-stu-id="8008b-153">Atomically searches for a specified key in the table and returns the corresponding value.</span></span> <span data-ttu-id="8008b-154">Se la chiave non esiste nella tabella, il metodo richiama il costruttore predefinito della classe che rappresenta il valore della tabella per creare un valore che viene associato alla chiave specificata.</span><span class="sxs-lookup"><span data-stu-id="8008b-154">If the key does not exist in the table, the method invokes the default constructor of the class that represents the table's value to create a value that is bound to the specified key.</span></span></summary>
        <returns><span data-ttu-id="8008b-155">Valore che corrisponde a <paramref name="key" />, se <paramref name="key" /> esiste già nella tabella; in caso contrario, nuovo valore creato dal costruttore predefinito della classe definita dal parametro di tipo generico <paramref name="TValue" />.</span><span class="sxs-lookup"><span data-stu-id="8008b-155">The value that corresponds to <paramref name="key" />, if <paramref name="key" /> already exists in the table; otherwise, a new value created by the default constructor of the class defined by the <paramref name="TValue" /> generic type parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8008b-156">Se `key` non esiste nella tabella, il metodo aggiunge, insieme all'oggetto che viene creata un'istanza chiamando il costruttore predefinito della classe definita per il `TValue` parametro di tipo generico.</span><span class="sxs-lookup"><span data-stu-id="8008b-156">If `key` does not exist in the table, the method adds it, along with the object that is instantiated by calling the default constructor of the class defined by the `TValue` generic type parameter.</span></span> <span data-ttu-id="8008b-157">Se il `TValue` classe non dispone di alcun costruttore predefinito, un <xref:System.MissingMethodException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="8008b-157">If the `TValue` class has no default constructor, a <xref:System.MissingMethodException> is thrown.</span></span>  
  
 <span data-ttu-id="8008b-158">Questo è il metodo consigliato per il recupero di un valore esistente o aggiungendo un nuovo valore per il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabella se la classe di valore della tabella definisce un costruttore predefinito.</span><span class="sxs-lookup"><span data-stu-id="8008b-158">This is the recommended method of retrieving an existing value or adding a new value to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table if the class of the table's value defines a default constructor.</span></span> <span data-ttu-id="8008b-159">Se non definisce un costruttore predefinito, è possibile chiamare il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> metodo, che si basa su un metodo di callback fornito per l'istanza dell'oggetto che rappresenta il valore della tabella</span><span class="sxs-lookup"><span data-stu-id="8008b-159">If it does not define a default constructor, you can instead call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method, which relies on a callback-provided method to instantiate the object representing the table's value</span></span>  
  
 <span data-ttu-id="8008b-160">Per recuperare il valore di una chiave esistente senza aggiungere la coppia chiave/valore se la chiave non viene trovata nella tabella, chiama il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="8008b-160">To retrieve the value of an existing key without adding the key/value pair if the key is not found in the table, call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8008b-161">L'esempio seguente definisce un `MainClass` classe e un `MainInfo` (classe), che fornisce informazioni sul `MainClass` istanza.</span><span class="sxs-lookup"><span data-stu-id="8008b-161">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="8008b-162">Nell'esempio viene chiamato il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> metodo per aggiungere un `MainClass` oggetto e il relativo collegato `MainInfo` l'oggetto in un <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabella.</span><span class="sxs-lookup"><span data-stu-id="8008b-162">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="8008b-163">L'esempio illustra anche le chiamate al <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> e <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> metodi per aggiungere coppie chiave/valore per la tabella e per il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> metodo per recuperare il valore di una chiave esistente.</span><span class="sxs-lookup"><span data-stu-id="8008b-163">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8008b-164"><paramref name="key" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8008b-164"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="8008b-165">In [.NET per app di Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) o nella [libreria di classi portabile](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) rilevare invece l'eccezione della classe di base, <see cref="T:System.MissingMemberException" />.</span><span class="sxs-lookup"><span data-stu-id="8008b-165">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="8008b-166">La classe che rappresenta il valore della tabella non definisce un costruttore predefinito.</span><span class="sxs-lookup"><span data-stu-id="8008b-166">The class that represents the table's value does not define a default constructor.</span></span></exception>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public TValue GetValue (TKey key, System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback createValueCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetValue(!TKey key, class System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback&lt;!TKey, !TValue&gt; createValueCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetValue(TKey key, System::Runtime::CompilerServices::ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback ^ createValueCallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="createValueCallback" Type="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8008b-167">Chiave da ricercare.</span><span class="sxs-lookup"><span data-stu-id="8008b-167">The key to search for.</span></span> <span data-ttu-id="8008b-168"><c>key</c> rappresenta l'oggetto a cui è associata la proprietà.</span><span class="sxs-lookup"><span data-stu-id="8008b-168"><c>key</c> represents the object to which the property is attached.</span></span></param>
        <param name="createValueCallback"><span data-ttu-id="8008b-169">Delegato a un metodo che può creare un valore per l'oggetto <c>key</c> specificato.</span><span class="sxs-lookup"><span data-stu-id="8008b-169">A delegate to a method that can create a value for the given <c>key</c>.</span></span> <span data-ttu-id="8008b-170">Dispone di un solo parametro di tipo <c>TKey</c> e restituisce un valore di tipo <c>TValue</c>.</span><span class="sxs-lookup"><span data-stu-id="8008b-170">It has a single parameter of type <c>TKey</c>, and returns a value of type <c>TValue</c>.</span></span></param>
        <summary><span data-ttu-id="8008b-171">Ricerca atomicamente una chiave specificata nella tabella e restituisce il valore corrispondente.</span><span class="sxs-lookup"><span data-stu-id="8008b-171">Atomically searches for a specified key in the table and returns the corresponding value.</span></span> <span data-ttu-id="8008b-172">Se la chiave non esiste nella tabella, il metodo richiama un metodo di callback per creare un valore che viene associato alla chiave specificata.</span><span class="sxs-lookup"><span data-stu-id="8008b-172">If the key does not exist in the table, the method invokes a callback method to create a value that is bound to the specified key.</span></span></summary>
        <returns><span data-ttu-id="8008b-173">Valore associato a <paramref name="key" />, se <paramref name="key" /> esiste già nella tabella; in caso contrario, il nuovo valore restituito dal delegato <paramref name="createValueCallback" />.</span><span class="sxs-lookup"><span data-stu-id="8008b-173">The value attached to <paramref name="key" />, if <paramref name="key" /> already exists in the table; otherwise, the new value returned by the <paramref name="createValueCallback" /> delegate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8008b-174">Se `key` non esiste nella tabella, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> richiama il metodo definito dal `createValueCallback` parametro e passa la chiave.</span><span class="sxs-lookup"><span data-stu-id="8008b-174">If `key` does not exist in the table, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> invokes the method that is defined by the `createValueCallback` parameter and passes it the key.</span></span> <span data-ttu-id="8008b-175">Un nuovo valore è associato alla chiave della tabella e viene restituito come risultato.</span><span class="sxs-lookup"><span data-stu-id="8008b-175">A new value is bound to the key in the table and returned as a result.</span></span>  
  
 <span data-ttu-id="8008b-176">Utilizzare questo metodo solo quando la classe che rappresenta il valore della tabella non definisce un costruttore predefinito.</span><span class="sxs-lookup"><span data-stu-id="8008b-176">Use this method only when the class that represents the table's value does not define a default constructor.</span></span> <span data-ttu-id="8008b-177">Se definisce un costruttore predefinito, utilizzare il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="8008b-177">If it does define a default constructor, use the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method instead.</span></span> <span data-ttu-id="8008b-178">Per recuperare il valore di una chiave esistente senza aggiungere la coppia chiave/valore se la chiave non viene trovata nella tabella, chiama il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="8008b-178">To retrieve the value of an existing key without adding the key/value pair if the key is not found in the table, call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method.</span></span>  
  
 <span data-ttu-id="8008b-179">Se più thread tentano di creare la stessa chiave, `createValueCallback` può essere chiamato più volte con la stessa chiave.</span><span class="sxs-lookup"><span data-stu-id="8008b-179">If multiple threads try to create the same key, `createValueCallback` may be invoked multiple times with the same key.</span></span> <span data-ttu-id="8008b-180">Solo una di queste chiamate avrà esito positivo e il relativo valore restituito verrà aggiunto alla tabella.</span><span class="sxs-lookup"><span data-stu-id="8008b-180">Only one of these calls will succeed, and its returned value will be added to the table.</span></span> <span data-ttu-id="8008b-181">Il thread può creare il valore è indeterminato.</span><span class="sxs-lookup"><span data-stu-id="8008b-181">Which thread succeeds in creating the value is indeterminate.</span></span> <span data-ttu-id="8008b-182">Questa regola consente alla tabella di richiamare `createValueCallback` all'esterno del blocco di tabella interna per impedire i deadlock.</span><span class="sxs-lookup"><span data-stu-id="8008b-182">This rule permits the table to invoke `createValueCallback` outside the internal table lock to prevent deadlocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8008b-183">L'esempio seguente definisce un `MainClass` classe e un `MainInfo` (classe), che fornisce informazioni sul `MainClass` istanza.</span><span class="sxs-lookup"><span data-stu-id="8008b-183">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="8008b-184">Definisce inoltre un valore statico (`Shared` in Visual Basic) `CreateAttachedValue` metodo che può essere assegnato al <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegato e passare il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="8008b-184">It also defines a static (`Shared` in Visual Basic) `CreateAttachedValue` method that can be assigned to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate and passed to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method.</span></span> <span data-ttu-id="8008b-185">Nell'esempio viene chiamato il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> metodo per aggiungere un `MainClass` oggetto e il relativo collegato `MainInfo` l'oggetto in un <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabella.</span><span class="sxs-lookup"><span data-stu-id="8008b-185">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="8008b-186">L'esempio illustra anche le chiamate al <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> e <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> metodi per aggiungere coppie chiave/valore per la tabella e per il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> metodo per recuperare il valore di una chiave esistente.</span><span class="sxs-lookup"><span data-stu-id="8008b-186">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8008b-187"><paramref name="key" /> o <paramref name="createValueCallback" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8008b-187"><paramref name="key" /> or <paramref name="createValueCallback" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="8008b-188">richiede l'attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="8008b-188">requires full trust for the immediate caller.</span></span> <span data-ttu-id="8008b-189">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span><span class="sxs-lookup"><span data-stu-id="8008b-189">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
        <altmember cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8008b-190">Chiave da rimuovere.</span><span class="sxs-lookup"><span data-stu-id="8008b-190">The key to remove.</span></span></param>
        <summary><span data-ttu-id="8008b-191">Rimuove una chiave e il relativo valore dalla tabella.</span><span class="sxs-lookup"><span data-stu-id="8008b-191">Removes a key and its value from the table.</span></span></summary>
        <returns>
          <span data-ttu-id="8008b-192"><see langword="true" /> se la chiave viene trovata e rimossa; in caso contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8008b-192"><see langword="true" /> if the key is found and removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8008b-193">Se la chiave è sottoposto a garbage collection durante l'operazione, il metodo genera un'eccezione e il valore restituito è indefinito.</span><span class="sxs-lookup"><span data-stu-id="8008b-193">If the key is garbage-collected during this operation, the method does not raise an exception and the return value is undefined.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8008b-194"><paramref name="key" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8008b-194"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="8008b-195">richiede l'attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="8008b-195">requires full trust for the immediate caller.</span></span> <span data-ttu-id="8008b-196">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span><span class="sxs-lookup"><span data-stu-id="8008b-196">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; IEnumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue)) Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8008b-197">La chiave che rappresenta un oggetto con una proprietà associata.</span><span class="sxs-lookup"><span data-stu-id="8008b-197">The key that represents an object with an attached property.</span></span></param>
        <param name="value"><span data-ttu-id="8008b-198">Quando questo metodo viene restituito, contiene il valore della proprietà associata.</span><span class="sxs-lookup"><span data-stu-id="8008b-198">When this method returns, contains the attached property value.</span></span> <span data-ttu-id="8008b-199">Se <c>key</c> non viene trovato, <c>value</c> contiene il valore predefinito.</span><span class="sxs-lookup"><span data-stu-id="8008b-199">If <c>key</c> is not found, <c>value</c> contains the default value.</span></span></param>
        <summary><span data-ttu-id="8008b-200">Ottiene il valore della chiave specificata.</span><span class="sxs-lookup"><span data-stu-id="8008b-200">Gets the value of the specified key.</span></span></summary>
        <returns>
          <span data-ttu-id="8008b-201"><see langword="true" /> se viene trovato l'oggetto <paramref name="key" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8008b-201"><see langword="true" /> if <paramref name="key" /> is found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8008b-202">Se la chiave è sottoposto a garbage collection durante l'operazione, il metodo può restituire `false` e impostare `value` il valore predefinito del valore (come se la chiave non erano presente).</span><span class="sxs-lookup"><span data-stu-id="8008b-202">If the key is garbage-collected during this operation, the method may return `false` and set `value` to the default value (as if the key were not present).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8008b-203">L'esempio seguente definisce un `MainClass` classe e un `MainInfo` (classe), che fornisce informazioni sul `MainClass` istanza.</span><span class="sxs-lookup"><span data-stu-id="8008b-203">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="8008b-204">Nell'esempio viene chiamato il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>, e <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> metodi per aggiungere coppie chiave/valore da un <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> tabella.</span><span class="sxs-lookup"><span data-stu-id="8008b-204">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>, and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="8008b-205">In ogni caso, nell'esempio viene chiamato il <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> metodo per confermare la coppia chiave/valore è stato aggiunto alla tabella.</span><span class="sxs-lookup"><span data-stu-id="8008b-205">In each case, the example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to confirm that the key/value pair has been added to the table.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8008b-206"><paramref name="key" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8008b-206"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="8008b-207">richiede l'attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="8008b-207">requires full trust for the immediate caller.</span></span> <span data-ttu-id="8008b-208">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span><span class="sxs-lookup"><span data-stu-id="8008b-208">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
      </Docs>
    </Member>
  </Members>
</Type>