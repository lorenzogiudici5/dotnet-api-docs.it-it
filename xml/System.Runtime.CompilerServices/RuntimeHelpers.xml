<Type Name="RuntimeHelpers" FullName="System.Runtime.CompilerServices.RuntimeHelpers">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c39d8180904c9260ec3b7f679f09d3791b94ac31" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class RuntimeHelpers" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RuntimeHelpers extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.RuntimeHelpers" />
  <TypeSignature Language="VB.NET" Value="Public Class RuntimeHelpers" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuntimeHelpers abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7a8c5-101">Fornisce un set di proprietà e metodi statici che forniscono il supporto per i compilatori.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7a8c5-101">Provides a set of static methods and properties that provide support for compilers.</span>
      </span>
      <span data-ttu-id="7a8c5-102">Questa classe non può essere ereditata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7a8c5-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a8c5-103">Nell'esempio seguente viene illustrato come impostare in modo affidabile l'handle utilizzando il <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-103">The following example shows how to reliably set handles by using the <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions%2A> method.</span></span> <span data-ttu-id="7a8c5-104">Per impostare in modo affidabile un handle a un handle preesistente specificato, è necessario assicurarsi che l'allocazione di handle nativo e la successiva registrazione di questo handle all'interno di un <xref:System.Runtime.InteropServices.SafeHandle> oggetto è di tipo atomico.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-104">To reliably set a handle to a specified pre-existing handle, you must ensure that the allocation of the native handle and the subsequent recording of that handle within a <xref:System.Runtime.InteropServices.SafeHandle> object is atomic.</span></span> <span data-ttu-id="7a8c5-105">Qualsiasi errore tra queste operazioni (ad esempio un'interruzione del thread o l'eccezione di memoria esaurita) comporterà l'handle nativo perdita.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-105">Any failure between these operations (such as a thread abort or out-of-memory exception) will result in the native handle being leaked.</span></span>  <span data-ttu-id="7a8c5-106">È possibile utilizzare il <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions%2A> per verificare che l'handle non viene perso.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-106">You can use the <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions%2A> method to make sure that the handle is not leaked.</span></span>  
  
 [!code-csharp[SafeHandle-RuntimeHelpers.PrepareConstrainedRegions#1](~/samples/snippets/csharp/VS_Snippets_CLR/SafeHandle-RuntimeHelpers.PrepareConstrainedRegions/cs/sample.cs#1)]
 [!code-vb[SafeHandle-RuntimeHelpers.PrepareConstrainedRegions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SafeHandle-RuntimeHelpers.PrepareConstrainedRegions/vb/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="EnsureSufficientExecutionStack">
      <MemberSignature Language="C#" Value="public static void EnsureSufficientExecutionStack ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnsureSufficientExecutionStack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeHelpers.EnsureSufficientExecutionStack" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnsureSufficientExecutionStack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnsureSufficientExecutionStack();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7a8c5-107">Assicura che lo spazio dello stack restante sia sufficiente per eseguire la funzione di .NET Framework media.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-107">Ensures that the remaining stack space is large enough to execute the average .NET Framework function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a8c5-108"><xref:System.Runtime.CompilerServices.RuntimeHelpers.EnsureSufficientExecutionStack%2A> fornisce informazioni su un stack artificialmente limitato che mantiene sufficiente spazio per un'eccezione da generare e azione di ripristino da eseguire.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-108"><xref:System.Runtime.CompilerServices.RuntimeHelpers.EnsureSufficientExecutionStack%2A> provides information about an artificially limited stack that preserves enough space for an exception to be raised and recovery action to be taken.</span></span> <span data-ttu-id="7a8c5-109">Il limite dello stack artificiale viene scelto da common language runtime per garantire che spazio sufficiente per generare un'eccezione in modo sicuro.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-109">The artificial stack limit is chosen by the common language runtime to ensure that enough space remains to throw an exception safely.</span></span>  
  
 <span data-ttu-id="7a8c5-110">Questo metodo è utile in situazioni in cui potrebbe verificarsi un overflow dello stack come risultato una ricorsione illimitata.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-110">This method is useful in situations where stack overflow might occur as a result of unbounded recursion.</span></span> <span data-ttu-id="7a8c5-111">Serve da usare in scenari di servizi del compilatore, anche se può anche essere utilizzato in modo sicuro in altri scenari di sviluppo.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-111">It is intended for use in compiler services scenarios, although it can also be used safely in other development scenarios.</span></span>  
  
 <span data-ttu-id="7a8c5-112">Se lo spazio dello stack è sufficiente, non viene generata l'eccezione e la maggior parte dei tipi .NET Framework e i membri possono comunque essere chiamati.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-112">If the stack space is sufficient, the exception is not thrown, and most .NET Framework types and members can still be called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7a8c5-113">Questo metodo non fa parte del supporto di area a esecuzione vincolata e non deve essere confuso con il <xref:System.Runtime.CompilerServices.RuntimeHelpers.ProbeForSufficientStack%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-113">This method is not part of the constrained execution region (CER) support, and should not be confused with the <xref:System.Runtime.CompilerServices.RuntimeHelpers.ProbeForSufficientStack%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InsufficientExecutionStackException">
          <span data-ttu-id="7a8c5-114">Lo spazio dello stack disponibile è insufficiente per eseguire la funzione di .NET Framework media.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-114">The available stack space is insufficient to execute the average .NET Framework function.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeHelpers.Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (o1 As Object, o2 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Object ^ o1, System::Object ^ o2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1">
          <span data-ttu-id="7a8c5-115">Primo oggetto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-115">The first object to compare.</span>
          </span>
        </param>
        <param name="o2">
          <span data-ttu-id="7a8c5-116">Secondo oggetto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-116">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a8c5-117">Determina se le istanze di <see cref="T:System.Object" /> specificate sono considerate uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-117">Determines whether the specified <see cref="T:System.Object" /> instances are considered equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a8c5-118">
            <see langword="true" /> se il parametro <paramref name="o1" /> è la stessa istanza del parametro <paramref name="o2" />, se entrambi sono <see langword="null" /> o se <c>o1.Equals(o2)</c> restituisce <see langword="true" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-118">
              <see langword="true" /> if the <paramref name="o1" /> parameter is the same instance as the <paramref name="o2" /> parameter, or if both are <see langword="null" />, or if <c>o1.Equals(o2)</c> returns <see langword="true" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a8c5-119">Questo metodo viene utilizzato dai compilatori.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-119">This method is used by compilers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a8c5-120">Nell'esempio riportato di seguito viene illustrato come confrontare due oggetti utilizzando il <xref:System.Runtime.CompilerServices.RuntimeHelpers.Equals%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-120">The following example demonstrates how to compare two objects by using the <xref:System.Runtime.CompilerServices.RuntimeHelpers.Equals%2A> method.</span></span>  
  
 [!code-csharp[Runtime.CompilerServices.RuntimeHelpers.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.CompilerServices.RuntimeHelpers.Equals/cs/example.cs#1)]
 [!code-vb[Runtime.CompilerServices.RuntimeHelpers.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.CompilerServices.RuntimeHelpers.Equals/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteCodeWithGuaranteedCleanup">
      <MemberSignature Language="C#" Value="public static void ExecuteCodeWithGuaranteedCleanup (System.Runtime.CompilerServices.RuntimeHelpers.TryCode code, System.Runtime.CompilerServices.RuntimeHelpers.CleanupCode backoutCode, object userData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExecuteCodeWithGuaranteedCleanup(class System.Runtime.CompilerServices.RuntimeHelpers/TryCode code, class System.Runtime.CompilerServices.RuntimeHelpers/CleanupCode backoutCode, object userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup(System.Runtime.CompilerServices.RuntimeHelpers.TryCode,System.Runtime.CompilerServices.RuntimeHelpers.CleanupCode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExecuteCodeWithGuaranteedCleanup (code As RuntimeHelpers.TryCode, backoutCode As RuntimeHelpers.CleanupCode, userData As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExecuteCodeWithGuaranteedCleanup(System::Runtime::CompilerServices::RuntimeHelpers::TryCode ^ code, System::Runtime::CompilerServices::RuntimeHelpers::CleanupCode ^ backoutCode, System::Object ^ userData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Runtime.CompilerServices.RuntimeHelpers+TryCode" />
        <Parameter Name="backoutCode" Type="System.Runtime.CompilerServices.RuntimeHelpers+CleanupCode" />
        <Parameter Name="userData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="code">
          <span data-ttu-id="7a8c5-121">Delegato per il codice da provare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-121">A delegate to the code to try.</span>
          </span>
        </param>
        <param name="backoutCode">
          <span data-ttu-id="7a8c5-122">Delegato per il codice da eseguire in caso di eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-122">A delegate to the code to run if an exception occurs.</span>
          </span>
        </param>
        <param name="userData">
          <span data-ttu-id="7a8c5-123">Dati da passare a <c>code</c> e <c>backoutCode</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-123">The data to pass to <c>code</c> and <c>backoutCode</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a8c5-124">Esegue il codice utilizzando <see cref="T:System.Delegate" />, mentre si utilizza un altro oggetto <see cref="T:System.Delegate" /> per eseguire ulteriore codice in caso di eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-124">Executes code using a <see cref="T:System.Delegate" /> while using another <see cref="T:System.Delegate" /> to execute additional code in case of an exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a8c5-125">Questo metodo viene utilizzato dai compilatori.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-125">This method is used by compilers.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="7a8c5-126">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-126">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="7a8c5-127">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-127">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public static int GetHashCode (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetHashCode(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHashCode (o As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetHashCode(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="7a8c5-128">Oggetto per cui recuperare il codice hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-128">An object to retrieve the hash code for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a8c5-129">Viene utilizzato come funzione hash per un oggetto particolare ed è adatto per l'utilizzo in algoritmi e in strutture di dati che utilizzano i codici hash, quali una tabella hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-129">Serves as a hash function for a particular object, and is suitable for use in algorithms and data structures that use hash codes, such as a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a8c5-130">Codice hash per l'oggetto identificato dal parametro <paramref name="o" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-130">A hash code for the object identified by the <paramref name="o" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a8c5-131">Il <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType> metodo chiama sempre il <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> metodo non virtuale, anche se il tipo dell'oggetto ha eseguito l'override di <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="7a8c5-131">The <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType> method always calls the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method non-virtually, even if the object's type has overridden the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7a8c5-132">Pertanto, l'utilizzo <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType> potrebbero essere diversi da chiamare `GetHashCode` direttamente sull'oggetto con il <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-132">Therefore, using <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType> might differ from calling `GetHashCode` directly on the object with the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="7a8c5-133">Sebbene il <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType> restituisce codici hash identici per i riferimenti all'oggetto identico, non utilizzare questo metodo per verificare l'identità dell'oggetto, in quanto il codice hash non identifica in modo univoco un riferimento all'oggetto.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-133">Although the <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType> method returns identical hash codes for identical object references, you should not use this method to test for object identity, because this hash code does not uniquely identify an object reference.</span></span> <span data-ttu-id="7a8c5-134">Per eseguire il test per identificare oggetti (ovvero, per verificare che due oggetti riferimento lo stesso oggetto in memoria), chiamare il <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-134">To test for object identify (that is, to test that two objects reference the same object in memory), call the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7a8c5-135">Non è necessario utilizzare <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A> per verificare se due stringhe rappresentano riferimenti a oggetti uguali, in quanto la stringa è inserita.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-135">Nor should you use <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A> to test whether two strings represent equal object references, because the string is interned.</span></span> <span data-ttu-id="7a8c5-136">Per verificare l'inserimento di stringhe, chiamare il <xref:System.String.IsInterned%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-136">To test for string interning, call the <xref:System.String.IsInterned%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7a8c5-137">Il <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> e <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType> metodi differiscono nel modo seguente:</span><span class="sxs-lookup"><span data-stu-id="7a8c5-137">The <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="7a8c5-138"><xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> Restituisce un codice hash basato sulla definizione dell'oggetto di uguaglianza.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-138"><xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> returns a hash code that is based on the object's definition of equality.</span></span> <span data-ttu-id="7a8c5-139">Ad esempio, due stringhe con contenuto identico restituirà lo stesso valore per <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-139">For example, two strings with identical contents will return the same value for <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="7a8c5-140"><xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType> Restituisce un codice hash che indica l'identità dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-140"><xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType> returns a hash code that indicates object identity.</span></span> <span data-ttu-id="7a8c5-141">Ovvero, due stringhe variabili il cui contenuto è identico e che rappresentano una stringa che viene inserita (vedere il [inserimento di stringhe](#interning) sezione) o i codici hash che rappresentano una singola stringa in memoria restituire identici.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-141">That is, two string variables whose contents are identical and that represent a string that is interned (see the [String Interning](#interning) section) or that represent a single string in memory return identical hash codes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7a8c5-142">Si noti che <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A> restituisce sempre i codici hash identici per i riferimenti agli oggetti uguali.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-142">Note that <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A> always returns identical hash codes for equal object references.</span></span> <span data-ttu-id="7a8c5-143">Tuttavia, non è vero il contrario: i codici hash uguale non indicano i riferimenti agli oggetti uguali.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-143">However, the reverse is not true: equal hash codes do not indicate equal object references.</span></span> <span data-ttu-id="7a8c5-144">Un valore del codice hash particolare non è univoco per un riferimento di oggetto specifico. riferimenti a oggetti diversi possono generare codici hash identici.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-144">A particular hash code value is not unique to a particular object reference; different object references can generate identical hash codes.</span></span>  
  
 <span data-ttu-id="7a8c5-145">Questo metodo viene utilizzato dai compilatori.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-145">This method is used by compilers.</span></span>  
  
<a name="interning"></a>   
## <a name="string-interning"></a><span data-ttu-id="7a8c5-146">Inserimento di stringhe</span><span class="sxs-lookup"><span data-stu-id="7a8c5-146">String Interning</span></span>  
 <span data-ttu-id="7a8c5-147">Common language runtime (CLR) gestisce un pool interno di stringhe e archivia i valori letterali nel pool.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-147">The common language runtime (CLR) maintains an internal pool of strings and stores literals in the pool.</span></span> <span data-ttu-id="7a8c5-148">Se due stringhe (ad esempio, `str1` e `str2`) sono costituite da un identico valore letterale stringa, Common Language Runtime imposterà `str1` e `str2` in modo da puntare alla stessa posizione nell'heap gestito per risparmiare memoria.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-148">If two strings (for example, `str1` and `str2`) are formed from an identical string literal, the CLR will set `str1` and `str2` to point to the same location on the managed heap to conserve memory.</span></span> <span data-ttu-id="7a8c5-149">La chiamata <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType> nella stringa di questi due oggetti produce lo stesso codice hash, diversamente il secondo elemento puntato nella sezione precedente.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-149">Calling <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType> on these two string objects will produce the same hash code, contrary to the second bulleted item in the previous section.</span></span>  
  
 <span data-ttu-id="7a8c5-150">CLR aggiunge solo valori letterali al pool.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-150">The CLR adds only literals to the pool.</span></span> <span data-ttu-id="7a8c5-151">Risultati delle operazioni di stringa, ad esempio concatenazione non vengono aggiunti al pool, a meno che il compilatore risolve la concatenazione di stringhe come un singolo valore letterale di stringa.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-151">Results of string operations such as concatenation are not added to the pool, unless the compiler resolves the string concatenation as a single string literal.</span></span> <span data-ttu-id="7a8c5-152">Pertanto, se `str2` è stato creato come risultato di un'operazione di concatenazione e `str2` è identico a `str1`tramite <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType> stringa questi due oggetti non verranno generato lo stesso codice hash.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-152">Therefore, if `str2` was created as the result of a concatenation operation, and `str2` is identical to `str1`, using <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType> on these two string objects will not produce the same hash code.</span></span>  
  
 <span data-ttu-id="7a8c5-153">Se si desidera aggiungere una stringa concatenata al pool in modo esplicito, utilizzare il <xref:System.String.Intern%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-153">If you want to add a concatenated string to the pool explicitly, use the <xref:System.String.Intern%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7a8c5-154">È inoltre possibile utilizzare il <xref:System.String.IsInterned%2A?displayProperty=nameWithType> metodo per verificare se una stringa è stato inserito un riferimento.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-154">You can also use the <xref:System.String.IsInterned%2A?displayProperty=nameWithType> method to check whether a string has an interned reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a8c5-155">Nell'esempio seguente viene illustrata la differenza tra il <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> e <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType> metodi.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-155">The following example demonstrates the difference between the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="7a8c5-156">L'output dell'esempio viene illustrato quanto segue:</span><span class="sxs-lookup"><span data-stu-id="7a8c5-156">The output from the example illustrates the following:</span></span>  
  
-   <span data-ttu-id="7a8c5-157">Entrambi i set di codici hash per il primo set di stringhe passato per il `ShowHashCodes` metodo sono diversi, perché le stringhe sono completamente diverse.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-157">Both sets of hash codes for the first set of strings passed to the `ShowHashCodes` method are different, because the strings are completely different.</span></span>  
  
-   <span data-ttu-id="7a8c5-158"><xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> genera lo stesso codice hash per il secondo set di stringhe passato per il `ShowHashCodes` metodo, perché le stringhe sono uguali.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-158"><xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> generates the same hash code for the second set of strings passed to the `ShowHashCodes` method, because the strings are equal.</span></span> <span data-ttu-id="7a8c5-159">Tuttavia, il <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType> non dal metodo.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-159">However, the <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType> method does not.</span></span> <span data-ttu-id="7a8c5-160">La prima stringa viene definita mediante un valore letterale stringa e pertanto è stata inserita.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-160">The first string is defined by using a string literal and so is interned.</span></span> <span data-ttu-id="7a8c5-161">Anche se il valore della seconda stringa è lo stesso, questo non è inserito, poiché viene restituito da una chiamata al <xref:System.String.Format%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-161">Although the value of the second string is the same, it is not interned, because it is returned by a call to the <xref:System.String.Format%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="7a8c5-162">Nel caso della terza stringa, i codici hash generati da <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> per entrambe le stringhe sono identiche, così come sono i codici hash generati da <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-162">In the case of the third string, the hash codes produced by <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> for both strings are identical, as are the hash codes produced by <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7a8c5-163">Ciò accade perché il compilatore ha considerato il valore assegnato a entrambe le stringhe come un singolo valore letterale di stringa, e in modo da fare riferimento le variabili di stringa per la stessa stringa centralizzata.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-163">This is because the compiler has treated the value assigned to both strings as a single string literal, and so the string variables refer to the same interned string.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.runtimehelpers.gethashcode/cs/gethashcodeex1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.runtimehelpers.gethashcode/vb/gethashcodeex1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectValue">
      <MemberSignature Language="C#" Value="public static object GetObjectValue (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObjectValue(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeHelpers.GetObjectValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectValue (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectValue(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="7a8c5-164">Tipo di valore di cui eseguire la conversione boxing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-164">The value type to be boxed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a8c5-165">Esegue la conversione boxing di un tipo di valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-165">Boxes a value type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a8c5-166">Copia boxed di <paramref name="obj" /> se è una classe di valori. In caso contrario, <paramref name="obj" /> stesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-166">A boxed copy of <paramref name="obj" /> if it is a value class; otherwise, <paramref name="obj" /> itself.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a8c5-167">Conversione boxing di un tipo di valore, crea un oggetto ed esegue una copia superficiale dei campi del tipo di valore specificato nel nuovo oggetto.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-167">Boxing a value type creates an object and performs a shallow copy of the fields of the specified value type into the new object.</span></span>  
  
 <span data-ttu-id="7a8c5-168">Questo metodo consente a una classe di valore deve essere modificato come oggetto pur mantenendo il comportamento di alias di una classe di valore.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-168">This method allows a value class to be manipulated as an object while it retains the aliasing behavior of a value class.</span></span>  
  
 <span data-ttu-id="7a8c5-169">Il valore restituito varia a seconda se la classe di valori sia modificabile o non modificabile:</span><span class="sxs-lookup"><span data-stu-id="7a8c5-169">The return value depends on whether the value class is mutable or immutable:</span></span>  
  
-   <span data-ttu-id="7a8c5-170">Se il valore assegnato è una classe di valore modificabile, il metodo restituisce una copia superficiale della classe, perché le classi di valore hanno una semantica di copia.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-170">If the value being assigned is a mutable value class, the method returns a shallow copy of the class, because value classes have copy semantics.</span></span>  
  
-   <span data-ttu-id="7a8c5-171">Se il valore assegnato è una classe di valore non modificabile, il metodo restituisce l'oggetto stesso, anziché una copia della classe.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-171">If the value being assigned is an immutable value class, the method returns the object itself, instead of a copy of the class.</span></span>  
  
 <span data-ttu-id="7a8c5-172">I compilatori di linguaggi tipizzati in modo dinamico è possono utilizzare questo metodo per assicurarsi che vengano utilizzati tipi di valore boxed in modo identico ai tipi di valore unboxed.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-172">Compilers of dynamically typed languages can use this method to make sure that boxed value types work identically to unboxed value types.</span></span> <span data-ttu-id="7a8c5-173">Tipi di valore boxed, ovvero ottengano duplicati quando si passa a, e vengono sempre passati per valore.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-173">That is, boxed value types get cloned when you pass them around, and they are always passed by value.</span></span> <span data-ttu-id="7a8c5-174">Il compilatore può chiamare <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetObjectValue%2A> per assegnare un tipo di valore a un oggetto o per passare un tipo di valore come parametro di un oggetto di tipo.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-174">The compiler can call <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetObjectValue%2A> to assign a value type to an object or to pass a value type as a parameter of a type object.</span></span>  
  
 <span data-ttu-id="7a8c5-175">Questo metodo viene utilizzato dai compilatori.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-175">This method is used by compilers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a8c5-176">L'esempio seguente illustra come eseguire il boxing di una classe di valori utilizzando il <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetObjectValue%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-176">The following example demonstrates how to box a value class by using the <xref:System.Runtime.CompilerServices.RuntimeHelpers.GetObjectValue%2A> method.</span></span>  
  
 [!code-csharp[Runtime.CompilerServices.RuntimeHelpers.GetObjectValue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.CompilerServices.RuntimeHelpers.GetObjectValue/cs/example.cs#1)]
 [!code-vb[Runtime.CompilerServices.RuntimeHelpers.GetObjectValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.CompilerServices.RuntimeHelpers.GetObjectValue/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUninitializedObject">
      <MemberSignature Language="C#" Value="public static object GetUninitializedObject (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetUninitializedObject(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeHelpers.GetUninitializedObject(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetUninitializedObject(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeArray">
      <MemberSignature Language="C#" Value="public static void InitializeArray (Array array, RuntimeFieldHandle fldHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitializeArray(class System.Array array, valuetype System.RuntimeFieldHandle fldHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeHelpers.InitializeArray(System.Array,System.RuntimeFieldHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitializeArray(Array ^ array, RuntimeFieldHandle fldHandle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="fldHandle" Type="System.RuntimeFieldHandle" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="7a8c5-177">Matrice da inizializzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-177">The array to be initialized.</span>
          </span>
        </param>
        <param name="fldHandle">
          <span data-ttu-id="7a8c5-178">Handle di campo che specifica il percorso dei dati utilizzati per inizializzare la matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-178">A field handle that specifies the location of the data used to initialize the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a8c5-179">Fornisce un modo rapido per inizializzare una matrice dai dati memorizzati in un modulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-179">Provides a fast way to initialize an array from data that is stored in a module.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a8c5-180">Questo metodo viene utilizzato dai compilatori.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-180">This method is used by compilers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReferenceOrContainsReferences&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool IsReferenceOrContainsReferences&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsReferenceOrContainsReferences&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeHelpers.IsReferenceOrContainsReferences``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsReferenceOrContainsReferences(Of T) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool IsReferenceOrContainsReferences();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetToStringData">
      <MemberSignature Language="C#" Value="public static int OffsetToStringData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 OffsetToStringData" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.RuntimeHelpers.OffsetToStringData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OffsetToStringData As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int OffsetToStringData { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a8c5-181">Ottiene l'offset, in byte, per i dati nella stringa specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-181">Gets the offset, in bytes, to the data in the given string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a8c5-182">Offset dei byte, dall'inizio dell'oggetto <see cref="T:System.String" /> al primo carattere nella stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-182">The byte offset, from the start of the <see cref="T:System.String" /> object to the first character in the string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a8c5-183">I compilatori utilizzano questa proprietà per le operazioni non sicure, ma maggiore efficienza, puntatore ai caratteri in una stringa gestita.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-183">Compilers use this property for unsafe, but efficient, pointer operations on the characters in a managed string.</span></span> <span data-ttu-id="7a8c5-184">I compilatori devono impedire lo spostamento dal garbage collector prima dell'uso della stringa.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-184">Compilers should pin the string against movement by the garbage collector before use.</span></span> <span data-ttu-id="7a8c5-185">Si noti che le stringhe di common language runtime sono immutabili. vale a dire il relativo contenuto può leggere ma non è stato modificato.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-185">Note that common language runtime strings are immutable; that is, their contents can be read but not changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareConstrainedRegions">
      <MemberSignature Language="C#" Value="public static void PrepareConstrainedRegions ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrepareConstrainedRegions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PrepareConstrainedRegions ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrepareConstrainedRegions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7a8c5-186">Indica un corpo di codice come area a esecuzione limitata (CER).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-186">Designates a body of code as a constrained execution region (CER).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a8c5-187">I compilatori utilizzano questo metodo per contrassegnare `catch`, `finally`, e `fault` blocchi come aree a esecuzione vincolata (CER).</span><span class="sxs-lookup"><span data-stu-id="7a8c5-187">Compilers use this method to mark `catch`, `finally`, and `fault` blocks as constrained execution regions (CERs).</span></span> <span data-ttu-id="7a8c5-188">Codice che è contrassegnato come area limitata deve chiamare solo altro codice con contratti di affidabilità sicuri.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-188">Code that is marked as a constrained region must only call other code with strong reliability contracts.</span></span> <span data-ttu-id="7a8c5-189">Non deve allocare o effettuare chiamate virtuali ai metodi non preparate o non affidabile, a meno che non è stato preparato per gestire gli errori.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-189">It should not allocate or make virtual calls to unprepared or unreliable methods unless it is prepared to handle failures.</span></span>  
  
 <span data-ttu-id="7a8c5-190">Si noti che non intermedia codici operativi del linguaggio, ad eccezione di `NOP`, sono consentite tra una chiamata al <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions%2A> (metodo) e `try` blocco.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-190">Note that no intermediate language opcodes, except `NOP`, are allowed between a call to the <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions%2A> method and the `try` block.</span></span> <span data-ttu-id="7a8c5-191">Per ulteriori informazioni su CER, vedere le classi di <xref:System.Runtime.ConstrainedExecution> dello spazio dei nomi.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-191">For more information about CERs, see the classes in the <xref:System.Runtime.ConstrainedExecution> namespace.</span></span>  
  
 <span data-ttu-id="7a8c5-192">CER che sono contrassegnate con il <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions%2A> (metodo) non funzionano perfettamente quando un <xref:System.StackOverflowException> viene generato dal `try` blocco.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-192">CERs that are marked using the <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions%2A> method do not work perfectly when a <xref:System.StackOverflowException> is generated from the `try` block.</span></span> <span data-ttu-id="7a8c5-193">Per altre informazioni, vedere il metodo <xref:System.Runtime.CompilerServices.RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup%2A>.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-193">For more information, see the <xref:System.Runtime.CompilerServices.RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup%2A> method.</span></span>  
  
 <span data-ttu-id="7a8c5-194">Il metodo <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions%2A> chiama il metodo <xref:System.Runtime.CompilerServices.RuntimeHelpers.ProbeForSufficientStack%2A>.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-194">The <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions%2A> method calls the <xref:System.Runtime.CompilerServices.RuntimeHelpers.ProbeForSufficientStack%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a8c5-195">Nell'esempio seguente viene illustrato come impostare in modo affidabile l'handle utilizzando il <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-195">The following example shows how to reliably set handles by using the <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions%2A> method.</span></span> <span data-ttu-id="7a8c5-196">Per impostare in modo affidabile un handle a un handle preesistente specificato, è necessario assicurarsi che l'allocazione di handle nativo e la successiva registrazione di questo handle all'interno di un <xref:System.Runtime.InteropServices.SafeHandle> oggetto è di tipo atomico.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-196">To reliably set a handle to a specified pre-existing handle, you must ensure that the allocation of the native handle and the subsequent recording of that handle within a <xref:System.Runtime.InteropServices.SafeHandle> object is atomic.</span></span> <span data-ttu-id="7a8c5-197">Qualsiasi errore tra queste operazioni (ad esempio un'interruzione del thread o l'eccezione di memoria esaurita) comporterà l'handle nativo perdita.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-197">Any failure between these operations (such as a thread abort or out-of-memory exception) will result in the native handle being leaked.</span></span> <span data-ttu-id="7a8c5-198">È possibile utilizzare il <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions%2A> per verificare che l'handle non viene perso.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-198">You can use the <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions%2A> method to make sure that the handle is not leaked.</span></span>  
  
 [!code-csharp[SafeHandle-RuntimeHelpers.PrepareConstrainedRegions#1](~/samples/snippets/csharp/VS_Snippets_CLR/SafeHandle-RuntimeHelpers.PrepareConstrainedRegions/cs/sample.cs#1)]
 [!code-vb[SafeHandle-RuntimeHelpers.PrepareConstrainedRegions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SafeHandle-RuntimeHelpers.PrepareConstrainedRegions/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="7a8c5-199">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-199">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="7a8c5-200">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-200">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PrepareConstrainedRegionsNoOP">
      <MemberSignature Language="C#" Value="public static void PrepareConstrainedRegionsNoOP ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrepareConstrainedRegionsNoOP() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegionsNoOP" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PrepareConstrainedRegionsNoOP ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrepareConstrainedRegionsNoOP();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7a8c5-201">Indica un corpo di codice come area a esecuzione limitata (CER) senza eseguire alcun probe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-201">Designates a body of code as a constrained execution region (CER) without performing any probing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a8c5-202">I compilatori non devono chiamare questo metodo direttamente.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-202">Compilers should not call this method directly.</span></span> <span data-ttu-id="7a8c5-203">Definire invece un CER chiamando il <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-203">Instead, define a CER by calling the <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="7a8c5-204">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-204">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="7a8c5-205">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-205">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PrepareContractedDelegate">
      <MemberSignature Language="C#" Value="public static void PrepareContractedDelegate (Delegate d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrepareContractedDelegate(class System.Delegate d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareContractedDelegate(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PrepareContractedDelegate (d As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrepareContractedDelegate(Delegate ^ d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="7a8c5-206">Delegato dell'evento da preparare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-206">The event delegate to prepare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a8c5-207">Consente alle applicazioni di preparare in modo dinamico i delegati dell'evento <see cref="T:System.AppDomain" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-207">Provides a way for applications to dynamically prepare <see cref="T:System.AppDomain" /> event delegates.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a8c5-208"><xref:System.AppDomain> delegato dell'evento, ad esempio <xref:System.AppDomain.DomainUnload>, <xref:System.AppDomain.ProcessExit>, e <xref:System.AppDomain.UnhandledException> non vengono preparati automaticamente all'avvio.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-208"><xref:System.AppDomain> event delegates such as <xref:System.AppDomain.DomainUnload>, <xref:System.AppDomain.ProcessExit>, and <xref:System.AppDomain.UnhandledException> are not automatically prepared at startup.</span></span> <span data-ttu-id="7a8c5-209">Per la preparazione, è possibile utilizzare i metodi seguenti:</span><span class="sxs-lookup"><span data-stu-id="7a8c5-209">You can use the following methods to prepare them:</span></span>  
  
-   <span data-ttu-id="7a8c5-210">Attributo del metodo usando il <xref:System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute> attributo.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-210">Attribute the method by using the <xref:System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute> attribute.</span></span>  
  
-   <span data-ttu-id="7a8c5-211">Attributo del metodo usando il <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute> attributo.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-211">Attribute the method by using the <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute> attribute.</span></span>  
  
-   <span data-ttu-id="7a8c5-212">Chiamare il <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareContractedDelegate%2A> metodo per preparare il delegato dinamicamente.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-212">Call the <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareContractedDelegate%2A> method to dynamically prepare the delegate.</span></span>  
  
 <span data-ttu-id="7a8c5-213">Per ulteriori informazioni, vedere l'articolo [mantenere il codice in esecuzione con le funzionalità di affidabilità di .NET Framework](http://go.microsoft.com/fwlink/?LinkId=145491) in MSDN Magazine.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-213">For more information, see the article [Keep Your Code Running with the Reliability Features of the .NET Framework](http://go.microsoft.com/fwlink/?LinkId=145491) in the MSDN Magazine.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="7a8c5-214">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-214">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="7a8c5-215">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-215">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PrepareDelegate">
      <MemberSignature Language="C#" Value="public static void PrepareDelegate (Delegate d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrepareDelegate(class System.Delegate d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareDelegate(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PrepareDelegate (d As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrepareDelegate(Delegate ^ d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="7a8c5-216">Tipo di delegato da preparare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-216">The delegate type to prepare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a8c5-217">Indica che è necessario preparare il delegato specificato da includere in un'area a esecuzione vincolata (CER).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-217">Indicates that the specified delegate should be prepared for inclusion in a constrained execution region (CER).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a8c5-218">I compilatori utilizzano questo metodo per preparare la chiamata al metodo di un delegato e la destinazione di tale chiamata (e il grafico del delegato chiamata determinare staticamente) come un'area a esecuzione vincolata (CER).</span><span class="sxs-lookup"><span data-stu-id="7a8c5-218">Compilers use this method to prepare a delegate's invocation method and to prepare the target of that invocation (and the delegate's statically determinable call graph) as a constrained execution region (CER).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="7a8c5-219">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-219">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="7a8c5-220">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-220">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="PrepareMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7a8c5-221">Prepara un metodo da includere in un'area a esecuzione limitata (CER).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-221">Prepares a method for inclusion in a constrained execution region (CER).</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PrepareMethod">
      <MemberSignature Language="C#" Value="public static void PrepareMethod (RuntimeMethodHandle method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrepareMethod(valuetype System.RuntimeMethodHandle method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareMethod(System.RuntimeMethodHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PrepareMethod (method As RuntimeMethodHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrepareMethod(RuntimeMethodHandle method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.RuntimeMethodHandle" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="7a8c5-222">Handle del metodo da preparare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-222">A handle to the method to prepare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a8c5-223">Prepara un metodo da includere in un'area a esecuzione limitata (CER).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-223">Prepares a method for inclusion in a constrained execution region (CER).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a8c5-224">Utilizzano i compilatori di <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareMethod%28System.RuntimeMethodHandle%29> metodo per gestire chiamate virtuali che vengono eseguite all'interno di un'area a esecuzione vincolata (CER).</span><span class="sxs-lookup"><span data-stu-id="7a8c5-224">Compilers use the <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareMethod%28System.RuntimeMethodHandle%29> method to handle virtual calls that are made inside a constrained execution region (CER).</span></span> <span data-ttu-id="7a8c5-225">In fase di compilazione JIT, common language runtime non dispone in genere informazioni sufficienti sulla destinazione di una chiamata virtuale.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-225">At JIT compilation time, the common language runtime does not usually have enough information about the target of a virtual call.</span></span> <span data-ttu-id="7a8c5-226">Pertanto, il runtime non viene preparato inizialmente un segmento del grafico delle chiamate.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-226">Therefore, the runtime does not initially prepare that segment of the call graph.</span></span> <span data-ttu-id="7a8c5-227">Se il codice che utilizza CER è disponibili informazioni sufficienti per determinare la destinazione in qualsiasi punto nel tempo prima di CER effettivamente immessi, è possibile chiamare <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareMethod%28System.RuntimeMethodHandle%29> per eseguire la stessa preparazione di runtime in genere effettuata per una CER indirizzata al metodo specificato come argomento.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-227">If the code that is using the CER has enough knowledge to determine the target at any point in time before the CER is actually entered, it can call <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareMethod%28System.RuntimeMethodHandle%29> to perform the same runtime preparation normally done for a CER rooted at the method specified as an argument.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="7a8c5-228">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-228">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="7a8c5-229">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-229">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PrepareMethod">
      <MemberSignature Language="C#" Value="public static void PrepareMethod (RuntimeMethodHandle method, RuntimeTypeHandle[] instantiation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrepareMethod(valuetype System.RuntimeMethodHandle method, valuetype System.RuntimeTypeHandle[] instantiation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareMethod(System.RuntimeMethodHandle,System.RuntimeTypeHandle[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PrepareMethod (method As RuntimeMethodHandle, instantiation As RuntimeTypeHandle())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrepareMethod(RuntimeMethodHandle method, cli::array &lt;RuntimeTypeHandle&gt; ^ instantiation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.RuntimeMethodHandle" />
        <Parameter Name="instantiation" Type="System.RuntimeTypeHandle[]" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="7a8c5-230">Handle del metodo da preparare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-230">A handle to the method to prepare.</span>
          </span>
        </param>
        <param name="instantiation">
          <span data-ttu-id="7a8c5-231">Creazione di istanza da passare al metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-231">The instantiation to pass to the method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a8c5-232">Prepara un metodo da includere in un'area a esecuzione limitata (CER) con la creazione dell'istanza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-232">Prepares a method for inclusion in a constrained execution region (CER) with the specified instantiation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a8c5-233">È possibile fornire supportano per i compilatori di generics con la <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareMethod%28System.RuntimeMethodHandle%2CSystem.RuntimeTypeHandle%5B%5D%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-233">You can provide generics support for compilers by using the <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareMethod%28System.RuntimeMethodHandle%2CSystem.RuntimeTypeHandle%5B%5D%29> method.</span></span> <span data-ttu-id="7a8c5-234">Common language runtime non è possibile preparare aree a esecuzione vincolata (CER) con radice in un metodo che dispone di parametri di tipo generico (un parametro di tipo nella classe che contiene il metodo o uno sul metodo stesso) quando vengono creata un'istanza di tali parametri di tipo come tipi di riferimento.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-234">The common language runtime cannot prepare constrained execution regions (CERs) rooted in a method that has generic type parameters (either a type parameter on the class containing the method or one on the method itself) when those type parameters are instantiated as reference types.</span></span>  
  
 <span data-ttu-id="7a8c5-235">È possibile utilizzare questo overload per passare un'istanza specifica (ad esempio, una matrice di tipi), specificando i parametri di tipo classe innanzitutto (se presente), seguito dai parametri di tipo di metodo (se presente).</span><span class="sxs-lookup"><span data-stu-id="7a8c5-235">You can use this overload to pass a specific instantiation (such as an array of types), specifying class type parameters first (if any), followed by method type parameters (if any).</span></span> <span data-ttu-id="7a8c5-236">Il runtime consente di preparare la creazione dell'istanza del metodo.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-236">The runtime prepares that instantiation of the method.</span></span> <span data-ttu-id="7a8c5-237">(Questo è necessario solo se si utilizza le creazioni di istanze contiene almeno un parametro di tipo riferimento). Di conseguenza, è possibile utilizzare un formato CER `try` clausola in un metodo generico (o un metodo non generico in una classe generica) e funzionerà in modo affidabile con creazioni di istanza di <xref:System.Int32> o altri tipi di valore.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-237">(This is necessary only if the instantiations you use contain at least one reference type parameter.) Thus, you can use a CER-style `try` clause in a generic method (or a nongeneric method on a generic class) and it will work reliably with instantiations of <xref:System.Int32> or other value types.</span></span> <span data-ttu-id="7a8c5-238">Per creare un'istanza di riferimento, tipi, ad esempio <xref:System.String>, è necessario utilizzare esplicita <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareMethod%28System.RuntimeMethodHandle%2CSystem.RuntimeTypeHandle%5B%5D%29> metodo CER metodo radice.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-238">To instantiate reference types such as <xref:System.String>, you must use an explicit <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareMethod%28System.RuntimeMethodHandle%2CSystem.RuntimeTypeHandle%5B%5D%29> method on the CER root method first.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="7a8c5-239">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-239">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="7a8c5-240">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-240">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ProbeForSufficientStack">
      <MemberSignature Language="C#" Value="public static void ProbeForSufficientStack ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProbeForSufficientStack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeHelpers.ProbeForSufficientStack" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ProbeForSufficientStack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ProbeForSufficientStack();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7a8c5-241">Sonda una determinata quantità di spazio dello stack per garantire che non possa verificarsi un overflow dello stack all'interno di un blocco successivo di codice, presupponendo che il codice utilizzi una quantità limitata e moderata di spazio dello stack.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-241">Probes for a certain amount of stack space to ensure that a stack overflow cannot happen within a subsequent block of code (assuming that your code uses only a finite and moderate amount of stack space).</span>
          </span>
          <span data-ttu-id="7a8c5-242">Si consiglia di utilizzare un'area a esecuzione vincolata (CER) anziché questo metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-242">We recommend that you use a constrained execution region (CER) instead of this method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a8c5-243">Questo metodo viene utilizzato dall'infrastruttura di area a esecuzione vincolata in esecuzione in host resilienti all'overflow dello stack, ad esempio Microsoft SQL Server e Microsoft Exchange Server.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-243">This method is used by the constrained execution region (CER) infrastructure when running in hosts that are resilient to stack overflow such as Microsoft SQL Server and Microsoft Exchange Server.</span></span> <span data-ttu-id="7a8c5-244">Questo metodo attualmente le ricerche per 48 KB di spazio dello stack su x86 piattaforma, ma la quantità esatta potrebbe cambiare nel tempo e possono variare in altre piattaforme.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-244">This method currently probes for 48 KB of stack space on the x86 platform, but the exact amount may change over time and may vary on other platforms.</span></span>  
  
 <span data-ttu-id="7a8c5-245">Questo metodo viene inoltre utilizzato dai compilatori.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-245">This method is also used by compilers.</span></span>  
  
 <span data-ttu-id="7a8c5-246">Anziché utilizzare il <xref:System.Runtime.CompilerServices.RuntimeHelpers.ProbeForSufficientStack%2A> (metodo), è necessario utilizzare un CER standard.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-246">Instead of using the <xref:System.Runtime.CompilerServices.RuntimeHelpers.ProbeForSufficientStack%2A> method, you should use a standard CER.</span></span> <span data-ttu-id="7a8c5-247">Ovvero, se si intende utilizzare una quantità di spazio dello stack moderata, chiamare il <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions%2A?displayProperty=nameWithType> metodo immediatamente prima il `try` / `finally` o `try` / `catch` blocco.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-247">That is, if you are planning to use a moderate amount of stack space, call the <xref:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions%2A?displayProperty=nameWithType> method immediately before your `try`/`finally` or `try`/`catch` block.</span></span> <span data-ttu-id="7a8c5-248">Se si chiama un metodo ricorsivo o un piano per una grande quantità di spazio dello stack, è necessario utilizzare il <xref:System.Runtime.CompilerServices.RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-248">If you are calling a recursive method or plan to use a lot of stack space, you must use the <xref:System.Runtime.CompilerServices.RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="7a8c5-249">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-249">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="7a8c5-250">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-250">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="RunClassConstructor">
      <MemberSignature Language="C#" Value="public static void RunClassConstructor (RuntimeTypeHandle type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RunClassConstructor(valuetype System.RuntimeTypeHandle type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(System.RuntimeTypeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RunClassConstructor (type As RuntimeTypeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RunClassConstructor(RuntimeTypeHandle type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.RuntimeTypeHandle" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="7a8c5-251">Handle di tipo che specifica il metodo del costruttore di classi da eseguire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-251">A type handle that specifies the class constructor method to run.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a8c5-252">Esegue un metodo del costruttore di classi specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-252">Runs a specified class constructor method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a8c5-253">Questo metodo viene utilizzato dai compilatori.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-253">This method is used by compilers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TypeInitializationException">
          <span data-ttu-id="7a8c5-254">L'inizializzatore della classe genera un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-254">The class initializer throws an exception.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RunModuleConstructor">
      <MemberSignature Language="C#" Value="public static void RunModuleConstructor (ModuleHandle module);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RunModuleConstructor(valuetype System.ModuleHandle module) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeHelpers.RunModuleConstructor(System.ModuleHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RunModuleConstructor (module As ModuleHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RunModuleConstructor(ModuleHandle module);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="module" Type="System.ModuleHandle" />
      </Parameters>
      <Docs>
        <param name="module">
          <span data-ttu-id="7a8c5-255">Handle che specifica il metodo del costruttore di moduli da eseguire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-255">A handle that specifies the module constructor method to run.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a8c5-256">Esegue il metodo del costruttore di moduli specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-256">Runs a specified module constructor method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a8c5-257">Questo metodo viene utilizzato dai compilatori.</span><span class="sxs-lookup"><span data-stu-id="7a8c5-257">This method is used by compilers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TypeInitializationException">
          <span data-ttu-id="7a8c5-258">Il costruttore di moduli ha generato un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a8c5-258">The module constructor throws an exception.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryEnsureSufficientExecutionStack">
      <MemberSignature Language="C#" Value="public static bool TryEnsureSufficientExecutionStack ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryEnsureSufficientExecutionStack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeHelpers.TryEnsureSufficientExecutionStack" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryEnsureSufficientExecutionStack () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryEnsureSufficientExecutionStack();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>