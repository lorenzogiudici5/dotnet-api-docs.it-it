<Type Name="IsExplicitlyDereferenced" FullName="System.Runtime.CompilerServices.IsExplicitlyDereferenced">
  <TypeSignature Language="C#" Value="public static class IsExplicitlyDereferenced" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsExplicitlyDereferenced extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced" />
  <TypeSignature Language="VB.NET" Value="Public Class IsExplicitlyDereferenced" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsExplicitlyDereferenced abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7bd8c-101">Indica che un puntatore gestito rappresenta un parametro di puntatore all'interno di una firma del metodo.</span><span class="sxs-lookup"><span data-stu-id="7bd8c-101">Indicates that a managed pointer represents a pointer parameter within a method signature.</span></span> <span data-ttu-id="7bd8c-102">Questa classe non può essere ereditata.</span><span class="sxs-lookup"><span data-stu-id="7bd8c-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7bd8c-103">In C++, puntatori e riferimenti gestiti vengono emessi nei metadati come puntatori.</span><span class="sxs-lookup"><span data-stu-id="7bd8c-103">In C++, managed pointers and managed references are emitted into metadata as pointers.</span></span>  <span data-ttu-id="7bd8c-104">Per distinguere tra i due tipi di metadati, il compilatore Microsoft C++ applica questo modificatore ai puntatori gestiti.</span><span class="sxs-lookup"><span data-stu-id="7bd8c-104">To distinguish between the two types in metadata, the Microsoft  C++ compiler applies this modifier to managed pointers.</span></span>  <span data-ttu-id="7bd8c-105">E non genera modificatori sui tipi di riferimento gestiti.</span><span class="sxs-lookup"><span data-stu-id="7bd8c-105">It emits no modifier on managed reference types.</span></span>  <span data-ttu-id="7bd8c-106">I compilatori devono conoscere la sintassi corretta per la chiamata durante l'importazione di un metodo dall'ambito dei metadati.</span><span class="sxs-lookup"><span data-stu-id="7bd8c-106">Compilers need to know the correct calling syntax when importing a method from metadata scope.</span></span>  <span data-ttu-id="7bd8c-107">Il <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced> classe e il relativo partner, la <xref:System.Runtime.CompilerServices.IsImplicitlyDereferenced> classe, rimuovere l'ambiguità di parametri di riferimento del puntatore.</span><span class="sxs-lookup"><span data-stu-id="7bd8c-107">The <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced> class and its partner, the <xref:System.Runtime.CompilerServices.IsImplicitlyDereferenced> class, disambiguate reference parameters from pointer parameters.</span></span>  
  
 <span data-ttu-id="7bd8c-108">I compilatori creano modificatori personalizzati all'interno dei metadati per modificare il modo in cui il compilatore JIT just-in-time gestisce valori quando il comportamento predefinito non è appropriato.</span><span class="sxs-lookup"><span data-stu-id="7bd8c-108">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="7bd8c-109">Quando il compilatore JIT rileva un modificatore personalizzato, gestisce il valore in modo che specifica il modificatore.</span><span class="sxs-lookup"><span data-stu-id="7bd8c-109">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="7bd8c-110">Compilatori possono applicare modificatori personalizzati a metodi, parametri e valori restituiti.</span><span class="sxs-lookup"><span data-stu-id="7bd8c-110">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="7bd8c-111">Il compilatore JIT deve rispondere ai modificatori obbligatori, ma possa ignorare i modificatori facoltativi.</span><span class="sxs-lookup"><span data-stu-id="7bd8c-111">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  
  
 <span data-ttu-id="7bd8c-112">È possibile creare i modificatori personalizzati nei metadati tramite una delle tecniche seguenti:</span><span class="sxs-lookup"><span data-stu-id="7bd8c-112">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="7bd8c-113">Utilizzo dei metodi di <xref:System.Reflection.Emit.TypeBuilder> classe, ad esempio <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, e <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="7bd8c-113">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="7bd8c-114">Generazione di un file di istruzioni di Microsoft intermediate language (MSIL) che contiene chiamate a `modopt` e `modreq`e l'assemblaggio del file con il [Ilasm.exe (Assembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="7bd8c-114">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="7bd8c-115">Usando l'API di reflection non gestita.</span><span class="sxs-lookup"><span data-stu-id="7bd8c-115">Using the unmanaged reflection API.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7bd8c-116">Nell'esempio riportato di seguito viene illustrato come creare un <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced> oggetto in un assembly tramite reflection.</span><span class="sxs-lookup"><span data-stu-id="7bd8c-116">The following example demonstrates how to emit an <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced> object into an assembly using reflection.</span></span>  
  
 [!code-cpp[Runtime.CompilerServices.IsExplicitlyDereferenced#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsExplicitlyDereferenced/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>