<Type Name="IsByValue" FullName="System.Runtime.CompilerServices.IsByValue">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7f51b5c0290e49444bd599d0ca24496e46d0668f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37472112" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class IsByValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsByValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsByValue" />
  <TypeSignature Language="VB.NET" Value="Public Class IsByValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsByValue abstract sealed" />
  <TypeSignature Language="F#" Value="type IsByValue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0cff2-101">Indica che un argomento di metodo modificato deve essere interpretato come avente una semantica di oggetti passati per valore.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cff2-101">Indicates that a modified method argument should be interpreted as having object passed-by-value semantics.</span>
      </span>
      <span data-ttu-id="0cff2-102">Questo modificatore viene applicato ai tipi di riferimento.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cff2-102">This modifier is applied to reference types.</span>
      </span>
      <span data-ttu-id="0cff2-103">Questa classe non può essere ereditata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cff2-103">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cff2-104">Il <xref:System.Runtime.CompilerServices.IsByValue> classe viene utilizzata dal compilatore Microsoft C++ per indicare i parametri di metodo e restituire valori la cui la semantica di segue le regole di C++ per gli oggetti passati per valore.</span><span class="sxs-lookup"><span data-stu-id="0cff2-104">The <xref:System.Runtime.CompilerServices.IsByValue> class is used by the Microsoft C++ compiler to denote method parameters and return values whose semantics follow the C++ rules for objects passed by value.</span></span>  
  
 <span data-ttu-id="0cff2-105">I compilatori creano i modificatori personalizzati all'interno dei metadati per modificare il modo in cui il compilatore JIT just-in-time gestisce i valori quando il comportamento predefinito non è appropriato.</span><span class="sxs-lookup"><span data-stu-id="0cff2-105">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="0cff2-106">Quando il compilatore JIT rileva un modificatore personalizzato, che gestisce il valore in modo che il modificatore specifica.</span><span class="sxs-lookup"><span data-stu-id="0cff2-106">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="0cff2-107">I compilatori possono applicare i modificatori personalizzati a metodi e parametri e valori restituiti.</span><span class="sxs-lookup"><span data-stu-id="0cff2-107">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="0cff2-108">Il compilatore JIT deve rispondere ai modificatori necessari, ma possa ignorare i modificatori facoltativi.</span><span class="sxs-lookup"><span data-stu-id="0cff2-108">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  
  
 <span data-ttu-id="0cff2-109">È possibile generare modificatori personalizzati nei metadati tramite una delle tecniche seguenti:</span><span class="sxs-lookup"><span data-stu-id="0cff2-109">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="0cff2-110">Utilizzo dei metodi di <xref:System.Reflection.Emit.TypeBuilder> classe, ad esempio <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, e <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cff2-110">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="0cff2-111">Generazione di un file di istruzioni di Microsoft intermediate language (MSIL) che contiene le chiamate a `modopt` e `modreq`e assemblare il file con il [Ilasm.exe (Assembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="0cff2-111">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="0cff2-112">Usando l'API di reflection non gestita.</span><span class="sxs-lookup"><span data-stu-id="0cff2-112">Using the unmanaged reflection API.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cff2-113">Nell'esempio seguente viene illustrato come generare un <xref:System.Runtime.CompilerServices.IsByValue> oggetto in un assembly tramite reflection.</span><span class="sxs-lookup"><span data-stu-id="0cff2-113">The following example demonstrates how to emit an <xref:System.Runtime.CompilerServices.IsByValue> object into an assembly using reflection.</span></span>  
  
 [!code-cpp[Runtime.CompilerServices.IsByValue#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsByValue/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>