<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Unsafe.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50ccc5cb47c6abfb58ca98a1419b6a1547438294f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ccc5cb47c6abfb58ca98a1419b6a1547438294f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.Unsafe">
          <source>Contains generic, low-level functionality for manipulating pointers.</source>
          <target state="translated">Contiene funzionalità generiche di basso livello per la modifica dei puntatori.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.Int32)">
          <source>The type of reference.</source>
          <target state="translated">Il tipo di riferimento.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.Int32)">
          <source>The reference to add the offset to.</source>
          <target state="translated">Riferimento a cui aggiungere l'offset.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.Int32)">
          <source>The offset to add.</source>
          <target state="translated">Offset da aggiungere.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.Int32)">
          <source>Adds an element offset to the given reference.</source>
          <target state="translated">Aggiunge un offset di elemento al riferimento specificato.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.Int32)">
          <source>A new reference that reflects the addition of offset to pointer.</source>
          <target state="translated">Nuovo riferimento che riflette l'aggiunta dell'offset al puntatore.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.IntPtr)">
          <source>The type of reference.</source>
          <target state="translated">Il tipo di riferimento.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.IntPtr)">
          <source>The reference to add the offset to.</source>
          <target state="translated">Riferimento a cui aggiungere l'offset.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.IntPtr)">
          <source>The offset to add.</source>
          <target state="translated">Offset da aggiungere.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.IntPtr)">
          <source>Adds an element offset to the given reference.</source>
          <target state="translated">Aggiunge un offset di elemento al riferimento specificato.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.IntPtr)">
          <source>A new reference that reflects the addition of offset to pointer.</source>
          <target state="translated">Nuovo riferimento che riflette l'aggiunta dell'offset al puntatore.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.AddByteOffset``1(``0@,System.IntPtr)">
          <source>The type of reference.</source>
          <target state="translated">Il tipo di riferimento.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AddByteOffset``1(``0@,System.IntPtr)">
          <source>The reference to add the offset to.</source>
          <target state="translated">Riferimento a cui aggiungere l'offset.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AddByteOffset``1(``0@,System.IntPtr)">
          <source>The offset to add.</source>
          <target state="translated">Offset da aggiungere.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AddByteOffset``1(``0@,System.IntPtr)">
          <source>Adds a byte offset to the given reference.</source>
          <target state="translated">Aggiunge un offset di byte al riferimento specificato.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AddByteOffset``1(``0@,System.IntPtr)">
          <source>A new reference that reflects the addition of byte offset to pointer.</source>
          <target state="translated">Nuovo riferimento che riflette l'aggiunta dell'offset di byte al puntatore.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.AreSame``1(``0@,``0@)">
          <source>The type of reference.</source>
          <target state="translated">Il tipo di riferimento.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AreSame``1(``0@,``0@)">
          <source>The first reference to compare.</source>
          <target state="translated">Primo riferimento da confrontare.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AreSame``1(``0@,``0@)">
          <source>The second reference to compare.</source>
          <target state="translated">Secondo riferimento da confrontare.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AreSame``1(``0@,``0@)">
          <source>Determines whether the specified references point to the same location.</source>
          <target state="translated">Determina se i riferimenti specificati puntano alla stessa posizione.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AreSame``1(``0@,``0@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> point to the same location; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="left" /&gt;</ph> e <ph id="ph3">&lt;paramref name="right" /&gt;</ph> puntano alla stessa posizione; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.As``1(System.Object)">
          <source>The type which the object will be cast to.</source>
          <target state="translated">Il tipo di cui l'oggetto sarà possibile eseguire il cast.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.As``1(System.Object)">
          <source>The object to cast.</source>
          <target state="translated">Oggetto di cui eseguire il cast.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.As``1(System.Object)">
          <source>Casts the given object to the specified type.</source>
          <target state="translated">Eseguire il cast dell'oggetto specificato al tipo specificato.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.As``1(System.Object)">
          <source>The original object, casted to the given type.</source>
          <target state="translated">Oggetto originale, di cui viene eseguito il cast al tipo specificato.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.As``2(``0@)">
          <source>The type of reference to reinterpret..</source>
          <target state="translated">Il tipo di riferimento da reinterpretare...</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.As``2(``0@)">
          <source>The desired type of the reference.</source>
          <target state="translated">Il tipo di riferimento desiderato.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.As``2(``0@)">
          <source>The reference to reinterpret.</source>
          <target state="translated">Riferimento da reinterpretare.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.As``2(``0@)">
          <source>Reinterprets the given reference as a reference to a value of type <ph id="ph1">&lt;typeparamref name="TTo" /&gt;</ph>.</source>
          <target state="translated">Reinterpreta il riferimento specificato come riferimento a un valore di tipo <ph id="ph1">&lt;typeparamref name="TTo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.As``2(``0@)">
          <source>A reference to a value of type <ph id="ph1">&lt;typeparamref name="TTo" /&gt;</ph>.</source>
          <target state="translated">Riferimento a un valore di tipo <ph id="ph1">&lt;typeparamref name="TTo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.AsPointer``1(``0@)">
          <source>The type of object.</source>
          <target state="translated">Tipo di oggetto.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AsPointer``1(``0@)">
          <source>The object whose pointer is obtained.</source>
          <target state="translated">Oggetto di cui viene ottenuto il puntatore.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AsPointer``1(``0@)">
          <source>Returns a pointer to the given by-ref parameter.</source>
          <target state="translated">Restituisce un puntatore al parametro per riferimento specificato.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AsPointer``1(``0@)">
          <source>A pointer to the given value.</source>
          <target state="translated">Puntatore al valore specificato.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.AsRef``1(System.Void*)">
          <source>The type of the interpreted location.</source>
          <target state="translated">Il tipo di percorso interpretato.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AsRef``1(System.Void*)">
          <source>The location of the value to reference.</source>
          <target state="translated">Posizione del valore a cui fare riferimento.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AsRef``1(System.Void*)">
          <source>Reinterprets the given location as a reference to a value of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph>.</source>
          <target state="translated">Reinterpreta la posizione specificata come riferimento a un valore di tipo <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AsRef``1(System.Void*)">
          <source>A reference to a value of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph>.</source>
          <target state="translated">Riferimento a un valore di tipo <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.ByteOffset``1(``0@,``0@)">
          <source>The type of reference.</source>
          <target state="translated">Il tipo di riferimento.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.ByteOffset``1(``0@,``0@)">
          <source>The reference to origin.</source>
          <target state="translated">Riferimento all'origine.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.ByteOffset``1(``0@,``0@)">
          <source>The reference to target.</source>
          <target state="translated">Riferimento alla destinazione.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.ByteOffset``1(``0@,``0@)">
          <source>Determines the byte offset from origin to target from the given references.</source>
          <target state="translated">Determina l'offset di byte dall'origine alla destinazione dai riferimenti specificati.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.ByteOffset``1(``0@,``0@)">
          <source>Byte offset from origin to target i.e. <ph id="ph1">&lt;paramref name="target" /&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;paramref name="origin" /&gt;</ph>.</source>
          <target state="translated">Offset di byte dall'origine di destinazione, ovvero <ph id="ph1">&lt;paramref name="target" /&gt;</ph> <ph id="ph2"> - </ph> <ph id="ph3">&lt;paramref name="origin" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.Copy``1(System.Void*,``0@)">
          <source>The type of value to copy.</source>
          <target state="translated">Il tipo di valore da copiare.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Copy``1(System.Void*,``0@)">
          <source>The location to copy to.</source>
          <target state="translated">Posizione di destinazione della copia.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Copy``1(System.Void*,``0@)">
          <source>A reference to the value to copy.</source>
          <target state="translated">Riferimento al valore da copiare.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Copy``1(System.Void*,``0@)">
          <source>Copies a value of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> to the given location.</source>
          <target state="translated">Copia un valore di tipo <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> nella posizione specificata.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.Copy``1(``0@,System.Void*)">
          <source>The type of value to copy.</source>
          <target state="translated">Il tipo di valore da copiare.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Copy``1(``0@,System.Void*)">
          <source>The location to copy to.</source>
          <target state="translated">Posizione di destinazione della copia.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Copy``1(``0@,System.Void*)">
          <source>A pointer to the value to copy.</source>
          <target state="translated">Puntatore al valore da copiare.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Copy``1(``0@,System.Void*)">
          <source>Copies a value of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> to the given location.</source>
          <target state="translated">Copia un valore di tipo <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> nella posizione specificata.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Byte@,System.Byte@,System.UInt32)">
          <source>The destination address to copy to.</source>
          <target state="translated">Indirizzo di destinazione in cui eseguire la copia.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Byte@,System.Byte@,System.UInt32)">
          <source>The source address to copy from.</source>
          <target state="translated">Indirizzo di origine da cui eseguire la copia.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Byte@,System.Byte@,System.UInt32)">
          <source>The number of bytes to copy.</source>
          <target state="translated">Il numero di byte da copiare.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Byte@,System.Byte@,System.UInt32)">
          <source>Copies bytes from the source address to the destination address.</source>
          <target state="translated">Copia i byte dall'indirizzo di origine all'indirizzo di destinazione.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Void*,System.Void*,System.UInt32)">
          <source>The destination address to copy to.</source>
          <target state="translated">Indirizzo di destinazione in cui eseguire la copia.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Void*,System.Void*,System.UInt32)">
          <source>The source address to copy from.</source>
          <target state="translated">Indirizzo di origine da cui eseguire la copia.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Void*,System.Void*,System.UInt32)">
          <source>The number of bytes to copy.</source>
          <target state="translated">Il numero di byte da copiare.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Void*,System.Void*,System.UInt32)">
          <source>Copies bytes from the source address to the destination address.</source>
          <target state="translated">Copia i byte dall'indirizzo di origine all'indirizzo di destinazione.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Byte@,System.Byte@,System.UInt32)">
          <source>The destination address to copy to.</source>
          <target state="translated">Indirizzo di destinazione in cui eseguire la copia.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Byte@,System.Byte@,System.UInt32)">
          <source>The source address to copy from.</source>
          <target state="translated">Indirizzo di origine da cui eseguire la copia.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Byte@,System.Byte@,System.UInt32)">
          <source>The number of bytes to copy.</source>
          <target state="translated">Il numero di byte da copiare.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Byte@,System.Byte@,System.UInt32)">
          <source>Copies bytes from the source address to the destination address without assuming architecture dependent alignment of the addresses.</source>
          <target state="translated">Copia i byte dall'indirizzo di origine all'indirizzo di destinazione senza presupporre l'allineamento dipendente dall'architettura degli indirizzi.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Void*,System.Void*,System.UInt32)">
          <source>The destination address to copy to.</source>
          <target state="translated">Indirizzo di destinazione in cui eseguire la copia.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Void*,System.Void*,System.UInt32)">
          <source>The source address to copy from.</source>
          <target state="translated">Indirizzo di origine da cui eseguire la copia.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Void*,System.Void*,System.UInt32)">
          <source>The number of bytes to copy.</source>
          <target state="translated">Il numero di byte da copiare.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Void*,System.Void*,System.UInt32)">
          <source>Copies bytes from the source address to the destination address without assuming architecture dependent alignment of the addresses.</source>
          <target state="translated">Copia i byte dall'indirizzo di origine all'indirizzo di destinazione senza presupporre l'allineamento dipendente dall'architettura degli indirizzi.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Byte@,System.Byte,System.UInt32)">
          <source>The address of the start of the memory block to initialize.</source>
          <target state="translated">Indirizzo dell'inizio del blocco di memoria da inizializzare.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Byte@,System.Byte,System.UInt32)">
          <source>The value to initialize the block to.</source>
          <target state="translated">Valore di inizializzazione del blocco.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Byte@,System.Byte,System.UInt32)">
          <source>The number of bytes to initialize.</source>
          <target state="translated">Numero di byte da inizializzare.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Byte@,System.Byte,System.UInt32)">
          <source>Initializes a block of memory at the given location with a given initial value.</source>
          <target state="translated">Inizializza un blocco di memoria in corrispondenza della posizione specificata con un valore iniziale specificato.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Void*,System.Byte,System.UInt32)">
          <source>The address of the start of the memory block to initialize.</source>
          <target state="translated">Indirizzo dell'inizio del blocco di memoria da inizializzare.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Void*,System.Byte,System.UInt32)">
          <source>The value to initialize the block to.</source>
          <target state="translated">Valore di inizializzazione del blocco.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Void*,System.Byte,System.UInt32)">
          <source>The number of bytes to initialize.</source>
          <target state="translated">Numero di byte da inizializzare.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Void*,System.Byte,System.UInt32)">
          <source>Initializes a block of memory at the given location with a given initial value.</source>
          <target state="translated">Inizializza un blocco di memoria in corrispondenza della posizione specificata con un valore iniziale specificato.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Byte@,System.Byte,System.UInt32)">
          <source>The address of the start of the memory block to initialize.</source>
          <target state="translated">Indirizzo dell'inizio del blocco di memoria da inizializzare.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Byte@,System.Byte,System.UInt32)">
          <source>The value to initialize the block to.</source>
          <target state="translated">Valore di inizializzazione del blocco.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Byte@,System.Byte,System.UInt32)">
          <source>The number of bytes to initialize.</source>
          <target state="translated">Numero di byte da inizializzare.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Byte@,System.Byte,System.UInt32)">
          <source>Initializes a block of memory at the given location with a given initial value without assuming architecture dependent alignment of the address.</source>
          <target state="translated">Inizializza un blocco di memoria in corrispondenza della posizione specificata con un valore iniziale specificato senza presupporre l'allineamento dipendente dall'architettura dell'indirizzo.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Void*,System.Byte,System.UInt32)">
          <source>The address of the start of the memory block to initialize.</source>
          <target state="translated">Indirizzo dell'inizio del blocco di memoria da inizializzare.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Void*,System.Byte,System.UInt32)">
          <source>The value to initialize the block to.</source>
          <target state="translated">Valore di inizializzazione del blocco.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Void*,System.Byte,System.UInt32)">
          <source>The number of bytes to initialize.</source>
          <target state="translated">Numero di byte da inizializzare.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Void*,System.Byte,System.UInt32)">
          <source>Initializes a block of memory at the given location with a given initial value without assuming architecture dependent alignment of the address.</source>
          <target state="translated">Inizializza un blocco di memoria in corrispondenza della posizione specificata con un valore iniziale specificato senza presupporre l'allineamento dipendente dall'architettura dell'indirizzo.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.Read``1(System.Void*)">
          <source>The type to read.</source>
          <target state="translated">Tipo da leggere.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Read``1(System.Void*)">
          <source>The location to read from.</source>
          <target state="translated">Posizione da cui leggere.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Read``1(System.Void*)">
          <source>Reads a value of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> from the given location.</source>
          <target state="translated">Legge un valore di tipo <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> dalla posizione specificata.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Read``1(System.Void*)">
          <source>An object of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> read from the given location.</source>
          <target state="translated">Oggetto di tipo <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> letto dalla posizione specificata.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Byte@)">
          <source>The type to read.</source>
          <target state="translated">Tipo da leggere.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Byte@)">
          <source>The location to read from.</source>
          <target state="translated">Posizione da cui leggere.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Byte@)">
          <source>Reads a value of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> from the given location without assuming architecture dependent alignment of the addresses.</source>
          <target state="translated">Legge un valore di tipo <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> dalla posizione specificata senza presupporre l'allineamento dipendente dall'architettura degli indirizzi.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Byte@)">
          <source>An object of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> read from the given location.</source>
          <target state="translated">Oggetto di tipo <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> letto dalla posizione specificata.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Void*)">
          <source>The type to read.</source>
          <target state="translated">Tipo da leggere.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Void*)">
          <source>The location to read from.</source>
          <target state="translated">Posizione da cui leggere.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Void*)">
          <source>Reads a value of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> from the given location without assuming architecture dependent alignment of the addresses.</source>
          <target state="translated">Legge un valore di tipo <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> dalla posizione specificata senza presupporre l'allineamento dipendente dall'architettura degli indirizzi.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Void*)">
          <source>An object of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> read from the given location.</source>
          <target state="translated">Oggetto di tipo <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> letto dalla posizione specificata.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.SizeOf``1">
          <source>The type of object whose size is retrieved.</source>
          <target state="translated">Il tipo di oggetto la cui dimensione viene recuperata.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.SizeOf``1">
          <source>Returns the size of an object of the given type parameter.</source>
          <target state="translated">Restituisce le dimensioni di un oggetto del parametro di tipo specificato.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.SizeOf``1">
          <source>The size of an object of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph>.</source>
          <target state="translated">Dimensioni di un oggetto di tipo <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.Int32)">
          <source>The type of reference.</source>
          <target state="translated">Il tipo di riferimento.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.Int32)">
          <source>The reference to subtract the offset from.</source>
          <target state="translated">Riferimento da cui sottrarre l'offset.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.Int32)">
          <source>The offset to subtract.</source>
          <target state="translated">Offset da sottrarre.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.Int32)">
          <source>Subtracts an element offset from the given reference.</source>
          <target state="translated">Sottrae un offset di elemento dal riferimento specificato.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.Int32)">
          <source>A new reference that reflects the subraction of offset from pointer.</source>
          <target state="translated">Nuovo riferimento che riflette la sottrazione dell'offset dal puntatore.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.IntPtr)">
          <source>The type of reference.</source>
          <target state="translated">Il tipo di riferimento.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.IntPtr)">
          <source>The reference to subtract the offset from.</source>
          <target state="translated">Riferimento da cui sottrarre l'offset.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.IntPtr)">
          <source>The offset to subtract.</source>
          <target state="translated">Offset da sottrarre.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.IntPtr)">
          <source>Subtracts an element offset from the given reference.</source>
          <target state="translated">Sottrae un offset di elemento dal riferimento specificato.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.IntPtr)">
          <source>A new reference that reflects the subraction of offset from pointer.</source>
          <target state="translated">Nuovo riferimento che riflette la sottrazione dell'offset dal puntatore.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.SubtractByteOffset``1(``0@,System.IntPtr)">
          <source>The type of reference.</source>
          <target state="translated">Il tipo di riferimento.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.SubtractByteOffset``1(``0@,System.IntPtr)">
          <source>The reference to subtract the offset from.</source>
          <target state="translated">Riferimento da cui sottrarre l'offset.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.SubtractByteOffset``1(``0@,System.IntPtr)">
          <source>The offset to subtract.</source>
          <target state="translated">Offset da sottrarre.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.SubtractByteOffset``1(``0@,System.IntPtr)">
          <source>Subtracts a byte offset from the given reference.</source>
          <target state="translated">Sottrae un offset di byte dal riferimento specificato.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.SubtractByteOffset``1(``0@,System.IntPtr)">
          <source>A new reference that reflects the subraction of byte offset from pointer.</source>
          <target state="translated">Nuovo riferimento che riflette la sottrazione dell'offset di byte dal puntatore.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.Write``1(System.Void*,``0)">
          <source>The type of value to write.</source>
          <target state="translated">Il tipo di valore da scrivere.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Write``1(System.Void*,``0)">
          <source>The location to write to.</source>
          <target state="translated">Posizione in cui scrivere.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Write``1(System.Void*,``0)">
          <source>The value to write.</source>
          <target state="translated">Valore da scrivere.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Write``1(System.Void*,``0)">
          <source>Writes a value of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> to the given location.</source>
          <target state="translated">Scrive un valore di tipo <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> nella posizione specificata.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Byte@,``0)">
          <source>The type of value to write.</source>
          <target state="translated">Il tipo di valore da scrivere.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Byte@,``0)">
          <source>The location to write to.</source>
          <target state="translated">Posizione in cui scrivere.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Byte@,``0)">
          <source>The value to write.</source>
          <target state="translated">Valore da scrivere.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Byte@,``0)">
          <source>Writes a value of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> to the given location without assuming architecture dependent alignment of the addresses.</source>
          <target state="translated">Scrive un valore di tipo <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> nella posizione specificata senza presupporre l'allineamento dipendente dall'architettura degli indirizzi.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Void*,``0)">
          <source>The type of value to write.</source>
          <target state="translated">Il tipo di valore da scrivere.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Void*,``0)">
          <source>The location to write to.</source>
          <target state="translated">Posizione in cui scrivere.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Void*,``0)">
          <source>The value to write.</source>
          <target state="translated">Valore da scrivere.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Void*,``0)">
          <source>Writes a value of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> to the given location without assuming architecture dependent alignment of the addresses.</source>
          <target state="translated">Scrive un valore di tipo <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> nella posizione specificata senza presupporre l'allineamento dipendente dall'architettura degli indirizzi.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>