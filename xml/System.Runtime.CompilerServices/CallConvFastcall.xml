<Type Name="CallConvFastcall" FullName="System.Runtime.CompilerServices.CallConvFastcall">
  <TypeSignature Language="C#" Value="public class CallConvFastcall" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallConvFastcall extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.CallConvFastcall" />
  <TypeSignature Language="VB.NET" Value="Public Class CallConvFastcall" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallConvFastcall" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="560bb-101">La convenzione di chiamata non è supportata in questa versione di .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="560bb-101">This calling convention is not supported in this version of the .NET Framework.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="560bb-102">Il `__fastcall` convenzione di chiamata specifica che gli argomenti alle funzioni di essere passati nei registri, quando possibile.</span><span class="sxs-lookup"><span data-stu-id="560bb-102">The `__fastcall` calling convention specifies that arguments to functions be passed in registers, when possible.</span></span>  
  
 <span data-ttu-id="560bb-103">Le classi in <xref:System.Runtime.CompilerServices> per solo uso ai writer di compilatori.</span><span class="sxs-lookup"><span data-stu-id="560bb-103">The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.</span></span>  
  
 <span data-ttu-id="560bb-104">I compilatori creano modificatori personalizzati all'interno dei metadati per modificare il modo in cui il compilatore JIT just-in-time gestisce valori quando il comportamento predefinito non è appropriato.</span><span class="sxs-lookup"><span data-stu-id="560bb-104">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="560bb-105">Quando il compilatore JIT rileva un modificatore personalizzato, gestisce il valore in modo che specifica il modificatore.</span><span class="sxs-lookup"><span data-stu-id="560bb-105">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="560bb-106">Compilatori possono applicare modificatori personalizzati a metodi, parametri e valori restituiti.</span><span class="sxs-lookup"><span data-stu-id="560bb-106">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="560bb-107">Il compilatore JIT deve rispondere ai modificatori obbligatori, ma possa ignorare i modificatori facoltativi.</span><span class="sxs-lookup"><span data-stu-id="560bb-107">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  <span data-ttu-id="560bb-108">Un compilatore C++ può creare un modificatore personalizzato per descrivere come un byte deve essere considerato nei casi in cui il compilatore JIT considera byte in modo che non è compatibile con C++ per impostazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="560bb-108">A C++ compiler could emit a custom modifier to describe how a byte should be treated in cases where the JIT compiler treats bytes in manner that is not compatible with C++ by default.</span></span>  
  
 <span data-ttu-id="560bb-109">È possibile creare i modificatori personalizzati nei metadati tramite una delle tecniche seguenti:</span><span class="sxs-lookup"><span data-stu-id="560bb-109">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="560bb-110">Utilizzo dei metodi di <xref:System.Reflection.Emit.TypeBuilder> classe come <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, e <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="560bb-110">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class like <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="560bb-111">Generazione di un file di istruzioni di Microsoft intermediate language (MSIL) che contiene chiamate a `modopt` e `modreq`e l'assemblaggio del file con il [Ilasm.exe (Assembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="560bb-111">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="560bb-112">Usando l'API di reflection non gestita.</span><span class="sxs-lookup"><span data-stu-id="560bb-112">Using the unmanaged reflection API.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallConvFastcall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.CallConvFastcall.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallConvFastcall();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="560bb-113">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.CompilerServices.CallConvFastcall" />.</span><span class="sxs-lookup"><span data-stu-id="560bb-113">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.CallConvFastcall" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="560bb-114">Le classi in <xref:System.Runtime.CompilerServices> per solo uso ai writer di compilatori.</span><span class="sxs-lookup"><span data-stu-id="560bb-114">The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>