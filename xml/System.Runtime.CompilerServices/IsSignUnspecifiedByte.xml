<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IsSignUnspecifiedByte.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e65669772e4fe8dcde7c38cca641d119217dfd32.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e65669772e4fe8dcde7c38cca641d119217dfd32</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.IsSignUnspecifiedByte">
          <source>Indicates that a modifier is neither signed nor unsigned.</source>
          <target state="translated">Indica che un modificatore non è né con segno né senza segno.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.IsSignUnspecifiedByte">
          <source>This class cannot be inherited.</source>
          <target state="translated">Questa classe non può essere ereditata.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsSignUnspecifiedByte">
          <source>Some programming languages, such as C++, recognize three distinct <ph id="ph1">`char`</ph> values: <ph id="ph2">`signed char`</ph>, <ph id="ph3">`unsigned char`</ph>, and <ph id="ph4">`char`</ph>.</source>
          <target state="translated">Alcuni linguaggi di programmazione, ad esempio C++, riconoscono tre distinti <ph id="ph1">`char`</ph> valori: <ph id="ph2">`signed char`</ph>, <ph id="ph3">`unsigned char`</ph>, e <ph id="ph4">`char`</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsSignUnspecifiedByte">
          <source>To distinguish the unmodified <ph id="ph1">`char`</ph> type from the others, the Microsoft C++ compiler adds the <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;</ph> modifier to each <ph id="ph3">`char`</ph> type emitted to an assembly.</source>
          <target state="translated">Per distinguere non modificato <ph id="ph1">`char`</ph> digitare dagli altri, il compilatore Microsoft C++ aggiunge il <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;</ph> modificatore a ogni <ph id="ph3">`char`</ph> tipo inviati a un assembly.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsSignUnspecifiedByte">
          <source>Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</source>
          <target state="translated">I compilatori creano modificatori personalizzati all'interno dei metadati per modificare il modo in cui il compilatore JIT just-in-time gestisce valori quando il comportamento predefinito non è appropriato.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsSignUnspecifiedByte">
          <source>When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</source>
          <target state="translated">Quando il compilatore JIT rileva un modificatore personalizzato, gestisce il valore in modo che specifica il modificatore.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsSignUnspecifiedByte">
          <source>Compilers can apply custom modifiers to methods, parameters, and return values.</source>
          <target state="translated">Compilatori possono applicare modificatori personalizzati a metodi, parametri e valori restituiti.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsSignUnspecifiedByte">
          <source>The JIT compiler must respond to required modifiers but can ignore optional modifiers.</source>
          <target state="translated">Il compilatore JIT deve rispondere ai modificatori obbligatori, ma possa ignorare i modificatori facoltativi.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsSignUnspecifiedByte">
          <source>You can emit custom modifiers into metadata using one of the following techniques:</source>
          <target state="translated">È possibile creare i modificatori personalizzati nei metadati tramite una delle tecniche seguenti:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsSignUnspecifiedByte">
          <source>Using methods in the <ph id="ph1">&lt;xref:System.Reflection.Emit.TypeBuilder&gt;</ph> class such as <ph id="ph2">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineField%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A&gt;</ph>.</source>
          <target state="translated">Utilizzo dei metodi di <ph id="ph1">&lt;xref:System.Reflection.Emit.TypeBuilder&gt;</ph> classe, ad esempio <ph id="ph2">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineField%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsSignUnspecifiedByte">
          <source>Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to <ph id="ph1">`modopt`</ph> and <ph id="ph2">`modreq`</ph>, and assembling the file with the <bpt id="p1">[</bpt>Ilasm.exe (IL Assembler)<ept id="p1">](~/docs/framework/tools/ilasm-exe-il-assembler.md)</ept>.</source>
          <target state="translated">Generazione di un file di istruzioni di Microsoft intermediate language (MSIL) che contiene chiamate a <ph id="ph1">`modopt`</ph> e <ph id="ph2">`modreq`</ph>e l'assemblaggio del file con il <bpt id="p1">[</bpt>Ilasm.exe (Assembler IL)<ept id="p1">](~/docs/framework/tools/ilasm-exe-il-assembler.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsSignUnspecifiedByte">
          <source>Using the unmanaged reflection API.</source>
          <target state="translated">Usando l'API di reflection non gestita.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsSignUnspecifiedByte">
          <source>The following code example creates an assembly using classes in the <ph id="ph1">&lt;xref:System.Reflection.Emit&gt;</ph> namespace and emits the <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;</ph> modifier into that assembly.</source>
          <target state="translated">L'esempio di codice seguente viene creato un assembly mediante le classi di <ph id="ph1">&lt;xref:System.Reflection.Emit&gt;</ph> dello spazio dei nomi e trasmette il <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;</ph> modificatore in tale assembly.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>