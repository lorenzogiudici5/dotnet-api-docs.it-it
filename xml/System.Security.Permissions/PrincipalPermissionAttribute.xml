<Type Name="PrincipalPermissionAttribute" FullName="System.Security.Permissions.PrincipalPermissionAttribute">
  <TypeSignature Language="C#" Value="public sealed class PrincipalPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PrincipalPermissionAttribute extends System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.PrincipalPermissionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PrincipalPermissionAttribute&#xA;Inherits CodeAccessSecurityAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrincipalPermissionAttribute sealed : System::Security::Permissions::CodeAccessSecurityAttribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Permissions.CodeAccessSecurityAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="50962-101">Consente di applicare azioni di sicurezza per <see cref="T:System.Security.Permissions.PrincipalPermission" /> al codice usando la sicurezza dichiarativa.</span><span class="sxs-lookup"><span data-stu-id="50962-101">Allows security actions for <see cref="T:System.Security.Permissions.PrincipalPermission" /> to be applied to code using declarative security.</span></span> <span data-ttu-id="50962-102">Questa classe non può essere ereditata.</span><span class="sxs-lookup"><span data-stu-id="50962-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50962-103"><xref:System.Security.Permissions.PrincipalPermissionAttribute> Consente di richiedere che gli utenti che eseguono codice appartengano a un ruolo specificato in modo dichiarativo o sono stati autenticati.</span><span class="sxs-lookup"><span data-stu-id="50962-103"><xref:System.Security.Permissions.PrincipalPermissionAttribute> can be used to declaratively demand that users running your code belong to a specified role or have been authenticated.</span></span> <span data-ttu-id="50962-104">Utilizzo di <xref:System.Security.Permissions.PermissionState.Unrestricted> crea un <xref:System.Security.Permissions.PrincipalPermission> con <xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A> impostato su `true` e <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> e <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> impostato su `null`.</span><span class="sxs-lookup"><span data-stu-id="50962-104">Use of <xref:System.Security.Permissions.PermissionState.Unrestricted> creates a <xref:System.Security.Permissions.PrincipalPermission> with <xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A> set to `true` and <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> and <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> set to `null`.</span></span>  
  
 <span data-ttu-id="50962-105">L'ambito della dichiarazione che è consentita dipende il <xref:System.Security.Permissions.SecurityAction> utilizzato.</span><span class="sxs-lookup"><span data-stu-id="50962-105">The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.</span></span> <span data-ttu-id="50962-106"><xref:System.Security.Permissions.PrincipalPermissionAttribute> non è possibile applicare a livello di assembly.</span><span class="sxs-lookup"><span data-stu-id="50962-106"><xref:System.Security.Permissions.PrincipalPermissionAttribute> cannot be applied at the assembly level.</span></span>  
  
 <span data-ttu-id="50962-107">Le informazioni di sicurezza dichiarate da un attributo di sicurezza viene archiviate nei metadati dell'attributo di destinazione e si accedono dal sistema in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="50962-107">The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.</span></span> <span data-ttu-id="50962-108">Gli attributi di sicurezza vengono utilizzati solo per la sicurezza dichiarativa.</span><span class="sxs-lookup"><span data-stu-id="50962-108">Security attributes are used only for declarative security.</span></span> <span data-ttu-id="50962-109">Per la sicurezza imperativa, utilizzare la classe dell'autorizzazione corrispondente.</span><span class="sxs-lookup"><span data-stu-id="50962-109">For imperative security, use the corresponding permission class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="50962-110">Prima di utilizzare questa classe per richiedere l'autorizzazione dell'entità, è necessario impostare i criteri di entità del dominio applicazione corrente per il valore di enumerazione <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="50962-110">Before you use this class to demand principal permission, you must set the current application domain's principal policy to the enumeration value <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span></span> <span data-ttu-id="50962-111">Per impostazione predefinita, i criteri di entità è <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="50962-111">By default, the principal policy is set to <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span></span> <span data-ttu-id="50962-112">Se il criterio principale non è impostato su <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, una richiesta di autorizzazione principale avrà esito negativo.</span><span class="sxs-lookup"><span data-stu-id="50962-112">If you do not set the principal policy to <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, a demand for principal permission will fail.</span></span> <span data-ttu-id="50962-113">Il codice seguente deve essere eseguito prima richiesta di autorizzazione principale: `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`</span><span class="sxs-lookup"><span data-stu-id="50962-113">The following code should be executed before the principal permission is demanded: `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50962-114">Nell'esempio seguente viene illustrato come la <xref:System.Security.Permissions.PrincipalPermissionAttribute> classe viene utilizzata in modo dichiarativo per richiedere che l'utente corrente sia un amministratore.</span><span class="sxs-lookup"><span data-stu-id="50962-114">The following example demonstrates how the <xref:System.Security.Permissions.PrincipalPermissionAttribute> class is used declaratively to demand that the current user be an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="50962-115">In Windows Vista, 	la funzionalità Controllo dell'account utente determina i privilegi di un utente.</span><span class="sxs-lookup"><span data-stu-id="50962-115">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="50962-116">Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore.</span><span class="sxs-lookup"><span data-stu-id="50962-116">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="50962-117">Per impostazione predefinita, viene assegnato il ruolo dell'utente standard.</span><span class="sxs-lookup"><span data-stu-id="50962-117">By default, you are in the standard user role.</span></span> <span data-ttu-id="50962-118">Per eseguire il codice che richiede un ruolo da amministratore è necessario elevare i privilegi da utente standard ad amministratore.</span><span class="sxs-lookup"><span data-stu-id="50962-118">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="50962-119">È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.</span><span class="sxs-lookup"><span data-stu-id="50962-119">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.PrincipalPermission" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermissionAttribute (System.Security.Permissions.SecurityAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.SecurityAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As SecurityAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermissionAttribute(System::Security::Permissions::SecurityAction action);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="50962-120">Uno dei valori di <see cref="T:System.Security.Permissions.SecurityAction" />.</span><span class="sxs-lookup"><span data-stu-id="50962-120">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</span></span></param>
        <summary><span data-ttu-id="50962-121">Inizializza una nuova istanza della classe <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> con l'oggetto <see cref="T:System.Security.Permissions.SecurityAction" /> specificato.</span><span class="sxs-lookup"><span data-stu-id="50962-121">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50962-122">`Demand`, `InheritanceDemand`, e `LinkDemand` sono gli unici valori di <xref:System.Security.Permissions.SecurityAction> che hanno un significato per questo attributo.</span><span class="sxs-lookup"><span data-stu-id="50962-122">`Demand`, `InheritanceDemand`, and `LinkDemand` are the only values of <xref:System.Security.Permissions.SecurityAction> that have meaning for this attribute.</span></span> <span data-ttu-id="50962-123">Altre azioni non si applicano alle autorizzazioni che non sono le autorizzazioni di accesso di codice.</span><span class="sxs-lookup"><span data-stu-id="50962-123">Other actions do not apply to permissions that are not code access permissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50962-124">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Security.Permissions.PrincipalPermissionAttribute.%23ctor%2A> costruttore per richiedere che l'utente corrente deve essere un amministratore.</span><span class="sxs-lookup"><span data-stu-id="50962-124">The following example demonstrates how to use the <xref:System.Security.Permissions.PrincipalPermissionAttribute.%23ctor%2A> constructor to demand that the current user be an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="50962-125">In Windows Vista, 	la funzionalità Controllo dell'account utente determina i privilegi di un utente.</span><span class="sxs-lookup"><span data-stu-id="50962-125">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="50962-126">Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore.</span><span class="sxs-lookup"><span data-stu-id="50962-126">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="50962-127">Per impostazione predefinita, viene assegnato il ruolo dell'utente standard.</span><span class="sxs-lookup"><span data-stu-id="50962-127">By default, you are in the standard user role.</span></span> <span data-ttu-id="50962-128">Per eseguire il codice che richiede un ruolo da amministratore è necessario elevare i privilegi da utente standard ad amministratore.</span><span class="sxs-lookup"><span data-stu-id="50962-128">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="50962-129">È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.</span><span class="sxs-lookup"><span data-stu-id="50962-129">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticated">
      <MemberSignature Language="C#" Value="public bool Authenticated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50962-130">Ottiene o imposta un valore che indica se l'entità corrente è stata autenticata dal provider di sicurezza basato sui ruoli sottostante.</span><span class="sxs-lookup"><span data-stu-id="50962-130">Gets or sets a value indicating whether the current principal has been authenticated by the underlying role-based security provider.</span></span></summary>
        <value>
          <span data-ttu-id="50962-131"><see langword="true" /> se l'oggetto Principal corrente è stato autenticato; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="50962-131"><see langword="true" /> if the current principal has been authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission CreatePermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission CreatePermission() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermissionAttribute.CreatePermission" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreatePermission () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ CreatePermission();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="50962-132">Crea e restituisce un nuovo oggetto <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span><span class="sxs-lookup"><span data-stu-id="50962-132">Creates and returns a new <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span></span></summary>
        <returns><span data-ttu-id="50962-133">Oggetto <see cref="T:System.Security.Permissions.PrincipalPermission" /> che corrisponde a questo attributo.</span><span class="sxs-lookup"><span data-stu-id="50962-133">A <see cref="T:System.Security.Permissions.PrincipalPermission" /> that corresponds to this attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50962-134">Questo metodo deve essere chiamato solo dal sistema di sicurezza, mai dal codice dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="50962-134">This method should only be called by the security system, never by application code.</span></span>  
  
 <span data-ttu-id="50962-135">In fase di compilazione, gli attributi convertono le dichiarazioni di sicurezza in un formato serializzato nei metadati.</span><span class="sxs-lookup"><span data-stu-id="50962-135">At compile time, attributes convert security declarations to a serialized form in metadata.</span></span> <span data-ttu-id="50962-136">Dati di sicurezza dichiarativa nei metadati vengono creati dall'autorizzazione restituita dal metodo che corrisponde a questo attributo.</span><span class="sxs-lookup"><span data-stu-id="50962-136">Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50962-137">Ottiene o imposta il nome dell'identità associato all'entità corrente.</span><span class="sxs-lookup"><span data-stu-id="50962-137">Gets or sets the name of the identity associated with the current principal.</span></span></summary>
        <value><span data-ttu-id="50962-138">Nome che deve corrispondere a quello fornito dal sottostante provider di sicurezza basato sui ruoli.</span><span class="sxs-lookup"><span data-stu-id="50962-138">A name to match against that provided by the underlying role-based security provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50962-139">Se il provider di autenticazione è Windows NT, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> corrisponde al nome di account di accesso dell'utente Windows NT (nel formato "Nomedominio\nomeutente").</span><span class="sxs-lookup"><span data-stu-id="50962-139">If the authentication provider is Windows NT, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> is the same as the user's Windows NT login name (in the form "DomainName\UserName").</span></span> <span data-ttu-id="50962-140">Consultare la documentazione dell'host per determinare il provider di autenticazione utilizzato e la modalità determina l'identità dell'entità corrente.</span><span class="sxs-lookup"><span data-stu-id="50962-140">Check the documentation of your host to determine which authentication provider it uses and how it determines the identity of the current principal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public string Role { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Role" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Role" />
      <MemberSignature Language="VB.NET" Value="Public Property Role As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Role { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50962-141">Ottiene o imposta l'appartenenza a un ruolo di sicurezza specificato.</span><span class="sxs-lookup"><span data-stu-id="50962-141">Gets or sets membership in a specified security role.</span></span></summary>
        <value><span data-ttu-id="50962-142">Nome di un ruolo del sottostante provider di sicurezza basato sui ruoli.</span><span class="sxs-lookup"><span data-stu-id="50962-142">The name of a role from the underlying role-based security provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50962-143">I ruoli disponibili variano in base al provider di autenticazione in uso dall'host.</span><span class="sxs-lookup"><span data-stu-id="50962-143">The available roles will differ based on the authentication provider in use by the host.</span></span> <span data-ttu-id="50962-144">Se il provider di autenticazione è Windows NT, i ruoli sono gruppi di utenti di Windows NT (nel formato "Nomedominio\nomegruppo").</span><span class="sxs-lookup"><span data-stu-id="50962-144">If the authentication provider is Windows NT, roles are Windows NT user groups (in the form "DomainName\GroupName").</span></span> <span data-ttu-id="50962-145">Consultare la documentazione dell'host per determinare il provider di autenticazione utilizzato e ciò che gli utenti a ruoli possono appartenere.</span><span class="sxs-lookup"><span data-stu-id="50962-145">Check the documentation of your host to determine which authentication provider it uses and what roles users can belong to.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>