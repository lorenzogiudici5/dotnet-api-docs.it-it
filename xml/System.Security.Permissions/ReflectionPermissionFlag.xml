<Type Name="ReflectionPermissionFlag" FullName="System.Security.Permissions.ReflectionPermissionFlag">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9ea8a0435690e232ce077bff445bd216d32b3a29" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30498425" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ReflectionPermissionFlag" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ReflectionPermissionFlag extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.ReflectionPermissionFlag" />
  <TypeSignature Language="VB.NET" Value="Public Enum ReflectionPermissionFlag" />
  <TypeSignature Language="C++ CLI" Value="public enum class ReflectionPermissionFlag" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifica l'uso consentito degli spazi dei nomi <see cref="N:System.Reflection" /> e <see cref="N:System.Reflection.Emit" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa enumerazione viene utilizzata per la <xref:System.Security.Permissions.ReflectionPermission> e <xref:System.Security.Permissions.ReflectionPermissionAttribute> classi. Se non <xref:System.Security.Permissions.ReflectionPermission> viene concesso, la reflection è consentita su tutti i tipi e membri, ma le operazioni di chiamata sono consentite solo tipi e membri visibili. Per altre informazioni, vedere [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md) (Considerazioni sulla sicurezza per reflection).  
  
> [!CAUTION]
>  Poiché <xref:System.Security.Permissions.ReflectionPermission> può fornire l'accesso ai membri di classe privata, è consigliabile concedere <xref:System.Security.Permissions.ReflectionPermission> al codice Internet solo con il flag RestrictedMemberAccess e non con qualsiasi altro flag.  
  
 Il flag RestrictedMemberAccess è stato introdotto nel [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]. Per utilizzare questo flag, l'applicazione deve essere destinata la [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.  
  
> [!IMPORTANT]
>  AllFlags non include il flag RestrictedMemberAccess. Per ottenere una maschera che include tutti i flag di questa enumerazione, è necessario utilizzare la combinazione di AllFlags con RestrictedMemberAccess.  
  
 A partire dal [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)], il flag ReflectionEmit non è più necessario per generare il codice, a meno che non vengano generati i simboli di debug. Per utilizzare questa funzionalità, l'applicazione deve essere destinata la [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] o versione successiva.  
  
 A partire dal [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], il flag TypeInformation non è più necessario per la reflection su membri e tipi non pubblici; il flag è stato contrassegnato come obsoleto.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> enumerazione per inizializzare una nuova istanza di <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> classe che rappresenta il diritto di eseguire l'accesso al membro. Questo esempio fa parte di un esempio più ampio fornito per il <xref:System.Security.Permissions.ReflectionPermissionFlag.AllFlags> classe.  
  
 Per un esempio che illustra come utilizzare il flag RestrictedMemberAccess con il codice Internet, vedere [procedura dettagliata: creazione di codice in scenari di attendibilità parziale](~/docs/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios.md).  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#8)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.ReflectionPermission" />
    <altmember cref="T:System.Security.Permissions.ReflectionPermissionAttribute" />
  </Docs>
  <Members>
    <Member MemberName="AllFlags">
      <MemberSignature Language="C#" Value="AllFlags" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag AllFlags = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" />
      <MemberSignature Language="VB.NET" Value="AllFlags" />
      <MemberSignature Language="C++ CLI" Value="AllFlags" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
          <see langword="TypeInformation" />, <see langword="MemberAccess" /> e <see langword="ReflectionEmit" /> sono impostati. <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /> non include <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="MemberAccess">
      <MemberSignature Language="C#" Value="MemberAccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag MemberAccess = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />
      <MemberSignature Language="VB.NET" Value="MemberAccess" />
      <MemberSignature Language="C++ CLI" Value="MemberAccess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Sono consentite le operazioni di chiamata su tutti i membri, indipendentemente dal set di autorizzazioni. Se il flag non è impostato, le operazioni di chiamata saranno consentite solo sui membri visibili.</summary>
      </Docs>
    </Member>
    <Member MemberName="NoFlags">
      <MemberSignature Language="C#" Value="NoFlags" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag NoFlags = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" />
      <MemberSignature Language="VB.NET" Value="NoFlags" />
      <MemberSignature Language="C++ CLI" Value="NoFlags" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>È consentita l'enumerazione di tipi e membri. Le operazioni di chiamata sono consentite su tipi e membri visibili.</summary>
      </Docs>
    </Member>
    <Member MemberName="ReflectionEmit">
      <MemberSignature Language="C#" Value="ReflectionEmit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag ReflectionEmit = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit" />
      <MemberSignature Language="VB.NET" Value="ReflectionEmit" />
      <MemberSignature Language="C++ CLI" Value="ReflectionEmit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>È consentita la generazione di simboli di debug. A partire dalla versione [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo flag non è più necessario per generare il codice.</summary>
      </Docs>
    </Member>
    <Member MemberName="RestrictedMemberAccess">
      <MemberSignature Language="C#" Value="RestrictedMemberAccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag RestrictedMemberAccess = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />
      <MemberSignature Language="VB.NET" Value="RestrictedMemberAccess" />
      <MemberSignature Language="C++ CLI" Value="RestrictedMemberAccess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Viene fornito l'accesso limitato ai membri per il codice parzialmente attendibile. Il codice parzialmente attendibile può accedere a tipi e membri non pubblici, ma solo se il set di concessioni del codice parzialmente attendibile include tutte le autorizzazioni nel set di concessioni dell'assembly che contiene i tipi e i membri non pubblici a cui è in corso l'accesso. Questo flag  è nuovo in [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)].</summary>
      </Docs>
    </Member>
    <Member MemberName="TypeInformation">
      <MemberSignature Language="C#" Value="TypeInformation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag TypeInformation = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation" />
      <MemberSignature Language="VB.NET" Value="TypeInformation" />
      <MemberSignature Language="C++ CLI" Value="TypeInformation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("not used anymore")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Questo flag è obsoleto. Non è necessario alcun flag per enumerare i tipi e i membri e per esaminarne i metadati. In alternativa, usare <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" />.</summary>
      </Docs>
    </Member>
  </Members>
</Type>