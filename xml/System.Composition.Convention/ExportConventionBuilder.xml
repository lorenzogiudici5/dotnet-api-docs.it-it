<Type Name="ExportConventionBuilder" FullName="System.Composition.Convention.ExportConventionBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="855a53bfb02240fedfc74b4ad58f7de74254e4de" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36699805" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ExportConventionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExportConventionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Composition.Convention.ExportConventionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExportConventionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportConventionBuilder sealed" />
  <TypeSignature Language="F#" Value="type ExportConventionBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Convention</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="274a2-101">Configura un'esportazione associata a una parte.</span>
      <span class="sxs-lookup">
        <span data-stu-id="274a2-101">Configures an export that is associated with a part.</span>
      </span>
    </summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName="AddMetadata">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ExportConventionBuilder AddMetadata (string name, Func&lt;Type,object&gt; getValueFromPartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ExportConventionBuilder AddMetadata(string name, class System.Func`2&lt;class System.Type, object&gt; getValueFromPartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ExportConventionBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMetadata (name As String, getValueFromPartType As Func(Of Type, Object)) As ExportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ExportConventionBuilder ^ AddMetadata(System::String ^ name, Func&lt;Type ^, System::Object ^&gt; ^ getValueFromPartType);" />
      <MemberSignature Language="F#" Value="member this.AddMetadata : string * Func&lt;Type, obj&gt; -&gt; System.Composition.Convention.ExportConventionBuilder" Usage="exportConventionBuilder.AddMetadata (name, getValueFromPartType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ExportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getValueFromPartType" Type="System.Func&lt;System.Type,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="274a2-102">Nome dei metadati da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a2-102">The name of the metadata to add.</span>
          </span>
        </param>
        <param name="getValueFromPartType">
          <span data-ttu-id="274a2-103">Funzione che fornisce il valore dei metadati da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a2-103">A function that provides the value of the metadata to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="274a2-104">Aggiunge i metadati con il nome e il valore specificati all'esportazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a2-104">Adds metadata that has the specified name and value to the export.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="274a2-105">Costruttore di esportazioni contenente i metadati che consentono di ampliare la configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a2-105">An export builder containing the metadata that allows for further configuration.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMetadata">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ExportConventionBuilder AddMetadata (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ExportConventionBuilder AddMetadata(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ExportConventionBuilder.AddMetadata(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMetadata (name As String, value As Object) As ExportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ExportConventionBuilder ^ AddMetadata(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddMetadata : string * obj -&gt; System.Composition.Convention.ExportConventionBuilder" Usage="exportConventionBuilder.AddMetadata (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ExportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="274a2-106">Nome dei metadati da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a2-106">The name of the metadata to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="274a2-107">Valore dei metadati da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a2-107">The value of the metadata to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="274a2-108">Aggiunge i metadati con il nome e il valore specificati all'esportazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a2-108">Adds metadata that has the specified name and value to the export.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="274a2-109">Costruttore di esportazioni contenente i metadati che consentono di ampliare la configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a2-109">An export builder containing the metadata that allows for further configuration.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AsContractName">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ExportConventionBuilder AsContractName (Func&lt;Type,string&gt; getContractNameFromPartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ExportConventionBuilder AsContractName(class System.Func`2&lt;class System.Type, string&gt; getContractNameFromPartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ExportConventionBuilder.AsContractName(System.Func{System.Type,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function AsContractName (getContractNameFromPartType As Func(Of Type, String)) As ExportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ExportConventionBuilder ^ AsContractName(Func&lt;Type ^, System::String ^&gt; ^ getContractNameFromPartType);" />
      <MemberSignature Language="F#" Value="member this.AsContractName : Func&lt;Type, string&gt; -&gt; System.Composition.Convention.ExportConventionBuilder" Usage="exportConventionBuilder.AsContractName getContractNameFromPartType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ExportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getContractNameFromPartType" Type="System.Func&lt;System.Type,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="getContractNameFromPartType">
          <span data-ttu-id="274a2-110">Funzione che fornisce il nome del contratto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a2-110">The function that provides the contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="274a2-111">Specifica il nome del contratto per l'esportazione basato sul risultato della funzione specificata nel tipo di esportazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a2-111">Specifies the contract name for the export based on the result of the specified function on the export type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="274a2-112">Costruttore di esportazioni contenente il nome di contratto che consente di ampliare la configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a2-112">An export builder containing the contract name that allows for further configuration.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AsContractName">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ExportConventionBuilder AsContractName (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ExportConventionBuilder AsContractName(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ExportConventionBuilder.AsContractName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AsContractName (contractName As String) As ExportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ExportConventionBuilder ^ AsContractName(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.AsContractName : string -&gt; System.Composition.Convention.ExportConventionBuilder" Usage="exportConventionBuilder.AsContractName contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ExportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName">
          <span data-ttu-id="274a2-113">Nome del contratto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a2-113">The contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="274a2-114">Specifica il nome del contratto per l'esportazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a2-114">Specifies the contract name for the export.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="274a2-115">Costruttore di esportazioni contenente il nome di contratto che consente di ampliare la configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a2-115">An export builder containing the contract name that allows for further configuration.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AsContractType">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ExportConventionBuilder AsContractType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ExportConventionBuilder AsContractType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ExportConventionBuilder.AsContractType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ExportConventionBuilder ^ AsContractType(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.AsContractType : Type -&gt; System.Composition.Convention.ExportConventionBuilder" Usage="exportConventionBuilder.AsContractType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ExportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="274a2-116">Tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a2-116">The type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="274a2-117">Specifica il tipo di contratto per l'esportazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a2-117">Specifies the contract type for the export.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="274a2-118">Costruttore di esportazioni contenente il tipo di contratto che consente di ampliare la configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a2-118">An export builder containing the contract type that allows for further configuration.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AsContractType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ExportConventionBuilder AsContractType&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ExportConventionBuilder AsContractType&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ExportConventionBuilder.AsContractType``1" />
      <MemberSignature Language="VB.NET" Value="Public Function AsContractType(Of T) () As ExportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::ExportConventionBuilder ^ AsContractType();" />
      <MemberSignature Language="F#" Value="member this.AsContractType : unit -&gt; System.Composition.Convention.ExportConventionBuilder" Usage="exportConventionBuilder.AsContractType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ExportConventionBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="274a2-119">Tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a2-119">The generic type.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="274a2-120">Specifica il tipo di contratto per l'esportazione come tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a2-120">Specifies the contract type for the export as a generic type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="274a2-121">Costruttore di esportazioni contenente il tipo di contratto che consente di ampliare la configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a2-121">An export builder containing the contract type that allows for further configuration.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>