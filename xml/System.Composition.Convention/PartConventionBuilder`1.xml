<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PartConventionBuilder`1.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58072b58b0f2c2bcf1e18d7a52b489f700f1b497b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8072b58b0f2c2bcf1e18d7a52b489f700f1b497b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.1,netcore-2.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Convention.PartConventionBuilder`1">
          <source>The type of the part.</source>
          <target state="translated">Tipo della parte.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Composition.Convention.PartConventionBuilder`1">
          <source>Configures a type as a Managed Extensibility Framework (MEF) part, with strongly typed return values.</source>
          <target state="translated">Configura un tipo come parte Managed Extensibility Framework (MEF) con i valori restituiti fortemente tipizzati.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
          <source>A function that selects the property to export.</source>
          <target state="translated">Funzione che seleziona la proprietà da esportare.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
          <source>Exports a specified property.</source>
          <target state="translated">Esporta una proprietà specificata.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
          <source>An object that can be used to further configure the part.</source>
          <target state="translated">Oggetto che può essere usato per configurare ulteriormente la parte.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ExportConventionBuilder})">
          <source>A function that selects the property to export.</source>
          <target state="translated">Funzione che seleziona la proprietà da esportare.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ExportConventionBuilder})">
          <source>An action that configures the exported property.</source>
          <target state="translated">Azione che configura la proprietà esportata.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ExportConventionBuilder})">
          <source>Exports a specified property with the specified configuration.</source>
          <target state="translated">Esporta una proprietà specificata con la configurazione specificata.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ExportConventionBuilder})">
          <source>An object that can be used to further configure the part.</source>
          <target state="translated">Oggetto che può essere usato per configurare ulteriormente la parte.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ExportConventionBuilder})">
          <source>The <ph id="ph1">&lt;paramref name="propertySelector" /&gt;</ph> expression must be a <ph id="ph2">&lt;see cref="T:System.Linq.Expressions.MemberExpression" /&gt;</ph> for accessing a property.</source>
          <target state="translated">L'espressione <ph id="ph1">&lt;paramref name="propertySelector" /&gt;</ph> deve essere <ph id="ph2">&lt;see cref="T:System.Linq.Expressions.MemberExpression" /&gt;</ph> per l'accesso a una proprietà.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
          <source>The contract type.</source>
          <target state="translated">Tipo di contratto.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
          <source>A function that selects the property to export.</source>
          <target state="translated">Funzione che seleziona la proprietà da esportare.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
          <source>Exports a specified property as a specified contract type.</source>
          <target state="translated">Esporta una proprietà specificata come tipo di contratto specificato.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
          <source>An object that can be used to further configure the part.</source>
          <target state="translated">Oggetto che può essere usato per configurare ulteriormente la parte.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
          <source>The <ph id="ph1">&lt;paramref name="propertySelector" /&gt;</ph> expression must be a <ph id="ph2">&lt;see cref="T:System.Linq.Expressions.MemberExpression" /&gt;</ph> for accessing a property.</source>
          <target state="translated">L'espressione <ph id="ph1">&lt;paramref name="propertySelector" /&gt;</ph> deve essere <ph id="ph2">&lt;see cref="T:System.Linq.Expressions.MemberExpression" /&gt;</ph> per l'accesso a una proprietà.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ExportConventionBuilder})">
          <source>The contract type.</source>
          <target state="translated">Tipo di contratto.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ExportConventionBuilder})">
          <source>A function that selects the property to export.</source>
          <target state="translated">Funzione che seleziona la proprietà da esportare.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ExportConventionBuilder})">
          <source>An action that configures the exported property.</source>
          <target state="translated">Azione che configura la proprietà esportata.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ExportConventionBuilder})">
          <source>Exports a specified property as a specified contract type by using the specified configuration.</source>
          <target state="translated">Esporta una proprietà specificata come tipo di contratto specificato usando la configurazione specificata.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ExportConventionBuilder})">
          <source>An object that can be used to further configure the part.</source>
          <target state="translated">Oggetto che può essere usato per configurare ulteriormente la parte.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
          <source>A function that selects the property to import.</source>
          <target state="translated">Funzione che seleziona la proprietà da importare.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
          <source>Imports a specified property.</source>
          <target state="translated">Importa una proprietà specificata.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
          <source>An object that can be used to further configure the part.</source>
          <target state="translated">Oggetto che può essere usato per configurare ulteriormente la parte.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ImportConventionBuilder})">
          <source>A function that selects the property to import.</source>
          <target state="translated">Funzione che seleziona la proprietà da importare.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ImportConventionBuilder})">
          <source>An action that configures the imported property.</source>
          <target state="translated">Azione che configura la proprietà importata.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ImportConventionBuilder})">
          <source>Imports a specified property by using the specified configuration.</source>
          <target state="translated">Importa una proprietà specificata usando la configurazione specificata.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ImportConventionBuilder})">
          <source>An object that can be used to further configure the part.</source>
          <target state="translated">Oggetto che può essere usato per configurare ulteriormente la parte.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ImportConventionBuilder})">
          <source>The <ph id="ph1">&lt;paramref name="propertySelector" /&gt;</ph> expression must be a <ph id="ph2">&lt;see cref="T:System.Linq.Expressions.MemberExpression" /&gt;</ph> for accessing a property.</source>
          <target state="translated">L'espressione <ph id="ph1">&lt;paramref name="propertySelector" /&gt;</ph> deve essere <ph id="ph2">&lt;see cref="T:System.Linq.Expressions.MemberExpression" /&gt;</ph> per l'accesso a una proprietà.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
          <source>The contract type.</source>
          <target state="translated">Tipo di contratto.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
          <source>A function that selects the property to import.</source>
          <target state="translated">Funzione che seleziona la proprietà da importare.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
          <source>Imports a specified property with the specified contract type.</source>
          <target state="translated">Importa una proprietà specificata con il tipo di contratto specificato.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
          <source>An object that can be used to further configure the part.</source>
          <target state="translated">Oggetto che può essere usato per configurare ulteriormente la parte.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ImportConventionBuilder})">
          <source>The contract type.</source>
          <target state="translated">Tipo di contratto.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ImportConventionBuilder})">
          <source>A function that selects the property to import.</source>
          <target state="translated">Funzione che seleziona la proprietà da importare.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ImportConventionBuilder})">
          <source>An action that configures the imported property.</source>
          <target state="translated">Azione che configura la proprietà importata.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ImportConventionBuilder})">
          <source>Imports a specified property with the specified contract type and configuration.</source>
          <target state="translated">Importa una proprietà specificata con tipo di contratto e configurazione specificati.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ImportConventionBuilder})">
          <source>An object that can be used to further configure the part.</source>
          <target state="translated">Oggetto che può essere usato per configurare ulteriormente la parte.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.Composition.Convention.ImportConventionBuilder})">
          <source>The <ph id="ph1">&lt;paramref name="propertySelector" /&gt;</ph> expression must be a <ph id="ph2">&lt;see cref="T:System.Linq.Expressions.MemberExpression" /&gt;</ph> for accessing a property.</source>
          <target state="translated">L'espressione <ph id="ph1">&lt;paramref name="propertySelector" /&gt;</ph> deve essere <ph id="ph2">&lt;see cref="T:System.Linq.Expressions.MemberExpression" /&gt;</ph> per l'accesso a una proprietà.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.NotifyImportsSatisfied(System.Linq.Expressions.Expression{System.Action{`0}})">
          <source>An action that selects the method to call.</source>
          <target state="translated">Azione che consente di selezionare il metodo da chiamare.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.NotifyImportsSatisfied(System.Linq.Expressions.Expression{System.Action{`0}})">
          <source>Selects a method to be called when composition is complete.</source>
          <target state="translated">Selezionare un metodo da chiamare quando la composizione è completata.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.NotifyImportsSatisfied(System.Linq.Expressions.Expression{System.Action{`0}})">
          <source>An object that can be used to further configure the part.</source>
          <target state="translated">Oggetto che può essere usato per configurare ulteriormente la parte.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.NotifyImportsSatisfied(System.Linq.Expressions.Expression{System.Action{`0}})">
          <source>The <ph id="ph1">&lt;paramref name="methodSelector" /&gt;</ph> expression must be a <ph id="ph2">&lt;see langword="void" /&gt;</ph> method with no arguments.</source>
          <target state="translated">L'espressione <ph id="ph1">&lt;paramref name="methodSelector" /&gt;</ph> deve essere un metodo <ph id="ph2">&lt;see langword="void" /&gt;</ph> senza argomenti.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.Composition.Convention.ParameterImportConventionBuilder,`0}})">
          <source>A function that selects a constructor.</source>
          <target state="translated">Funzione che seleziona un costruttore.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.Composition.Convention.ParameterImportConventionBuilder,`0}})">
          <source>Selects a constructor to be used in composition.</source>
          <target state="translated">Seleziona un costruttore da usare nella composizione.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.Composition.Convention.ParameterImportConventionBuilder,`0}})">
          <source>An object that can be used to further configure the part.</source>
          <target state="translated">Oggetto che può essere usato per configurare ulteriormente la parte.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.Composition.Convention.ParameterImportConventionBuilder,`0}})">
          <source>The <ph id="ph1">&lt;paramref name="constructorSelector" /&gt;</ph> expression must use the <ph id="ph2">&lt;see langword="new" /&gt;</ph> operator.</source>
          <target state="translated">L'espressione <ph id="ph1">&lt;paramref name="constructorSelector" /&gt;</ph> deve usare l'operatore <ph id="ph2">&lt;see langword="new" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>