<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConventionBuilder.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5df8deff811f385017c8d69e020f9e420301d721a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df8deff811f385017c8d69e020f9e420301d721a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.1,netcore-2.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Composition.Convention.ConventionBuilder">
          <source>Provides methods for creating and configuring rules to define CLR objects as Managed Extensibility Framework (MEF) parts.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Composition.Convention.ConventionBuilder" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.ForType(System.Type)">
          <source>The type.</source>
          
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.ForType(System.Type)">
          <source>Creates a rule that applies to the specified type.</source>
          
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.ForType(System.Type)">
          <source>An object that can be used to further configure the rule.</source>
          
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Convention.ConventionBuilder.ForType``1">
          <source>The generic type.</source>
          <target state="translated">Tipo generico.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.ForType``1">
          <source>Creates a rule that applies to the specified generic type.</source>
          
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.ForType``1">
          <source>An object that can be used to further configure the rule.</source>
          
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.ForTypesDerivedFrom(System.Type)">
          <source>The type.</source>
          
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.ForTypesDerivedFrom(System.Type)">
          <source>Creates a rule that applies to all types that implement, or are derived from, the specified type.</source>
          
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.ForTypesDerivedFrom(System.Type)">
          <source>An object that can be used to further configure the rule.</source>
          
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Convention.ConventionBuilder.ForTypesDerivedFrom``1">
          <source>The generic type.</source>
          <target state="translated">Tipo generico.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.ForTypesDerivedFrom``1">
          <source>Creates a rule that applies to all types that implement, or are derived from, the specified generic type.</source>
          
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.ForTypesDerivedFrom``1">
          <source>An object that can be used to further configure the rule.</source>
          
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.ForTypesMatching(System.Predicate{System.Type})">
          <source>The predicate to match.</source>
          
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.ForTypesMatching(System.Predicate{System.Type})">
          <source>Creates a rule that applies to types that match the specified predicate.</source>
          
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.ForTypesMatching(System.Predicate{System.Type})">
          <source>An object that can be used to further configure the rule.</source>
          
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Convention.ConventionBuilder.ForTypesMatching``1(System.Predicate{System.Type})">
          <source>The type to match.</source>
          <target state="translated">Il tipo in modo che corrispondano.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.ForTypesMatching``1(System.Predicate{System.Type})">
          <source>The predicate to match.</source>
          
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.ForTypesMatching``1(System.Predicate{System.Type})">
          <source>Creates a rule that applies to types that match the specified predicate and generic type.</source>
          
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.ForTypesMatching``1(System.Predicate{System.Type})">
          <source>An object that can be used to further configure the rule.</source>
          
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.GetCustomAttributes(System.Type,System.Reflection.MemberInfo)">
          <source>The type.</source>
          
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.GetCustomAttributes(System.Type,System.Reflection.MemberInfo)">
          <source>The member to inspect.</source>
          
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.GetCustomAttributes(System.Type,System.Reflection.MemberInfo)">
          <source>Retrieves the list of custom attributes applied to the specified member of the specified type.</source>
          
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.GetCustomAttributes(System.Type,System.Reflection.MemberInfo)">
          <source>A collection of custom attributes.</source>
          
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.GetCustomAttributes(System.Type,System.Reflection.ParameterInfo)">
          <source>The type.</source>
          
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.GetCustomAttributes(System.Type,System.Reflection.ParameterInfo)">
          <source>The parameter to inspect.</source>
          
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.GetCustomAttributes(System.Type,System.Reflection.ParameterInfo)">
          <source>Retrieves the list of custom attributes applied to the specified parameter of the specified type.</source>
          
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.ConventionBuilder.GetCustomAttributes(System.Type,System.Reflection.ParameterInfo)">
          <source>A collection of custom attributes.</source>
          
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>