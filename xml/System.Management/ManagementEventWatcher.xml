<Type Name="ManagementEventWatcher" FullName="System.Management.ManagementEventWatcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="deaa5054d5a6e4440bdc47d463d522542aad06a1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30461175" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ManagementEventWatcher : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementEventWatcher extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Management.ManagementEventWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementEventWatcher&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementEventWatcher : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6ca03-101">Sottoscrive le notifiche di evento temporanee in base a una *query di eventi* specificata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6ca03-101">Subscribes to temporary event notifications based on a specified *event query*.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6ca03-102">Nell'esempio seguente viene illustrato il client riceve una notifica quando un'istanza di **Win32_Process** viene creato perché è la classe di evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6ca03-102">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6ca03-103">Per altre informazioni, vedere la documentazione di Strumentazione gestione Windows in MSDN all'indirizzo http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6ca03-103">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6ca03-104">Il client riceve gli eventi in modo sincrono chiamando il metodo <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ca03-104">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6ca03-105">Questo esempio può essere testato avviando un processo, ad esempio Blocco note, mentre il codice di esempio è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="6ca03-105">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6ca03-106">Inizializza una nuova istanza della classe <see cref="T:System.Management.ManagementEventWatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-106">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6ca03-107">Inizializza una nuova istanza della classe <see cref="T:System.Management.ManagementEventWatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-107">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span>
          </span>
          <span data-ttu-id="6ca03-108">Per un'inizializzazione ulteriore, impostare le proprietà sull'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-108">For further initialization, set the properties on the object.</span>
          </span>
          <span data-ttu-id="6ca03-109">È il costruttore predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-109">This is the default constructor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="6ca03-110">Sicurezza di .NET Framework</span><span class="sxs-lookup"><span data-stu-id="6ca03-110">.NET Framework Security</span></span>  
 <span data-ttu-id="6ca03-111">Attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="6ca03-111">Full trust for the immediate caller.</span></span> <span data-ttu-id="6ca03-112">Impossibile usare questo membro in codice parzialmente attendibile.</span><span class="sxs-lookup"><span data-stu-id="6ca03-112">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6ca03-113">Per ulteriori informazioni, vedere [utilizzo di librerie da codice parzialmente attendibile](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6ca03-113">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ca03-114">Nell'esempio seguente viene illustrato il client riceve una notifica quando un'istanza di **Win32_Process** viene creato perché è la classe di evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6ca03-114">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6ca03-115">Per altre informazioni, vedere la documentazione di Strumentazione gestione Windows in MSDN all'indirizzo http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6ca03-115">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6ca03-116">Il client riceve gli eventi in modo sincrono chiamando il metodo <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ca03-116">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6ca03-117">Questo esempio può essere testato avviando un processo, ad esempio Blocco note, mentre il codice di esempio è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="6ca03-117">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::EventQuery ^ query);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="6ca03-118">Oggetto <see cref="T:System.Management.EventQuery" /> che rappresenta una query di eventi WMI, che determina gli eventi che saranno attesi dalla funzione di controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-118">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ca03-119">Inizializza una nuova istanza della classe <see cref="T:System.Management.ManagementEventWatcher" /> quando viene specificata una *query di eventi* WMI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-119">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query*.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ca03-120">Lo spazio dei nomi in cui il controllo sono in attesa per gli eventi è lo spazio dei nomi predefinito che è attualmente impostato.</span><span class="sxs-lookup"><span data-stu-id="6ca03-120">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="6ca03-121">Sicurezza di .NET Framework</span><span class="sxs-lookup"><span data-stu-id="6ca03-121">.NET Framework Security</span></span>  
 <span data-ttu-id="6ca03-122">Attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="6ca03-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="6ca03-123">Impossibile usare questo membro in codice parzialmente attendibile.</span><span class="sxs-lookup"><span data-stu-id="6ca03-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6ca03-124">Per ulteriori informazioni, vedere [utilizzo di librerie da codice parzialmente attendibile](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6ca03-124">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ca03-125">In questo esempio di codice, il client riceve una notifica quando un'istanza di **Win32_Process** viene creato perché è la classe di evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6ca03-125">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6ca03-126">Per altre informazioni, vedere la documentazione di Strumentazione gestione Windows in MSDN all'indirizzo http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6ca03-126">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6ca03-127">Il client riceve gli eventi in modo sincrono chiamando il metodo <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ca03-127">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6ca03-128">Questo esempio può essere testato avviando un processo, ad esempio Blocco note, mentre il codice di esempio è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="6ca03-128">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/cs/ManagementEventWatcher-E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/vb/ManagementEventWatcher-E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ query);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="6ca03-129">Query di eventi WMI che definisce gli eventi che saranno attesi dalla funzione di controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-129">A WMI event query, which defines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ca03-130">Inizializza una nuova istanza della classe <see cref="T:System.Management.ManagementEventWatcher" /> quando viene specificata una *query di eventi* WMI in formato stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-130">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query* in the form of a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ca03-131">Lo spazio dei nomi in cui il controllo sono in attesa per gli eventi è lo spazio dei nomi predefinito che è attualmente impostato.</span><span class="sxs-lookup"><span data-stu-id="6ca03-131">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="6ca03-132">Sicurezza di .NET Framework</span><span class="sxs-lookup"><span data-stu-id="6ca03-132">.NET Framework Security</span></span>  
 <span data-ttu-id="6ca03-133">Attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="6ca03-133">Full trust for the immediate caller.</span></span> <span data-ttu-id="6ca03-134">Impossibile usare questo membro in codice parzialmente attendibile.</span><span class="sxs-lookup"><span data-stu-id="6ca03-134">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6ca03-135">Per ulteriori informazioni, vedere [utilizzo di librerie da codice parzialmente attendibile](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6ca03-135">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ca03-136">Nell'esempio seguente viene illustrato il client riceve una notifica quando un'istanza di **Win32_Process** viene creato perché è la classe di evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6ca03-136">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6ca03-137">Per altre informazioni, vedere la documentazione di Strumentazione gestione Windows in MSDN all'indirizzo http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6ca03-137">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6ca03-138">Il client riceve gli eventi in modo sincrono chiamando il metodo <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ca03-138">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6ca03-139">Questo esempio può essere testato avviando un processo, ad esempio Blocco note, mentre il codice di esempio è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="6ca03-139">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/cs/ManagementEventWatcher-S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/vb/ManagementEventWatcher-S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="6ca03-140">Oggetto <see cref="T:System.Management.ManagementScope" /> che rappresenta l'ambito (spazio dei nomi) nel quale la funzione di controllo attenderà gli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-140">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="6ca03-141">Oggetto <see cref="T:System.Management.EventQuery" /> che rappresenta una query di eventi WMI, che determina gli eventi che saranno attesi dalla funzione di controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-141">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ca03-142">Inizializza una nuova istanza della classe <see cref="T:System.Management.ManagementEventWatcher" /> che attende gli eventi in conformità alla *query di eventi* WMI data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-142">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="6ca03-143">Sicurezza di .NET Framework</span><span class="sxs-lookup"><span data-stu-id="6ca03-143">.NET Framework Security</span></span>  
 <span data-ttu-id="6ca03-144">Attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="6ca03-144">Full trust for the immediate caller.</span></span> <span data-ttu-id="6ca03-145">Impossibile usare questo membro in codice parzialmente attendibile.</span><span class="sxs-lookup"><span data-stu-id="6ca03-145">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6ca03-146">Per ulteriori informazioni, vedere [utilizzo di librerie da codice parzialmente attendibile](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6ca03-146">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ca03-147">In questo esempio di codice, il client riceve una notifica quando un'istanza di **Win32_Process** viene creato perché è la classe di evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6ca03-147">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6ca03-148">Per altre informazioni, vedere la documentazione di Strumentazione gestione Windows in MSDN all'indirizzo http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6ca03-148">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6ca03-149">Il client riceve gli eventi in modo sincrono chiamando il metodo <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ca03-149">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6ca03-150">Questo esempio può essere testato avviando un processo, ad esempio Blocco note, mentre il codice di esempio è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="6ca03-150">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/cs/ManagementEventWatcher-M_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/vb/ManagementEventWatcher-M_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="6ca03-151">Ambito di gestione, ossia spazio dei nomi, nel quale la funzione di controllo attenderà gli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-151">The management scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="6ca03-152">Query che definisce gli eventi che saranno attesi dalla funzione di controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-152">The query that defines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ca03-153">Inizializza una nuova istanza della classe <see cref="T:System.Management.ManagementEventWatcher" /> che attende gli eventi in conformità alla *query di eventi* WMI data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-153">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span>
          </span>
          <span data-ttu-id="6ca03-154">Per questa variante, la query e l'ambito sono specificati in forma di stringhe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-154">For this variant, the query and the scope are specified as strings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="6ca03-155">Sicurezza di .NET Framework</span><span class="sxs-lookup"><span data-stu-id="6ca03-155">.NET Framework Security</span></span>  
 <span data-ttu-id="6ca03-156">Attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="6ca03-156">Full trust for the immediate caller.</span></span> <span data-ttu-id="6ca03-157">Impossibile usare questo membro in codice parzialmente attendibile.</span><span class="sxs-lookup"><span data-stu-id="6ca03-157">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6ca03-158">Per ulteriori informazioni, vedere [utilizzo di librerie da codice parzialmente attendibile](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6ca03-158">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ca03-159">Nell'esempio seguente viene illustrato il client riceve una notifica quando un'istanza di **Win32_Process** viene creato perché è la classe di evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6ca03-159">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6ca03-160">Per altre informazioni, vedere la documentazione di Strumentazione gestione Windows in MSDN all'indirizzo http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6ca03-160">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6ca03-161">Il client riceve gli eventi in modo sincrono chiamando il metodo <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ca03-161">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6ca03-162">Questo esempio può essere testato avviando un processo, ad esempio Blocco note, mentre il codice di esempio è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="6ca03-162">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/cs/ManagementEventWatcher-S_S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/vb/ManagementEventWatcher-S_S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="6ca03-163">Oggetto <see cref="T:System.Management.ManagementScope" /> che rappresenta l'ambito (spazio dei nomi) nel quale la funzione di controllo attenderà gli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-163">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="6ca03-164">Oggetto <see cref="T:System.Management.EventQuery" /> che rappresenta una query di eventi WMI, che determina gli eventi che saranno attesi dalla funzione di controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-164">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="6ca03-165">Oggetto <see cref="T:System.Management.EventWatcherOptions" /> che rappresenta le opzioni aggiuntive utilizzate per il controllo degli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-165">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ca03-166">Inizializza una nuova istanza della classe <see cref="T:System.Management.ManagementEventWatcher" /> che attende gli eventi in conformità alla query di eventi WMI fornita, in base alle opzioni specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-166">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI event query, according to the specified options.</span>
          </span>
          <span data-ttu-id="6ca03-167">Per questa variante, la query e l'ambito sono oggetti specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-167">For this variant, the query and the scope are specified objects.</span>
          </span>
          <span data-ttu-id="6ca03-168">L'oggetto di opzioni può specificare opzioni quali il timeout e le informazioni sul contesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-168">The options object can specify options such as time-out and context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="6ca03-169">Sicurezza di .NET Framework</span><span class="sxs-lookup"><span data-stu-id="6ca03-169">.NET Framework Security</span></span>  
 <span data-ttu-id="6ca03-170">Attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="6ca03-170">Full trust for the immediate caller.</span></span> <span data-ttu-id="6ca03-171">Impossibile usare questo membro in codice parzialmente attendibile.</span><span class="sxs-lookup"><span data-stu-id="6ca03-171">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6ca03-172">Per ulteriori informazioni, vedere [utilizzo di librerie da codice parzialmente attendibile](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6ca03-172">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ca03-173">Nell'esempio seguente viene illustrato il client riceve una notifica quando un'istanza di **Win32_Process** viene creato perché è la classe di evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6ca03-173">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6ca03-174">Per altre informazioni, vedere la documentazione di Strumentazione gestione Windows in MSDN all'indirizzo http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6ca03-174">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6ca03-175">Il client riceve gli eventi in modo sincrono chiamando il metodo <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ca03-175">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6ca03-176">Questo esempio può essere testato avviando un processo, ad esempio Blocco note, mentre il codice di esempio è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="6ca03-176">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/cs/ManagementEventWatcher-M_E_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/vb/ManagementEventWatcher-M_E_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="6ca03-177">Ambito di gestione, ossia spazio dei nomi, nel quale la funzione di controllo attenderà gli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-177">The management scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="6ca03-178">Query che definisce gli eventi che saranno attesi dalla funzione di controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-178">The query that defines the events for which the watcher will listen.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="6ca03-179">Oggetto <see cref="T:System.Management.EventWatcherOptions" /> che rappresenta le opzioni aggiuntive utilizzate per il controllo degli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-179">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ca03-180">Inizializza una nuova istanza della classe <see cref="T:System.Management.ManagementEventWatcher" /> che attende gli eventi in conformità alla *query di eventi* WMI, in base alle opzioni specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-180">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*, according to the specified options.</span>
          </span>
          <span data-ttu-id="6ca03-181">Per questa variante, la query e l'ambito sono specificati in forma di stringhe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-181">For this variant, the query and the scope are specified as strings.</span>
          </span>
          <span data-ttu-id="6ca03-182">L'oggetto di opzioni può specificare opzioni quali il timeout e le informazioni sul contesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-182">The options object can specify options such as a time-out and context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="6ca03-183">Sicurezza di .NET Framework</span><span class="sxs-lookup"><span data-stu-id="6ca03-183">.NET Framework Security</span></span>  
 <span data-ttu-id="6ca03-184">Attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="6ca03-184">Full trust for the immediate caller.</span></span> <span data-ttu-id="6ca03-185">Impossibile usare questo membro in codice parzialmente attendibile.</span><span class="sxs-lookup"><span data-stu-id="6ca03-185">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6ca03-186">Per ulteriori informazioni, vedere [utilizzo di librerie da codice parzialmente attendibile](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6ca03-186">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ca03-187">Nell'esempio seguente viene illustrato il client riceve una notifica quando un'istanza di **Win32_Process** viene creato perché è la classe di evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6ca03-187">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6ca03-188">Per altre informazioni, vedere la documentazione di Strumentazione gestione Windows in MSDN all'indirizzo http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6ca03-188">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6ca03-189">Il client riceve gli eventi in modo sincrono chiamando il metodo <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ca03-189">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6ca03-190">Questo esempio può essere testato avviando un processo, ad esempio Blocco note, mentre il codice di esempio è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="6ca03-190">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/cs/ManagementEventWatcher-S_S_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/vb/ManagementEventWatcher-S_S_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventArrived">
      <MemberSignature Language="C#" Value="public event System.Management.EventArrivedEventHandler EventArrived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.EventArrivedEventHandler EventArrived" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.EventArrived" />
      <MemberSignature Language="VB.NET" Value="Public Event EventArrived As EventArrivedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::EventArrivedEventHandler ^ EventArrived;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventArrivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ca03-191">Viene generato quando si presenta un nuovo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-191">Occurs when a new event arrives.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="6ca03-192">Dati eventi</span><span class="sxs-lookup"><span data-stu-id="6ca03-192">Event Data</span></span>  
 <span data-ttu-id="6ca03-193">Il gestore eventi riceve un argomento di tipo <xref:System.Management.EventArrivedEventArgs> contenente i dati relativi a questo evento.</span><span class="sxs-lookup"><span data-stu-id="6ca03-193">The event handler receives an argument of type <xref:System.Management.EventArrivedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="6ca03-194">Le operazioni seguenti <xref:System.Management.EventArrivedEventArgs> proprietà forniscono informazioni specifiche per questo evento.</span><span class="sxs-lookup"><span data-stu-id="6ca03-194">The following <xref:System.Management.EventArrivedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="6ca03-195">Proprietà</span><span class="sxs-lookup"><span data-stu-id="6ca03-195">Property</span></span>|<span data-ttu-id="6ca03-196">Descrizione</span><span class="sxs-lookup"><span data-stu-id="6ca03-196">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="6ca03-197"><xref:System.Management.ManagementEventArgs.Context%2A> (ereditato da <xref:System.Management.ManagementEventArgs>)</span><span class="sxs-lookup"><span data-stu-id="6ca03-197"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="6ca03-198">Ottiene il contesto dell'operazione restituito dall'operazione che ha generato l'evento.</span><span class="sxs-lookup"><span data-stu-id="6ca03-198">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.EventArrivedEventArgs.NewEvent%2A>|<span data-ttu-id="6ca03-199">Ottiene l'evento WMI fornito.</span><span class="sxs-lookup"><span data-stu-id="6ca03-199">Gets the WMI event that was delivered.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="6ca03-200">Sicurezza di .NET Framework</span><span class="sxs-lookup"><span data-stu-id="6ca03-200">.NET Framework Security</span></span>  
 <span data-ttu-id="6ca03-201">Attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="6ca03-201">Full trust for the immediate caller.</span></span> <span data-ttu-id="6ca03-202">Impossibile usare questo membro in codice parzialmente attendibile.</span><span class="sxs-lookup"><span data-stu-id="6ca03-202">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6ca03-203">Per ulteriori informazioni, vedere [utilizzo di librerie da codice parzialmente attendibile](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6ca03-203">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ManagementEventWatcher ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6ca03-204">Garantisce che le chiamate in sospeso vengano eliminate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-204">Ensures that outstanding calls are cleared.</span>
          </span>
          <span data-ttu-id="6ca03-205">Si tratta del distruttore dell'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-205">This is the destructor for the object.</span>
          </span>
          <span data-ttu-id="6ca03-206">In C#, i finalizzatori sono espressi utilizzando la sintassi dei distruttori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-206">In C#, finalizers are expressed using destructor syntax.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="6ca03-207">Sicurezza di .NET Framework</span><span class="sxs-lookup"><span data-stu-id="6ca03-207">.NET Framework Security</span></span>  
 <span data-ttu-id="6ca03-208">Attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="6ca03-208">Full trust for the immediate caller.</span></span> <span data-ttu-id="6ca03-209">Impossibile usare questo membro in codice parzialmente attendibile.</span><span class="sxs-lookup"><span data-stu-id="6ca03-209">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6ca03-210">Per ulteriori informazioni, vedere [utilizzo di librerie da codice parzialmente attendibile](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6ca03-210">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Management.EventWatcherOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventWatcherOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As EventWatcherOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventWatcherOptions ^ Options { System::Management::EventWatcherOptions ^ get(); void set(System::Management::EventWatcherOptions ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventWatcherOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ca03-211">Ottiene o imposta le opzioni utilizzate per il controllo degli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-211">Gets or sets the options used to watch for events.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6ca03-212">Restituisce un oggetto <see cref="T:System.Management.EventWatcherOptions" /> contenente le opzioni degli eventi utilizzate per il controllo degli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-212">Returns an <see cref="T:System.Management.EventWatcherOptions" /> that contains the event options used to watch for events.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="6ca03-213">Valore proprietà</span><span class="sxs-lookup"><span data-stu-id="6ca03-213">Property Value</span></span>  
 <span data-ttu-id="6ca03-214">Le opzioni utilizzate per il controllo degli eventi.</span><span class="sxs-lookup"><span data-stu-id="6ca03-214">The options used to watch for events.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="6ca03-215">Sicurezza di .NET Framework</span><span class="sxs-lookup"><span data-stu-id="6ca03-215">.NET Framework Security</span></span>  
 <span data-ttu-id="6ca03-216">Attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="6ca03-216">Full trust for the immediate caller.</span></span> <span data-ttu-id="6ca03-217">Impossibile usare questo membro in codice parzialmente attendibile.</span><span class="sxs-lookup"><span data-stu-id="6ca03-217">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6ca03-218">Per ulteriori informazioni, vedere [utilizzo di librerie da codice parzialmente attendibile](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6ca03-218">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ca03-219">Nell'esempio seguente viene illustrato il client riceve una notifica quando un'istanza di **Win32_Process** viene creato perché è la classe di evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6ca03-219">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6ca03-220">Per altre informazioni, vedere la documentazione di Strumentazione gestione Windows in MSDN all'indirizzo http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6ca03-220">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6ca03-221">Il client riceve gli eventi in modo sincrono chiamando il metodo <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ca03-221">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6ca03-222">Questo esempio può essere testato avviando un processo, ad esempio Blocco note, mentre il codice di esempio è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="6ca03-222">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/cs/ManagementEventWatcher_Options.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/vb/ManagementEventWatcher_Options.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public System.Management.EventQuery Query { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventQuery Query" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Query" />
      <MemberSignature Language="VB.NET" Value="Public Property Query As EventQuery" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventQuery ^ Query { System::Management::EventQuery ^ get(); void set(System::Management::EventQuery ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventQuery</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ca03-223">Ottiene o imposta il criterio da applicare agli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-223">Gets or sets the criteria to apply to events.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6ca03-224">Restituisce un oggetto <see cref="T:System.Management.EventQuery" /> contenente la query da applicare agli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-224">Returns an <see cref="T:System.Management.EventQuery" /> that contains the query to apply to events.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="6ca03-225">Valore proprietà</span><span class="sxs-lookup"><span data-stu-id="6ca03-225">Property Value</span></span>  
 <span data-ttu-id="6ca03-226">I criteri da applicare agli eventi, che è uguale al *query evento*.</span><span class="sxs-lookup"><span data-stu-id="6ca03-226">The criteria to apply to the events, which is equal to the *event query*.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="6ca03-227">Sicurezza di .NET Framework</span><span class="sxs-lookup"><span data-stu-id="6ca03-227">.NET Framework Security</span></span>  
 <span data-ttu-id="6ca03-228">Attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="6ca03-228">Full trust for the immediate caller.</span></span> <span data-ttu-id="6ca03-229">Impossibile usare questo membro in codice parzialmente attendibile.</span><span class="sxs-lookup"><span data-stu-id="6ca03-229">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6ca03-230">Per ulteriori informazioni, vedere [utilizzo di librerie da codice parzialmente attendibile](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6ca03-230">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ca03-231">Nell'esempio seguente viene illustrato il client riceve una notifica quando un'istanza di **Win32_Process** viene creato perché è la classe di evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6ca03-231">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6ca03-232">Per altre informazioni, vedere la documentazione di Strumentazione gestione Windows in MSDN all'indirizzo http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6ca03-232">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6ca03-233">Il client riceve gli eventi in modo sincrono chiamando il metodo <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ca03-233">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6ca03-234">Questo esempio può essere testato avviando un processo, ad esempio Blocco note, mentre il codice di esempio è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="6ca03-234">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/cs/ManagementEventWatcher_Query.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/vb/ManagementEventWatcher_Query.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.Management.ManagementScope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.ManagementScope Scope" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As ManagementScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::ManagementScope ^ Scope { System::Management::ManagementScope ^ get(); void set(System::Management::ManagementScope ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ca03-235">Ottiene o imposta l'ambito nel quale eseguire il controllo degli eventi, ossia lo spazio dei nomi o l'ambito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-235">Gets or sets the scope in which to watch for events (namespace or scope).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6ca03-236">Restituisce un oggetto <see cref="T:System.Management.ManagementScope" /> contenente l'ambito in cui eseguire il controllo degli eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-236">Returns a <see cref="T:System.Management.ManagementScope" /> that contains the scope the in which to watch for events.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="6ca03-237">Valore proprietà</span><span class="sxs-lookup"><span data-stu-id="6ca03-237">Property Value</span></span>  
 <span data-ttu-id="6ca03-238">L'ambito in cui il controllo degli eventi (spazio dei nomi o ambito).</span><span class="sxs-lookup"><span data-stu-id="6ca03-238">The scope in which to watch for events (namespace or scope).</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="6ca03-239">Sicurezza di .NET Framework</span><span class="sxs-lookup"><span data-stu-id="6ca03-239">.NET Framework Security</span></span>  
 <span data-ttu-id="6ca03-240">Attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="6ca03-240">Full trust for the immediate caller.</span></span> <span data-ttu-id="6ca03-241">Impossibile usare questo membro in codice parzialmente attendibile.</span><span class="sxs-lookup"><span data-stu-id="6ca03-241">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6ca03-242">Per ulteriori informazioni, vedere [utilizzo di librerie da codice parzialmente attendibile](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6ca03-242">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ca03-243">Nell'esempio seguente viene illustrato il client riceve una notifica quando un'istanza di **Win32_Process** viene creato perché è la classe di evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6ca03-243">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6ca03-244">Per altre informazioni, vedere la documentazione di Strumentazione gestione Windows in MSDN all'indirizzo http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6ca03-244">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6ca03-245">Il client riceve gli eventi in modo sincrono chiamando il metodo <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ca03-245">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6ca03-246">Questo esempio può essere testato avviando un processo, ad esempio Blocco note, mentre il codice di esempio è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="6ca03-246">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/cs/ManagementEventWatcher_Scope.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/vb/ManagementEventWatcher_Scope.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6ca03-247">Sottoscrive eventi con la query fornita e li trasmette in modo asincrono tramite l'evento <see cref="E:System.Management.ManagementEventWatcher.EventArrived" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-247">Subscribes to events with the given query and delivers them, asynchronously, through the <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="6ca03-248">Sicurezza di .NET Framework</span><span class="sxs-lookup"><span data-stu-id="6ca03-248">.NET Framework Security</span></span>  
 <span data-ttu-id="6ca03-249">Attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="6ca03-249">Full trust for the immediate caller.</span></span> <span data-ttu-id="6ca03-250">Impossibile usare questo membro in codice parzialmente attendibile.</span><span class="sxs-lookup"><span data-stu-id="6ca03-250">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6ca03-251">Per ulteriori informazioni, vedere [utilizzo di librerie da codice parzialmente attendibile](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6ca03-251">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6ca03-252">Annulla la sottoscrizione, sincrona o asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-252">Cancels the subscription whether it is synchronous or asynchronous.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="6ca03-253">Sicurezza di .NET Framework</span><span class="sxs-lookup"><span data-stu-id="6ca03-253">.NET Framework Security</span></span>  
 <span data-ttu-id="6ca03-254">Attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="6ca03-254">Full trust for the immediate caller.</span></span> <span data-ttu-id="6ca03-255">Impossibile usare questo membro in codice parzialmente attendibile.</span><span class="sxs-lookup"><span data-stu-id="6ca03-255">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6ca03-256">Per ulteriori informazioni, vedere [utilizzo di librerie da codice parzialmente attendibile](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6ca03-256">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ca03-257">Nell'esempio seguente viene illustrato il client riceve una notifica quando un'istanza di **Win32_Process** viene creato perché è la classe di evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6ca03-257">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6ca03-258">Per altre informazioni, vedere la documentazione di Strumentazione gestione Windows in MSDN all'indirizzo http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6ca03-258">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6ca03-259">Il client riceve gli eventi in modo sincrono chiamando il metodo <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ca03-259">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6ca03-260">Questo esempio può essere testato avviando un processo, ad esempio Blocco note, mentre il codice di esempio è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="6ca03-260">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/cs/ManagementEventWatcher_Stop.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/vb/ManagementEventWatcher_Stop.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="public event System.Management.StoppedEventHandler Stopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.StoppedEventHandler Stopped" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.Stopped" />
      <MemberSignature Language="VB.NET" Value="Public Event Stopped As StoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::StoppedEventHandler ^ Stopped;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.StoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ca03-261">Viene generato quando viene annullata una sottoscrizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-261">Occurs when a subscription is canceled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="6ca03-262">Dati eventi</span><span class="sxs-lookup"><span data-stu-id="6ca03-262">Event Data</span></span>  
 <span data-ttu-id="6ca03-263">Il gestore eventi riceve un argomento di tipo <xref:System.Management.StoppedEventArgs> contenente i dati relativi a questo evento.</span><span class="sxs-lookup"><span data-stu-id="6ca03-263">The event handler receives an argument of type <xref:System.Management.StoppedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="6ca03-264">Le operazioni seguenti <xref:System.Management.StoppedEventArgs> proprietà forniscono informazioni specifiche per questo evento.</span><span class="sxs-lookup"><span data-stu-id="6ca03-264">The following <xref:System.Management.StoppedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="6ca03-265">Proprietà</span><span class="sxs-lookup"><span data-stu-id="6ca03-265">Property</span></span>|<span data-ttu-id="6ca03-266">Descrizione</span><span class="sxs-lookup"><span data-stu-id="6ca03-266">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="6ca03-267"><xref:System.Management.ManagementEventArgs.Context%2A> (ereditato da <xref:System.Management.ManagementEventArgs>)</span><span class="sxs-lookup"><span data-stu-id="6ca03-267"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="6ca03-268">Ottiene il contesto dell'operazione restituito dall'operazione che ha generato l'evento.</span><span class="sxs-lookup"><span data-stu-id="6ca03-268">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.StoppedEventArgs.Status%2A>|<span data-ttu-id="6ca03-269">Ottiene lo stato di completamento dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="6ca03-269">Gets the completion status of the operation.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="6ca03-270">Sicurezza di .NET Framework</span><span class="sxs-lookup"><span data-stu-id="6ca03-270">.NET Framework Security</span></span>  
 <span data-ttu-id="6ca03-271">Attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="6ca03-271">Full trust for the immediate caller.</span></span> <span data-ttu-id="6ca03-272">Impossibile usare questo membro in codice parzialmente attendibile.</span><span class="sxs-lookup"><span data-stu-id="6ca03-272">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6ca03-273">Per ulteriori informazioni, vedere [utilizzo di librerie da codice parzialmente attendibile](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6ca03-273">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForNextEvent">
      <MemberSignature Language="C#" Value="public System.Management.ManagementBaseObject WaitForNextEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementBaseObject WaitForNextEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.WaitForNextEvent" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForNextEvent () As ManagementBaseObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementBaseObject ^ WaitForNextEvent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementBaseObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6ca03-274">Attende l'evento successivo che corrisponde alla query specificata in arrivo, quindi lo restituisce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-274">Waits for the next event that matches the specified query to arrive, and then returns it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6ca03-275">
            <see cref="T:System.Management.ManagementBaseObject" /> che rappresenta il nuovo oggetto in arrivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ca03-275">A <see cref="T:System.Management.ManagementBaseObject" /> representing the newly arrived event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ca03-276">Se l'oggetto evento di controllo contiene le opzioni di timeout specificato, l'API attenderà per l'evento successivo solo per il periodo di tempo; specificato in caso contrario, l'API verrà bloccata finché non si verifica l'evento successivo.</span><span class="sxs-lookup"><span data-stu-id="6ca03-276">If the event watcher object contains options with a specified time-out, the API will wait for the next event only for the specified amount of time; otherwise, the API will be blocked until the next event occurs.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="6ca03-277">Sicurezza di .NET Framework</span><span class="sxs-lookup"><span data-stu-id="6ca03-277">.NET Framework Security</span></span>  
 <span data-ttu-id="6ca03-278">Attendibilità totale per il chiamante immediato.</span><span class="sxs-lookup"><span data-stu-id="6ca03-278">Full trust for the immediate caller.</span></span> <span data-ttu-id="6ca03-279">Impossibile usare questo membro in codice parzialmente attendibile.</span><span class="sxs-lookup"><span data-stu-id="6ca03-279">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6ca03-280">Per ulteriori informazioni, vedere [utilizzo di librerie da codice parzialmente attendibile](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6ca03-280">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ca03-281">Nell'esempio seguente viene illustrato il client riceve una notifica quando un'istanza di **Win32_Process** viene creato perché è la classe di evento **InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6ca03-281">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6ca03-282">Per altre informazioni, vedere la documentazione di Strumentazione gestione Windows in MSDN all'indirizzo http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6ca03-282">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6ca03-283">Il client riceve gli eventi in modo sincrono chiamando il metodo <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ca03-283">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6ca03-284">Questo esempio può essere testato avviando un processo, ad esempio Blocco note, mentre il codice di esempio è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="6ca03-284">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/cs/ManagementEventWatcher_WaitForNextEvent.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/vb/ManagementEventWatcher_WaitForNextEvent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>