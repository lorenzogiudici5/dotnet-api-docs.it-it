<Type Name="PeerContact" FullName="System.Net.PeerToPeer.Collaboration.PeerContact">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b5384cdf3dd1ba7aff8baecbd0d8f272d960bb9" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37477985" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeerContact : System.Net.PeerToPeer.Collaboration.Peer, IEquatable&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerContact extends System.Net.PeerToPeer.Collaboration.Peer implements class System.IEquatable`1&lt;class System.Net.PeerToPeer.Collaboration.PeerContact&gt;, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerContact&#xA;Inherits Peer&#xA;Implements IEquatable(Of PeerContact), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerContact : System::Net::PeerToPeer::Collaboration::Peer, IEquatable&lt;System::Net::PeerToPeer::Collaboration::PeerContact ^&gt;, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerContact = class&#xA;    inherit Peer&#xA;    interface IEquatable&lt;PeerContact&gt;&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.PeerToPeer.Collaboration.Peer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents a peer for which a user has retrieved extended information.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un contatto rappresenta un peer attendibile. Oggetto <xref:System.Net.PeerToPeer.Collaboration.PeerContact> oggetto deve essere creato per un peer remoto o <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> per un utente di collaborare con il peer remoto quando è di fuori dell'ambito "Persone nelle vicinanze". Oggetto <xref:System.Net.PeerToPeer.Collaboration.PeerContact> oggetto può rappresentare sia un'applicazione in esecuzione in un computer remoto o l'utente di un computer remoto. Un'istanza di questa classe può essere aggiunta per il <xref:System.Net.PeerToPeer.Collaboration.ContactManager> che archivia le informazioni di contatto in modo permanente.  
  
 Invito di un'applicazione da un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> viene autenticato e crittografato.  La finestra di dialogo dell'interfaccia utente di accettare o rifiutare un invito da un contatto peer indica inoltre che il mittente dell'invito considerato attendibile.  
  
 Sottoscrivere un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> oggetto indica che un peer remoto possa visualizzare le relative applicazioni registrate, oggetti e informazioni sulla presenza. Per sottoscrivere una <xref:System.Net.PeerToPeer.Collaboration.PeerContact>, il chiamante deve essere connesso all'infrastruttura di collaborazione peer tramite <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> oppure tramite l'interfaccia utente di Windows.  Tutte le altre operazioni non richiedono l'accesso.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerContact (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerContact(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.Collaboration.PeerContact : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.Collaboration.PeerContact" Usage="new System.Net.PeerToPeer.Collaboration.PeerContact (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <param name="streamingContext">The serialization destination associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>No public constructor is defined for this class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'istanza di questo oggetto può essere ottenuta dal <xref:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact%2A> <xref:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact%2A> o <xref:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml%2A> metodi.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.Peer" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ApplicationChanged As EventHandler(Of ApplicationChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^&gt; ^ ApplicationChanged;" />
      <MemberSignature Language="F#" Value="member this.ApplicationChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " Usage="member this.ApplicationChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This event is raised whenever an application associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> has changed.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Credentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Credentials As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ Credentials { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the X509Certificate (public key) for the peer identified by this <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance.</summary>
        <value>Il X509Certificate (chiave pubblica) del peer identificato dall'oggetto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> istanza. Il valore predefinito di questa proprietà è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare questo metodo richiede un <xref:System.Security.Permissions.PermissionState> di <xref:System.Security.Permissions.PermissionState.Unrestricted>. Questo stato viene creato all'avvio della sessione di collaborazione peer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
        <altmember cref="N:System.Security.Permissions" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a string which represents the display name of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>
          <see cref="T:System.String" /> che rappresenta il nome visualizzato di questo <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. Se non diversamente specificato in modo esplicito, il valore predefinito per tutte le proprietà è <see langword="null" /> per i tipi di riferimento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un nome visualizzato può essere utilizzato per distinguere i contatti in un <xref:System.Net.PeerToPeer.Collaboration.ContactManager> nelle istanze in cui un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> possono disporre di più indirizzi di posta elettronica, o se sono presenti più peer con lo stesso nome di visualizzazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="peerContact.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="True" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        <summary>Releases the unmanaged resources and optionally releases the managed resources used by the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> abbandona una sessione di collaborazione, alcuni oggetti sono più necessari.  Se questo contatto collabora con altri endpoint registrati non direttamente con l'host peer e l'host prevede di continuare a collaborare con loro, l'host deve registrare gli endpoint all'interno di un'applicazione o di relativo <xref:System.Net.PeerToPeer.Collaboration.ContactManager> prima eliminazione di questo <xref:System.Net.PeerToPeer.Collaboration.PeerContact> oggetto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmailAddress">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress EmailAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress EmailAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.EmailAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property EmailAddress As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ EmailAddress { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmailAddress : System.Net.Mail.MailAddress with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.EmailAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the email address associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>
          <see cref="T:System.Net.Mail.MailAddress" /> oggetto che contiene l'indirizzo di posta elettronica è associato il <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Net.Mail.MailAddress> oggetto viene usato per rappresentare l'indirizzo di posta elettronica.  Contact Manager consente di più indirizzi di posta elettronica all'interno di un'istanza. Il valore predefinito di questa proprietà è `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determines whether the <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> of this <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object is equivalent to the name of another object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Restituisce `true` se l'oggetto specificato <xref:System.Object> ha lo stesso <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> dell'istanza corrente, in caso contrario `false`. Questo metodo restituisce inoltre `false` se i parametri passati sono `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.Peer" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Net.PeerToPeer.Collaboration.PeerContact other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Net.PeerToPeer.Collaboration.PeerContact other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As PeerContact) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Net::PeerToPeer::Collaboration::PeerContact ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Net.PeerToPeer.Collaboration.PeerContact -&gt; bool" Usage="peerContact.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Parameters>
      <Docs>
        <param name="other">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance to test for equality.</param>
        <summary>Compares the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance.</summary>
        <returns>Returns <see langword="true" /> if the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance provided has matching data, else <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalizzazione non vengono eseguite in stringhe prima del confronto.  Normalizzazione tutti deve essere eseguita durante o prima della costruzione di <xref:System.Net.PeerToPeer.Collaboration.PeerContact> oggetti.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="peerContact.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Compares the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance to the specified object.</param>
        <summary>Compares the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance to the specified object.</summary>
        <returns>Returns <see langword="true" /> if the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance provided has matching data, else <see langword="false" />. This method also returns <see langword="false" /> if the passed parameter is <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Altri oggetti che possono essere confrontati con <xref:System.Net.PeerToPeer.Collaboration.PeerContact> gli oggetti includono i nomi host di peer, i nomi di peer relativo, e nomi estratti da altro <xref:System.Net.PeerToPeer> oggetti.  
  
 Normalizzazione non vengono eseguite in stringhe prima del confronto.  Normalizzazione tutti deve essere eseguita durante o prima della costruzione di <xref:System.Net.PeerToPeer.Collaboration.PeerContact> oggetti.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (object objA, object objB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(object objA, object objB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (objA As Object, objB As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Object ^ objA, System::Object ^ objB);" />
      <MemberSignature Language="F#" Value="static member Equals : obj * obj -&gt; bool" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.Equals (objA, objB)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objA" Type="System.Object" />
        <Parameter Name="objB" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objA">The first <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to compare.</param>
        <param name="objB">The second <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to compare.</param>
        <summary>Determines whether the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instances are considered equal.</summary>
        <returns>Returns <see langword="true" /> if the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instances provided have matching data, else <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Può essere utilizzato per determinare se un <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> è in uso contemporaneamente da due diverse peer remoto.  
  
 Altri oggetti che possono essere confrontati con <xref:System.Net.PeerToPeer.Collaboration.PeerContact> gli oggetti includono i nomi host di peer, i nomi di peer relativo, e nomi estratti da altro <xref:System.Net.PeerToPeer> oggetti.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerContact FromXml (string peerContactXml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerContact FromXml(string peerContactXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromXml (peerContactXml As String) As PeerContact" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerContact ^ FromXml(System::String ^ peerContactXml);" />
      <MemberSignature Language="F#" Value="static member FromXml : string -&gt; System.Net.PeerToPeer.Collaboration.PeerContact" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.FromXml peerContactXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContact</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerContactXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="peerContactXml">The XML encoding used to reconstruct the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Creates a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance based on provided XML data.</summary>
        <returns>A string that represents the XML object model for encoding the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stringa da passare come parametro deve essere ottenuto dal <xref:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml%2A>.  
  
 Questa classe è destinata a un'implementazione pratica di un semplice modello a oggetti XML per l'uso all'interno dell'infrastruttura di collaborazione e non per essere utilizzato come un modello a oggetti XML generale.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parameter cannot be <see langword="null." /></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   Unable to complete <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" /> operation  -   Parameter is not a valid <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" /> object.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetApplications">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> objects that were registered by the remote peer into the local cache.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa funzionalità è esposta solo sul <xref:System.Net.PeerToPeer.Collaboration.PeerContact> classe.  Questa funzionalità non è esposta in qualsiasi altro tipo di peer per motivi di sicurezza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplications () As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications();" />
      <MemberSignature Language="F#" Value="member this.GetApplications : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> objects that were registered by the remote peer into the local cache.</summary>
        <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> from the local cache. If associated applications are not found for the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />, a collection of size zero (0) is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il peer chiamante non ha sottoscritto il <xref:System.Net.PeerToPeer.Collaboration.PeerContact> associata all'oggetto specificato <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> il <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> metodo deve essere chiamato prima di chiamare questo metodo.  
  
 Mentre il chiamante non è necessario effettuare l'accesso all'infrastruttura di collaborazione per questo metodo venga completata correttamente, una chiamata al <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> o uno del <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> metodi è necessario avere completati anche se il chiamante è stato precedentemente eseguito l'accesso.  
  
 Questa funzionalità è esposta solo sul <xref:System.Net.PeerToPeer.Collaboration.PeerContact> classe.  Questa funzionalità non è esposta in qualsiasi altro tipo di peer per motivi di sicurezza.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">-   The calling peer is not subscribed to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  -   The calling peer has not yet called the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> method.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to complete <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> operation.</exception>
        <block subset="none" type="usage">
          <para>Chiamare questo metodo richiede un <see cref="T:System.Security.Permissions.PermissionState" /> di <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Questo stato viene creato all'avvio della sessione di collaborazione peer.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (Guid applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(valuetype System.Guid applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplications (applicationId As Guid) As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications(Guid applicationId);" />
      <MemberSignature Language="F#" Value="member this.GetApplications : Guid -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications applicationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="applicationId">The <see cref="T:System.Guid" /> of the peer application to be retrieved.</param>
        <summary>Gets the collection of <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> objects with the specified <see cref="T:System.Guid" /> from the local cache.</summary>
        <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> from the local cache. If no applications are found with the specified <paramref name="applicationId" />, a collection of size zero (0) is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il peer chiamante non ha sottoscritto il <xref:System.Net.PeerToPeer.Collaboration.PeerContact> associata all'oggetto specificato <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> il <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> metodo deve essere chiamato prima di chiamare questo metodo.  
  
 Mentre il chiamante non è necessario effettuare l'accesso all'infrastruttura di collaborazione per questo metodo venga completata correttamente, una chiamata al <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> o uno del <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> metodi è necessario avere completati anche se il chiamante è stato precedentemente eseguito l'accesso.  
  
 Questa funzionalità è esposta solo sul <xref:System.Net.PeerToPeer.Collaboration.PeerContact> classe.  Questa funzionalità non è esposta in qualsiasi altro tipo di peer per motivi di sicurezza.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">-   The calling peer is not subscribed to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  -   The calling peer has not yet called the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> method.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to complete <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> operation.</exception>
        <block subset="none" type="usage">
          <para>Chiamare questo metodo richiede un <see cref="T:System.Security.Permissions.PermissionState" /> di <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Questo stato viene creato all'avvio della sessione di collaborazione peer.</para>
        </block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberSignature Language="F#" Value="member this.GetApplications : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications peerEndPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Contains endpoint information associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> associated with the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</summary>
        <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> associated with the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />. If applications are not associated with the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />, a collection of size zero (0) is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il peer chiamante non ha sottoscritto il <xref:System.Net.PeerToPeer.Collaboration.PeerContact> associata all'oggetto specificato <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> il <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> metodo deve essere chiamato prima di chiamare questo metodo.  
  
 Mentre il chiamante non è necessario effettuare l'accesso all'infrastruttura di collaborazione per questo metodo venga completata correttamente, una chiamata al <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> o uno del <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> metodi è necessario avere completati anche se il chiamante è stato precedentemente eseguito l'accesso.  
  
 Questa funzionalità è esposta solo sul <xref:System.Net.PeerToPeer.Collaboration.PeerContact> classe.  Questa funzionalità non è esposta in qualsiasi altro tipo di peer per motivi di sicurezza.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> cannot be <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">-   The calling peer is not subscribed to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  -   The calling peer has not yet called the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> method.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to complete <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> operation.</exception>
        <block subset="none" type="usage">
          <para>Chiamare questo metodo richiede un <see cref="T:System.Security.Permissions.PermissionState" /> di <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Questo stato viene creato all'avvio della sessione di collaborazione peer.</para>
        </block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, Guid applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, valuetype System.Guid applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, Guid applicationId);" />
      <MemberSignature Language="F#" Value="member this.GetApplications : System.Net.PeerToPeer.Collaboration.PeerEndPoint * Guid -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications (peerEndPoint, applicationId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="applicationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">The endpoint associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />.</param>
        <param name="applicationId">Contains application information associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> associated with the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</summary>
        <returns>The collection of <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> objects associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  If applications identified by the ID are not found for the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />, or if the ID for the endpoint is <see langword="null" /> or invalid, a collection of size zero (0) is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il peer chiamante non ha sottoscritto il <xref:System.Net.PeerToPeer.Collaboration.PeerContact> associata all'oggetto specificato <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> il <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> metodo deve essere chiamato prima di chiamare questo metodo.  
  
 Mentre il chiamante non è necessario effettuare l'accesso all'infrastruttura di collaborazione per questo metodo venga completata correttamente, una chiamata al <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> o uno del <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> metodi è necessario avere completati anche se il chiamante è stato precedentemente eseguito l'accesso.  
  
 Questa funzionalità è esposta solo sul <xref:System.Net.PeerToPeer.Collaboration.PeerContact> classe.  Questa funzionalità non è esposta in qualsiasi altro tipo di peer per motivi di sicurezza.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> cannot be <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">-   The calling peer is not subscribed to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  -   The calling peer has not yet called the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> method.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to complete <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> operation.</exception>
        <block subset="none" type="usage">
          <para>Chiamare questo metodo richiede un <see cref="T:System.Security.Permissions.PermissionState" /> di <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Questo stato viene creato all'avvio della sessione di collaborazione peer.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="peerContact.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code for a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance.</summary>
        <returns>A 32-bit signed integer hash code.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo valore di codice hash viene utilizzato per confrontare a livello di codice le istanze di questo tipo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Equals" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerContact)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerContact.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object.</param>
        <param name="context">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object.</param>
        <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un tipo derivato deve chiamare il <xref:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData%2A> metodo del tipo di base.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjects">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the collection of peer objects from a local cache.</summary>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetObjects(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberSignature Language="F#" Value="override this.GetObjects : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerObjectCollection" Usage="peerContact.GetObjects peerEndPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">The endpoint from which to retrieve objects.</param>
        <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> registered by the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> and stored in the local cache.</summary>
        <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> associated with the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />. If no applications are associated with the endpoint, a collection of size zero (0) is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il peer chiamante non ha sottoscritto il <xref:System.Net.PeerToPeer.Collaboration.PeerContact> associata all'oggetto specificato <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> il <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> metodo deve essere chiamato prima di chiamare questo metodo.  
  
 Mentre il chiamante non è necessario effettuare l'accesso all'infrastruttura di collaborazione per questo metodo venga completata correttamente, una chiamata al <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> o uno del <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> metodi è necessario avere completati anche se il chiamante è stato precedentemente eseguito l'accesso.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> cannot be <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">-   The calling peer is not subscribed to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  -   The calling peer has not yet called the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> method.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to complete <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" /> operation.</exception>
        <block subset="none" type="usage">
          <para>Gli overload aggiuntivi sono definiti nel <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> classe anziché le sottoclassi <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> e <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  Chiamare questo metodo richiede un <see cref="T:System.Security.Permissions.PermissionState" /> di <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Questo stato viene creato all'avvio della sessione di collaborazione peer.</para>
        </block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </Member>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, Guid objectId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, valuetype System.Guid objectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetObjects(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, Guid objectId);" />
      <MemberSignature Language="F#" Value="override this.GetObjects : System.Net.PeerToPeer.Collaboration.PeerEndPoint * Guid -&gt; System.Net.PeerToPeer.Collaboration.PeerObjectCollection" Usage="peerContact.GetObjects (peerEndPoint, objectId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="objectId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">The endpoint from which to retrieve objects.</param>
        <param name="objectId">The <see cref="T:System.Guid" /> of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> to be retrieved.</param>
        <summary>Gets the collection of peer objects registered by the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> and registered in the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> identified by the specified <see cref="T:System.Guid" />.</summary>
        <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> associated with the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />. If no applications are associated with the endpoint, a collection of size zero (0) is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il peer chiamante non ha sottoscritto il <xref:System.Net.PeerToPeer.Collaboration.PeerContact> associata all'oggetto specificato <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> il <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> metodo deve essere chiamato prima di chiamare questo metodo.  
  
 Mentre il chiamante non è necessario effettuare l'accesso all'infrastruttura di collaborazione per questo metodo venga completata correttamente, una chiamata al <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> o uno del <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> metodi è necessario avere completati anche se il chiamante è stato precedentemente eseguito l'accesso.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> cannot be <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">-   The calling peer is not subscribed to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  -   The calling peer has not yet called the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> method.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to complete <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" /> operation.</exception>
        <block subset="none" type="usage">
          <para>Gli overload aggiuntivi sono definiti nel <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> classe anziché le sottoclassi <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> e <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  Chiamare questo metodo richiede un <see cref="T:System.Security.Permissions.PermissionState" /> di <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Questo stato viene creato all'avvio della sessione di collaborazione peer.</para>
        </block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invite">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sends an invitation to join into peer collaboration activity sponsored by the sender.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il chiamante non è necessario effettuare l'accesso per il <xref:System.Net.PeerToPeer.Collaboration> infrastruttura per questo metodo venga completata correttamente. Oggetto <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> da parte dell'invitato non è quello utilizzato per l'invitato accettato l'invito a collaborare. Se viene inviato un invito a un peer remoto che non è installato l'applicazione, l'invito è stato rifiutato automaticamente.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Invite () As PeerInvitationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite();" />
      <MemberSignature Language="F#" Value="override this.Invite : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sends an invitation to join into peer collaboration sponsored by the sender.</summary>
        <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> from the peer who received the invitation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il chiamante non è necessario effettuare l'accesso per il <xref:System.Net.PeerToPeer.Collaboration> infrastruttura per questo metodo venga completata correttamente. Oggetto <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> da parte dell'invitato non è quello utilizzato per l'invitato accettato l'invito a collaborare. Se viene inviato un invito a un peer remoto che non è installato l'applicazione, l'invito è stato rifiutato automaticamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object has been disposed.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> for the current application does not exist.</exception>
        <block subset="none" type="usage">
          <para>Chiamare questo metodo richiede un <see cref="T:System.Security.Permissions.PermissionState" /> di <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Questo stato viene creato all'avvio della sessione di collaborazione peer.</para>
        </block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberSignature Language="F#" Value="override this.Invite : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite peerEndPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">The endpoint to receive the invitation.</param>
        <summary>Sends an invitation to a specific endpoint to join into peer collaboration with the sender of the invitation.</summary>
        <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> from the peer endpoint who received the invitation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il chiamante non è necessario effettuare l'accesso per il <xref:System.Net.PeerToPeer.Collaboration> infrastruttura per questo metodo venga completata correttamente. Oggetto <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> da parte dell'invitato non è quello utilizzato per l'invitato accettato l'invito a collaborare. Se viene inviato un invito a un peer remoto che non è installato l'applicazione, l'invito è stato rifiutato automaticamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> cannot be <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object has been disposed.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   Unable to complete <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" /> operation.  -   The currently executing application is not registered with the peer collaboration infrastructure.  
  
-   <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" /> specified by <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object is not valid.</exception>
        <block subset="none" type="usage">
          <para>Chiamare questo metodo richiede un <see cref="T:System.Security.Permissions.PermissionState" /> di <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Questo stato viene creato all'avvio della sessione di collaborazione peer.</para>
        </block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Invite (applicationToInvite As PeerApplication, message As String, invitationData As Byte()) As PeerInvitationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData);" />
      <MemberSignature Language="F#" Value="override this.Invite : System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite (applicationToInvite, message, invitationData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> for which the invitation is sent.</param>
        <param name="message">A message to send to the remote peer along with the application invitation.</param>
        <param name="invitationData">A user-defined data blob to associate with the invitation.  Its size can be no more than 16,384 bytes.</param>
        <summary>Sends the specified invitation to join into the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> sponsored by the sender.</summary>
        <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> from the peer who received the invitation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il chiamante non è necessario effettuare l'accesso per il <xref:System.Net.PeerToPeer.Collaboration> infrastruttura per questo metodo venga completata correttamente. Oggetto <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> da parte dell'invitato non è quello utilizzato per l'invitato accettato l'invito a collaborare. Se viene inviato un invito a un peer remoto che non è installato l'applicazione, l'invito è stato rifiutato automaticamente.  
  
 Chiamare questo metodo richiede un <xref:System.Security.Permissions.PermissionState> di <xref:System.Security.Permissions.PermissionState.Unrestricted>. Questo stato viene creato all'avvio della sessione di collaborazione peer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> cannot be <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object has been disposed.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> for the current application does not exist or is empty.</exception>
        <block subset="none" type="usage">
          <para>Chiamare questo metodo richiede un <see cref="T:System.Security.Permissions.PermissionState" /> di <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Questo stato viene creato all'avvio della sessione di collaborazione peer.</para>
        </block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData);" />
      <MemberSignature Language="F#" Value="override this.Invite : System.Net.PeerToPeer.Collaboration.PeerEndPoint * System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite (peerEndPoint, applicationToInvite, message, invitationData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">The endpoint or remote peer to which to send the invitation.</param>
        <param name="applicationToInvite">The application for which the invitation is sent.</param>
        <param name="message">A message to send to the remote peer along with the application invitation.  The message can be no more than 255 Unicode characters.</param>
        <param name="invitationData">A user-defined data blob to associate with the invitation.  Its size can be no more than 16,384 bytes.</param>
        <summary>Sends the specified invitation to the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> to join into the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> application sponsored by the sender.</summary>
        <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> from the peer who received the invitation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il chiamante non è necessario effettuare l'accesso per il <xref:System.Net.PeerToPeer.Collaboration> infrastruttura per questo metodo venga completata correttamente. Oggetto <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> da parte dell'invitato non è quello utilizzato per l'invitato accettato l'invito a collaborare. Se viene inviato un invito a un peer remoto che non è installato l'applicazione, l'invito è stato rifiutato automaticamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Endpoint in <paramref name="PeerEndPoint" /> cannot be <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object cannot be empty.  
  
-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> and <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> objects cannot be <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object has been disposed.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> for the current application does not exist or is empty.</exception>
        <block subset="none" type="usage">
          <para>Chiamare questo metodo richiede un <see cref="T:System.Security.Permissions.PermissionState" /> di <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Questo stato viene creato all'avvio della sessione di collaborazione peer.</para>
        </block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InviteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Begins an asynchronous invitation operation for an endpoint to join a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> application sponsored by the sender of the invitation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il chiamante non è necessario effettuare l'accesso per il <xref:System.Net.PeerToPeer.Collaboration> infrastruttura per questo metodo venga completata correttamente. Oggetto <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> da parte dell'invitato non è quello utilizzato per l'invitato accettato l'invito a collaborare. Se viene inviato un invito a un peer remoto che non è installato l'applicazione, l'invito è stato rifiutato automaticamente.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>Gli overload aggiuntivi sono definiti nel <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> classe anziché le sottoclassi <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> e <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  Chiamare questo metodo richiede un <see cref="T:System.Security.Permissions.PermissionState" /> di <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Questo stato viene creato all'avvio della sessione di collaborazione peer.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public override void InviteAsync (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InviteAsync(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InviteAsync (userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InviteAsync(System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : obj -&gt; unit" Usage="peerContact.InviteAsync userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken">User-defined object to pass to the callback of the asynchronous operation. Also used to identify the asynchronous operation for cancellation. This parameter must be specified and is unique across all asynchronous invitation operations in progress.</param>
        <summary>Begins an asynchronous invitation operation for an endpoint to join a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> application sponsored by the sender of the invitation. The invitation is identified using the specified <see cref="T:System.Object" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il chiamante non è necessario effettuare l'accesso per il <xref:System.Net.PeerToPeer.Collaboration> infrastruttura per questo metodo venga completata correttamente. Oggetto <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> da parte dell'invitato non è quello utilizzato per l'invitato accettato l'invito a collaborare. Se viene inviato un invito a un peer remoto che non è installato l'applicazione, l'invito è stato rifiutato automaticamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="UserToken" /> cannot be <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object has been disposed.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   The <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> for the current application does not exist or is empty.  
  
-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> cannot be <see langword="null." /></exception>
        <block subset="none" type="usage">
          <para>Gli overload aggiuntivi sono definiti nel <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> classe anziché le sottoclassi <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> e <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  Chiamare questo metodo richiede un <see cref="T:System.Security.Permissions.PermissionState" /> di <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Questo stato viene creato all'avvio della sessione di collaborazione peer.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : System.Net.PeerToPeer.Collaboration.PeerEndPoint * obj -&gt; unit" Usage="peerContact.InviteAsync (peerEndPoint, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">The endpoint or remote peer to which to send the invitation.</param>
        <param name="userToken">User-defined object to pass to the callback of the asynchronous operation. Also used to identify the asynchronous operation for cancellation. This parameter must be specified and is unique across all asynchronous invitation operations in progress.</param>
        <summary>Begins an asynchronous invitation operation for the specified peer endpoint to join a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> application sponsored by the sender of the invitation. The invitation is identified using the specified <see cref="T:System.Object" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il chiamante non è necessario effettuare l'accesso per il <xref:System.Net.PeerToPeer.Collaboration> infrastruttura per questo metodo venga completata correttamente. Oggetto <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> da parte dell'invitato non è quello utilizzato per l'invitato accettato l'invito a collaborare. Se viene inviato un invito a un peer remoto che non è installato l'applicazione, l'invito è stato rifiutato automaticamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <paramref name="UserToken" /> cannot be <see langword="null." />  -   Endpoint in <paramref name="peerEndPoint" /> cannot be <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peerEndPoint" /> object cannot be <see langword="null." /></exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object has been disposed.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <see cref="T:System.Guid" /> for the current application does not exist or is empty.</exception>
        <block subset="none" type="usage">
          <para>Gli overload aggiuntivi sono definiti nel <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> classe anziché le sottoclassi <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> e <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  Chiamare questo metodo richiede un <see cref="T:System.Security.Permissions.PermissionState" /> di <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Questo stato viene creato all'avvio della sessione di collaborazione peer.</para>
        </block>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public override void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InviteAsync (applicationToInvite As PeerApplication, message As String, invitationData As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] * obj -&gt; unit" Usage="peerContact.InviteAsync (applicationToInvite, message, invitationData, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite">The application for which the invitation is sent.</param>
        <param name="message">A message to send to the remote peer along with the application invitation.  The message can be no more than 255 Unicode characters.</param>
        <param name="invitationData">A user-defined data blob to associate with the invitation.  Its size can be no more than 16,384 bytes.</param>
        <param name="userToken">User-defined object to pass to the callback of the asynchronous operation. Also used to identify the asynchronous operation for cancellation. This parameter must be specified and is unique across all asynchronous invitation operations in progress.</param>
        <summary>Begins an asynchronous invitation operation for the specified peer endpoints to join the specified collaboration <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> sponsored by the sender of the invitation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il chiamante non è necessario effettuare l'accesso per il <xref:System.Net.PeerToPeer.Collaboration> infrastruttura per questo metodo venga completata correttamente. Oggetto <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> da parte dell'invitato non è quello utilizzato per l'invitato accettato l'invito a collaborare. Se viene inviato un invito a un peer remoto che non è installato l'applicazione, l'invito è stato rifiutato automaticamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="UserToken" /> cannot be <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object cannot be <see langword="null." /></exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object has been disposed.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   The <see cref="T:System.Guid" /> for the current application does not exist or is empty.  -   Endpoint collection is empty or <see langword="null." /></exception>
        <block subset="none" type="usage">
          <para>Gli overload aggiuntivi sono definiti nel <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> classe anziché le sottoclassi <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> e <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  Chiamare questo metodo richiede un <see cref="T:System.Security.Permissions.PermissionState" /> di <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Questo stato viene creato all'avvio della sessione di collaborazione peer.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, string message, byte[] invitationData, System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, string message, unsigned int8[] invitationData, class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.String,System.Byte[],System.Net.PeerToPeer.Collaboration.PeerApplication,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData, System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : System.Net.PeerToPeer.Collaboration.PeerEndPoint * string * byte[] * System.Net.PeerToPeer.Collaboration.PeerApplication * obj -&gt; unit" Usage="peerContact.InviteAsync (peerEndPoint, message, invitationData, applicationToInvite, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">The endpoint or remote peer to which to send the invitation.</param>
        <param name="message">A message to send to the remote peer along with the application invitation.  The message can be no more than 255 Unicode characters.</param>
        <param name="invitationData">A user defined data blob to associate with the invitation.  Its size can be no more than 16,384 bytes.</param>
        <param name="applicationToInvite">The application for which the invitation is sent.</param>
        <param name="userToken">User-defined object to pass to the callback of the asynchronous operation. Also used to identify the asynchronous operation for cancellation. This parameter must be specified and is unique across all asynchronous invitation operations in progress.</param>
        <summary>Begins an asynchronous invitation operation for the specified <paramref name="peerEndPoint" /> to join the specified collaboration <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> sponsored by the sender of the invitation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il chiamante non è necessario effettuare l'accesso per il <xref:System.Net.PeerToPeer.Collaboration> infrastruttura per questo metodo venga completata correttamente. Oggetto <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> da parte dell'invitato non è quello utilizzato per l'invitato accettato l'invito a collaborare. Se viene inviato un invito a un peer remoto che non è installato l'applicazione, l'invito è stato rifiutato automaticamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <paramref name="UserToken" /> cannot be null.  -   Endpoint specified by <paramref name="peerEndPoint" /> cannot be <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> and <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> objects cannot be <see langword="null." /></exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object has been disposed.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> for the current application does not exist or is empty.</exception>
        <block subset="none" type="usage">
          <para>Gli overload aggiuntivi sono definiti nel <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> classe anziché le sottoclassi <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> e <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  Chiamare questo metodo richiede un <see cref="T:System.Security.Permissions.PermissionState" /> di <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Questo stato viene creato all'avvio della sessione di collaborazione peer.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="IsSubscribed">
      <MemberSignature Language="C#" Value="public bool IsSubscribed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSubscribed" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSubscribed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSubscribed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSubscribed : bool" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value specifying whether the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> is subscribed or unsubscribed to an endpoint. Alternatively, this property gets or sets a value specifying whether the current peer host or hosting application has subscribed or unsubscribed to this <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>
          <see langword="True" /> Se l'oggetto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> è sottoscritto a questo endpoint, <see langword="false" /> se il contatto corrente non ha eseguito o ha annullato la sottoscrizione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In molti casi, un <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> non è uguale a un host peer. Un host peer ha un'istanza all'interno di <xref:System.Net.PeerToPeer.Collaboration.ContactManager> del peer remoto, e la relazione è che sono stato invitato al peer a collaborare.  Dispone di un endpoint dell'istanza all'interno dell'host peer e la propria gestione contatti "Me", ma non è specificata la relazione.  
  
 Se l'host peer è nel <xref:System.Net.PeerToPeer.Collaboration.ContactManager>, e contattare il peer non sceglie <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>, la relativa <xref:System.Net.PeerToPeer.Collaboration.SubscriptionType> può avere un valore di bloccato, anziché eliminarne la voce dall'host di gestione dei contatti.  
  
 C'è una relazione molti-a-molti tra peer locali, i peer remoti, host peer e le sottoscrizioni.  Le sottoscrizioni sono per utente, anziché per ogni processo, per ogni applicazione o per ogni dominio. Di conseguenza, le sottoscrizioni associate un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> oggetti sono l'elenco dei contatti a cui è stata effettuata la sottoscrizione e da cui è previsto che gli aggiornamenti.  Tali contatti avranno aggiornato le proprie applicazioni, oggetto e le informazioni sulla presenza, oppure le informazioni relative ai contatti contenuti hanno aggiornato la <xref:System.Net.PeerToPeer.Collaboration.ContactManager>.  
  
 Questa proprietà restituisce sempre `true` se l'oggetto è un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> che rappresenta computer locale o "Me" contatto, dal momento che un contatto è sempre sottoscritto a se stesso.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="Nickname">
      <MemberSignature Language="C#" Value="public string Nickname { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Nickname" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.Nickname" />
      <MemberSignature Language="VB.NET" Value="Public Property Nickname As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Nickname { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Nickname : string with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.Nickname" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a string which represents the <paramref name="Nickname" /> of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>
          <see cref="T:System.String" /> che rappresenta il nome alternativo del <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. Il valore predefinito di questa proprietà è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un nome alternativo può essere usato per un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> nel caso in cui sono presenti più peer con lo stesso nome visualizzato dell'oggetto.  Una sessione di collaborazione possa anche usare il nome alternativo per designare peer remoti comunemente usate in dimensioni maggiori sforzi collaborativi.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="ObjectChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectChanged As EventHandler(Of ObjectChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^&gt; ^ ObjectChanged;" />
      <MemberSignature Language="F#" Value="member this.ObjectChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " Usage="member this.ObjectChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This event is signaled whenever a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> has changed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare questo metodo richiede un <xref:System.Security.Permissions.PermissionState> di <xref:System.Security.Permissions.PermissionState.Unrestricted>. Questo stato viene creato all'avvio della sessione di collaborazione peer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnApplicationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnApplicationChanged (System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs appChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnApplicationChanged(class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs appChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnApplicationChanged (appChangedArgs As ApplicationChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnApplicationChanged(System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^ appChangedArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnApplicationChanged : System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs -&gt; unit&#xA;override this.OnApplicationChanged : System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs -&gt; unit" Usage="peerContact.OnApplicationChanged appChangedArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appChangedArgs" Type="System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="appChangedArgs">The <see cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" /> object to be passed to delegates associated with the <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" /> event.</param>
        <summary>Raises the <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le modifiche all'applicazione si verificano quando un'applicazione è avviata, registrata o meno dall'infrastruttura di collaborazione.  Si verificano anche quando peer partecipare o abbandonare una sessione di collaborazione o modificano posizioni dell'endpoint di rete.  Modifiche di ambito peer possono essere dovute a una modifica in un'applicazione.  
  
 Le classi che ereditano da questa classe possono eseguire l'override di questo metodo per eseguire attività aggiuntive al verificarsi dell'evento.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>In una classe derivata, accertarsi di chiamare l'implementazione della classe base di questo metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectChanged (System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs objChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectChanged(class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs objChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectChanged (objChangedArgs As ObjectChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectChanged(System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^ objChangedArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnObjectChanged : System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs -&gt; unit&#xA;override this.OnObjectChanged : System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs -&gt; unit" Usage="peerContact.OnObjectChanged objChangedArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objChangedArgs" Type="System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="objChangedArgs">Type of object change specified by <see cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />.</param>
        <summary>Raises the <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" /> event when a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> is added, updated or removed by a remote peer.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerObject.SynchronizingObject" />
      </Docs>
    </Member>
    <Member MemberName="OnPresenceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPresenceChanged (System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs presenceChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPresenceChanged(class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs presenceChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPresenceChanged (presenceChangedArgs As PresenceChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPresenceChanged(System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^ presenceChangedArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnPresenceChanged : System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs -&gt; unit&#xA;override this.OnPresenceChanged : System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs -&gt; unit" Usage="peerContact.OnPresenceChanged presenceChangedArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="presenceChangedArgs" Type="System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="presenceChangedArgs">The <see cref="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" /> object to be passed to delegates associated with the <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" /> event.</param>
        <summary>Raises the <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" /> event when the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> of a peer has changed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Presenza le modifiche quando un peer accede da un'applicazione, un'applicazione è registrata o meno dall'infrastruttura di collaborazione, o un peer annulli la sottoscrizione da un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> o <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSubscribeCompleted">
      <MemberSignature Language="C#" Value="protected void OnSubscribeCompleted (System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnSubscribeCompleted(class System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnSubscribeCompleted (e As SubscribeCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnSubscribeCompleted(System::Net::PeerToPeer::Collaboration::SubscribeCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnSubscribeCompleted : System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs -&gt; unit" Usage="peerContact.OnSubscribeCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The <see cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" /> or <see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" /> object associated with the <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" /> event.</param>
        <summary>Raises the <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che ereditano da questa classe possono eseguire l'override di questo metodo per eseguire altre attività quando il <xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted> evento si verifica.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Una classe derivata deve chiamare l'implementazione della classe base di questo metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PeerEndPoints">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PeerEndPoints As PeerEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::PeerToPeer::Collaboration::PeerEndPointCollection ^ PeerEndPoints { System::Net::PeerToPeer::Collaboration::PeerEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerEndPoints : System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> associated with this <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>Il <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> associata a questa raccolta <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. Il valore predefinito di questa proprietà è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se un <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> è un peer locale, un peer remoto o peer host per il contatto peer rappresentato da questa istanza non è rilevante per la presenza del <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> entrambi l'endpoint <xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection> o il <xref:System.Net.PeerToPeer.Collaboration.ContactManager>.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo corretto del <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints%2A> proprietà:  
  
 [!code-csharp[NCLPNRPContacts#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Net.PeerToPeer.PeerName" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>
          <see cref="T:System.String" /> che rappresenta il <see cref="T:System.Net.PeerToPeer.PeerName" /> del <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. Se non diversamente specificato in modo esplicito, il valore predefinito per tutte le proprietà è <see langword="null" /> per i tipi di riferimento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nessuna due contatti nella Rubrica possono avere lo stesso <xref:System.Net.PeerToPeer.PeerName>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PresenceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PresenceChanged As EventHandler(Of PresenceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^&gt; ^ PresenceChanged;" />
      <MemberSignature Language="F#" Value="member this.PresenceChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " Usage="member this.PresenceChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This event is raised whenever the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> has changed its presence status.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public virtual void Subscribe ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subscribe() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Subscribe ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Subscribe();" />
      <MemberSignature Language="F#" Value="abstract member Subscribe : unit -&gt; unit&#xA;override this.Subscribe : unit -&gt; unit" Usage="peerContact.Subscribe " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Subscribes the calling peer to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, and as a result, the peer will receive any future <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> events associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> gli aggiornamenti vengono eseguiti in modo asincrono dopo il <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> metodo ha avuto esito positivo. Di conseguenza, è possibile che un <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> da aggiungere alla raccolta di un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> prima di associato <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name%2A> viene fornito.  
  
 Per monitorare queste modifiche, è consigliabile che l'utente sottoscrivere eventi pertinenti. ad esempio, <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged>.  
  
 Chiamare questo metodo richiede un <xref:System.Security.Permissions.PermissionState> di <xref:System.Security.Permissions.PermissionState.Unrestricted>. Questo stato viene creato all'avvio della sessione di collaborazione peer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The calling peer is not signed in to People Near Me.</exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to complete <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" /> operation. Failure may be due to an inability to establish a TCP connection to the peer.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeAllowed">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.SubscriptionType SubscribeAllowed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.PeerToPeer.Collaboration.SubscriptionType SubscribeAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
      <MemberSignature Language="VB.NET" Value="Public Property SubscribeAllowed As SubscriptionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Collaboration::SubscriptionType SubscribeAllowed { System::Net::PeerToPeer::Collaboration::SubscriptionType get(); void set(System::Net::PeerToPeer::Collaboration::SubscriptionType value); };" />
      <MemberSignature Language="F#" Value="member this.SubscribeAllowed : System.Net.PeerToPeer.Collaboration.SubscriptionType with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.SubscriptionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies whether the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> is exposed to the collaboration events associated with the peer or application that has ownership of the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> in which this <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object resides.</summary>
        <value>
          <see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" /> valore di enumerazione che specifica se questo <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> è esposto agli eventi di collaborazione appartenenti all'host peer o all'applicazione host. Se non diversamente specificato in modo esplicito, il valore predefinito per tutte le proprietà è <see langword="null" /> per i tipi di riferimento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostando questa proprietà su <xref:System.Net.PeerToPeer.Collaboration.SubscriptionType.Allowed> significa che il peer remoto specificato da questo <xref:System.Net.PeerToPeer.Collaboration.PeerContact> poter visualizzare le applicazioni registrate, oggetti e le informazioni sulla presenza dell'utente o applicazione a cui appartiene il <xref:System.Net.PeerToPeer.Collaboration.ContactManager> in cui questo <xref:System.Net.PeerToPeer.Collaboration.PeerContact> oggetto si trova.  
  
 Questa proprietà non ha alcun effetto su un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> istanza che rappresenta computer locale o "Me" contatto, perché un contatto è sempre sottoscritto a se stesso.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />  object has been disposed.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeAsync">
      <MemberSignature Language="C#" Value="public virtual void SubscribeAsync (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubscribeAsync(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SubscribeAsync (userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SubscribeAsync(System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="abstract member SubscribeAsync : obj -&gt; unit&#xA;override this.SubscribeAsync : obj -&gt; unit" Usage="peerContact.SubscribeAsync userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken">A user-defined <see cref="T:System.Object" /> that contains information about the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" /> operation.</param>
        <summary>Asynchronously subscribes the calling peer to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, and as a result, the peer will receive any future <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> events associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted> evento viene generato al completamento di questa operazione. Se non devono essere asincrona, le attività di collaborazione di <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> metodo deve essere usato invece.  
  
 Chiamare questo metodo richiede un <xref:System.Security.Permissions.PermissionState> di <xref:System.Security.Permissions.PermissionState.Unrestricted>. Questo stato viene creato all'avvio della sessione di collaborazione peer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="UserToken" /> cannot be <see langword="null." /></exception>
        <exception cref="T:System.InvalidOperationException">The calling peer is not signed in to People Near Me.</exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Duplicate <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" /> identifier.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; SubscribeCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; SubscribeCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SubscribeCompleted As EventHandler(Of SubscribeCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::SubscribeCompletedEventArgs ^&gt; ^ SubscribeCompleted;" />
      <MemberSignature Language="F#" Value="member this.SubscribeCompleted : EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; " Usage="member this.SubscribeCompleted : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Raised when a subscription operation has completed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando questo evento viene generato, la proprietà dell'errore il <xref:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs> oggetto deve essere esaminato per determinare se il <xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync%2A> completato corretto del processo.  
  
 Chiamare questo metodo richiede un <xref:System.Security.Permissions.PermissionState> di <xref:System.Security.Permissions.PermissionState.Unrestricted>. Questo stato viene creato all'avvio della sessione di collaborazione peer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object.</param>
        <param name="context">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object.</param>
        <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="peerContact.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <see cref="T:System.String" /> representation of the <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <returns>
          <see cref="T:System.String" /> representation of the <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public string ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToXml();" />
      <MemberSignature Language="F#" Value="member this.ToXml : unit -&gt; string" Usage="peerContact.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Serializes the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to an XML string for persistent storage or network transfer.</summary>
        <returns>An XML encoding of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to complete <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml" /> operation.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermission" />
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe">
      <MemberSignature Language="C#" Value="public virtual void Unsubscribe ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unsubscribe() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Unsubscribe ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Unsubscribe();" />
      <MemberSignature Language="F#" Value="abstract member Unsubscribe : unit -&gt; unit&#xA;override this.Unsubscribe : unit -&gt; unit" Usage="peerContact.Unsubscribe " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes a subscription to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> and as a result the calling peer no longer receives <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> events associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il peer chiamante non ha sottoscritto il <xref:System.Net.PeerToPeer.Collaboration.PeerContact> specificato, il risultato è no-op. Un peer chiamante può verificare se sono sottoscritte agli eventi del peer identificato da questa istanza con il <xref:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed%2A> proprietà.  
  
 Chiamare questo metodo richiede un <xref:System.Security.Permissions.PermissionState> di <xref:System.Security.Permissions.PermissionState.Unrestricted>. Questo stato viene creato all'avvio della sessione di collaborazione peer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" />
      </Docs>
    </Member>
  </Members>
</Type>