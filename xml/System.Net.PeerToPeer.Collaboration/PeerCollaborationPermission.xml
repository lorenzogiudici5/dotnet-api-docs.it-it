<Type Name="PeerCollaborationPermission" FullName="System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="abc2075c2ff7ebd40a6a29021927c6874a65bc54" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460395" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PeerCollaborationPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PeerCollaborationPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PeerCollaborationPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerCollaborationPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Specifica i valori che definiscono o che sono utilizzati nelle autorizzazioni per gli oggetti di <see cref="N:System.Net.PeerToPeer.Collaboration" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore predefinito <xref:System.Security.Permissions> consentire tutte le applicazioni dell'area Intranet di accedere ai servizi di collaborazione e locale e viene concessa alcuna autorizzazione per le applicazioni dell'area Internet. In altre parole, se le autorizzazioni predefinite non sono modificate, tutti i link-local e locale a sito applicazioni dispongono dell'accesso ai servizi di collaborazione Peer-To-Peer, ma applicazioni globali non hanno accesso.  
  
 Questa classe non è derivabile.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy" />
    <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" />
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerCollaborationPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerCollaborationPermission(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Uno dei valori dell'enumerazione <see cref="T:System.Security.Permissions.PermissionState" />.</param>
        <summary>Inizializza una nuova istanza dell'oggetto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />. Il valore <see cref="T:System.Security.Permissions.PermissionState" /> iniziale di questa istanza viene passato quando viene chiamato il costruttore.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Istanze di questo tipo non hanno accesso alle risorse protette dall'autorizzazione o hanno accesso completo senza restrizioni a tali risorse.  
  
 Se è stato <xref:System.Security.Permissions.PermissionState.Unrestricted>, <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> istanza passa tutte le richieste. Se lo stato contiene qualsiasi altro valore, il <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> istanza ha esito negativo di tutte le richieste.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea e restituisce una copia della classe <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> corrente.</summary>
        <returns>Oggetto <see cref="T:System.Object" /> contenente una copia dell'istanza corrente della classe <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una copia di un <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> istanza concede lo stesso accesso alle risorse dell'autorizzazione originale.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e">Codifica XML da usare per ricostruire l'autorizzazione.</param>
        <summary>Rappresenta il modello a oggetti XML per la codifica di oggetti di sicurezza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa classe è destinata a un'implementazione semplice di un modello a oggetti XML semplice da utilizzare all'interno del sistema di sicurezza e non per l'utilizzo come modello generale di un oggetto XML.  
  
 Questa classe non può essere ereditata.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   Il parametro non è un elemento di autorizzazione valido.  
  
-   Il parametro non contiene una classe o un tipo valido.  
  
-   Il numero di versione del parametro non è supportato.</exception>
        <exception cref="T:System.ArgumentNullException">Il parametro è un riferimento <see langword="null" /> (<see langword="Nothing" /> in Visual Basic).</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Autorizzazione da intersecare con l'autorizzazione corrente tramite il metodo <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" />. Deve essere dello stesso tipo dell'autorizzazione corrente.</param>
        <summary>Crea e restituisce un'autorizzazione che rappresenta l'intersezione tra l'oggetto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> corrente e l'autorizzazione <paramref name="target" /> specificata.</summary>
        <returns>Nuova autorizzazione che rappresenta l'intersezione fra l'oggetto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> corrente e l'autorizzazione <paramref name="target" /> specificata. Se l’intersezione è vuota, la nuova autorizzazione è un riferimento <see langword="null" />, ovvero <see langword="Nothing" /> in Visual Basic.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'intersezione delle due autorizzazioni è un'autorizzazione che descrive il set di operazioni che hanno in comune. Solo una richiesta che supera entrambe le autorizzazioni originali passerà l'intersezione.  
  
 Le istruzioni seguenti devono essere `true` per tutte le implementazioni del <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect%2A> metodo. X e Y rappresentano <xref:System.Security.IPermission> riferimenti agli oggetti che non sono un `null` riferimento (`Nothing` in Visual Basic).  
  
-   Intersect (x) restituisce un valore uguale a X.  
  
-   Intersect restituisce lo stesso valore Intersect.  
  
-   X. Intersect (un `null` riferimento) restituisce un `null` riferimento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il parametro di destinazione non è un riferimento <see langword="null" /> (ovvero <see langword="Nothing" /> in Visual Basic) e non è un'istanza della classe dell'autorizzazione corrente.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Autorizzazione da testare per la relazione del subset. Questa autorizzazione deve essere dello stesso tipo di quella corrente.</param>
        <summary>Determina se l'oggetto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> corrente è un sottoinsieme dell'autorizzazione <paramref name="target" /> specificata.</summary>
        <returns>
          <see langword="True" /> se l'oggetto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> corrente è un sottoinsieme dell'autorizzazione specificata. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Corrente <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> è un subset dell'autorizzazione specificata, se l'autorizzazione corrente specifica un set di operazioni che è interamente contenuto l'autorizzazione specificata. Ad esempio, un'autorizzazione che rappresenta l'accesso a "*C:\example.txt*"è un subset di un'autorizzazione che rappresenta l'accesso a"*c:\\*". Se questo metodo restituisce `true`, l'autorizzazione corrente non rappresenta un accesso alla risorsa protetta rispetto a quello dell'autorizzazione specificata.  
  
 Le istruzioni seguenti devono essere `true` per tutte le implementazioni del <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf%2A> metodo. X, Y e Z rappresentano <xref:System.Security.IPermission> gli oggetti che non sono un `null` riferimento (`Nothing` in Visual Basic).  
  
-   IsSubsetOf (x) restituisce `true`.  
  
-   IsSubsetOf (y) restituisce lo stesso valore IsSubsetOf se e solo se X e Y rappresentano lo stesso set di autorizzazioni.  
  
-   Se IsSubsetOf (y) e y restituiscono entrambi `true`, IsSubsetOf (z) restituisce `true`.  
  
 Se X rappresenta un oggetto vuoto [IPermission](http://go.microsoft.com/fwlink?LinkID=98303) oggetto con uno stato di autorizzazione None e Y rappresenta un oggetto IPermission che è un `null` riferimento (`Nothing` in Visual Basic), IsSubsetOf (y) restituisce `true`. Se anche Z è un'autorizzazione vuota, l'impostazione composta insiemistica di operazione. IsSubsetOf (y) restituisce inoltre `true` perché il <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union%2A> delle due autorizzazioni vuote è un'autorizzazione vuota.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il parametro è un riferimento <see langword="null" /> (<see langword="Nothing" /> in Visual Basic).</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che specifica se l'oggetto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> corrente è senza restrizioni.</summary>
        <returns>
          <see langword="True" /> se l'autorizzazione corrente è senza restrizioni; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'autorizzazione senza restrizioni rappresenta l'accesso a tutte le risorse protette dall'autorizzazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una codifica XML dell'oggetto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> e del relativo stato corrente.</summary>
        <returns>Codifica XML dell'autorizzazione, che include le eventuali informazioni sullo stato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In generale, metodi della classe dell'autorizzazione vengono utilizzati dall'infrastruttura e non devono essere utilizzati nelle applicazioni.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Autorizzazione da combinare con quella corrente. Deve essere dello stesso tipo dell'autorizzazione corrente.</param>
        <summary>Crea un'autorizzazione che rappresenta l'unione tra l'oggetto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> corrente e l'autorizzazione <paramref name="target" /> specificata.</summary>
        <returns>Nuova autorizzazione che rappresenta l'unione fra l'oggetto <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" /> corrente e l'autorizzazione specificata tramite il metodo <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il risultato di una chiamata a <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union%2A> è un'autorizzazione che rappresenta tutte le operazioni rappresentate dall'oggetto corrente sia <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> e l'autorizzazione specificata. Qualsiasi richiesta che passa l'autorizzazione passa l'unione.  
  
 Le istruzioni seguenti devono essere `true` per tutte le implementazioni del metodo Union. X e Y rappresentano <xref:System.Security.IPermission> gli oggetti che non sono un `null` riferimento (`Nothing` in Visual Basic).  
  
-   Union (x) restituisce un oggetto che ha lo stesso valore di X.  
  
-   X.Union(Y) restituisce un oggetto che ha lo stesso valore dell'oggetto restituito da Union (x).  
  
-   X. Union (un `null` riferimento (`Nothing` in Visual Basic)) restituisce un oggetto che ha lo stesso valore di X.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il parametro è un riferimento <see langword="null" /> (<see langword="Nothing" /> in Visual Basic).</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted" />
      </Docs>
    </Member>
  </Members>
</Type>