<Type Name="PropertyBuilder" FullName="System.Reflection.Emit.PropertyBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="40cfa520a842629a7c2826903b10a1a6b1634f14" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39959254" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PropertyBuilder : System.Reflection.PropertyInfo, System.Runtime.InteropServices._PropertyBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit PropertyBuilder extends System.Reflection.PropertyInfo implements class System.Runtime.InteropServices._PropertyBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.PropertyBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyBuilder&#xA;Inherits PropertyInfo&#xA;Implements _PropertyBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyBuilder sealed : System::Reflection::PropertyInfo, System::Runtime::InteropServices::_PropertyBuilder" />
  <TypeSignature Language="F#" Value="type PropertyBuilder = class&#xA;    inherit PropertyInfo&#xA;    interface _PropertyBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.PropertyInfo</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._PropertyBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._PropertyBuilder))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9d8a5-101">Definisce le proprietà per un tipo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9d8a5-101">Defines the properties for a type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d8a5-102">Oggetto `PropertyBuilder` è sempre associato un `TypeBuilder`.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-102">A `PropertyBuilder` is always associated with a `TypeBuilder`.</span></span> <span data-ttu-id="9d8a5-103">Oggetto `TypeBuilder`.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-103">The `TypeBuilder`.</span></span> <span data-ttu-id="9d8a5-104">`DefineProperty` Restituisce un nuovo metodo `PropertyBuilder` a un client.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-104">`DefineProperty` method will return a new `PropertyBuilder` to a client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d8a5-105">Esempio di codice seguente viene illustrato come implementare le proprietà in un tipo dinamico usando un `PropertyBuilder` ottenute tramite <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A?displayProperty=nameWithType> per creare il framework di proprietà e un oggetto associato <xref:System.Reflection.Emit.MethodBuilder> per implementare la logica di livello di integrità all'interno della proprietà.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-105">The following code sample demonstrates how to implement properties in a dynamic type using a `PropertyBuilder` obtained via <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A?displayProperty=nameWithType> to create the property framework and an associated <xref:System.Reflection.Emit.MethodBuilder> to implement the IL logic within the property.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.PropertyBuilder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.PropertyBuilder Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.PropertyBuilder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.PropertyBuilder Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.PropertyBuilder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.PropertyBuilder Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOtherMethod">
      <MemberSignature Language="C#" Value="public void AddOtherMethod (System.Reflection.Emit.MethodBuilder mdBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOtherMethod(class System.Reflection.Emit.MethodBuilder mdBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOtherMethod (mdBuilder As MethodBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOtherMethod(System::Reflection::Emit::MethodBuilder ^ mdBuilder);" />
      <MemberSignature Language="F#" Value="member this.AddOtherMethod : System.Reflection.Emit.MethodBuilder -&gt; unit" Usage="propertyBuilder.AddOtherMethod mdBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mdBuilder" Type="System.Reflection.Emit.MethodBuilder" />
      </Parameters>
      <Docs>
        <param name="mdBuilder">
          <span data-ttu-id="9d8a5-106">Oggetto <see langword="MethodBuilder" /> che rappresenta l'altro metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-106">A <see langword="MethodBuilder" /> object that represents the other method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d8a5-107">Aggiunge uno degli altri metodi associati a questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-107">Adds one of the other methods associated with this property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d8a5-108">
            <paramref name="mdBuilder" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-108">
              <paramref name="mdBuilder" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9d8a5-109">Il metodo <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> è stato chiamato sul tipo di inclusione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-109">
              <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has been called on the enclosing type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Reflection.PropertyAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.PropertyAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As PropertyAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::PropertyAttributes Attributes { System::Reflection::PropertyAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.PropertyAttributes" Usage="System.Reflection.Emit.PropertyBuilder.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d8a5-110">Ottiene gli attributi per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-110">Gets the attributes for this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d8a5-111">Attributi di questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-111">Attributes of this property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Reflection.Emit.PropertyBuilder.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d8a5-112">Ottiene un valore che indica se è possibile leggere la proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-112">Gets a value indicating whether the property can be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d8a5-113">
            <see langword="true" /> se è possibile leggere la proprietà; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-113">
              <see langword="true" /> if this property can be read; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d8a5-114">Proprietà booleana che indica se la proprietà può essere letta.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-114">Boolean property indicating if the property can be read.</span></span> <span data-ttu-id="9d8a5-115">Se la proprietà non ha una funzione di accesso get, non possono essere lette.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-115">If the property does not have a get accessor, it cannot be read.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Reflection.Emit.PropertyBuilder.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d8a5-116">Ottiene un valore che indica se è possibile scrivere nella proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-116">Gets a value indicating whether the property can be written to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d8a5-117">
            <see langword="true" /> se è possibile scrivere nella proprietà; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-117">
              <see langword="true" /> if this property can be written to; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d8a5-118">Proprietà booleana che indica se la proprietà può essere scritto.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-118">Boolean property indicating if the property can be written to.</span></span> <span data-ttu-id="9d8a5-119">Se la proprietà non ha una funzione di accesso set, non possono essere scritti per.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-119">If the property does not have a set accessor, it cannot be written to.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public override Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Type" Usage="System.Reflection.Emit.PropertyBuilder.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d8a5-120">Ottiene la classe che dichiara questo membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-120">Gets the class that declares this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d8a5-121">Oggetto <see langword="Type" /> per la classe che dichiara questo membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-121">The <see langword="Type" /> object for the class that declares this member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo[] GetAccessors(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetAccessors(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAccessors (nonPublic As Boolean) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors(bool nonPublic);" />
      <MemberSignature Language="F#" Value="override this.GetAccessors : bool -&gt; System.Reflection.MethodInfo[]" Usage="propertyBuilder.GetAccessors nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="9d8a5-122">Indica se nella matrice <see langword="MethodInfo" /> devono essere restituiti metodi non pubblici.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-122">Indicates whether non-public methods should be returned in the <see langword="MethodInfo" /> array.</span>
          </span>
          <span data-ttu-id="9d8a5-123">
            <see langword="true" /> se devono essere inclusi i metodi non pubblici; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-123">
              <see langword="true" /> if non-public methods are to be included; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d8a5-124">Restituisce una matrice delle funzioni di accesso <see langword="get" /> e <see langword="set" /> pubbliche e non pubbliche su questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-124">Returns an array of the public and non-public <see langword="get" /> and <see langword="set" /> accessors on this property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d8a5-125">Matrice di tipo <see langword="MethodInfo" /> contenente le funzioni di accesso pubbliche o non pubbliche corrispondenti oppure una matrice vuota se le funzioni di accesso corrispondenti non sono disponibili in questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-125">An array of type <see langword="MethodInfo" /> containing the matching public or non-public accessors, or an empty array if matching accessors do not exist on this property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d8a5-126">Per ottenere le funzioni di accesso di una proprietà, la reflection sul tipo di elemento padre della proprietà tramite Type. GetType o GetType e chiamare GetAccessors recuperare l'oggetto di proprietà di Reflection dal tipo.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-126">To get the accessors of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetAccessors.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9d8a5-127">Questo metodo non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-127">This method is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9d8a5-128">Restituisce tutti gli attributi personalizzati definiti su questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-128">Returns all the custom attributes defined on this property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : bool -&gt; obj[]" Usage="propertyBuilder.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="9d8a5-129">Se <see langword="true" />, esplora la catena di ereditarietà di questa proprietà per trovare gli attributi personalizzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-129">If <see langword="true" />, walks up this property's inheritance chain to find the custom attributes</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d8a5-130">Restituisce una matrice di tutti gli attributi personalizzati per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-130">Returns an array of all the custom attributes for this property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d8a5-131">Matrice di tutti gli attributi personalizzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-131">An array of all the custom attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d8a5-132">Reflection sul tipo di elemento padre della proprietà utilizzando GetType o Type. GetType, recuperare l'oggetto di proprietà di Reflection dal tipo e chiamare GetCustomAttributes.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-132">Reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetCustomAttributes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9d8a5-133">Questo metodo non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-133">This method is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="propertyBuilder.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="9d8a5-134">Matrice di attributi personalizzati identificati per tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-134">An array of custom attributes identified by type.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="9d8a5-135">Se <see langword="true" />, esplora la catena di ereditarietà di questa proprietà per trovare gli attributi personalizzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-135">If <see langword="true" />, walks up this property's inheritance chain to find the custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d8a5-136">Restituisce una matrice di attributi personalizzati identificati dall'oggetto <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-136">Returns an array of custom attributes identified by <see cref="T:System.Type" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d8a5-137">Matrice di attributi personalizzati definiti su questo membro di cui si è eseguita la reflection oppure <see langword="null" /> se nessun attributo è stato definito su questo membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-137">An array of custom attributes defined on this reflected member, or <see langword="null" /> if no attributes are defined on this member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d8a5-138">Reflection sul tipo di elemento padre della proprietà utilizzando GetType o Type. GetType, recuperare l'oggetto di proprietà di Reflection dal tipo e chiamare GetCustomAttributes.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-138">Reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetCustomAttributes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9d8a5-139">Questo metodo non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-139">This method is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGetMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetGetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetGetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetGetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ GetGetMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="override this.GetGetMethod : bool -&gt; System.Reflection.MethodInfo" Usage="propertyBuilder.GetGetMethod nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="9d8a5-140">Indica se deve essere restituita una funzione di accesso get non pubblica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-140">Indicates whether non-public get accessors should be returned.</span>
          </span>
          <span data-ttu-id="9d8a5-141">
            <see langword="true" /> se devono essere inclusi i metodi non pubblici; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-141">
              <see langword="true" /> if non-public methods are to be included; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d8a5-142">Restituisce la funzione di accesso get pubblica e non pubblica per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-142">Returns the public and non-public get accessor for this property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d8a5-143">Oggetto <see langword="MethodInfo" /> che rappresenta la funzione di accesso get per questa proprietà, se <paramref name="nonPublic" /> è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-143">A <see langword="MethodInfo" /> object representing the get accessor for this property, if <paramref name="nonPublic" /> is <see langword="true" />.</span>
          </span>
          <span data-ttu-id="9d8a5-144">Restituisce <see langword="null" /> se <paramref name="nonPublic" /> è <see langword="false" /> e la funzione di accesso get non è pubblica oppure se <paramref name="nonPublic" /> è <see langword="true" /> ma non è disponibile alcuna funzione di accesso get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-144">Returns <see langword="null" /> if <paramref name="nonPublic" /> is <see langword="false" /> and the get accessor is non-public, or if <paramref name="nonPublic" /> is <see langword="true" /> but no get accessors exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d8a5-145">Per ottenere il metodo get di una proprietà, la reflection sul tipo di elemento padre della proprietà tramite Type. GetType o GetType e chiamare GetGetMethod recuperare l'oggetto di proprietà di Reflection dal tipo.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-145">To get the getter of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetGetMethod.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndexParameters">
      <MemberSignature Language="C#" Value="public override System.Reflection.ParameterInfo[] GetIndexParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.ParameterInfo[] GetIndexParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetIndexParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetIndexParameters () As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ GetIndexParameters();" />
      <MemberSignature Language="F#" Value="override this.GetIndexParameters : unit -&gt; System.Reflection.ParameterInfo[]" Usage="propertyBuilder.GetIndexParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d8a5-146">Restituisce una matrice di tutti i parametri degli indici per la proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-146">Returns an array of all the index parameters for the property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d8a5-147">Matrice di tipo <see langword="ParameterInfo" /> contenente i parametri per gli indici.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-147">An array of type <see langword="ParameterInfo" /> containing the parameters for the indexes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d8a5-148">Per ottenere i parametri di indice di una proprietà, la reflection sul tipo di elemento padre della proprietà tramite Type. GetType o GetType e chiamare GetIndexParameters recuperare l'oggetto di proprietà di Reflection dal tipo.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-148">To get the index parameters of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetIndexParameters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9d8a5-149">Questo metodo non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-149">This method is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSetMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetSetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetSetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetSetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ GetSetMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="override this.GetSetMethod : bool -&gt; System.Reflection.MethodInfo" Usage="propertyBuilder.GetSetMethod nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="9d8a5-150">Indica se la funzione di accesso deve essere restituita se non è pubblica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-150">Indicates whether the accessor should be returned if it is non-public.</span>
          </span>
          <span data-ttu-id="9d8a5-151">
            <see langword="true" /> se devono essere inclusi i metodi non pubblici; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-151">
              <see langword="true" /> if non-public methods are to be included; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d8a5-152">Restituisce la funzione di accesso set per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-152">Returns the set accessor for this property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d8a5-153">Metodo <see langword="Set" /> della proprietà oppure <see langword="null" />, come illustrato nella tabella seguente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-153">The property's <see langword="Set" /> method, or <see langword="null" />, as shown in the following table.</span>
          </span>
          <span data-ttu-id="9d8a5-154">
            <list type="table">
              <listheader>
                <term> Valore </term>
                <description> Condizione </description>
              </listheader>
              <item>
                <term> Oggetto <see cref="T:System.Reflection.MethodInfo" /> che rappresenta il metodo Set per questa proprietà.  </term>
                <description> La funzione di accesso set è pubblica. <paramref name="nonPublic" /> è true e non possono essere restituiti metodi pubblici. </description>
              </item>
              <item>
                <term> null </term>
                <description>
                  <paramref name="nonPublic" /> è true, ma la proprietà è di sola lettura. <paramref name="nonPublic" /> è false e la funzione di accesso set non è pubblica. </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-154">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> A <see cref="T:System.Reflection.MethodInfo" /> object representing the Set method for this property.  </term>
                  <description> The set accessor is public.  <paramref name="nonPublic" /> is true and non-public methods can be returned.  </description>
                </item>
                <item>
                  <term> null  </term>
                  <description>
                    <paramref name="nonPublic" /> is true, but the property is read-only.  <paramref name="nonPublic" /> is false and the set accessor is non-public.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d8a5-155">Per ottenere il setter di una proprietà, la reflection sul tipo di elemento padre della proprietà tramite Type. GetType o GetType e chiamare GetSetMethod recuperare l'oggetto di proprietà di Reflection dal tipo.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-155">To get the setter of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetSetMethod.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9d8a5-156">Ottiene il valore della proprietà chiamando il metodo per il richiamo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-156">Gets the value of the property by calling the getter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (object obj, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(object obj, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (obj As Object, index As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(System::Object ^ obj, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberSignature Language="F#" Value="override this.GetValue : obj * obj[] -&gt; obj" Usage="propertyBuilder.GetValue (obj, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="9d8a5-157">Oggetto di cui verrà restituito il valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-157">The object whose property value will be returned.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9d8a5-158">Valori di indice facoltativi per le proprietà indicizzate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-158">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="9d8a5-159">Il valore deve essere <see langword="null" /> per le proprietà non indicizzate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-159">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d8a5-160">Ottiene il valore della proprietà indicizzata chiamando il metodo per il richiamo della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-160">Gets the value of the indexed property by calling the property's getter method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d8a5-161">Valore della proprietà indicizzata specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-161">The value of the specified indexed property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d8a5-162">Per ottenere il valore di una proprietà, la reflection sul tipo di elemento padre della proprietà tramite Type. GetType o GetType, recuperare il `Reflection` oggetto di proprietà dal tipo e chiamata `PropertyInfo.GetValue`.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-162">To get the value of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the `Reflection` property object from the type, and call `PropertyInfo.GetValue`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9d8a5-163">Questo metodo non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-163">This method is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="override this.GetValue : obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="propertyBuilder.GetValue (obj, invokeAttr, binder, index, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="index" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="9d8a5-164">Oggetto di cui verrà restituito il valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-164">The object whose property value will be returned.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="9d8a5-165">Attributo di chiamata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-165">The invocation attribute.</span>
          </span>
          <span data-ttu-id="9d8a5-166">È necessario che si tratti di un flag di bit da <see langword="BindingFlags" />: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" /> o <see langword="SetProperty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-166">This must be a bit flag from <see langword="BindingFlags" /> : <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span>
          </span>
          <span data-ttu-id="9d8a5-167">È necessario specificare un attributo di chiamata appropriato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-167">A suitable invocation attribute must be specified.</span>
          </span>
          <span data-ttu-id="9d8a5-168">Se occorre richiamare un membro statico, è necessario impostare il flag <see langword="Static" /> di <see langword="BindingFlags" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-168">If a static member is to be invoked, the <see langword="Static" /> flag of <see langword="BindingFlags" /> must be set.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="9d8a5-169">Oggetto che consente l'associazione, la coercizione dei tipi di argomento, la chiamata dei membri e il recupero di oggetti <see langword="MemberInfo" /> tramite reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-169">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects using reflection.</span>
          </span>
          <span data-ttu-id="9d8a5-170">Se <c>binder</c> è <see langword="null" />, verrà usato il binder predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-170">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9d8a5-171">Valori di indice facoltativi per le proprietà indicizzate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-171">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="9d8a5-172">Il valore deve essere <see langword="null" /> per le proprietà non indicizzate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-172">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="9d8a5-173">Oggetto <see langword="CultureInfo" /> che rappresenta le impostazioni cultura con le quali deve essere localizzata la risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-173">The <see langword="CultureInfo" /> object that represents the culture for which the resource is to be localized.</span>
          </span>
          <span data-ttu-id="9d8a5-174">Se una risorsa non viene localizzata con queste impostazioni cultura, il metodo <see langword="CultureInfo.Parent" /> sarà successivamente chiamato in cerca di una corrispondenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-174">Note that if the resource is not localized for this culture, the <see langword="CultureInfo.Parent" /> method will be called successively in search of a match.</span>
          </span>
          <span data-ttu-id="9d8a5-175">Se questo valore è <see langword="null" />, l'oggetto <see langword="CultureInfo" /> è ottenuto dalla proprietà <see langword="CultureInfo.CurrentUICulture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-175">If this value is <see langword="null" />, the <see langword="CultureInfo" /> is obtained from the <see langword="CultureInfo.CurrentUICulture" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d8a5-176">Ottiene il valore di una proprietà con l'associazione, l'indice e l'oggetto <see langword="CultureInfo" /> specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-176">Gets the value of a property having the specified binding, index, and <see langword="CultureInfo" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d8a5-177">Valore della proprietà per <paramref name="obj" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-177">The property value for <paramref name="obj" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d8a5-178">Per ottenere il valore di una proprietà, la reflection sul tipo di elemento padre della proprietà tramite Type. GetType o GetType, recuperare l'oggetto di proprietà di Reflection dal tipo e chiamare PropertyInfo.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-178">To get the value of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetValue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9d8a5-179">Questo metodo non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-179">This method is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.IsDefined : Type * bool -&gt; bool" Usage="propertyBuilder.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="9d8a5-180">Oggetto <see langword="Type" /> a cui vengono applicati gli attributi personalizzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-180">The <see langword="Type" /> object to which the custom attributes are applied.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="9d8a5-181">Specifica se esplorare la catena di ereditarietà di questa proprietà per trovare gli attributi personalizzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-181">Specifies whether to walk up this property's inheritance chain to find the custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d8a5-182">Indica se una o più istanze di <paramref name="attributeType" /> sono definite su questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-182">Indicates whether one or more instance of <paramref name="attributeType" /> is defined on this property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d8a5-183">
            <see langword="true" /> se una o più istanze di <paramref name="attributeType" /> sono definite su questa proprietà; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-183">
              <see langword="true" /> if one or more instance of <paramref name="attributeType" /> is defined on this property; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d8a5-184">Reflection sul tipo di elemento padre della proprietà utilizzando GetType o Type. GetType, recuperare l'oggetto di proprietà di Reflection dal tipo e chiamare IsDefined.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-184">Reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.IsDefined.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9d8a5-185">Questo metodo non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-185">This method is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module Module { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module Module" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.Module" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Module As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ Module { System::Reflection::Module ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Module : System.Reflection.Module" Usage="System.Reflection.Emit.PropertyBuilder.Module" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d8a5-186">Ottiene il modulo in cui viene definito il tipo che dichiara la proprietà corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-186">Gets the module in which the type that declares the current property is being defined.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d8a5-187">Oggetto <see cref="T:System.Reflection.Module" /> in cui viene definito il tipo che dichiara la proprietà corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-187">The <see cref="T:System.Reflection.Module" /> in which the type that declares the current property is defined.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d8a5-188">Questa proprietà viene fornita per praticità per l'utente.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-188">This property is provided as a convenience for the user.</span></span> <span data-ttu-id="9d8a5-189">È equivalente all'uso di <xref:System.Reflection.Emit.PropertyBuilder.DeclaringType%2A> proprietà da ottenere il tipo in cui viene dichiarata la proprietà e quindi chiamando il <xref:System.Type.Module%2A> proprietà dell'oggetto risultante <xref:System.Type> oggetto.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-189">It is equivalent to using the <xref:System.Reflection.Emit.PropertyBuilder.DeclaringType%2A> property to get the type in which the property is declared, and then calling the <xref:System.Type.Module%2A> property of the resulting <xref:System.Type> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Module" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Reflection.Emit.PropertyBuilder.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d8a5-190">Ottiene il nome del membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-190">Gets the name of this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d8a5-191">
            <see cref="T:System.String" /> che contiene il nome di questo membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-191">A <see cref="T:System.String" /> containing the name of this member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.PropertyToken PropertyToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Emit.PropertyToken PropertyToken" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.PropertyToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyToken As PropertyToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Emit::PropertyToken PropertyToken { System::Reflection::Emit::PropertyToken get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyToken : System.Reflection.Emit.PropertyToken" Usage="System.Reflection.Emit.PropertyBuilder.PropertyToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.PropertyToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d8a5-192">Recupera il token per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-192">Retrieves the token for this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d8a5-193">Sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-193">Read-only.</span>
          </span>
          <span data-ttu-id="9d8a5-194">Recupera il token per questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-194">Retrieves the token for this property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public override Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.Reflection.Emit.PropertyBuilder.PropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d8a5-195">Ottiene il tipo del campo di questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-195">Gets the type of the field of this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d8a5-196">Tipo della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-196">The type of this property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public override Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectedType : Type" Usage="System.Reflection.Emit.PropertyBuilder.ReflectedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d8a5-197">Ottiene l'oggetto classe utilizzato per ottenere questa istanza di <see langword="MemberInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-197">Gets the class object that was used to obtain this instance of <see langword="MemberInfo" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d8a5-198">Oggetto <see langword="Type" /> tramite il quale è stato ottenuto questo oggetto <see langword="MemberInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-198">The <see langword="Type" /> object through which this <see langword="MemberInfo" /> object was obtained.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetConstant">
      <MemberSignature Language="C#" Value="public void SetConstant (object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetConstant(object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.SetConstant(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetConstant (defaultValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetConstant(System::Object ^ defaultValue);" />
      <MemberSignature Language="F#" Value="member this.SetConstant : obj -&gt; unit" Usage="propertyBuilder.SetConstant defaultValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="defaultValue">
          <span data-ttu-id="9d8a5-199">Valore predefinito di questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-199">The default value of this property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d8a5-200">Imposta il valore predefinito di questa proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-200">Sets the default value of this property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d8a5-201">`defaultValue` è limitato ai seguenti tipi: `Boolean`, `SByte`, `Int16`, `Int32`, `Int64`, `Byte`, `UInt16`, `UInt32`, `UInt64`, `Single`, `Double`, `DateTime` , `Char`, `String`, e `Enum`.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-201">`defaultValue` is restricted to the following types: `Boolean`, `SByte`, `Int16`, `Int32`, `Int64`, `Byte`, `UInt16`, `UInt32`, `UInt64`, `Single`, `Double`, `DateTime`, `Char`, `String`, and `Enum`.</span></span> <span data-ttu-id="9d8a5-202">Se il tipo della proprietà è un tipo riferimento, richiede la conformità a CLS `defaultValue` essere `null`.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-202">If the property type is a reference type, CLS compliance requires `defaultValue` to be `null`.</span></span> <span data-ttu-id="9d8a5-203">Tuttavia, iniziano con la [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], `defaultValue` può essere non null per i tipi di riferimento, purché il valore può essere assegnato a tale tipo di riferimento.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-203">However, starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], `defaultValue` can be non-null for reference types as long as the value can be assigned to that reference type.</span></span> <span data-ttu-id="9d8a5-204">Ad esempio, un' `Int32` valore può essere assegnato a una proprietà di tipo <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-204">For example, an `Int32` value can be assigned to a property of type <xref:System.Object>.</span></span> <span data-ttu-id="9d8a5-205">Questo non è conforme a CLS, ma può essere utile negli scenari di interoperabilità.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-205">This is not CLS-compliant, but it can be useful in interop scenarios.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9d8a5-206">Il metodo <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> è stato chiamato sul tipo di inclusione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-206">
              <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has been called on the enclosing type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9d8a5-207">La proprietà non è tra i tipi supportati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-207">The property is not one of the supported types.</span>
          </span>
          <span data-ttu-id="9d8a5-208">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-208">-or-</span>
          </span>
          <span data-ttu-id="9d8a5-209">Il tipo dell'oggetto <paramref name="defaultValue" /> non corrisponde al tipo della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-209">The type of <paramref name="defaultValue" /> does not match the type of the property.</span>
          </span>
          <span data-ttu-id="9d8a5-210">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-210">-or-</span>
          </span>
          <span data-ttu-id="9d8a5-211">Il tipo della proprietà è <see cref="T:System.Object" /> o un altro tipo di riferimento, <paramref name="defaultValue" /> non è <see langword="null" /> e il valore non può essere assegnato al tipo di riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-211">The property is of type <see cref="T:System.Object" /> or other reference type, <paramref name="defaultValue" /> is not <see langword="null" />, and the value cannot be assigned to the reference type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9d8a5-212">Imposta un attributo personalizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-212">Sets a custom attribute.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.Emit.CustomAttributeBuilder customBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (customBuilder As CustomAttributeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::Emit::CustomAttributeBuilder ^ customBuilder);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.Emit.CustomAttributeBuilder -&gt; unit" Usage="propertyBuilder.SetCustomAttribute customBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
      </Parameters>
      <Docs>
        <param name="customBuilder">
          <span data-ttu-id="9d8a5-213">Un'istanza di una classe helper per definire l'attributo personalizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-213">An instance of a helper class to define the custom attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d8a5-214">Impostare un attributo personalizzato usando un generatore di attributi personalizzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-214">Set a custom attribute using a custom attribute builder.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d8a5-215">
            <paramref name="customBuilder" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-215">
              <paramref name="customBuilder" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9d8a5-216">se <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> è stato chiamato sul tipo di inclusione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-216">if <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has been called on the enclosing type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.ConstructorInfo con, unsigned int8[] binaryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (con As ConstructorInfo, binaryAttribute As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Byte&gt; ^ binaryAttribute);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.ConstructorInfo * byte[] -&gt; unit" Usage="propertyBuilder.SetCustomAttribute (con, binaryAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="binaryAttribute" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="con">
          <span data-ttu-id="9d8a5-217">Costruttore dell'attributo personalizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-217">The constructor for the custom attribute.</span>
          </span>
        </param>
        <param name="binaryAttribute">
          <span data-ttu-id="9d8a5-218">BLOB di byte che rappresenta gli attributi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-218">A byte blob representing the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d8a5-219">Imposta un attributo personalizzato usando un BLOB di attributi personalizzati specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-219">Set a custom attribute using a specified custom attribute blob.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d8a5-220">Vedere la specifica dei metadati nella documentazione di specifiche ECMA Partition II per informazioni dettagliate su come formattare `binaryAttribute`.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-220">See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`.</span></span> <span data-ttu-id="9d8a5-221">La documentazione di Partition II è disponibile online in MSDN ([ECMA c# e Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?linkid=65555) pagina Web) e nel sito Web di ECMA ([Standard ECMA-335: Common Language Infrastructure](http://go.microsoft.com/fwlink/?linkid=65552) documento).</span><span class="sxs-lookup"><span data-stu-id="9d8a5-221">The Partition II documentation is available online on MSDN ([ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?linkid=65555) Web page) and on the ECMA Web site ([Standard ECMA-335 Common Language Infrastructure](http://go.microsoft.com/fwlink/?linkid=65552) document).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d8a5-222">
            <paramref name="con" /> o <paramref name="binaryAttribute" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-222">
              <paramref name="con" /> or <paramref name="binaryAttribute" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9d8a5-223">Il metodo <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> è stato chiamato sul tipo di inclusione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-223">
              <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has been called on the enclosing type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetGetMethod">
      <MemberSignature Language="C#" Value="public void SetGetMethod (System.Reflection.Emit.MethodBuilder mdBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGetMethod(class System.Reflection.Emit.MethodBuilder mdBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.SetGetMethod(System.Reflection.Emit.MethodBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGetMethod (mdBuilder As MethodBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGetMethod(System::Reflection::Emit::MethodBuilder ^ mdBuilder);" />
      <MemberSignature Language="F#" Value="member this.SetGetMethod : System.Reflection.Emit.MethodBuilder -&gt; unit" Usage="propertyBuilder.SetGetMethod mdBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mdBuilder" Type="System.Reflection.Emit.MethodBuilder" />
      </Parameters>
      <Docs>
        <param name="mdBuilder">
          <span data-ttu-id="9d8a5-224">Oggetto <see langword="MethodBuilder" /> che rappresenta il metodo che ottiene il valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-224">A <see langword="MethodBuilder" /> object that represents the method that gets the property value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d8a5-225">Imposta il metodo che ottiene il valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-225">Sets the method that gets the property value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9d8a5-226">Esempio di codice seguente illustra come collegare un metodo dinamico a un `get` proprietà creato con `PropertyBuilder` usando `SetGetMethod`.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-226">The following code sample demonstrates how to attach a dynamic method to a `get` property created with `PropertyBuilder` using `SetGetMethod`.</span></span>  
  
 [!code-cpp[PropertyBuilder_SetGetMethod_4#1](~/samples/snippets/cpp/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/CPP/propertybuilder_setgetmethod_4.cpp#1)]
 [!code-csharp[PropertyBuilder_SetGetMethod_4#1](~/samples/snippets/csharp/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/CS/propertybuilder_setgetmethod_4.cs#1)]
 [!code-vb[PropertyBuilder_SetGetMethod_4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/VB/propertybuilder_setgetmethod_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d8a5-227">
            <paramref name="mdBuilder" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-227">
              <paramref name="mdBuilder" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9d8a5-228">Il metodo <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> è stato chiamato sul tipo di inclusione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-228">
              <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has been called on the enclosing type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetSetMethod">
      <MemberSignature Language="C#" Value="public void SetSetMethod (System.Reflection.Emit.MethodBuilder mdBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSetMethod(class System.Reflection.Emit.MethodBuilder mdBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.SetSetMethod(System.Reflection.Emit.MethodBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSetMethod (mdBuilder As MethodBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSetMethod(System::Reflection::Emit::MethodBuilder ^ mdBuilder);" />
      <MemberSignature Language="F#" Value="member this.SetSetMethod : System.Reflection.Emit.MethodBuilder -&gt; unit" Usage="propertyBuilder.SetSetMethod mdBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mdBuilder" Type="System.Reflection.Emit.MethodBuilder" />
      </Parameters>
      <Docs>
        <param name="mdBuilder">
          <span data-ttu-id="9d8a5-229">Oggetto <see langword="MethodBuilder" /> che rappresenta il metodo che imposta il valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-229">A <see langword="MethodBuilder" /> object that represents the method that sets the property value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d8a5-230">Imposta il metodo che imposta il valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-230">Sets the method that sets the property value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9d8a5-231">Esempio di codice seguente illustra come collegare un metodo dinamico a un `set` proprietà creato con `PropertyBuilder` usando `SetSetMethod`.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-231">The following code sample demonstrates how to attach a dynamic method to a `set` property created with `PropertyBuilder` using `SetSetMethod`.</span></span>  
  
 [!code-cpp[PropertyBuilder_SetGetMethod_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/CPP/propertybuilder_setgetmethod_4.cpp#2)]
 [!code-csharp[PropertyBuilder_SetGetMethod_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/CS/propertybuilder_setgetmethod_4.cs#2)]
 [!code-vb[PropertyBuilder_SetGetMethod_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/VB/propertybuilder_setgetmethod_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d8a5-232">
            <paramref name="mdBuilder" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-232">
              <paramref name="mdBuilder" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9d8a5-233">Il metodo <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> è stato chiamato sul tipo di inclusione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-233">
              <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has been called on the enclosing type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9d8a5-234">Imposta il valore della proprietà per l'oggetto dato sul valore dato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-234">Sets the property value for the given object to the given value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public override void SetValue (object obj, object value, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetValue(object obj, object value, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetValue (obj As Object, value As Object, index As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetValue(System::Object ^ obj, System::Object ^ value, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberSignature Language="F#" Value="override this.SetValue : obj * obj * obj[] -&gt; unit" Usage="propertyBuilder.SetValue (obj, value, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="9d8a5-235">Oggetto di cui verrà impostato il valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-235">The object whose property value will be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9d8a5-236">Nuovo valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-236">The new value for this property.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9d8a5-237">Valori di indice facoltativi per le proprietà indicizzate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-237">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="9d8a5-238">Il valore deve essere <see langword="null" /> per le proprietà non indicizzate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-238">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d8a5-239">Imposta il valore della proprietà con valori di indice facoltativi per le proprietà dell'indice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-239">Sets the value of the property with optional index values for index properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d8a5-240">Per impostare il valore di una proprietà, la reflection sul padre della proprietà del tipo utilizzando <xref:System.Type.GetType%2A?displayProperty=nameWithType> oppure <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>, recuperare il <xref:System.Reflection.PropertyInfo> oggetto dal tipo e chiamata <xref:System.Reflection.PropertyInfo.SetValue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-240">To set the value of a property, reflect on the property's parent type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>, retrieve the <xref:System.Reflection.PropertyInfo> object from the type, and call <xref:System.Reflection.PropertyInfo.SetValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9d8a5-241">Questo metodo non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-241">This method is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public override void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetValue(object obj, object value, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetValue(System::Object ^ obj, System::Object ^ value, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="override this.SetValue : obj * obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; unit" Usage="propertyBuilder.SetValue (obj, value, invokeAttr, binder, index, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="index" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="9d8a5-242">Oggetto di cui verrà restituito il valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-242">The object whose property value will be returned.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9d8a5-243">Nuovo valore della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-243">The new value for this property.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="9d8a5-244">Attributo di chiamata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-244">The invocation attribute.</span>
          </span>
          <span data-ttu-id="9d8a5-245">È necessario che si tratti di un flag di bit da <see langword="BindingFlags" />: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" /> o <see langword="SetProperty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-245">This must be a bit flag from <see langword="BindingFlags" /> : <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span>
          </span>
          <span data-ttu-id="9d8a5-246">È necessario specificare un attributo di chiamata appropriato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-246">A suitable invocation attribute must be specified.</span>
          </span>
          <span data-ttu-id="9d8a5-247">Se occorre richiamare un membro statico, è necessario impostare il flag <see langword="Static" /> di <see langword="BindingFlags" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-247">If a static member is to be invoked, the <see langword="Static" /> flag of <see langword="BindingFlags" /> must be set.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="9d8a5-248">Oggetto che consente l'associazione, la coercizione dei tipi di argomento, la chiamata dei membri e il recupero di oggetti <see langword="MemberInfo" /> tramite reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-248">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects using reflection.</span>
          </span>
          <span data-ttu-id="9d8a5-249">Se <c>binder</c> è <see langword="null" />, verrà usato il binder predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-249">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9d8a5-250">Valori di indice facoltativi per le proprietà indicizzate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-250">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="9d8a5-251">Il valore deve essere <see langword="null" /> per le proprietà non indicizzate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-251">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="9d8a5-252">Oggetto <see langword="CultureInfo" /> che rappresenta le impostazioni cultura con le quali deve essere localizzata la risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-252">The <see langword="CultureInfo" /> object that represents the culture for which the resource is to be localized.</span>
          </span>
          <span data-ttu-id="9d8a5-253">Se una risorsa non viene localizzata con queste impostazioni cultura, il metodo <see langword="CultureInfo.Parent" /> sarà successivamente chiamato in cerca di una corrispondenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-253">Note that if the resource is not localized for this culture, the <see langword="CultureInfo.Parent" /> method will be called successively in search of a match.</span>
          </span>
          <span data-ttu-id="9d8a5-254">Se questo valore è <see langword="null" />, l'oggetto <see langword="CultureInfo" /> è ottenuto dalla proprietà <see langword="CultureInfo.CurrentUICulture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-254">If this value is <see langword="null" />, the <see langword="CultureInfo" /> is obtained from the <see langword="CultureInfo.CurrentUICulture" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d8a5-255">Imposta il valore della proprietà per l'oggetto dato sul valore dato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-255">Sets the property value for the given object to the given value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d8a5-256">Per impostare il valore di una proprietà, la reflection sul padre della proprietà del tipo utilizzando <xref:System.Type.GetType%2A?displayProperty=nameWithType> oppure <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>, recuperare il <xref:System.Reflection.PropertyInfo> oggetto dal tipo e chiamata <xref:System.Reflection.PropertyInfo.SetValue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-256">To set the value of a property, reflect on the property's parent type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>, retrieve the <xref:System.Reflection.PropertyInfo> object from the type, and call <xref:System.Reflection.PropertyInfo.SetValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9d8a5-257">Questo metodo non è supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-257">This method is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _PropertyBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _PropertyBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_PropertyBuilder::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames(System.Guid,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="9d8a5-258">Riservato per utilizzi futuri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-258">Reserved for future use.</span>
          </span>
          <span data-ttu-id="9d8a5-259">Deve essere IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-259">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="9d8a5-260">Matrice di nomi passata di cui eseguire il mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-260">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="9d8a5-261">Conteggio dei nomi di cui eseguire il mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-261">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="9d8a5-262">Contesto delle impostazioni locali in cui interpretare i nomi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-262">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="9d8a5-263">Matrice allocata dal chiamante che riceve gli ID corrispondenti ai nomi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-263">Caller-allocated array which receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d8a5-264">Esegue il mapping di un set di nomi a un set corrispondente di ID dispatch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-264">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d8a5-265">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-265">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="9d8a5-266">Per altre informazioni sulle `IDispatch::GetIDsOfNames`, consultare la MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-266">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9d8a5-267">Il metodo viene chiamato ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-267">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _PropertyBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _PropertyBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_PropertyBuilder::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="9d8a5-268">Informazioni sul tipo da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-268">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="9d8a5-269">Identificatore delle impostazioni locali per le informazioni sul tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-269">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="9d8a5-270">Riceve un puntatore all'oggetto relativo alle informazioni sul tipo richiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-270">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d8a5-271">Recupera le informazioni sul tipo relative a un oggetto che può quindi essere usato per ottenere informazioni sul tipo relative a un'interfaccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-271">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d8a5-272">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-272">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="9d8a5-273">Per altre informazioni sulle `IDispatch::GetTypeInfo`, consultare la MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-273">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9d8a5-274">Il metodo viene chiamato ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-274">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _PropertyBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _PropertyBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_PropertyBuilder::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount(System.UInt32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="9d8a5-275">Punta a una posizione che riceve il numero di interfacce di informazioni sul tipo fornite dall'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-275">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d8a5-276">Recupera il numero delle interfacce di informazioni sul tipo fornite da un oggetto (0 o 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-276">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d8a5-277">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-277">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="9d8a5-278">Per altre informazioni sulle `IDispatch::GetTypeInfoCount`, consultare la MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-278">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9d8a5-279">Il metodo viene chiamato ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-279">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _PropertyBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _PropertyBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_PropertyBuilder::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyBuilder.Invoke(System.UInt32,System.Guid,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="9d8a5-280">Identifica il membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-280">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="9d8a5-281">Riservato per utilizzi futuri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-281">Reserved for future use.</span>
          </span>
          <span data-ttu-id="9d8a5-282">Deve essere IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-282">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="9d8a5-283">Contesto di impostazioni locali all'interno del quale devono essere interpretati gli argomenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-283">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="9d8a5-284">Flag che descrivono il contesto della chiamata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-284">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="9d8a5-285">Puntatore a una struttura contenente una matrice di argomenti, una matrice di DISPID per argomenti denominati e i conteggi del numero di elementi nelle matrici.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-285">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="9d8a5-286">Puntatore alla posizione in cui deve essere archiviato il risultato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-286">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="9d8a5-287">Puntatore a una struttura contenente informazioni sull'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-287">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="9d8a5-288">Indice del primo argomento che contiene un errore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-288">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d8a5-289">Fornisce l'accesso a proprietà e metodi esposti da un oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-289">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d8a5-290">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-290">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="9d8a5-291">Per altre informazioni sulle `IDispatch::Invoke`, consultare la MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="9d8a5-291">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9d8a5-292">Il metodo viene chiamato ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d8a5-292">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>