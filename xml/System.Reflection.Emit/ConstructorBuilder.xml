<Type Name="ConstructorBuilder" FullName="System.Reflection.Emit.ConstructorBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9d8963a526f67b96590a099a152c57cdf90fef4f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37641898" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ConstructorBuilder : System.Reflection.ConstructorInfo, System.Runtime.InteropServices._ConstructorBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ConstructorBuilder extends System.Reflection.ConstructorInfo implements class System.Runtime.InteropServices._ConstructorBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.ConstructorBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConstructorBuilder&#xA;Inherits ConstructorInfo&#xA;Implements _ConstructorBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConstructorBuilder sealed : System::Reflection::ConstructorInfo, System::Runtime::InteropServices::_ConstructorBuilder" />
  <TypeSignature Language="F#" Value="type ConstructorBuilder = class&#xA;    inherit ConstructorInfo&#xA;    interface _ConstructorBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.ConstructorInfo</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._ConstructorBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._ConstructorBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ce323-101">Defines and represents a constructor of a dynamic class.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ce323-101">Defines and represents a constructor of a dynamic class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-102"><xref:System.Reflection.Emit.ConstructorBuilder> viene utilizzato per descrivere completamente un costruttore in Microsoft intermediate language (MSIL), inclusi il nome, attributi, firma e corpo del costruttore.</span><span class="sxs-lookup"><span data-stu-id="ce323-102"><xref:System.Reflection.Emit.ConstructorBuilder> is used to fully describe a constructor in Microsoft intermediate language (MSIL), including the name, attributes, signature, and constructor body.</span></span> <span data-ttu-id="ce323-103">Viene usato in combinazione con il <xref:System.Reflection.Emit.TypeBuilder> classe per creare le classi in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="ce323-103">It is used in conjunction with the <xref:System.Reflection.Emit.TypeBuilder> class to create classes at run time.</span></span> <span data-ttu-id="ce323-104">Chiamare <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A> per ottenere un'istanza di <xref:System.Reflection.Emit.ConstructorBuilder>.</span><span class="sxs-lookup"><span data-stu-id="ce323-104">Call <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A> to get an instance of <xref:System.Reflection.Emit.ConstructorBuilder>.</span></span>  
  
 <span data-ttu-id="ce323-105">Se si definisce un costruttore per il tipo dinamico, viene fornito automaticamente un costruttore predefinito e chiama il costruttore predefinito della classe di base.</span><span class="sxs-lookup"><span data-stu-id="ce323-105">If you do not define a constructor for your dynamic type, a default constructor is provided automatically, and it calls the default constructor of the base class.</span></span>  
  
 <span data-ttu-id="ce323-106">Se si usa <xref:System.Reflection.Emit.ConstructorBuilder> per definire un costruttore per il tipo dinamico, non viene fornito un costruttore predefinito.</span><span class="sxs-lookup"><span data-stu-id="ce323-106">If you use <xref:System.Reflection.Emit.ConstructorBuilder> to define a constructor for your dynamic type, a default constructor is not provided.</span></span> <span data-ttu-id="ce323-107">Sono disponibili le opzioni seguenti per fornire un costruttore predefinito oltre al costruttore che è definito:</span><span class="sxs-lookup"><span data-stu-id="ce323-107">You have the following options for providing a default constructor in addition to the constructor you defined:</span></span>  
  
-   <span data-ttu-id="ce323-108">Se si desidera un costruttore predefinito che consente di chiamare semplicemente il costruttore predefinito della classe di base, è possibile usare il <xref:System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor%2A?displayProperty=nameWithType> metodo per crearne uno (e, facoltativamente, limitare l'accesso a esso).</span><span class="sxs-lookup"><span data-stu-id="ce323-108">If you want a default constructor that simply calls the default constructor of the base class, you can use the <xref:System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor%2A?displayProperty=nameWithType> method to create one (and optionally restrict access to it).</span></span> <span data-ttu-id="ce323-109">Si fornisce un'implementazione per il costruttore predefinito.</span><span class="sxs-lookup"><span data-stu-id="ce323-109">Do not provide an implementation for this default constructor.</span></span> <span data-ttu-id="ce323-110">In caso contrario viene generata un'eccezione quando si prova a usare il costruttore.</span><span class="sxs-lookup"><span data-stu-id="ce323-110">If you do, an exception is thrown when you try to use the constructor.</span></span> <span data-ttu-id="ce323-111">Viene generata alcuna eccezione quando il <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> viene chiamato il metodo.</span><span class="sxs-lookup"><span data-stu-id="ce323-111">No exception is thrown when the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> method is called.</span></span>  
  
-   <span data-ttu-id="ce323-112">Se si desidera che un costruttore predefinito che esegue un'operazione più semplicemente chiamare il costruttore predefinito della classe di base o che chiama un altro costruttore della classe di base o che esegue un'altra operazione completamente, è necessario utilizzare il <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A?displayProperty=nameWithType> metodo per creare un <xref:System.Reflection.Emit.ConstructorBuilder>e fornire la propria implementazione.</span><span class="sxs-lookup"><span data-stu-id="ce323-112">If you want a default constructor that does something more than simply calling the default constructor of the base class, or that calls another constructor of the base class, or that does something else entirely, you must use the <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A?displayProperty=nameWithType> method to create a <xref:System.Reflection.Emit.ConstructorBuilder>, and provide your own implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce323-113">Esempio di codice seguente viene illustrato l'utilizzo contestuale di un `ConstructorBuilder`.</span><span class="sxs-lookup"><span data-stu-id="ce323-113">The following code sample illustrates the contextual usage of a `ConstructorBuilder`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConstructorBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConstructorBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDeclarativeSecurity">
      <MemberSignature Language="C#" Value="public void AddDeclarativeSecurity (System.Security.Permissions.SecurityAction action, System.Security.PermissionSet pset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDeclarativeSecurity(valuetype System.Security.Permissions.SecurityAction action, class System.Security.PermissionSet pset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDeclarativeSecurity (action As SecurityAction, pset As PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDeclarativeSecurity(System::Security::Permissions::SecurityAction action, System::Security::PermissionSet ^ pset);" />
      <MemberSignature Language="F#" Value="member this.AddDeclarativeSecurity : System.Security.Permissions.SecurityAction * System.Security.PermissionSet -&gt; unit" Usage="constructorBuilder.AddDeclarativeSecurity (action, pset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
        <Parameter Name="pset" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="ce323-114">The security action to be taken, such as Demand, Assert, and so on.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-114">The security action to be taken, such as Demand, Assert, and so on.</span>
          </span>
        </param>
        <param name="pset">
          <span data-ttu-id="ce323-115">The set of permissions the action applies to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-115">The set of permissions the action applies to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce323-116">Adds declarative security to this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-116">Adds declarative security to this constructor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-117"><xref:System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity%2A> può essere chiamato più volte, specificando un'azione di sicurezza a ogni chiamata (ad esempio `Demand`, `Assert`, e `Deny`) e un set di autorizzazioni che si applica l'azione.</span><span class="sxs-lookup"><span data-stu-id="ce323-117"><xref:System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity%2A> can be called several times, with each call specifying a security action (such as `Demand`, `Assert`, and `Deny`) and a set of permissions that the action applies to.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce323-118">Nelle versioni 1.0, 1.1 e 2.0 di .NET Framework, gli attributi di sicurezza dichiarativa applicati a un costruttore con questo metodo vengono archiviati nel vecchio formato XML dei metadati.</span><span class="sxs-lookup"><span data-stu-id="ce323-118">In the .NET Framework versions 1.0, 1.1, and 2.0, the declarative security attributes applied to a constructor by using this method are stored in the old XML metadata format.</span></span> <span data-ttu-id="ce323-119">Vedere Creazione di attributi di sicurezza dichiarativa.</span><span class="sxs-lookup"><span data-stu-id="ce323-119">See Emitting Declarative Security Attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce323-120">Esempio di codice seguente illustra l'uso di `AddDeclarativeSecurity`.</span><span class="sxs-lookup"><span data-stu-id="ce323-120">The following code sample illustrates the use of `AddDeclarativeSecurity`.</span></span>  
  
 [!code-cpp[ConstructorBuilder_Attributes_4#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CPP/constructorbuilder_attributes_4.cpp#1)]
 [!code-csharp[ConstructorBuilder_Attributes_4#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CS/constructorbuilder_attributes_4.cs#1)]
 [!code-vb[ConstructorBuilder_Attributes_4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/VB/constructorbuilder_attributes_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ce323-121">
            <paramref name="action" /> is invalid (RequestMinimum, RequestOptional, and RequestRefuse are invalid).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-121">
              <paramref name="action" /> is invalid (RequestMinimum, RequestOptional, and RequestRefuse are invalid).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ce323-122">The containing type has been previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-122">The containing type has been previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span>
          </span>
          <span data-ttu-id="ce323-123">-or-  The permission set <paramref name="pset" /> contains an action that was added earlier by <see langword="AddDeclarativeSecurity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-123">-or-  The permission set <paramref name="pset" /> contains an action that was added earlier by <see langword="AddDeclarativeSecurity" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ce323-124">
            <paramref name="pset" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-124">
              <paramref name="pset" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MethodAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As MethodAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodAttributes Attributes { System::Reflection::MethodAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.MethodAttributes" Usage="System.Reflection.Emit.ConstructorBuilder.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce323-125">Retrieves the attributes for this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-125">Retrieves the attributes for this constructor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce323-126">Restituisce gli attributi per questo costruttore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-126">Returns the attributes for this constructor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-127">Esempio di codice seguente illustra l'uso di `Attributes`.</span><span class="sxs-lookup"><span data-stu-id="ce323-127">The following code sample illustrates the use of `Attributes`.</span></span>  
  
 [!code-cpp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CPP/constructorbuilder_attributes_4.cpp#2)]
 [!code-csharp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CS/constructorbuilder_attributes_4.cs#2)]
 [!code-vb[ConstructorBuilder_Attributes_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/VB/constructorbuilder_attributes_4.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallingConvention">
      <MemberSignature Language="C#" Value="public override System.Reflection.CallingConventions CallingConvention { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.CallingConventions CallingConvention" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.CallingConvention" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CallingConvention As CallingConventions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::CallingConventions CallingConvention { System::Reflection::CallingConventions get(); };" />
      <MemberSignature Language="F#" Value="member this.CallingConvention : System.Reflection.CallingConventions" Usage="System.Reflection.Emit.ConstructorBuilder.CallingConvention" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.CallingConventions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce323-128">Gets a <see cref="T:System.Reflection.CallingConventions" /> value that depends on whether the declaring type is generic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-128">Gets a <see cref="T:System.Reflection.CallingConventions" /> value that depends on whether the declaring type is generic.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce323-129">
            <see cref="F:System.Reflection.CallingConventions.HasThis" /> se il tipo dichiarante è generico; in caso contrario, <see cref="F:System.Reflection.CallingConventions.Standard" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-129">
              <see cref="F:System.Reflection.CallingConventions.HasThis" /> if the declaring type is generic; otherwise, <see cref="F:System.Reflection.CallingConventions.Standard" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public override Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Type" Usage="System.Reflection.Emit.ConstructorBuilder.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce323-130">Retrieves a reference to the <see cref="T:System.Type" /> object for the type that declares this member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-130">Retrieves a reference to the <see cref="T:System.Type" /> object for the type that declares this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce323-131">Restituisce l'oggetto <see cref="T:System.Type" /> per il tipo che dichiara questo membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-131">Returns the <see cref="T:System.Type" /> object for the type that declares this member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-132">Un membro di una classe o interfaccia, dichiarato o ereditato da una classe di base (o un'interfaccia).</span><span class="sxs-lookup"><span data-stu-id="ce323-132">A member of a class (or interface) is either declared or inherited from a base class (or interface).</span></span>  
  
 <span data-ttu-id="ce323-133">Esempio di codice seguente illustra l'uso di `DeclaringType`.</span><span class="sxs-lookup"><span data-stu-id="ce323-133">The following code sample illustrates the use of `DeclaringType`.</span></span>  
  
 [!code-cpp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CPP/constructorbuilder_attributes_4.cpp#2)]
 [!code-csharp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CS/constructorbuilder_attributes_4.cs#2)]
 [!code-vb[ConstructorBuilder_Attributes_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/VB/constructorbuilder_attributes_4.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineParameter">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ParameterBuilder DefineParameter (int iSequence, System.Reflection.ParameterAttributes attributes, string strParamName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ParameterBuilder DefineParameter(int32 iSequence, valuetype System.Reflection.ParameterAttributes attributes, string strParamName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineParameter (iSequence As Integer, attributes As ParameterAttributes, strParamName As String) As ParameterBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ParameterBuilder ^ DefineParameter(int iSequence, System::Reflection::ParameterAttributes attributes, System::String ^ strParamName);" />
      <MemberSignature Language="F#" Value="member this.DefineParameter : int * System.Reflection.ParameterAttributes * string -&gt; System.Reflection.Emit.ParameterBuilder" Usage="constructorBuilder.DefineParameter (iSequence, attributes, strParamName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iSequence" Type="System.Int32" />
        <Parameter Name="attributes" Type="System.Reflection.ParameterAttributes" />
        <Parameter Name="strParamName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="iSequence">
          <span data-ttu-id="ce323-134">The position of the parameter in the parameter list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-134">The position of the parameter in the parameter list.</span>
          </span>
          <span data-ttu-id="ce323-135">Parameters are indexed beginning with the number 1 for the first parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-135">Parameters are indexed beginning with the number 1 for the first parameter.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="ce323-136">The attributes of the parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-136">The attributes of the parameter.</span>
          </span>
        </param>
        <param name="strParamName">
          <span data-ttu-id="ce323-137">The name of the parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-137">The name of the parameter.</span>
          </span>
          <span data-ttu-id="ce323-138">The name can be the null string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-138">The name can be the null string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce323-139">Defines a parameter of this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-139">Defines a parameter of this constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce323-140">Returns a <see langword="ParameterBuilder" /> object that represents the new parameter of this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-140">Returns a <see langword="ParameterBuilder" /> object that represents the new parameter of this constructor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-141">Se si specifica 0 (zero) per `iSequence`, questo metodo restituisce un <xref:System.Reflection.Emit.ParameterBuilder> anziché generare un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="ce323-141">If you specify 0 (zero) for `iSequence`, this method returns a <xref:System.Reflection.Emit.ParameterBuilder> instead of throwing an exception.</span></span> <span data-ttu-id="ce323-142">Non c'è nulla di utile che è possibile eseguire con questa <xref:System.Reflection.Emit.ParameterBuilder>.</span><span class="sxs-lookup"><span data-stu-id="ce323-142">There is nothing useful that you can do with this <xref:System.Reflection.Emit.ParameterBuilder>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ce323-143">
            <paramref name="iSequence" /> is less than 0 (zero), or it is greater than the number of parameters of the constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-143">
              <paramref name="iSequence" /> is less than 0 (zero), or it is greater than the number of parameters of the constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ce323-144">The containing type has been created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-144">The containing type has been created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce323-145">Returns the custom attributes defined for this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-145">Returns the custom attributes defined for this constructor.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : bool -&gt; obj[]" Usage="constructorBuilder.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="ce323-146">Controls inheritance of custom attributes from base classes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-146">Controls inheritance of custom attributes from base classes.</span>
          </span>
          <span data-ttu-id="ce323-147">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-147">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce323-148">Returns all the custom attributes defined for this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-148">Returns all the custom attributes defined for this constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce323-149">Returns an array of objects representing all the custom attributes of the constructor represented by this <see cref="T:System.Reflection.Emit.ConstructorBuilder" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-149">Returns an array of objects representing all the custom attributes of the constructor represented by this <see cref="T:System.Reflection.Emit.ConstructorBuilder" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-150">Il `inherit` parametro viene ignorato perché una classe non eredita mai i costruttori da classi di base.</span><span class="sxs-lookup"><span data-stu-id="ce323-150">The `inherit` parameter is ignored because a class never inherits constructors from base classes.</span></span>  
  
 <span data-ttu-id="ce323-151">Per ottenere gli attributi personalizzati, completare la compilazione del tipo chiamando <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A>, recuperare il costruttore chiamando il <xref:System.Type.GetConstructor%2A> sul tipo restituito e quindi chiamare metodo le <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> metodo sull'oggetto restituito <xref:System.Reflection.ConstructorInfo>.</span><span class="sxs-lookup"><span data-stu-id="ce323-151">To get the custom attributes, finish building the type by calling <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A>, retrieve the constructor by calling the <xref:System.Type.GetConstructor%2A> method on the returned type, and then call the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the returned <xref:System.Reflection.ConstructorInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ce323-152">This method is not currently supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-152">This method is not currently supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="constructorBuilder.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="ce323-153">The custom attribute type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-153">The custom attribute type.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="ce323-154">Controls inheritance of custom attributes from base classes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-154">Controls inheritance of custom attributes from base classes.</span>
          </span>
          <span data-ttu-id="ce323-155">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-155">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce323-156">Returns the custom attributes identified by the given type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-156">Returns the custom attributes identified by the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce323-157">Returns an array of type <see cref="T:System.Object" /> representing the attributes of this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-157">Returns an array of type <see cref="T:System.Object" /> representing the attributes of this constructor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-158">Il `inherit` parametro viene ignorato perché una classe non eredita mai i costruttori da classi di base.</span><span class="sxs-lookup"><span data-stu-id="ce323-158">The `inherit` parameter is ignored because a class never inherits constructors from base classes.</span></span>  
  
 <span data-ttu-id="ce323-159">Per ottenere gli attributi personalizzati, completare la compilazione del tipo chiamando <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A>, recuperare il costruttore chiamando il <xref:System.Type.GetConstructor%2A> sul tipo restituito e quindi chiamare metodo le <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> metodo sull'oggetto restituito <xref:System.Reflection.ConstructorInfo>.</span><span class="sxs-lookup"><span data-stu-id="ce323-159">To get the custom attributes, finish building the type by calling <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A>, retrieve the constructor by calling the <xref:System.Type.GetConstructor%2A> method on the returned type, and then call the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the returned <xref:System.Reflection.ConstructorInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ce323-160">This method is not currently supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-160">This method is not currently supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetILGenerator">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce323-161">Gets an <see cref="T:System.Reflection.Emit.ILGenerator" /> that can be used to emit a method body for this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-161">Gets an <see cref="T:System.Reflection.Emit.ILGenerator" /> that can be used to emit a method body for this constructor.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetILGenerator">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ILGenerator GetILGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ILGenerator GetILGenerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.GetILGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetILGenerator () As ILGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ILGenerator ^ GetILGenerator();" />
      <MemberSignature Language="F#" Value="member this.GetILGenerator : unit -&gt; System.Reflection.Emit.ILGenerator" Usage="constructorBuilder.GetILGenerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ILGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce323-162">Gets an <see cref="T:System.Reflection.Emit.ILGenerator" /> for this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-162">Gets an <see cref="T:System.Reflection.Emit.ILGenerator" /> for this constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce323-163">Returns an <see cref="T:System.Reflection.Emit.ILGenerator" /> object for this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-163">Returns an <see cref="T:System.Reflection.Emit.ILGenerator" /> object for this constructor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-164">Il runtime genera il codice per i costruttori predefiniti.</span><span class="sxs-lookup"><span data-stu-id="ce323-164">The runtime generates the code for default constructors.</span></span> <span data-ttu-id="ce323-165">Pertanto, se viene effettuato un tentativo di ottenere un `ILGenerator`, verrà generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="ce323-165">Therefore, if an attempt is made to obtain an `ILGenerator`, an exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce323-166">Esempio di codice seguente illustra l'uso della `GetILGenerator` (metodo).</span><span class="sxs-lookup"><span data-stu-id="ce323-166">The following code sample illustrates the use of the `GetILGenerator` method.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ce323-167">The constructor is a default constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-167">The constructor is a default constructor.</span>
          </span>
          <span data-ttu-id="ce323-168">-or-  The constructor has <see cref="T:System.Reflection.MethodAttributes" /> or <see cref="T:System.Reflection.MethodImplAttributes" /> flags indicating that it should not have a method body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-168">-or-  The constructor has <see cref="T:System.Reflection.MethodAttributes" /> or <see cref="T:System.Reflection.MethodImplAttributes" /> flags indicating that it should not have a method body.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetILGenerator">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ILGenerator GetILGenerator (int streamSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ILGenerator GetILGenerator(int32 streamSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.GetILGenerator(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetILGenerator (streamSize As Integer) As ILGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ILGenerator ^ GetILGenerator(int streamSize);" />
      <MemberSignature Language="F#" Value="member this.GetILGenerator : int -&gt; System.Reflection.Emit.ILGenerator" Usage="constructorBuilder.GetILGenerator streamSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ILGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="streamSize">
          <span data-ttu-id="ce323-169">The size of the MSIL stream, in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-169">The size of the MSIL stream, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce323-170">Gets an <see cref="T:System.Reflection.Emit.ILGenerator" /> object, with the specified MSIL stream size, that can be used to build a method body for this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-170">Gets an <see cref="T:System.Reflection.Emit.ILGenerator" /> object, with the specified MSIL stream size, that can be used to build a method body for this constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce323-171">An <see cref="T:System.Reflection.Emit.ILGenerator" /> for this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-171">An <see cref="T:System.Reflection.Emit.ILGenerator" /> for this constructor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-172">Il runtime genera il codice per i costruttori predefiniti.</span><span class="sxs-lookup"><span data-stu-id="ce323-172">The runtime generates the code for default constructors.</span></span> <span data-ttu-id="ce323-173">Pertanto, se viene effettuato un tentativo di ottenere un `ILGenerator` per un costruttore predefinito, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="ce323-173">Therefore, if an attempt is made to obtain an `ILGenerator` for a default constructor, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ce323-174">The constructor is a default constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-174">The constructor is a default constructor.</span>
          </span>
          <span data-ttu-id="ce323-175">-or-  The constructor has <see cref="T:System.Reflection.MethodAttributes" /> or <see cref="T:System.Reflection.MethodImplAttributes" /> flags indicating that it should not have a method body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-175">-or-  The constructor has <see cref="T:System.Reflection.MethodAttributes" /> or <see cref="T:System.Reflection.MethodImplAttributes" /> flags indicating that it should not have a method body.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodImplementationFlags">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Reflection.MethodImplAttributes GetMethodImplementationFlags() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.GetMethodImplementationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMethodImplementationFlags () As MethodImplAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodImplAttributes GetMethodImplementationFlags();" />
      <MemberSignature Language="F#" Value="override this.GetMethodImplementationFlags : unit -&gt; System.Reflection.MethodImplAttributes" Usage="constructorBuilder.GetMethodImplementationFlags " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodImplAttributes</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce323-176">Returns the method implementation flags for this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-176">Returns the method implementation flags for this constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce323-177">The method implementation flags for this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-177">The method implementation flags for this constructor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-178">Esempio di codice seguente illustra l'uso di `GetMethodImplementationFlags`.</span><span class="sxs-lookup"><span data-stu-id="ce323-178">The following code sample illustrates the use of `GetMethodImplementationFlags`.</span></span>  
  
 [!code-cpp[ConstructorBuilder_GetModule_4#3](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CPP/constructorbuilder_getmodule_4.cpp#3)]
 [!code-csharp[ConstructorBuilder_GetModule_4#3](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CS/constructorbuilder_getmodule_4.cs#3)]
 [!code-vb[ConstructorBuilder_GetModule_4#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/VB/constructorbuilder_getmodule_4.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module GetModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Module GetModule() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.GetModule" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModule () As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Module ^ GetModule();" />
      <MemberSignature Language="F#" Value="member this.GetModule : unit -&gt; System.Reflection.Module" Usage="constructorBuilder.GetModule " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce323-179">Returns a reference to the module that contains this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-179">Returns a reference to the module that contains this constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce323-180">The module that contains this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-180">The module that contains this constructor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-181">Esempio di codice seguente viene illustrato l'utilizzo di `GetModule`.</span><span class="sxs-lookup"><span data-stu-id="ce323-181">The following code sample illustrates the usage of `GetModule`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.MethodBuilder.GetModule#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/CPP/source3.cpp#1)]
 [!code-csharp[System.Reflection.Emit.MethodBuilder.GetModule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/CS/source3.cs#1)]
 [!code-vb[System.Reflection.Emit.MethodBuilder.GetModule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/VB/source3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameters">
      <MemberSignature Language="C#" Value="public override System.Reflection.ParameterInfo[] GetParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.ParameterInfo[] GetParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.GetParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetParameters () As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ GetParameters();" />
      <MemberSignature Language="F#" Value="override this.GetParameters : unit -&gt; System.Reflection.ParameterInfo[]" Usage="constructorBuilder.GetParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce323-182">Returns the parameters of this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-182">Returns the parameters of this constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce323-183">Returns an array of <see cref="T:System.Reflection.ParameterInfo" /> objects that represent the parameters of this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-183">Returns an array of <see cref="T:System.Reflection.ParameterInfo" /> objects that represent the parameters of this constructor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-184">Questa proprietà non è supportata fino a dopo il <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> chiamata al metodo.</span><span class="sxs-lookup"><span data-stu-id="ce323-184">This property is not supported until after the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> method has been called.</span></span> <span data-ttu-id="ce323-185">In .NET Framework versioni 1.0 e 1.1, <xref:System.InvalidOperationException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="ce323-185">In the .NET Framework versions 1.0 and 1.1, <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="ce323-186">In .NET Framework versione 2.0, <xref:System.NotSupportedException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="ce323-186">In the .NET Framework version 2.0, <xref:System.NotSupportedException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce323-187">Nell'esempio di codice illustra l'uso di `GetParameters`.</span><span class="sxs-lookup"><span data-stu-id="ce323-187">The code sample illustrates the use of `GetParameters`.</span></span>  
  
 [!code-cpp[ConstructorBuilder_GetModule_4#4](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CPP/constructorbuilder_getmodule_4.cpp#4)]
 [!code-csharp[ConstructorBuilder_GetModule_4#4](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CS/constructorbuilder_getmodule_4.cs#4)]
 [!code-vb[ConstructorBuilder_GetModule_4#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/VB/constructorbuilder_getmodule_4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ce323-188">
            <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has not been called on this constructor's type, in the .NET Framework versions 1.0 and 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-188">
              <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has not been called on this constructor's type, in the .NET Framework versions 1.0 and 1.1.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ce323-189">
            <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has not been called on this constructor's type, in the .NET Framework version 2.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-189">
              <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has not been called on this constructor's type, in the .NET Framework version 2.0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.GetToken" />
      <MemberSignature Language="VB.NET" Value="Public Function GetToken () As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetToken();" />
      <MemberSignature Language="F#" Value="member this.GetToken : unit -&gt; System.Reflection.Emit.MethodToken" Usage="constructorBuilder.GetToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce323-190">Returns the <see cref="T:System.Reflection.Emit.MethodToken" /> that represents the token for this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-190">Returns the <see cref="T:System.Reflection.Emit.MethodToken" /> that represents the token for this constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce323-191">Returns the <see cref="T:System.Reflection.Emit.MethodToken" /> of this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-191">Returns the <see cref="T:System.Reflection.Emit.MethodToken" /> of this constructor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-192">Questo esempio di codice illustra l'uso di `GetToken`.</span><span class="sxs-lookup"><span data-stu-id="ce323-192">This code sample illustrates the use of `GetToken`.</span></span>  
  
 [!code-cpp[ConstructorBuilder_GetModule_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CPP/constructorbuilder_getmodule_4.cpp#2)]
 [!code-csharp[ConstructorBuilder_GetModule_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CS/constructorbuilder_getmodule_4.cs#2)]
 [!code-vb[ConstructorBuilder_GetModule_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/VB/constructorbuilder_getmodule_4.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitLocals">
      <MemberSignature Language="C#" Value="public bool InitLocals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InitLocals" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.InitLocals" />
      <MemberSignature Language="VB.NET" Value="Public Property InitLocals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InitLocals { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.InitLocals : bool with get, set" Usage="System.Reflection.Emit.ConstructorBuilder.InitLocals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce323-193">Gets or sets whether the local variables in this constructor should be zero-initialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-193">Gets or sets whether the local variables in this constructor should be zero-initialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce323-194">Lettura/scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-194">Read/write.</span>
          </span>
          <span data-ttu-id="ce323-195">Ottiene o imposta un valore che indica se le variabili locali nel costruttore devono essere inizializzate su zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-195">Gets or sets whether the local variables in this constructor should be zero-initialized.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce323-196">Invokes the constructor dynamically reflected by this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-196">Invokes the constructor dynamically reflected by this instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public override object Invoke (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Invoke(valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Invoke(System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="override this.Invoke : System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="constructorBuilder.Invoke (invokeAttr, binder, parameters, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="invokeAttr">
          <span data-ttu-id="ce323-197">This must be a bit flag from <see cref="T:System.Reflection.BindingFlags" />, such as InvokeMethod, NonPublic, and so on.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-197">This must be a bit flag from <see cref="T:System.Reflection.BindingFlags" />, such as InvokeMethod, NonPublic, and so on.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="ce323-198">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects using reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-198">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects using reflection.</span>
          </span>
          <span data-ttu-id="ce323-199">If binder is <see langword="null" />, the default binder is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-199">If binder is <see langword="null" />, the default binder is used.</span>
          </span>
          <span data-ttu-id="ce323-200">See <see cref="T:System.Reflection.Binder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-200">See <see cref="T:System.Reflection.Binder" />.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="ce323-201">An argument list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-201">An argument list.</span>
          </span>
          <span data-ttu-id="ce323-202">This is an array of arguments with the same number, order, and type as the parameters of the constructor to be invoked.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-202">This is an array of arguments with the same number, order, and type as the parameters of the constructor to be invoked.</span>
          </span>
          <span data-ttu-id="ce323-203">If there are no parameters this should be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-203">If there are no parameters this should be <see langword="null" />.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="ce323-204">An instance of <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-204">An instance of <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span>
          </span>
          <span data-ttu-id="ce323-205">If this is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-205">If this is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
          <span data-ttu-id="ce323-206">(For example, this is necessary to convert a <see cref="T:System.String" /> that represents 1000 to a <see cref="T:System.Double" /> value, since 1000 is represented differently by different cultures.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-206">(For example, this is necessary to convert a <see cref="T:System.String" /> that represents 1000 to a <see cref="T:System.Double" /> value, since 1000 is represented differently by different cultures.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce323-207">Invokes the constructor dynamically reflected by this instance on the given object, passing along the specified parameters, and under the constraints of the given binder.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-207">Invokes the constructor dynamically reflected by this instance on the given object, passing along the specified parameters, and under the constraints of the given binder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce323-208">Returns an <see cref="T:System.Object" /> that is the return value of the invoked constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-208">Returns an <see cref="T:System.Object" /> that is the return value of the invoked constructor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-209">Se il costruttore non ha parametri, il valore della `parameters` il parametro deve essere `null`.</span><span class="sxs-lookup"><span data-stu-id="ce323-209">If the constructor has no parameters, the value of the `parameters` parameter should be `null`.</span></span> <span data-ttu-id="ce323-210">In caso contrario, il numero, tipo e ordine degli elementi nel `parameters` matrice deve essere identica a numero, tipo e ordine dei parametri del costruttore ottenuto mediante reflection da questa istanza.</span><span class="sxs-lookup"><span data-stu-id="ce323-210">Otherwise, the number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.</span></span>  
  
 <span data-ttu-id="ce323-211">Ad esempio, se il costruttore ottenuto mediante reflection da questa istanza viene dichiarato come pubblico classe accettando due stringhe, il `parameters` parametro deve essere una matrice di <xref:System.Object> con lunghezza 2.</span><span class="sxs-lookup"><span data-stu-id="ce323-211">For example, if the constructor reflected by this instance is declared as public class taking two strings, then the `parameters` parameter should be an array of <xref:System.Object> with length 2.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce323-212">Restrizioni di accesso vengono ignorate per il codice completamente attendibile.</span><span class="sxs-lookup"><span data-stu-id="ce323-212">Access restrictions are ignored for fully-trusted code.</span></span> <span data-ttu-id="ce323-213">Vale a dire, proprietà, metodi, campi e i costruttori privati sono accessibili e richiamato tramite Reflection, ogni volta che il codice è completamente attendibile.</span><span class="sxs-lookup"><span data-stu-id="ce323-213">That is, private constructors, methods, fields, and properties can be accessed and invoked using Reflection whenever the code is fully trusted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ce323-214">This method is not currently supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-214">This method is not currently supported.</span>
          </span>
          <span data-ttu-id="ce323-215">You can retrieve the constructor using <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> and call <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> on the returned <see cref="T:System.Reflection.ConstructorInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-215">You can retrieve the constructor using <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> and call <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> on the returned <see cref="T:System.Reflection.ConstructorInfo" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public override object Invoke (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Invoke(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Invoke(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="override this.Invoke : obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="constructorBuilder.Invoke (obj, invokeAttr, binder, parameters, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="ce323-216">The object that needs to be reinitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-216">The object that needs to be reinitialized.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="ce323-217">One of the <see langword="BindingFlags" /> values that specifies the type of binding that is desired.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-217">One of the <see langword="BindingFlags" /> values that specifies the type of binding that is desired.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="ce323-218">A <see langword="Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-218">A <see langword="Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span>
          </span>
          <span data-ttu-id="ce323-219">If <c>binder</c> is <see langword="null" />, then Binder.DefaultBinding is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-219">If <c>binder</c> is <see langword="null" />, then Binder.DefaultBinding is used.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="ce323-220">An argument list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-220">An argument list.</span>
          </span>
          <span data-ttu-id="ce323-221">This is an array of arguments with the same number, order, and type as the parameters of the constructor to be invoked.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-221">This is an array of arguments with the same number, order, and type as the parameters of the constructor to be invoked.</span>
          </span>
          <span data-ttu-id="ce323-222">If there are no parameters, this should be a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-222">If there are no parameters, this should be a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="ce323-223">A <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-223">A <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span>
          </span>
          <span data-ttu-id="ce323-224">If this is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-224">If this is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce323-225">Dynamically invokes the constructor reflected by this instance with the specified arguments, under the constraints of the specified <see langword="Binder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-225">Dynamically invokes the constructor reflected by this instance with the specified arguments, under the constraints of the specified <see langword="Binder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce323-226">An instance of the class associated with the constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-226">An instance of the class associated with the constructor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-227">Il numero, tipo e ordine degli elementi nella matrice di parametri deve essere identici a numero, tipo e ordine dei parametri del costruttore ottenuto mediante reflection da questa istanza.</span><span class="sxs-lookup"><span data-stu-id="ce323-227">The number, type, and order of elements in the parameters array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.</span></span>  
  
 <span data-ttu-id="ce323-228">Prima di chiamare il costruttore, `Invoke` garantisce che il chiamante disponga dell'autorizzazione di accesso e che i parametri siano del corretto numero, ordine e tipo.</span><span class="sxs-lookup"><span data-stu-id="ce323-228">Before calling the constructor, `Invoke` ensures that the caller has access permission, and that the parameters are of the correct number, order and type.</span></span>  
  
 <span data-ttu-id="ce323-229">Restrizioni di accesso vengono ignorate per il codice completamente attendibile.</span><span class="sxs-lookup"><span data-stu-id="ce323-229">Access restrictions are ignored for fully-trusted code.</span></span> <span data-ttu-id="ce323-230">Vale a dire, proprietà, metodi, campi e i costruttori privati sono accessibili e richiamato tramite Reflection, ogni volta che il codice è completamente attendibile.</span><span class="sxs-lookup"><span data-stu-id="ce323-230">That is, private constructors, methods, fields, and properties can be accessed and invoked using Reflection whenever the code is fully trusted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ce323-231">This method is not currently supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-231">This method is not currently supported.</span>
          </span>
          <span data-ttu-id="ce323-232">You can retrieve the constructor using <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> and call <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> on the returned <see cref="T:System.Reflection.ConstructorInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-232">You can retrieve the constructor using <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> and call <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> on the returned <see cref="T:System.Reflection.ConstructorInfo" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.IsDefined : Type * bool -&gt; bool" Usage="constructorBuilder.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="ce323-233">A custom attribute type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-233">A custom attribute type.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="ce323-234">Controls inheritance of custom attributes from base classes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-234">Controls inheritance of custom attributes from base classes.</span>
          </span>
          <span data-ttu-id="ce323-235">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-235">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce323-236">Checks if the specified custom attribute type is defined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-236">Checks if the specified custom attribute type is defined.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce323-237">
            <see langword="true" /> if the specified custom attribute type is defined; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-237">
              <see langword="true" /> if the specified custom attribute type is defined; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-238">Vedere la specifica dei metadati per i dettagli su come formattare `binaryAttribute`.</span><span class="sxs-lookup"><span data-stu-id="ce323-238">See the metadata specification for details on how to format `binaryAttribute`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ce323-239">This method is not currently supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-239">This method is not currently supported.</span>
          </span>
          <span data-ttu-id="ce323-240">You can retrieve the constructor using <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> and call <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> on the returned <see cref="T:System.Reflection.ConstructorInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-240">You can retrieve the constructor using <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> and call <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> on the returned <see cref="T:System.Reflection.ConstructorInfo" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MethodHandle">
      <MemberSignature Language="C#" Value="public override RuntimeMethodHandle MethodHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeMethodHandle MethodHandle" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.MethodHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MethodHandle As RuntimeMethodHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property RuntimeMethodHandle MethodHandle { RuntimeMethodHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodHandle : RuntimeMethodHandle" Usage="System.Reflection.Emit.ConstructorBuilder.MethodHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeMethodHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce323-241">Retrieves the internal handle for the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-241">Retrieves the internal handle for the method.</span>
          </span>
          <span data-ttu-id="ce323-242">Use this handle to access the underlying metadata handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-242">Use this handle to access the underlying metadata handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce323-243">Restituisce l'handle interno per il metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-243">Returns the internal handle for the method.</span>
          </span>
          <span data-ttu-id="ce323-244">Questo handle consente di accedere all'handle dei metadati sottostanti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-244">Use this handle to access the underlying metadata handle.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ce323-245">This property is not supported on this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-245">This property is not supported on this class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MethodImplementationFlags">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodImplAttributes MethodImplementationFlags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MethodImplAttributes MethodImplementationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MethodImplementationFlags As MethodImplAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodImplAttributes MethodImplementationFlags { System::Reflection::MethodImplAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodImplementationFlags : System.Reflection.MethodImplAttributes" Usage="System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodImplAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module Module { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module Module" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.Module" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Module As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ Module { System::Reflection::Module ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Module : System.Reflection.Module" Usage="System.Reflection.Emit.ConstructorBuilder.Module" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce323-246">Gets the dynamic module in which this constructor is defined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-246">Gets the dynamic module in which this constructor is defined.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce323-247">Oggetto <see cref="T:System.Reflection.Module" /> oggetto che rappresenta il modulo dinamico in cui è definito il costruttore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-247">A <see cref="T:System.Reflection.Module" /> object that represents the dynamic module in which this constructor is defined.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-248">Questa proprietà restituisce lo stesso valore di <xref:System.Reflection.Emit.ConstructorBuilder.GetModule%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="ce323-248">This property returns the same value as the <xref:System.Reflection.Emit.ConstructorBuilder.GetModule%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Module" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Reflection.Emit.ConstructorBuilder.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce323-249">Retrieves the name of this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-249">Retrieves the name of this constructor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce323-250">Restituisce il nome del costruttore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-250">Returns the name of this constructor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-251">Esempio di codice seguente illustra l'uso di `Name`.</span><span class="sxs-lookup"><span data-stu-id="ce323-251">The following code sample illustrates the use of `Name`.</span></span>  
  
 [!code-cpp[ConstructorBuilder_Name_5#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Name_5/CPP/constructorbuilder_name_5.cpp#2)]
 [!code-csharp[ConstructorBuilder_Name_5#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Name_5/CS/constructorbuilder_name_5.cs#2)]
 [!code-vb[ConstructorBuilder_Name_5#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Name_5/VB/constructorbuilder_name_5.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public override Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectedType : Type" Usage="System.Reflection.Emit.ConstructorBuilder.ReflectedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce323-252">Holds a reference to the <see cref="T:System.Type" /> object from which this object was obtained.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-252">Holds a reference to the <see cref="T:System.Type" /> object from which this object was obtained.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce323-253">Restituisce il <see langword="Type" /> dell'oggetto da cui è stato ottenuto questo oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-253">Returns the <see langword="Type" /> object from which this object was obtained.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-254">Oggetto <xref:System.Reflection.Emit.ConstructorBuilder> oggetto rappresenta un costruttore in una classe particolare.</span><span class="sxs-lookup"><span data-stu-id="ce323-254">A <xref:System.Reflection.Emit.ConstructorBuilder> object represents a constructor on a particular class.</span></span> <span data-ttu-id="ce323-255">Per ottenere un <xref:System.Reflection.ConstructorInfo> oggetti, il <xref:System.Type> viene eseguita una query di oggetto che rappresenta la classe che supporta il costruttore.</span><span class="sxs-lookup"><span data-stu-id="ce323-255">In order to obtain a <xref:System.Reflection.ConstructorInfo> object, the <xref:System.Type> object that represents the class that supports the constructor is queried.</span></span> <span data-ttu-id="ce323-256">Questa proprietà contiene un riferimento a quella <xref:System.Type> oggetto.</span><span class="sxs-lookup"><span data-stu-id="ce323-256">This property holds a reference to that <xref:System.Type> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.MemberInfo.ReflectedType" />
      </Docs>
    </Member>
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public Type ReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.ReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReturnType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnType : Type" Usage="System.Reflection.Emit.ConstructorBuilder.ReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce323-257">Gets <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-257">Gets <see langword="null" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce323-258">Restituisce <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-258">Returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-259">Questa proprietà può essere rimossa in una versione futura.</span><span class="sxs-lookup"><span data-stu-id="ce323-259">This property might be removed in a future version.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce323-260">Sets a custom attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-260">Sets a custom attribute.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.Emit.CustomAttributeBuilder customBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (customBuilder As CustomAttributeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::Emit::CustomAttributeBuilder ^ customBuilder);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.Emit.CustomAttributeBuilder -&gt; unit" Usage="constructorBuilder.SetCustomAttribute customBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
      </Parameters>
      <Docs>
        <param name="customBuilder">
          <span data-ttu-id="ce323-261">An instance of a helper class to define the custom attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-261">An instance of a helper class to define the custom attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce323-262">Set a custom attribute using a custom attribute builder.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-262">Set a custom attribute using a custom attribute builder.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ce323-263">Esempio di codice seguente illustra l'uso della `SetCustomAttribute` del contesto di un <xref:System.Reflection.Emit.ConstructorBuilder>, passando un <xref:System.Reflection.Emit.CustomAttributeBuilder>.</span><span class="sxs-lookup"><span data-stu-id="ce323-263">The following code sample illustrates the use of `SetCustomAttribute` of the context of a <xref:System.Reflection.Emit.ConstructorBuilder>, passing a <xref:System.Reflection.Emit.CustomAttributeBuilder>.</span></span>  
  
 [!code-cpp[ConstructorBuilder_SetCustomAttribute1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute1/CPP/constructorbuilder_setcustomattribute1.cpp#1)]
 [!code-csharp[ConstructorBuilder_SetCustomAttribute1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute1/CS/constructorbuilder_setcustomattribute1.cs#1)]
 [!code-vb[ConstructorBuilder_SetCustomAttribute1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute1/VB/constructorbuilder_setcustomattribute1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ce323-264">
            <paramref name="customBuilder" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-264">
              <paramref name="customBuilder" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.ConstructorInfo con, unsigned int8[] binaryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (con As ConstructorInfo, binaryAttribute As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Byte&gt; ^ binaryAttribute);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.ConstructorInfo * byte[] -&gt; unit" Usage="constructorBuilder.SetCustomAttribute (con, binaryAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="binaryAttribute" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="con">
          <span data-ttu-id="ce323-265">The constructor for the custom attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-265">The constructor for the custom attribute.</span>
          </span>
        </param>
        <param name="binaryAttribute">
          <span data-ttu-id="ce323-266">A byte blob representing the attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-266">A byte blob representing the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce323-267">Set a custom attribute using a specified custom attribute blob.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-267">Set a custom attribute using a specified custom attribute blob.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-268">Vedere la specifica dei metadati nella documentazione di specifiche ECMA Partition II per informazioni dettagliate su come formattare `binaryAttribute`.</span><span class="sxs-lookup"><span data-stu-id="ce323-268">See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`.</span></span> <span data-ttu-id="ce323-269">La documentazione è disponibile online; vedere [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) (ECMA C# e standard di Common Language Infrastructure) in MSDN e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web internazionale Ecma.</span><span class="sxs-lookup"><span data-stu-id="ce323-269">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce323-270">Esempio di codice seguente illustra l'uso della `SetCustomAttribute` del contesto di un <xref:System.Reflection.Emit.ConstructorBuilder>, passando un blob di byte.</span><span class="sxs-lookup"><span data-stu-id="ce323-270">The following code sample illustrates the use of `SetCustomAttribute` of the context of a <xref:System.Reflection.Emit.ConstructorBuilder>, passing a byte blob.</span></span>  
  
 [!code-cpp[ConstructorBuilder_SetCustomAttribute2#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute2/CPP/constructorbuilder_setcustomattribute2.cpp#1)]
 [!code-csharp[ConstructorBuilder_SetCustomAttribute2#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute2/CS/constructorbuilder_setcustomattribute2.cs#1)]
 [!code-vb[ConstructorBuilder_SetCustomAttribute2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute2/VB/constructorbuilder_setcustomattribute2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ce323-271">
            <paramref name="con" /> or <paramref name="binaryAttribute" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-271">
              <paramref name="con" /> or <paramref name="binaryAttribute" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetImplementationFlags">
      <MemberSignature Language="C#" Value="public void SetImplementationFlags (System.Reflection.MethodImplAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImplementationFlags(valuetype System.Reflection.MethodImplAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImplementationFlags (attributes As MethodImplAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImplementationFlags(System::Reflection::MethodImplAttributes attributes);" />
      <MemberSignature Language="F#" Value="member this.SetImplementationFlags : System.Reflection.MethodImplAttributes -&gt; unit" Usage="constructorBuilder.SetImplementationFlags attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.MethodImplAttributes" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="ce323-272">The method implementation flags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-272">The method implementation flags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce323-273">Sets the method implementation flags for this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-273">Sets the method implementation flags for this constructor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-274">Esempio di codice seguente illustra l'uso di `SetImplementationFlags`.</span><span class="sxs-lookup"><span data-stu-id="ce323-274">The following code sample illustrates the use of `SetImplementationFlags`.</span></span>  
  
 [!code-cpp[ConstructorBuilder_SetImplementationFlags#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetImplementationFlags/CPP/constructorbuilder_setimplementationflags.cpp#1)]
 [!code-csharp[ConstructorBuilder_SetImplementationFlags#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetImplementationFlags/CS/constructorbuilder_setimplementationflags.cs#1)]
 [!code-vb[ConstructorBuilder_SetImplementationFlags#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetImplementationFlags/VB/constructorbuilder_setimplementationflags.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ce323-275">The containing type has been created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-275">The containing type has been created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetMethodBody">
      <MemberSignature Language="C#" Value="public void SetMethodBody (byte[] il, int maxStack, byte[] localSignature, System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.ExceptionHandler&gt; exceptionHandlers, System.Collections.Generic.IEnumerable&lt;int&gt; tokenFixups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMethodBody(unsigned int8[] il, int32 maxStack, unsigned int8[] localSignature, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Reflection.Emit.ExceptionHandler&gt; exceptionHandlers, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; tokenFixups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMethodBody (il As Byte(), maxStack As Integer, localSignature As Byte(), exceptionHandlers As IEnumerable(Of ExceptionHandler), tokenFixups As IEnumerable(Of Integer))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMethodBody(cli::array &lt;System::Byte&gt; ^ il, int maxStack, cli::array &lt;System::Byte&gt; ^ localSignature, System::Collections::Generic::IEnumerable&lt;System::Reflection::Emit::ExceptionHandler&gt; ^ exceptionHandlers, System::Collections::Generic::IEnumerable&lt;int&gt; ^ tokenFixups);" />
      <MemberSignature Language="F#" Value="member this.SetMethodBody : byte[] * int * byte[] * seq&lt;System.Reflection.Emit.ExceptionHandler&gt; * seq&lt;int&gt; -&gt; unit" Usage="constructorBuilder.SetMethodBody (il, maxStack, localSignature, exceptionHandlers, tokenFixups)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="il" Type="System.Byte[]" />
        <Parameter Name="maxStack" Type="System.Int32" />
        <Parameter Name="localSignature" Type="System.Byte[]" />
        <Parameter Name="exceptionHandlers" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.ExceptionHandler&gt;" />
        <Parameter Name="tokenFixups" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="il">
          <span data-ttu-id="ce323-276">An array that contains valid MSIL instructions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-276">An array that contains valid MSIL instructions.</span>
          </span>
        </param>
        <param name="maxStack">
          <span data-ttu-id="ce323-277">The maximum stack evaluation depth.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-277">The maximum stack evaluation depth.</span>
          </span>
        </param>
        <param name="localSignature">
          <span data-ttu-id="ce323-278">An array of bytes that contain the serialized local variable structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-278">An array of bytes that contain the serialized local variable structure.</span>
          </span>
          <span data-ttu-id="ce323-279">Specify <see langword="null" /> if the constructor has no local variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-279">Specify <see langword="null" /> if the constructor has no local variables.</span>
          </span>
        </param>
        <param name="exceptionHandlers">
          <span data-ttu-id="ce323-280">A collection that contains the exception handlers for the constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-280">A collection that contains the exception handlers for the constructor.</span>
          </span>
          <span data-ttu-id="ce323-281">Specify <see langword="null" /> if the constructor has no exception handlers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-281">Specify <see langword="null" /> if the constructor has no exception handlers.</span>
          </span>
        </param>
        <param name="tokenFixups">
          <span data-ttu-id="ce323-282">A collection of values that represent offsets in <c>il</c>, each of which specifies the beginning of a token that may be modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-282">A collection of values that represent offsets in <c>il</c>, each of which specifies the beginning of a token that may be modified.</span>
          </span>
          <span data-ttu-id="ce323-283">Specify <see langword="null" /> if the constructor has no tokens that have to be modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-283">Specify <see langword="null" /> if the constructor has no tokens that have to be modified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce323-284">Creates the body of the constructor by using a specified byte array of Microsoft intermediate language (MSIL) instructions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-284">Creates the body of the constructor by using a specified byte array of Microsoft intermediate language (MSIL) instructions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ce323-285">
            <paramref name="il" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-285">
              <paramref name="il" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ce323-286">
            <paramref name="maxStack" /> is negative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-286">
              <paramref name="maxStack" /> is negative.</span>
          </span>
          <span data-ttu-id="ce323-287">-or-  One of <paramref name="exceptionHandlers" /> specifies an offset outside of <paramref name="il" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-287">-or-  One of <paramref name="exceptionHandlers" /> specifies an offset outside of <paramref name="il" />.</span>
          </span>
          <span data-ttu-id="ce323-288">-or-  One of <paramref name="tokenFixups" /> specifies an offset that is outside the <paramref name="il" /> array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-288">-or-  One of <paramref name="tokenFixups" /> specifies an offset that is outside the <paramref name="il" /> array.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ce323-289">The containing type was previously created using the <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-289">The containing type was previously created using the <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> method.</span>
          </span>
          <span data-ttu-id="ce323-290">-or-  This method was called previously on this <see cref="T:System.Reflection.Emit.ConstructorBuilder" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-290">-or-  This method was called previously on this <see cref="T:System.Reflection.Emit.ConstructorBuilder" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetSymCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetSymCustomAttribute (string name, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSymCustomAttribute(string name, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.SetSymCustomAttribute(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSymCustomAttribute (name As String, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSymCustomAttribute(System::String ^ name, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.SetSymCustomAttribute : string * byte[] -&gt; unit" Usage="constructorBuilder.SetSymCustomAttribute (name, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ce323-291">The name of the custom attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-291">The name of the custom attribute.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="ce323-292">The value of the custom attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-292">The value of the custom attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce323-293">Sets this constructor's custom attribute associated with symbolic information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-293">Sets this constructor's custom attribute associated with symbolic information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-294">Esempio di codice seguente illustra l'uso di `SetSymCustomAttributes`.</span><span class="sxs-lookup"><span data-stu-id="ce323-294">The following code sample illustrates the use of `SetSymCustomAttributes`.</span></span>  
  
 [!code-cpp[ConstructorBuilder_SetSymCustomAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetSymCustomAttribute/CPP/constructorbuilder_setsymcustomattribute.cpp#1)]
 [!code-csharp[ConstructorBuilder_SetSymCustomAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetSymCustomAttribute/CS/constructorbuilder_setsymcustomattribute.cs#1)]
 [!code-vb[ConstructorBuilder_SetSymCustomAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetSymCustomAttribute/VB/constructorbuilder_setsymcustomattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ce323-295">The containing type has been created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-295">The containing type has been created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span>
          </span>
          <span data-ttu-id="ce323-296">-or-  The module does not have a symbol writer defined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-296">-or-  The module does not have a symbol writer defined.</span>
          </span>
          <span data-ttu-id="ce323-297">For example, the module is not a debug module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-297">For example, the module is not a debug module.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Signature">
      <MemberSignature Language="C#" Value="public string Signature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Signature" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.Signature" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signature As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Signature { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Signature : string" Usage="System.Reflection.Emit.ConstructorBuilder.Signature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce323-298">Retrieves the signature of the field in the form of a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-298">Retrieves the signature of the field in the form of a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce323-299">Restituisce la firma del campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-299">Returns the signature of the field.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _ConstructorBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _ConstructorBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_ConstructorBuilder::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="ce323-300">Reserved for future use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-300">Reserved for future use.</span>
          </span>
          <span data-ttu-id="ce323-301">Must be IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-301">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="ce323-302">Passed-in array of names to be mapped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-302">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="ce323-303">Count of the names to be mapped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-303">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="ce323-304">The locale context in which to interpret the names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-304">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="ce323-305">Caller-allocated array which receives the IDs corresponding to the names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-305">Caller-allocated array which receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce323-306">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-306">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-307">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="ce323-307">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="ce323-308">Per altre informazioni sulle `IDispatch::GetIDsOfNames`, consultare la MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="ce323-308">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="ce323-309">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-309">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _ConstructorBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _ConstructorBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_ConstructorBuilder::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="ce323-310">The type information to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-310">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="ce323-311">The locale identifier for the type information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-311">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="ce323-312">Receives a pointer to the requested type information object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-312">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce323-313">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-313">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-314">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="ce323-314">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="ce323-315">Per altre informazioni sulle `IDispatch::GetTypeInfo`, consultare la MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="ce323-315">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="ce323-316">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-316">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _ConstructorBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _ConstructorBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_ConstructorBuilder::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="ce323-317">Points to a location that receives the number of type information interfaces provided by the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-317">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce323-318">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-318">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-319">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="ce323-319">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="ce323-320">Per altre informazioni sulle `IDispatch::GetTypeInfoCount`, consultare la MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="ce323-320">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="ce323-321">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-321">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _ConstructorBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _ConstructorBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_ConstructorBuilder::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="ce323-322">Identifies the member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-322">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="ce323-323">Reserved for future use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-323">Reserved for future use.</span>
          </span>
          <span data-ttu-id="ce323-324">Must be IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-324">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="ce323-325">The locale context in which to interpret arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-325">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="ce323-326">Flags describing the context of the call.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-326">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="ce323-327">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-327">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="ce323-328">Pointer to the location where the result is to be stored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-328">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="ce323-329">Pointer to a structure that contains exception information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-329">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="ce323-330">The index of the first argument that has an error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-330">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce323-331">Provides access to properties and methods exposed by an object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-331">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce323-332">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="ce323-332">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="ce323-333">Per altre informazioni sulle `IDispatch::Invoke`, consultare la MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="ce323-333">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="ce323-334">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-334">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="constructorBuilder.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce323-335">Returns this <see cref="T:System.Reflection.Emit.ConstructorBuilder" /> instance as a <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-335">Returns this <see cref="T:System.Reflection.Emit.ConstructorBuilder" /> instance as a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce323-336">Returns a <see cref="T:System.String" /> containing the name, attributes, and exceptions of this constructor, followed by the current Microsoft intermediate language (MSIL) stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce323-336">Returns a <see cref="T:System.String" /> containing the name, attributes, and exceptions of this constructor, followed by the current Microsoft intermediate language (MSIL) stream.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>