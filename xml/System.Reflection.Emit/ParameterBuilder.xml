<Type Name="ParameterBuilder" FullName="System.Reflection.Emit.ParameterBuilder">
  <TypeSignature Language="C#" Value="public class ParameterBuilder : System.Runtime.InteropServices._ParameterBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit ParameterBuilder extends System.Object implements class System.Runtime.InteropServices._ParameterBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.ParameterBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class ParameterBuilder&#xA;Implements _ParameterBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParameterBuilder : System::Runtime::InteropServices::_ParameterBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._ParameterBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._ParameterBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a1806-101">Crea o associa informazioni sui parametri.</span><span class="sxs-lookup"><span data-stu-id="a1806-101">Creates or associates parameter information.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1806-102">Attributi dei parametri devono essere coerenti con la firma del metodo.</span><span class="sxs-lookup"><span data-stu-id="a1806-102">Parameter attributes need to consistent with the method signature.</span></span> <span data-ttu-id="a1806-103">Se si specifica `Out` gli attributi per un parametro, è necessario assicurarsi che il tipo di tale parametro di metodo è un `ByRef` tipo.</span><span class="sxs-lookup"><span data-stu-id="a1806-103">If you specify `Out` attributes for a parameter, you should ensure that the type of that method parameter is a `ByRef` type.</span></span>  
  
 <span data-ttu-id="a1806-104">Alcuni <xref:System.Reflection.Emit.ParameterBuilder> attributi richiedono la chiamata a <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A> con parametri validi in Microsoft intermedio language (MSIL) per un funzionamento corretto in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="a1806-104">Some <xref:System.Reflection.Emit.ParameterBuilder> attributes require that you call <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A> with viable parameters in order for the Microsoft intermediate language (MSIL) to work correctly at runtime.</span></span> <span data-ttu-id="a1806-105">Ad esempio, se si definisce un <xref:System.Reflection.Emit.ParameterBuilder> con ParameterAttributes. out per il parametro 1 di un `MethodBuilder`, quindi il parametro 1 di <xref:System.Reflection.Emit.MethodBuilder> deve essere un riferimento, ad esempio Type. GetType ("System. String &"), anziché Type.</span><span class="sxs-lookup"><span data-stu-id="a1806-105">For example, if you define a <xref:System.Reflection.Emit.ParameterBuilder> with ParameterAttributes.Out for parameter 1 of a `MethodBuilder`, then parameter 1 of <xref:System.Reflection.Emit.MethodBuilder> must be a reference such as Type.GetType("System.String&"), rather than Type.GetType("System.String").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1806-106">Nell'esempio seguente viene illustrato come creare un metodo dinamico con un parametro passato per riferimento tramite `ParameterBuilder`.</span><span class="sxs-lookup"><span data-stu-id="a1806-106">The following example demonstrates how to create a dynamic method with a parameter passed by reference using `ParameterBuilder`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.ParameterBuilder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.ParameterBuilder Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.ParameterBuilder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.ParameterBuilder Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.ParameterBuilder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.ParameterBuilder Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public virtual int Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ParameterBuilder.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Attributes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Attributes { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1806-107">Recupera gli attributi per questo parametro.</span><span class="sxs-lookup"><span data-stu-id="a1806-107">Retrieves the attributes for this parameter.</span></span></summary>
        <value><span data-ttu-id="a1806-108">Sola lettura.</span><span class="sxs-lookup"><span data-stu-id="a1806-108">Read-only.</span></span> <span data-ttu-id="a1806-109">Recupera gli attributi per questo parametro.</span><span class="sxs-lookup"><span data-stu-id="a1806-109">Retrieves the attributes for this parameter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1806-110">I valori dell'attributo corrispondono ai valori del <xref:System.Reflection.ParameterAttributes> enumerazione.</span><span class="sxs-lookup"><span data-stu-id="a1806-110">The values of the attribute correspond to the values of the <xref:System.Reflection.ParameterAttributes> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetToken">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Emit.ParameterToken GetToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Reflection.Emit.ParameterToken GetToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ParameterBuilder.GetToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetToken () As ParameterToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Emit::ParameterToken GetToken();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ParameterToken</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1806-111">Recupera il token per questo parametro.</span><span class="sxs-lookup"><span data-stu-id="a1806-111">Retrieves the token for this parameter.</span></span></summary>
        <returns><span data-ttu-id="a1806-112">Restituisce il token per questo parametro.</span><span class="sxs-lookup"><span data-stu-id="a1806-112">Returns the token for this parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIn">
      <MemberSignature Language="C#" Value="public bool IsIn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIn" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ParameterBuilder.IsIn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIn { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1806-113">Specifica se si tratta di un parametro di input.</span><span class="sxs-lookup"><span data-stu-id="a1806-113">Retrieves whether this is an input parameter.</span></span></summary>
        <value><span data-ttu-id="a1806-114">Sola lettura.</span><span class="sxs-lookup"><span data-stu-id="a1806-114">Read-only.</span></span> <span data-ttu-id="a1806-115">Specifica se si tratta di un parametro di input.</span><span class="sxs-lookup"><span data-stu-id="a1806-115">Retrieves whether this is an input parameter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1806-116">Questo metodo dipende da un flag di metadati facoltativi.</span><span class="sxs-lookup"><span data-stu-id="a1806-116">This method depends on an optional metadata flag.</span></span> <span data-ttu-id="a1806-117">Questo flag può essere inserito dai compilatori, ma i compilatori non sono obbligati a tale scopo.</span><span class="sxs-lookup"><span data-stu-id="a1806-117">This flag can be inserted by compilers, but the compilers are not obligated to do so.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOptional">
      <MemberSignature Language="C#" Value="public bool IsOptional { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOptional" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ParameterBuilder.IsOptional" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOptional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOptional { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1806-118">Specifica se si tratta di un parametro facoltativo.</span><span class="sxs-lookup"><span data-stu-id="a1806-118">Retrieves whether this parameter is optional.</span></span></summary>
        <value><span data-ttu-id="a1806-119">Sola lettura.</span><span class="sxs-lookup"><span data-stu-id="a1806-119">Read-only.</span></span> <span data-ttu-id="a1806-120">Specifica se si tratta di un parametro facoltativo.</span><span class="sxs-lookup"><span data-stu-id="a1806-120">Specifies whether this parameter is optional.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOut">
      <MemberSignature Language="C#" Value="public bool IsOut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOut" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ParameterBuilder.IsOut" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOut As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOut { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1806-121">Specifica se si tratta di un parametro di output.</span><span class="sxs-lookup"><span data-stu-id="a1806-121">Retrieves whether this parameter is an output parameter.</span></span></summary>
        <value><span data-ttu-id="a1806-122">Sola lettura.</span><span class="sxs-lookup"><span data-stu-id="a1806-122">Read-only.</span></span> <span data-ttu-id="a1806-123">Specifica se si tratta di un parametro di output.</span><span class="sxs-lookup"><span data-stu-id="a1806-123">Retrieves whether this parameter is an output parameter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ParameterBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1806-124">Recupera il nome di questo parametro.</span><span class="sxs-lookup"><span data-stu-id="a1806-124">Retrieves the name of this parameter.</span></span></summary>
        <value><span data-ttu-id="a1806-125">Sola lettura.</span><span class="sxs-lookup"><span data-stu-id="a1806-125">Read-only.</span></span> <span data-ttu-id="a1806-126">Recupera il nome di questo parametro.</span><span class="sxs-lookup"><span data-stu-id="a1806-126">Retrieves the name of this parameter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public virtual int Position { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ParameterBuilder.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Position { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1806-127">Recupera la posizione della firma per questo parametro.</span><span class="sxs-lookup"><span data-stu-id="a1806-127">Retrieves the signature position for this parameter.</span></span></summary>
        <value><span data-ttu-id="a1806-128">Sola lettura.</span><span class="sxs-lookup"><span data-stu-id="a1806-128">Read-only.</span></span> <span data-ttu-id="a1806-129">Recupera la posizione della firma per questo parametro.</span><span class="sxs-lookup"><span data-stu-id="a1806-129">Retrieves the signature position for this parameter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetConstant">
      <MemberSignature Language="C#" Value="public virtual void SetConstant (object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetConstant(object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetConstant (defaultValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetConstant(System::Object ^ defaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="defaultValue"><span data-ttu-id="a1806-130">Valore predefinito del parametro.</span><span class="sxs-lookup"><span data-stu-id="a1806-130">The default value of this parameter.</span></span></param>
        <summary><span data-ttu-id="a1806-131">Imposta il valore predefinito del parametro.</span><span class="sxs-lookup"><span data-stu-id="a1806-131">Sets the default value of the parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1806-132">`defaultValue` è limitato ai seguenti tipi: `Boolean`, `SByte`, `Int16`, `Int32`, `Int64`, `Byte`, `UInt16`, `UInt32`, `UInt64`, `Single`, `Double`, `DateTime` , `Char`, `String`, e `Enum`.</span><span class="sxs-lookup"><span data-stu-id="a1806-132">`defaultValue` is restricted to the following types: `Boolean`, `SByte`, `Int16`, `Int32`, `Int64`, `Byte`, `UInt16`, `UInt32`, `UInt64`, `Single`, `Double`, `DateTime`, `Char`, `String`, and `Enum`.</span></span> <span data-ttu-id="a1806-133">Se il tipo di parametro è un tipo riferimento, richiede la conformità a CLS `defaultValue` da `null`.</span><span class="sxs-lookup"><span data-stu-id="a1806-133">If the parameter type is a reference type, CLS compliance requires `defaultValue` to be `null`.</span></span> <span data-ttu-id="a1806-134">Tuttavia, a partire dal [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], `defaultValue` può essere non null per un tipo di riferimento, purché il valore può essere assegnato a tale tipo di riferimento.</span><span class="sxs-lookup"><span data-stu-id="a1806-134">However, starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], `defaultValue` can be non-null for a reference type as long as the value can be assigned to that reference type.</span></span> <span data-ttu-id="a1806-135">Ad esempio, un `Int32` valore può essere assegnato a un parametro di tipo <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="a1806-135">For example, an `Int32` value can be assigned to a parameter of type <xref:System.Object>.</span></span> <span data-ttu-id="a1806-136">Non è conforme a CLS, ma può essere utile negli scenari di interoperabilità.</span><span class="sxs-lookup"><span data-stu-id="a1806-136">This is not CLS-compliant, but it can be useful in interop scenarios.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a1806-137">Il parametro non è tra i tipi supportati.</span><span class="sxs-lookup"><span data-stu-id="a1806-137">The parameter is not one of the supported types.</span></span>  
  
 <span data-ttu-id="a1806-138">oppure</span><span class="sxs-lookup"><span data-stu-id="a1806-138">-or-</span></span>  
  
 <span data-ttu-id="a1806-139">Il tipo di <paramref name="defaultValue" /> non corrisponde al tipo del parametro.</span><span class="sxs-lookup"><span data-stu-id="a1806-139">The type of <paramref name="defaultValue" /> does not match the type of the parameter.</span></span>  
  
 <span data-ttu-id="a1806-140">oppure</span><span class="sxs-lookup"><span data-stu-id="a1806-140">-or-</span></span>  
  
 <span data-ttu-id="a1806-141">Il tipo del parametro è <see cref="T:System.Object" /> o un altro tipo di riferimento, <paramref name="defaultValue" /> non è <see langword="null" /> e il valore non può essere assegnato al tipo di riferimento.</span><span class="sxs-lookup"><span data-stu-id="a1806-141">The parameter is of type <see cref="T:System.Object" /> or other reference type, <paramref name="defaultValue" /> is not <see langword="null" />, and the value cannot be assigned to the reference type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1806-142">Imposta un attributo personalizzato.</span><span class="sxs-lookup"><span data-stu-id="a1806-142">Sets a custom attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.Emit.CustomAttributeBuilder customBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (customBuilder As CustomAttributeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::Emit::CustomAttributeBuilder ^ customBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
      </Parameters>
      <Docs>
        <param name="customBuilder"><span data-ttu-id="a1806-143">Un'istanza di una classe helper per definire l'attributo personalizzato.</span><span class="sxs-lookup"><span data-stu-id="a1806-143">An instance of a helper class to define the custom attribute.</span></span></param>
        <summary><span data-ttu-id="a1806-144">Impostare un attributo personalizzato usando un generatore di attributi personalizzati.</span><span class="sxs-lookup"><span data-stu-id="a1806-144">Set a custom attribute using a custom attribute builder.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a1806-145"><paramref name="con" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a1806-145"><paramref name="con" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.ConstructorInfo con, unsigned int8[] binaryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (con As ConstructorInfo, binaryAttribute As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Byte&gt; ^ binaryAttribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="binaryAttribute" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="con"><span data-ttu-id="a1806-146">Costruttore dell'attributo personalizzato.</span><span class="sxs-lookup"><span data-stu-id="a1806-146">The constructor for the custom attribute.</span></span></param>
        <param name="binaryAttribute"><span data-ttu-id="a1806-147">BLOB di byte che rappresenta gli attributi.</span><span class="sxs-lookup"><span data-stu-id="a1806-147">A byte blob representing the attributes.</span></span></param>
        <summary><span data-ttu-id="a1806-148">Imposta un attributo personalizzato usando un BLOB di attributi personalizzati specificato.</span><span class="sxs-lookup"><span data-stu-id="a1806-148">Set a custom attribute using a specified custom attribute blob.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1806-149">Vedere le specifiche dei metadati nella documentazione di specifiche ECMA Partition II per informazioni dettagliate su come formattare `binaryAttribute`.</span><span class="sxs-lookup"><span data-stu-id="a1806-149">See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`.</span></span> <span data-ttu-id="a1806-150">La documentazione è disponibile online; vedere [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) (ECMA C# e standard di Common Language Infrastructure) in MSDN e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web internazionale Ecma.</span><span class="sxs-lookup"><span data-stu-id="a1806-150">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a1806-151"><paramref name="con" /> o <paramref name="binaryAttribute" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a1806-151"><paramref name="con" /> or <paramref name="binaryAttribute" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetMarshal">
      <MemberSignature Language="C#" Value="public virtual void SetMarshal (System.Reflection.Emit.UnmanagedMarshal unmanagedMarshal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMarshal(class System.Reflection.Emit.UnmanagedMarshal unmanagedMarshal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ParameterBuilder.SetMarshal(System.Reflection.Emit.UnmanagedMarshal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetMarshal(System::Reflection::Emit::UnmanagedMarshal ^ unmanagedMarshal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("An alternate API is available: Emit the MarshalAs custom attribute instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedMarshal" Type="System.Reflection.Emit.UnmanagedMarshal" />
      </Parameters>
      <Docs>
        <param name="unmanagedMarshal"><span data-ttu-id="a1806-152">Informazioni di marshalling per questo parametro.</span><span class="sxs-lookup"><span data-stu-id="a1806-152">The marshaling information for this parameter.</span></span></param>
        <summary><span data-ttu-id="a1806-153">Specifica il marshalling per questo parametro.</span><span class="sxs-lookup"><span data-stu-id="a1806-153">Specifies the marshaling for this parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1806-154">Questo metodo deve generare l'eccezione seguente, ma attualmente non:</span><span class="sxs-lookup"><span data-stu-id="a1806-154">This method should throw the following exception but currently does not:</span></span>  
  
 <span data-ttu-id="a1806-155"><xref:System.InvalidOperationException> Se il tipo contenitore è stato creato utilizzando TypeBuilder.</span><span class="sxs-lookup"><span data-stu-id="a1806-155"><xref:System.InvalidOperationException> if the containing type has been created using TypeBuilder.CreateType().</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a1806-156"><paramref name="unmanagedMarshal" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a1806-156"><paramref name="unmanagedMarshal" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ParameterBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _ParameterBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ParameterBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _ParameterBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ParameterBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_ParameterBuilder::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ParameterBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="a1806-157">Riservato per utilizzi futuri.</span><span class="sxs-lookup"><span data-stu-id="a1806-157">Reserved for future use.</span></span> <span data-ttu-id="a1806-158">Deve essere IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="a1806-158">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="a1806-159">Matrice di nomi passata di cui eseguire il mapping.</span><span class="sxs-lookup"><span data-stu-id="a1806-159">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="a1806-160">Conteggio dei nomi di cui eseguire il mapping.</span><span class="sxs-lookup"><span data-stu-id="a1806-160">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="a1806-161">Contesto delle impostazioni locali in cui interpretare i nomi.</span><span class="sxs-lookup"><span data-stu-id="a1806-161">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="a1806-162">Matrice allocata dal chiamante che riceve gli ID corrispondenti ai nomi.</span><span class="sxs-lookup"><span data-stu-id="a1806-162">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="a1806-163">Esegue il mapping di un set di nomi a un set corrispondente di ID dispatch.</span><span class="sxs-lookup"><span data-stu-id="a1806-163">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1806-164">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="a1806-164">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a1806-165">Per ulteriori informazioni su `IDispatch::GetIDsOfNames`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="a1806-165">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a1806-166">Il metodo viene chiamato ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c>.</span><span class="sxs-lookup"><span data-stu-id="a1806-166">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ParameterBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _ParameterBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ParameterBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _ParameterBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ParameterBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_ParameterBuilder::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ParameterBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="a1806-167">Informazioni sul tipo da restituire.</span><span class="sxs-lookup"><span data-stu-id="a1806-167">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="a1806-168">Identificatore delle impostazioni locali per le informazioni sul tipo.</span><span class="sxs-lookup"><span data-stu-id="a1806-168">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="a1806-169">Riceve un puntatore all'oggetto relativo alle informazioni sul tipo richiesto.</span><span class="sxs-lookup"><span data-stu-id="a1806-169">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="a1806-170">Recupera le informazioni sul tipo relative a un oggetto che può quindi essere usato per ottenere informazioni sul tipo relative a un'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a1806-170">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1806-171">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="a1806-171">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a1806-172">Per ulteriori informazioni su `IDispatch::GetTypeInfo`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="a1806-172">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a1806-173">Il metodo viene chiamato ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c>.</span><span class="sxs-lookup"><span data-stu-id="a1806-173">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ParameterBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _ParameterBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ParameterBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _ParameterBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ParameterBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_ParameterBuilder::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ParameterBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="a1806-174">Punta a una posizione che riceve il numero di interfacce di informazioni sul tipo fornite dall'oggetto.</span><span class="sxs-lookup"><span data-stu-id="a1806-174">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="a1806-175">Recupera il numero delle interfacce di informazioni sul tipo fornite da un oggetto (0 o 1).</span><span class="sxs-lookup"><span data-stu-id="a1806-175">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1806-176">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="a1806-176">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a1806-177">Per ulteriori informazioni su `IDispatch::GetTypeInfoCount`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="a1806-177">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a1806-178">Il metodo viene chiamato ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c>.</span><span class="sxs-lookup"><span data-stu-id="a1806-178">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ParameterBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _ParameterBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ParameterBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _ParameterBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ParameterBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_ParameterBuilder::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ParameterBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="a1806-179">Identifica il membro.</span><span class="sxs-lookup"><span data-stu-id="a1806-179">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="a1806-180">Riservato per utilizzi futuri.</span><span class="sxs-lookup"><span data-stu-id="a1806-180">Reserved for future use.</span></span> <span data-ttu-id="a1806-181">Deve essere IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="a1806-181">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="a1806-182">Contesto di impostazioni locali all'interno del quale devono essere interpretati gli argomenti.</span><span class="sxs-lookup"><span data-stu-id="a1806-182">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="a1806-183">Flag che descrivono il contesto della chiamata.</span><span class="sxs-lookup"><span data-stu-id="a1806-183">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="a1806-184">Puntatore a una struttura contenente una matrice di argomenti, una matrice di DISPID per argomenti denominati e i conteggi del numero di elementi nelle matrici.</span><span class="sxs-lookup"><span data-stu-id="a1806-184">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="a1806-185">Puntatore alla posizione in cui deve essere archiviato il risultato.</span><span class="sxs-lookup"><span data-stu-id="a1806-185">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="a1806-186">Puntatore a una struttura contenente informazioni sull'eccezione.</span><span class="sxs-lookup"><span data-stu-id="a1806-186">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="a1806-187">Indice del primo argomento che contiene un errore.</span><span class="sxs-lookup"><span data-stu-id="a1806-187">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="a1806-188">Fornisce l'accesso a proprietà e metodi esposti da un oggetto.</span><span class="sxs-lookup"><span data-stu-id="a1806-188">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1806-189">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="a1806-189">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a1806-190">Per ulteriori informazioni su `IDispatch::Invoke`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="a1806-190">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a1806-191">Il metodo viene chiamato ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c>.</span><span class="sxs-lookup"><span data-stu-id="a1806-191">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>