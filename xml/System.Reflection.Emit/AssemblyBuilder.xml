<Type Name="AssemblyBuilder" FullName="System.Reflection.Emit.AssemblyBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d001b909d723aab64ee7a512c441007aa82727d4" />
    <Meta Name="ms.sourcegitcommit" Value="29c771f79cf4eac4f49e5fae5f1aa8b457acf146" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/21/2018" />
    <Meta Name="ms.locfileid" Value="36298856" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AssemblyBuilder : System.Reflection.Assembly, System.Runtime.InteropServices._AssemblyBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit AssemblyBuilder extends System.Reflection.Assembly implements class System.Runtime.InteropServices._AssemblyBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.AssemblyBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssemblyBuilder&#xA;Inherits Assembly&#xA;Implements _AssemblyBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyBuilder sealed : System::Reflection::Assembly, System::Runtime::InteropServices::_AssemblyBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.Assembly</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._AssemblyBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._AssemblyBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="85734-101">Definisce e rappresenta un assembly dinamico.</span>
      <span class="sxs-lookup">
        <span data-stu-id="85734-101">Defines and represents a dynamic assembly.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-102">Un assembly dinamico è un assembly creato utilizzando le API di Reflection Emit.</span><span class="sxs-lookup"><span data-stu-id="85734-102">A dynamic assembly is an assembly that is created using the Reflection Emit APIs.</span></span> <span data-ttu-id="85734-103">I moduli dinamici nell'assembly vengono salvati quando viene salvato l'assembly dinamico usando il <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="85734-103">The dynamic modules in the assembly are saved when the dynamic assembly is saved using the <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> method.</span></span> <span data-ttu-id="85734-104">Per generare un file eseguibile di <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> metodo deve essere chiamato per identificare il metodo che rappresenta il punto di ingresso dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="85734-104">To generate an executable, the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method must be called to identify the method that is the entry point to the assembly.</span></span> <span data-ttu-id="85734-105">Gli assembly vengono salvati come DLL per impostazione predefinita, a meno che il <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> metodo richiede la generazione di un'applicazione console o un'applicazione basata su Windows.</span><span class="sxs-lookup"><span data-stu-id="85734-105">Assemblies are saved as DLLs by default, unless the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method requests the generation of a console application or a Windows-based application.</span></span>  
  
 <span data-ttu-id="85734-106">Se un assembly dinamico contiene più di un modulo dinamico, nome del file manifesto dell'assembly deve corrispondere al nome del modulo che viene specificato come primo argomento per il <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="85734-106">If a dynamic assembly contains more than one dynamic module, the assembly's manifest file name should match the module's name that is specified as the first argument to the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> method.</span></span>  
  
 <span data-ttu-id="85734-107">Alcuni metodi sulla base <xref:System.Reflection.Assembly> classe, ad esempio `GetModules` e `GetLoadedModules`, non funzionerà correttamente quando viene chiamato da <xref:System.Reflection.Emit.AssemblyBuilder> oggetti.</span><span class="sxs-lookup"><span data-stu-id="85734-107">Some methods on the base <xref:System.Reflection.Assembly> class, such as `GetModules` and `GetLoadedModules`, will not work correctly when called from <xref:System.Reflection.Emit.AssemblyBuilder> objects.</span></span> <span data-ttu-id="85734-108">È possibile caricare l'assembly dinamico definito e chiamare i metodi nell'assembly caricato.</span><span class="sxs-lookup"><span data-stu-id="85734-108">You can load the defined dynamic assembly and call the methods on the loaded assembly.</span></span> <span data-ttu-id="85734-109">Ad esempio, per garantire che i moduli delle risorse sono inclusi nell'elenco dei moduli restituito, chiamare `GetModules` su caricato <xref:System.Reflection.Assembly> oggetto.</span><span class="sxs-lookup"><span data-stu-id="85734-109">For example, to ensure that resource modules are included in the returned module list, call `GetModules` on the loaded <xref:System.Reflection.Assembly> object.</span></span>  
  
 <span data-ttu-id="85734-110">La firma di un assembly dinamico usando <xref:System.Reflection.AssemblyName.KeyPair%2A> viene applicata solo l'assembly viene salvato su disco.</span><span class="sxs-lookup"><span data-stu-id="85734-110">The signing of a dynamic assembly using <xref:System.Reflection.AssemblyName.KeyPair%2A> is not effective until the assembly is saved to disk.</span></span> <span data-ttu-id="85734-111">In tal caso, i nomi sicuri non funzionerà con gli assembly dinamici temporanei.</span><span class="sxs-lookup"><span data-stu-id="85734-111">So, strong names will not work with transient dynamic assemblies.</span></span>  
  
 <span data-ttu-id="85734-112">Per ottenere un <xref:System.Reflection.Emit.AssemblyBuilder> oggetto, usare il <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="85734-112">To get an <xref:System.Reflection.Emit.AssemblyBuilder> object, use the <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType> method.</span></span>  
  
## <a name="reflection-emit-dynamic-assembly-scenarios"></a><span data-ttu-id="85734-113">Assembly dinamico scenari della reflection emit</span><span class="sxs-lookup"><span data-stu-id="85734-113">Reflection emit dynamic assembly scenarios</span></span>  
 <span data-ttu-id="85734-114">Di seguito sono illustrati alcuni aspetti da considerare quando si utilizza la <xref:System.Reflection.Emit.AssemblyBuilder> classe per creare assembly dinamici.</span><span class="sxs-lookup"><span data-stu-id="85734-114">The following are some things to consider when using the <xref:System.Reflection.Emit.AssemblyBuilder> class to create dynamic assemblies.</span></span>  
  
### <a name="dynamic-modules"></a><span data-ttu-id="85734-115">Moduli dinamici</span><span class="sxs-lookup"><span data-stu-id="85734-115">Dynamic modules</span></span>  
 <span data-ttu-id="85734-116">La reflection emit supporta la creazione di moduli dinamici definiti in assembly dinamici.</span><span class="sxs-lookup"><span data-stu-id="85734-116">Reflection emit supports the creation of dynamic modules defined in dynamic assemblies.</span></span> <span data-ttu-id="85734-117">Un modulo dinamico creato in un assembly dinamico può essere temporaneo o persistente.</span><span class="sxs-lookup"><span data-stu-id="85734-117">A dynamic module created in a dynamic assembly can be transient or persistable.</span></span>  
  
### <a name="restrictions-on-type-references"></a><span data-ttu-id="85734-118">Restrizioni per i riferimenti di tipo</span><span class="sxs-lookup"><span data-stu-id="85734-118">Restrictions on type references</span></span>  
 <span data-ttu-id="85734-119">Gli assembly possono fare riferimento a tipi definiti in un altro assembly.</span><span class="sxs-lookup"><span data-stu-id="85734-119">Assemblies can reference types defined in another assembly.</span></span> <span data-ttu-id="85734-120">Un assembly dinamico temporaneo in modo sicuro può fare riferimento a tipi definiti in un altro assembly dinamico temporaneo, un assembly dinamico persistente o un assembly statico.</span><span class="sxs-lookup"><span data-stu-id="85734-120">A transient dynamic assembly can safely reference types defined in another transient dynamic assembly, a persistable dynamic assembly, or a static assembly.</span></span> <span data-ttu-id="85734-121">Tuttavia, common language runtime non consente un modulo dinamico persistente fare riferimento a un tipo definito in un modulo dinamico temporaneo.</span><span class="sxs-lookup"><span data-stu-id="85734-121">However, the common language runtime does not allow a persistable dynamic module to reference a type defined in a transient dynamic module.</span></span> <span data-ttu-id="85734-122">Infatti, quando il modulo dinamico persistente viene caricato dopo essere stato salvato su disco, il runtime non è possibile risolvere i riferimenti ai tipi definiti nel modulo dinamico temporaneo.</span><span class="sxs-lookup"><span data-stu-id="85734-122">This is because when the persisted dynamic module is loaded after being saved to disk, the runtime cannot resolve the references to types defined in the transient dynamic module.</span></span>  
  
### <a name="restrictions-on-emitting-to-remote-application-domains"></a><span data-ttu-id="85734-123">Restrizioni alla creazione di domini applicazione remota</span><span class="sxs-lookup"><span data-stu-id="85734-123">Restrictions on emitting to remote application domains</span></span>  
 <span data-ttu-id="85734-124">Alcuni scenari richiedono un assembly dinamico creato e l'esecuzione in un dominio applicazione remota.</span><span class="sxs-lookup"><span data-stu-id="85734-124">Some scenarios require a dynamic assembly to be created and executed in a remote application domain.</span></span> <span data-ttu-id="85734-125">La reflection emit non consente un assembly dinamico essere inviati direttamente a un dominio applicazione remota.</span><span class="sxs-lookup"><span data-stu-id="85734-125">Reflection emit does not allow a dynamic assembly to be emitted directly to a remote application domain.</span></span> <span data-ttu-id="85734-126">La soluzione viene creato l'assembly dinamico nel dominio applicazione corrente, salvare l'assembly dinamico creato su disco e quindi caricare l'assembly dinamico nel dominio applicazione remota.</span><span class="sxs-lookup"><span data-stu-id="85734-126">The solution is to emit the dynamic assembly in the current application domain, save the emitted dynamic assembly to disk, and then load the dynamic assembly into the remote application domain.</span></span>  
  
### <a name="dynamic-assembly-access-modes"></a><span data-ttu-id="85734-127">Modalità di accesso assembly dinamico</span><span class="sxs-lookup"><span data-stu-id="85734-127">Dynamic assembly access modes</span></span>  
 <span data-ttu-id="85734-128">È possibile creare assembly dinamici mediante una delle modalità di accesso seguenti:</span><span class="sxs-lookup"><span data-stu-id="85734-128">Dynamic assemblies can be created using one of the following access modes:</span></span>  
  
-   <xref:System.Reflection.Emit.AssemblyBuilderAccess.Run?displayProperty=nameWithType>  
  
     <span data-ttu-id="85734-129">L'assembly dinamico, rappresentato da un <xref:System.Reflection.Emit.AssemblyBuilder> oggetto è temporaneo.</span><span class="sxs-lookup"><span data-stu-id="85734-129">The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is transient.</span></span> <span data-ttu-id="85734-130">L'assembly dinamico è utilizzabile solo per eseguire il codice generato.</span><span class="sxs-lookup"><span data-stu-id="85734-130">The dynamic assembly can only be used to execute the emitted code.</span></span>  
  
-   <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save?displayProperty=nameWithType>  
  
     <span data-ttu-id="85734-131">L'assembly dinamico, rappresentato da un <xref:System.Reflection.Emit.AssemblyBuilder> oggetto è persistente ma non può essere eseguito fino a quando il file salvato eseguibile portabile (PE) è stato caricato dal disco.</span><span class="sxs-lookup"><span data-stu-id="85734-131">The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is persistable but cannot be executed until the saved portable executable (PE) file has been loaded from disk.</span></span>  
  
-   <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave?displayProperty=nameWithType>  
  
     <span data-ttu-id="85734-132">L'assembly dinamico, rappresentato da un <xref:System.Reflection.Emit.AssemblyBuilder> dell'oggetto è persistente, ma possono essere eseguite anche prima e/o dopo che l'assembly viene salvato su disco.</span><span class="sxs-lookup"><span data-stu-id="85734-132">The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is persistable, but can also be executed before and/or after the assembly is saved to disk.</span></span>  
  
 <span data-ttu-id="85734-133">La modalità di accesso deve essere specificata fornendo appropriata <xref:System.Reflection.Emit.AssemblyBuilderAccess> valore nella chiamata al <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly%2A?displayProperty=nameWithType> metodo quando l'assembly dinamico è definito e non può essere modificato in un secondo momento.</span><span class="sxs-lookup"><span data-stu-id="85734-133">The access mode must be specified by providing the appropriate <xref:System.Reflection.Emit.AssemblyBuilderAccess> value in the call to the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly%2A?displayProperty=nameWithType> method when the dynamic assembly is defined and cannot be changed later.</span></span> <span data-ttu-id="85734-134">Per ottimizzare la rappresentazione interna dell'assembly, il runtime usa la modalità di accesso di un assembly dinamico.</span><span class="sxs-lookup"><span data-stu-id="85734-134">The runtime uses the access mode of a dynamic assembly to optimize the assembly's internal representation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85734-135">Esempio di codice seguente viene illustrato come definire un assembly dinamico con un modulo.</span><span class="sxs-lookup"><span data-stu-id="85734-135">The following code example shows how to define a dynamic assembly with one module.</span></span> <span data-ttu-id="85734-136">Il modulo nell'assembly di esempio contiene un solo tipo, `MyDynamicType`, che dispone di un campo privato, una proprietà che ottiene e imposta il campo privato, costruttori che inizializzano il campo privato e un metodo che moltiplica un numero fornito dall'utente per il campo privato il valore e restituisce il risultato.</span><span class="sxs-lookup"><span data-stu-id="85734-136">The module in the example assembly contains one type, `MyDynamicType`, which has a private field, a property that gets and sets the private field, constructors that initialize the private field, and a method that multiplies a user-supplied number by the private field value and returns the result.</span></span>  
  
 <span data-ttu-id="85734-137"><xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave?displayProperty=nameWithType> viene specificato quando viene creato l'assembly.</span><span class="sxs-lookup"><span data-stu-id="85734-137"><xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave?displayProperty=nameWithType> is specified when the assembly is created.</span></span> <span data-ttu-id="85734-138">Il codice assembly viene utilizzato immediatamente e l'assembly viene salvato anche su disco in modo che possono essere esaminata con [Ildasm.exe (Disassembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) o utilizzata in un altro programma.</span><span class="sxs-lookup"><span data-stu-id="85734-138">The assembly code is used immediately, and the assembly is also saved to disk so that it can be examined with [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) or used in another program.</span></span>  
  
 [!code-cpp[AssemblyBuilderClass#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilderClass/cpp/24895.cpp#1)]
 [!code-csharp[AssemblyBuilderClass#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilderClass/cs/24895.cs#1)]
 [!code-vb[AssemblyBuilderClass#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilderClass/vb/24895.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.ReflectionPermission">
      <span data-ttu-id="85734-139">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="85734-139">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
      </span>
      <span data-ttu-id="85734-140">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="85734-140">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
      </span>
    </permission>
    <altmember cref="Overload:System.AppDomain.DefineDynamicAssembly" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddResourceFile">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85734-141">Aggiunge un file di risorse esistenti a questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-141">Adds an existing resource file to this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddResourceFile">
      <MemberSignature Language="C#" Value="public void AddResourceFile (string name, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResourceFile(string name, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResourceFile (name As String, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddResourceFile(System::String ^ name, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="85734-142">Nome logico della risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-142">The logical name of the resource.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="85734-143">Nome fisico del file (file con estensione resources) a cui è mappato il nome logico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-143">The physical file name (.resources file) to which the logical name is mapped.</span>
          </span>
          <span data-ttu-id="85734-144">Non deve includere un percorso. Il file deve trovarsi nella stessa directory dell'assembly a cui viene aggiunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-144">This should not include a path; the file must be in the same directory as the assembly to which it is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-145">Aggiunge un file di risorse esistenti a questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-145">Adds an existing resource file to this assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-146">`fileName` deve essere uguale a quello di qualsiasi altro modulo persistente, risorsa gestita autonoma o del file manifesto autonomo.</span><span class="sxs-lookup"><span data-stu-id="85734-146">`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.</span></span>  
  
 <span data-ttu-id="85734-147">Si presuppone che le risorse gestite nel file sono pubblici.</span><span class="sxs-lookup"><span data-stu-id="85734-147">The managed resources in the file are assumed to be public.</span></span>  
  
 <span data-ttu-id="85734-148">File di risorse specificato deve essere nella directory in cui verrà salvato l'assembly.</span><span class="sxs-lookup"><span data-stu-id="85734-148">The specified resource file must be in the directory where the assembly will be saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85734-149">A partire dal [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="85734-149">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="85734-150">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="85734-150">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85734-151">Esempio di codice riportato di seguito viene illustrato come collegare un file di risorse a un assembly creato in modo dinamico, utilizzando `AddResourceFile`.</span><span class="sxs-lookup"><span data-stu-id="85734-151">The following code sample demonstrates how to attach a resource file to a dynamically created assembly, using `AddResourceFile`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85734-152">L'oggetto <paramref name="name" /> è stato definito in precedenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-152">
              <paramref name="name" /> has been previously defined.</span>
          </span>
          <span data-ttu-id="85734-153">- oppure - C'è un altro file nell'assembly denominato <paramref name="fileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-153">-or-  There is another file in the assembly named <paramref name="fileName" />.</span>
          </span>
          <span data-ttu-id="85734-154">- oppure - La lunghezza di <paramref name="name" /> è zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-154">-or-  The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="85734-155">- oppure - La lunghezza di <paramref name="fileName" /> è zero oppure <paramref name="fileName" /> include un percorso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-155">-or-  The length of <paramref name="fileName" /> is zero, or if <paramref name="fileName" /> includes a path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85734-156">
            <paramref name="name" /> o <paramref name="fileName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-156">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="85734-157">Il file <paramref name="fileName" /> non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-157">The file <paramref name="fileName" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-158">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-158">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-159">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-159">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-160">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-160">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="85734-161">L'autorizzazione FileIOPermissionAccess. Read è necessaria per accedere al file di risorse <paramref name="resourceFileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-161">The FileIOPermissionAccess.Read permission is needed to access the resource file <paramref name="resourceFileName" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AddResourceFile">
      <MemberSignature Language="C#" Value="public void AddResourceFile (string name, string fileName, System.Reflection.ResourceAttributes attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResourceFile(string name, string fileName, valuetype System.Reflection.ResourceAttributes attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String,System.Reflection.ResourceAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResourceFile (name As String, fileName As String, attribute As ResourceAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddResourceFile(System::String ^ name, System::String ^ fileName, System::Reflection::ResourceAttributes attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="85734-162">Nome logico della risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-162">The logical name of the resource.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="85734-163">Nome fisico del file (file con estensione resources) a cui è mappato il nome logico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-163">The physical file name (.resources file) to which the logical name is mapped.</span>
          </span>
          <span data-ttu-id="85734-164">Non deve includere un percorso. Il file deve trovarsi nella stessa directory dell'assembly a cui viene aggiunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-164">This should not include a path; the file must be in the same directory as the assembly to which it is added.</span>
          </span>
        </param>
        <param name="attribute">
          <span data-ttu-id="85734-165">Attributi della risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-165">The resource attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-166">Aggiunge un file di risorse esistenti a questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-166">Adds an existing resource file to this assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-167">`fileName` deve essere uguale a quello di qualsiasi altro modulo persistente, risorsa gestita autonoma o del file manifesto autonomo.</span><span class="sxs-lookup"><span data-stu-id="85734-167">`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.</span></span>  
  
 <span data-ttu-id="85734-168">È possibile specificare gli attributi per la risorsa gestita.</span><span class="sxs-lookup"><span data-stu-id="85734-168">Attributes can be specified for the managed resource.</span></span>  
  
 <span data-ttu-id="85734-169">File di risorse specificato deve essere nella directory in cui verrà salvato l'assembly.</span><span class="sxs-lookup"><span data-stu-id="85734-169">The specified resource file must be in the directory where the assembly will be saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85734-170">A partire dal [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="85734-170">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="85734-171">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="85734-171">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85734-172">Esempio di codice riportato di seguito viene illustrato come collegare un file di risorse a un assembly creato in modo dinamico, utilizzando `AddResourceFile`.</span><span class="sxs-lookup"><span data-stu-id="85734-172">The following code sample demonstrates how to attach a resource file to a dynamically created assembly, using `AddResourceFile`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85734-173">L'oggetto <paramref name="name" /> è stato definito in precedenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-173">
              <paramref name="name" /> has been previously defined.</span>
          </span>
          <span data-ttu-id="85734-174">- oppure - C'è un altro file nell'assembly denominato <paramref name="fileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-174">-or-  There is another file in the assembly named <paramref name="fileName" />.</span>
          </span>
          <span data-ttu-id="85734-175">- oppure - La lunghezza di <paramref name="name" /> è zero oppure la lunghezza di <paramref name="fileName" /> è zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-175">-or-  The length of <paramref name="name" /> is zero or if the length of <paramref name="fileName" /> is zero.</span>
          </span>
          <span data-ttu-id="85734-176">- oppure - <paramref name="fileName" /> include un percorso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-176">-or-  <paramref name="fileName" /> includes a path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85734-177">
            <paramref name="name" /> o <paramref name="fileName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-177">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="85734-178">Il file <paramref name="fileName" /> non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-178">If the file <paramref name="fileName" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-179">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-179">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-180">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-180">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-181">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-181">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="85734-182">L'autorizzazione FileIOPermissionAccess. Read è necessaria per accedere al file di risorse <paramref name="resourceFileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-182">The FileIOPermissionAccess.Read permission is needed to access the resource file <paramref name="resourceFileName" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public override string CodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CodeBase { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85734-183">Ottiene la posizione dell'assembly come specificata in origine, ad esempio in un oggetto <see cref="T:System.Reflection.AssemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-183">Gets the location of the assembly, as specified originally (such as in an <see cref="T:System.Reflection.AssemblyName" /> object).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85734-184">Posizione dell'assembly come specificata in origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-184">The location of the assembly, as specified originally.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-185">Per ottenere il percorso assoluto del file caricato che contiene manifesto, utilizzare il <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="85734-185">To get the absolute path to the loaded manifest-containing file, use the <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="85734-186">Questo metodo non è attualmente supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-186">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-187">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-187">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-188">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-188">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-189">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-189">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefinedTypes">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt; DefinedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.TypeInfo&gt; DefinedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.DefinedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DefinedTypes As IEnumerable(Of TypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ DefinedTypes { System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineDynamicAssembly">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85734-190">Definisce un assembly dinamico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-190">Defines a dynamic assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="85734-191">Nome dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-191">The name of the assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="85734-192">Diritti di accesso dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-192">The access rights of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-193">Definisce un assembly dinamico con il nome e la modalità di accesso specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-193">Defines a dynamic assembly that has the specified name and access rights.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-194">Oggetto che rappresenta il nuovo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-194">An object that represents the new assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.CustomAttributeBuilder&gt; assemblyAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Emit.CustomAttributeBuilder&gt; assemblyAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess, assemblyAttributes As IEnumerable(Of CustomAttributeBuilder)) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::Collections::Generic::IEnumerable&lt;System::Reflection::Emit::CustomAttributeBuilder ^&gt; ^ assemblyAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="assemblyAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.CustomAttributeBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="85734-195">Nome dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-195">The name of the assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="85734-196">Diritti di accesso dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-196">The access rights of the assembly.</span>
          </span>
        </param>
        <param name="assemblyAttributes">
          <span data-ttu-id="85734-197">Raccolta che contiene gli attributi dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-197">A collection that contains the attributes of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-198">Definisce un nuovo assembly con il nome, i diritti di accesso e gli attributi specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-198">Defines a new assembly that has the specified name, access rights, and attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-199">Oggetto che rappresenta il nuovo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-199">An object that represents the new assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineDynamicModule">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85734-200">Definisce un modulo dinamico nell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-200">Defines a dynamic module in this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="85734-201">Nome del modulo dinamico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-201">The name of the dynamic module.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-202">Definisce un modulo dinamico temporaneo denominato in questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-202">Defines a named transient dynamic module in this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-203">Oggetto <see cref="T:System.Reflection.Emit.ModuleBuilder" /> che rappresenta il modulo dinamico definito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-203">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> representing the defined dynamic module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-204">È possibile definire più moduli dinamici con lo stesso nome in un assembly.</span><span class="sxs-lookup"><span data-stu-id="85734-204">It is an error to define multiple dynamic modules with the same name in an assembly.</span></span>  
  
 <span data-ttu-id="85734-205">Il modulo dinamico definito è temporaneo.</span><span class="sxs-lookup"><span data-stu-id="85734-205">The defined dynamic module is transient.</span></span> <span data-ttu-id="85734-206">Il modulo dinamico non viene salvato, anche se l'assembly dinamico padre è stato creato con <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span><span class="sxs-lookup"><span data-stu-id="85734-206">The dynamic module is not saved, even if the parent dynamic assembly was created with <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85734-207">Per eliminare le ottimizzazioni durante il debug di moduli dinamici, applicare il <xref:System.Diagnostics.DebuggableAttribute> attributo all'assembly dinamico prima di chiamare <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="85734-207">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="85734-208">Creare un'istanza di <xref:System.Diagnostics.DebuggableAttribute> con il <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag e applicarla mediante il <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="85734-208">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="85734-209">L'attributo deve essere applicato all'assembly dinamico.</span><span class="sxs-lookup"><span data-stu-id="85734-209">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="85734-210">Non ha alcun effetto se applicato al modulo.</span><span class="sxs-lookup"><span data-stu-id="85734-210">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85734-211">A partire dal [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="85734-211">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="85734-212">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="85734-212">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85734-213">[Visual Basic, c#]</span><span class="sxs-lookup"><span data-stu-id="85734-213">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="85734-214">Esempio di codice seguente viene illustrato come creare un modulo dinamico temporaneo tramite `DefineDynamicModule`.</span><span class="sxs-lookup"><span data-stu-id="85734-214">The code example below demonstrates how to create a transient dynamic module using `DefineDynamicModule`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85734-215">
            <paramref name="name" /> inizia con uno spazio vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-215">
              <paramref name="name" /> begins with white space.</span>
          </span>
          <span data-ttu-id="85734-216">- oppure - La lunghezza di <paramref name="name" /> è zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-216">-or-  The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="85734-217">- oppure - La lunghezza di <paramref name="name" /> è maggiore della lunghezza massima definita nel sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-217">-or-  The length of <paramref name="name" /> is greater than the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85734-218">
            <paramref name="name" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-218">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-219">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-219">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="85734-220">L'assembly per il writer di simboli predefinito non può essere caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-220">The assembly for default symbol writer cannot be loaded.</span>
          </span>
          <span data-ttu-id="85734-221">- oppure- Non è possibile trovare il tipo che implementa l'interfaccia del writer di simboli predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-221">-or-  The type that implements the default symbol writer interface cannot be found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-222">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-222">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-223">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-223">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name, bool emitSymbolInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name, bool emitSymbolInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String, emitSymbolInfo As Boolean) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name, bool emitSymbolInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="emitSymbolInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="85734-224">Nome del modulo dinamico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-224">The name of the dynamic module.</span>
          </span>
        </param>
        <param name="emitSymbolInfo">
          <span data-ttu-id="85734-225">
            <see langword="true" /> se le informazioni sui simboli devono essere emesse; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-225">
              <see langword="true" /> if symbol information is to be emitted; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-226">Definisce un modulo dinamico temporaneo denominato nell'assembly e specifica se le informazioni sui simboli devono essere emesse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-226">Defines a named transient dynamic module in this assembly and specifies whether symbol information should be emitted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-227">Oggetto <see cref="T:System.Reflection.Emit.ModuleBuilder" /> che rappresenta il modulo dinamico definito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-227">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> representing the defined dynamic module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-228">È possibile definire più moduli dinamici con lo stesso nome in un assembly.</span><span class="sxs-lookup"><span data-stu-id="85734-228">It is an error to define multiple dynamic modules with the same name in an assembly.</span></span>  
  
 <span data-ttu-id="85734-229">Il modulo dinamico non viene salvato, anche se l'assembly dinamico padre è stato creato con <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span><span class="sxs-lookup"><span data-stu-id="85734-229">The dynamic module is not saved, even if the parent dynamic assembly was created with <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85734-230">Per eliminare le ottimizzazioni durante il debug di moduli dinamici, applicare il <xref:System.Diagnostics.DebuggableAttribute> attributo all'assembly dinamico prima di chiamare <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="85734-230">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="85734-231">Creare un'istanza di <xref:System.Diagnostics.DebuggableAttribute> con il <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag e applicarla mediante il <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="85734-231">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="85734-232">L'attributo deve essere applicato all'assembly dinamico.</span><span class="sxs-lookup"><span data-stu-id="85734-232">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="85734-233">Non ha alcun effetto se applicato al modulo.</span><span class="sxs-lookup"><span data-stu-id="85734-233">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85734-234">A partire dal [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="85734-234">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="85734-235">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="85734-235">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85734-236">[Visual Basic, c#]</span><span class="sxs-lookup"><span data-stu-id="85734-236">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="85734-237">Esempio di codice seguente viene illustrato come creare un modulo dinamico temporaneo tramite `DefineDynamicModule`, eliminando le informazioni sui simboli.</span><span class="sxs-lookup"><span data-stu-id="85734-237">The code example below demonstrates how to create a transient dynamic module using `DefineDynamicModule`, suppressing symbol information.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#2)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#2)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85734-238">
            <paramref name="name" /> inizia con uno spazio vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-238">
              <paramref name="name" /> begins with white space.</span>
          </span>
          <span data-ttu-id="85734-239">- oppure - La lunghezza di <paramref name="name" /> è zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-239">-or-  The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="85734-240">- oppure - La lunghezza di <paramref name="name" /> è maggiore della lunghezza massima definita nel sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-240">-or-  The length of <paramref name="name" /> is greater than the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85734-241">
            <paramref name="name" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-241">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="85734-242">L'assembly per il writer di simboli predefinito non può essere caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-242">The assembly for default symbol writer cannot be loaded.</span>
          </span>
          <span data-ttu-id="85734-243">- oppure- Non è possibile trovare il tipo che implementa l'interfaccia del writer di simboli predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-243">-or-  The type that implements the default symbol writer interface cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-244">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-244">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-245">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-245">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-246">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-246">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String, fileName As String) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="85734-247">Nome del modulo dinamico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-247">The name of the dynamic module.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="85734-248">Nome del file con cui deve essere salvato il modulo dinamico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-248">The name of the file to which the dynamic module should be saved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-249">Definisce un modulo dinamico persistente con il nome specificato che sarà salvato nel file specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-249">Defines a persistable dynamic module with the given name that will be saved to the specified file.</span>
          </span>
          <span data-ttu-id="85734-250">Non vengono emesse informazioni sui simboli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-250">No symbol information is emitted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-251">Oggetto <see cref="T:System.Reflection.Emit.ModuleBuilder" /> che rappresenta il modulo dinamico definito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-251">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> object representing the defined dynamic module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-252">Per definire un modulo dinamico persistente, è necessario che l'assembly creato con il <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> o <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attributo.</span><span class="sxs-lookup"><span data-stu-id="85734-252">To define a persistable dynamic module, this assembly needs to be created with the <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> or the <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribute.</span></span>  
  
 <span data-ttu-id="85734-253">Se si desidera che il modulo contiene il manifesto dell'assembly, `name` deve essere identico al nome dell'assembly (vale a dire il <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> proprietà del <xref:System.Reflection.AssemblyName> utilizzato per creare l'assembly dinamico) e `fileName` deve corrispondere al nome del file specificato quando si salva l'assembly.</span><span class="sxs-lookup"><span data-stu-id="85734-253">If you want the module to contain the assembly manifest, `name` should be the same as the name of the assembly (that is, the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property of the <xref:System.Reflection.AssemblyName> used to create the dynamic assembly) and `fileName` should be the same as the filename you specify when you save the assembly.</span></span>  
  
 <span data-ttu-id="85734-254">In un assembly con un solo modulo, il modulo deve contenere il manifesto dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="85734-254">In an assembly with only one module, that module should contain the assembly manifest.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85734-255">Per eliminare le ottimizzazioni durante il debug di moduli dinamici, applicare il <xref:System.Diagnostics.DebuggableAttribute> attributo all'assembly dinamico prima di chiamare <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="85734-255">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="85734-256">Creare un'istanza di <xref:System.Diagnostics.DebuggableAttribute> con il <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag e applicarla mediante il <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="85734-256">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="85734-257">L'attributo deve essere applicato all'assembly dinamico.</span><span class="sxs-lookup"><span data-stu-id="85734-257">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="85734-258">Non ha alcun effetto se applicato al modulo.</span><span class="sxs-lookup"><span data-stu-id="85734-258">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85734-259">A partire dal [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="85734-259">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="85734-260">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="85734-260">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85734-261">[Visual Basic, c#]</span><span class="sxs-lookup"><span data-stu-id="85734-261">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="85734-262">Esempio di codice seguente viene illustrato come creare un modulo dinamico persistente tramite `DefineDynamicModule`.</span><span class="sxs-lookup"><span data-stu-id="85734-262">The code example below demonstrates how to create a persistent dynamic module using `DefineDynamicModule`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#3)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#3)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85734-263">
            <paramref name="name" /> o <paramref name="fileName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-263">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85734-264">La lunghezza di <paramref name="name" /> o <paramref name="fileName" /> è zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-264">The length of <paramref name="name" /> or <paramref name="fileName" /> is zero.</span>
          </span>
          <span data-ttu-id="85734-265">- oppure - La lunghezza di <paramref name="name" /> è maggiore della lunghezza massima definita nel sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-265">-or-  The length of <paramref name="name" /> is greater than the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="85734-266">- oppure - <paramref name="fileName" /> contiene una specifica del percorso (ad esempio, un componente di directory).</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-266">-or-  <paramref name="fileName" /> contains a path specification (a directory component, for example).</span>
          </span>
          <span data-ttu-id="85734-267">- oppure - Si verifica un conflitto con il nome di un altro file che appartiene a questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-267">-or-  There is a conflict with the name of another file that belongs to this assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85734-268">Questo assembly è stato salvato in precedenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-268">This assembly has been previously saved.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="85734-269">Questo assembly è stato chiamato in un assembly dinamico con l'attributo <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-269">This assembly was called on a dynamic assembly with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" /> attribute.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-270">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-270">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="85734-271">L'assembly per il writer di simboli predefinito non può essere caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-271">The assembly for default symbol writer cannot be loaded.</span>
          </span>
          <span data-ttu-id="85734-272">- oppure- Non è possibile trovare il tipo che implementa l'interfaccia del writer di simboli predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-272">-or-  The type that implements the default symbol writer interface cannot be found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-273">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-273">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-274">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-274">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="85734-275">Scrivere = true oppure Append = true è necessario salvare il modulo</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-275">Write=true or Append=true is needed to save the module</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name, string fileName, bool emitSymbolInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name, string fileName, bool emitSymbolInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String, fileName As String, emitSymbolInfo As Boolean) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name, System::String ^ fileName, bool emitSymbolInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="emitSymbolInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="85734-276">Nome del modulo dinamico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-276">The name of the dynamic module.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="85734-277">Nome del file con cui deve essere salvato il modulo dinamico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-277">The name of the file to which the dynamic module should be saved.</span>
          </span>
        </param>
        <param name="emitSymbolInfo">
          <span data-ttu-id="85734-278">Se <see langword="true" />, le informazioni sui simboli vengono scritte usando il writer di simboli predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-278">If <see langword="true" />, symbolic information is written using the default symbol writer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-279">Definisce un modulo dinamico persistente, specificando il nome del modulo, il nome del file in cui verrà salvato il modulo e se le informazioni sui simboli devono essere generate usando il writer di simboli predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-279">Defines a persistable dynamic module, specifying the module name, the name of the file to which the module will be saved, and whether symbol information should be emitted using the default symbol writer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-280">Oggetto <see cref="T:System.Reflection.Emit.ModuleBuilder" /> che rappresenta il modulo dinamico definito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-280">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> object representing the defined dynamic module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-281">Per definire un modulo dinamico persistente, è necessario che l'assembly creato con il <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> o <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attributo.</span><span class="sxs-lookup"><span data-stu-id="85734-281">To define a persistable dynamic module, this assembly needs to be created with the <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> or the <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribute.</span></span>  
  
 <span data-ttu-id="85734-282">Se si desidera che il modulo contiene il manifesto dell'assembly, `name` deve essere identico al nome dell'assembly (vale a dire il <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> proprietà del <xref:System.Reflection.AssemblyName> utilizzato per creare l'assembly dinamico) e `fileName` deve corrispondere al nome del file specificato quando si salva l'assembly.</span><span class="sxs-lookup"><span data-stu-id="85734-282">If you want the module to contain the assembly manifest, `name` should be the same as the name of the assembly (that is, the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property of the <xref:System.Reflection.AssemblyName> used to create the dynamic assembly) and `fileName` should be the same as the filename you specify when you save the assembly.</span></span>  
  
 <span data-ttu-id="85734-283">In un assembly con un solo modulo, il modulo deve contenere il manifesto dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="85734-283">In an assembly with only one module, that module should contain the assembly manifest.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85734-284">Per eliminare le ottimizzazioni durante il debug di moduli dinamici, applicare il <xref:System.Diagnostics.DebuggableAttribute> attributo all'assembly dinamico prima di chiamare <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="85734-284">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="85734-285">Creare un'istanza di <xref:System.Diagnostics.DebuggableAttribute> con il <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag e applicarla mediante il <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="85734-285">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="85734-286">L'attributo deve essere applicato all'assembly dinamico.</span><span class="sxs-lookup"><span data-stu-id="85734-286">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="85734-287">Non ha alcun effetto se applicato al modulo.</span><span class="sxs-lookup"><span data-stu-id="85734-287">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85734-288">A partire dal [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="85734-288">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="85734-289">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="85734-289">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85734-290">[Visual Basic, c#]</span><span class="sxs-lookup"><span data-stu-id="85734-290">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="85734-291">Esempio di codice seguente viene illustrato come creare un modulo dinamico persistente con simboli tramite `DefineDynamicModule`.</span><span class="sxs-lookup"><span data-stu-id="85734-291">The code example below demonstrates how to create a persistent dynamic module with symbol emission using `DefineDynamicModule`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#4)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#4)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85734-292">
            <paramref name="name" /> o <paramref name="fileName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-292">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85734-293">La lunghezza di <paramref name="name" /> o <paramref name="fileName" /> è zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-293">The length of <paramref name="name" /> or <paramref name="fileName" /> is zero.</span>
          </span>
          <span data-ttu-id="85734-294">- oppure - La lunghezza di <paramref name="name" /> è maggiore della lunghezza massima definita nel sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-294">-or-  The length of <paramref name="name" /> is greater than the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="85734-295">- oppure - <paramref name="fileName" /> contiene una specifica del percorso (ad esempio, un componente di directory).</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-295">-or-  <paramref name="fileName" /> contains a path specification (a directory component, for example).</span>
          </span>
          <span data-ttu-id="85734-296">- oppure - Si verifica un conflitto con il nome di un altro file che appartiene a questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-296">-or-  There is a conflict with the name of another file that belongs to this assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85734-297">Questo assembly è stato salvato in precedenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-297">This assembly has been previously saved.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="85734-298">Questo assembly è stato chiamato in un assembly dinamico con l'attributo <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-298">This assembly was called on a dynamic assembly with the <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" /> attribute.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="85734-299">L'assembly per il writer di simboli predefinito non può essere caricato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-299">The assembly for default symbol writer cannot be loaded.</span>
          </span>
          <span data-ttu-id="85734-300">- oppure- Non è possibile trovare il tipo che implementa l'interfaccia del writer di simboli predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-300">-or-  The type that implements the default symbol writer interface cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-301">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-301">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-302">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-302">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-303">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-303">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="85734-304">Scrivere = true oppure Append = true è necessario salvare questo modulo</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-304">Write=true or Append=true is needed to save this module</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85734-305">Definisce una risorsa gestita autonoma per questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-305">Defines a standalone managed resource for this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineResource">
      <MemberSignature Language="C#" Value="public System.Resources.IResourceWriter DefineResource (string name, string description, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Resources.IResourceWriter DefineResource(string name, string description, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineResource (name As String, description As String, fileName As String) As IResourceWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Resources::IResourceWriter ^ DefineResource(System::String ^ name, System::String ^ description, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="85734-306">Nome logico della risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-306">The logical name of the resource.</span>
          </span>
        </param>
        <param name="description">
          <span data-ttu-id="85734-307">Descrizione testuale della risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-307">A textual description of the resource.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="85734-308">Nome fisico del file (file con estensione resources) a cui è mappato il nome logico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-308">The physical file name (.resources file) to which the logical name is mapped.</span>
          </span>
          <span data-ttu-id="85734-309">Non deve includere un percorso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-309">This should not include a path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-310">Definisce una risorsa gestita autonoma per questo assembly con l'attributo di risorsa pubblica predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-310">Defines a standalone managed resource for this assembly with the default public resource attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-311">Oggetto <see cref="T:System.Resources.ResourceWriter" /> per la risorsa specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-311">A <see cref="T:System.Resources.ResourceWriter" /> object for the specified resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-312">Singole risorse possono essere aggiunti con l'oggetto restituito <xref:System.Resources.ResourceWriter> chiamando <xref:System.Resources.ResourceWriter.AddResource%2A>.</span><span class="sxs-lookup"><span data-stu-id="85734-312">Fine grain resources can be added with the returned <xref:System.Resources.ResourceWriter> by calling <xref:System.Resources.ResourceWriter.AddResource%2A>.</span></span>  
  
 <span data-ttu-id="85734-313">`fileName` deve essere uguale a quello di qualsiasi altro modulo persistente, risorsa gestita autonoma o del file manifesto autonomo.</span><span class="sxs-lookup"><span data-stu-id="85734-313">`fileName` should not be the same as that of any other persistable module, stand-alone managed resource, or the stand-alone manifest file.</span></span>  
  
 <span data-ttu-id="85734-314">Il runtime chiama il <xref:System.Resources.ResourceWriter.Close%2A> metodo quando viene salvato l'assembly dinamico.</span><span class="sxs-lookup"><span data-stu-id="85734-314">The runtime calls the <xref:System.Resources.ResourceWriter.Close%2A> method when the dynamic assembly is saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85734-315">A partire dal [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="85734-315">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="85734-316">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="85734-316">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85734-317">L'esempio seguente usa il <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A> metodo per ottenere un writer di risorse.</span><span class="sxs-lookup"><span data-stu-id="85734-317">The following example uses the <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A> method to get a resource writer.</span></span> <span data-ttu-id="85734-318">L'esempio Usa il writer della risorsa per aggiungere tre stringhe di risorse.</span><span class="sxs-lookup"><span data-stu-id="85734-318">The example uses the resource writer to add three resource strings.</span></span>  
  
 [!code-cpp[AssemblyBuilder.DefineResource Example 2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder.DefineResource Example 2/CPP/assemblybuilder_defineresource.cpp#1)]
 [!code-csharp[AssemblyBuilder.DefineResource Example 2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder.DefineResource Example 2/CS/assemblybuilder_defineresource.cs#1)]
 [!code-vb[AssemblyBuilder.DefineResource Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder.DefineResource Example 2/VB/assemblybuilder_defineresource.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85734-319">L'oggetto <paramref name="name" /> è stato definito in precedenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-319">
              <paramref name="name" /> has been previously defined.</span>
          </span>
          <span data-ttu-id="85734-320">- oppure - C'è un altro file nell'assembly denominato <paramref name="fileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-320">-or-  There is another file in the assembly named <paramref name="fileName" />.</span>
          </span>
          <span data-ttu-id="85734-321">- oppure - La lunghezza di <paramref name="name" /> è zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-321">-or-  The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="85734-322">- oppure - La lunghezza di <paramref name="fileName" /> è zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-322">-or-  The length of <paramref name="fileName" /> is zero.</span>
          </span>
          <span data-ttu-id="85734-323">- oppure - <paramref name="fileName" /> include un percorso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-323">-or-  <paramref name="fileName" /> includes a path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85734-324">
            <paramref name="name" /> o <paramref name="fileName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-324">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-325">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-325">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-326">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-326">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-327">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-327">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="85734-328">Scrivere = true oppure Append = true</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-328">Write=true or Append=true</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineResource">
      <MemberSignature Language="C#" Value="public System.Resources.IResourceWriter DefineResource (string name, string description, string fileName, System.Reflection.ResourceAttributes attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Resources.IResourceWriter DefineResource(string name, string description, string fileName, valuetype System.Reflection.ResourceAttributes attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String,System.Reflection.ResourceAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineResource (name As String, description As String, fileName As String, attribute As ResourceAttributes) As IResourceWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Resources::IResourceWriter ^ DefineResource(System::String ^ name, System::String ^ description, System::String ^ fileName, System::Reflection::ResourceAttributes attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="85734-329">Nome logico della risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-329">The logical name of the resource.</span>
          </span>
        </param>
        <param name="description">
          <span data-ttu-id="85734-330">Descrizione testuale della risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-330">A textual description of the resource.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="85734-331">Nome fisico del file (file con estensione resources) a cui è mappato il nome logico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-331">The physical file name (.resources file) to which the logical name is mapped.</span>
          </span>
          <span data-ttu-id="85734-332">Non deve includere un percorso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-332">This should not include a path.</span>
          </span>
        </param>
        <param name="attribute">
          <span data-ttu-id="85734-333">Attributi della risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-333">The resource attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-334">Definisce una risorsa gestita autonoma per questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-334">Defines a standalone managed resource for this assembly.</span>
          </span>
          <span data-ttu-id="85734-335">È possibile specificare gli attributi per la risorsa gestita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-335">Attributes can be specified for the managed resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-336">Oggetto <see cref="T:System.Resources.ResourceWriter" /> per la risorsa specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-336">A <see cref="T:System.Resources.ResourceWriter" /> object for the specified resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-337">Singole risorse possono essere aggiunti con l'oggetto restituito <xref:System.Resources.ResourceWriter> chiamando <xref:System.Resources.ResourceWriter.AddResource%2A>.</span><span class="sxs-lookup"><span data-stu-id="85734-337">Fine-grain resources can be added with the returned <xref:System.Resources.ResourceWriter> by calling <xref:System.Resources.ResourceWriter.AddResource%2A>.</span></span>  
  
 <span data-ttu-id="85734-338">`fileName` deve essere uguale a quello di qualsiasi altro modulo persistente, risorsa gestita autonoma o del file manifesto autonomo.</span><span class="sxs-lookup"><span data-stu-id="85734-338">`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.</span></span>  
  
 <span data-ttu-id="85734-339">Il runtime chiama il <xref:System.Resources.ResourceWriter.Close%2A> metodo quando viene salvato l'assembly dinamico.</span><span class="sxs-lookup"><span data-stu-id="85734-339">The runtime calls the <xref:System.Resources.ResourceWriter.Close%2A> method when the dynamic assembly is saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85734-340">A partire dal [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="85734-340">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="85734-341">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="85734-341">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85734-342">
            <paramref name="name" /> è stato definito in precedenza o nell'assembly è contenuto un altro file denominato <paramref name="fileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-342">
              <paramref name="name" /> has been previously defined or if there is another file in the assembly named <paramref name="fileName" />.</span>
          </span>
          <span data-ttu-id="85734-343">- oppure - La lunghezza di <paramref name="name" /> è zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-343">-or-  The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="85734-344">- oppure - La lunghezza di <paramref name="fileName" /> è zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-344">-or-  The length of <paramref name="fileName" /> is zero.</span>
          </span>
          <span data-ttu-id="85734-345">- oppure - <paramref name="fileName" /> include un percorso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-345">-or-  <paramref name="fileName" /> includes a path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85734-346">
            <paramref name="name" /> o <paramref name="fileName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-346">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-347">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-347">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-348">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-348">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-349">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-349">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="85734-350">Scrivere = true oppure Append = true</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-350">Write=true or Append=true</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineUnmanagedResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85734-351">Definisce una risorsa non gestita per questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-351">Defines an unmanaged resource for this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineUnmanagedResource">
      <MemberSignature Language="C#" Value="public void DefineUnmanagedResource (byte[] resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineUnmanagedResource(unsigned int8[] resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineUnmanagedResource (resource As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineUnmanagedResource(cli::array &lt;System::Byte&gt; ^ resource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resource" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="resource">
          <span data-ttu-id="85734-352">BLOB opaco di byte che rappresenta la risorsa non gestita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-352">The opaque blob of bytes representing the unmanaged resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-353">Definisce una risorsa non gestita per questo assembly come BLOB opaco di byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-353">Defines an unmanaged resource for this assembly as an opaque blob of bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-354">Un assembly può essere associato solo a una risorsa non gestita.</span><span class="sxs-lookup"><span data-stu-id="85734-354">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="85734-355">Ciò significa che la chiamata <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> o <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> dopo che uno dei metodi è stato chiamato in precedenza genererà ArgumentException.</span><span class="sxs-lookup"><span data-stu-id="85734-355">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException being throw.</span></span> <span data-ttu-id="85734-356">Più risorse non gestite devono essere unite tramite uno strumento quale l'utilità Microsoft ResMerge (non fornita con common language runtime).</span><span class="sxs-lookup"><span data-stu-id="85734-356">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85734-357">Esempio di codice seguente crea e collega una matrice di byte che rappresenta una risorsa non gestita a un assembly dinamico tramite `DefineUnmanagedResource`.</span><span class="sxs-lookup"><span data-stu-id="85734-357">The following code sample creates and attaches an array of bytes representing an unmanaged resource to a dynamic assembly, using `DefineUnmanagedResource`.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineUnmanagedResource2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource2/CPP/assemblybuilder_defineunmanagedresource2.cpp#1)]
 [!code-csharp[AssemblyBuilder_DefineUnmanagedResource2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource2/CS/assemblybuilder_defineunmanagedresource2.cs#1)]
 [!code-vb[AssemblyBuilder_DefineUnmanagedResource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource2/VB/assemblybuilder_defineunmanagedresource2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85734-358">Una risorsa non gestita è stata definita in precedenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-358">An unmanaged resource was previously defined.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85734-359">
            <paramref name="resource" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-359">
              <paramref name="resource" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-360">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-360">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-361">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-361">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-362">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-362">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineUnmanagedResource">
      <MemberSignature Language="C#" Value="public void DefineUnmanagedResource (string resourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineUnmanagedResource(string resourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineUnmanagedResource (resourceFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineUnmanagedResource(System::String ^ resourceFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceFileName">
          <span data-ttu-id="85734-363">Nome del file di risorse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-363">The name of the resource file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-364">Definisce un file di risorse non gestite per l'assembly, dato il nome del file di risorse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-364">Defines an unmanaged resource file for this assembly given the name of the resource file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-365">Un assembly può essere associato solo a una risorsa non gestita.</span><span class="sxs-lookup"><span data-stu-id="85734-365">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="85734-366">Ciò significa che la chiamata <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> o <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> dopo che uno dei metodi è stato chiamato in precedenza verrà generata l'eccezione System. ArgumentException.</span><span class="sxs-lookup"><span data-stu-id="85734-366">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException.</span></span> <span data-ttu-id="85734-367">Più risorse non gestite devono essere unite tramite uno strumento quale l'utilità Microsoft ResMerge (non fornita con common language runtime).</span><span class="sxs-lookup"><span data-stu-id="85734-367">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85734-368">A partire dal [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="85734-368">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="85734-369">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="85734-369">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85734-370">Nell'esempio seguente viene illustrato come chiamare `DefineUnmanagedResource`, il passaggio di un file di risorse esterne.</span><span class="sxs-lookup"><span data-stu-id="85734-370">The example below demonstrates a call to `DefineUnmanagedResource`, passing an external resource file.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineUnmanagedResource#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource/CPP/assemblybuilder_defineunmanagedresource.cpp#3)]
 [!code-csharp[AssemblyBuilder_DefineUnmanagedResource#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource/CS/assemblybuilder_defineunmanagedresource.cs#3)]
 [!code-vb[AssemblyBuilder_DefineUnmanagedResource#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource/VB/assemblybuilder_defineunmanagedresource.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85734-371">Una risorsa non gestita è stata definita in precedenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-371">An unmanaged resource was previously defined.</span>
          </span>
          <span data-ttu-id="85734-372">- oppure - Il file <paramref name="resourceFileName" /> non è leggibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-372">-or-  The file <paramref name="resourceFileName" /> is not readable.</span>
          </span>
          <span data-ttu-id="85734-373">- oppure - <paramref name="resourceFileName" /> è la stringa vuota ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-373">-or-  <paramref name="resourceFileName" /> is the empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85734-374">
            <paramref name="resourceFileName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-374">
              <paramref name="resourceFileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="85734-375">
            <paramref name="resourceFileName" /> non trovata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-375">
              <paramref name="resourceFileName" /> is not found.</span>
          </span>
          <span data-ttu-id="85734-376">-oppure- <paramref name="resourceFileName" /> è una directory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-376">-or-  <paramref name="resourceFileName" /> is a directory.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-377">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-377">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-378">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-378">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-379">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-379">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="85734-380">L'autorizzazione FileIOPermissionAccess. Read è necessaria per accedere al file di risorse <paramref name="resourceFileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-380">The FileIOPermissionAccess.Read permission is needed to access the resource file <paramref name="resourceFileName" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineVersionInfoResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85734-381">Definisce una risorsa di informazioni sulla versione non gestita per questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-381">Defines an unmanaged version information resource for this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineVersionInfoResource">
      <MemberSignature Language="C#" Value="public void DefineVersionInfoResource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineVersionInfoResource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineVersionInfoResource ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineVersionInfoResource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85734-382">Definisce una risorsa di informazioni di versione non gestita usando le informazioni specificate nell'oggetto AssemblyName dell'assembly e gli attributi personalizzati dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-382">Defines an unmanaged version information resource using the information specified in the assembly's AssemblyName object and the assembly's custom attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-383">Un assembly può essere associato solo a una risorsa non gestita.</span><span class="sxs-lookup"><span data-stu-id="85734-383">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="85734-384">Ciò significa che la chiamata <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> o <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> dopo che uno dei metodi è stato chiamato in precedenza verrà generata l'eccezione System. ArgumentException.</span><span class="sxs-lookup"><span data-stu-id="85734-384">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException.</span></span> <span data-ttu-id="85734-385">Più risorse non gestite devono essere unite tramite uno strumento quale l'utilità Microsoft ResMerge (non fornita con il SDK di common language runtime).</span><span class="sxs-lookup"><span data-stu-id="85734-385">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime SDK).</span></span>  
  
 <span data-ttu-id="85734-386">Stringhe di argomenti vuoto vengono scritte come spazio singolo.</span><span class="sxs-lookup"><span data-stu-id="85734-386">Empty argument strings get written as a single space.</span></span> <span data-ttu-id="85734-387">Gli spazi vengono sostituiti dai caratteri null nelle stringhe di argomento.</span><span class="sxs-lookup"><span data-stu-id="85734-387">Spaces are substituted for null characters in the argument strings.</span></span>  
  
 <span data-ttu-id="85734-388">Le informazioni vengono derivate dal `AssemblyName` oggetto utilizzato per definire l'assembly dinamico.</span><span class="sxs-lookup"><span data-stu-id="85734-388">The information is inferred from the `AssemblyName` object used to define this dynamic assembly.</span></span> <span data-ttu-id="85734-389">Attributi personalizzati dell'assembly di eseguire l'override specificate nelle informazioni di `AssemblyName` oggetto.</span><span class="sxs-lookup"><span data-stu-id="85734-389">This assembly's custom attributes override information specified in the `AssemblyName` object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85734-390">A partire dal [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="85734-390">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="85734-391">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="85734-391">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85734-392">Nell'esempio seguente viene illustrato l'utilizzo di `DefineVersionInfoResource`.</span><span class="sxs-lookup"><span data-stu-id="85734-392">The example below illustrates the usage of `DefineVersionInfoResource`.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CPP/assemblybuilder_defineversioninforesource.cpp#1)]
 [!code-csharp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CS/assemblybuilder_defineversioninforesource.cs#1)]
 [!code-vb[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/VB/assemblybuilder_defineversioninforesource.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85734-393">Una risorsa di informazioni sulla versione non gestita è stata definita in precedenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-393">An unmanaged version information resource was previously defined.</span>
          </span>
          <span data-ttu-id="85734-394">- oppure - Le informazioni sulla versione non gestita hanno una dimensione eccessiva per essere persistenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-394">-or-  The unmanaged version information is too large to persist.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-395">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-395">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-396">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-396">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-397">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-397">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineVersionInfoResource">
      <MemberSignature Language="C#" Value="public void DefineVersionInfoResource (string product, string productVersion, string company, string copyright, string trademark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineVersionInfoResource(string product, string productVersion, string company, string copyright, string trademark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineVersionInfoResource (product As String, productVersion As String, company As String, copyright As String, trademark As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineVersionInfoResource(System::String ^ product, System::String ^ productVersion, System::String ^ company, System::String ^ copyright, System::String ^ trademark);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="product" Type="System.String" />
        <Parameter Name="productVersion" Type="System.String" />
        <Parameter Name="company" Type="System.String" />
        <Parameter Name="copyright" Type="System.String" />
        <Parameter Name="trademark" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="product">
          <span data-ttu-id="85734-398">Nome del prodotto con cui è distribuito questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-398">The name of the product with which this assembly is distributed.</span>
          </span>
        </param>
        <param name="productVersion">
          <span data-ttu-id="85734-399">Versione del prodotto con cui è distribuito questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-399">The version of the product with which this assembly is distributed.</span>
          </span>
        </param>
        <param name="company">
          <span data-ttu-id="85734-400">Nome della società che ha prodotto questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-400">The name of the company that produced this assembly.</span>
          </span>
        </param>
        <param name="copyright">
          <span data-ttu-id="85734-401">Descrive tutte le informazioni sul copyright, i marchi e i marchi registrati che si applicano a questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-401">Describes all copyright notices, trademarks, and registered trademarks that apply to this assembly.</span>
          </span>
          <span data-ttu-id="85734-402">Deve includere il testo completo di tutte le comunicazioni, i simboli legali, le date di copyright, i numeri dei marchi e così via.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-402">This should include the full text of all notices, legal symbols, copyright dates, trademark numbers, and so on.</span>
          </span>
          <span data-ttu-id="85734-403">In inglese questa stringa dovrebbe avere il formato "Copyright Microsoft Corp. 1990-2001".</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-403">In English, this string should be in the format "Copyright Microsoft Corp. 1990-2001".</span>
          </span>
        </param>
        <param name="trademark">
          <span data-ttu-id="85734-404">Descrive tutti marchi e i marchi registrati che si applicano a questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-404">Describes all trademarks and registered trademarks that apply to this assembly.</span>
          </span>
          <span data-ttu-id="85734-405">Deve includere il testo completo di tutte le comunicazioni, i simboli legali, i numeri dei marchi e così via.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-405">This should include the full text of all notices, legal symbols, trademark numbers, and so on.</span>
          </span>
          <span data-ttu-id="85734-406">In inglese questa stringa dovrebbe essere "Windows is a trademark of Microsoft Corporation".</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-406">In English, this string should be in the format "Windows is a trademark of Microsoft Corporation".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-407">Definisce una risorsa di informazioni sulla versione non gestita per questo assembly insieme alle specifiche date.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-407">Defines an unmanaged version information resource for this assembly with the given specifications.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-408">Un assembly può essere associato solo a una risorsa non gestita.</span><span class="sxs-lookup"><span data-stu-id="85734-408">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="85734-409">Ciò significa che la chiamata <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> o <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> dopo che uno dei metodi è stato chiamato in precedenza verrà generata l'eccezione System. ArgumentException.</span><span class="sxs-lookup"><span data-stu-id="85734-409">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException.</span></span> <span data-ttu-id="85734-410">Più risorse non gestite devono essere unite tramite uno strumento quale Microsoft `ResMerge` utilità (non fornita con il SDK di common language runtime).</span><span class="sxs-lookup"><span data-stu-id="85734-410">Multiple unmanaged resources need to be merged with a tool such as the Microsoft `ResMerge` utility (not supplied with the common language runtime SDK).</span></span>  
  
 <span data-ttu-id="85734-411">Stringhe di argomenti vuoto vengono scritte come spazio singolo.</span><span class="sxs-lookup"><span data-stu-id="85734-411">Empty argument strings get written as a single space.</span></span> <span data-ttu-id="85734-412">Gli spazi vengono sostituiti dai caratteri null nelle stringhe di argomento.</span><span class="sxs-lookup"><span data-stu-id="85734-412">Spaces are substituted for null characters in the argument strings.</span></span>  
  
 <span data-ttu-id="85734-413">La struttura della risorsa versione include i dati che identifica la versione, lingua e alla distribuzione del file.</span><span class="sxs-lookup"><span data-stu-id="85734-413">The structure of the version resource includes data that identifies the version, language, and distribution of the file.</span></span> <span data-ttu-id="85734-414">Programmi di installazione di utilizzano le funzioni della libreria di installazione di file (Ver. DLL) per recuperare la risorsa di informazioni sulla versione da un file e per estrarre i blocchi di informazioni di versione dalla risorsa.</span><span class="sxs-lookup"><span data-stu-id="85734-414">Installation programs use the functions in the file installation library (VER.DLL) to retrieve the version information resource from a file and to extract the version information blocks from the resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85734-415">A partire dal [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="85734-415">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="85734-416">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="85734-416">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85734-417">Nell'esempio seguente viene illustrato l'utilizzo di `DefineVersionInfoResource`.</span><span class="sxs-lookup"><span data-stu-id="85734-417">The example below illustrates the usage of `DefineVersionInfoResource`.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CPP/assemblybuilder_defineversioninforesource.cpp#1)]
 [!code-csharp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CS/assemblybuilder_defineversioninforesource.cs#1)]
 [!code-vb[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/VB/assemblybuilder_defineversioninforesource.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85734-418">Una risorsa di informazioni sulla versione non gestita è stata definita in precedenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-418">An unmanaged version information resource was previously defined.</span>
          </span>
          <span data-ttu-id="85734-419">- oppure - Le informazioni sulla versione non gestita hanno una dimensione eccessiva per essere persistenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-419">-or-  The unmanaged version information is too large to persist.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-420">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-420">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-421">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-421">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-422">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-422">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo EntryPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo EntryPoint" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EntryPoint As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodInfo ^ EntryPoint { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85734-423">Restituisce il punto di ingresso di questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-423">Returns the entry point of this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85734-424">Punto di ingresso di questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-424">The entry point of this assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-425">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-425">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-426">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-426">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-427">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-427">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="85734-428">Oggetto da confrontare con questa istanza o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-428">An object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-429">Restituisce un valore che indica se questa istanza è uguale all'oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-429">Returns a value that indicates whether this instance is equal to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-430">
            <see langword="true" /> se <paramref name="obj" /> è uguale al tipo e al valore di questa istanza; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-430">
              <see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.Evidence Evidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85734-431">Ottiene l'evidenza per questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-431">Gets the evidence for this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85734-432">Evidenza per questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-432">The evidence for this assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85734-433">Ottiene il nome visualizzato dell'assembly dinamico corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-433">Gets the display name of the current dynamic assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85734-434">Nome visualizzato dell'assembly dinamico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-434">The display name of the dynamic assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-435">Vedere <xref:System.Reflection.AssemblyName> per una descrizione del formato del nome visualizzato di un assembly.</span><span class="sxs-lookup"><span data-stu-id="85734-435">See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85734-436">Restituisce gli attributi personalizzati che sono stati applicati all'oggetto <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> corrente</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-436">Returns custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" /></span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="85734-437">Questo argomento viene ignorato per gli oggetti di questo tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-437">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-438">Restituisce tutti gli attributi personalizzati che sono stati applicati all'oggetto <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-438">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-439">Matrice contenente gli attributi personalizzati; la matrice è vuota se non sono presenti attributi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-439">An array that contains the custom attributes; the array is empty if there are no attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="85734-440">Il tipo di base da cui derivano gli attributi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-440">The base type from which attributes derive.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="85734-441">Questo argomento viene ignorato per gli oggetti di questo tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-441">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-442">Restituisce tutti gli attributi personalizzati che sono stati applicati all'oggetto <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> corrente e che derivano da un tipo di attributo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-442">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />, and that derive from a specified attribute type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-443">Matrice che contiene gli attributi personalizzati derivati, a qualsiasi livello, da <paramref name="attributeType" />; la matrice è vuota se non ci sono tali attributi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-443">An array that contains the custom attributes that are derived at any level from <paramref name="attributeType" />; the array is empty if there are no such attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85734-444">
            <paramref name="attributeType" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-444">
              <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85734-445">
            <paramref name="attributeType" /> non è un oggetto <see cref="T:System.Type" /> fornito dal runtime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-445">
              <paramref name="attributeType" /> is not a <see cref="T:System.Type" /> object supplied by the runtime.</span>
          </span>
          <span data-ttu-id="85734-446">Ad esempio, <paramref name="attributeType" /> è un oggetto <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-446">For example, <paramref name="attributeType" /> is a <see cref="T:System.Reflection.Emit.TypeBuilder" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributesData">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributesData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributesData" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributesData () As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributesData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85734-447">Restituisce oggetti <see cref="T:System.Reflection.CustomAttributeData" /> che contengono informazioni sugli attributi applicati all'oggetto <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-447">Returns <see cref="T:System.Reflection.CustomAttributeData" /> objects that contain information about the attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-448">Elenco generico di oggetti <see cref="T:System.Reflection.CustomAttributeData" /> che rappresentano i dati relativi agli attributi applicati al modulo corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-448">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-449">Utilizzare questo metodo per esaminare gli attributi personalizzati del codice nel contesto ReflectionOnly, in casi in cui gli attributi personalizzati sono definiti nel codice caricato nel contesto reflection-only.</span><span class="sxs-lookup"><span data-stu-id="85734-449">Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.</span></span> <span data-ttu-id="85734-450">I metodi come <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> e <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> non può essere utilizzato in questi casi, perché creano istanze degli attributi.</span><span class="sxs-lookup"><span data-stu-id="85734-450">Methods such as <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> cannot be used in such cases, because they create instances of the attributes.</span></span> <span data-ttu-id="85734-451">Impossibile eseguire il codice nel contesto reflection-only.</span><span class="sxs-lookup"><span data-stu-id="85734-451">Code in the reflection-only context cannot be executed.</span></span> <span data-ttu-id="85734-452">Per ulteriori informazioni e ad esempio di codice, vedere la <xref:System.Reflection.CustomAttributeData> classe.</span><span class="sxs-lookup"><span data-stu-id="85734-452">For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder GetDynamicModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder GetDynamicModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetDynamicModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDynamicModule (name As String) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ GetDynamicModule(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="85734-453">Nome del modulo dinamico richiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-453">The name of the requested dynamic module.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-454">Restituisce il modulo dinamico con il nome specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-454">Returns the dynamic module with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-455">Oggetto ModuleBuilder che rappresenta il modulo dinamico richiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-455">A ModuleBuilder object representing the requested dynamic module.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85734-456">
            <paramref name="name" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-456">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85734-457">La lunghezza di <paramref name="name" /> è zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-457">The length of <paramref name="name" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-458">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-458">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-459">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-459">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-460">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-460">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetExportedTypes">
      <MemberSignature Language="C#" Value="public override Type[] GetExportedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetExportedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExportedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetExportedTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85734-461">Ottiene i tipi esportati definiti in questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-461">Gets the exported types defined in this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-462">Matrice dell'oggetto <see cref="T:System.Type" /> contenente i tipi esportati definiti nell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-462">An array of <see cref="T:System.Type" /> containing the exported types defined in this assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="85734-463">Questo metodo non è implementato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-463">This method is not implemented.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-464">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-464">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-465">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-465">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-466">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-466">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public override System.IO.FileStream GetFile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.FileStream GetFile(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFile (name As String) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::FileStream ^ GetFile(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="85734-467">Nome del file specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-467">The name of the specified file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-468">Ottiene un oggetto <see cref="T:System.IO.FileStream" /> per il file specificato nella tabella file del manifesto dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-468">Gets a <see cref="T:System.IO.FileStream" /> for the specified file in the file table of the manifest of this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-469">Oggetto <see cref="T:System.IO.FileStream" /> per il file specificato oppure <see langword="null" /> se il file non viene trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-469">A <see cref="T:System.IO.FileStream" /> for the specified file, or <see langword="null" />, if the file is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-470">`name` non deve includere il percorso del file.</span><span class="sxs-lookup"><span data-stu-id="85734-470">`name` should not include the path to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="85734-471">Questo metodo non è attualmente supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-471">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-472">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-472">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-473">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-473">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-474">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-474">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public override System.IO.FileStream[] GetFiles (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.FileStream[] GetFiles(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetFiles(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFiles (getResourceModules As Boolean) As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles(bool getResourceModules);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="85734-475">
            <see langword="true" /> per includere i moduli delle risorse; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-475">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-476">Ottiene i file della tabella file di un manifesto dell'assembly, specificando se includere i moduli delle risorse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-476">Gets the files in the file table of an assembly manifest, specifying whether to include resource modules.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-477">Matrice di oggetti <see cref="T:System.IO.FileStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-477">An array of <see cref="T:System.IO.FileStream" /> objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="85734-478">Questo metodo non è attualmente supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-478">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-479">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-479">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-480">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-480">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-481">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-481">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85734-482">Restituisce il codice hash per l'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-482">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-483">Codice hash di un intero con segno a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-483">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module[] GetLoadedModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Module[] GetLoadedModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetLoadedModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLoadedModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules(bool getResourceModules);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="85734-484">
            <see langword="true" /> per includere i moduli delle risorse; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-484">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-485">Restituisce tutti i moduli caricati che fanno parte di questo assembly e facoltativamente include moduli di risorse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-485">Returns all the loaded modules that are part of this assembly, and optionally includes resource modules.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-486">Moduli caricati che fanno parte di questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-486">The loaded modules that are part of this assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceInfo">
      <MemberSignature Language="C#" Value="public override System.Reflection.ManifestResourceInfo GetManifestResourceInfo (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.ManifestResourceInfo GetManifestResourceInfo(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetManifestResourceInfo (resourceName As String) As ManifestResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::ManifestResourceInfo ^ GetManifestResourceInfo(System::String ^ resourceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ManifestResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName">
          <span data-ttu-id="85734-487">Nome della risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-487">The name of the resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-488">Restituisce informazioni sul modo in cui la risorsa specificata è stata resa persistente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-488">Returns information about how the given resource has been persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-489">Oggetto <see cref="T:System.Reflection.ManifestResourceInfo" /> popolato con informazioni relative alla topologia della risorsa oppure <see langword="null" /> se la risorsa non viene trovata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-489">
              <see cref="T:System.Reflection.ManifestResourceInfo" /> populated with information about the resource's topology, or <see langword="null" /> if the resource is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="85734-490">Questo metodo non è attualmente supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-490">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-491">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-491">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-492">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-492">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-493">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-493">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceNames">
      <MemberSignature Language="C#" Value="public override string[] GetManifestResourceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetManifestResourceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceNames" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetManifestResourceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetManifestResourceNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85734-494">Carica la risorsa del manifesto specificata da questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-494">Loads the specified manifest resource from this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-495">Matrice di tipo <see langword="String" /> che contiene i nomi di tutte le risorse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-495">An array of type <see langword="String" /> containing the names of all the resources.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="85734-496">Questo metodo non è supportato in un assembly dinamico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-496">This method is not supported on a dynamic assembly.</span>
          </span>
          <span data-ttu-id="85734-497">Per ottenere i nomi di risorsa di manifesto, usare <see cref="M:System.Reflection.Assembly.GetManifestResourceNames" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-497">To get the manifest resource names, use <see cref="M:System.Reflection.Assembly.GetManifestResourceNames" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-498">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-498">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-499">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-499">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-500">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-500">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetManifestResourceStream">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85734-501">Carica la risorsa del manifesto specificata da questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-501">Loads the specified manifest resource from this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetManifestResourceStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetManifestResourceStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetManifestResourceStream (name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetManifestResourceStream(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="85734-502">Nome della risorsa di manifesto richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-502">The name of the manifest resource being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-503">Carica la risorsa del manifesto specificata da questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-503">Loads the specified manifest resource from this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-504">Oggetto <see cref="T:System.IO.Stream" /> che rappresenta questa risorsa di manifesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-504">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="85734-505">Questo metodo non è attualmente supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-505">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-506">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-506">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-507">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-507">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-508">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-508">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetManifestResourceStream (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetManifestResourceStream(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetManifestResourceStream(Type ^ type, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="85734-509">Tipo il cui spazio dei nomi viene usato per definire l'ambito del nome della risorsa del manifesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-509">The type whose namespace is used to scope the manifest resource name.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="85734-510">Nome della risorsa di manifesto richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-510">The name of the manifest resource being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-511">Carica la risorsa del manifesto specificata, definita per l'ambito dallo spazio dei nomi del tipo specificato, da questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-511">Loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-512">Oggetto <see cref="T:System.IO.Stream" /> che rappresenta questa risorsa di manifesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-512">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-513">L'oggetto restituito <xref:System.IO.Stream> è il puntatore del file impostato all'inizio della risorsa.</span><span class="sxs-lookup"><span data-stu-id="85734-513">The returned <xref:System.IO.Stream> has its file pointer set to the beginning of the resource.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85734-514">Se il nome completo del `type` è "MyNameSpace. MyClasses" e `name` è "Punto", `GetManifestResourceStream` eseguirà la ricerca per una risorsa denominata MyNamespace.</span><span class="sxs-lookup"><span data-stu-id="85734-514">If the full name of `type` is "MyNameSpace.MyClasses" and `name` is "Dot", `GetManifestResourceStream` will search for a resource named MyNameSpace.Dot.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="85734-515">Questo metodo non è attualmente supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-515">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-516">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-516">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-517">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-517">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-518">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-518">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module GetModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Module GetModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetModule (name As String) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Module ^ GetModule(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="85734-519">Nome del modulo richiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-519">The name of the requested module.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-520">Ottiene il modulo specificato in questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-520">Gets the specified module in this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-521">Modulo richiesto o <see langword="null" /> se il modulo non viene trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-521">The module being requested, or <see langword="null" /> if the module is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module[] GetModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Module[] GetModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules(bool getResourceModules);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="85734-522">
            <see langword="true" /> per includere i moduli delle risorse; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-522">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-523">Ottiene tutti i moduli che fanno parte di questo assembly e facoltativamente include moduli di risorse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-523">Gets all the modules that are part of this assembly, and optionally includes resource modules.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-524">Moduli che fanno parte di questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-524">The modules that are part of this assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override System.Reflection.AssemblyName GetName (bool copiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.AssemblyName GetName(bool copiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetName(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (copiedName As Boolean) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::AssemblyName ^ GetName(bool copiedName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copiedName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="copiedName">
          <span data-ttu-id="85734-525">
            <see langword="true" /> per impostare la codebase sul percorso dell'assembly dopo che è stata eseguita la copia shadow; <see langword="false" /> per impostare la codebase sul percorso originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-525">
              <see langword="true" /> to set the code base to the location of the assembly after it is shadow-copied; <see langword="false" /> to set the code base to the original location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-526">Ottiene l'oggetto <see cref="T:System.Reflection.AssemblyName" /> specificato alla creazione dell'assembly dinamico corrente e imposta la codebase come specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-526">Gets the <see cref="T:System.Reflection.AssemblyName" /> that was specified when the current dynamic assembly was created, and sets the code base as specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-527">Nome dell'assembly dinamico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-527">The name of the dynamic assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedAssemblies">
      <MemberSignature Language="C#" Value="public override System.Reflection.AssemblyName[] GetReferencedAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.AssemblyName[] GetReferencedAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetReferencedAssemblies () As AssemblyName()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ GetReferencedAssemblies();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85734-528">Ottiene un elenco incompleto di oggetti <see cref="T:System.Reflection.AssemblyName" /> per gli assembly a cui fa riferimento questo oggetto <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-528">Gets an incomplete list of <see cref="T:System.Reflection.AssemblyName" /> objects for the assemblies that are referenced by this <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-529">Una matrice di nomi di assembly per gli assembly a cui si fa riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-529">An array of assembly names for the referenced assemblies.</span>
          </span>
          <span data-ttu-id="85734-530">Questa matrice non è un elenco completo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-530">This array is not a complete list.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-531">Questo metodo non restituisce un elenco completo di assembly di riferimento.</span><span class="sxs-lookup"><span data-stu-id="85734-531">This method does not return a complete list of referenced assemblies.</span></span> <span data-ttu-id="85734-532">Ad esempio, se si applica un attributo personalizzato di <xref:System.Reflection.Emit.AssemblyBuilder>, l'assembly in cui è stato definito l'attributo è incluso nell'elenco restituito da questo metodo.</span><span class="sxs-lookup"><span data-stu-id="85734-532">For example, if you apply a custom attribute to the <xref:System.Reflection.Emit.AssemblyBuilder>, the assembly in which the attribute was defined is included in the list returned by this method.</span></span> <span data-ttu-id="85734-533">Tuttavia, se si utilizza un <xref:System.Type> oggetto per specificare il tipo del tipo non è incluso un parametro di metodo.</span><span class="sxs-lookup"><span data-stu-id="85734-533">However, if you use a <xref:System.Type> object to specify the type of a method parameter, that type is not included.</span></span>  
  
 <span data-ttu-id="85734-534">Per ottenere un elenco completo di assembly di riferimento, salvare l'assembly, caricarlo in un altro dominio applicazione e chiamare il <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="85734-534">To get a complete list of referenced assemblies, save the assembly, load it into another application domain, and call the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSatelliteAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85734-535">Ottiene un assembly satellite specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-535">Gets a specified satellite assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSatelliteAssembly (culture As CultureInfo) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="85734-536">Impostazioni cultura specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-536">The specified culture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-537">Ottiene l'assembly satellite per le impostazioni cultura specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-537">Gets the satellite assembly for the specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-538">Assembly satellite specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-538">The specified satellite assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-539">Gli assembly satellite contengono risorse localizzate, distinte dall'assembly principale dell'applicazione, che contengono codice eseguibile non localizzabile nonché risorse per singole impostazioni cultura utilizzate come impostazioni cultura neutre o predefinito.</span><span class="sxs-lookup"><span data-stu-id="85734-539">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="85734-540">Chiamare questo metodo per utilizzare la versione dell'assembly corrente.</span><span class="sxs-lookup"><span data-stu-id="85734-540">Call this method to use your current assembly version.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85734-541">
            <paramref name="culture" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-541">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="85734-542">L'assembly non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-542">The assembly cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="85734-543">È stato trovato l'assembly satellite con un nome file corrispondente, ma <see langword="CultureInfo" /> non corrisponde a quello specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-543">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> did not match the one specified.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="85734-544">L'assembly satellite non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-544">The satellite assembly is not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture, Version ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="85734-545">Impostazioni cultura specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-545">The specified culture.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="85734-546">Versione dell'assembly satellite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-546">The version of the satellite assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-547">Ottiene la versione specificata dell'assembly satellite per le impostazioni cultura specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-547">Gets the specified version of the satellite assembly for the specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-548">Assembly satellite specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-548">The specified satellite assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-549">Gli assembly satellite contengono risorse localizzate, distinte dall'assembly principale dell'applicazione, che contengono codice eseguibile non localizzabile nonché risorse per singole impostazioni cultura utilizzate come impostazioni cultura neutre o predefinito.</span><span class="sxs-lookup"><span data-stu-id="85734-549">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="85734-550">Chiamare il <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> overload da utilizzare la versione dell'assembly corrente.</span><span class="sxs-lookup"><span data-stu-id="85734-550">Call the <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> overload to use your current assembly version.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85734-551">
            <paramref name="culture" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-551">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="85734-552">È stato trovato l'assembly satellite con un nome file corrispondente, ma <see langword="CultureInfo" /> o la versione non corrisponde a quanto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-552">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> or the version did not match the one specified.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="85734-553">L'assembly non è stato trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-553">The assembly cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="85734-554">L'assembly satellite non è un assembly valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-554">The satellite assembly is not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public override Type GetType (string name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetType(string name, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetType (name As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetType(System::String ^ name, bool throwOnError, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="85734-555">Nome del tipo di cui eseguire la ricerca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-555">The name of the type to search for.</span>
          </span>
        </param>
        <param name="throwOnError">
          <span data-ttu-id="85734-556">
            <see langword="true" /> per generare un'eccezione se non è possibile trovare il tipo; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-556">
              <see langword="true" /> to throw an exception if the type is not found; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="85734-557">
            <see langword="true" /> per ignorare la distinzione tra maiuscole e minuscole nel nome del tipo in fase di ricerca; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-557">
              <see langword="true" /> to ignore the case of the type name when searching; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-558">Ottiene il tipo specificato dai tipi definiti e creati nell'oggetto <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-558">Gets the specified type from the types that have been defined and created in the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-559">Il tipo specificato o <see langword="null" /> se il tipo non è stato trovato o non è stato ancora creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-559">The specified type, or <see langword="null" /> if the type is not found or has not been created yet.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-560">Impossibile trovare un tipo fino a quando non è stato creato chiamando il <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="85734-560">A type cannot be found until it has been created by calling the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalAssemblyCache">
      <MemberSignature Language="C#" Value="public override bool GlobalAssemblyCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GlobalAssemblyCache" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.GlobalAssemblyCache" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GlobalAssemblyCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool GlobalAssemblyCache { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85734-561">Ottiene un valore che indica se l'assembly è stato caricato dalla Global Assembly Cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-561">Gets a value that indicates whether the assembly was loaded from the global assembly cache.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85734-562">Sempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-562">Always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-563"><xref:System.Reflection.Emit.AssemblyBuilder> gli oggetti rappresentano sempre gli assembly dinamici e non sono perciò mai caricati dalla global assembly cache.</span><span class="sxs-lookup"><span data-stu-id="85734-563"><xref:System.Reflection.Emit.AssemblyBuilder> objects always represent dynamic assemblies, and therefore are never loaded from the global assembly cache.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostContext">
      <MemberSignature Language="C#" Value="public override long HostContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 HostContext" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.HostContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HostContext As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long HostContext { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85734-564">Ottiene il contesto host in cui viene creato l'assembly dinamico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-564">Gets the host context where the dynamic assembly is being created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85734-565">Valore che indica il contesto host in cui viene creato l'assembly dinamico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-565">A value that indicates the host context where the dynamic assembly is being created.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageRuntimeVersion">
      <MemberSignature Language="C#" Value="public override string ImageRuntimeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageRuntimeVersion" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.ImageRuntimeVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ImageRuntimeVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageRuntimeVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85734-566">Ottiene la versione di Common Language Runtime che verrà salvata nel file che contiene il manifesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-566">Gets the version of the common language runtime that will be saved in the file containing the manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85734-567">Stringa che rappresenta la versione di Common Language Runtime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-567">A string representing the common language runtime version.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-568">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-568">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-569">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-569">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-570">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-570">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="85734-571">Tipo di attributo per cui effettuare il test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-571">The type of attribute to test for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="85734-572">Questo argomento viene ignorato per gli oggetti di questo tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-572">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-573">Restituisce un valore che indica se una o più istanze del tipo di attributo specificato viene applicata a questo membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-573">Returns a value that indicates whether one or more instances of the specified attribute type is applied to this member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85734-574">
            <see langword="true" /> se una o più istanze di <paramref name="attributeType" /> sono applicate all'assembly dinamico; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-574">
              <see langword="true" /> if one or more instances of <paramref name="attributeType" /> is applied to this dynamic assembly; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDynamic">
      <MemberSignature Language="C#" Value="public override bool IsDynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDynamic" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.IsDynamic" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDynamic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDynamic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85734-575">Ottiene un valore che indica che l'assembly corrente è un assembly dinamico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-575">Gets a value that indicates that the current assembly is a dynamic assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85734-576">Sempre <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-576">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-577">Un <xref:System.Reflection.Emit.AssemblyBuilder> oggetto rappresenta sempre un assembly dinamico.</span><span class="sxs-lookup"><span data-stu-id="85734-577">An <xref:System.Reflection.Emit.AssemblyBuilder> object always represents a dynamic assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public override string Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Location { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85734-578">Ottiene il percorso, in formato codebase, del file caricato che contiene il manifesto se non ne viene creata una copia shadow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-578">Gets the location, in codebase format, of the loaded file that contains the manifest if it is not shadow-copied.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85734-579">Percorso del file caricato che contiene il manifesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-579">The location of the loaded file that contains the manifest.</span>
          </span>
          <span data-ttu-id="85734-580">Se il file caricato è stato replicato, <see langword="Location" /> corrisponde al percorso del file prima della replica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-580">If the loaded file has been shadow-copied, the <see langword="Location" /> is that of the file before being shadow-copied.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="85734-581">Questo metodo non è attualmente supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-581">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-582">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-582">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-583">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-583">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-584">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-584">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ManifestModule">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module ManifestModule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module ManifestModule" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.ManifestModule" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ManifestModule As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ ManifestModule { System::Reflection::Module ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85734-585">Ottiene il modulo nell'oggetto <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> corrente che contiene il manifesto dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-585">Gets the module in the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> that contains the assembly manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85734-586">Modulo del manifesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-586">The manifest module.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt; Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Module&gt; Modules" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.Modules" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Modules As IEnumerable(Of Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ Modules { System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionSet">
      <MemberSignature Language="C#" Value="public override System.Security.PermissionSet PermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet PermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.PermissionSet" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::PermissionSet ^ PermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85734-587">Ottiene l’insieme di autorizzazioni dell'assembly dinamico corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-587">Gets the grant set of the current dynamic assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85734-588">Insieme di autorizzazioni dell'assembly dinamico corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-588">The grant set of the current dynamic assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-589"><xref:System.Security.PermissionSet> gli oggetti possono contenere informazioni riservate, ad esempio i percorsi.</span><span class="sxs-lookup"><span data-stu-id="85734-589"><xref:System.Security.PermissionSet> objects can contain sensitive information such as paths.</span></span> <span data-ttu-id="85734-590">Pertanto, l'attendibilità totale deve accedere a questi oggetti.</span><span class="sxs-lookup"><span data-stu-id="85734-590">Therefore, full trust is required to access these objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="85734-591">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-591">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="85734-592">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-592">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnly">
      <MemberSignature Language="C#" Value="public override bool ReflectionOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReflectionOnly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.ReflectionOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReflectionOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReflectionOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85734-593">Ottiene un valore che indica se l'assembly dinamico si trova nel contesto Reflection-Only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-593">Gets a value indicating whether the dynamic assembly is in the reflection-only context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85734-594">
            <see langword="true" /> se l'assembly dinamico si trova nel contesto solo reflection; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-594">
              <see langword="true" /> if the dynamic assembly is in the reflection-only context; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-595">Per generare un assembly dinamico nel contesto reflection-only, specificare <xref:System.Reflection.Emit.AssemblyBuilderAccess.ReflectionOnly?displayProperty=nameWithType> quando si crea il <xref:System.Reflection.Emit.AssemblyBuilder>.</span><span class="sxs-lookup"><span data-stu-id="85734-595">To emit a dynamic assembly in the reflection-only context, specify <xref:System.Reflection.Emit.AssemblyBuilderAccess.ReflectionOnly?displayProperty=nameWithType> when you create the <xref:System.Reflection.Emit.AssemblyBuilder>.</span></span> <span data-ttu-id="85734-596">Se un assembly dinamico viene generato nel contesto reflection-only, non è possibile eseguirne il codice.</span><span class="sxs-lookup"><span data-stu-id="85734-596">If a dynamic assembly is emitted in the reflection-only context, its code cannot be executed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85734-597">Dopo aver salvato un assembly dinamico su disco, è possibile utilizzare il <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=nameWithType> metodo per caricare l'assembly completato nel contesto reflection-only.</span><span class="sxs-lookup"><span data-stu-id="85734-597">After you have saved a dynamic assembly to disk, you can use the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=nameWithType> method to load the completed assembly into the reflection-only context.</span></span> <span data-ttu-id="85734-598">Tuttavia, l'assembly non può più essere modificato.</span><span class="sxs-lookup"><span data-stu-id="85734-598">However, the assembly can no longer be modified.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Reflection.Emit.AssemblyBuilderAccess.ReflectionOnly" />
        <altmember cref="M:System.Reflection.Assembly.ReflectionOnlyLoad(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85734-599">Salva l'assembly dinamico sul disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-599">Saves this dynamic assembly to disk.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string assemblyFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string assemblyFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (assemblyFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ assemblyFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFileName">
          <span data-ttu-id="85734-600">Nome file dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-600">The file name of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-601">Salva l'assembly dinamico sul disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-601">Saves this dynamic assembly to disk.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-602">Questo metodo salva tutti i moduli dinamici non temporaneo definiti nell'assembly dinamico.</span><span class="sxs-lookup"><span data-stu-id="85734-602">This method saves all non-transient dynamic modules defined in this dynamic assembly.</span></span> <span data-ttu-id="85734-603">Moduli dinamici temporanei non vengono salvati.</span><span class="sxs-lookup"><span data-stu-id="85734-603">Transient dynamic modules are not saved.</span></span> <span data-ttu-id="85734-604">Il nome del file di assembly può essere lo stesso nome di uno dei moduli.</span><span class="sxs-lookup"><span data-stu-id="85734-604">The assembly file name can be the same as the name of one of the modules.</span></span> <span data-ttu-id="85734-605">In questo caso, il manifesto dell'assembly è archiviata all'interno di tale modulo.</span><span class="sxs-lookup"><span data-stu-id="85734-605">If so, the assembly manifest is stored within that module.</span></span> <span data-ttu-id="85734-606">`assemblyFileName` può essere diverso dai nomi di tutti i moduli contenuti nell'assembly.</span><span class="sxs-lookup"><span data-stu-id="85734-606">`assemblyFileName` can be different from the names of all of the modules contained within the assembly.</span></span> <span data-ttu-id="85734-607">In questo caso, il file di assembly contiene solo il manifesto dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="85734-607">If so, the assembly file contains only the assembly manifest.</span></span>  
  
 <span data-ttu-id="85734-608">Per ogni <xref:System.Resources.ResourceWriter> ottenuto utilizzando <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, questo metodo scrive il file. Resources e chiama <xref:System.Resources.ResourceWriter.Close%2A> per chiudere il flusso.</span><span class="sxs-lookup"><span data-stu-id="85734-608">For each <xref:System.Resources.ResourceWriter> obtained using <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, this method writes the .resources file and calls <xref:System.Resources.ResourceWriter.Close%2A> to close the stream.</span></span>  
  
 <span data-ttu-id="85734-609">Il `assemblyFileName` deve essere un semplice nome file senza un componente di unità o directory.</span><span class="sxs-lookup"><span data-stu-id="85734-609">The `assemblyFileName` needs to be a simple file name without a drive or directory component.</span></span> <span data-ttu-id="85734-610">Per creare un assembly in una directory specifica, utilizzare uno del <xref:System.AppDomain.DefineDynamicAssembly%2A> metodi che accetta un argomento di directory di destinazione.</span><span class="sxs-lookup"><span data-stu-id="85734-610">To create an assembly in a specific directory, use one of the <xref:System.AppDomain.DefineDynamicAssembly%2A> methods that takes a target directory argument.</span></span>  
  
 <span data-ttu-id="85734-611">In .NET Framework versione 2.0, questo overload del <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> metodo è equivalente alla chiamata di <xref:System.Reflection.Emit.AssemblyBuilder.Save%28System.String%2CSystem.Reflection.PortableExecutableKinds%2CSystem.Reflection.ImageFileMachine%29> overload del metodo con <xref:System.Reflection.PortableExecutableKinds.ILOnly> per il `portableExecutableKind` parametro e <xref:System.Reflection.ImageFileMachine.I386> per il `imageFileMachine` parametro.</span><span class="sxs-lookup"><span data-stu-id="85734-611">In the .NET Framework version 2.0, this overload of the <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> method is equivalent to calling the <xref:System.Reflection.Emit.AssemblyBuilder.Save%28System.String%2CSystem.Reflection.PortableExecutableKinds%2CSystem.Reflection.ImageFileMachine%29> method overload with <xref:System.Reflection.PortableExecutableKinds.ILOnly> for the `portableExecutableKind` parameter and <xref:System.Reflection.ImageFileMachine.I386> for the `imageFileMachine` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85734-612">Esempio di codice seguente crea un assembly dinamico che viene reso persistente in un disco locale tramite `Save`.</span><span class="sxs-lookup"><span data-stu-id="85734-612">The following code sample creates a dynamic assembly and then persists it to a local disk using `Save`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.Save Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.Save Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.Save Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.Save Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.Save Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.Save Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85734-613">La lunghezza di <paramref name="assemblyFileName" /> è zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-613">The length of <paramref name="assemblyFileName" /> is 0.</span>
          </span>
          <span data-ttu-id="85734-614">- oppure - L'assembly contiene due o più file di risorse dei moduli con lo stesso nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-614">-or-  There are two or more modules resource files in the assembly with the same name.</span>
          </span>
          <span data-ttu-id="85734-615">- oppure - La directory di destinazione dell'assembly non è valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-615">-or-  The target directory of the assembly is invalid.</span>
          </span>
          <span data-ttu-id="85734-616">- oppure - <paramref name="assemblyFileName" /> non è un nome file semplice, ad esempio un componente di unità o directory, oppure nell'assembly sono state definite più risorse non gestite, inclusa una risorsa di informazioni sulla versione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-616">-or-  <paramref name="assemblyFileName" /> is not a simple file name (for example, has a directory or drive component), or more than one unmanaged resource, including a version information resource, was defined in this assembly.</span>
          </span>
          <span data-ttu-id="85734-617">- oppure - La stringa <see langword="CultureInfo" /> in <see cref="T:System.Reflection.AssemblyCultureAttribute" /> non è valida e <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> è stato chiamato prima di chiamare il metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-617">-or-  The <see langword="CultureInfo" /> string in <see cref="T:System.Reflection.AssemblyCultureAttribute" /> is not a valid string and <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> was called prior to calling this method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85734-618">
            <paramref name="assemblyFileName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-618">
              <paramref name="assemblyFileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85734-619">L'assembly è stato salvato in precedenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-619">This assembly has been saved before.</span>
          </span>
          <span data-ttu-id="85734-620">- oppure - L'assembly ha accesso <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-620">-or-  This assembly has access <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /></span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="85734-621">Durante il salvataggio si verifica un errore di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-621">An output error occurs during the save.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="85734-622">Il metodo <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> non è stato chiamato per i tipi presenti nei moduli dell'assembly da scrivere sul disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-622">
              <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has not been called for any of the types in the modules of the assembly to be written to disk.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="85734-623">Scrivere = true oppure Append = true è necessario salvare questo assembly per il nome file specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-623">Write = true or Append = true is needed to save this assembly to the specified file name.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-624">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-624">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-625">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-625">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string assemblyFileName, System.Reflection.PortableExecutableKinds portableExecutableKind, System.Reflection.ImageFileMachine imageFileMachine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string assemblyFileName, valuetype System.Reflection.PortableExecutableKinds portableExecutableKind, valuetype System.Reflection.ImageFileMachine imageFileMachine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.Save(System.String,System.Reflection.PortableExecutableKinds,System.Reflection.ImageFileMachine)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ assemblyFileName, System::Reflection::PortableExecutableKinds portableExecutableKind, System::Reflection::ImageFileMachine imageFileMachine);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFileName" Type="System.String" />
        <Parameter Name="portableExecutableKind" Type="System.Reflection.PortableExecutableKinds" />
        <Parameter Name="imageFileMachine" Type="System.Reflection.ImageFileMachine" />
      </Parameters>
      <Docs>
        <param name="assemblyFileName">
          <span data-ttu-id="85734-626">Nome file dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-626">The file name of the assembly.</span>
          </span>
        </param>
        <param name="portableExecutableKind">
          <span data-ttu-id="85734-627">Combinazione bit per bit dei valori <see cref="T:System.Reflection.PortableExecutableKinds" /> che specifica la natura del codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-627">A bitwise combination of the <see cref="T:System.Reflection.PortableExecutableKinds" /> values that specifies the nature of the code.</span>
          </span>
        </param>
        <param name="imageFileMachine">
          <span data-ttu-id="85734-628">Uno dei valori di <see cref="T:System.Reflection.ImageFileMachine" /> che specifica la piattaforma di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-628">One of the <see cref="T:System.Reflection.ImageFileMachine" /> values that specifies the target platform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-629">Salva l'assembly dinamico su disco, specificando la natura del codice nei file eseguibili dell'assembly e la piattaforma di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-629">Saves this dynamic assembly to disk, specifying the nature of code in the assembly's executables and the target platform.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-630">Se `imageFileMachine` e `portableExecutableKind` non sono compatibili, `imageFileMachine` ha la precedenza su `portableExecutableKind`.</span><span class="sxs-lookup"><span data-stu-id="85734-630">If `imageFileMachine` and `portableExecutableKind` are incompatible, `imageFileMachine` takes precedence over `portableExecutableKind`.</span></span> <span data-ttu-id="85734-631">Non viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="85734-631">No exception is thrown.</span></span> <span data-ttu-id="85734-632">Ad esempio, se si specifica <xref:System.Reflection.ImageFileMachine.I386?displayProperty=nameWithType> con <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType>, <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType> viene ignorato.</span><span class="sxs-lookup"><span data-stu-id="85734-632">For example, if you specify <xref:System.Reflection.ImageFileMachine.I386?displayProperty=nameWithType> with <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType>, <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType> is ignored.</span></span>  
  
 <span data-ttu-id="85734-633">Questo metodo salva tutti i moduli dinamici non temporaneo definiti nell'assembly dinamico.</span><span class="sxs-lookup"><span data-stu-id="85734-633">This method saves all non-transient dynamic modules defined in this dynamic assembly.</span></span> <span data-ttu-id="85734-634">Moduli dinamici temporanei non vengono salvati.</span><span class="sxs-lookup"><span data-stu-id="85734-634">Transient dynamic modules are not saved.</span></span> <span data-ttu-id="85734-635">Il nome del file di assembly può essere lo stesso nome di uno dei moduli.</span><span class="sxs-lookup"><span data-stu-id="85734-635">The assembly file name can be the same as the name of one of the module.</span></span> <span data-ttu-id="85734-636">In questo caso, il manifesto dell'assembly è archiviata all'interno di tale modulo.</span><span class="sxs-lookup"><span data-stu-id="85734-636">If so, the assembly manifest is stored within that module.</span></span> <span data-ttu-id="85734-637">`assemblyFileName` può essere diverso dai nomi di tutti i moduli contenuti nell'assembly.</span><span class="sxs-lookup"><span data-stu-id="85734-637">`assemblyFileName` can be different from the names of all of the modules contained within the assembly.</span></span> <span data-ttu-id="85734-638">In questo caso, il file di assembly contiene solo il manifesto dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="85734-638">If so, the assembly file contains only the assembly manifest.</span></span>  
  
 <span data-ttu-id="85734-639">Per ogni <xref:System.Resources.ResourceWriter> ottenuto utilizzando <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, questo metodo scrive il file. Resources e chiama <xref:System.Resources.ResourceWriter.Close%2A> per chiudere il flusso.</span><span class="sxs-lookup"><span data-stu-id="85734-639">For each <xref:System.Resources.ResourceWriter> obtained using <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, this method writes the .resources file and calls <xref:System.Resources.ResourceWriter.Close%2A> to close the stream.</span></span>  
  
 <span data-ttu-id="85734-640">Il `assemblyFileName` deve essere un semplice nome file senza un componente di unità o directory.</span><span class="sxs-lookup"><span data-stu-id="85734-640">The `assemblyFileName` needs to be a simple file name without a drive or directory component.</span></span> <span data-ttu-id="85734-641">Per creare un assembly in una directory specifica, utilizzare uno del <xref:System.AppDomain.DefineDynamicAssembly%2A> metodi che accetta un argomento di directory di destinazione.</span><span class="sxs-lookup"><span data-stu-id="85734-641">To create an assembly in a specific directory, use one of the <xref:System.AppDomain.DefineDynamicAssembly%2A> methods that takes a target directory argument.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85734-642">La lunghezza di <paramref name="assemblyFileName" /> è zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-642">The length of <paramref name="assemblyFileName" /> is 0.</span>
          </span>
          <span data-ttu-id="85734-643">- oppure - L'assembly contiene due o più file di risorse dei moduli con lo stesso nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-643">-or-  There are two or more modules resource files in the assembly with the same name.</span>
          </span>
          <span data-ttu-id="85734-644">- oppure - La directory di destinazione dell'assembly non è valida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-644">-or-  The target directory of the assembly is invalid.</span>
          </span>
          <span data-ttu-id="85734-645">- oppure - <paramref name="assemblyFileName" /> non è un nome file semplice, ad esempio include un componente di unità o directory, oppure nell'assembly sono state definite più risorse non gestite, inclusa una risorsa di informazioni sulla versione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-645">-or-  <paramref name="assemblyFileName" /> is not a simple file name (for example, has a directory or drive component), or more than one unmanaged resource, including a version information resources, was defined in this assembly.</span>
          </span>
          <span data-ttu-id="85734-646">- oppure - La stringa <see langword="CultureInfo" /> in <see cref="T:System.Reflection.AssemblyCultureAttribute" /> non è valida e <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> è stato chiamato prima di chiamare il metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-646">-or-  The <see langword="CultureInfo" /> string in <see cref="T:System.Reflection.AssemblyCultureAttribute" /> is not a valid string and <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> was called prior to calling this method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85734-647">
            <paramref name="assemblyFileName" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-647">
              <paramref name="assemblyFileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85734-648">L'assembly è stato salvato in precedenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-648">This assembly has been saved before.</span>
          </span>
          <span data-ttu-id="85734-649">- oppure - L'assembly ha accesso <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-649">-or-  This assembly has access <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /></span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="85734-650">Durante il salvataggio si verifica un errore di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-650">An output error occurs during the save.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="85734-651">Il metodo <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> non è stato chiamato per i tipi presenti nei moduli dell'assembly da scrivere sul disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-651">
              <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has not been called for any of the types in the modules of the assembly to be written to disk.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="85734-652">Scrivere = true oppure Append = true è necessario salvare questo assembly per il nome file specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-652">Write = true or Append = true is needed to save this assembly to the specified file name.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-653">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-653">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-654">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-654">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SecurityRuleSet">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityRuleSet SecurityRuleSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.SecurityRuleSet SecurityRuleSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.SecurityRuleSet" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SecurityRuleSet As SecurityRuleSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::SecurityRuleSet SecurityRuleSet { System::Security::SecurityRuleSet get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityRuleSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85734-655">Ottiene un valore che indica il set di regole di sicurezza applicato da Common Language Runtime (CLR) per questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-655">Gets a value that indicates which set of security rules the common language runtime (CLR) enforces for this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85734-656">Set di regole di sicurezza applicato da CLR per questo assembly dinamico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-656">The security rule set that the CLR enforces for this dynamic assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-657">Il [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] applica sempre la trasparenza di livello 2 (<xref:System.Security.SecurityRuleSet.Level2?displayProperty=nameWithType>) per gli assembly dinamici genera l'errore.</span><span class="sxs-lookup"><span data-stu-id="85734-657">The [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] always enforces level 2 transparency (<xref:System.Security.SecurityRuleSet.Level2?displayProperty=nameWithType>) for the dynamic assemblies it generates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85734-658">Imposta un attributo personalizzato nell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-658">Sets a custom attribute on this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.Emit.CustomAttributeBuilder customBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (customBuilder As CustomAttributeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::Emit::CustomAttributeBuilder ^ customBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
      </Parameters>
      <Docs>
        <param name="customBuilder">
          <span data-ttu-id="85734-659">Un'istanza di una classe helper per definire l'attributo personalizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-659">An instance of a helper class to define the custom attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-660">Impostare un attributo personalizzato nell'assembly usando un generatore di attributi personalizzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-660">Set a custom attribute on this assembly using a custom attribute builder.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="85734-661"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> non può essere utilizzato per impostare gli attributi di sicurezza dichiarativa.</span><span class="sxs-lookup"><span data-stu-id="85734-661"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes.</span></span> <span data-ttu-id="85734-662">Utilizzare uno degli overload di <xref:System.AppDomain.DefineDynamicAssembly%2A> che accetta obbligatorio, facoltativo e autorizzazioni rifiutate.</span><span class="sxs-lookup"><span data-stu-id="85734-662">Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85734-663">A partire dal [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="85734-663">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="85734-664">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="85734-664">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85734-665">Esempio di codice seguente viene illustrato l'utilizzo di `SetCustomAttribute` all'interno di <xref:System.Reflection.Emit.AssemblyBuilder>, usando un <xref:System.Reflection.Emit.CustomAttributeBuilder>.</span><span class="sxs-lookup"><span data-stu-id="85734-665">The following code sample illustrates the use of `SetCustomAttribute` within <xref:System.Reflection.Emit.AssemblyBuilder>, using a <xref:System.Reflection.Emit.CustomAttributeBuilder>.</span></span>  
  
 [!code-cpp[AssemblyBuilder_SetCustomAttribute1#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute1/CPP/assemblybuilder_setcustomattribute1.cpp#1)]
 [!code-csharp[AssemblyBuilder_SetCustomAttribute1#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute1/CS/assemblybuilder_setcustomattribute1.cs#1)]
 [!code-vb[AssemblyBuilder_SetCustomAttribute1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute1/VB/assemblybuilder_setcustomattribute1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85734-666">
            <paramref name="con" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-666">
              <paramref name="con" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-667">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-667">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-668">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-668">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-669">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-669">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.ConstructorInfo con, unsigned int8[] binaryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (con As ConstructorInfo, binaryAttribute As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Byte&gt; ^ binaryAttribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="binaryAttribute" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="con">
          <span data-ttu-id="85734-670">Costruttore dell'attributo personalizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-670">The constructor for the custom attribute.</span>
          </span>
        </param>
        <param name="binaryAttribute">
          <span data-ttu-id="85734-671">BLOB di byte che rappresenta gli attributi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-671">A byte blob representing the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-672">Imposta un attributo personalizzato nell'assembly usando un BLOB di attributi personalizzati specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-672">Set a custom attribute on this assembly using a specified custom attribute blob.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-673">Vedere le specifiche dei metadati nella documentazione di specifiche ECMA Partition II per informazioni dettagliate su come formattare `binaryAttribute`.</span><span class="sxs-lookup"><span data-stu-id="85734-673">See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`.</span></span> <span data-ttu-id="85734-674">La documentazione è disponibile online; vedere [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) (ECMA C# e standard di Common Language Infrastructure) in MSDN e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web internazionale Ecma.</span><span class="sxs-lookup"><span data-stu-id="85734-674">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 <span data-ttu-id="85734-675">`RuntimeConstructorInfo` è un tipo speciale generato dal sistema.</span><span class="sxs-lookup"><span data-stu-id="85734-675">`RuntimeConstructorInfo` is a special type generated by the system.</span></span> <span data-ttu-id="85734-676">Deriva dal <xref:System.Reflection.ConstructorInfo> classe e qualsiasi <xref:System.Reflection.ConstructorInfo> oggetto ottenuto tramite reflection è in realtà un'istanza di `RuntimeConstructorInfo`.</span><span class="sxs-lookup"><span data-stu-id="85734-676">It derives from the <xref:System.Reflection.ConstructorInfo> class, and any <xref:System.Reflection.ConstructorInfo> object you obtain through reflection is actually an instance of `RuntimeConstructorInfo`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85734-677"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> non può essere utilizzato per impostare gli attributi di sicurezza dichiarativa.</span><span class="sxs-lookup"><span data-stu-id="85734-677"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes.</span></span> <span data-ttu-id="85734-678">Utilizzare uno degli overload di <xref:System.AppDomain.DefineDynamicAssembly%2A> che accetta obbligatorio, facoltativo e autorizzazioni rifiutate.</span><span class="sxs-lookup"><span data-stu-id="85734-678">Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85734-679">A partire dal [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="85734-679">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="85734-680">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="85734-680">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85734-681">Esempio di codice seguente viene illustrato l'utilizzo di `SetCustomAttribute` per associare un attributo personalizzato a un assembly generato dinamicamente.</span><span class="sxs-lookup"><span data-stu-id="85734-681">The following code sample illustrates the use of `SetCustomAttribute` to attach a custom attribute to a dynamically generated assembly.</span></span>  
  
 [!code-cpp[AssemblyBuilder_SetCustomAttribute2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute2/CPP/assemblybuilder_setcustomattribute2.cpp#1)]
 [!code-csharp[AssemblyBuilder_SetCustomAttribute2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute2/CS/assemblybuilder_setcustomattribute2.cs#1)]
 [!code-vb[AssemblyBuilder_SetCustomAttribute2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute2/VB/assemblybuilder_setcustomattribute2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85734-682">
            <paramref name="con" /> o <paramref name="binaryAttribute" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-682">
              <paramref name="con" /> or <paramref name="binaryAttribute" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-683">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-683">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85734-684">
            <paramref name="con" /> non è un oggetto <see langword="RuntimeConstructorInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-684">
              <paramref name="con" /> is not a <see langword="RuntimeConstructorInfo" /> object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-685">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-685">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-686">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-686">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetEntryPoint">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85734-687">Imposta il punto di ingresso di questo assembly dinamico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-687">Sets the entry point for this dynamic assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetEntryPoint">
      <MemberSignature Language="C#" Value="public void SetEntryPoint (System.Reflection.MethodInfo entryMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEntryPoint(class System.Reflection.MethodInfo entryMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEntryPoint (entryMethod As MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEntryPoint(System::Reflection::MethodInfo ^ entryMethod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryMethod" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="entryMethod">
          <span data-ttu-id="85734-688">Riferimento al metodo che rappresenta il punto di ingresso di questo assembly dinamico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-688">A reference to the method that represents the entry point for this dynamic assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-689">Imposta il punto di ingresso per questo assembly dinamico, presupponendo che si sta creando un'applicazione console.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-689">Sets the entry point for this dynamic assembly, assuming that a console application is being built.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85734-690">
            <paramref name="entryMethod" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-690">
              <paramref name="entryMethod" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85734-691">
            <paramref name="entryMethod" /> non è contenuto nell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-691">
              <paramref name="entryMethod" /> is not contained within this assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-692">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-692">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-693">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-693">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-694">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-694">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetEntryPoint">
      <MemberSignature Language="C#" Value="public void SetEntryPoint (System.Reflection.MethodInfo entryMethod, System.Reflection.Emit.PEFileKinds fileKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEntryPoint(class System.Reflection.MethodInfo entryMethod, valuetype System.Reflection.Emit.PEFileKinds fileKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo,System.Reflection.Emit.PEFileKinds)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEntryPoint (entryMethod As MethodInfo, fileKind As PEFileKinds)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEntryPoint(System::Reflection::MethodInfo ^ entryMethod, System::Reflection::Emit::PEFileKinds fileKind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="fileKind" Type="System.Reflection.Emit.PEFileKinds" />
      </Parameters>
      <Docs>
        <param name="entryMethod">
          <span data-ttu-id="85734-695">Riferimento al metodo che rappresenta il punto di ingresso di questo assembly dinamico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-695">A reference to the method that represents the entry point for this dynamic assembly.</span>
          </span>
        </param>
        <param name="fileKind">
          <span data-ttu-id="85734-696">Tipo del file eseguibile di assembly compilato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-696">The type of the assembly executable being built.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-697">Imposta il punto di ingresso dell'assembly e definisce il tipo del file eseguibile di tipo PE in corso di compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-697">Sets the entry point for this assembly and defines the type of the portable executable (PE file) being built.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="85734-698">A partire dal [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="85734-698">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="85734-699">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="85734-699">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85734-700">
            <paramref name="entryMethod" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-700">
              <paramref name="entryMethod" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85734-701">
            <paramref name="entryMethod" /> non è contenuto nell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-701">
              <paramref name="entryMethod" /> is not contained within this assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="85734-702">Il chiamante non dispone dell'autorizzazione richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-702">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="85734-703">Quando viene richiamato ad associazione tardiva tramite meccanismi, ad esempio <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-703">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="85734-704">Enumerazione associata: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-704">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _AssemblyBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_AssemblyBuilder::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="85734-705">Riservato per utilizzi futuri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-705">Reserved for future use.</span>
          </span>
          <span data-ttu-id="85734-706">Deve essere IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-706">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="85734-707">Matrice di nomi passata di cui eseguire il mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-707">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="85734-708">Conteggio dei nomi di cui eseguire il mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-708">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="85734-709">Contesto delle impostazioni locali in cui interpretare i nomi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-709">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="85734-710">Matrice allocata dal chiamante che riceve gli ID corrispondenti ai nomi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-710">Caller-allocated array which receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-711">Esegue il mapping di un set di nomi a un set corrispondente di ID dispatch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-711">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-712">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="85734-712">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="85734-713">Per ulteriori informazioni su `IDispatch::GetIDsOfNames`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="85734-713">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="85734-714">Il metodo viene chiamato ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-714">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _AssemblyBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_AssemblyBuilder::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="85734-715">Informazioni sul tipo da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-715">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="85734-716">Identificatore delle impostazioni locali per le informazioni sul tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-716">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="85734-717">Riceve un puntatore all'oggetto relativo alle informazioni sul tipo richiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-717">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-718">Recupera le informazioni sul tipo relative a un oggetto che può quindi essere usato per ottenere informazioni sul tipo relative a un'interfaccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-718">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-719">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="85734-719">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="85734-720">Per ulteriori informazioni su `IDispatch::GetTypeInfo`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="85734-720">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="85734-721">Il metodo viene chiamato ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-721">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _AssemblyBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_AssemblyBuilder::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="85734-722">Punta a una posizione che riceve il numero di interfacce di informazioni sul tipo fornite dall'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-722">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-723">Recupera il numero delle interfacce di informazioni sul tipo fornite da un oggetto (0 o 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-723">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-724">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="85734-724">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="85734-725">Per ulteriori informazioni su `IDispatch::GetTypeInfoCount`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="85734-725">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="85734-726">Il metodo viene chiamato ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-726">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _AssemblyBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_AssemblyBuilder::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="85734-727">Identifica il membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-727">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="85734-728">Riservato per utilizzi futuri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-728">Reserved for future use.</span>
          </span>
          <span data-ttu-id="85734-729">Deve essere IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-729">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="85734-730">Contesto di impostazioni locali all'interno del quale devono essere interpretati gli argomenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-730">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="85734-731">Flag che descrivono il contesto della chiamata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-731">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="85734-732">Puntatore a una struttura contenente una matrice di argomenti, una matrice di DISPID per argomenti denominati e i conteggi del numero di elementi nelle matrici.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-732">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="85734-733">Puntatore alla posizione in cui deve essere archiviato il risultato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-733">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="85734-734">Puntatore a una struttura contenente informazioni sull'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-734">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="85734-735">Indice del primo argomento che contiene un errore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-735">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85734-736">Fornisce l'accesso a proprietà e metodi esposti da un oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-736">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85734-737">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="85734-737">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="85734-738">Per ulteriori informazioni su `IDispatch::Invoke`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="85734-738">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="85734-739">Il metodo viene chiamato ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85734-739">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>