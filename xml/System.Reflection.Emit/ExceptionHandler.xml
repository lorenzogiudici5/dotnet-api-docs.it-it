<Type Name="ExceptionHandler" FullName="System.Reflection.Emit.ExceptionHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="31be605a3b3574a4ee5c98e1a592436afc3340c8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct ExceptionHandler : IEquatable&lt;System.Reflection.Emit.ExceptionHandler&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ExceptionHandler extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Reflection.Emit.ExceptionHandler&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.ExceptionHandler" />
  <TypeSignature Language="VB.NET" Value="Public Structure ExceptionHandler&#xA;Implements IEquatable(Of ExceptionHandler)" />
  <TypeSignature Language="C++ CLI" Value="public value class ExceptionHandler : IEquatable&lt;System::Reflection::Emit::ExceptionHandler&gt;" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Reflection.Emit.ExceptionHandler&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f022a-101">Rappresenta un gestore di eccezioni in una matrice di byte di IL da passare a un metodo, ad esempio <see cref="M:System.Reflection.Emit.MethodBuilder.SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f022a-101">Represents an exception handler in a byte array of IL to be passed to a method such as <see cref="M:System.Reflection.Emit.MethodBuilder.SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExceptionHandler (int tryOffset, int tryLength, int filterOffset, int handlerOffset, int handlerLength, System.Reflection.ExceptionHandlingClauseOptions kind, int exceptionTypeToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 tryOffset, int32 tryLength, int32 filterOffset, int32 handlerOffset, int32 handlerLength, valuetype System.Reflection.ExceptionHandlingClauseOptions kind, int32 exceptionTypeToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tryOffset As Integer, tryLength As Integer, filterOffset As Integer, handlerOffset As Integer, handlerLength As Integer, kind As ExceptionHandlingClauseOptions, exceptionTypeToken As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExceptionHandler(int tryOffset, int tryLength, int filterOffset, int handlerOffset, int handlerLength, System::Reflection::ExceptionHandlingClauseOptions kind, int exceptionTypeToken);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tryOffset" Type="System.Int32" />
        <Parameter Name="tryLength" Type="System.Int32" />
        <Parameter Name="filterOffset" Type="System.Int32" />
        <Parameter Name="handlerOffset" Type="System.Int32" />
        <Parameter Name="handlerLength" Type="System.Int32" />
        <Parameter Name="kind" Type="System.Reflection.ExceptionHandlingClauseOptions" />
        <Parameter Name="exceptionTypeToken" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tryOffset">
          <span data-ttu-id="f022a-102">L'offset in byte della prima istruzione protetta dal gestore di eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-102">The byte offset of the first instruction protected by this exception handler.</span>
          </span>
        </param>
        <param name="tryLength">
          <span data-ttu-id="f022a-103">Numero di byte protetto in questo gestore di eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-103">The number of bytes protected by this exception handler.</span>
          </span>
        </param>
        <param name="filterOffset">
          <span data-ttu-id="f022a-104">Offset dei byte dell'inizio del codice di filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-104">The byte offset of the beginning of the filter code.</span>
          </span>
          <span data-ttu-id="f022a-105">Il codice di filtro termina in corrispondenza della prima istruzione del blocco del gestore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-105">The filter code ends at the first instruction of the handler block.</span>
          </span>
          <span data-ttu-id="f022a-106">Per i gestori eccezioni non di filtro, specificare 0 (zero) per questo parametro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-106">For non-filter exception handlers, specify 0 (zero) for this parameter.</span>
          </span>
        </param>
        <param name="handlerOffset">
          <span data-ttu-id="f022a-107">L'offset in byte della prima istruzione del gestore di eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-107">The byte offset of the first instruction of this exception handler.</span>
          </span>
        </param>
        <param name="handlerLength">
          <span data-ttu-id="f022a-108">Numero di byte in questo gestore di eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-108">The number of bytes in this exception handler.</span>
          </span>
        </param>
        <param name="kind">
          <span data-ttu-id="f022a-109">Uno dei valori di enumerazione che specifica il tipo di gestore di eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-109">One of the enumeration values that specifies the kind of exception handler.</span>
          </span>
        </param>
        <param name="exceptionTypeToken">
          <span data-ttu-id="f022a-110">Token del tipo di eccezione gestito da questo gestore di eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-110">The token of the exception type handled by this exception handler.</span>
          </span>
          <span data-ttu-id="f022a-111">Se non applicabile, specificare 0 (zero).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-111">If not applicable, specify 0 (zero).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f022a-112">Inizializza una nuova istanza della classe <see cref="T:System.Reflection.Emit.ExceptionHandler" /> con i parametri specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-112">Initializes a new instance of the <see cref="T:System.Reflection.Emit.ExceptionHandler" /> class with the specified parameters.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f022a-113">
            <paramref name="tryOffset" />, <paramref name="filterOffset" />, <paramref name="handlerOffset" />, <paramref name="tryLength" /> o <paramref name="handlerLength" /> hanno un valore negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-113">
              <paramref name="tryOffset" />, <paramref name="filterOffset" />, <paramref name="handlerOffset" />, <paramref name="tryLength" />, or <paramref name="handlerLength" /> are negative.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f022a-114">Indica se questa istanza dell'oggetto <see cref="T:System.Reflection.Emit.ExceptionHandler" /> Ã¨ uguale a un oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-114">Indicates whether this instance of the <see cref="T:System.Reflection.Emit.ExceptionHandler" /> object is equal to a specified object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ExceptionHandler.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="f022a-115">Oggetto con cui confrontare questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-115">The object to compare this instance to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f022a-116">Indica se questa istanza dell'oggetto <see cref="T:System.Reflection.Emit.ExceptionHandler" /> Ã¨ uguale a un oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-116">Indicates whether this instance of the <see cref="T:System.Reflection.Emit.ExceptionHandler" /> object is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f022a-117">
            <see langword="true" /> se <paramref name="obj" /> e questa istanza sono uguali; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-117">
              <see langword="true" /> if <paramref name="obj" /> and this instance are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Reflection.Emit.ExceptionHandler other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Reflection.Emit.ExceptionHandler other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ExceptionHandler.Equals(System.Reflection.Emit.ExceptionHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ExceptionHandler) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Reflection::Emit::ExceptionHandler other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Reflection.Emit.ExceptionHandler" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="f022a-118">Oggetto gestore di eccezioni con cui confrontare questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-118">The exception handler object to compare this instance to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f022a-119">Indica se questa istanza dell'oggetto <see cref="T:System.Reflection.Emit.ExceptionHandler" /> Ã¨ uguale a un altro oggetto <see cref="T:System.Reflection.Emit.ExceptionHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-119">Indicates whether this instance of the <see cref="T:System.Reflection.Emit.ExceptionHandler" /> object is equal to another <see cref="T:System.Reflection.Emit.ExceptionHandler" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f022a-120">
            <see langword="true" /> se <paramref name="other" /> e questa istanza sono uguali; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-120">
              <see langword="true" /> if <paramref name="other" /> and this instance are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionTypeToken">
      <MemberSignature Language="C#" Value="public int ExceptionTypeToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExceptionTypeToken" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ExceptionHandler.ExceptionTypeToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExceptionTypeToken As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExceptionTypeToken { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f022a-121">Ottiene il token del tipo di eccezione gestito da questo gestore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-121">Gets the token of the exception type handled by this handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f022a-122">Token del tipo di eccezione gestito da questo gestore oppure 0 se non ne esiste alcuno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-122">The token of the exception type handled by this handler, or 0 if none exists.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterOffset">
      <MemberSignature Language="C#" Value="public int FilterOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FilterOffset" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ExceptionHandler.FilterOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FilterOffset { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f022a-123">Ottiene l'offset in byte in corrispondenza del quale ha inizio il codice del filtro per questo gestore di eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-123">Gets the byte offset at which the filter code for the exception handler begins.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f022a-124">Offset dei byte in corrispondenza del quale inizia il codice di filtro, oppure 0 se non Ã¨ presente alcun filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-124">The byte offset at which the filter code begins, or 0 if no filter  is present.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ExceptionHandler.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f022a-125">Funge da funzione hash predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-125">Serves as the default hash function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f022a-126">Codice hash per l'oggetto corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-126">The hash code for the current object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlerLength">
      <MemberSignature Language="C#" Value="public int HandlerLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HandlerLength" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ExceptionHandler.HandlerLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HandlerLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HandlerLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f022a-127">Recupera la lunghezza, in byte, gestore di eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-127">Gets the length, in bytes, of the exception handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f022a-128">Lunghezza in byte del gestore di eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-128">The length, in bytes, of the exception handler.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlerOffset">
      <MemberSignature Language="C#" Value="public int HandlerOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HandlerOffset" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ExceptionHandler.HandlerOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HandlerOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HandlerOffset { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f022a-129">Ottiene l'offset in byte della prima istruzione del gestore di eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-129">Gets the byte offset of the first instruction of the exception handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f022a-130">L'offset in byte della prima istruzione del gestore di eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-130">The byte offset of the first instruction of the exception handler.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Kind">
      <MemberSignature Language="C#" Value="public System.Reflection.ExceptionHandlingClauseOptions Kind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.ExceptionHandlingClauseOptions Kind" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ExceptionHandler.Kind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Kind As ExceptionHandlingClauseOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ExceptionHandlingClauseOptions Kind { System::Reflection::ExceptionHandlingClauseOptions get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ExceptionHandlingClauseOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f022a-131">Ottiene un valore che rappresenta il tipo di gestore di eccezioni che questo oggetto rappresenta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-131">Gets a value that represents the kind of exception handler this object represents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f022a-132">Uno dei valori di enumerazione che specifica il tipo di gestore di eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-132">One of the enumeration values that specifies the kind of exception handler.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.Emit.ExceptionHandler left, System.Reflection.Emit.ExceptionHandler right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Reflection.Emit.ExceptionHandler left, valuetype System.Reflection.Emit.ExceptionHandler right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ExceptionHandler.op_Equality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ExceptionHandler, right As ExceptionHandler) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::Emit::ExceptionHandler left, System::Reflection::Emit::ExceptionHandler right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.Emit.ExceptionHandler" />
        <Parameter Name="right" Type="System.Reflection.Emit.ExceptionHandler" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="f022a-133">Primo oggetto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-133">The first object to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="f022a-134">Secondo oggetto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-134">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f022a-135">Determina se due istanze specificate dell'oggetto <see cref="T:System.Reflection.Emit.ExceptionHandler" /> sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-135">Determines whether two specified instances of <see cref="T:System.Reflection.Emit.ExceptionHandler" /> are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f022a-136">
            <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> sono uguali; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-136">
              <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.Emit.ExceptionHandler left, System.Reflection.Emit.ExceptionHandler right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Reflection.Emit.ExceptionHandler left, valuetype System.Reflection.Emit.ExceptionHandler right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ExceptionHandler.op_Inequality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ExceptionHandler, right As ExceptionHandler) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::Emit::ExceptionHandler left, System::Reflection::Emit::ExceptionHandler right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.Emit.ExceptionHandler" />
        <Parameter Name="right" Type="System.Reflection.Emit.ExceptionHandler" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="f022a-137">Primo oggetto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-137">The first object to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="f022a-138">Secondo oggetto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-138">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f022a-139">Determina se due istanze specificate dell'oggetto <see cref="T:System.Reflection.Emit.ExceptionHandler" /> non sono uguali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-139">Determines whether two specified instances of <see cref="T:System.Reflection.Emit.ExceptionHandler" /> are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f022a-140">
            <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> non sono uguali; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-140">
              <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryLength">
      <MemberSignature Language="C#" Value="public int TryLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TryLength" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ExceptionHandler.TryLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TryLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TryLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f022a-141">Ottiene la lunghezza, in byte, del codice protetto da questo gestore di eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-141">Gets the length, in bytes, of the code protected by this exception handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f022a-142">La lunghezza, in byte, del codice protetto da questo gestore di eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-142">The length, in bytes, of the code protected by this exception handler.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryOffset">
      <MemberSignature Language="C#" Value="public int TryOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TryOffset" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ExceptionHandler.TryOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TryOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TryOffset { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f022a-143">Ottiene l'offset in byte in corrispondenza del quale ha inizio il codice che Ã¨ protetto da questo gestore di eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-143">Gets the byte offset at which the code that is protected by this exception handler begins.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f022a-144">L'offset in byte in corrispondenza del quale ha inizio il codice che Ã¨ protetto da questo gestore di eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f022a-144">The byte offset at which the code that is protected by this exception handler begins.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>