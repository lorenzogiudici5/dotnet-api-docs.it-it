<Type Name="CustomAttributeBuilder" FullName="System.Reflection.Emit.CustomAttributeBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7da0298844f0ab5fe681d997064c51fb30403090" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48602244" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CustomAttributeBuilder : System.Runtime.InteropServices._CustomAttributeBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit CustomAttributeBuilder extends System.Object implements class System.Runtime.InteropServices._CustomAttributeBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.CustomAttributeBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomAttributeBuilder&#xA;Implements _CustomAttributeBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomAttributeBuilder : System::Runtime::InteropServices::_CustomAttributeBuilder" />
  <TypeSignature Language="F#" Value="type CustomAttributeBuilder = class&#xA;    interface _CustomAttributeBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._CustomAttributeBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._CustomAttributeBuilder))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Consente di compilare attributi personalizzati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il `CustomAttributeBuilder` oggetto restituito dal costruttore per descrivere l'attributo personalizzato. Associare il `CustomAttribute` con un'istanza del generatore chiamando il `SetCustomAttribute` metodo su tale istanza. Ad esempio, creare un `CustomAttributeBuilder` per descrivere un'istanza di `AssemblyCultureAttribute` fornendo il costruttore di <xref:System.Reflection.AssemblyCultureAttribute> e il relativo argomento. Quindi chiamare <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> su un `AssemblyBuilder` per stabilire l'associazione.  
  
   
  
## Examples  
 Esempio di codice seguente illustra l'uso di `CustomAttributeBuilder`.  
  
 [!code-cpp[System.Reflection.Emit.CustomAttributeBuilder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.CustomAttributeBuilder Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.CustomAttributeBuilder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.CustomAttributeBuilder Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.CustomAttributeBuilder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.CustomAttributeBuilder Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza un'istanza della classe <see langword="CustomAttributeBuilder" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeBuilder (System.Reflection.ConstructorInfo con, object[] constructorArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ConstructorInfo con, object[] constructorArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (con As ConstructorInfo, constructorArgs As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeBuilder(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Object ^&gt; ^ constructorArgs);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Emit.CustomAttributeBuilder : System.Reflection.ConstructorInfo * obj[] -&gt; System.Reflection.Emit.CustomAttributeBuilder" Usage="new System.Reflection.Emit.CustomAttributeBuilder (con, constructorArgs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="constructorArgs" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="con">Costruttore dell'attributo personalizzato.</param>
        <param name="constructorArgs">Argomenti per il costruttore dell'attributo personalizzato.</param>
        <summary>Inizializza un'istanza della classe <see langword="CustomAttributeBuilder" /> dati il costruttore dell'attributo personalizzato e gli argomenti per il costruttore.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gli elementi del `constructorArgs` matrice sono limitati ai tipi di elemento. Possono essere `byte`, `sbyte`, `int`, `uint`, `long`, `ulong`, `float`, `double`, `String`, `char`, `bool`, un'enumerazione, un tipo, uno qualsiasi dei precedenti tipi di cui è stato eseguito il cast a un oggetto o una matrice unidimensionale e in base zero di uno qualsiasi dei tipi precedenti.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="con" /> è statico o privato.  
  
oppure 
Il numero degli argomenti forniti non corrisponde al numero di parametri del costruttore richiesti dalla convenzione di chiamata del costruttore.  
  
oppure 
Il tipo degli argomenti forniti non corrisponde al tipo del parametro dichiarato nel costruttore.  
  
oppure 
Un argomento fornito è un tipo di riferimento diverso da <see cref="T:System.String" /> o <see cref="T:System.Type" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="con" /> o <paramref name="constructorArgs" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeBuilder (System.Reflection.ConstructorInfo con, object[] constructorArgs, System.Reflection.FieldInfo[] namedFields, object[] fieldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ConstructorInfo con, object[] constructorArgs, class System.Reflection.FieldInfo[] namedFields, object[] fieldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.FieldInfo[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (con As ConstructorInfo, constructorArgs As Object(), namedFields As FieldInfo(), fieldValues As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeBuilder(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Object ^&gt; ^ constructorArgs, cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ namedFields, cli::array &lt;System::Object ^&gt; ^ fieldValues);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Emit.CustomAttributeBuilder : System.Reflection.ConstructorInfo * obj[] * System.Reflection.FieldInfo[] * obj[] -&gt; System.Reflection.Emit.CustomAttributeBuilder" Usage="new System.Reflection.Emit.CustomAttributeBuilder (con, constructorArgs, namedFields, fieldValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="constructorArgs" Type="System.Object[]" />
        <Parameter Name="namedFields" Type="System.Reflection.FieldInfo[]" />
        <Parameter Name="fieldValues" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="con">Costruttore dell'attributo personalizzato.</param>
        <param name="constructorArgs">Argomenti per il costruttore dell'attributo personalizzato.</param>
        <param name="namedFields">Campi denominati dell'attributo personalizzato.</param>
        <param name="fieldValues">Valori per i campi denominati dell'attributo personalizzato.</param>
        <summary>Inizializza un'istanza della classe <see langword="CustomAttributeBuilder" />, dati il costruttore dell'attributo personalizzato, gli argomenti al costruttore e un set di coppie campo/valore con nome.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gli elementi del `constructorArgs` e `fieldValues` le matrici sono limitate ai tipi di elemento. Possono essere `byte`, `sbyte`, `int`, `uint`, `long`, `ulong`, `float`, `double`, `String`, `char`, `bool`, un'enumerazione, un tipo, uno qualsiasi dei precedenti tipi di cui è stato eseguito il cast a un oggetto o una matrice unidimensionale e in base zero di uno qualsiasi dei tipi precedenti.  
  
> [!IMPORTANT]
>  Non includere i campi privati nel `namedFields`. In questo modo verrà <xref:System.Reflection.CustomAttributeFormatException> viene generata quando il <xref:System.Attribute.GetCustomAttributes%2A> viene chiamato in un secondo momento sul tipo completo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le matrici <paramref name="namedFields" /> e di <paramref name="fieldValues" /> hanno lunghezze diverse.  
  
oppure 
 Il parametro <paramref name="con" /> è statico o privato.  
  
oppure 
Il numero degli argomenti forniti non corrisponde al numero di parametri del costruttore richiesti dalla convenzione di chiamata del costruttore.  
  
oppure 
Il tipo degli argomenti forniti non corrisponde al tipo del parametro dichiarato nel costruttore.  
  
oppure 
I tipi dei valori dei campi non corrispondono ai tipi dei campi denominati.  
  
oppure 
Il campo non appartiene alla stessa classe o classe base del costruttore.  
  
oppure 
Un argomento fornito o un campo denominato è un tipo di riferimento diverso da <see cref="T:System.String" /> o <see cref="T:System.Type" />.</exception>
        <exception cref="T:System.ArgumentNullException">Uno dei parametri è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeBuilder (System.Reflection.ConstructorInfo con, object[] constructorArgs, System.Reflection.PropertyInfo[] namedProperties, object[] propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ConstructorInfo con, object[] constructorArgs, class System.Reflection.PropertyInfo[] namedProperties, object[] propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (con As ConstructorInfo, constructorArgs As Object(), namedProperties As PropertyInfo(), propertyValues As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeBuilder(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Object ^&gt; ^ constructorArgs, cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ namedProperties, cli::array &lt;System::Object ^&gt; ^ propertyValues);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Emit.CustomAttributeBuilder : System.Reflection.ConstructorInfo * obj[] * System.Reflection.PropertyInfo[] * obj[] -&gt; System.Reflection.Emit.CustomAttributeBuilder" Usage="new System.Reflection.Emit.CustomAttributeBuilder (con, constructorArgs, namedProperties, propertyValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="constructorArgs" Type="System.Object[]" />
        <Parameter Name="namedProperties" Type="System.Reflection.PropertyInfo[]" />
        <Parameter Name="propertyValues" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="con">Costruttore dell'attributo personalizzato.</param>
        <param name="constructorArgs">Argomenti per il costruttore dell'attributo personalizzato.</param>
        <param name="namedProperties">Proprietà denominate dell'attributo personalizzato.</param>
        <param name="propertyValues">Valori per le proprietà denominate dell'attributo personalizzato.</param>
        <summary>Inizializza un'istanza della classe <see langword="CustomAttributeBuilder" />, dati il costruttore dell'attributo personalizzato, gli argomenti al costruttore e un set di coppie di proprietà o valori denominati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gli elementi del `constructorArgs` e `propertyValues` le matrici sono limitate ai tipi di elemento. Possono essere `byte`, `sbyte`, `int`, `uint`, `long`, `ulong`, `float`, `double`, `String`, `char`, `bool`, un'enumerazione, un tipo, uno qualsiasi dei precedenti tipi di cui è stato eseguito il cast a un oggetto o una matrice unidimensionale e in base zero di uno qualsiasi dei tipi precedenti.  
  
> [!IMPORTANT]
>  Non includono proprietà private in `namedProperties`. In questo modo verrà <xref:System.Reflection.CustomAttributeFormatException> viene generata quando il <xref:System.Attribute.GetCustomAttributes%2A> viene chiamato in un secondo momento sul tipo completo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le matrici <paramref name="namedProperties" /> e di <paramref name="propertyValues" /> hanno lunghezze diverse.  
  
oppure 
 Il parametro <paramref name="con" /> è statico o privato.  
  
oppure 
Il numero degli argomenti forniti non corrisponde al numero di parametri del costruttore richiesti dalla convenzione di chiamata del costruttore.  
  
oppure 
Il tipo degli argomenti forniti non corrisponde al tipo del parametro dichiarato nel costruttore.  
  
oppure 
I tipi dei valori delle proprietà non corrispondono ai tipi delle proprietà denominate.  
  
oppure 
Una proprietà non ha un metodo di impostazione.  
  
oppure 
La proprietà non appartiene alla stessa classe o classe base del costruttore.  
  
oppure 
Un argomento fornito o una proprietà denominata è un tipo di riferimento diverso da <see cref="T:System.String" /> o <see cref="T:System.Type" />.</exception>
        <exception cref="T:System.ArgumentNullException">Uno dei parametri è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeBuilder (System.Reflection.ConstructorInfo con, object[] constructorArgs, System.Reflection.PropertyInfo[] namedProperties, object[] propertyValues, System.Reflection.FieldInfo[] namedFields, object[] fieldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ConstructorInfo con, object[] constructorArgs, class System.Reflection.PropertyInfo[] namedProperties, object[] propertyValues, class System.Reflection.FieldInfo[] namedFields, object[] fieldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[],System.Reflection.FieldInfo[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (con As ConstructorInfo, constructorArgs As Object(), namedProperties As PropertyInfo(), propertyValues As Object(), namedFields As FieldInfo(), fieldValues As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeBuilder(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Object ^&gt; ^ constructorArgs, cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ namedProperties, cli::array &lt;System::Object ^&gt; ^ propertyValues, cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ namedFields, cli::array &lt;System::Object ^&gt; ^ fieldValues);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Emit.CustomAttributeBuilder : System.Reflection.ConstructorInfo * obj[] * System.Reflection.PropertyInfo[] * obj[] * System.Reflection.FieldInfo[] * obj[] -&gt; System.Reflection.Emit.CustomAttributeBuilder" Usage="new System.Reflection.Emit.CustomAttributeBuilder (con, constructorArgs, namedProperties, propertyValues, namedFields, fieldValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="constructorArgs" Type="System.Object[]" />
        <Parameter Name="namedProperties" Type="System.Reflection.PropertyInfo[]" />
        <Parameter Name="propertyValues" Type="System.Object[]" />
        <Parameter Name="namedFields" Type="System.Reflection.FieldInfo[]" />
        <Parameter Name="fieldValues" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="con">Costruttore dell'attributo personalizzato.</param>
        <param name="constructorArgs">Argomenti per il costruttore dell'attributo personalizzato.</param>
        <param name="namedProperties">Proprietà denominate dell'attributo personalizzato.</param>
        <param name="propertyValues">Valori per le proprietà denominate dell'attributo personalizzato.</param>
        <param name="namedFields">Campi denominati dell'attributo personalizzato.</param>
        <param name="fieldValues">Valori per i campi denominati dell'attributo personalizzato.</param>
        <summary>Inizializza un'istanza della classe <see langword="CustomAttributeBuilder" />, dati il costruttore dell'attributo personalizzato, gli argomenti al costruttore e un set di coppie di proprietà o valori denominati e un set di coppie di campi o valori denominati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gli elementi del `constructorArgs`, `propertyValues`, o `fieldValues` le matrici sono limitate ai tipi di elemento. Possono essere `byte`, `sbyte`, `int`, `uint`, `long`, `ulong`, `float`, `double`, `String`, `char`, `bool`, un'enumerazione, un tipo, uno qualsiasi dei precedenti tipi di cui è stato eseguito il cast a un oggetto o una matrice unidimensionale e in base zero di uno qualsiasi dei tipi precedenti.  
  
> [!IMPORTANT]
>  Non includono campi o proprietà private `namedProperties` o `namedFields`. In questo modo verrà <xref:System.Reflection.CustomAttributeFormatException> viene generata quando il <xref:System.Attribute.GetCustomAttributes%2A> viene chiamato in un secondo momento sul tipo completo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le matrici <paramref name="namedProperties" /> e di <paramref name="propertyValues" /> hanno lunghezze diverse.  
  
oppure 
Le matrici <paramref name="namedFields" /> e di <paramref name="fieldValues" /> hanno lunghezze diverse.  
  
oppure 
 Il parametro <paramref name="con" /> è statico o privato.  
  
oppure 
Il numero degli argomenti forniti non corrisponde al numero di parametri del costruttore richiesti dalla convenzione di chiamata del costruttore.  
  
oppure 
Il tipo degli argomenti forniti non corrisponde al tipo del parametro dichiarato nel costruttore.  
  
oppure 
I tipi dei valori delle proprietà non corrispondono ai tipi delle proprietà denominate.  
  
oppure 
I tipi dei valori dei campi non corrispondono ai tipi dei campi corrispondenti.  
  
oppure 
Una proprietà non ha un metodo di impostazione.  
  
oppure 
La proprietà o il campo non appartiene alla stessa classe o classe base del costruttore.  
  
oppure 
Un argomento fornito o una proprietà denominata o un campo denominato, è un tipo di riferimento diverso da <see cref="T:System.String" /> o <see cref="T:System.Type" />.</exception>
        <exception cref="T:System.ArgumentNullException">Uno dei parametri è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._CustomAttributeBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _CustomAttributeBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._CustomAttributeBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _CustomAttributeBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._CustomAttributeBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_CustomAttributeBuilder::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._CustomAttributeBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">Riservato per utilizzi futuri. Deve essere IID_NULL.</param>
        <param name="rgszNames">Matrice di nomi passata di cui eseguire il mapping.</param>
        <param name="cNames">Conteggio dei nomi di cui eseguire il mapping.</param>
        <param name="lcid">Contesto delle impostazioni locali in cui interpretare i nomi.</param>
        <param name="rgDispId">Matrice allocata dal chiamante che riceve gli ID corrispondenti ai nomi.</param>
        <summary>Esegue il mapping di un set di nomi a un set corrispondente di ID dispatch.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito. Per altre informazioni sulle `IDispatch::GetIDsOfNames`, consultare la MSDN Library.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Il metodo viene chiamato ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _CustomAttributeBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _CustomAttributeBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_CustomAttributeBuilder::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">Informazioni sul tipo da restituire.</param>
        <param name="lcid">Identificatore delle impostazioni locali per le informazioni sul tipo.</param>
        <param name="ppTInfo">Riceve un puntatore all'oggetto relativo alle informazioni sul tipo richiesto.</param>
        <summary>Recupera le informazioni sul tipo relative a un oggetto che può quindi essere usato per ottenere informazioni sul tipo relative a un'interfaccia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito. Per altre informazioni sulle `IDispatch::GetTypeInfo`, consultare la MSDN Library.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Il metodo viene chiamato ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _CustomAttributeBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _CustomAttributeBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_CustomAttributeBuilder::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">Punta a una posizione che riceve il numero di interfacce di informazioni sul tipo fornite dall'oggetto.</param>
        <summary>Recupera il numero delle interfacce di informazioni sul tipo fornite da un oggetto (0 o 1).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito. Per altre informazioni sulle `IDispatch::GetTypeInfoCount`, consultare la MSDN Library.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Il metodo viene chiamato ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._CustomAttributeBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _CustomAttributeBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._CustomAttributeBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _CustomAttributeBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._CustomAttributeBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_CustomAttributeBuilder::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._CustomAttributeBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">Identifica il membro.</param>
        <param name="riid">Riservato per utilizzi futuri. Deve essere IID_NULL.</param>
        <param name="lcid">Contesto di impostazioni locali all'interno del quale devono essere interpretati gli argomenti.</param>
        <param name="wFlags">Flag che descrivono il contesto della chiamata.</param>
        <param name="pDispParams">Puntatore a una struttura contenente una matrice di argomenti, una matrice di DISPID per argomenti denominati e i conteggi del numero di elementi nelle matrici.</param>
        <param name="pVarResult">Puntatore alla posizione in cui deve essere archiviato il risultato.</param>
        <param name="pExcepInfo">Puntatore a una struttura contenente informazioni sull'eccezione.</param>
        <param name="puArgErr">Indice del primo argomento che contiene un errore.</param>
        <summary>Fornisce l'accesso a proprietà e metodi esposti da un oggetto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito. Per altre informazioni sulle `IDispatch::Invoke`, consultare la MSDN Library.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Il metodo viene chiamato ad associazione tardiva usando l'interfaccia COM <c>IDispatch</c>.</exception>
      </Docs>
    </Member>
  </Members>
</Type>