<Type Name="ModuleBuilder" FullName="System.Reflection.Emit.ModuleBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="872edecb35014c892af6bf1f6c3aa629039c1b9b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36643278" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ModuleBuilder : System.Reflection.Module, System.Runtime.InteropServices._ModuleBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit ModuleBuilder extends System.Reflection.Module implements class System.Runtime.InteropServices._ModuleBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.ModuleBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class ModuleBuilder&#xA;Inherits Module&#xA;Implements _ModuleBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModuleBuilder : System::Reflection::Module, System::Runtime::InteropServices::_ModuleBuilder" />
  <TypeSignature Language="F#" Value="type ModuleBuilder = class&#xA;    inherit Module&#xA;    interface _ModuleBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.Module</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._ModuleBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._ModuleBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a2472-101">Defines and represents a module in a dynamic assembly.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a2472-101">Defines and represents a module in a dynamic assembly.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-102">Per ottenere un'istanza di <xref:System.Reflection.Emit.ModuleBuilder>, utilizzare il <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2472-102">To get an instance of <xref:System.Reflection.Emit.ModuleBuilder>, use the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2472-103">L'esempio di codice seguente illustra l'uso di `ModuleBuilder` per creare un modulo dinamico.</span><span class="sxs-lookup"><span data-stu-id="a2472-103">The following code sample demonstrates the use of `ModuleBuilder` to create a dynamic module.</span></span> <span data-ttu-id="a2472-104">Si noti che ModuleBuilder viene creato chiamando <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> in <xref:System.Reflection.Emit.AssemblyBuilder>, anziché tramite un costruttore.</span><span class="sxs-lookup"><span data-stu-id="a2472-104">Note that the ModuleBuilder is created by calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> in <xref:System.Reflection.Emit.AssemblyBuilder>, rather than through a constructor.</span></span>  
  
 [!code-cpp[ModuleBuilder_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_Class/CPP/modulebuilder.cpp#1)]
 [!code-csharp[ModuleBuilder_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_Class/CS/modulebuilder.cs#1)]
 [!code-vb[ModuleBuilder_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_Class/VB/modulebuilder.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModuleBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModuleBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="System.Reflection.Emit.ModuleBuilder.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a2472-105">Gets the dynamic assembly that defined this instance of <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-105">Gets the dynamic assembly that defined this instance of <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a2472-106">L'assembly dinamico che definito il modulo dinamico corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-106">The dynamic assembly that defined the current dynamic module.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-107">Il <xref:System.Reflection.Assembly> oggetto restituito è il <xref:System.Reflection.Emit.AssemblyBuilder> che definito questa istanza di <xref:System.Reflection.Emit.ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a2472-107">The <xref:System.Reflection.Assembly> object that is returned is the <xref:System.Reflection.Emit.AssemblyBuilder> that defined this instance of <xref:System.Reflection.Emit.ModuleBuilder>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGlobalFunctions">
      <MemberSignature Language="C#" Value="public void CreateGlobalFunctions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateGlobalFunctions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateGlobalFunctions ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateGlobalFunctions();" />
      <MemberSignature Language="F#" Value="member this.CreateGlobalFunctions : unit -&gt; unit" Usage="moduleBuilder.CreateGlobalFunctions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2472-108">Completes the global function definitions and global data definitions for this dynamic module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-108">Completes the global function definitions and global data definitions for this dynamic module.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-109">Questo metodo deve essere chiamato quando l'utente viene eseguita con la definizione di tutte le funzioni globali all'interno del modulo dinamico.</span><span class="sxs-lookup"><span data-stu-id="a2472-109">This method should be called when the user is done with defining all the global functions within this dynamic module.</span></span> <span data-ttu-id="a2472-110">Dopo la chiamata a questa funzione, più nuove funzioni globali o gli nuovi dati globali non sono consentiti.</span><span class="sxs-lookup"><span data-stu-id="a2472-110">After calling this function, no more new global functions or new global data are allowed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-111">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-111">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-112">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-112">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2472-113">L'esempio seguente viene illustrato l'utilizzo di `CreateGlobalFunctions` per creare un metodo statico globale da un <xref:System.Reflection.Emit.MethodBuilder> implementato con <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2472-113">The following sample illustrates the use of `CreateGlobalFunctions` to create a static global method from a <xref:System.Reflection.Emit.MethodBuilder> implemented with <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A>.</span></span>  
  
 [!code-cpp[ModuleBuilder_CreateGlobalFunctions#2](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CPP/modulebuilder_createglobalfunctions.cpp#2)]
 [!code-csharp[ModuleBuilder_CreateGlobalFunctions#2](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CS/modulebuilder_createglobalfunctions.cs#2)]
 [!code-vb[ModuleBuilder_CreateGlobalFunctions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/VB/modulebuilder_createglobalfunctions.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2472-114">This method was called previously.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-114">This method was called previously.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineDocument">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument (string url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument(string url, valuetype System.Guid language, valuetype System.Guid languageVendor, valuetype System.Guid documentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDocument (url As String, language As Guid, languageVendor As Guid, documentType As Guid) As ISymbolDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ DefineDocument(System::String ^ url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="F#" Value="member this.DefineDocument : string * Guid * Guid * Guid -&gt; System.Diagnostics.SymbolStore.ISymbolDocumentWriter" Usage="moduleBuilder.DefineDocument (url, language, languageVendor, documentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="language" Type="System.Guid" />
        <Parameter Name="languageVendor" Type="System.Guid" />
        <Parameter Name="documentType" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="a2472-115">The URL for the document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-115">The URL for the document.</span>
          </span>
        </param>
        <param name="language">
          <span data-ttu-id="a2472-116">The GUID that identifies the document language.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-116">The GUID that identifies the document language.</span>
          </span>
          <span data-ttu-id="a2472-117">This can be <see cref="F:System.Guid.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-117">This can be <see cref="F:System.Guid.Empty" />.</span>
          </span>
        </param>
        <param name="languageVendor">
          <span data-ttu-id="a2472-118">The GUID that identifies the document language vendor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-118">The GUID that identifies the document language vendor.</span>
          </span>
          <span data-ttu-id="a2472-119">This can be <see cref="F:System.Guid.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-119">This can be <see cref="F:System.Guid.Empty" />.</span>
          </span>
        </param>
        <param name="documentType">
          <span data-ttu-id="a2472-120">The GUID that identifies the document type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-120">The GUID that identifies the document type.</span>
          </span>
          <span data-ttu-id="a2472-121">This can be <see cref="F:System.Guid.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-121">This can be <see cref="F:System.Guid.Empty" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-122">Defines a document for source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-122">Defines a document for source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-123">The defined document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-123">The defined document.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="a2472-124">Versioni precedenti di .NET Framework generano <xref:System.ArgumentException> invece di <xref:System.ArgumentNullException> quando `url` è `null`.</span><span class="sxs-lookup"><span data-stu-id="a2472-124">Earlier versions of the .NET Framework throw <xref:System.ArgumentException> instead of <xref:System.ArgumentNullException> when `url` is `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2472-125">L'esempio di codice seguente viene illustrato l'utilizzo di `DefineDocument` per allegare un documento di simbolo esterno (in questo caso, un linguaggio intermedio file non elaborato) a un modulo dinamico.</span><span class="sxs-lookup"><span data-stu-id="a2472-125">The following code sample illustrates the use of `DefineDocument` to attach an external symbol document (in this case, a raw IL file) to a dynamic module.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefineDocument#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineDocument/CPP/modulebuilder_definedocument.cpp#1)]
 [!code-csharp[ModuleBuilder_DefineDocument#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineDocument/CS/modulebuilder_definedocument.cs#1)]
 [!code-vb[ModuleBuilder_DefineDocument#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineDocument/VB/modulebuilder_definedocument.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-126">
            <paramref name="url" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-126">
              <paramref name="url" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a2472-127">This is a change from earlier versions of the .NET Framework.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-127">This is a change from earlier versions of the .NET Framework.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2472-128">This method is called on a dynamic module that is not a debug module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-128">This method is called on a dynamic module that is not a debug module.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineEnum">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.EnumBuilder DefineEnum (string name, System.Reflection.TypeAttributes visibility, Type underlyingType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.EnumBuilder DefineEnum(string name, valuetype System.Reflection.TypeAttributes visibility, class System.Type underlyingType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineEnum (name As String, visibility As TypeAttributes, underlyingType As Type) As EnumBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::EnumBuilder ^ DefineEnum(System::String ^ name, System::Reflection::TypeAttributes visibility, Type ^ underlyingType);" />
      <MemberSignature Language="F#" Value="member this.DefineEnum : string * System.Reflection.TypeAttributes * Type -&gt; System.Reflection.Emit.EnumBuilder" Usage="moduleBuilder.DefineEnum (name, visibility, underlyingType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.EnumBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="visibility" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="underlyingType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-129">The full path of the enumeration type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-129">The full path of the enumeration type.</span>
          </span>
          <span data-ttu-id="a2472-130">
            <c>name</c> cannot contain embedded nulls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-130">
              <c>name</c> cannot contain embedded nulls.</span>
          </span>
        </param>
        <param name="visibility">
          <span data-ttu-id="a2472-131">The type attributes for the enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-131">The type attributes for the enumeration.</span>
          </span>
          <span data-ttu-id="a2472-132">The attributes are any bits defined by <see cref="F:System.Reflection.TypeAttributes.VisibilityMask" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-132">The attributes are any bits defined by <see cref="F:System.Reflection.TypeAttributes.VisibilityMask" />.</span>
          </span>
        </param>
        <param name="underlyingType">
          <span data-ttu-id="a2472-133">The underlying type for the enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-133">The underlying type for the enumeration.</span>
          </span>
          <span data-ttu-id="a2472-134">This must be a built-in integer type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-134">This must be a built-in integer type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-135">Defines an enumeration type that is a value type with a single non-static field called <paramref name="value__" /> of the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-135">Defines an enumeration type that is a value type with a single non-static field called <paramref name="value__" /> of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-136">The defined enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-136">The defined enumeration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-137">L'enum definito è una classe derivata di <xref:System.Enum>.</span><span class="sxs-lookup"><span data-stu-id="a2472-137">The defined enum is a derived class of <xref:System.Enum>.</span></span> <span data-ttu-id="a2472-138">Il `value__` campo ha <xref:System.Reflection.FieldAttributes.Private> e <xref:System.Reflection.FieldAttributes.SpecialName> set di attributi.</span><span class="sxs-lookup"><span data-stu-id="a2472-138">The `value__` field has <xref:System.Reflection.FieldAttributes.Private> and <xref:System.Reflection.FieldAttributes.SpecialName> attributes set.</span></span>  
  
 <span data-ttu-id="a2472-139">Per ulteriori informazioni sui tipi integer incorporato che può essere specificato come tipi sottostanti delle enumerazioni, vedere [Cenni preliminari sulla libreria di classe](~/docs/standard/class-library-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a2472-139">For more information about the built-in integer types that can be specified as the underlying types of enumerations, see [Class Library Overview](~/docs/standard/class-library-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-140">In .NET Framework versioni 1.0 e 1.1, è necessario definire le enumerazioni utilizzando <xref:System.Reflection.Emit.TypeBuilder> perché <xref:System.Reflection.Emit.EnumBuilder> genera le enumerazioni i cui elementi sono di tipo <xref:System.Int32> anziché il tipo di enumerazione.</span><span class="sxs-lookup"><span data-stu-id="a2472-140">In the .NET Framework versions 1.0 and 1.1, it is necessary to define enumerations using <xref:System.Reflection.Emit.TypeBuilder> because <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements are of type <xref:System.Int32> instead of the enumeration type.</span></span> <span data-ttu-id="a2472-141">In .NET Framework versione 2.0, <xref:System.Reflection.Emit.EnumBuilder> genera le enumerazioni i cui elementi sono del tipo corretto.</span><span class="sxs-lookup"><span data-stu-id="a2472-141">In the .NET Framework version 2.0, <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements have the correct type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-142">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-142">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-143">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-143">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2472-144">Nell'esempio seguente viene illustrato l'utilizzo di `DefineEnum` per implementare una classe di enumerazione in un modulo dinamico.</span><span class="sxs-lookup"><span data-stu-id="a2472-144">The following example illustrates the use of `DefineEnum` to implement an enumeration class in a dynamic module.</span></span> <span data-ttu-id="a2472-145">Nell'esempio viene definita un'enumerazione denominata `Elevation` dotato di un tipo sottostante <xref:System.Int32>e crea due elementi: `Low`, con un valore pari a 0, e `High`, con un valore pari a 1.</span><span class="sxs-lookup"><span data-stu-id="a2472-145">The example defines an enumeration named `Elevation` that has an underlying type of <xref:System.Int32>, and creates two elements: `Low`, with a value of 0, and `High`, with a value of 1.</span></span> <span data-ttu-id="a2472-146">Dopo aver creato il tipo, l'assembly viene salvata con il nome `TempAssembly.dll`.</span><span class="sxs-lookup"><span data-stu-id="a2472-146">After the type has been created, the assembly is saved with the name `TempAssembly.dll`.</span></span> <span data-ttu-id="a2472-147">È possibile usare il [Ildasm.exe (Disassembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) per esaminare il contenuto di questo assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-147">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the contents of this assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-148">.NET Framework precedenti alla versione 2.0, questo esempio di codice non produce un'enumerazione corretta.</span><span class="sxs-lookup"><span data-stu-id="a2472-148">Prior to the .NET Framework version 2.0, this code example does not produce a correct enumeration.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefineEnum#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineEnum/CPP/modulebuilder_defineenum.cpp#1)]
 [!code-csharp[ModuleBuilder_DefineEnum#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineEnum/CS/modulebuilder_defineenum.cs#1)]
 [!code-vb[ModuleBuilder_DefineEnum#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineEnum/VB/modulebuilder_defineenum.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-149">Attributes other than visibility attributes are provided.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-149">Attributes other than visibility attributes are provided.</span>
          </span>
          <span data-ttu-id="a2472-150">-or-  An enumeration with the given name exists in the parent assembly of this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-150">-or-  An enumeration with the given name exists in the parent assembly of this module.</span>
          </span>
          <span data-ttu-id="a2472-151">-or-  The visibility attributes do not match the scope of the enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-151">-or-  The visibility attributes do not match the scope of the enumeration.</span>
          </span>
          <span data-ttu-id="a2472-152">For example, <see cref="F:System.Reflection.TypeAttributes.NestedPublic" /> is specified for <paramref name="visibility" />, but the enumeration is not a nested type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-152">For example, <see cref="F:System.Reflection.TypeAttributes.NestedPublic" /> is specified for <paramref name="visibility" />, but the enumeration is not a nested type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-153">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-153">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineGlobalMethod">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a2472-154">Defines a global method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-154">Defines a global method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineGlobalMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefineGlobalMethod (string name, System.Reflection.MethodAttributes attributes, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefineGlobalMethod(string name, valuetype System.Reflection.MethodAttributes attributes, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineGlobalMethod (name As String, attributes As MethodAttributes, returnType As Type, parameterTypes As Type()) As MethodBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefineGlobalMethod(System::String ^ name, System::Reflection::MethodAttributes attributes, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.DefineGlobalMethod : string * System.Reflection.MethodAttributes * Type * Type[] -&gt; System.Reflection.Emit.MethodBuilder" Usage="moduleBuilder.DefineGlobalMethod (name, attributes, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-155">The name of the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-155">The name of the method.</span>
          </span>
          <span data-ttu-id="a2472-156">
            <c>name</c> cannot contain embedded nulls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-156">
              <c>name</c> cannot contain embedded nulls.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="a2472-157">The attributes of the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-157">The attributes of the method.</span>
          </span>
          <span data-ttu-id="a2472-158">
            <c>attributes</c> must include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-158">
              <c>attributes</c> must include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="a2472-159">The return type of the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-159">The return type of the method.</span>
          </span>
        </param>
        <param name="parameterTypes">
          <span data-ttu-id="a2472-160">The types of the method's parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-160">The types of the method's parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-161">Defines a global method with the specified name, attributes, return type, and parameter types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-161">Defines a global method with the specified name, attributes, return type, and parameter types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-162">The defined global method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-162">The defined global method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-163">Il metodo globale che definisce questo metodo non è utilizzabile finché non si chiama <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2472-163">The global method that this method defines is not usable until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-164">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-164">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-165">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-165">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2472-166">Nell'esempio seguente viene illustrato l'utilizzo di `DefineGlobalMethod` per creare un metodo indipendente dal tipo associato all'oggetto corrente <xref:System.Reflection.Emit.ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a2472-166">The following example illustrates the use of `DefineGlobalMethod` to create a type-independent method tied to the current <xref:System.Reflection.Emit.ModuleBuilder>.</span></span> <span data-ttu-id="a2472-167">Dopo aver compilato il metodo globale <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> deve essere chiamato per completare l'operazione.</span><span class="sxs-lookup"><span data-stu-id="a2472-167">After building the global method, <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> must be called in order to complete it.</span></span>  
  
 [!code-cpp[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CPP/modulebuilder_createglobalfunctions.cpp#1)]
 [!code-csharp[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CS/modulebuilder_createglobalfunctions.cs#1)]
 [!code-vb[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/VB/modulebuilder_createglobalfunctions.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-168">The method is not static.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-168">The method is not static.</span>
          </span>
          <span data-ttu-id="a2472-169">That is, <paramref name="attributes" /> does not include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-169">That is, <paramref name="attributes" /> does not include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span>
          </span>
          <span data-ttu-id="a2472-170">-or-  The length of <paramref name="name" /> is zero  -or-  An element in the <see cref="T:System.Type" /> array is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-170">-or-  The length of <paramref name="name" /> is zero  -or-  An element in the <see cref="T:System.Type" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-171">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-171">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2472-172">
            <see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> has been previously called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-172">
              <see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> has been previously called.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineGlobalMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefineGlobalMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefineGlobalMethod(string name, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineGlobalMethod (name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As MethodBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefineGlobalMethod(System::String ^ name, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.DefineGlobalMethod : string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] -&gt; System.Reflection.Emit.MethodBuilder" Usage="moduleBuilder.DefineGlobalMethod (name, attributes, callingConvention, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-173">The name of the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-173">The name of the method.</span>
          </span>
          <span data-ttu-id="a2472-174">
            <c>name</c> cannot contain embedded nulls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-174">
              <c>name</c> cannot contain embedded nulls.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="a2472-175">The attributes of the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-175">The attributes of the method.</span>
          </span>
          <span data-ttu-id="a2472-176">
            <c>attributes</c> must include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-176">
              <c>attributes</c> must include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span>
          </span>
        </param>
        <param name="callingConvention">
          <span data-ttu-id="a2472-177">The calling convention for the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-177">The calling convention for the method.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="a2472-178">The return type of the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-178">The return type of the method.</span>
          </span>
        </param>
        <param name="parameterTypes">
          <span data-ttu-id="a2472-179">The types of the method's parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-179">The types of the method's parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-180">Defines a global method with the specified name, attributes, calling convention, return type, and parameter types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-180">Defines a global method with the specified name, attributes, calling convention, return type, and parameter types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-181">The defined global method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-181">The defined global method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-182">È possibile usare il metodo globale definito fino a questo metodo chiamare <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2472-182">You cannot use the global method that this method defines until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-183">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-183">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-184">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-184">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2472-185">L'esempio di codice seguente viene illustrato l'utilizzo di `DefineGlobalMethod` per creare un metodo indipendente dal tipo associato all'oggetto corrente <xref:System.Reflection.Emit.ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a2472-185">The following code sample illustrates the use of `DefineGlobalMethod` to create a type-independent method tied to the current <xref:System.Reflection.Emit.ModuleBuilder>.</span></span> <span data-ttu-id="a2472-186">Dopo aver compilato il metodo globale <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> deve essere chiamato per completare l'operazione.</span><span class="sxs-lookup"><span data-stu-id="a2472-186">After building the global method, <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> must be called in order to complete it.</span></span>  
  
 [!code-cpp[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CPP/modulebuilder_createglobalfunctions.cpp#1)]
 [!code-csharp[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CS/modulebuilder_createglobalfunctions.cs#1)]
 [!code-vb[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/VB/modulebuilder_createglobalfunctions.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-187">The method is not static.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-187">The method is not static.</span>
          </span>
          <span data-ttu-id="a2472-188">That is, <paramref name="attributes" /> does not include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-188">That is, <paramref name="attributes" /> does not include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span>
          </span>
          <span data-ttu-id="a2472-189">-or-  An element in the <see cref="T:System.Type" /> array is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-189">-or-  An element in the <see cref="T:System.Type" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-190">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-190">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2472-191">
            <see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> has been previously called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-191">
              <see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> has been previously called.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineGlobalMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefineGlobalMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefineGlobalMethod(string name, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] requiredReturnTypeCustomModifiers, class System.Type[] optionalReturnTypeCustomModifiers, class System.Type[] parameterTypes, class System.Type[][] requiredParameterTypeCustomModifiers, class System.Type[][] optionalParameterTypeCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineGlobalMethod (name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As MethodBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefineGlobalMethod(System::String ^ name, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ requiredReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredParameterTypeCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="F#" Value="member this.DefineGlobalMethod : string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] * Type[] * Type[] * Type[][] * Type[][] -&gt; System.Reflection.Emit.MethodBuilder" Usage="moduleBuilder.DefineGlobalMethod (name, attributes, callingConvention, returnType, requiredReturnTypeCustomModifiers, optionalReturnTypeCustomModifiers, parameterTypes, requiredParameterTypeCustomModifiers, optionalParameterTypeCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="requiredReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="optionalReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="requiredParameterTypeCustomModifiers" Type="System.Type[][]" />
        <Parameter Name="optionalParameterTypeCustomModifiers" Type="System.Type[][]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-192">The name of the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-192">The name of the method.</span>
          </span>
          <span data-ttu-id="a2472-193">
            <c>name</c> cannot contain embedded null characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-193">
              <c>name</c> cannot contain embedded null characters.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="a2472-194">The attributes of the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-194">The attributes of the method.</span>
          </span>
          <span data-ttu-id="a2472-195">
            <c>attributes</c> must include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-195">
              <c>attributes</c> must include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span>
          </span>
        </param>
        <param name="callingConvention">
          <span data-ttu-id="a2472-196">The calling convention for the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-196">The calling convention for the method.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="a2472-197">The return type of the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-197">The return type of the method.</span>
          </span>
        </param>
        <param name="requiredReturnTypeCustomModifiers">
          <span data-ttu-id="a2472-198">An array of types representing the required custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-198">An array of types representing the required custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          </span>
          <span data-ttu-id="a2472-199">If the return type has no required custom modifiers, specify <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-199">If the return type has no required custom modifiers, specify <see langword="null" />.</span>
          </span>
        </param>
        <param name="optionalReturnTypeCustomModifiers">
          <span data-ttu-id="a2472-200">An array of types representing the optional custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-200">An array of types representing the optional custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          </span>
          <span data-ttu-id="a2472-201">If the return type has no optional custom modifiers, specify <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-201">If the return type has no optional custom modifiers, specify <see langword="null" />.</span>
          </span>
        </param>
        <param name="parameterTypes">
          <span data-ttu-id="a2472-202">The types of the method's parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-202">The types of the method's parameters.</span>
          </span>
        </param>
        <param name="requiredParameterTypeCustomModifiers">
          <span data-ttu-id="a2472-203">An array of arrays of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-203">An array of arrays of types.</span>
          </span>
          <span data-ttu-id="a2472-204">Each array of types represents the required custom modifiers for the corresponding parameter of the global method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-204">Each array of types represents the required custom modifiers for the corresponding parameter of the global method.</span>
          </span>
          <span data-ttu-id="a2472-205">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-205">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          </span>
          <span data-ttu-id="a2472-206">If the global method has no arguments, or if none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-206">If the global method has no arguments, or if none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          </span>
        </param>
        <param name="optionalParameterTypeCustomModifiers">
          <span data-ttu-id="a2472-207">An array of arrays of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-207">An array of arrays of types.</span>
          </span>
          <span data-ttu-id="a2472-208">Each array of types represents the optional custom modifiers for the corresponding parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-208">Each array of types represents the optional custom modifiers for the corresponding parameter.</span>
          </span>
          <span data-ttu-id="a2472-209">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-209">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          </span>
          <span data-ttu-id="a2472-210">If the global method has no arguments, or if none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-210">If the global method has no arguments, or if none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-211">Defines a global method with the specified name, attributes, calling convention, return type, custom modifiers for the return type, parameter types, and custom modifiers for the parameter types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-211">Defines a global method with the specified name, attributes, calling convention, return type, custom modifiers for the return type, parameter types, and custom modifiers for the parameter types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-212">The defined global method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-212">The defined global method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-213">Questo overload viene fornito per i progettisti di compilatori gestiti.</span><span class="sxs-lookup"><span data-stu-id="a2472-213">This overload is provided for designers of managed compilers.</span></span>  
  
 <span data-ttu-id="a2472-214">È possibile usare il metodo globale definito fino a questo metodo chiamare <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2472-214">You cannot use the global method that this method defines until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-215">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-215">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-216">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-216">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-217">The method is not static.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-217">The method is not static.</span>
          </span>
          <span data-ttu-id="a2472-218">That is, <paramref name="attributes" /> does not include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-218">That is, <paramref name="attributes" /> does not include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span>
          </span>
          <span data-ttu-id="a2472-219">-or-  An element in the <see cref="T:System.Type" /> array is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-219">-or-  An element in the <see cref="T:System.Type" /> array is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-220">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-220">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2472-221">The <see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> method has been previously called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-221">The <see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> method has been previously called.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineInitializedData">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.FieldBuilder DefineInitializedData (string name, byte[] data, System.Reflection.FieldAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.FieldBuilder DefineInitializedData(string name, unsigned int8[] data, valuetype System.Reflection.FieldAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineInitializedData (name As String, data As Byte(), attributes As FieldAttributes) As FieldBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::FieldBuilder ^ DefineInitializedData(System::String ^ name, cli::array &lt;System::Byte&gt; ^ data, System::Reflection::FieldAttributes attributes);" />
      <MemberSignature Language="F#" Value="member this.DefineInitializedData : string * byte[] * System.Reflection.FieldAttributes -&gt; System.Reflection.Emit.FieldBuilder" Usage="moduleBuilder.DefineInitializedData (name, data, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.FieldBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-222">The name used to refer to the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-222">The name used to refer to the data.</span>
          </span>
          <span data-ttu-id="a2472-223">
            <c>name</c> cannot contain embedded nulls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-223">
              <c>name</c> cannot contain embedded nulls.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="a2472-224">The binary large object (BLOB) of data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-224">The binary large object (BLOB) of data.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="a2472-225">The attributes for the field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-225">The attributes for the field.</span>
          </span>
          <span data-ttu-id="a2472-226">The default is <see langword="Static" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-226">The default is <see langword="Static" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-227">Defines an initialized data field in the .sdata section of the portable executable (PE) file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-227">Defines an initialized data field in the .sdata section of the portable executable (PE) file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-228">A field to reference the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-228">A field to reference the data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-229"><xref:System.Reflection.FieldAttributes.Static> viene automaticamente incluso `attributes`.</span><span class="sxs-lookup"><span data-stu-id="a2472-229"><xref:System.Reflection.FieldAttributes.Static> is automatically included in `attributes`.</span></span>  
  
 <span data-ttu-id="a2472-230">I dati definiti da questo metodo non viene creati finché il <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> metodo viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="a2472-230">The data defined by this method is not created until the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-231">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-231">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-232">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-232">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2472-233">Nell'esempio seguente viene utilizzata la <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> metodo per definire un campo dati inizializzati nel `.sdata` sezione del file eseguibile portabile (PE).</span><span class="sxs-lookup"><span data-stu-id="a2472-233">The following example uses the <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> method to define an initialized data field in the `.sdata` section of the portable executable (PE) file.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefineInitializedData#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineInitializedData/CPP/modulebuilder_defineinitializeddata.cpp#1)]
 [!code-csharp[ModuleBuilder_DefineInitializedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineInitializedData/CS/modulebuilder_defineinitializeddata.cs#1)]
 [!code-vb[ModuleBuilder_DefineInitializedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineInitializedData/VB/modulebuilder_defineinitializeddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-234">The length of <paramref name="name" /> is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-234">The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="a2472-235">-or-  The size of <paramref name="data" /> is less than or equal to zero or greater than or equal to 0x3f0000.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-235">-or-  The size of <paramref name="data" /> is less than or equal to zero or greater than or equal to 0x3f0000.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-236">
            <paramref name="name" /> or <paramref name="data" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-236">
              <paramref name="name" /> or <paramref name="data" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2472-237">
            <see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> has been previously called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-237">
              <see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> has been previously called.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineManifestResource">
      <MemberSignature Language="C#" Value="public void DefineManifestResource (string name, System.IO.Stream stream, System.Reflection.ResourceAttributes attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineManifestResource(string name, class System.IO.Stream stream, valuetype System.Reflection.ResourceAttributes attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineManifestResource(System::String ^ name, System::IO::Stream ^ stream, System::Reflection::ResourceAttributes attribute);" />
      <MemberSignature Language="F#" Value="member this.DefineManifestResource : string * System.IO.Stream * System.Reflection.ResourceAttributes -&gt; unit" Usage="moduleBuilder.DefineManifestResource (name, stream, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-238">The case-sensitive name for the resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-238">The case-sensitive name for the resource.</span>
          </span>
        </param>
        <param name="stream">
          <span data-ttu-id="a2472-239">A stream that contains the bytes for the resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-239">A stream that contains the bytes for the resource.</span>
          </span>
        </param>
        <param name="attribute">
          <span data-ttu-id="a2472-240">An enumeration value that specifies whether the resource is public or private.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-240">An enumeration value that specifies whether the resource is public or private.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-241">Defines a binary large object (BLOB) that represents a manifest resource to be embedded in the dynamic assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-241">Defines a binary large object (BLOB) that represents a manifest resource to be embedded in the dynamic assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-242">Le risorse che vengono registrate nel manifesto dell'assembly possono essere gestite o BLOB di risorsa di manifesto, e ognuno di questi può essere incluso nell'assembly mediante il collegamento o dall'incorporamento.</span><span class="sxs-lookup"><span data-stu-id="a2472-242">Resources that are recorded in the assembly manifest can be managed resources or manifest resource BLOBs, and each of these can be included in the assembly either by linking or by embedding.</span></span> <span data-ttu-id="a2472-243">Tutti i quattro scenari sono supportati per gli assembly dinamici.</span><span class="sxs-lookup"><span data-stu-id="a2472-243">All four scenarios are supported for dynamic assemblies.</span></span>  
  
-   <span data-ttu-id="a2472-244">Questo metodo consente di incorporare una risorsa di manifesto BLOB in un assembly dinamico.</span><span class="sxs-lookup"><span data-stu-id="a2472-244">This method allows you to embed a manifest resource BLOB into a dynamic assembly.</span></span>  
  
-   <span data-ttu-id="a2472-245">Per incorporare una risorsa gestita nel modulo del manifesto di un assembly dinamico o in un modulo satellite, usare il <xref:System.Reflection.Emit.ModuleBuilder.DefineResource%2A?displayProperty=nameWithType> metodo per ottenere un writer di risorse e usare il <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=nameWithType> metodo per aggiungere la risorsa.</span><span class="sxs-lookup"><span data-stu-id="a2472-245">To embed a managed resource into the manifest module of a dynamic assembly or into a satellite module, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineResource%2A?displayProperty=nameWithType> method to get a resource writer, and use the <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=nameWithType> method to add the resource.</span></span>  
  
-   <span data-ttu-id="a2472-246">Per collegare una risorsa gestita in un assembly dinamico, usare il <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A?displayProperty=nameWithType> metodo per ottenere un writer di risorse e usare il <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=nameWithType> metodo per aggiungere la risorsa collegata.</span><span class="sxs-lookup"><span data-stu-id="a2472-246">To link a managed resource into a dynamic assembly, use the <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A?displayProperty=nameWithType> method to get a resource writer, and use the <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=nameWithType> method to add the linked resource.</span></span>  
  
-   <span data-ttu-id="a2472-247">Per collegare una risorsa di manifesto BLOB in un assembly dinamico, usare il <xref:System.Reflection.Emit.AssemblyBuilder.AddResourceFile%2A?displayProperty=nameWithType> metodo per aggiungere la risorsa collegata.</span><span class="sxs-lookup"><span data-stu-id="a2472-247">To link a manifest resource BLOB into a dynamic assembly, use the <xref:System.Reflection.Emit.AssemblyBuilder.AddResourceFile%2A?displayProperty=nameWithType> method to add the linked resource.</span></span>  
  
 <span data-ttu-id="a2472-248">Inoltre, una singola risorsa Win32 può essere connesso a un assembly con il <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A?displayProperty=nameWithType> metodo o il <xref:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2472-248">In addition, a single Win32 resource can be attached to an assembly by using the <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A?displayProperty=nameWithType> method or the <xref:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a2472-249">Questa risorsa non viene visualizzato nel manifesto dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-249">This resource does not appear in the assembly manifest.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2472-250">Nell'esempio seguente genera l'errore e salvato un assembly dinamico denominato `EmittedManifestResourceAssembly.exe`, cui è incorporata una risorsa non gestita.</span><span class="sxs-lookup"><span data-stu-id="a2472-250">The following example generates and saves a dynamic assembly named `EmittedManifestResourceAssembly.exe`, which contains an embedded unmanaged resource.</span></span> <span data-ttu-id="a2472-251">Nell'esempio viene creato l'assembly, che è costituito da un modulo e apre un flusso di memoria per contenere la risorsa non gestita.</span><span class="sxs-lookup"><span data-stu-id="a2472-251">The example creates the assembly, which consists of one module, and opens a memory stream to contain the unmanaged resource.</span></span> <span data-ttu-id="a2472-252">Il codice chiama quindi il <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> metodo per definire la risorsa.</span><span class="sxs-lookup"><span data-stu-id="a2472-252">The code then calls the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method to define the resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-253">È possibile utilizzare qualsiasi tipo di flusso per la risorsa; ad esempio, è possibile leggere i dati binari non gestiti da un file.</span><span class="sxs-lookup"><span data-stu-id="a2472-253">You can use any kind of stream for your resource; for example, you can read the unmanaged binary data from a file.</span></span>  
  
 <span data-ttu-id="a2472-254">L'esempio definisce un tipo nel modulo dinamico con un `Main` (metodo) e viene generato codice MSIL per il corpo del metodo.</span><span class="sxs-lookup"><span data-stu-id="a2472-254">The example defines a type in the dynamic module with a `Main` method, and generates MSIL for the method body.</span></span> <span data-ttu-id="a2472-255">Dopo il corpo per il `Main` metodo è stato generato e il tipo è stato creato, l'esempio di codice scrive cinque byte nel flusso associato alla risorsa del manifesto.</span><span class="sxs-lookup"><span data-stu-id="a2472-255">After the body for the `Main` method has been generated and the type has been created, the code example writes five bytes to the stream associated with the manifest resource.</span></span> <span data-ttu-id="a2472-256">Quando viene salvato l'assembly, la risorsa viene aggiunto a esso.</span><span class="sxs-lookup"><span data-stu-id="a2472-256">When the assembly is saved, the resource is appended to it.</span></span>  
  
 <span data-ttu-id="a2472-257">Dopo aver eseguito l'esempio, è possibile eseguire l'assembly generato.</span><span class="sxs-lookup"><span data-stu-id="a2472-257">After running the example, you can run the emitted assembly.</span></span> <span data-ttu-id="a2472-258">Il codice dell'assembly generato `Main` metodo legge la risorsa del manifesto incorporata e vengono stampati i valori di byte nella console.</span><span class="sxs-lookup"><span data-stu-id="a2472-258">The code in the emitted assembly's `Main` method reads the embedded manifest resource and prints the byte values to the console.</span></span> <span data-ttu-id="a2472-259">È possibile usare il [Ildasm.exe (Disassembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) per visualizzare le informazioni nel manifesto dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-259">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to view the information in the assembly manifest.</span></span>  
  
 [!code-csharp[DefineManifestResource#1](~/samples/snippets/csharp/VS_Snippets_CLR/DefineManifestResource/cs/source.cs#1)]
 [!code-vb[DefineManifestResource#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DefineManifestResource/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-260">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-260">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a2472-261">-or-  <paramref name="stream" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-261">-or-  <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-262">
            <paramref name="name" /> is a zero-length string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-262">
              <paramref name="name" /> is a zero-length string.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2472-263">The dynamic assembly that contains the current module is transient; that is, no file name was specified when <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)" /> was called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-263">The dynamic assembly that contains the current module is transient; that is, no file name was specified when <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)" /> was called.</span>
          </span>
        </exception>
        <altmember cref="M:System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String)" />
        <altmember cref="M:System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String,System.Reflection.ResourceAttributes)" />
        <altmember cref="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)" />
        <altmember cref="M:System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String)" />
        <altmember cref="M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.String)" />
        <altmember cref="M:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.Byte[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DefinePInvokeMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a2472-264">Defines a <see langword="PInvoke" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-264">Defines a <see langword="PInvoke" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefinePInvokeMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefinePInvokeMethod (string name, string dllName, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes, System.Runtime.InteropServices.CallingConvention nativeCallConv, System.Runtime.InteropServices.CharSet nativeCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefinePInvokeMethod(string name, string dllName, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes, valuetype System.Runtime.InteropServices.CallingConvention nativeCallConv, valuetype System.Runtime.InteropServices.CharSet nativeCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefinePInvokeMethod(System::String ^ name, System::String ^ dllName, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes, System::Runtime::InteropServices::CallingConvention nativeCallConv, System::Runtime::InteropServices::CharSet nativeCharSet);" />
      <MemberSignature Language="F#" Value="member this.DefinePInvokeMethod : string * string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] * System.Runtime.InteropServices.CallingConvention * System.Runtime.InteropServices.CharSet -&gt; System.Reflection.Emit.MethodBuilder" Usage="moduleBuilder.DefinePInvokeMethod (name, dllName, attributes, callingConvention, returnType, parameterTypes, nativeCallConv, nativeCharSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dllName" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="nativeCallConv" Type="System.Runtime.InteropServices.CallingConvention" />
        <Parameter Name="nativeCharSet" Type="System.Runtime.InteropServices.CharSet" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-265">The name of the <see langword="PInvoke" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-265">The name of the <see langword="PInvoke" /> method.</span>
          </span>
          <span data-ttu-id="a2472-266">
            <c>name</c> cannot contain embedded nulls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-266">
              <c>name</c> cannot contain embedded nulls.</span>
          </span>
        </param>
        <param name="dllName">
          <span data-ttu-id="a2472-267">The name of the DLL in which the <see langword="PInvoke" /> method is defined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-267">The name of the DLL in which the <see langword="PInvoke" /> method is defined.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="a2472-268">The attributes of the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-268">The attributes of the method.</span>
          </span>
        </param>
        <param name="callingConvention">
          <span data-ttu-id="a2472-269">The method's calling convention.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-269">The method's calling convention.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="a2472-270">The method's return type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-270">The method's return type.</span>
          </span>
        </param>
        <param name="parameterTypes">
          <span data-ttu-id="a2472-271">The types of the method's parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-271">The types of the method's parameters.</span>
          </span>
        </param>
        <param name="nativeCallConv">
          <span data-ttu-id="a2472-272">The native calling convention.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-272">The native calling convention.</span>
          </span>
        </param>
        <param name="nativeCharSet">
          <span data-ttu-id="a2472-273">The method's native character set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-273">The method's native character set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-274">Defines a <see langword="PInvoke" /> method with the specified name, the name of the DLL in which the method is defined, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the <see langword="PInvoke" /> flags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-274">Defines a <see langword="PInvoke" /> method with the specified name, the name of the DLL in which the method is defined, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the <see langword="PInvoke" /> flags.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-275">The defined <see langword="PInvoke" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-275">The defined <see langword="PInvoke" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-276">Alcuni attributi di importazione DLL (vedere la descrizione dell'InteropServices) non possono essere specificati come argomenti del metodo.</span><span class="sxs-lookup"><span data-stu-id="a2472-276">Some DLL import attributes (see the description of System.Runtime.InteropServices.DllImportAttribute) cannot be specified as arguments to this method.</span></span> <span data-ttu-id="a2472-277">Tali attributi devono essere impostati con la creazione di un attributo personalizzato per il metodo.</span><span class="sxs-lookup"><span data-stu-id="a2472-277">Such attributes should be set by emitting a custom attribute for the method.</span></span> <span data-ttu-id="a2472-278">Ad esempio, la DLL import (attributo) `PreserveSig` è impostato con la creazione di un attributo personalizzato.</span><span class="sxs-lookup"><span data-stu-id="a2472-278">For example, the DLL import attribute `PreserveSig` is set by emitting a custom attribute.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-279">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-279">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-280">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-280">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2472-281">Nell'esempio seguente viene illustrato l'utilizzo del `DefinePInvokeMethod` metodo per creare un <xref:System.Reflection.Emit.MethodBuilder> per un metodo esterno non gestito, `MessageBoxA`, nell'API Win32.</span><span class="sxs-lookup"><span data-stu-id="a2472-281">The following example illustrates the use of the `DefinePInvokeMethod` method to create a <xref:System.Reflection.Emit.MethodBuilder> for an external unmanaged method, `MessageBoxA`, in the Win32 API.</span></span> <span data-ttu-id="a2472-282">L'esempio visualizza una finestra di messaggio con **ripetere** e **Annulla** i pulsanti e visualizza il valore restituito dalla finestra di messaggio.</span><span class="sxs-lookup"><span data-stu-id="a2472-282">The example displays a message box with **Retry** and **Cancel** buttons, and displays the return value from the message box.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a2472-283">Per ottenere un valore restituito diverso da zero, è necessario aggiungere <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> ai flag di implementazione del metodo dopo aver creato il <xref:System.Reflection.Emit.MethodBuilder>, usando la <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> e <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType> metodi.</span><span class="sxs-lookup"><span data-stu-id="a2472-283">To get a non-zero return value, you must add <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> to the method implementation flags after you create the <xref:System.Reflection.Emit.MethodBuilder>, by using the <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> and <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType> methods.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/CPP/modulebuilder_definepinvokemethod1.cpp#1)]
 [!code-csharp[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/CS/modulebuilder_definepinvokemethod1.cs#1)]
 [!code-vb[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/VB/modulebuilder_definepinvokemethod1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-284">The method is not static or if the containing type is an interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-284">The method is not static or if the containing type is an interface.</span>
          </span>
          <span data-ttu-id="a2472-285">-or-  The method is abstract.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-285">-or-  The method is abstract.</span>
          </span>
          <span data-ttu-id="a2472-286">-or-  The method was previously defined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-286">-or-  The method was previously defined.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-287">
            <paramref name="name" /> or <paramref name="dllName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-287">
              <paramref name="name" /> or <paramref name="dllName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2472-288">The containing type has been previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-288">The containing type has been previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /></span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefinePInvokeMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefinePInvokeMethod (string name, string dllName, string entryName, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes, System.Runtime.InteropServices.CallingConvention nativeCallConv, System.Runtime.InteropServices.CharSet nativeCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefinePInvokeMethod(string name, string dllName, string entryName, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes, valuetype System.Runtime.InteropServices.CallingConvention nativeCallConv, valuetype System.Runtime.InteropServices.CharSet nativeCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefinePInvokeMethod(System::String ^ name, System::String ^ dllName, System::String ^ entryName, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes, System::Runtime::InteropServices::CallingConvention nativeCallConv, System::Runtime::InteropServices::CharSet nativeCharSet);" />
      <MemberSignature Language="F#" Value="member this.DefinePInvokeMethod : string * string * string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] * System.Runtime.InteropServices.CallingConvention * System.Runtime.InteropServices.CharSet -&gt; System.Reflection.Emit.MethodBuilder" Usage="moduleBuilder.DefinePInvokeMethod (name, dllName, entryName, attributes, callingConvention, returnType, parameterTypes, nativeCallConv, nativeCharSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dllName" Type="System.String" />
        <Parameter Name="entryName" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="nativeCallConv" Type="System.Runtime.InteropServices.CallingConvention" />
        <Parameter Name="nativeCharSet" Type="System.Runtime.InteropServices.CharSet" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-289">The name of the <see langword="PInvoke" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-289">The name of the <see langword="PInvoke" /> method.</span>
          </span>
          <span data-ttu-id="a2472-290">
            <c>name</c> cannot contain embedded nulls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-290">
              <c>name</c> cannot contain embedded nulls.</span>
          </span>
        </param>
        <param name="dllName">
          <span data-ttu-id="a2472-291">The name of the DLL in which the <see langword="PInvoke" /> method is defined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-291">The name of the DLL in which the <see langword="PInvoke" /> method is defined.</span>
          </span>
        </param>
        <param name="entryName">
          <span data-ttu-id="a2472-292">The name of the entry point in the DLL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-292">The name of the entry point in the DLL.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="a2472-293">The attributes of the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-293">The attributes of the method.</span>
          </span>
        </param>
        <param name="callingConvention">
          <span data-ttu-id="a2472-294">The method's calling convention.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-294">The method's calling convention.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="a2472-295">The method's return type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-295">The method's return type.</span>
          </span>
        </param>
        <param name="parameterTypes">
          <span data-ttu-id="a2472-296">The types of the method's parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-296">The types of the method's parameters.</span>
          </span>
        </param>
        <param name="nativeCallConv">
          <span data-ttu-id="a2472-297">The native calling convention.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-297">The native calling convention.</span>
          </span>
        </param>
        <param name="nativeCharSet">
          <span data-ttu-id="a2472-298">The method's native character set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-298">The method's native character set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-299">Defines a <see langword="PInvoke" /> method with the specified name, the name of the DLL in which the method is defined, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the <see langword="PInvoke" /> flags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-299">Defines a <see langword="PInvoke" /> method with the specified name, the name of the DLL in which the method is defined, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the <see langword="PInvoke" /> flags.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-300">The defined <see langword="PInvoke" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-300">The defined <see langword="PInvoke" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-301">Gli attributi di importazione di alcune DLL (vedere la descrizione del <xref:System.Runtime.InteropServices.DllImportAttribute>) non possono essere specificate come argomenti del metodo.</span><span class="sxs-lookup"><span data-stu-id="a2472-301">Some DLL import attributes (see the description of <xref:System.Runtime.InteropServices.DllImportAttribute>) cannot be specified as arguments to this method.</span></span> <span data-ttu-id="a2472-302">Tali attributi devono essere impostati con la creazione di un attributo personalizzato per il metodo.</span><span class="sxs-lookup"><span data-stu-id="a2472-302">Such attributes should be set by emitting a custom attribute for the method.</span></span> <span data-ttu-id="a2472-303">Ad esempio, la DLL import (attributo) `PreserveSig` è impostato con la creazione di un attributo personalizzato.</span><span class="sxs-lookup"><span data-stu-id="a2472-303">For example, the DLL import attribute `PreserveSig` is set by emitting a custom attribute.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-304">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-304">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-305">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-305">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2472-306">Nell'esempio seguente viene illustrato l'utilizzo del `DefinePInvokeMethod` metodo per creare un <xref:System.Reflection.Emit.MethodBuilder> per un metodo esterno non gestito, `MessageBoxA`, nell'API Win32.</span><span class="sxs-lookup"><span data-stu-id="a2472-306">The following example illustrates the use of the `DefinePInvokeMethod` method to create a <xref:System.Reflection.Emit.MethodBuilder> for an external unmanaged method, `MessageBoxA`, in the Win32 API.</span></span> <span data-ttu-id="a2472-307">L'esempio visualizza una finestra di messaggio con **ripetere** e **Annulla** i pulsanti e visualizza il valore restituito dalla finestra di messaggio.</span><span class="sxs-lookup"><span data-stu-id="a2472-307">The example displays a message box with **Retry** and **Cancel** buttons, and displays the return value from the message box.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a2472-308">Per ottenere un valore restituito diverso da zero, è necessario aggiungere <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> ai flag di implementazione del metodo dopo aver creato il <xref:System.Reflection.Emit.MethodBuilder>, usando la <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> e <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType> metodi.</span><span class="sxs-lookup"><span data-stu-id="a2472-308">To get a non-zero return value, you must add <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> to the method implementation flags after you create the <xref:System.Reflection.Emit.MethodBuilder>, by using the <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> and <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="a2472-309">In questo esempio utilizza un altro overload di <xref:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod%2A> è lo stesso metodo, ma la tecnica.</span><span class="sxs-lookup"><span data-stu-id="a2472-309">This example uses a different overload of the <xref:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod%2A> method, but the technique is the same.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/CPP/modulebuilder_definepinvokemethod1.cpp#1)]
 [!code-csharp[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/CS/modulebuilder_definepinvokemethod1.cs#1)]
 [!code-vb[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/VB/modulebuilder_definepinvokemethod1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-310">The method is not static or if the containing type is an interface or if the method is abstract of if the method was previously defined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-310">The method is not static or if the containing type is an interface or if the method is abstract of if the method was previously defined.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-311">
            <paramref name="name" /> or <paramref name="dllName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-311">
              <paramref name="name" /> or <paramref name="dllName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2472-312">The containing type has been previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-312">The containing type has been previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /></span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a2472-313">Defines a managed embedded resource to be stored in this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-313">Defines a managed embedded resource to be stored in this module.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineResource">
      <MemberSignature Language="C#" Value="public System.Resources.IResourceWriter DefineResource (string name, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Resources.IResourceWriter DefineResource(string name, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineResource (name As String, description As String) As IResourceWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Resources::IResourceWriter ^ DefineResource(System::String ^ name, System::String ^ description);" />
      <MemberSignature Language="F#" Value="member this.DefineResource : string * string -&gt; System.Resources.IResourceWriter" Usage="moduleBuilder.DefineResource (name, description)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-314">The name of the resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-314">The name of the resource.</span>
          </span>
          <span data-ttu-id="a2472-315">
            <c>name</c> cannot contain embedded nulls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-315">
              <c>name</c> cannot contain embedded nulls.</span>
          </span>
        </param>
        <param name="description">
          <span data-ttu-id="a2472-316">The description of the resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-316">The description of the resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-317">Defines the named managed embedded resource to be stored in this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-317">Defines the named managed embedded resource to be stored in this module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-318">A resource writer for the defined resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-318">A resource writer for the defined resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-319">Il chiamante non deve chiamare il `ResourceWriter.Generate()` e `ResourceWriter.Close()` metodi, poiché questi metodi vengono chiamati dal `ModuleBuilder.Save` quando viene scritto l'assembly dinamico su disco.</span><span class="sxs-lookup"><span data-stu-id="a2472-319">The caller must not call the `ResourceWriter.Generate()` and `ResourceWriter.Close()` methods, because these methods are called by `ModuleBuilder.Save` when the dynamic assembly is written to disk.</span></span>  
  
 <span data-ttu-id="a2472-320">Utilizzare questo metodo per incorporare una risorsa gestita.</span><span class="sxs-lookup"><span data-stu-id="a2472-320">Use this method to embed a managed resource.</span></span> <span data-ttu-id="a2472-321">Per incorporare un blob di risorsa di manifesto, usare il <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2472-321">To embed a manifest resource blob, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.</span></span> <span data-ttu-id="a2472-322">Per un riepilogo dell'incorporamento e collegare le risorse gestite e BLOB di risorsa di manifesto, vedere il <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2472-322">For a summary of embedding and linking managed resources and manifest resource blobs, see the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-323">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-323">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-324">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-324">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2472-325">Nell'esempio seguente viene illustrato l'utilizzo di `DefineResource` per aggiungere una risorsa esterna corrente <xref:System.Reflection.Emit.ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a2472-325">The following example illustrates the use of `DefineResource` to add an external resource to the current <xref:System.Reflection.Emit.ModuleBuilder>.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefineResource1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineResource1/CPP/modulebuilder_defineresource1.cpp#1)]
 [!code-csharp[ModuleBuilder_DefineResource1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineResource1/CS/modulebuilder_defineresource1.cs#1)]
 [!code-vb[ModuleBuilder_DefineResource1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineResource1/VB/modulebuilder_defineresource1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-326">Length of <paramref name="name" /> is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-326">Length of <paramref name="name" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-327">
            <paramref name="name" /> is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-327">
              <paramref name="name" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2472-328">This module is transient.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-328">This module is transient.</span>
          </span>
          <span data-ttu-id="a2472-329">-or-  The containing assembly is not persistable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-329">-or-  The containing assembly is not persistable.</span>
          </span>
        </exception>
        <altmember cref="M:System.Reflection.Emit.ModuleBuilder.DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)" />
      </Docs>
    </Member>
    <Member MemberName="DefineResource">
      <MemberSignature Language="C#" Value="public System.Resources.IResourceWriter DefineResource (string name, string description, System.Reflection.ResourceAttributes attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Resources.IResourceWriter DefineResource(string name, string description, valuetype System.Reflection.ResourceAttributes attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String,System.Reflection.ResourceAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineResource (name As String, description As String, attribute As ResourceAttributes) As IResourceWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Resources::IResourceWriter ^ DefineResource(System::String ^ name, System::String ^ description, System::Reflection::ResourceAttributes attribute);" />
      <MemberSignature Language="F#" Value="member this.DefineResource : string * string * System.Reflection.ResourceAttributes -&gt; System.Resources.IResourceWriter" Usage="moduleBuilder.DefineResource (name, description, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-330">The name of the resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-330">The name of the resource.</span>
          </span>
          <span data-ttu-id="a2472-331">
            <c>name</c> cannot contain embedded nulls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-331">
              <c>name</c> cannot contain embedded nulls.</span>
          </span>
        </param>
        <param name="description">
          <span data-ttu-id="a2472-332">The description of the resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-332">The description of the resource.</span>
          </span>
        </param>
        <param name="attribute">
          <span data-ttu-id="a2472-333">The resource attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-333">The resource attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-334">Defines the named managed embedded resource with the given attributes that is to be stored in this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-334">Defines the named managed embedded resource with the given attributes that is to be stored in this module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-335">A resource writer for the defined resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-335">A resource writer for the defined resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-336">Il chiamante non deve chiamare il `ResourceWriter.Generate()` e `ResourceWriter.Close()` metodi, poiché questi metodi vengono chiamati dal `ModuleBuilder.Save` quando viene scritto l'assembly dinamico su disco.</span><span class="sxs-lookup"><span data-stu-id="a2472-336">The caller must not call the `ResourceWriter.Generate()` and `ResourceWriter.Close()` methods, because these methods are called by `ModuleBuilder.Save` when the dynamic assembly is written to disk.</span></span>  
  
 <span data-ttu-id="a2472-337">Utilizzare questo metodo per incorporare una risorsa gestita.</span><span class="sxs-lookup"><span data-stu-id="a2472-337">Use this method to embed a managed resource.</span></span> <span data-ttu-id="a2472-338">Per incorporare un blob di risorsa di manifesto, usare il <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2472-338">To embed a manifest resource blob, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.</span></span> <span data-ttu-id="a2472-339">Per un riepilogo dell'incorporamento e collegare le risorse gestite e BLOB di risorsa di manifesto, vedere il <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2472-339">For a summary of embedding and linking managed resources and manifest resource blobs, see the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-340">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-340">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-341">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-341">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2472-342">Nell'esempio seguente viene illustrato l'utilizzo di DefineResource per aggiungere una risorsa esterna corrente <xref:System.Reflection.Emit.ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a2472-342">The following example illustrates the use of DefineResource to add an external resource to the current <xref:System.Reflection.Emit.ModuleBuilder>.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefineResource2#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineResource2/CPP/modulebuilder_defineresource2.cpp#1)]
 [!code-csharp[ModuleBuilder_DefineResource2#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineResource2/CS/modulebuilder_defineresource2.cs#1)]
 [!code-vb[ModuleBuilder_DefineResource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineResource2/VB/modulebuilder_defineresource2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-343">Length of <paramref name="name" /> is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-343">Length of <paramref name="name" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-344">
            <paramref name="name" /> is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-344">
              <paramref name="name" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2472-345">This module is transient.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-345">This module is transient.</span>
          </span>
          <span data-ttu-id="a2472-346">-or-  The containing assembly is not persistable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-346">-or-  The containing assembly is not persistable.</span>
          </span>
        </exception>
        <altmember cref="M:System.Reflection.Emit.ModuleBuilder.DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineType">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a2472-347">Constructs a <see langword="TypeBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-347">Constructs a <see langword="TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="a2472-348">To define a value type, define a type that derives from <see cref="T:System.ValueType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-348">To define a value type, define a type that derives from <see cref="T:System.ValueType" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-349">The full path of the type, including the namespace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-349">The full path of the type, including the namespace.</span>
          </span>
          <span data-ttu-id="a2472-350">
            <c>name</c> cannot contain embedded nulls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-350">
              <c>name</c> cannot contain embedded nulls.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-351">Constructs a <see langword="TypeBuilder" /> for a private type with the specified name in this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-351">Constructs a <see langword="TypeBuilder" /> for a private type with the specified name in this module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-352">A private type with the specified name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-352">A private type with the specified name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-353">I nomi dei tipi devono essere univoci all'interno di un assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-353">Type names must be unique within an assembly.</span></span> <span data-ttu-id="a2472-354">È possibile avere due tipi con lo stesso nome in due moduli diversi di un assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-354">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-355">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-355">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-356">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-356">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2472-357">Nell'esempio seguente viene creata una <xref:System.Reflection.Emit.TypeBuilder> nel modulo dinamico corrente tramite `CreateType`, compilazioni e completa il tipo e Salva l'assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-357">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-358">A type with the given name exists in the parent assembly of this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-358">A type with the given name exists in the parent assembly of this module.</span>
          </span>
          <span data-ttu-id="a2472-359">-or-  Nested type attributes are set on a type that is not nested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-359">-or-  Nested type attributes are set on a type that is not nested.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-360">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-360">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String, attr As TypeAttributes) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-361">The full path of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-361">The full path of the type.</span>
          </span>
          <span data-ttu-id="a2472-362">
            <c>name</c> cannot contain embedded nulls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-362">
              <c>name</c> cannot contain embedded nulls.</span>
          </span>
        </param>
        <param name="attr">
          <span data-ttu-id="a2472-363">The attributes of the defined type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-363">The attributes of the defined type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-364">Constructs a <see langword="TypeBuilder" /> given the type name and the type attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-364">Constructs a <see langword="TypeBuilder" /> given the type name and the type attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-365">A <see langword="TypeBuilder" /> created with all of the requested attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-365">A <see langword="TypeBuilder" /> created with all of the requested attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-366">I nomi dei tipi devono essere univoci all'interno di un assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-366">Type names must be unique within an assembly.</span></span> <span data-ttu-id="a2472-367">È possibile avere due tipi con lo stesso nome in due moduli diversi di un assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-367">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-368">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-368">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-369">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-369">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2472-370">Nell'esempio seguente viene creata una <xref:System.Reflection.Emit.TypeBuilder> nel modulo dinamico corrente tramite `CreateType`, compilazioni e completa il tipo e Salva l'assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-370">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-371">A type with the given name exists in the parent assembly of this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-371">A type with the given name exists in the parent assembly of this module.</span>
          </span>
          <span data-ttu-id="a2472-372">-or-  Nested type attributes are set on a type that is not nested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-372">-or-  Nested type attributes are set on a type that is not nested.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-373">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-373">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String, attr As TypeAttributes, parent As Type) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes * Type -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr, parent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-374">The full path of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-374">The full path of the type.</span>
          </span>
          <span data-ttu-id="a2472-375">
            <c>name</c> cannot contain embedded nulls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-375">
              <c>name</c> cannot contain embedded nulls.</span>
          </span>
        </param>
        <param name="attr">
          <span data-ttu-id="a2472-376">The attribute to be associated with the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-376">The attribute to be associated with the type.</span>
          </span>
        </param>
        <param name="parent">
          <span data-ttu-id="a2472-377">The type that the defined type extends.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-377">The type that the defined type extends.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-378">Constructs a <see langword="TypeBuilder" /> given type name, its attributes, and the type that the defined type extends.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-378">Constructs a <see langword="TypeBuilder" /> given type name, its attributes, and the type that the defined type extends.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-379">A <see langword="TypeBuilder" /> created with all of the requested attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-379">A <see langword="TypeBuilder" /> created with all of the requested attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-380">I nomi dei tipi devono essere univoci all'interno di un assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-380">Type names must be unique within an assembly.</span></span> <span data-ttu-id="a2472-381">È possibile avere due tipi con lo stesso nome in due moduli diversi di un assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-381">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-382">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-382">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-383">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-383">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2472-384">Nell'esempio seguente viene creata una <xref:System.Reflection.Emit.TypeBuilder> nel modulo dinamico corrente tramite `CreateType`, compilazioni e completa il tipo e Salva l'assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-384">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-385">A type with the given name exists in the parent assembly of this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-385">A type with the given name exists in the parent assembly of this module.</span>
          </span>
          <span data-ttu-id="a2472-386">-or-  Nested type attributes are set on a type that is not nested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-386">-or-  Nested type attributes are set on a type that is not nested.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-387">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-387">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, int typesize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent, int32 typesize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String, attr As TypeAttributes, parent As Type, typesize As Integer) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent, int typesize);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes * Type * int -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr, parent, typesize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
        <Parameter Name="typesize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-388">The full path of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-388">The full path of the type.</span>
          </span>
          <span data-ttu-id="a2472-389">
            <c>name</c> cannot contain embedded nulls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-389">
              <c>name</c> cannot contain embedded nulls.</span>
          </span>
        </param>
        <param name="attr">
          <span data-ttu-id="a2472-390">The attributes of the defined type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-390">The attributes of the defined type.</span>
          </span>
        </param>
        <param name="parent">
          <span data-ttu-id="a2472-391">The type that the defined type extends.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-391">The type that the defined type extends.</span>
          </span>
        </param>
        <param name="typesize">
          <span data-ttu-id="a2472-392">The total size of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-392">The total size of the type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-393">Constructs a <see langword="TypeBuilder" /> given the type name, the attributes, the type that the defined type extends, and the total size of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-393">Constructs a <see langword="TypeBuilder" /> given the type name, the attributes, the type that the defined type extends, and the total size of the type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-394">A <see langword="TypeBuilder" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-394">A <see langword="TypeBuilder" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-395">I nomi dei tipi devono essere univoci all'interno di un assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-395">Type names must be unique within an assembly.</span></span> <span data-ttu-id="a2472-396">Non è consentito avere due tipi con lo stesso nome in due moduli diversi di un assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-396">It is forbidden to have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-397">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-397">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-398">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-398">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2472-399">Nell'esempio seguente viene creata una <xref:System.Reflection.Emit.TypeBuilder> nel modulo dinamico corrente tramite `CreateType`, compilazioni e completa il tipo e Salva l'assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-399">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-400">A type with the given name exists in the parent assembly of this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-400">A type with the given name exists in the parent assembly of this module.</span>
          </span>
          <span data-ttu-id="a2472-401">-or-  Nested type attributes are set on a type that is not nested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-401">-or-  Nested type attributes are set on a type that is not nested.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-402">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-402">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, System.Reflection.Emit.PackingSize packsize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent, valuetype System.Reflection.Emit.PackingSize packsize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String, attr As TypeAttributes, parent As Type, packsize As PackingSize) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent, System::Reflection::Emit::PackingSize packsize);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes * Type * System.Reflection.Emit.PackingSize -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr, parent, packsize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
        <Parameter Name="packsize" Type="System.Reflection.Emit.PackingSize" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-403">The full path of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-403">The full path of the type.</span>
          </span>
          <span data-ttu-id="a2472-404">
            <c>name</c> cannot contain embedded nulls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-404">
              <c>name</c> cannot contain embedded nulls.</span>
          </span>
        </param>
        <param name="attr">
          <span data-ttu-id="a2472-405">The attributes of the defined type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-405">The attributes of the defined type.</span>
          </span>
        </param>
        <param name="parent">
          <span data-ttu-id="a2472-406">The type that the defined type extends.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-406">The type that the defined type extends.</span>
          </span>
        </param>
        <param name="packsize">
          <span data-ttu-id="a2472-407">The packing size of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-407">The packing size of the type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-408">Constructs a <see langword="TypeBuilder" /> given the type name, the attributes, the type that the defined type extends, and the packing size of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-408">Constructs a <see langword="TypeBuilder" /> given the type name, the attributes, the type that the defined type extends, and the packing size of the type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-409">A <see langword="TypeBuilder" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-409">A <see langword="TypeBuilder" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-410">I nomi dei tipi devono essere univoci all'interno di un assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-410">Type names must be unique within an assembly.</span></span> <span data-ttu-id="a2472-411">È possibile avere due tipi con lo stesso nome in due moduli diversi di un assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-411">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-412">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-412">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-413">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-413">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2472-414">Nell'esempio seguente viene creata una <xref:System.Reflection.Emit.TypeBuilder> nel modulo dinamico corrente tramite `CreateType`, compilazioni e completa il tipo e Salva l'assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-414">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-415">A type with the given name exists in the parent assembly of this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-415">A type with the given name exists in the parent assembly of this module.</span>
          </span>
          <span data-ttu-id="a2472-416">-or-  Nested type attributes are set on a type that is not nested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-416">-or-  Nested type attributes are set on a type that is not nested.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-417">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-417">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, Type[] interfaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent, class System.Type[] interfaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String, attr As TypeAttributes, parent As Type, interfaces As Type()) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent, cli::array &lt;Type ^&gt; ^ interfaces);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes * Type * Type[] -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr, parent, interfaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
        <Parameter Name="interfaces" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-418">The full path of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-418">The full path of the type.</span>
          </span>
          <span data-ttu-id="a2472-419">
            <c>name</c> cannot contain embedded nulls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-419">
              <c>name</c> cannot contain embedded nulls.</span>
          </span>
        </param>
        <param name="attr">
          <span data-ttu-id="a2472-420">The attributes to be associated with the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-420">The attributes to be associated with the type.</span>
          </span>
        </param>
        <param name="parent">
          <span data-ttu-id="a2472-421">The type that the defined type extends.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-421">The type that the defined type extends.</span>
          </span>
        </param>
        <param name="interfaces">
          <span data-ttu-id="a2472-422">The list of interfaces that the type implements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-422">The list of interfaces that the type implements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-423">Constructs a <see langword="TypeBuilder" /> given the type name, attributes, the type that the defined type extends, and the interfaces that the defined type implements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-423">Constructs a <see langword="TypeBuilder" /> given the type name, attributes, the type that the defined type extends, and the interfaces that the defined type implements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-424">A <see langword="TypeBuilder" /> created with all of the requested attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-424">A <see langword="TypeBuilder" /> created with all of the requested attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-425">I nomi dei tipi devono essere univoci all'interno di un assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-425">Type names must be unique within an assembly.</span></span> <span data-ttu-id="a2472-426">È possibile avere due tipi con lo stesso nome in due moduli diversi di un assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-426">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-427">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-427">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-428">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-428">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2472-429">Nell'esempio seguente viene creata una <xref:System.Reflection.Emit.TypeBuilder> nel modulo dinamico corrente tramite `CreateType`, compilazioni e completa il tipo e Salva l'assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-429">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-430">A type with the given name exists in the parent assembly of this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-430">A type with the given name exists in the parent assembly of this module.</span>
          </span>
          <span data-ttu-id="a2472-431">-or-  Nested type attributes are set on a type that is not nested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-431">-or-  Nested type attributes are set on a type that is not nested.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-432">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-432">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, System.Reflection.Emit.PackingSize packingSize, int typesize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent, valuetype System.Reflection.Emit.PackingSize packingSize, int32 typesize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent, System::Reflection::Emit::PackingSize packingSize, int typesize);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes * Type * System.Reflection.Emit.PackingSize * int -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr, parent, packingSize, typesize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
        <Parameter Name="packingSize" Type="System.Reflection.Emit.PackingSize" />
        <Parameter Name="typesize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-433">The full path of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-433">The full path of the type.</span>
          </span>
          <span data-ttu-id="a2472-434">
            <c>name</c> cannot contain embedded nulls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-434">
              <c>name</c> cannot contain embedded nulls.</span>
          </span>
        </param>
        <param name="attr">
          <span data-ttu-id="a2472-435">The attributes of the defined type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-435">The attributes of the defined type.</span>
          </span>
        </param>
        <param name="parent">
          <span data-ttu-id="a2472-436">The type that the defined type extends.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-436">The type that the defined type extends.</span>
          </span>
        </param>
        <param name="packingSize">
          <span data-ttu-id="a2472-437">The packing size of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-437">The packing size of the type.</span>
          </span>
        </param>
        <param name="typesize">
          <span data-ttu-id="a2472-438">The total size of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-438">The total size of the type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-439">Constructs a <see langword="TypeBuilder" /> given the type name, attributes, the type that the defined type extends, the packing size of the defined type, and the total size of the defined type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-439">Constructs a <see langword="TypeBuilder" /> given the type name, attributes, the type that the defined type extends, the packing size of the defined type, and the total size of the defined type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-440">A <see langword="TypeBuilder" /> created with all of the requested attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-440">A <see langword="TypeBuilder" /> created with all of the requested attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-441">I nomi dei tipi devono essere univoci all'interno di un assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-441">Type names must be unique within an assembly.</span></span> <span data-ttu-id="a2472-442">È possibile avere due tipi con lo stesso nome in due moduli diversi di un assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-442">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-443">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-443">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-444">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-444">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2472-445">Nell'esempio seguente viene creata una <xref:System.Reflection.Emit.TypeBuilder> nel modulo dinamico corrente tramite `CreateType`, compilazioni e completa il tipo e Salva l'assembly.</span><span class="sxs-lookup"><span data-stu-id="a2472-445">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-446">A type with the given name exists in the parent assembly of this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-446">A type with the given name exists in the parent assembly of this module.</span>
          </span>
          <span data-ttu-id="a2472-447">-or-  Nested type attributes are set on a type that is not nested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-447">-or-  Nested type attributes are set on a type that is not nested.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-448">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-448">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineUninitializedData">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.FieldBuilder DefineUninitializedData (string name, int size, System.Reflection.FieldAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.FieldBuilder DefineUninitializedData(string name, int32 size, valuetype System.Reflection.FieldAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineUninitializedData (name As String, size As Integer, attributes As FieldAttributes) As FieldBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::FieldBuilder ^ DefineUninitializedData(System::String ^ name, int size, System::Reflection::FieldAttributes attributes);" />
      <MemberSignature Language="F#" Value="member this.DefineUninitializedData : string * int * System.Reflection.FieldAttributes -&gt; System.Reflection.Emit.FieldBuilder" Usage="moduleBuilder.DefineUninitializedData (name, size, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.FieldBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-449">The name used to refer to the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-449">The name used to refer to the data.</span>
          </span>
          <span data-ttu-id="a2472-450">
            <c>name</c> cannot contain embedded nulls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-450">
              <c>name</c> cannot contain embedded nulls.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="a2472-451">The size of the data field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-451">The size of the data field.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="a2472-452">The attributes for the field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-452">The attributes for the field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-453">Defines an uninitialized data field in the .sdata section of the portable executable (PE) file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-453">Defines an uninitialized data field in the .sdata section of the portable executable (PE) file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-454">A field to reference the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-454">A field to reference the data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-455"><xref:System.Reflection.FieldAttributes.Static> viene automaticamente incluso `attributes`.</span><span class="sxs-lookup"><span data-stu-id="a2472-455"><xref:System.Reflection.FieldAttributes.Static> is automatically included in `attributes`.</span></span>  
  
 <span data-ttu-id="a2472-456">I dati definiti da questo metodo non viene creati finché il <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> metodo viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="a2472-456">The data defined by this method is not created until the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-457">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-457">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-458">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-458">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-459">The length of <paramref name="name" /> is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-459">The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="a2472-460">-or-  <paramref name="size" /> is less than or equal to zero, or greater than or equal to 0x003f0000.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-460">-or-  <paramref name="size" /> is less than or equal to zero, or greater than or equal to 0x003f0000.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-461">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-461">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2472-462">
            <see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> has been previously called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-462">
              <see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> has been previously called.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineUnmanagedResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a2472-463">Defines an unmanaged resource in this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-463">Defines an unmanaged resource in this module.</span>
          </span>
          <span data-ttu-id="a2472-464">The binary large object (BLOB) must have the right format for a Win32 resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-464">The binary large object (BLOB) must have the right format for a Win32 resource.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineUnmanagedResource">
      <MemberSignature Language="C#" Value="public void DefineUnmanagedResource (byte[] resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineUnmanagedResource(unsigned int8[] resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineUnmanagedResource (resource As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineUnmanagedResource(cli::array &lt;System::Byte&gt; ^ resource);" />
      <MemberSignature Language="F#" Value="member this.DefineUnmanagedResource : byte[] -&gt; unit" Usage="moduleBuilder.DefineUnmanagedResource resource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resource" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="resource">
          <span data-ttu-id="a2472-465">An opaque BLOB that represents an unmanaged resource</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-465">An opaque BLOB that represents an unmanaged resource</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-466">Defines an unmanaged embedded resource given an opaque binary large object (BLOB) of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-466">Defines an unmanaged embedded resource given an opaque binary large object (BLOB) of bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-467">Un assembly può essere associato a una sola risorsa non gestita.</span><span class="sxs-lookup"><span data-stu-id="a2472-467">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="a2472-468">Ciò significa che la chiamata `DefineVersionInfoResource` oppure `DefineUnmanagedResource` dopo che uno dei metodi è stato chiamato in precedenza genera <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a2472-468">This means that calling `DefineVersionInfoResource` or `DefineUnmanagedResource` after either one of the methods was called previously throws <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a2472-469">Più risorse non gestite devono essere unite tramite uno strumento quale l'utilità Microsoft ResMerge (non fornita con common language runtime).</span><span class="sxs-lookup"><span data-stu-id="a2472-469">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-470">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-470">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-471">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-471">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-472">An unmanaged resource has already been defined in the module's assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-472">An unmanaged resource has already been defined in the module's assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-473">
            <paramref name="resource" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-473">
              <paramref name="resource" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineUnmanagedResource">
      <MemberSignature Language="C#" Value="public void DefineUnmanagedResource (string resourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineUnmanagedResource(string resourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineUnmanagedResource (resourceFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineUnmanagedResource(System::String ^ resourceFileName);" />
      <MemberSignature Language="F#" Value="member this.DefineUnmanagedResource : string -&gt; unit" Usage="moduleBuilder.DefineUnmanagedResource resourceFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceFileName">
          <span data-ttu-id="a2472-474">The name of the unmanaged resource file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-474">The name of the unmanaged resource file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-475">Defines an unmanaged resource given the name of Win32 resource file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-475">Defines an unmanaged resource given the name of Win32 resource file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-476">Un assembly può essere associato a una sola risorsa non gestita.</span><span class="sxs-lookup"><span data-stu-id="a2472-476">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="a2472-477">Ciò significa che la chiamata `DefineVersionInfoResource` oppure `DefineUnmanagedResource` dopo che uno dei metodi è stato chiamato in precedenza genera <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a2472-477">This means that calling `DefineVersionInfoResource` or `DefineUnmanagedResource` after either one of the methods was called previously throws <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a2472-478">Più risorse non gestite devono essere unite tramite uno strumento quale l'utilità Microsoft ResMerge (non fornita con common language runtime).</span><span class="sxs-lookup"><span data-stu-id="a2472-478">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-479">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-479">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-480">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-480">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-481">An unmanaged resource has already been defined in the module's assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-481">An unmanaged resource has already been defined in the module's assembly.</span>
          </span>
          <span data-ttu-id="a2472-482">-or-  <paramref name="resourceFileName" /> is the empty string ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-482">-or-  <paramref name="resourceFileName" /> is the empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-483">
            <paramref name="resourceFileName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-483">
              <paramref name="resourceFileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="a2472-484">
            <paramref name="resourceFileName" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-484">
              <paramref name="resourceFileName" /> is not found.</span>
          </span>
          <span data-ttu-id="a2472-485">-or-  <paramref name="resourceFileName" /> is a directory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-485">-or-  <paramref name="resourceFileName" /> is a directory.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="moduleBuilder.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="a2472-486">An object to compare with this instance, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-486">An object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-487">Returns a value that indicates whether this instance is equal to the specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-487">Returns a value that indicates whether this instance is equal to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-488">
            <see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-488">
              <see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullyQualifiedName">
      <MemberSignature Language="C#" Value="public override string FullyQualifiedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullyQualifiedName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.FullyQualifiedName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullyQualifiedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullyQualifiedName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullyQualifiedName : string" Usage="System.Reflection.Emit.ModuleBuilder.FullyQualifiedName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a2472-489">Gets a <see langword="String" /> representing the fully qualified name and path to this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-489">Gets a <see langword="String" /> representing the fully qualified name and path to this module.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a2472-490">Il nome completo del modulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-490">The fully qualified module name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-491">Per ottenere il nome senza il percorso, utilizzare `Name`.</span><span class="sxs-lookup"><span data-stu-id="a2472-491">To get the name without the path, use `Name`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-492">Nel caso di un nome di modulo è dipendente dalla piattaforma.</span><span class="sxs-lookup"><span data-stu-id="a2472-492">The case of a module name is platform dependent.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="a2472-493">Si accede alle informazioni nel percorso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-493">Accesses information in the path.</span>
          </span>
          <span data-ttu-id="a2472-494">Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-494">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetArrayMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetArrayMethod (Type arrayClass, string methodName, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.MethodInfo GetArrayMethod(class System.Type arrayClass, string methodName, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArrayMethod (arrayClass As Type, methodName As String, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetArrayMethod(Type ^ arrayClass, System::String ^ methodName, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.GetArrayMethod : Type * string * System.Reflection.CallingConventions * Type * Type[] -&gt; System.Reflection.MethodInfo" Usage="moduleBuilder.GetArrayMethod (arrayClass, methodName, callingConvention, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayClass" Type="System.Type" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="arrayClass">
          <span data-ttu-id="a2472-495">An array class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-495">An array class.</span>
          </span>
        </param>
        <param name="methodName">
          <span data-ttu-id="a2472-496">The name of a method on the array class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-496">The name of a method on the array class.</span>
          </span>
        </param>
        <param name="callingConvention">
          <span data-ttu-id="a2472-497">The method's calling convention.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-497">The method's calling convention.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="a2472-498">The return type of the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-498">The return type of the method.</span>
          </span>
        </param>
        <param name="parameterTypes">
          <span data-ttu-id="a2472-499">The types of the method's parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-499">The types of the method's parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-500">Returns the named method on an array class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-500">Returns the named method on an array class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-501">The named method on an array class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-501">The named method on an array class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-502">`GetArrayMethod` è utile quando si dispone di una matrice di un tipo la cui definizione non è stata completata e si desidera accedere ai metodi definiti nel <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="a2472-502">`GetArrayMethod` is useful when you have an array of a type whose definition has not been completed and you want to access methods defined on <xref:System.Array>.</span></span> <span data-ttu-id="a2472-503">Ad esempio, si potrebbe definire un tipo e per definire un metodo che accetta una matrice di tipo come parametro.</span><span class="sxs-lookup"><span data-stu-id="a2472-503">For example, you might define a type and want to define a method that takes an array of the type as a parameter.</span></span> <span data-ttu-id="a2472-504">Per accedere agli elementi della matrice, è necessario chiamare i metodi del <xref:System.Array> classe.</span><span class="sxs-lookup"><span data-stu-id="a2472-504">In order to access the elements of the array, you will need to call methods of the <xref:System.Array> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2472-505">Nell'esempio seguente viene illustrato come utilizzare <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A> per ottenere il <xref:System.Reflection.MethodInfo> corrispondente a un metodo che restituisce un valore di matrice.</span><span class="sxs-lookup"><span data-stu-id="a2472-505">The following example demonstrates how to use <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A> to obtain the <xref:System.Reflection.MethodInfo> corresponding to a method that returns an array value.</span></span>  
  
 [!code-cpp[ModuleBuilder_GetArrayMethod#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/CPP/modulebuilder_getarraymethod.cpp#1)]
 [!code-csharp[ModuleBuilder_GetArrayMethod#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/CS/modulebuilder_getarraymethod.cs#1)]
 [!code-vb[ModuleBuilder_GetArrayMethod#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/VB/modulebuilder_getarraymethod.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-506">
            <paramref name="arrayClass" /> is not an array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-506">
              <paramref name="arrayClass" /> is not an array.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-507">
            <paramref name="arrayClass" /> or <paramref name="methodName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-507">
              <paramref name="arrayClass" /> or <paramref name="methodName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetArrayMethodToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetArrayMethodToken (Type arrayClass, string methodName, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetArrayMethodToken(class System.Type arrayClass, string methodName, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetArrayMethodToken(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArrayMethodToken (arrayClass As Type, methodName As String, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetArrayMethodToken(Type ^ arrayClass, System::String ^ methodName, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.GetArrayMethodToken : Type * string * System.Reflection.CallingConventions * Type * Type[] -&gt; System.Reflection.Emit.MethodToken" Usage="moduleBuilder.GetArrayMethodToken (arrayClass, methodName, callingConvention, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayClass" Type="System.Type" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="arrayClass">
          <span data-ttu-id="a2472-508">The object for the array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-508">The object for the array.</span>
          </span>
        </param>
        <param name="methodName">
          <span data-ttu-id="a2472-509">A string that contains the name of the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-509">A string that contains the name of the method.</span>
          </span>
        </param>
        <param name="callingConvention">
          <span data-ttu-id="a2472-510">The calling convention for the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-510">The calling convention for the method.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="a2472-511">The return type of the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-511">The return type of the method.</span>
          </span>
        </param>
        <param name="parameterTypes">
          <span data-ttu-id="a2472-512">The types of the parameters of the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-512">The types of the parameters of the method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-513">Returns the token for the named method on an array class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-513">Returns the token for the named method on an array class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-514">The token for the named method on an array class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-514">The token for the named method on an array class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-515">Questo metodo è simile a <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A>, ad eccezione del fatto che restituisce il token del metodo matrice invece il metodo stesso.</span><span class="sxs-lookup"><span data-stu-id="a2472-515">This method is similar to <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A>, except that it returns the token of the array method instead of the method itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2472-516">Nell'esempio seguente viene illustrato come utilizzare <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A> per ottenere il <xref:System.Reflection.Emit.MethodToken> corrispondente a un metodo che restituisce un valore di matrice.</span><span class="sxs-lookup"><span data-stu-id="a2472-516">The following example demonstrates how to use <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A> to obtain the <xref:System.Reflection.Emit.MethodToken> corresponding to a method that returns an array value.</span></span>  
  
 [!code-cpp[ModuleBuilder_GetArrayMethod#2](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/CPP/modulebuilder_getarraymethod.cpp#2)]
 [!code-csharp[ModuleBuilder_GetArrayMethod#2](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/CS/modulebuilder_getarraymethod.cs#2)]
 [!code-vb[ModuleBuilder_GetArrayMethod#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/VB/modulebuilder_getarraymethod.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-517">
            <paramref name="arrayClass" /> is not an array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-517">
              <paramref name="arrayClass" /> is not an array.</span>
          </span>
          <span data-ttu-id="a2472-518">-or-  The length of <paramref name="methodName" /> is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-518">-or-  The length of <paramref name="methodName" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-519">
            <paramref name="arrayClass" /> or <paramref name="methodName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-519">
              <paramref name="arrayClass" /> or <paramref name="methodName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConstructorToken">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a2472-520">Returns the token used to identify the specified constructor within this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-520">Returns the token used to identify the specified constructor within this module.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConstructorToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetConstructorToken (System.Reflection.ConstructorInfo con);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetConstructorToken(class System.Reflection.ConstructorInfo con) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConstructorToken (con As ConstructorInfo) As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetConstructorToken(System::Reflection::ConstructorInfo ^ con);" />
      <MemberSignature Language="F#" Value="member this.GetConstructorToken : System.Reflection.ConstructorInfo -&gt; System.Reflection.Emit.MethodToken" Usage="moduleBuilder.GetConstructorToken con" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
      </Parameters>
      <Docs>
        <param name="con">
          <span data-ttu-id="a2472-521">The constructor to get a token for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-521">The constructor to get a token for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-522">Returns the token used to identify the specified constructor within this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-522">Returns the token used to identify the specified constructor within this module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-523">The token used to identify the specified constructor within this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-523">The token used to identify the specified constructor within this module.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-524">
            <paramref name="con" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-524">
              <paramref name="con" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConstructorToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetConstructorToken (System.Reflection.ConstructorInfo constructor, System.Collections.Generic.IEnumerable&lt;Type&gt; optionalParameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetConstructorToken(class System.Reflection.ConstructorInfo constructor, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; optionalParameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConstructorToken (constructor As ConstructorInfo, optionalParameterTypes As IEnumerable(Of Type)) As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetConstructorToken(System::Reflection::ConstructorInfo ^ constructor, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ optionalParameterTypes);" />
      <MemberSignature Language="F#" Value="member this.GetConstructorToken : System.Reflection.ConstructorInfo * seq&lt;Type&gt; -&gt; System.Reflection.Emit.MethodToken" Usage="moduleBuilder.GetConstructorToken (constructor, optionalParameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="optionalParameterTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="constructor">
          <span data-ttu-id="a2472-525">The constructor to get a token for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-525">The constructor to get a token for.</span>
          </span>
        </param>
        <param name="optionalParameterTypes">
          <span data-ttu-id="a2472-526">A collection of the types of the optional parameters to the constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-526">A collection of the types of the optional parameters to the constructor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-527">Returns the token used to identify the constructor that has the specified attributes and parameter types within this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-527">Returns the token used to identify the constructor that has the specified attributes and parameter types within this module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-528">The token used to identify the specified constructor within this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-528">The token used to identify the specified constructor within this module.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-529">
            <paramref name="constructor" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-529">
              <paramref name="constructor" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a2472-530">Returns the custom attributes that are applied to the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-530">Returns the custom attributes that are applied to the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : bool -&gt; obj[]" Usage="moduleBuilder.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="a2472-531">This argument is ignored for objects of this type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-531">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-532">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-532">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-533">An array that contains the custom attributes; the array is empty if there are no attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-533">An array that contains the custom attributes; the array is empty if there are no attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="moduleBuilder.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="a2472-534">The base type from which attributes derive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-534">The base type from which attributes derive.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="a2472-535">This argument is ignored for objects of this type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-535">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-536">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />, and that derive from a specified attribute type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-536">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />, and that derive from a specified attribute type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-537">An array that contains the custom attributes that are derived, at any level, from <paramref name="attributeType" />; the array is empty if there are no such attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-537">An array that contains the custom attributes that are derived, at any level, from <paramref name="attributeType" />; the array is empty if there are no such attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-538">
            <paramref name="attributeType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-538">
              <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-539">
            <paramref name="attributeType" /> is not a <see cref="T:System.Type" /> object supplied by the runtime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-539">
              <paramref name="attributeType" /> is not a <see cref="T:System.Type" /> object supplied by the runtime.</span>
          </span>
          <span data-ttu-id="a2472-540">For example, <paramref name="attributeType" /> is a <see cref="T:System.Reflection.Emit.TypeBuilder" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-540">For example, <paramref name="attributeType" /> is a <see cref="T:System.Reflection.Emit.TypeBuilder" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributesData">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributesData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetCustomAttributesData" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributesData () As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributesData();" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributesData : unit -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="moduleBuilder.GetCustomAttributesData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2472-541">Returns information about the attributes that have been applied to the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />, expressed as <see cref="T:System.Reflection.CustomAttributeData" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-541">Returns information about the attributes that have been applied to the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />, expressed as <see cref="T:System.Reflection.CustomAttributeData" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-542">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-542">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-543">Utilizzare questo metodo per esaminare gli attributi personalizzati del codice nel contesto ReflectionOnly, in casi in cui gli attributi personalizzati sono definiti nel codice caricato nel contesto reflection-only.</span><span class="sxs-lookup"><span data-stu-id="a2472-543">Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.</span></span> <span data-ttu-id="a2472-544">Metodi come <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> e <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> non può essere utilizzato in questi casi, poiché creano le istanze degli attributi.</span><span class="sxs-lookup"><span data-stu-id="a2472-544">Methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> cannot be used in such cases, because they create instances of the attributes.</span></span> <span data-ttu-id="a2472-545">Impossibile eseguire codice nel contesto reflection-only.</span><span class="sxs-lookup"><span data-stu-id="a2472-545">Code in the reflection-only context cannot be executed.</span></span> <span data-ttu-id="a2472-546">Per ulteriori informazioni e ad esempio di codice, vedere il <xref:System.Reflection.CustomAttributeData> classe.</span><span class="sxs-lookup"><span data-stu-id="a2472-546">For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo" Usage="moduleBuilder.GetField (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-547">The field name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-547">The field name.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="a2472-548">A combination of the <see langword="BindingFlags" /> bit flags used to control the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-548">A combination of the <see langword="BindingFlags" /> bit flags used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-549">Returns a module-level field, defined in the .sdata region of the portable executable (PE) file, that has the specified name and binding attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-549">Returns a module-level field, defined in the .sdata region of the portable executable (PE) file, that has the specified name and binding attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-550">A field that has the specified name and binding attributes, or <see langword="null" /> if the field does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-550">A field that has the specified name and binding attributes, or <see langword="null" /> if the field does not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-551">Quando si generano assembly dinamici, i campi nell'area. sdata del file eseguibile portabile (PE) vengono definiti tramite il <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> o <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="a2472-551">When you emit dynamic assemblies, fields in the .sdata region of the portable executable (PE) file are defined by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> or <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a2472-552">Non è possibile recuperare i campi a livello di modulo fino a dopo il <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> metodo è stato chiamato per il modulo.</span><span class="sxs-lookup"><span data-stu-id="a2472-552">Module-level fields cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-553">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-553">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="override this.GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]" Usage="moduleBuilder.GetFields bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags">
          <span data-ttu-id="a2472-554">A combination of the <see langword="BindingFlags" /> bit flags used to control the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-554">A combination of the <see langword="BindingFlags" /> bit flags used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-555">Returns all fields defined in the .sdata region of the portable executable (PE) file that match the specified binding flags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-555">Returns all fields defined in the .sdata region of the portable executable (PE) file that match the specified binding flags.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-556">An array of fields that match the specified flags; the array is empty if no such fields exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-556">An array of fields that match the specified flags; the array is empty if no such fields exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-557">Quando si generano assembly dinamici, i campi nell'area. sdata del file eseguibile portabile (PE) vengono definiti tramite il <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> o <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="a2472-557">When you emit dynamic assemblies, fields in the .sdata region of the portable executable (PE) file are defined by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> or <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a2472-558">Non è possibile recuperare i campi a livello di modulo fino a dopo il <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> metodo è stato chiamato per il modulo.</span><span class="sxs-lookup"><span data-stu-id="a2472-558">Module-level fields cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-559">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-559">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.FieldToken GetFieldToken (System.Reflection.FieldInfo field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.FieldToken GetFieldToken(class System.Reflection.FieldInfo field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetFieldToken(System.Reflection.FieldInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFieldToken (field As FieldInfo) As FieldToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::FieldToken GetFieldToken(System::Reflection::FieldInfo ^ field);" />
      <MemberSignature Language="F#" Value="member this.GetFieldToken : System.Reflection.FieldInfo -&gt; System.Reflection.Emit.FieldToken" Usage="moduleBuilder.GetFieldToken field" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.FieldToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.Reflection.FieldInfo" />
      </Parameters>
      <Docs>
        <param name="field">
          <span data-ttu-id="a2472-560">The field to get a token for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-560">The field to get a token for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-561">Returns the token used to identify the specified field within this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-561">Returns the token used to identify the specified field within this module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-562">The token used to identify the specified field within this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-562">The token used to identify the specified field within this module.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-563">
            <paramref name="field" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-563">
              <paramref name="field" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="moduleBuilder.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2472-564">Returns the hash code for this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-564">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-565">A 32-bit signed integer hash code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-565">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.MethodInfo GetMethodImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo GetMethodImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ GetMethodImpl(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="override this.GetMethodImpl : string * System.Reflection.BindingFlags * System.Reflection.Binder * System.Reflection.CallingConventions * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo" Usage="moduleBuilder.GetMethodImpl (name, bindingAttr, binder, callConvention, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-566">The method name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-566">The method name.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="a2472-567">A combination of <see langword="BindingFlags" /> bit flags used to control the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-567">A combination of <see langword="BindingFlags" /> bit flags used to control the search.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="a2472-568">An object that implements <see langword="Binder" />, containing properties related to this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-568">An object that implements <see langword="Binder" />, containing properties related to this method.</span>
          </span>
        </param>
        <param name="callConvention">
          <span data-ttu-id="a2472-569">The calling convention for the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-569">The calling convention for the method.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="a2472-570">The parameter types of the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-570">The parameter types of the method.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="a2472-571">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-571">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-572">Returns the module-level method that matches the specified criteria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-572">Returns the module-level method that matches the specified criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-573">A method that is defined at the module level, and matches the specified criteria; or <see langword="null" /> if such a method does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-573">A method that is defined at the module level, and matches the specified criteria; or <see langword="null" /> if such a method does not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-574">Questo metodo fornisce l'implementazione per tutti gli overload del ereditato <xref:System.Reflection.Module.GetMethod%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2472-574">This method provides the implementation for all overloads of the inherited <xref:System.Reflection.Module.GetMethod%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a2472-575">Utilizzare ereditato <xref:System.Reflection.Module.GetMethod%2A?displayProperty=nameWithType> metodo per ottenere i metodi che sono stati dichiarati a livello di modulo.</span><span class="sxs-lookup"><span data-stu-id="a2472-575">Use the inherited <xref:System.Reflection.Module.GetMethod%2A?displayProperty=nameWithType> method to get methods that have been declared at the module level.</span></span> <span data-ttu-id="a2472-576">I metodi a livello di modulo sono definiti nel codice generato utilizzando il <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2472-576">Module-level methods are defined in emitted code by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a2472-577">Non è possibile recuperare i metodi a livello di modulo fino a dopo il <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> metodo è stato chiamato per il modulo.</span><span class="sxs-lookup"><span data-stu-id="a2472-577">Module-level methods cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-578">
            <paramref name="name" /> is <see langword="null" />, <paramref name="types" /> is <see langword="null" />, or an element of <paramref name="types" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-578">
              <paramref name="name" /> is <see langword="null" />, <paramref name="types" /> is <see langword="null" />, or an element of <paramref name="types" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Reflection.CallingConventions" />
        <altmember cref="T:System.Reflection.ParameterModifier" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="override this.GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]" Usage="moduleBuilder.GetMethods bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags">
          <span data-ttu-id="a2472-579">A combination of <see langword="BindingFlags" /> bit flags used to control the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-579">A combination of <see langword="BindingFlags" /> bit flags used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-580">Returns all the methods that have been defined at the module level for the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />, and that match the specified binding flags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-580">Returns all the methods that have been defined at the module level for the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />, and that match the specified binding flags.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-581">An array that contains all the module-level methods that match <paramref name="bindingFlags" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-581">An array that contains all the module-level methods that match <paramref name="bindingFlags" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-582">I metodi a livello di modulo sono definiti nel codice generato utilizzando il <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2472-582">Module-level methods are defined in emitted code by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a2472-583">Non è possibile recuperare i metodi a livello di modulo fino a dopo il <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> metodo è stato chiamato per il modulo.</span><span class="sxs-lookup"><span data-stu-id="a2472-583">Module-level methods cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethodToken">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a2472-584">Returns the token used to identify the specified method within this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-584">Returns the token used to identify the specified method within this module.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethodToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetMethodToken (System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetMethodToken(class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethodToken (method As MethodInfo) As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetMethodToken(System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="member this.GetMethodToken : System.Reflection.MethodInfo -&gt; System.Reflection.Emit.MethodToken" Usage="moduleBuilder.GetMethodToken method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="a2472-585">The method to get a token for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-585">The method to get a token for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-586">Returns the token used to identify the specified method within this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-586">Returns the token used to identify the specified method within this module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-587">The token used to identify the specified method within this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-587">The token used to identify the specified method within this module.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-588">
            <paramref name="method" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-588">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2472-589">The declaring type for the method is not in this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-589">The declaring type for the method is not in this module.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetMethodToken (System.Reflection.MethodInfo method, System.Collections.Generic.IEnumerable&lt;Type&gt; optionalParameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetMethodToken(class System.Reflection.MethodInfo method, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; optionalParameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethodToken (method As MethodInfo, optionalParameterTypes As IEnumerable(Of Type)) As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetMethodToken(System::Reflection::MethodInfo ^ method, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ optionalParameterTypes);" />
      <MemberSignature Language="F#" Value="member this.GetMethodToken : System.Reflection.MethodInfo * seq&lt;Type&gt; -&gt; System.Reflection.Emit.MethodToken" Usage="moduleBuilder.GetMethodToken (method, optionalParameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="optionalParameterTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="a2472-590">The method to get a token for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-590">The method to get a token for.</span>
          </span>
        </param>
        <param name="optionalParameterTypes">
          <span data-ttu-id="a2472-591">A collection of the types of the optional parameters to the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-591">A collection of the types of the optional parameters to the method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-592">Returns the token used to identify the method that has the specified attributes and parameter types within this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-592">Returns the token used to identify the method that has the specified attributes and parameter types within this module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-593">The token used to identify the specified method within this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-593">The token used to identify the specified method within this module.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-594">
            <paramref name="method" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-594">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2472-595">The declaring type for the method is not in this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-595">The declaring type for the method is not in this module.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPEKind">
      <MemberSignature Language="C#" Value="public override void GetPEKind (out System.Reflection.PortableExecutableKinds peKind, out System.Reflection.ImageFileMachine machine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetPEKind([out] valuetype System.Reflection.PortableExecutableKinds&amp; peKind, [out] valuetype System.Reflection.ImageFileMachine&amp; machine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetPEKind (ByRef peKind As PortableExecutableKinds, ByRef machine As ImageFileMachine)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetPEKind([Runtime::InteropServices::Out] System::Reflection::PortableExecutableKinds % peKind, [Runtime::InteropServices::Out] System::Reflection::ImageFileMachine % machine);" />
      <MemberSignature Language="F#" Value="override this.GetPEKind :  *  -&gt; unit" Usage="moduleBuilder.GetPEKind (peKind, machine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peKind" Type="System.Reflection.PortableExecutableKinds&amp;" RefType="out" />
        <Parameter Name="machine" Type="System.Reflection.ImageFileMachine&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="peKind">
          <span data-ttu-id="a2472-596">When this method returns, a combination of the <see cref="T:System.Reflection.PortableExecutableKinds" /> values indicating the nature of the code in the module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-596">When this method returns, a combination of the <see cref="T:System.Reflection.PortableExecutableKinds" /> values indicating the nature of the code in the module.</span>
          </span>
        </param>
        <param name="machine">
          <span data-ttu-id="a2472-597">When this method returns, one of the <see cref="T:System.Reflection.ImageFileMachine" /> values indicating the platform targeted by the module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-597">When this method returns, one of the <see cref="T:System.Reflection.ImageFileMachine" /> values indicating the platform targeted by the module.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-598">Gets a pair of values indicating the nature of the code in a module and the platform targeted by the module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-598">Gets a pair of values indicating the nature of the code in a module and the platform targeted by the module.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-599">Per i moduli dinamici, `peKind` è sempre <xref:System.Reflection.PortableExecutableKinds.NotAPortableExecutableImage?displayProperty=nameWithType> e `machine` è sempre 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="a2472-599">For dynamic modules, `peKind` is always <xref:System.Reflection.PortableExecutableKinds.NotAPortableExecutableImage?displayProperty=nameWithType> and `machine` is always 0 (zero).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSignatureToken">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a2472-600">Defines a signature token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-600">Defines a signature token.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSignatureToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.SignatureToken GetSignatureToken (System.Reflection.Emit.SignatureHelper sigHelper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.SignatureToken GetSignatureToken(class System.Reflection.Emit.SignatureHelper sigHelper) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Reflection.Emit.SignatureHelper)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignatureToken (sigHelper As SignatureHelper) As SignatureToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::SignatureToken GetSignatureToken(System::Reflection::Emit::SignatureHelper ^ sigHelper);" />
      <MemberSignature Language="F#" Value="member this.GetSignatureToken : System.Reflection.Emit.SignatureHelper -&gt; System.Reflection.Emit.SignatureToken" Usage="moduleBuilder.GetSignatureToken sigHelper" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sigHelper" Type="System.Reflection.Emit.SignatureHelper" />
      </Parameters>
      <Docs>
        <param name="sigHelper">
          <span data-ttu-id="a2472-601">The signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-601">The signature.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-602">Defines a token for the signature that is defined by the specified <see cref="T:System.Reflection.Emit.SignatureHelper" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-602">Defines a token for the signature that is defined by the specified <see cref="T:System.Reflection.Emit.SignatureHelper" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-603">A token for the defined signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-603">A token for the defined signature.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-604">Questo metodo consente di definire un token di metadati per la firma descritto da `sigHelper`.</span><span class="sxs-lookup"><span data-stu-id="a2472-604">This method defines a metadata token for the signature described by `sigHelper`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-605">
            <paramref name="sigHelper" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-605">
              <paramref name="sigHelper" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.SignatureToken GetSignatureToken (byte[] sigBytes, int sigLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.SignatureToken GetSignatureToken(unsigned int8[] sigBytes, int32 sigLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignatureToken (sigBytes As Byte(), sigLength As Integer) As SignatureToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::SignatureToken GetSignatureToken(cli::array &lt;System::Byte&gt; ^ sigBytes, int sigLength);" />
      <MemberSignature Language="F#" Value="member this.GetSignatureToken : byte[] * int -&gt; System.Reflection.Emit.SignatureToken" Usage="moduleBuilder.GetSignatureToken (sigBytes, sigLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sigBytes" Type="System.Byte[]" />
        <Parameter Name="sigLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sigBytes">
          <span data-ttu-id="a2472-606">The signature binary large object (BLOB).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-606">The signature binary large object (BLOB).</span>
          </span>
        </param>
        <param name="sigLength">
          <span data-ttu-id="a2472-607">The length of the signature BLOB.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-607">The length of the signature BLOB.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-608">Defines a token for the signature that has the specified character array and signature length.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-608">Defines a token for the signature that has the specified character array and signature length.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-609">A token for the specified signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-609">A token for the specified signature.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-610">
            <paramref name="sigBytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-610">
              <paramref name="sigBytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignerCertificate">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.X509Certificates.X509Certificate GetSignerCertificate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.X509Certificates.X509Certificate GetSignerCertificate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetSignerCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSignerCertificate () As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::X509Certificates::X509Certificate ^ GetSignerCertificate();" />
      <MemberSignature Language="F#" Value="override this.GetSignerCertificate : unit -&gt; System.Security.Cryptography.X509Certificates.X509Certificate" Usage="moduleBuilder.GetSignerCertificate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2472-611">Returns an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object corresponding to the certificate included in the Authenticode signature of the assembly which this module belongs to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-611">Returns an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object corresponding to the certificate included in the Authenticode signature of the assembly which this module belongs to.</span>
          </span>
          <span data-ttu-id="a2472-612">If the assembly has not been Authenticode signed, <see langword="null" /> is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-612">If the assembly has not been Authenticode signed, <see langword="null" /> is returned.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-613">A certificate, or <see langword="null" /> if the assembly to which this module belongs has not been Authenticode signed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-613">A certificate, or <see langword="null" /> if the assembly to which this module belongs has not been Authenticode signed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringConstant">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.StringToken GetStringConstant (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.StringToken GetStringConstant(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetStringConstant(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStringConstant (str As String) As StringToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::StringToken GetStringConstant(System::String ^ str);" />
      <MemberSignature Language="F#" Value="member this.GetStringConstant : string -&gt; System.Reflection.Emit.StringToken" Usage="moduleBuilder.GetStringConstant str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StringToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="a2472-614">The string to add to the module's constant pool.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-614">The string to add to the module's constant pool.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-615">Returns the token of the given string in the module’s constant pool.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-615">Returns the token of the given string in the module’s constant pool.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-616">The token of the string in the constant pool.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-616">The token of the string in the constant pool.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-617">Se `str` è già stato definito, verrà restituito il token esistente.</span><span class="sxs-lookup"><span data-stu-id="a2472-617">If `str` has already been defined, the existing token will be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-618">
            <paramref name="str" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-618">
              <paramref name="str" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSymWriter">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SymbolStore.ISymbolWriter GetSymWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.SymbolStore.ISymbolWriter GetSymWriter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetSymWriter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSymWriter () As ISymbolWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::SymbolStore::ISymbolWriter ^ GetSymWriter();" />
      <MemberSignature Language="F#" Value="member this.GetSymWriter : unit -&gt; System.Diagnostics.SymbolStore.ISymbolWriter" Usage="moduleBuilder.GetSymWriter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2472-619">Returns the symbol writer associated with this dynamic module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-619">Returns the symbol writer associated with this dynamic module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-620">The symbol writer associated with this dynamic module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-620">The symbol writer associated with this dynamic module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a2472-621">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-621">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-622">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-622">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a2472-623">Gets the named type defined in the module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-623">Gets the named type defined in the module.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public override Type GetType (string className);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetType(string className) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetType (className As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetType(System::String ^ className);" />
      <MemberSignature Language="F#" Value="override this.GetType : string -&gt; Type" Usage="moduleBuilder.GetType className" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="className">
          <span data-ttu-id="a2472-624">The name of the <see cref="T:System.Type" /> to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-624">The name of the <see cref="T:System.Type" /> to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-625">Gets the named type defined in the module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-625">Gets the named type defined in the module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-626">The requested type, if the type is defined in this module; otherwise, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-626">The requested type, if the type is defined in this module; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-627">Usare questo metodo per generare i tipi di matrice, tipi di puntatore o tipi byref.</span><span class="sxs-lookup"><span data-stu-id="a2472-627">Do not use this method to generate array types, pointer types, or byref types.</span></span> <span data-ttu-id="a2472-628">Usare la <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>, e <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> metodi invece.</span><span class="sxs-lookup"><span data-stu-id="a2472-628">Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> methods instead.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-629">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-629">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-630">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-630">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-631">Length of <paramref name="className" /> is zero or is greater than 1023.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-631">Length of <paramref name="className" /> is zero or is greater than 1023.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-632">
            <paramref name="className" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-632">
              <paramref name="className" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="a2472-633">The requested <see cref="T:System.Type" /> is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect non-public objects outside the current assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-633">The requested <see cref="T:System.Type" /> is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect non-public objects outside the current assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="a2472-634">A class initializer is invoked and throws an exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-634">A class initializer is invoked and throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="a2472-635">An error is encountered while loading the <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-635">An error is encountered while loading the <see cref="T:System.Type" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public override Type GetType (string className, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetType(string className, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetType (className As String, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetType(System::String ^ className, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * bool -&gt; Type" Usage="moduleBuilder.GetType (className, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className">
          <span data-ttu-id="a2472-636">The name of the <see cref="T:System.Type" /> to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-636">The name of the <see cref="T:System.Type" /> to get.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="a2472-637">If <see langword="true" />, the search is case-insensitive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-637">If <see langword="true" />, the search is case-insensitive.</span>
          </span>
          <span data-ttu-id="a2472-638">If <see langword="false" />, the search is case-sensitive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-638">If <see langword="false" />, the search is case-sensitive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-639">Gets the named type defined in the module, optionally ignoring the case of the type name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-639">Gets the named type defined in the module, optionally ignoring the case of the type name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-640">The requested type, if the type is defined in this module; otherwise, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-640">The requested type, if the type is defined in this module; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-641">Usare questo metodo per generare i tipi di matrice, tipi di puntatore o tipi byref.</span><span class="sxs-lookup"><span data-stu-id="a2472-641">Do not use this method to generate array types, pointer types, or byref types.</span></span> <span data-ttu-id="a2472-642">Usare la <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>, e <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> metodi invece.</span><span class="sxs-lookup"><span data-stu-id="a2472-642">Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> methods instead.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-643">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-643">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-644">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-644">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-645">Length of <paramref name="className" /> is zero or is greater than 1023.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-645">Length of <paramref name="className" /> is zero or is greater than 1023.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-646">
            <paramref name="className" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-646">
              <paramref name="className" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="a2472-647">The requested <see cref="T:System.Type" /> is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect non-public objects outside the current assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-647">The requested <see cref="T:System.Type" /> is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect non-public objects outside the current assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="a2472-648">A class initializer is invoked and throws an exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-648">A class initializer is invoked and throws an exception.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public override Type GetType (string className, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetType(string className, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetType (className As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetType(System::String ^ className, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * bool * bool -&gt; Type" Usage="moduleBuilder.GetType (className, throwOnError, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className">
          <span data-ttu-id="a2472-649">The name of the <see cref="T:System.Type" /> to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-649">The name of the <see cref="T:System.Type" /> to get.</span>
          </span>
        </param>
        <param name="throwOnError">
          <span data-ttu-id="a2472-650">
            <see langword="true" /> to throw an exception if the type cannot be found; <see langword="false" /> to return <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-650">
              <see langword="true" /> to throw an exception if the type cannot be found; <see langword="false" /> to return <see langword="null" />.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="a2472-651">If <see langword="true" />, the search is case-insensitive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-651">If <see langword="true" />, the search is case-insensitive.</span>
          </span>
          <span data-ttu-id="a2472-652">If <see langword="false" />, the search is case-sensitive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-652">If <see langword="false" />, the search is case-sensitive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-653">Gets the named type defined in the module, optionally ignoring the case of the type name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-653">Gets the named type defined in the module, optionally ignoring the case of the type name.</span>
          </span>
          <span data-ttu-id="a2472-654">Optionally throws an exception if the type is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-654">Optionally throws an exception if the type is not found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-655">The specified type, if the type is declared in this module; otherwise, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-655">The specified type, if the type is declared in this module; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-656">Il `throwOnError` parametro ha effetto solo quando il tipo non viene trovato.</span><span class="sxs-lookup"><span data-stu-id="a2472-656">The `throwOnError` parameter only affects what happens when the type is not found.</span></span> <span data-ttu-id="a2472-657">Non influenza tutte le altre eccezioni che possono essere generate.</span><span class="sxs-lookup"><span data-stu-id="a2472-657">It does not affect any other exceptions that might be thrown.</span></span> <span data-ttu-id="a2472-658">In particolare, se il tipo è stato trovato ma non può essere caricato <xref:System.TypeLoadException> possono essere generate anche se `throwOnError` è `false`.</span><span class="sxs-lookup"><span data-stu-id="a2472-658">In particular, if the type is found but cannot be loaded, <xref:System.TypeLoadException> can be thrown even if `throwOnError` is `false`.</span></span>  
  
 <span data-ttu-id="a2472-659">Usare questo metodo per generare i tipi di matrice, tipi di puntatore o tipi byref.</span><span class="sxs-lookup"><span data-stu-id="a2472-659">Do not use this method to generate array types, pointer types, or byref types.</span></span> <span data-ttu-id="a2472-660">Usare la <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>, e <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> metodi invece.</span><span class="sxs-lookup"><span data-stu-id="a2472-660">Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> methods instead.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-661">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-661">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-662">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-662">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-663">Length of <paramref name="className" /> is zero or is greater than 1023.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-663">Length of <paramref name="className" /> is zero or is greater than 1023.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-664">
            <paramref name="className" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-664">
              <paramref name="className" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="a2472-665">The requested <see cref="T:System.Type" /> is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect non-public objects outside the current assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-665">The requested <see cref="T:System.Type" /> is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect non-public objects outside the current assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="a2472-666">A class initializer is invoked and throws an exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-666">A class initializer is invoked and throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="a2472-667">
            <paramref name="throwOnError" /> is <see langword="true" /> and the specified type is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-667">
              <paramref name="throwOnError" /> is <see langword="true" /> and the specified type is not found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypes">
      <MemberSignature Language="C#" Value="public override Type[] GetTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetTypes();" />
      <MemberSignature Language="F#" Value="override this.GetTypes : unit -&gt; Type[]" Usage="moduleBuilder.GetTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2472-668">Returns all the classes defined within this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-668">Returns all the classes defined within this module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-669">An array that contains the types defined within the module that is reflected by this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-669">An array that contains the types defined within the module that is reflected by this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-670">`ReflectionTypeLoadException` è un'eccezione di caricamento di classe speciale.</span><span class="sxs-lookup"><span data-stu-id="a2472-670">`ReflectionTypeLoadException` is a special class load exception.</span></span> <span data-ttu-id="a2472-671">Il `ReflectionTypeLoadException.Types` proprietà contiene la matrice di classi che sono stati definiti nel modulo caricato.</span><span class="sxs-lookup"><span data-stu-id="a2472-671">The `ReflectionTypeLoadException.Types` property contains the array of classes that were defined in the module and loaded.</span></span> <span data-ttu-id="a2472-672">Questa matrice può contenere alcuni valori null.</span><span class="sxs-lookup"><span data-stu-id="a2472-672">This array can contain some null values.</span></span> <span data-ttu-id="a2472-673">Il `ReflectionTypeLoadException.LoaderExceptions` proprietà è una matrice di eccezioni che rappresentano le eccezioni generate dal caricatore della classe.</span><span class="sxs-lookup"><span data-stu-id="a2472-673">The `ReflectionTypeLoadException.LoaderExceptions` property is an array of exceptions that represent the exceptions that were thrown by the class loader.</span></span> <span data-ttu-id="a2472-674">Allineare i fori nella matrice di classe con le eccezioni.</span><span class="sxs-lookup"><span data-stu-id="a2472-674">The holes in the class array line up with the exceptions.</span></span>  
  
 <span data-ttu-id="a2472-675">Ad esempio, se gli inizializzatori di una delle classi genera un'eccezione durante il caricato, una `TargetInvocationException` viene archiviato nell'elemento corrispondente del `LoaderExceptions` matrice.</span><span class="sxs-lookup"><span data-stu-id="a2472-675">For example, if the class initializers of one of the classes throws an exception while it is being loaded, a `TargetInvocationException` is stored in the corresponding element of the `LoaderExceptions` array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-676">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-676">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-677">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-677">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.ReflectionTypeLoadException">
          <span data-ttu-id="a2472-678">One or more classes in a module could not be loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-678">One or more classes in a module could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="a2472-679">The caller does not have the required permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-679">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.ReflectionTypeLoadException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeToken">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a2472-680">Returns a type token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-680">Returns a type token.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeToken GetTypeToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.TypeToken GetTypeToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeToken (name As String) As TypeToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeToken GetTypeToken(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetTypeToken : string -&gt; System.Reflection.Emit.TypeToken" Usage="moduleBuilder.GetTypeToken name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-681">The name of the class, including the namespace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-681">The name of the class, including the namespace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-682">Returns the token used to identify the type with the specified name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-682">Returns the token used to identify the type with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-683">The token used to identify the type with the specified name within this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-683">The token used to identify the type with the specified name within this module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-684">Questo metodo è utile per i client del <xref:System.Reflection.Emit.MethodRental> classe che desiderano modificare direttamente il corpo di un metodo.</span><span class="sxs-lookup"><span data-stu-id="a2472-684">This method is useful for clients of the <xref:System.Reflection.Emit.MethodRental> class who want to directly modify the body of a method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-685">
            <paramref name="name" /> is the empty string ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-685">
              <paramref name="name" /> is the empty string ("").</span>
          </span>
          <span data-ttu-id="a2472-686">-or-  <paramref name="name" /> represents a <see langword="ByRef" /> type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-686">-or-  <paramref name="name" /> represents a <see langword="ByRef" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-687">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-687">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a2472-688">-or-  The type specified by <paramref name="name" /> could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-688">-or-  The type specified by <paramref name="name" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2472-689">This is a non-transient module that references a transient module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-689">This is a non-transient module that references a transient module.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeToken GetTypeToken (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.TypeToken GetTypeToken(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeToken GetTypeToken(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetTypeToken : Type -&gt; System.Reflection.Emit.TypeToken" Usage="moduleBuilder.GetTypeToken type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a2472-690">The type object that represents the class type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-690">The type object that represents the class type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-691">Returns the token used to identify the specified type within this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-691">Returns the token used to identify the specified type within this module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-692">The token used to identify the given type within this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-692">The token used to identify the given type within this module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-693">I token vengono utilizzati in istruzioni Microsoft intermediate language (MSIL) per identificare gli oggetti.</span><span class="sxs-lookup"><span data-stu-id="a2472-693">Tokens are used in Microsoft intermediate language (MSIL) instructions to identify objects.</span></span> <span data-ttu-id="a2472-694">I token sono rispetto al modulo in cui sono contenuti.</span><span class="sxs-lookup"><span data-stu-id="a2472-694">Tokens are relative to the module in which they are contained.</span></span> <span data-ttu-id="a2472-695">Ad esempio, il valore del token per `String` è probabilmente diverso da un modulo a un modulo.</span><span class="sxs-lookup"><span data-stu-id="a2472-695">For example, the token value for `String` is likely to be different from module to module.</span></span> <span data-ttu-id="a2472-696">Quando `GetTypeToken` viene richiamato, viene aggiunto un riferimento al modulo.</span><span class="sxs-lookup"><span data-stu-id="a2472-696">When `GetTypeToken` is invoked, a reference is added to the module.</span></span> <span data-ttu-id="a2472-697">Il riferimento diventa parte permanente del modulo. più chiamate con lo stesso argomento non hanno alcun effetto aggiuntiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-697">The reference becomes a permanent part of the module; multiple calls with the same argument have no additional effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-698">
            <paramref name="type" /> is a <see langword="ByRef" /> type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-698">
              <paramref name="type" /> is a <see langword="ByRef" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-699">
            <paramref name="type" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-699">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2472-700">This is a non-transient module that references a transient module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-700">This is a non-transient module that references a transient module.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.IsDefined : Type * bool -&gt; bool" Usage="moduleBuilder.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="a2472-701">The type of custom attribute to test for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-701">The type of custom attribute to test for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="a2472-702">This argument is ignored for objects of this type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-702">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-703">Returns a value that indicates whether the specified attribute type has been applied to this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-703">Returns a value that indicates whether the specified attribute type has been applied to this module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-704">
            <see langword="true" /> if one or more instances of <paramref name="attributeType" /> have been applied to this module; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-704">
              <see langword="true" /> if one or more instances of <paramref name="attributeType" /> have been applied to this module; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-705">
            <paramref name="attributeType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-705">
              <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-706">
            <paramref name="attributeType" /> is not a <see cref="T:System.Type" /> object supplied by the runtime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-706">
              <paramref name="attributeType" /> is not a <see cref="T:System.Type" /> object supplied by the runtime.</span>
          </span>
          <span data-ttu-id="a2472-707">For example, <paramref name="attributeType" /> is a <see cref="T:System.Reflection.Emit.TypeBuilder" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-707">For example, <paramref name="attributeType" /> is a <see cref="T:System.Reflection.Emit.TypeBuilder" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsResource">
      <MemberSignature Language="C#" Value="public override bool IsResource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsResource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.IsResource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsResource () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsResource();" />
      <MemberSignature Language="F#" Value="override this.IsResource : unit -&gt; bool" Usage="moduleBuilder.IsResource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2472-708">Gets a value indicating whether the object is a resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-708">Gets a value indicating whether the object is a resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-709">
            <see langword="true" /> if the object is a resource; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-709">
              <see langword="true" /> if the object is a resource; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransient">
      <MemberSignature Language="C#" Value="public bool IsTransient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsTransient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.IsTransient" />
      <MemberSignature Language="VB.NET" Value="Public Function IsTransient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsTransient();" />
      <MemberSignature Language="F#" Value="member this.IsTransient : unit -&gt; bool" Usage="moduleBuilder.IsTransient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2472-710">Returns a value that indicates whether this dynamic module is transient.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-710">Returns a value that indicates whether this dynamic module is transient.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-711">
            <see langword="true" /> if this dynamic module is transient; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-711">
              <see langword="true" /> if this dynamic module is transient; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MDStreamVersion">
      <MemberSignature Language="C#" Value="public override int MDStreamVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MDStreamVersion" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.MDStreamVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MDStreamVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MDStreamVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MDStreamVersion : int" Usage="System.Reflection.Emit.ModuleBuilder.MDStreamVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a2472-712">Gets the metadata stream version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-712">Gets the metadata stream version.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a2472-713">Un intero a 32 bit che rappresenta la versione del flusso di metadati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-713">A 32-bit integer representing the metadata stream version.</span>
          </span>
          <span data-ttu-id="a2472-714">I due byte più significativo rappresenta il numero di versione principale e i due byte meno significativo rappresenta il numero di versione secondario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-714">The high-order two bytes represent the major version number, and the low-order two bytes represent the minor version number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a2472-715">Per ulteriori informazioni sull'intestazione di metadati, vedere "Partizione II: metadati definizione e la semantica" nella documentazione di Common Language Infrastructure (CLI).</span><span class="sxs-lookup"><span data-stu-id="a2472-715">For more information on the metadata header, see "Partition II: Metadata Definition and Semantics" in the Common Language Infrastructure (CLI) documentation.</span></span> <span data-ttu-id="a2472-716">La documentazione è disponibile online; vedere [ECMA c# e Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) su MSDN e [Standard ECMA-335: Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web di ECMA.</span><span class="sxs-lookup"><span data-stu-id="a2472-716">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataToken">
      <MemberSignature Language="C#" Value="public override int MetadataToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MetadataToken" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.MetadataToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MetadataToken As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MetadataToken { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataToken : int" Usage="System.Reflection.Emit.ModuleBuilder.MetadataToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a2472-717">Gets a token that identifies the current dynamic module in metadata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-717">Gets a token that identifies the current dynamic module in metadata.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a2472-718">Un token di tipo integer che identifica il modulo corrente nei metadati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-718">An integer token that identifies the current module in metadata.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-719">Il token ottenuto utilizzando questa proprietà può essere passato all'API Reflection non gestito.</span><span class="sxs-lookup"><span data-stu-id="a2472-719">The tokens obtained using this property can be passed to the unmanaged Reflection API.</span></span> <span data-ttu-id="a2472-720">Per altre informazioni, vedere [API di Reflection non gestita](http://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).</span><span class="sxs-lookup"><span data-stu-id="a2472-720">For more information, see [Unmanaged Reflection API](http://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-721">Informazioni sui token di metadati sono disponibili nella documentazione di Common Language Infrastructure (CLI), in particolare "Partition II: metadati definizione e la semantica".</span><span class="sxs-lookup"><span data-stu-id="a2472-721">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="a2472-722">La documentazione è disponibile online; vedere [ECMA c# e Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) su MSDN e [Standard ECMA-335: Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web di ECMA.</span><span class="sxs-lookup"><span data-stu-id="a2472-722">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuleVersionId">
      <MemberSignature Language="C#" Value="public override Guid ModuleVersionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ModuleVersionId" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.ModuleVersionId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ModuleVersionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid ModuleVersionId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ModuleVersionId : Guid" Usage="System.Reflection.Emit.ModuleBuilder.ModuleVersionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a2472-723">Gets a universally unique identifier (UUID) that can be used to distinguish between two versions of a module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-723">Gets a universally unique identifier (UUID) that can be used to distinguish between two versions of a module.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a2472-724">Oggetto <see cref="T:System.Guid" /> che può essere usato per la distinzione tra due versioni di un modulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-724">A <see cref="T:System.Guid" /> that can be used to distinguish between two versions of a module.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-725">Nei metadati non gestiti, il GUID restituito dal <xref:System.Reflection.Module.ModuleVersionId%2A> proprietà è definita come il `mvid`e viene archiviato nell'heap dei GUID.</span><span class="sxs-lookup"><span data-stu-id="a2472-725">In unmanaged metadata, the GUID returned by the <xref:System.Reflection.Module.ModuleVersionId%2A> property is referred to as the `mvid`, and is stored in the GUID heap.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-726">Ulteriori informazioni sui metadati è reperibile nella documentazione di Common Language Infrastructure (CLI), in particolare "Partition II: metadati definizione e la semantica".</span><span class="sxs-lookup"><span data-stu-id="a2472-726">More information about metadata can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="a2472-727">La documentazione è disponibile online; vedere [ECMA c# e Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) su MSDN e [Standard ECMA-335: Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web di ECMA.</span><span class="sxs-lookup"><span data-stu-id="a2472-727">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Reflection.Emit.ModuleBuilder.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a2472-728">A string that indicates that this is an in-memory module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-728">A string that indicates that this is an in-memory module.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a2472-729">Testo che indica che si tratta di un modulo in memoria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-729">Text that indicates that this is an in-memory module.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-730">Non è possibile ottenere il nome di un modulo dinamico fino a quando il modulo è stato salvato e ricaricato dal disco.</span><span class="sxs-lookup"><span data-stu-id="a2472-730">The name of a dynamic module cannot be obtained until the module has been saved and reloaded from disk.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveField">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo ResolveField (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo ResolveField(int32 metadataToken, class System.Type[] genericTypeArguments, class System.Type[] genericMethodArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveField(System.Int32,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveField (metadataToken As Integer, genericTypeArguments As Type(), genericMethodArguments As Type()) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::FieldInfo ^ ResolveField(int metadataToken, cli::array &lt;Type ^&gt; ^ genericTypeArguments, cli::array &lt;Type ^&gt; ^ genericMethodArguments);" />
      <MemberSignature Language="F#" Value="override this.ResolveField : int * Type[] * Type[] -&gt; System.Reflection.FieldInfo" Usage="moduleBuilder.ResolveField (metadataToken, genericTypeArguments, genericMethodArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" />
        <Parameter Name="genericTypeArguments" Type="System.Type[]" />
        <Parameter Name="genericMethodArguments" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="metadataToken">
          <span data-ttu-id="a2472-731">A metadata token that identifies a field in the module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-731">A metadata token that identifies a field in the module.</span>
          </span>
        </param>
        <param name="genericTypeArguments">
          <span data-ttu-id="a2472-732">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the type where the token is in scope, or <see langword="null" /> if that type is not generic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-732">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the type where the token is in scope, or <see langword="null" /> if that type is not generic.</span>
          </span>
        </param>
        <param name="genericMethodArguments">
          <span data-ttu-id="a2472-733">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the method where the token is in scope, or <see langword="null" /> if that method is not generic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-733">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the method where the token is in scope, or <see langword="null" /> if that method is not generic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-734">Returns the field identified by the specified metadata token, in the context defined by the specified generic type parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-734">Returns the field identified by the specified metadata token, in the context defined by the specified generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-735">A <see cref="T:System.Reflection.FieldInfo" /> object representing the field that is identified by the specified metadata token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-735">A <see cref="T:System.Reflection.FieldInfo" /> object representing the field that is identified by the specified metadata token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-736">Usare la <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> metodo sul tipo in cui `metadataToken` si trova nell'ambito per ottenere una matrice di argomenti di tipo generico per `genericTypeArguments`.</span><span class="sxs-lookup"><span data-stu-id="a2472-736">Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="a2472-737">Usare la <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> metodo al metodo in cui `metadataToken` si trova nell'ambito per ottenere una matrice di argomenti di tipo generico per `genericTypeArguments`.</span><span class="sxs-lookup"><span data-stu-id="a2472-737">Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="a2472-738">È sempre sicura fornire gli argomenti, anche quando non sono necessari.</span><span class="sxs-lookup"><span data-stu-id="a2472-738">It is always safe to provide these arguments, even when they are not needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-739">Informazioni sui token di metadati sono disponibili nella documentazione di Common Language Infrastructure (CLI), in particolare "Partition II: metadati definizione e la semantica".</span><span class="sxs-lookup"><span data-stu-id="a2472-739">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="a2472-740">La documentazione è disponibile online; vedere [ECMA c# e Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) su MSDN e [Standard ECMA-335: Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web di ECMA.</span><span class="sxs-lookup"><span data-stu-id="a2472-740">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 <span data-ttu-id="a2472-741">Per il codice che illustra la risoluzione del token utilizzando il contesto generico (vale a dire, i parametri di tipo generico di tipo generico e/o del metodo generico in cui è incorporato il token) vedere il <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2472-741">For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-742">
            <paramref name="metadataToken" /> is not a token for a field in the scope of the current module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-742">
              <paramref name="metadataToken" /> is not a token for a field in the scope of the current module.</span>
          </span>
          <span data-ttu-id="a2472-743">-or-  <paramref name="metadataToken" /> identifies a field whose parent <see langword="TypeSpec" /> has a signature containing element type <see langword="var" /> (a type parameter of a generic type) or <see langword="mvar" /> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <paramref name="genericTypeArguments" /> and <paramref name="genericMethodArguments" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-743">-or-  <paramref name="metadataToken" /> identifies a field whose parent <see langword="TypeSpec" /> has a signature containing element type <see langword="var" /> (a type parameter of a generic type) or <see langword="mvar" /> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <paramref name="genericTypeArguments" /> and <paramref name="genericMethodArguments" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2472-744">
            <paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-744">
              <paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo ResolveMember (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo ResolveMember(int32 metadataToken, class System.Type[] genericTypeArguments, class System.Type[] genericMethodArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveMember(System.Int32,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveMember (metadataToken As Integer, genericTypeArguments As Type(), genericMethodArguments As Type()) As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MemberInfo ^ ResolveMember(int metadataToken, cli::array &lt;Type ^&gt; ^ genericTypeArguments, cli::array &lt;Type ^&gt; ^ genericMethodArguments);" />
      <MemberSignature Language="F#" Value="override this.ResolveMember : int * Type[] * Type[] -&gt; System.Reflection.MemberInfo" Usage="moduleBuilder.ResolveMember (metadataToken, genericTypeArguments, genericMethodArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" />
        <Parameter Name="genericTypeArguments" Type="System.Type[]" />
        <Parameter Name="genericMethodArguments" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="metadataToken">
          <span data-ttu-id="a2472-745">A metadata token that identifies a type or member in the module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-745">A metadata token that identifies a type or member in the module.</span>
          </span>
        </param>
        <param name="genericTypeArguments">
          <span data-ttu-id="a2472-746">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the type where the token is in scope, or <see langword="null" /> if that type is not generic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-746">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the type where the token is in scope, or <see langword="null" /> if that type is not generic.</span>
          </span>
        </param>
        <param name="genericMethodArguments">
          <span data-ttu-id="a2472-747">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the method where the token is in scope, or <see langword="null" /> if that method is not generic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-747">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the method where the token is in scope, or <see langword="null" /> if that method is not generic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-748">Returns the type or member identified by the specified metadata token, in the context defined by the specified generic type parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-748">Returns the type or member identified by the specified metadata token, in the context defined by the specified generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-749">A <see cref="T:System.Reflection.MemberInfo" /> object representing the type or member that is identified by the specified metadata token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-749">A <see cref="T:System.Reflection.MemberInfo" /> object representing the type or member that is identified by the specified metadata token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-750">Usare la <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> metodo sul tipo in cui `metadataToken` si trova nell'ambito per ottenere una matrice di argomenti di tipo generico per `genericTypeArguments`.</span><span class="sxs-lookup"><span data-stu-id="a2472-750">Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="a2472-751">Usare la <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> metodo al metodo in cui `metadataToken` si trova nell'ambito per ottenere una matrice di argomenti di tipo generico per `genericTypeArguments`.</span><span class="sxs-lookup"><span data-stu-id="a2472-751">Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="a2472-752">È sempre sicura fornire gli argomenti, anche quando non sono necessari.</span><span class="sxs-lookup"><span data-stu-id="a2472-752">It is always safe to provide these arguments, even when they are not needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-753">Informazioni sui token di metadati sono disponibili nella documentazione di Common Language Infrastructure (CLI), in particolare "Partition II: metadati definizione e la semantica".</span><span class="sxs-lookup"><span data-stu-id="a2472-753">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="a2472-754">La documentazione è disponibile online; vedere [ECMA c# e Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) su MSDN e [Standard ECMA-335: Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web di ECMA.</span><span class="sxs-lookup"><span data-stu-id="a2472-754">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 <span data-ttu-id="a2472-755">Per il codice che illustra la risoluzione del token utilizzando il contesto generico (vale a dire, i parametri di tipo generico di tipo generico e/o del metodo generico in cui è incorporato il token) vedere il <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2472-755">For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-756">
            <paramref name="metadataToken" /> is not a token for a type or member in the scope of the current module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-756">
              <paramref name="metadataToken" /> is not a token for a type or member in the scope of the current module.</span>
          </span>
          <span data-ttu-id="a2472-757">-or-  <paramref name="metadataToken" /> is a <see langword="MethodSpec" /> or <see langword="TypeSpec" /> whose signature contains element type <see langword="var" /> (a type parameter of a generic type) or <see langword="mvar" /> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <paramref name="genericTypeArguments" /> and <paramref name="genericMethodArguments" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-757">-or-  <paramref name="metadataToken" /> is a <see langword="MethodSpec" /> or <see langword="TypeSpec" /> whose signature contains element type <see langword="var" /> (a type parameter of a generic type) or <see langword="mvar" /> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <paramref name="genericTypeArguments" /> and <paramref name="genericMethodArguments" />.</span>
          </span>
          <span data-ttu-id="a2472-758">-or-  <paramref name="metadataToken" /> identifies a property or event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-758">-or-  <paramref name="metadataToken" /> identifies a property or event.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2472-759">
            <paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-759">
              <paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodBase ResolveMethod (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodBase ResolveMethod(int32 metadataToken, class System.Type[] genericTypeArguments, class System.Type[] genericMethodArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveMethod(System.Int32,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveMethod (metadataToken As Integer, genericTypeArguments As Type(), genericMethodArguments As Type()) As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodBase ^ ResolveMethod(int metadataToken, cli::array &lt;Type ^&gt; ^ genericTypeArguments, cli::array &lt;Type ^&gt; ^ genericMethodArguments);" />
      <MemberSignature Language="F#" Value="override this.ResolveMethod : int * Type[] * Type[] -&gt; System.Reflection.MethodBase" Usage="moduleBuilder.ResolveMethod (metadataToken, genericTypeArguments, genericMethodArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" />
        <Parameter Name="genericTypeArguments" Type="System.Type[]" />
        <Parameter Name="genericMethodArguments" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="metadataToken">
          <span data-ttu-id="a2472-760">A metadata token that identifies a method or constructor in the module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-760">A metadata token that identifies a method or constructor in the module.</span>
          </span>
        </param>
        <param name="genericTypeArguments">
          <span data-ttu-id="a2472-761">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the type where the token is in scope, or <see langword="null" /> if that type is not generic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-761">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the type where the token is in scope, or <see langword="null" /> if that type is not generic.</span>
          </span>
        </param>
        <param name="genericMethodArguments">
          <span data-ttu-id="a2472-762">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the method where the token is in scope, or <see langword="null" /> if that method is not generic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-762">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the method where the token is in scope, or <see langword="null" /> if that method is not generic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-763">Returns the method or constructor identified by the specified metadata token, in the context defined by the specified generic type parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-763">Returns the method or constructor identified by the specified metadata token, in the context defined by the specified generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-764">A <see cref="T:System.Reflection.MethodBase" /> object representing the method that is identified by the specified metadata token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-764">A <see cref="T:System.Reflection.MethodBase" /> object representing the method that is identified by the specified metadata token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-765">Usare la <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> metodo sul tipo in cui `metadataToken` si trova nell'ambito per ottenere una matrice di argomenti di tipo generico per `genericTypeArguments`.</span><span class="sxs-lookup"><span data-stu-id="a2472-765">Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="a2472-766">Usare la <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> metodo al metodo in cui `metadataToken` si trova nell'ambito per ottenere una matrice di argomenti di tipo generico per `genericMethodArguments`.</span><span class="sxs-lookup"><span data-stu-id="a2472-766">Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericMethodArguments`.</span></span> <span data-ttu-id="a2472-767">È sempre sicura fornire gli argomenti, anche quando non sono necessari.</span><span class="sxs-lookup"><span data-stu-id="a2472-767">It is always safe to provide these arguments, even when they are not needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-768">Informazioni sui token di metadati sono disponibili nella documentazione di Common Language Infrastructure (CLI), in particolare "Partition II: metadati definizione e la semantica".</span><span class="sxs-lookup"><span data-stu-id="a2472-768">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="a2472-769">La documentazione è disponibile online; vedere [ECMA c# e Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) su MSDN e [Standard ECMA-335: Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web di ECMA.</span><span class="sxs-lookup"><span data-stu-id="a2472-769">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 <span data-ttu-id="a2472-770">Per il codice che illustra la risoluzione del token utilizzando il contesto generico (vale a dire, i parametri di tipo generico di tipo generico e/o del metodo generico in cui è incorporato il token) vedere il <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2472-770">For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-771">
            <paramref name="metadataToken" /> is not a token for a method or constructor in the scope of the current module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-771">
              <paramref name="metadataToken" /> is not a token for a method or constructor in the scope of the current module.</span>
          </span>
          <span data-ttu-id="a2472-772">-or-  <paramref name="metadataToken" /> is a <see langword="MethodSpec" /> whose signature contains element type <see langword="var" /> (a type parameter of a generic type) or <see langword="mvar" /> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <paramref name="genericTypeArguments" /> and <paramref name="genericMethodArguments" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-772">-or-  <paramref name="metadataToken" /> is a <see langword="MethodSpec" /> whose signature contains element type <see langword="var" /> (a type parameter of a generic type) or <see langword="mvar" /> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <paramref name="genericTypeArguments" /> and <paramref name="genericMethodArguments" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2472-773">
            <paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-773">
              <paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveSignature">
      <MemberSignature Language="C#" Value="public override byte[] ResolveSignature (int metadataToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] ResolveSignature(int32 metadataToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveSignature(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveSignature (metadataToken As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ ResolveSignature(int metadataToken);" />
      <MemberSignature Language="F#" Value="override this.ResolveSignature : int -&gt; byte[]" Usage="moduleBuilder.ResolveSignature metadataToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="metadataToken">
          <span data-ttu-id="a2472-774">A metadata token that identifies a signature in the module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-774">A metadata token that identifies a signature in the module.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-775">Returns the signature blob identified by a metadata token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-775">Returns the signature blob identified by a metadata token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-776">An array of bytes representing the signature blob.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-776">An array of bytes representing the signature blob.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a2472-777">Informazioni sui token di metadati e le firme sono disponibili nella documentazione di Common Language Infrastructure (CLI), in particolare "Partition II: metadati definizione e la semantica".</span><span class="sxs-lookup"><span data-stu-id="a2472-777">Information about metadata tokens and signatures can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="a2472-778">La documentazione è disponibile online; vedere [ECMA c# e Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) su MSDN e [Standard ECMA-335: Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web di ECMA.</span><span class="sxs-lookup"><span data-stu-id="a2472-778">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-779">
            <paramref name="metadataToken" /> is not a valid <see langword="MemberRef" />, <see langword="MethodDef" />, <see langword="TypeSpec" />, signature, or <see langword="FieldDef" /> token in the scope of the current module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-779">
              <paramref name="metadataToken" /> is not a valid <see langword="MemberRef" />, <see langword="MethodDef" />, <see langword="TypeSpec" />, signature, or <see langword="FieldDef" /> token in the scope of the current module.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2472-780">
            <paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-780">
              <paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveString">
      <MemberSignature Language="C#" Value="public override string ResolveString (int metadataToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ResolveString(int32 metadataToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveString (metadataToken As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ResolveString(int metadataToken);" />
      <MemberSignature Language="F#" Value="override this.ResolveString : int -&gt; string" Usage="moduleBuilder.ResolveString metadataToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="metadataToken">
          <span data-ttu-id="a2472-781">A metadata token that identifies a string in the string heap of the module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-781">A metadata token that identifies a string in the string heap of the module.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-782">Returns the string identified by the specified metadata token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-782">Returns the string identified by the specified metadata token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-783">A <see cref="T:System.String" /> containing a string value from the metadata string heap.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-783">A <see cref="T:System.String" /> containing a string value from the metadata string heap.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a2472-784">Informazioni sui token di metadati sono disponibili nella documentazione di Common Language Infrastructure (CLI), in particolare "Partition II: metadati definizione e la semantica".</span><span class="sxs-lookup"><span data-stu-id="a2472-784">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="a2472-785">La documentazione è disponibile online; vedere [ECMA c# e Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) su MSDN e [Standard ECMA-335: Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web di ECMA.</span><span class="sxs-lookup"><span data-stu-id="a2472-785">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-786">
            <paramref name="metadataToken" /> is not a token for a string in the scope of the current module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-786">
              <paramref name="metadataToken" /> is not a token for a string in the scope of the current module.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2472-787">
            <paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-787">
              <paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public override Type ResolveType (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type ResolveType(int32 metadataToken, class System.Type[] genericTypeArguments, class System.Type[] genericMethodArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveType(System.Int32,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveType (metadataToken As Integer, genericTypeArguments As Type(), genericMethodArguments As Type()) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ ResolveType(int metadataToken, cli::array &lt;Type ^&gt; ^ genericTypeArguments, cli::array &lt;Type ^&gt; ^ genericMethodArguments);" />
      <MemberSignature Language="F#" Value="override this.ResolveType : int * Type[] * Type[] -&gt; Type" Usage="moduleBuilder.ResolveType (metadataToken, genericTypeArguments, genericMethodArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" />
        <Parameter Name="genericTypeArguments" Type="System.Type[]" />
        <Parameter Name="genericMethodArguments" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="metadataToken">
          <span data-ttu-id="a2472-788">A metadata token that identifies a type in the module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-788">A metadata token that identifies a type in the module.</span>
          </span>
        </param>
        <param name="genericTypeArguments">
          <span data-ttu-id="a2472-789">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the type where the token is in scope, or <see langword="null" /> if that type is not generic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-789">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the type where the token is in scope, or <see langword="null" /> if that type is not generic.</span>
          </span>
        </param>
        <param name="genericMethodArguments">
          <span data-ttu-id="a2472-790">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the method where the token is in scope, or <see langword="null" /> if that method is not generic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-790">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the method where the token is in scope, or <see langword="null" /> if that method is not generic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-791">Returns the type identified by the specified metadata token, in the context defined by the specified generic type parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-791">Returns the type identified by the specified metadata token, in the context defined by the specified generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a2472-792">A <see cref="T:System.Type" /> object representing the type that is identified by the specified metadata token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-792">A <see cref="T:System.Type" /> object representing the type that is identified by the specified metadata token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-793">Usare la <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> metodo sul tipo in cui `metadataToken` si trova nell'ambito per ottenere una matrice di argomenti di tipo generico per `genericTypeArguments`.</span><span class="sxs-lookup"><span data-stu-id="a2472-793">Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="a2472-794">Usare la <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> metodo al metodo in cui `metadataToken` si trova nell'ambito per ottenere una matrice di argomenti di tipo generico per `genericTypeArguments`.</span><span class="sxs-lookup"><span data-stu-id="a2472-794">Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="a2472-795">È sempre sicura fornire gli argomenti, anche quando non sono necessari.</span><span class="sxs-lookup"><span data-stu-id="a2472-795">It is always safe to provide these arguments, even when they are not needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-796">Informazioni sui token di metadati sono disponibili nella documentazione di Common Language Infrastructure (CLI), in particolare "Partition II: metadati definizione e la semantica".</span><span class="sxs-lookup"><span data-stu-id="a2472-796">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="a2472-797">La documentazione è disponibile online; vedere [ECMA c# e Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) su MSDN e [Standard ECMA-335: Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web di ECMA.</span><span class="sxs-lookup"><span data-stu-id="a2472-797">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 <span data-ttu-id="a2472-798">Per il codice che illustra la risoluzione del token utilizzando il contesto generico (vale a dire, i parametri di tipo generico di tipo generico e/o del metodo generico in cui è incorporato il token) vedere il <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="a2472-798">For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2472-799">
            <paramref name="metadataToken" /> is not a token for a type in the scope of the current module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-799">
              <paramref name="metadataToken" /> is not a token for a type in the scope of the current module.</span>
          </span>
          <span data-ttu-id="a2472-800">-or-  <paramref name="metadataToken" /> is a <see langword="TypeSpec" /> whose signature contains element type <see langword="var" /> (a type parameter of a generic type) or <see langword="mvar" /> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <paramref name="genericTypeArguments" /> and <paramref name="genericMethodArguments" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-800">-or-  <paramref name="metadataToken" /> is a <see langword="TypeSpec" /> whose signature contains element type <see langword="var" /> (a type parameter of a generic type) or <see langword="mvar" /> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <paramref name="genericTypeArguments" /> and <paramref name="genericMethodArguments" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2472-801">
            <paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-801">
              <paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ScopeName">
      <MemberSignature Language="C#" Value="public override string ScopeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScopeName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.ScopeName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ScopeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ScopeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ScopeName : string" Usage="System.Reflection.Emit.ModuleBuilder.ScopeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a2472-802">Gets a string that represents the name of the dynamic module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-802">Gets a string that represents the name of the dynamic module.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a2472-803">Nome del modulo dinamico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-803">The name of the dynamic module.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a2472-804">Applies a custom attribute to this module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-804">Applies a custom attribute to this module.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.Emit.CustomAttributeBuilder customBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (customBuilder As CustomAttributeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::Emit::CustomAttributeBuilder ^ customBuilder);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.Emit.CustomAttributeBuilder -&gt; unit" Usage="moduleBuilder.SetCustomAttribute customBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
      </Parameters>
      <Docs>
        <param name="customBuilder">
          <span data-ttu-id="a2472-805">An instance of a helper class that specifies the custom attribute to apply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-805">An instance of a helper class that specifies the custom attribute to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-806">Applies a custom attribute to this module by using a custom attribute builder.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-806">Applies a custom attribute to this module by using a custom attribute builder.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a2472-807">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-807">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-808">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-808">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-809">
            <paramref name="customBuilder" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-809">
              <paramref name="customBuilder" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.ConstructorInfo con, unsigned int8[] binaryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (con As ConstructorInfo, binaryAttribute As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Byte&gt; ^ binaryAttribute);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.ConstructorInfo * byte[] -&gt; unit" Usage="moduleBuilder.SetCustomAttribute (con, binaryAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="binaryAttribute" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="con">
          <span data-ttu-id="a2472-810">The constructor for the custom attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-810">The constructor for the custom attribute.</span>
          </span>
        </param>
        <param name="binaryAttribute">
          <span data-ttu-id="a2472-811">A byte BLOB representing the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-811">A byte BLOB representing the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-812">Applies a custom attribute to this module by using a specified binary large object (BLOB) that represents the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-812">Applies a custom attribute to this module by using a specified binary large object (BLOB) that represents the attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-813">Per ulteriori informazioni sulla formattazione `binaryAttribute`, vedere la documentazione di Common Language Infrastructure (CLI), in particolare "Partition II: metadati definizione e la semantica".</span><span class="sxs-lookup"><span data-stu-id="a2472-813">For more information about how to format `binaryAttribute`, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="a2472-814">La documentazione è disponibile online; vedere [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) (ECMA C# e standard di Common Language Infrastructure) in MSDN e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web internazionale Ecma.</span><span class="sxs-lookup"><span data-stu-id="a2472-814">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-815">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-815">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-816">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-816">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-817">
            <paramref name="con" /> or <paramref name="binaryAttribute" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-817">
              <paramref name="con" /> or <paramref name="binaryAttribute" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetSymCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetSymCustomAttribute (string name, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSymCustomAttribute(string name, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.SetSymCustomAttribute(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSymCustomAttribute (name As String, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSymCustomAttribute(System::String ^ name, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.SetSymCustomAttribute : string * byte[] -&gt; unit" Usage="moduleBuilder.SetSymCustomAttribute (name, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a2472-818">The name of the custom attribute</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-818">The name of the custom attribute</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="a2472-819">An opaque binary large object (BLOB) of bytes that represents the value of the custom attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-819">An opaque binary large object (BLOB) of bytes that represents the value of the custom attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-820">This method does nothing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-820">This method does nothing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-821">Questo metodo non effettua alcuna operazione.</span><span class="sxs-lookup"><span data-stu-id="a2472-821">This method does nothing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-822">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-822">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-823">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-823">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-824">
            <paramref name="url" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-824">
              <paramref name="url" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetUserEntryPoint">
      <MemberSignature Language="C#" Value="public void SetUserEntryPoint (System.Reflection.MethodInfo entryPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetUserEntryPoint(class System.Reflection.MethodInfo entryPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.SetUserEntryPoint(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetUserEntryPoint (entryPoint As MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetUserEntryPoint(System::Reflection::MethodInfo ^ entryPoint);" />
      <MemberSignature Language="F#" Value="member this.SetUserEntryPoint : System.Reflection.MethodInfo -&gt; unit" Usage="moduleBuilder.SetUserEntryPoint entryPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryPoint" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="entryPoint">
          <span data-ttu-id="a2472-825">The user entry point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-825">The user entry point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-826">Sets the user entry point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-826">Sets the user entry point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-827">Il compilatore potrebbe generare uno stub di avvio prima di chiamare utente principale.</span><span class="sxs-lookup"><span data-stu-id="a2472-827">The compiler might generate a startup stub before calling user main.</span></span> <span data-ttu-id="a2472-828">Lo stub di avvio sarà il punto di ingresso.</span><span class="sxs-lookup"><span data-stu-id="a2472-828">The startup stub will be the entry point.</span></span> <span data-ttu-id="a2472-829">Mentre l'utente principale sarà il punto di ingresso utente in modo che non passi debugger al punto di ingresso del compilatore.</span><span class="sxs-lookup"><span data-stu-id="a2472-829">While the user main will be the user entry point so that debugger will not step into the compiler entry point.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2472-830">Inizia con il [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], questo membro non è più necessario <xref:System.Security.Permissions.ReflectionPermission> con il <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span><span class="sxs-lookup"><span data-stu-id="a2472-830">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a2472-831">(Vedere [problemi di sicurezza nella Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Per usare questa funzionalità, l'applicazione deve essere destinata a [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o versione successiva.</span><span class="sxs-lookup"><span data-stu-id="a2472-831">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2472-832">
            <paramref name="entryPoint" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-832">
              <paramref name="entryPoint" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2472-833">This method is called on a dynamic module that is not a debug module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-833">This method is called on a dynamic module that is not a debug module.</span>
          </span>
          <span data-ttu-id="a2472-834">-or-  <paramref name="entryPoint" /> is not contained in this dynamic module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-834">-or-  <paramref name="entryPoint" /> is not contained in this dynamic module.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _ModuleBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _ModuleBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_ModuleBuilder::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="a2472-835">Reserved for future use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-835">Reserved for future use.</span>
          </span>
          <span data-ttu-id="a2472-836">Must be IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-836">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="a2472-837">Passed-in array of names to be mapped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-837">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="a2472-838">Count of the names to be mapped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-838">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="a2472-839">The locale context in which to interpret the names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-839">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="a2472-840">Caller-allocated array which receives the IDs corresponding to the names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-840">Caller-allocated array which receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-841">For a description of this member, see <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-841">For a description of this member, see <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-842">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="a2472-842">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a2472-843">Per ulteriori informazioni su `IDispatch::GetIDsOfNames`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="a2472-843">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 <span data-ttu-id="a2472-844">Questo membro è un'implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a2472-844">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a2472-845">e può essere utilizzato solo quando si esegue il cast dell'istanza di <xref:System.Reflection.Emit.ModuleBuilder> su un'interfaccia <xref:System.Runtime.InteropServices._ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a2472-845">It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="a2472-846">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-846">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _ModuleBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _ModuleBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_ModuleBuilder::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="a2472-847">The type information to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-847">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="a2472-848">The locale identifier for the type information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-848">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="a2472-849">A pointer to the requested type information object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-849">A pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-850">For a description of this member, see <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-850">For a description of this member, see <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-851">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="a2472-851">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a2472-852">Per ulteriori informazioni su `IDispatch::GetTypeInfo`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="a2472-852">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 <span data-ttu-id="a2472-853">Questo membro è un'implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a2472-853">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a2472-854">e può essere utilizzato solo quando si esegue il cast dell'istanza di <xref:System.Reflection.Emit.ModuleBuilder> su un'interfaccia <xref:System.Runtime.InteropServices._ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a2472-854">It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="a2472-855">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-855">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _ModuleBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _ModuleBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_ModuleBuilder::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="a2472-856">The location that receives the number of type information interfaces provided by the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-856">The location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-857">For a description of this member, see <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(System.UInt32@)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-857">For a description of this member, see <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(System.UInt32@)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-858">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="a2472-858">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a2472-859">Per ulteriori informazioni su `IDispatch::GetTypeInfoCount`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="a2472-859">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 <span data-ttu-id="a2472-860">Questo membro è un'implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a2472-860">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a2472-861">e può essere utilizzato solo quando si esegue il cast dell'istanza di <xref:System.Reflection.Emit.ModuleBuilder> su un'interfaccia <xref:System.Runtime.InteropServices._ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a2472-861">It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="a2472-862">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-862">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ModuleBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _ModuleBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ModuleBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _ModuleBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ModuleBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_ModuleBuilder::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ModuleBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="a2472-863">The member ID.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-863">The member ID.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="a2472-864">Reserved for future use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-864">Reserved for future use.</span>
          </span>
          <span data-ttu-id="a2472-865">Must be IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-865">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="a2472-866">The locale context in which to interpret arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-866">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="a2472-867">Flags describing the context of the call.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-867">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="a2472-868">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-868">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="a2472-869">Pointer to the location where the result is to be stored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-869">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="a2472-870">Pointer to a structure that contains exception information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-870">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="a2472-871">The index of the first argument that has an error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-871">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2472-872">For a description of this member, see <see cref="M:System.Runtime.InteropServices._ModuleBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-872">For a description of this member, see <see cref="M:System.Runtime.InteropServices._ModuleBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2472-873">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="a2472-873">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a2472-874">Per ulteriori informazioni su `IDispatch::Invoke`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="a2472-874">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 <span data-ttu-id="a2472-875">Questo membro è un'implementazione esplicita di un membro di interfaccia.</span><span class="sxs-lookup"><span data-stu-id="a2472-875">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a2472-876">e può essere utilizzato solo quando si esegue il cast dell'istanza di <xref:System.Reflection.Emit.ModuleBuilder> su un'interfaccia <xref:System.Runtime.InteropServices._ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a2472-876">It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="a2472-877">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2472-877">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>