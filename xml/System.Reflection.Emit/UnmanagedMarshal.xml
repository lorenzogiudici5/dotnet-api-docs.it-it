<Type Name="UnmanagedMarshal" FullName="System.Reflection.Emit.UnmanagedMarshal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="46fc4e13279b8ca823d2162a58c8f9ff13114e65" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30469745" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UnmanagedMarshal" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit UnmanagedMarshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.UnmanagedMarshal" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UnmanagedMarshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnmanagedMarshal sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("An alternate API is available: Emit the MarshalAs custom attribute instead.")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta la classe che descrive come effettuare il marshalling di un campo da codice gestito a codice non gestito. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'esempio di codice illustra la soluzione alternativa per questo tipo.  
  
 Effettuare il marshalling è il processo di estrazione e creazione pacchetto parametri quindi chiamate di procedura remota possono verificarsi. Durante il marshalling, un campo può essere sottoposto a una conversione di formato quando il formato del tipo gestito è diverso dal formato del tipo non gestito corrispondente. È ad esempio effettuare il marshalling un `String` tipo BSTR non gestito. Alcune conversioni di formato vengono gestiti automaticamente dal runtime. Per eseguire l'override del comportamento predefinito, è necessario utilizzare la `UnmanagedMarshal` classe per definire la conversione del formato.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato il codice di sostituzione per obsoleta <xref:System.Reflection.Emit.UnmanagedMarshal> tipo. Nell'esempio viene generato un assembly a modulo singolo denominato `EmitMarshalAs.dll`, contenente un tipo denominato `Sample`. Il tipo ha un metodo denominato `Test`, con un parametro di tipo <xref:System.String>. L'esempio di codice si applica il <xref:System.Runtime.InteropServices.MarshalAsAttribute> con <xref:System.Runtime.InteropServices.UnmanagedType.BStr?displayProperty=nameWithType> al parametro.  
  
 È possibile utilizzare il [Ildasm.exe (Disassembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) per esaminare l'assembly generato e osservare che il parametro è contrassegnato `marshal(bstr)`.  
  
 [!code-cpp[UnmanagedMarshalObsolete#1](~/samples/snippets/cpp/VS_Snippets_CLR/UnmanagedMarshalObsolete/cpp/source.cpp#1)]
 [!code-csharp[UnmanagedMarshalObsolete#1](~/samples/snippets/csharp/VS_Snippets_CLR/UnmanagedMarshalObsolete/cs/source.cs#1)]
 [!code-vb[UnmanagedMarshalObsolete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UnmanagedMarshalObsolete/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Type" />
    <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
    <altmember cref="T:System.Guid" />
  </Docs>
  <Members>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.UnmanagedType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.UnmanagedType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As UnmanagedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::UnmanagedType BaseType { System::Runtime::InteropServices::UnmanagedType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.UnmanagedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un tipo di base non gestito. Questa proprietà è di sola lettura.</summary>
        <value>Oggetto <see langword="UnmanagedType" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Il tipo non gestito non è un <see langword="LPArray" /> o un <see langword="SafeArray" />.</exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineByValArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineByValArray (int elemCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineByValArray(int32 elemCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineByValArray(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineByValArray (elemCount As Integer) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineByValArray(int elemCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elemCount">Numero di elementi nella matrice di lunghezza fissa.</param>
        <summary>Specifica una matrice di lunghezza fissa (ByValArray) cui effettuare il marshalling nel codice non gestito.</summary>
        <returns>Oggetto <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `DefineByValArray` metodo non è un semplice marshalling nativo.  
  
 Mediante questi costruttori statici è possono eseguire solo i costrutti di marshalling non gestito.  
  
 Marshalling di una matrice è un processo più complesso del marshalling di un parametro di tipo integer. Membri della matrice vengono copiati in un ordine specifico in modo che l'altro lato possibile ricostruire esattamente la matrice.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'argomento non è un semplice tipo nativo.</exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineByValTStr">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineByValTStr (int elemCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineByValTStr(int32 elemCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineByValTStr (elemCount As Integer) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineByValTStr(int elemCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elemCount">Numero di elementi nel buffer a matrice fissa.</param>
        <summary>Specifica una stringa in un buffer a matrice fissa (ByValTStr) per effettuare il marshalling nel codice non gestito.</summary>
        <returns>Oggetto <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `DefineByValStr` metodo non è un semplice marshalling nativo.  
  
 Mediante questi costruttori statici è possono eseguire solo i costrutti di marshalling non gestito.  
  
 Marshalling di una matrice è un processo più complesso del marshalling di un parametro di tipo integer. Membri della matrice vengono copiati in un ordine specifico in modo che l'altro lato possibile ricostruire esattamente la matrice.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'argomento non è un semplice tipo nativo.</exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineLPArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineLPArray (System.Runtime.InteropServices.UnmanagedType elemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineLPArray(valuetype System.Runtime.InteropServices.UnmanagedType elemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineLPArray(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineLPArray (elemType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineLPArray(System::Runtime::InteropServices::UnmanagedType elemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="elemType">Tipo non gestito in cui effettuare il marshalling della matrice.</param>
        <summary>Specifica un <see langword="LPArray" /> per effettuare il marshalling nel codice non gestito. La lunghezza di un <see langword="LPArray" /> è determinata in fase di esecuzione dalle dimensioni della matrice corrente su cui è stato effettuato il marshalling.</summary>
        <returns>Oggetto <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `DefineLPArray` metodo non è un semplice marshalling nativo.  
  
 Mediante questi costruttori statici è possono eseguire solo i costrutti di marshalling non gestito.  
  
 Marshalling di una matrice è un processo più complesso del marshalling di un parametro di tipo integer. Membri della matrice vengono copiati in un ordine specifico in modo che l'altro lato possibile ricostruire esattamente la matrice.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'argomento non è un semplice tipo nativo.</exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineSafeArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineSafeArray (System.Runtime.InteropServices.UnmanagedType elemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineSafeArray(valuetype System.Runtime.InteropServices.UnmanagedType elemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineSafeArray (elemType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineSafeArray(System::Runtime::InteropServices::UnmanagedType elemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="elemType">Tipo di base oppure oggetto <see langword="UnmanagedType" /> di ciascun elemento della matrice.</param>
        <summary>Specifica un <see langword="SafeArray" /> per effettuare il marshalling nel codice non gestito.</summary>
        <returns>Oggetto <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `DefineSafeArray` metodo non è un semplice marshalling nativo.  
  
 Mediante questi costruttori statici è possono eseguire solo i costrutti di marshalling non gestito.  
  
 Marshalling di una matrice è un processo più complesso del marshalling di un parametro di tipo integer. Membri della matrice vengono copiati in un ordine specifico in modo che l'altro lato possibile ricostruire esattamente la matrice.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'argomento non è un semplice tipo nativo.</exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineUnmanagedMarshal">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineUnmanagedMarshal (System.Runtime.InteropServices.UnmanagedType unmanagedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineUnmanagedMarshal(valuetype System.Runtime.InteropServices.UnmanagedType unmanagedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineUnmanagedMarshal(System::Runtime::InteropServices::UnmanagedType unmanagedType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="unmanagedType">Tipo non gestito nel quale effettuare il marshalling del tipo.</param>
        <summary>Specifica un dato tipo cui effettuare il marshalling nel codice non gestito.</summary>
        <returns>Oggetto <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Runtime.InteropServices.UnmanagedType> passato a questo metodo deve essere un semplice tipo nativo. È possibile utilizzare alcuno dei seguenti valori: <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.SafeArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType>, o <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType>.  
  
 Questo metodo è possono eseguire solo i costrutti di marshalling non gestito.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'argomento non è un semplice tipo nativo.</exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="ElementCount">
      <MemberSignature Language="C#" Value="public int ElementCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementCount" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.ElementCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un elemento numerico. Questa proprietà è di sola lettura.</summary>
        <value>Integer che indica il numero di elementi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È presente un `ElementCount` solo se è presente un `NativeTypeFixedArray`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'argomento non è un numero di elementi non gestiti.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnmanagedType">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.UnmanagedType GetUnmanagedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.UnmanagedType GetUnmanagedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GetUnmanagedType As UnmanagedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::UnmanagedType GetUnmanagedType { System::Runtime::InteropServices::UnmanagedType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.UnmanagedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica un tipo non gestito. Questa proprietà è di sola lettura.</summary>
        <value>Oggetto <see cref="T:System.Runtime.InteropServices.UnmanagedType" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `GetUnmanagedType` proprietà è una funzione di accesso per il tipo nativo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="IIDGuid">
      <MemberSignature Language="C#" Value="public Guid IIDGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid IIDGuid" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.IIDGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IIDGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid IIDGuid { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un GUID. Questa proprietà è di sola lettura.</summary>
        <value>Un oggetto <see cref="T:System.Guid" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà restituisce sempre GUID. Empty. Questa proprietà potrebbe essere rimossa nelle versioni future.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'argomento non è un gestore del marshalling personalizzato.</exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Guid" />
      </Docs>
    </Member>
  </Members>
</Type>