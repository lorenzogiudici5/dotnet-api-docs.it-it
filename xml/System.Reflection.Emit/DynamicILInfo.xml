<Type Name="DynamicILInfo" FullName="System.Reflection.Emit.DynamicILInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="027718ba7331018405b1f33c2a7cd8dbe961edfe" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30470135" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicILInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicILInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.DynamicILInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicILInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicILInfo" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="659a2-101">Fornisce supporto per utilizzare metodi alternativi per generare codice MSIL (Microsoft Intermediate Language) e metadati per un metodo dinamico, inclusi metodi per la creazione di token e per l'inserimento di codice, gestione delle eccezioni e blob di firma per le variabili locali.</span>
      <span class="sxs-lookup">
        <span data-stu-id="659a2-101">Provides support for alternative ways to generate the Microsoft intermediate language (MSIL) and metadata for a dynamic method, including methods for creating tokens and for inserting the code, exception handling, and local variable signature blobs.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659a2-102">Il <xref:System.Reflection.Emit.DynamicILInfo> classe consente agli sviluppatori di scrivere generatori di codice MSIL anziché <xref:System.Reflection.Emit.ILGenerator>.</span><span class="sxs-lookup"><span data-stu-id="659a2-102">The <xref:System.Reflection.Emit.DynamicILInfo> class allows developers to write their own MSIL generators instead of using <xref:System.Reflection.Emit.ILGenerator>.</span></span>  
  
 <span data-ttu-id="659a2-103">Per creare istanze di altri tipi, chiamare i metodi e così via, il codice MSIL generato deve includere i token per le entità.</span><span class="sxs-lookup"><span data-stu-id="659a2-103">To create instances of other types, call methods, and so on, the MSIL you generate must include tokens for those entities.</span></span> <span data-ttu-id="659a2-104">Il <xref:System.Reflection.Emit.DynamicILInfo> classe fornisce numerosi overload del <xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%2A> (metodo), che restituiscono token validi nell'ambito dell'oggetto corrente <xref:System.Reflection.Emit.DynamicILInfo>.</span><span class="sxs-lookup"><span data-stu-id="659a2-104">The <xref:System.Reflection.Emit.DynamicILInfo> class provides several overloads of the <xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%2A> method, which return tokens valid in the scope of the current <xref:System.Reflection.Emit.DynamicILInfo>.</span></span> <span data-ttu-id="659a2-105">Ad esempio, se è necessario chiamare un overload del <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> (metodo), è possibile ottenere un <xref:System.RuntimeMethodHandle> per l'overload e passarlo al <xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%2A> metodo per ottenere un token da incorporare nel codice MSIL.</span><span class="sxs-lookup"><span data-stu-id="659a2-105">For example, if you need to call an overload of the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method, you can obtain a <xref:System.RuntimeMethodHandle> for that overload and pass it to the <xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%2A> method to obtain a token to embed in your MSIL.</span></span>  
  
 <span data-ttu-id="659a2-106">Dopo aver creato <xref:System.Byte> array per la firma della variabile locale, eccezioni e il corpo di codice, è possibile utilizzare il <xref:System.Reflection.Emit.DynamicILInfo.SetCode%2A>, <xref:System.Reflection.Emit.DynamicILInfo.SetExceptions%2A>, e <xref:System.Reflection.Emit.DynamicILInfo.SetLocalSignature%2A> metodi per inserirli nel <xref:System.Reflection.Emit.DynamicMethod> associato il <xref:System.Reflection.Emit.DynamicILInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="659a2-106">Once you have created <xref:System.Byte> arrays for your local variable signature, exceptions, and code body, you can use the <xref:System.Reflection.Emit.DynamicILInfo.SetCode%2A>, <xref:System.Reflection.Emit.DynamicILInfo.SetExceptions%2A>, and <xref:System.Reflection.Emit.DynamicILInfo.SetLocalSignature%2A> methods to insert them into the <xref:System.Reflection.Emit.DynamicMethod> associated with your <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span>  
  
 <span data-ttu-id="659a2-107">La generazione di metadati e codice MSIL personalizzati richiede una certa familiarità con la documentazione di Common Language Infrastructure (CLI), in particolare "Partition II: metadati definizione e la semantica" e "Partizione III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="659a2-107">Generating your own metadata and MSIL requires familiarity with the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="659a2-108">La documentazione è disponibile online; vedere [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) (ECMA C# e standard di Common Language Infrastructure) in MSDN e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web internazionale Ecma.</span><span class="sxs-lookup"><span data-stu-id="659a2-108">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="659a2-109">Non utilizzare <xref:System.Reflection.Emit.DynamicILInfo> per generare il codice che crea un delegato a un altro metodo dinamico chiamando direttamente il costruttore di delegato.</span><span class="sxs-lookup"><span data-stu-id="659a2-109">Do not use <xref:System.Reflection.Emit.DynamicILInfo> to generate code that creates a delegate to another dynamic method by calling the delegate constructor directly.</span></span> <span data-ttu-id="659a2-110">Utilizzare invece il <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> metodo per creare il delegato.</span><span class="sxs-lookup"><span data-stu-id="659a2-110">Instead, use the <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> method to create the delegate.</span></span> <span data-ttu-id="659a2-111">Un delegato che viene creato con il costruttore di delegato non dispone di un riferimento al metodo dinamico di destinazione.</span><span class="sxs-lookup"><span data-stu-id="659a2-111">A delegate that is created with the delegate constructor does not have a reference to the target dynamic method.</span></span> <span data-ttu-id="659a2-112">Il metodo dinamico può essere recuperato tramite garbage collection, mentre il delegato è ancora in uso.</span><span class="sxs-lookup"><span data-stu-id="659a2-112">The dynamic method might be reclaimed by garbage collection while the delegate is still in use.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DynamicMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.DynamicMethod DynamicMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Emit.DynamicMethod DynamicMethod" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.DynamicILInfo.DynamicMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMethod As DynamicMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Emit::DynamicMethod ^ DynamicMethod { System::Reflection::Emit::DynamicMethod ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.DynamicMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="659a2-113">Ottiene il metodo dinamico il cui corpo viene generato dall'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-113">Gets the dynamic method whose body is generated by the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="659a2-114">Oggetto <see cref="T:System.Reflection.Emit.DynamicMethod" /> che rappresenta il metodo dinamico per il quale l'oggetto <see cref="T:System.Reflection.Emit.DynamicILInfo" /> corrente genera il codice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-114">A <see cref="T:System.Reflection.Emit.DynamicMethod" /> object representing the dynamic method for which the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object is generating code.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659a2-115">Oggetto <xref:System.Reflection.Emit.DynamicILInfo> oggetto è sempre associato a un metodo dinamico.</span><span class="sxs-lookup"><span data-stu-id="659a2-115">A <xref:System.Reflection.Emit.DynamicILInfo> object is always associated with a dynamic method.</span></span> <span data-ttu-id="659a2-116">Lo scopo del <xref:System.Reflection.Emit.DynamicILInfo> classe consiste nel fornire un altro modo per inserire il flusso MSIL, gestione delle eccezioni e firma della variabile locale in un metodo dinamico, per gli sviluppatori che desiderano generano codice MSIL senza utilizzare la <xref:System.Reflection.Emit.ILGenerator> classe.</span><span class="sxs-lookup"><span data-stu-id="659a2-116">The purpose of the <xref:System.Reflection.Emit.DynamicILInfo> class is to provide another way of inserting the MSIL stream, exception handling, and local variable signature into a dynamic method, for developers who want to generate MSIL without using the <xref:System.Reflection.Emit.ILGenerator> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTokenFor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="659a2-117">Ottiene un token, valido nell'ambito della classe <see cref="T:System.Reflection.Emit.DynamicILInfo" /> corrente, che rappresenta una stringa, un campo, un metodo, un tipo o una firma nel flusso MSIL per il metodo dinamico associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-117">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a string, field, method, type, or signature in the MSIL stream for the associated dynamic method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (signature As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="signature">
          <span data-ttu-id="659a2-118">Matrice che contiene la firma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-118">An array that contains the signature.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="659a2-119">Ottiene un token, valido nell'ambito della classe <see cref="T:System.Reflection.Emit.DynamicILInfo" /> corrente, che rappresenta la firma per il metodo dinamico associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-119">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing the signature for the associated dynamic method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="659a2-120">Un token può essere incorporato nei metadati e nel flusso MSIL per il metodo dinamico associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-120">A token that can be embedded in the metadata and the MSIL stream for the associated dynamic method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659a2-121">Per informazioni sui blob di firma, vedere la documentazione di Common Language Infrastructure (CLI), in particolare "partizione II: metadati definizione e la semantica".</span><span class="sxs-lookup"><span data-stu-id="659a2-121">For information on signature blobs, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="659a2-122">La documentazione è disponibile online; vedere [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) (ECMA C# e standard di Common Language Infrastructure) in MSDN e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web internazionale Ecma.</span><span class="sxs-lookup"><span data-stu-id="659a2-122">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (System.Reflection.Emit.DynamicMethod method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(class System.Reflection.Emit.DynamicMethod method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.Reflection.Emit.DynamicMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (method As DynamicMethod) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(System::Reflection::Emit::DynamicMethod ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.Emit.DynamicMethod" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="659a2-123">Metodo dinamico da chiamare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-123">The dynamic method to call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="659a2-124">Ottiene un token, valido nell'ambito della classe <see cref="T:System.Reflection.Emit.DynamicILInfo" /> corrente, che rappresenta un metodo dinamico da chiamare dal metodo associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-124">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a dynamic method to be called from the associated method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="659a2-125">Un token può essere incorporato nel flusso MSIL per il metodo dinamico associato, come destinazione di un'istruzione MSIL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-125">A token that can be embedded in the MSIL stream for the associated dynamic method, as the target of an MSIL instruction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659a2-126">Il token restituito dall'overload di questo metodo consente di chiamare un metodo dinamico dal metodo dinamico associato all'oggetto corrente <xref:System.Reflection.Emit.DynamicILInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="659a2-126">The token returned by this method overload allows you to call a dynamic method from the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="659a2-127">Per chiamare il metodo dinamico associato in modo ricorsivo, passare il valore della <xref:System.Reflection.Emit.DynamicILInfo.DynamicMethod%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="659a2-127">To call the associated dynamic method recursively, pass the value of the <xref:System.Reflection.Emit.DynamicILInfo.DynamicMethod%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (RuntimeFieldHandle field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(valuetype System.RuntimeFieldHandle field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.RuntimeFieldHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (field As RuntimeFieldHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(RuntimeFieldHandle field);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.RuntimeFieldHandle" />
      </Parameters>
      <Docs>
        <param name="field">
          <span data-ttu-id="659a2-128">Campo al quale accedere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-128">The field to be accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="659a2-129">Ottiene un token, valido nell'ambito della classe <see cref="T:System.Reflection.Emit.DynamicILInfo" /> corrente, che rappresenta un campo a cui accedere dal metodo dinamico associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-129">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a field to be accessed from the associated dynamic method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="659a2-130">Token che può essere utilizzato come operando di un'istruzione MSIL che accede ai campi nell'ambito dell'oggetto <see cref="T:System.Reflection.Emit.DynamicILInfo" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-130">A token that can be used as the operand of an MSIL instruction that accesses fields, in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659a2-131">È necessario ottenere un token per qualsiasi campo che si accederà dal metodo dinamico associato all'oggetto corrente <xref:System.Reflection.Emit.DynamicILInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="659a2-131">You must obtain a token for any field that will be accessed by the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="659a2-132">Utilizzare il <xref:System.Type.GetField%2A?displayProperty=nameWithType> metodo per ottenere un <xref:System.Reflection.FieldInfo> per il campo che si desidera accedere, quindi utilizzare il <xref:System.Reflection.FieldInfo.FieldHandle%2A> proprietà da ottenere il <xref:System.RuntimeFieldHandle>.</span><span class="sxs-lookup"><span data-stu-id="659a2-132">Use the <xref:System.Type.GetField%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.FieldInfo> for the field you want to access, then use the <xref:System.Reflection.FieldInfo.FieldHandle%2A> property to get the <xref:System.RuntimeFieldHandle>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (RuntimeMethodHandle method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(valuetype System.RuntimeMethodHandle method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.RuntimeMethodHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (method As RuntimeMethodHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(RuntimeMethodHandle method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.RuntimeMethodHandle" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="659a2-133">Metodo al quale accedere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-133">The method to be accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="659a2-134">Ottiene un token, valido nell'ambito della classe <see cref="T:System.Reflection.Emit.DynamicILInfo" /> corrente, che rappresenta un metodo dinamico a cui accedere dal metodo dinamico associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-134">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a method to be accessed from the associated dynamic method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="659a2-135">Token che può essere utilizzato come operando di un'istruzione MSIL che accede ai metodi, ad esempio <see cref="F:System.Reflection.Emit.OpCodes.Call" /> o <see cref="F:System.Reflection.Emit.OpCodes.Ldtoken" />, nell'ambito dell'oggetto <see cref="T:System.Reflection.Emit.DynamicILInfo" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-135">A token that can be used as the operand of an MSIL instruction that accesses methods, such as <see cref="F:System.Reflection.Emit.OpCodes.Call" /> or <see cref="F:System.Reflection.Emit.OpCodes.Ldtoken" />, in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659a2-136">È necessario ottenere un token per tutti i metodi accessibili dal metodo dinamico associato all'oggetto corrente <xref:System.Reflection.Emit.DynamicILInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="659a2-136">You must obtain a token for any method that will be accessed by the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="659a2-137">Utilizzare il <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> metodo per ottenere un <xref:System.Reflection.MethodInfo> per il metodo che si desidera accedere e quindi utilizzare il <xref:System.Reflection.MethodBase.MethodHandle%2A> proprietà da ottenere il <xref:System.RuntimeMethodHandle>.</span><span class="sxs-lookup"><span data-stu-id="659a2-137">Use the <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.MethodInfo> for the method you want to access, and then use the <xref:System.Reflection.MethodBase.MethodHandle%2A> property to get the <xref:System.RuntimeMethodHandle>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="659a2-138">Per un metodo che appartiene a un tipo generico, utilizzare il <xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%28System.RuntimeMethodHandle%2CSystem.RuntimeTypeHandle%29> l'overload di metodo e specificare un <xref:System.RuntimeTypeHandle> per il tipo generico.</span><span class="sxs-lookup"><span data-stu-id="659a2-138">For a method that belongs to a generic type, use the <xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%28System.RuntimeMethodHandle%2CSystem.RuntimeTypeHandle%29> method overload and specify a <xref:System.RuntimeTypeHandle> for the generic type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (RuntimeTypeHandle type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(valuetype System.RuntimeTypeHandle type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.RuntimeTypeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (type As RuntimeTypeHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(RuntimeTypeHandle type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.RuntimeTypeHandle" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="659a2-139">Tipo da utilizzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-139">The type to be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="659a2-140">Ottiene un token, valido nell'ambito della classe <see cref="T:System.Reflection.Emit.DynamicILInfo" /> corrente, che rappresenta un tipo da utilizzare nel metodo dinamico associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-140">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a type to be used in the associated dynamic method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="659a2-141">Token che può essere utilizzato come operando di un'istruzione MSIL che richiede un tipo nell'ambito dell'oggetto <see cref="T:System.Reflection.Emit.DynamicILInfo" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-141">A token that can be used as the operand of an MSIL instruction that requires a type, in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659a2-142">Il token restituito dall'overload di questo metodo consente di definire un tipo di variabile locale e generare codice MSIL per creare un'istanza di un tipo nel metodo dinamico associato all'oggetto corrente <xref:System.Reflection.Emit.DynamicILInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="659a2-142">The token returned by this method overload allows you to define a local variable type, and emit MSIL to create an instance of a type in the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span>  
  
 <span data-ttu-id="659a2-143">Per ottenere un <xref:System.RuntimeTypeHandle> che rappresenta un tipo, utilizzare il <xref:System.Type.TypeHandle%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="659a2-143">To get a <xref:System.RuntimeTypeHandle> representing a type, use the <xref:System.Type.TypeHandle%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (string literal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(string literal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (literal As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(System::String ^ literal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="literal" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="literal">
          <span data-ttu-id="659a2-144">Stringa da utilizzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-144">The string to be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="659a2-145">Ottiene un token, valido nell'ambito della classe <see cref="T:System.Reflection.Emit.DynamicILInfo" /> corrente, che rappresenta una stringa letterale da utilizzare nel metodo dinamico associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-145">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a string literal to be used in the associated dynamic method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="659a2-146">Token che può essere utilizzato come operando di un'istruzione MSIL che richiede una stringa nell'ambito dell'oggetto <see cref="T:System.Reflection.Emit.DynamicILInfo" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-146">A token that can be used as the operand of an MSIL instruction that requires a string, in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (RuntimeFieldHandle field, RuntimeTypeHandle contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(valuetype System.RuntimeFieldHandle field, valuetype System.RuntimeTypeHandle contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.RuntimeFieldHandle,System.RuntimeTypeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (field As RuntimeFieldHandle, contextType As RuntimeTypeHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(RuntimeFieldHandle field, RuntimeTypeHandle contextType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.RuntimeFieldHandle" />
        <Parameter Name="contextType" Type="System.RuntimeTypeHandle" />
      </Parameters>
      <Docs>
        <param name="field">
          <span data-ttu-id="659a2-147">Campo al quale accedere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-147">The field to be accessed.</span>
          </span>
        </param>
        <param name="contextType">
          <span data-ttu-id="659a2-148">Tipo generico a cui appartiene il campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-148">The generic type the field belongs to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="659a2-149">Ottiene un token, valido nell'ambito della classe <see cref="T:System.Reflection.Emit.DynamicILInfo" /> corrente, che rappresenta un campo a cui accedere dal metodo dinamico associato; il campo si trova sul tipo generico specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-149">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a field to be accessed from the associated dynamic method; the field is on the specified generic type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="659a2-150">Token che può essere utilizzato come operando di un'istruzione MSIL che accede ai campi nell'ambito dell'oggetto <see cref="T:System.Reflection.Emit.DynamicILInfo" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-150">A token that can be used as the operand of an MSIL instruction that accesses fields in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659a2-151">È necessario ottenere un token per qualsiasi campo che si accederà dal metodo dinamico associato all'oggetto corrente <xref:System.Reflection.Emit.DynamicILInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="659a2-151">You must obtain a token for any field that will be accessed by the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="659a2-152">Utilizzare il <xref:System.Type.GetField%2A?displayProperty=nameWithType> metodo per ottenere un <xref:System.Reflection.FieldInfo> per il campo che si desidera accedere e quindi utilizzare il <xref:System.Reflection.FieldInfo.FieldHandle%2A> proprietà da ottenere il <xref:System.RuntimeFieldHandle>.</span><span class="sxs-lookup"><span data-stu-id="659a2-152">Use the <xref:System.Type.GetField%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.FieldInfo> for the field you want to access, and then use the <xref:System.Reflection.FieldInfo.FieldHandle%2A> property to get the <xref:System.RuntimeFieldHandle>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (RuntimeMethodHandle method, RuntimeTypeHandle contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(valuetype System.RuntimeMethodHandle method, valuetype System.RuntimeTypeHandle contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (method As RuntimeMethodHandle, contextType As RuntimeTypeHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(RuntimeMethodHandle method, RuntimeTypeHandle contextType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.RuntimeMethodHandle" />
        <Parameter Name="contextType" Type="System.RuntimeTypeHandle" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="659a2-153">Metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-153">The method.</span>
          </span>
        </param>
        <param name="contextType">
          <span data-ttu-id="659a2-154">Il tipo generico a cui appartiene il metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-154">The generic type the method belongs to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="659a2-155">Ottiene un token, valido nell'ambito della classe <see cref="T:System.Reflection.Emit.DynamicILInfo" /> corrente, che rappresenta un metodo in un tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-155">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a method on a generic type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="659a2-156">Token che può essere utilizzato come operando di un'istruzione MSIL che accede ai metodi, ad esempio <see cref="F:System.Reflection.Emit.OpCodes.Call" /> o <see cref="F:System.Reflection.Emit.OpCodes.Ldtoken" />, nell'ambito dell'oggetto <see cref="T:System.Reflection.Emit.DynamicILInfo" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-156">A token that can be used as the operand of an MSIL instruction that accesses methods, such as <see cref="F:System.Reflection.Emit.OpCodes.Call" /> or <see cref="F:System.Reflection.Emit.OpCodes.Ldtoken" />, in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659a2-157">È necessario ottenere un token per qualsiasi metodo che verrà chiamato dal metodo dinamico associato all'oggetto corrente <xref:System.Reflection.Emit.DynamicILInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="659a2-157">You must obtain a token for any method that will be called by the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="659a2-158">Utilizzare il <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> metodo per ottenere un <xref:System.Reflection.MethodInfo> per il metodo da chiamare e quindi utilizzare il <xref:System.Reflection.MethodBase.MethodHandle%2A> proprietà da ottenere il <xref:System.RuntimeMethodHandle>.</span><span class="sxs-lookup"><span data-stu-id="659a2-158">Use the <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.MethodInfo> for the method you want to call, and then use the <xref:System.Reflection.MethodBase.MethodHandle%2A> property to get the <xref:System.RuntimeMethodHandle>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCode">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="659a2-159">Imposta il corpo del codice del metodo dinamico associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-159">Sets the code body of the associated dynamic method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCode">
      <MemberSignature Language="C#" Value="public void SetCode (byte[] code, int maxStackSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCode(unsigned int8[] code, int32 maxStackSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetCode(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCode (code As Byte(), maxStackSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCode(cli::array &lt;System::Byte&gt; ^ code, int maxStackSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Byte[]" />
        <Parameter Name="maxStackSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="code">
          <span data-ttu-id="659a2-160">Matrice contenente il flusso MSIL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-160">An array that contains the MSIL stream.</span>
          </span>
        </param>
        <param name="maxStackSize">
          <span data-ttu-id="659a2-161">Numero massimo di elementi nello stack di operandi durante l'esecuzione del metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-161">The maximum number of items on the operand stack when the method is executing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="659a2-162">Imposta il corpo del codice del metodo dinamico associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-162">Sets the code body of the associated dynamic method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659a2-163">Viene eseguito alcun controllo di validità del flusso MSIL.</span><span class="sxs-lookup"><span data-stu-id="659a2-163">No validity checks are performed on the MSIL stream.</span></span>  
  
 <span data-ttu-id="659a2-164">Chiamare questo metodo una seconda volta sostituisce il primo flusso MSIL con il secondo.</span><span class="sxs-lookup"><span data-stu-id="659a2-164">Calling this method a second time replaces the first MSIL stream with the second.</span></span>  
  
 <span data-ttu-id="659a2-165">La generazione di metadati e codice MSIL personalizzati richiede una certa familiarità con la documentazione di Common Language Infrastructure (CLI), in particolare "Partition II: metadati definizione e la semantica" e "Partizione III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="659a2-165">Generating your own metadata and MSIL requires familiarity with the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="659a2-166">La documentazione è disponibile online; vedere [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) (ECMA C# e standard di Common Language Infrastructure) in MSDN e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web internazionale Ecma.</span><span class="sxs-lookup"><span data-stu-id="659a2-166">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCode">
      <MemberSignature Language="C#" Value="public void SetCode (byte* code, int codeSize, int maxStackSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCode(unsigned int8* code, int32 codeSize, int32 maxStackSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetCode(System.Byte*,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCode(System::Byte* code, int codeSize, int maxStackSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Byte*" />
        <Parameter Name="codeSize" Type="System.Int32" />
        <Parameter Name="maxStackSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="code">
          <span data-ttu-id="659a2-167">Puntatore a una matrice di byte contenente il flusso MSIL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-167">A pointer to a byte array containing the MSIL stream.</span>
          </span>
        </param>
        <param name="codeSize">
          <span data-ttu-id="659a2-168">Numero di byte nel flusso MSIL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-168">The number of bytes in the MSIL stream.</span>
          </span>
        </param>
        <param name="maxStackSize">
          <span data-ttu-id="659a2-169">Numero massimo di elementi nello stack di operandi durante l'esecuzione del metodo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-169">The maximum number of items on the operand stack when the method is executing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="659a2-170">Imposta il corpo del codice del metodo dinamico associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-170">Sets the code body of the associated dynamic method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659a2-171">Viene eseguito alcun controllo di validità del flusso MSIL.</span><span class="sxs-lookup"><span data-stu-id="659a2-171">No validity checks are performed on the MSIL stream.</span></span>  
  
 <span data-ttu-id="659a2-172">Chiamare questo metodo una seconda volta sostituisce il primo flusso MSIL con il secondo.</span><span class="sxs-lookup"><span data-stu-id="659a2-172">Calling this method a second time replaces the first MSIL stream with the second.</span></span>  
  
 <span data-ttu-id="659a2-173">La generazione di metadati e codice MSIL personalizzati richiede una certa familiarità con la documentazione di Common Language Infrastructure (CLI), in particolare "Partition II: metadati definizione semantica e" e "partizione III: Set di istruzioni CIL."</span><span class="sxs-lookup"><span data-stu-id="659a2-173">Generating your own metadata and MSIL requires familiarity with the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set."</span></span> <span data-ttu-id="659a2-174">La documentazione è disponibile online; vedere [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) (ECMA C# e standard di Common Language Infrastructure) in MSDN e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web internazionale Ecma.</span><span class="sxs-lookup"><span data-stu-id="659a2-174">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Reflection.Emit.DynamicILInfo.SetCode(System.Byte[],System.Int32)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="659a2-175">
            <paramref name="code" /> è <see langword="null" /> e <paramref name="codeSize" /> è maggiore di 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-175">
              <paramref name="code" /> is <see langword="null" /> and <paramref name="codeSize" /> is greater than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="659a2-176">
            <paramref name="codeSize" /> è minore di 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-176">
              <paramref name="codeSize" /> is less than 0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="659a2-177">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-177">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="659a2-178">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-178">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetExceptions">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="659a2-179">Imposta i metadati delle eccezioni del metodo dinamico associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-179">Sets the exception metadata for the associated dynamic method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetExceptions">
      <MemberSignature Language="C#" Value="public void SetExceptions (byte[] exceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExceptions(unsigned int8[] exceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetExceptions(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetExceptions (exceptions As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetExceptions(cli::array &lt;System::Byte&gt; ^ exceptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptions" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="exceptions">
          <span data-ttu-id="659a2-180">Matrice contenente i metadati delle eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-180">An array that contains the exception metadata.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="659a2-181">Imposta i metadati delle eccezioni del metodo dinamico associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-181">Sets the exception metadata for the associated dynamic method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659a2-182">I metadati di eccezione per un metodo definiscono la posizione e le dimensioni di tutti i `try`, `catch`, `finally`, filtro e blocchi di errori.</span><span class="sxs-lookup"><span data-stu-id="659a2-182">The exception metadata for a method defines the location and size of all `try`, `catch`, `finally`, filter, and fault blocks.</span></span> <span data-ttu-id="659a2-183">Per informazioni sul layout dei metadati, vedere la documentazione di Common Language Infrastructure (CLI), in particolare "partizione II: metadati definizione e la semantica".</span><span class="sxs-lookup"><span data-stu-id="659a2-183">For information on the layout of this metadata, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="659a2-184">La documentazione è disponibile online; vedere [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) (ECMA C# e standard di Common Language Infrastructure) in MSDN e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web internazionale Ecma.</span><span class="sxs-lookup"><span data-stu-id="659a2-184">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetExceptions">
      <MemberSignature Language="C#" Value="public void SetExceptions (byte* exceptions, int exceptionsSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExceptions(unsigned int8* exceptions, int32 exceptionsSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetExceptions(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetExceptions(System::Byte* exceptions, int exceptionsSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptions" Type="System.Byte*" />
        <Parameter Name="exceptionsSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="exceptions">
          <span data-ttu-id="659a2-185">Puntatore a una matrice di byte contenente i metadati delle eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-185">A pointer to a byte array containing the exception metadata.</span>
          </span>
        </param>
        <param name="exceptionsSize">
          <span data-ttu-id="659a2-186">Numero di byte dei metadati delle eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-186">The number of bytes of exception metadata.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="659a2-187">Imposta i metadati delle eccezioni del metodo dinamico associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-187">Sets the exception metadata for the associated dynamic method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659a2-188">I metadati di eccezione per un metodo definiscono la posizione e le dimensioni di tutti i `try`, `catch`, `finally`, filtro e blocchi di errori.</span><span class="sxs-lookup"><span data-stu-id="659a2-188">The exception metadata for a method defines the location and size of all `try`, `catch`, `finally`, filter, and fault blocks.</span></span> <span data-ttu-id="659a2-189">Per informazioni sul layout dei metadati, vedere la documentazione di Common Language Infrastructure (CLI), in particolare "Partition II: metadati definizione e la semantica" e "Partizione III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="659a2-189">For information on the layout of this metadata, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="659a2-190">La documentazione è disponibile online; vedere [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) (ECMA C# e standard di Common Language Infrastructure) in MSDN e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web internazionale Ecma.</span><span class="sxs-lookup"><span data-stu-id="659a2-190">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Reflection.Emit.DynamicILInfo.SetExceptions(System.Byte[])" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="659a2-191">
            <paramref name="exceptions" /> è <see langword="null" /> e <paramref name="exceptionSize" /> è maggiore di 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-191">
              <paramref name="exceptions" /> is <see langword="null" /> and <paramref name="exceptionSize" /> is greater than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="659a2-192">
            <paramref name="exceptionSize" /> è minore di 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-192">
              <paramref name="exceptionSize" /> is less than 0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="659a2-193">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-193">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="659a2-194">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-194">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetLocalSignature">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="659a2-195">Imposta la firma delle variabili locali che descrive il layout delle variabili locali per il metodo dinamico associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-195">Sets the local variable signature that describes the layout of local variables for the associated dynamic method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetLocalSignature">
      <MemberSignature Language="C#" Value="public void SetLocalSignature (byte[] localSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLocalSignature(unsigned int8[] localSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetLocalSignature(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLocalSignature (localSignature As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLocalSignature(cli::array &lt;System::Byte&gt; ^ localSignature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="localSignature">
          <span data-ttu-id="659a2-196">Matrice contenente il layout delle variabili locali per l'oggetto <see cref="T:System.Reflection.Emit.DynamicMethod" /> associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-196">An array that contains the layout of local variables for the associated <see cref="T:System.Reflection.Emit.DynamicMethod" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="659a2-197">Imposta la firma delle variabili locali che descrive il layout delle variabili locali per il metodo dinamico associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-197">Sets the local variable signature that describes the layout of local variables for the associated dynamic method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659a2-198">Firma della variabile locale descrive il layout delle variabili locali di un metodo.</span><span class="sxs-lookup"><span data-stu-id="659a2-198">The local variable signature describes the layout of a method's local variables.</span></span> <span data-ttu-id="659a2-199">Per semplificare la costruzione di firma della variabile locale, utilizzare il `static` (`Shared` in Visual Basic) <xref:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper%2A?displayProperty=nameWithType> metodo per ottenere un <xref:System.Reflection.Emit.SignatureHelper> per la firma locale.</span><span class="sxs-lookup"><span data-stu-id="659a2-199">To simplify construction of the local variable signature, use the `static` (`Shared` in Visual Basic) <xref:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.Emit.SignatureHelper> for the local signature.</span></span>  
  
 <span data-ttu-id="659a2-200">Per informazioni sulle firme di variabile locale, vedere la documentazione di Common Language Infrastructure (CLI), in particolare "partizione II: metadati definizione e la semantica".</span><span class="sxs-lookup"><span data-stu-id="659a2-200">For information on local variable signatures, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="659a2-201">La documentazione è disponibile online; vedere [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) (ECMA C# e standard di Common Language Infrastructure) in MSDN e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web internazionale Ecma.</span><span class="sxs-lookup"><span data-stu-id="659a2-201">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLocalSignature">
      <MemberSignature Language="C#" Value="public void SetLocalSignature (byte* localSignature, int signatureSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLocalSignature(unsigned int8* localSignature, int32 signatureSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetLocalSignature(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLocalSignature(System::Byte* localSignature, int signatureSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localSignature" Type="System.Byte*" />
        <Parameter Name="signatureSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="localSignature">
          <span data-ttu-id="659a2-202">Matrice contenente il layout delle variabili locali per l'oggetto <see cref="T:System.Reflection.Emit.DynamicMethod" /> associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-202">An array that contains the layout of local variables for the associated <see cref="T:System.Reflection.Emit.DynamicMethod" />.</span>
          </span>
        </param>
        <param name="signatureSize">
          <span data-ttu-id="659a2-203">Il numero di byte nella firma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-203">The number of bytes in the signature.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="659a2-204">Imposta la firma delle variabili locali che descrive il layout delle variabili locali per il metodo dinamico associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-204">Sets the local variable signature that describes the layout of local variables for the associated dynamic method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659a2-205">Firma della variabile locale descrive il layout delle variabili locali di un metodo.</span><span class="sxs-lookup"><span data-stu-id="659a2-205">The local variable signature describes the layout of a method's local variables.</span></span> <span data-ttu-id="659a2-206">Per semplificare la costruzione di firma della variabile locale, utilizzare il `static` (`Shared` in Visual Basic) <xref:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper%2A?displayProperty=nameWithType> metodo per ottenere un <xref:System.Reflection.Emit.SignatureHelper> per la firma locale.</span><span class="sxs-lookup"><span data-stu-id="659a2-206">To simplify construction of the local variable signature, use the `static` (`Shared` in Visual Basic) <xref:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.Emit.SignatureHelper> for the local signature.</span></span>  
  
 <span data-ttu-id="659a2-207">Per informazioni sulle firme di variabile locale, vedere la documentazione di Common Language Infrastructure (CLI), in particolare "partizione II: metadati definizione e la semantica".</span><span class="sxs-lookup"><span data-stu-id="659a2-207">For information on local variable signatures, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="659a2-208">La documentazione è disponibile online; vedere [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) (ECMA C# e standard di Common Language Infrastructure) in MSDN e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web internazionale Ecma.</span><span class="sxs-lookup"><span data-stu-id="659a2-208">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Reflection.Emit.DynamicILInfo.SetLocalSignature(System.Byte[])" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="659a2-209">
            <paramref name="localSignature" /> è <see langword="null" /> e <paramref name="signatureSize" /> è maggiore di 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-209">
              <paramref name="localSignature" /> is <see langword="null" /> and <paramref name="signatureSize" /> is greater than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="659a2-210">
            <paramref name="signatureSize" /> è minore di 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-210">
              <paramref name="signatureSize" /> is less than 0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="659a2-211">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-211">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="659a2-212">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="659a2-212">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>