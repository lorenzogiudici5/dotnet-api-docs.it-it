<Type Name="GenericTypeParameterBuilder" FullName="System.Reflection.Emit.GenericTypeParameterBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="235896b9ddecdf929b635c0069551c988b47b79a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class GenericTypeParameterBuilder : System.Reflection.TypeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit GenericTypeParameterBuilder extends System.Reflection.TypeInfo" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.GenericTypeParameterBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GenericTypeParameterBuilder&#xA;Inherits TypeInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class GenericTypeParameterBuilder sealed : System::Reflection::TypeInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.TypeInfo</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netcore-2.0">System.Type</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f3721-101">Definisce e crea i parametri di tipo generico per tipi e metodi generici definiti in modo dinamico.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3721-101">Defines and creates generic type parameters for dynamically defined generic types and methods.</span>
      </span>
      <span data-ttu-id="f3721-102">Questa classe non può essere ereditata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3721-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-103">È possibile ottenere una matrice di <xref:System.Reflection.Emit.GenericTypeParameterBuilder> oggetti usando il <xref:System.Reflection.Emit.TypeBuilder.DefineGenericParameters%2A?displayProperty=nameWithType> metodo per aggiungere parametri di tipo a un tipo dinamico, rendendo così un tipo generico, oppure utilizzando il <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A?displayProperty=nameWithType> metodo per aggiungere parametri di tipo a un metodo dinamico.</span><span class="sxs-lookup"><span data-stu-id="f3721-103">You can get an array of <xref:System.Reflection.Emit.GenericTypeParameterBuilder> objects by using the <xref:System.Reflection.Emit.TypeBuilder.DefineGenericParameters%2A?displayProperty=nameWithType> method to add type parameters to a dynamic type, thus making it a generic type, or by using the <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A?displayProperty=nameWithType> method to add type parameters to a dynamic method.</span></span> <span data-ttu-id="f3721-104">Utilizzare il <xref:System.Reflection.Emit.GenericTypeParameterBuilder> oggetti da aggiungere vincoli per i parametri di tipo.</span><span class="sxs-lookup"><span data-stu-id="f3721-104">Use the <xref:System.Reflection.Emit.GenericTypeParameterBuilder> objects to add constraints to the type parameters.</span></span> <span data-ttu-id="f3721-105">I vincoli sono dei tre tipi:</span><span class="sxs-lookup"><span data-stu-id="f3721-105">Constraints are of three kinds:</span></span>  
  
-   <span data-ttu-id="f3721-106">Il vincolo di tipo di base specifica che qualsiasi tipo assegnato al parametro di tipo generico deve derivare da un particolare tipo di base.</span><span class="sxs-lookup"><span data-stu-id="f3721-106">The base type constraint specifies that any type assigned to the generic type parameter must derive from a particular base type.</span></span> <span data-ttu-id="f3721-107">Impostando questo vincolo utilizzando la <xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="f3721-107">Set this constraint by using the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint%2A> method.</span></span>  
  
-   <span data-ttu-id="f3721-108">Un vincolo di interfaccia specifica che qualsiasi tipo assegnato al parametro di tipo generico debba implementare un'interfaccia specifica.</span><span class="sxs-lookup"><span data-stu-id="f3721-108">An interface constraint specifies that any type assigned to the generic type parameter must implement a particular interface.</span></span> <span data-ttu-id="f3721-109">Impostare i vincoli di interfaccia utilizzando il <xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="f3721-109">Set the interface constraints by using the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints%2A> method.</span></span>  
  
-   <span data-ttu-id="f3721-110">I vincoli speciali specificano qualsiasi tipo assegnato al parametro di tipo generico deve avere un costruttore predefinito, deve essere un tipo riferimento o deve essere un tipo di valore.</span><span class="sxs-lookup"><span data-stu-id="f3721-110">Special constraints specify that any type assigned to the generic type parameter must have a default constructor, must be a reference type, or must be a value type.</span></span> <span data-ttu-id="f3721-111">Impostare i vincoli speciali per un parametro di tipo utilizzando il <xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="f3721-111">Set the special constraints for a type parameter by using the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes%2A> method.</span></span>  
  
 <span data-ttu-id="f3721-112">Vincoli di interfaccia e i vincoli speciali possono essere recuperati utilizzando i metodi di <xref:System.Reflection.Emit.GenericTypeParameterBuilder> classe.</span><span class="sxs-lookup"><span data-stu-id="f3721-112">Interface constraints and special constraints cannot be retrieved using methods of the <xref:System.Reflection.Emit.GenericTypeParameterBuilder> class.</span></span> <span data-ttu-id="f3721-113">Dopo aver creato il tipo generico che contiene i parametri di tipo, è possibile utilizzare il relativo <xref:System.Type> oggetto in modo da riflettere i vincoli.</span><span class="sxs-lookup"><span data-stu-id="f3721-113">Once you have created the generic type that contains the type parameters, you can use its <xref:System.Type> object to reflect the constraints.</span></span> <span data-ttu-id="f3721-114">Utilizzare il <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> metodo per ottenere i parametri di tipo e per ogni parametro di tipo di <xref:System.Type.GetGenericParameterConstraints%2A?displayProperty=nameWithType> metodo per ottenere il vincolo di tipo di base e i vincoli di interfaccia e <xref:System.Type.GenericParameterAttributes%2A?displayProperty=nameWithType> proprietà da ottenere i vincoli speciali.</span><span class="sxs-lookup"><span data-stu-id="f3721-114">Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method to get the type parameters, and for each type parameter use the <xref:System.Type.GetGenericParameterConstraints%2A?displayProperty=nameWithType> method to get the base type constraint and interface constraints, and the <xref:System.Type.GenericParameterAttributes%2A?displayProperty=nameWithType> property to get the special constraints.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3721-115">Esempio di codice seguente crea un tipo generico con due parametri di tipo e salvarli nell'assembly Genericemitexample1.</span><span class="sxs-lookup"><span data-stu-id="f3721-115">The following code example creates a generic type with two type parameters, and saves them in the assembly GenericEmitExample1.dll.</span></span> <span data-ttu-id="f3721-116">È possibile utilizzare il [Ildasm.exe (Disassembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) per visualizzare i tipi generati.</span><span class="sxs-lookup"><span data-stu-id="f3721-116">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to view the generated types.</span></span> <span data-ttu-id="f3721-117">Per una spiegazione più dettagliata dei passaggi coinvolti nella definizione di un tipo generico dinamico, vedere [procedura: definire un tipo generico tramite Reflection Emit](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md).</span><span class="sxs-lookup"><span data-stu-id="f3721-117">For a more detailed explanation of the steps involved in defining a dynamic generic type, see [How to: Define a Generic Type with Reflection Emit](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md).</span></span>  
  
 [!code-cpp[EmitGenericType#1](~/samples/snippets/cpp/VS_Snippets_CLR/EmitGenericType/CPP/source.cpp#1)]
 [!code-csharp[EmitGenericType#1](~/samples/snippets/csharp/VS_Snippets_CLR/EmitGenericType/CS/source.cs#1)]
 [!code-vb[EmitGenericType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EmitGenericType/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String[])" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected GenericTypeParameterBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; GenericTypeParameterBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-118">Ottiene un oggetto <see cref="T:System.Reflection.Assembly" /> che rappresenta l'assembly dinamico che contene la definizione di tipo generico a cui appartiene il parametro di tipo corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-118">Gets an <see cref="T:System.Reflection.Assembly" /> object representing the dynamic assembly that contains the generic type definition the current type parameter belongs to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3721-119">Oggetto <see cref="T:System.Reflection.Assembly" /> che rappresenta l'assembly dinamico che contene la definizione di tipo generico a cui appartiene il parametro di tipo corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-119">An <see cref="T:System.Reflection.Assembly" /> object representing the dynamic assembly that contains the generic type definition the current type parameter belongs to.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyQualifiedName">
      <MemberSignature Language="C#" Value="public override string AssemblyQualifiedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyQualifiedName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.AssemblyQualifiedName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AssemblyQualifiedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AssemblyQualifiedName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-120">Ottiene <see langword="null" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-120">Gets <see langword="null" /> in all cases.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3721-121">Riferimento Null (<see langword="Nothing" /> in Visual Basic) in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-121">A null reference (<see langword="Nothing" /> in Visual Basic) in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-122">Nessun nome completo dell'assembly per i parametri di tipo infatti l'ambito è limitato al tipo generico che li dichiara.</span><span class="sxs-lookup"><span data-stu-id="f3721-122">There is no assembly-qualified name for type parameters because their scope is limited to the generic type that declares them.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Reflection.TypeAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.TypeAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As TypeAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::TypeAttributes Attributes { System::Reflection::TypeAttributes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public override Type BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ BaseType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-123">Ottiene il vincolo di tipo di base del parametro di tipo generico corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-123">Gets the base type constraint of the current generic type parameter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3721-124">Oggetto <see cref="T:System.Type" /> che rappresenta il vincolo di tipo di base del parametro di tipo generico oppure <see langword="null" /> se il parametro di tipo non presenta vincoli di tipo di base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-124">A <see cref="T:System.Type" /> object that represents the base type constraint of the generic type parameter, or <see langword="null" /> if the type parameter has no base type constraint.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-125">Per impostare il vincolo di tipo di base, utilizzare il <xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="f3721-125">To set the base type constraint, use the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsGenericParameters">
      <MemberSignature Language="C#" Value="public override bool ContainsGenericParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContainsGenericParameters" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.ContainsGenericParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ContainsGenericParameters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ContainsGenericParameters { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-126">Ottiene <see langword="true" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-126">Gets <see langword="true" /> in all cases.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3721-127">
            <see langword="true" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-127">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-128">Oggetto <xref:System.Reflection.Emit.GenericTypeParameterBuilder> oggetto rappresenta sempre un parametro di tipo generico.</span><span class="sxs-lookup"><span data-stu-id="f3721-128">A <xref:System.Reflection.Emit.GenericTypeParameterBuilder> object always represents a generic type parameter.</span></span> <span data-ttu-id="f3721-129">Il valore di <xref:System.Reflection.Emit.GenericTypeParameterBuilder.ContainsGenericParameters%2A> proprietà riflette tale e non implica necessariamente un argomento di tipo generico che è possibile assegnare al parametro di tipo.</span><span class="sxs-lookup"><span data-stu-id="f3721-129">The value of the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.ContainsGenericParameters%2A> property reflects that fact and does not imply anything about any generic type argument that might be assigned to the type parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodBase DeclaringMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodBase DeclaringMethod" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DeclaringMethod As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodBase ^ DeclaringMethod { System::Reflection::MethodBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-130">Ottiene una classe <see cref="T:System.Reflection.MethodInfo" /> che rappresenta il metodo dichiarante se la classe <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> corrente rappresenta un parametro di tipo di un metodo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-130">Gets a <see cref="T:System.Reflection.MethodInfo" /> that represents the declaring method, if the current <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> represents a type parameter of a generic method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3721-131">Oggetto <see cref="T:System.Reflection.MethodInfo" /> che rappresenta il metodo dichiarante, se l'oggetto <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> rappresenta un parametro di tipo di un metodo generico; in caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-131">A <see cref="T:System.Reflection.MethodInfo" /> that represents the declaring method, if the current <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> represents a type parameter of a generic method; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-132">Se il <xref:System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringMethod%2A> proprietà non è `null`, quindi il metodo dichiarante è una definizione di metodo generico e `DeclaringMethod.IsGenericMethodDefinition` è `true`.</span><span class="sxs-lookup"><span data-stu-id="f3721-132">If the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringMethod%2A> property is not `null`, then the declaring method is a generic method definition and `DeclaringMethod.IsGenericMethodDefinition` is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public override Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-133">Ottiene la definizione di tipo generico o di metodo generico a cui appartiene il parametro di tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-133">Gets the generic type definition or generic method definition to which the generic type parameter belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3721-134">Se il parametro di tipo appartiene a un tipo generico, oggetto <see cref="T:System.Type" /> che rappresenta il tipo generico; se il parametro di tipo appartiene a un metodo generico, oggetto <see cref="T:System.Type" /> che rappresenta il tipo che ha dichiarato il metodo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-134">If the type parameter belongs to a generic type, a <see cref="T:System.Type" /> object representing that generic type; if the type parameter belongs to a generic method, a <see cref="T:System.Type" /> object representing that type that declared that generic method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-135">Il tipo dichiarante non è necessariamente un tipo generico.</span><span class="sxs-lookup"><span data-stu-id="f3721-135">The declaring type is not necessarily a generic type.</span></span> <span data-ttu-id="f3721-136">Se il parametro di tipo corrente appartiene a un metodo generico, il tipo in cui è dichiarato il metodo potrebbe non essere generico.</span><span class="sxs-lookup"><span data-stu-id="f3721-136">If the current type parameter belongs to a generic method, the type in which the method is declared might not be generic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="f3721-137">Oggetto da confrontare con l'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-137">The object to be compared with the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-138">Verifica se l'oggetto dato è un'istanza di <see langword="EventToken" /> ed è uguale all'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-138">Tests whether the given object is an instance of <see langword="EventToken" /> and is equal to the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-139">Restituisce <see langword="true" /> se <paramref name="o" /> è un'istanza di <see langword="EventToken" /> ed è uguale all'istanza corrente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-139">Returns <see langword="true" /> if <paramref name="o" /> is an instance of <see langword="EventToken" /> and equals the current instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-140">Ottiene <see langword="null" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-140">Gets <see langword="null" /> in all cases.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3721-141">Riferimento Null (<see langword="Nothing" /> in Visual Basic) in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-141">A null reference (<see langword="Nothing" /> in Visual Basic) in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-142">Un parametro di tipo generico è un nome completo, poiché l'ambito è limitato al tipo generico che lo dichiara.</span><span class="sxs-lookup"><span data-stu-id="f3721-142">A generic type parameter does not have a full name, because its scope is limited to the generic type that declares it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericParameterAttributes">
      <MemberSignature Language="C#" Value="public override System.Reflection.GenericParameterAttributes GenericParameterAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.GenericParameterAttributes GenericParameterAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GenericParameterAttributes As GenericParameterAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::GenericParameterAttributes GenericParameterAttributes { System::Reflection::GenericParameterAttributes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.GenericParameterAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-143">Ottiene una combinazione di flag <see cref="T:System.Reflection.GenericParameterAttributes" /> che descrivono la covariante e i vincoli speciali del parametro di tipo generico corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-143">Gets a combination of <see cref="T:System.Reflection.GenericParameterAttributes" /> flags that describe the covariance and special constraints of the current generic type parameter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3721-144">Combinazione bit per bit di valori che descrive la covariante e i vincoli speciali del parametro di tipo generico corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-144">A bitwise combination of values that describes the covariance and special constraints of the current generic type parameter.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericParameterPosition">
      <MemberSignature Language="C#" Value="public override int GenericParameterPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GenericParameterPosition" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterPosition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GenericParameterPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int GenericParameterPosition { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-145">Ottiene la posizione del parametro di tipo nell'elenco dei parametri di tipo del tipo o del metodo generico che ha dichiarato il parametro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-145">Gets the position of the type parameter in the type parameter list of the generic type or method that declared the parameter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3721-146">Posizione del parametro di tipo nell'elenco dei parametri di tipo del tipo o del metodo generico che ha dichiarato il parametro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-146">The position of the type parameter in the type parameter list of the generic type or method that declared the parameter.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericTypeArguments">
      <MemberSignature Language="C#" Value="public override Type[] GenericTypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] GenericTypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.GenericTypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GenericTypeArguments As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ GenericTypeArguments { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArrayRank">
      <MemberSignature Language="C#" Value="public override int GetArrayRank ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetArrayRank() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetArrayRank" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetArrayRank () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetArrayRank();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeFlagsImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.TypeAttributes GetAttributeFlagsImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Reflection.TypeAttributes GetAttributeFlagsImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetAttributeFlagsImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetAttributeFlagsImpl () As TypeAttributes" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::TypeAttributes GetAttributeFlagsImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeAttributes</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstructorImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.ConstructorInfo GetConstructorImpl (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.ConstructorInfo GetConstructorImpl(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::ConstructorInfo ^ GetConstructorImpl(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">To be added.</param>
        <param name="binder">To be added.</param>
        <param name="callConvention">To be added.</param>
        <param name="types">To be added.</param>
        <param name="modifiers">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstructors">
      <MemberSignature Language="C#" Value="public override System.Reflection.ConstructorInfo[] GetConstructors (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.ConstructorInfo[] GetConstructors(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetConstructors(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetConstructors (bindingAttr As BindingFlags) As ConstructorInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::ConstructorInfo ^&gt; ^ GetConstructors(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="f3721-147">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-147">Not supported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-148">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-148">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-149">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-149">Not supported for incomplete generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-150">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-150">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-151">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-151">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-152">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-152">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-153">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-153">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="f3721-154">Specifica se trovare gli attributi cercandoli nella catena di ereditarietà del membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-154">Specifies whether to search this member's inheritance chain to find the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-155">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-155">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-156">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-156">Not supported for incomplete generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-157">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-157">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-158">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-158">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-159">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-159">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="f3721-160">Tipo di attributo da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-160">The type of attribute to search for.</span>
          </span>
          <span data-ttu-id="f3721-161">Vengono restituiti solo gli attributi assegnabili a questo tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-161">Only attributes that are assignable to this type are returned.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="f3721-162">Specifica se trovare gli attributi cercandoli nella catena di ereditarietà del membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-162">Specifies whether to search this member's inheritance chain to find the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-163">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-163">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-164">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-164">Not supported for incomplete generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-165">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-165">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-166">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-166">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-167">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-167">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetElementType">
      <MemberSignature Language="C#" Value="public override Type GetElementType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetElementType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetElementType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetElementType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetElementType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3721-168">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-168">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-169">Il tipo a cui fa riferimento il tipo di matrice corrente, il tipo di puntatore o il tipo <see langword="ByRef" /> oppure <see langword="null" /> se il tipo corrente non è un tipo di matrice o di puntatore e se non viene passato per riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-169">The type referred to by the current array type, pointer type, or <see langword="ByRef" /> type; or <see langword="null" /> if the current type is not an array type, is not a pointer type, and is not passed by reference.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-170">Un parametro di tipo generico è un segnaposto per un tipo.</span><span class="sxs-lookup"><span data-stu-id="f3721-170">A generic type parameter is a placeholder for a type.</span></span> <span data-ttu-id="f3721-171">Perché tale tipo non è noto in anticipo, non vi è alcun modo per sapere se dispone di un tipo di elemento o di ciò che potrebbe essere il tipo di elemento.</span><span class="sxs-lookup"><span data-stu-id="f3721-171">Because that type cannot be known in advance, there is no way to know whether it has an element type or what that element type might be.</span></span> <span data-ttu-id="f3721-172">Qualsiasi restituito il valore sarà fuorvianti, pertanto il metodo genera un <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="f3721-172">Any return value would be misleading, so the method throws a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-173">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-173">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventInfo GetEvent (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.EventInfo GetEvent(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetEvent(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEvent (name As String, bindingAttr As BindingFlags) As EventInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::EventInfo ^ GetEvent(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f3721-174">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-174">Not supported.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="f3721-175">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-175">Not supported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-176">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-176">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-177">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-177">Not supported for incomplete generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-178">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-178">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-179">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-179">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-180">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-180">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvents">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-181">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-181">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventInfo[] GetEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.EventInfo[] GetEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEvents () As EventInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::EventInfo ^&gt; ^ GetEvents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3721-182">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-182">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-183">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-183">Not supported for incomplete generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-184">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-184">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-185">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-185">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-186">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-186">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventInfo[] GetEvents (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.EventInfo[] GetEvents(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetEvents(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEvents (bindingAttr As BindingFlags) As EventInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::EventInfo ^&gt; ^ GetEvents(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="f3721-187">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-187">Not supported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-188">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-188">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-189">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-189">Not supported for incomplete generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-190">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-190">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-191">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-191">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-192">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-192">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f3721-193">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-193">Not supported.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="f3721-194">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-194">Not supported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-195">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-195">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-196">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-196">Not supported for incomplete generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-197">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-197">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-198">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-198">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-199">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-199">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="f3721-200">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-200">Not supported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-201">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-201">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-202">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-202">Not supported for incomplete generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-203">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-203">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-204">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-204">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-205">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-205">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGenericArguments">
      <MemberSignature Language="C#" Value="public override Type[] GetGenericArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetGenericArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGenericArguments () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetGenericArguments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3721-206">Non valido per i parametri di tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-206">Not valid for generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-207">Non valido per i parametri di tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-207">Not valid for generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-208">In un tipo costruito, il tipo assegnato a un parametro di tipo generico può essere un tipo generico, ma il parametro di tipo stesso non è generico.</span><span class="sxs-lookup"><span data-stu-id="f3721-208">In a constructed type, the type that is assigned to a generic type parameter can be a generic type, but the type parameter itself is not generic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3721-209">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-209">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGenericParameterConstraints">
      <MemberSignature Language="C#" Value="public override Type[] GetGenericParameterConstraints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetGenericParameterConstraints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericParameterConstraints" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGenericParameterConstraints () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetGenericParameterConstraints();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGenericTypeDefinition">
      <MemberSignature Language="C#" Value="public override Type GetGenericTypeDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetGenericTypeDefinition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericTypeDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGenericTypeDefinition () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetGenericTypeDefinition();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3721-210">Non valido per i parametri di tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-210">Not valid for generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-211">Non valido per i parametri di tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-211">Not valid for generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-212">In un tipo costruito, il tipo assegnato a un parametro di tipo generico può essere un tipo generico, ma il parametro di tipo stesso non è generico.</span><span class="sxs-lookup"><span data-stu-id="f3721-212">In a constructed type, the type that is assigned to a generic type parameter can be a generic type, but the type parameter itself is not generic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3721-213">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-213">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3721-214">Restituisce un codice hash di valori interi a 32 bit per l'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-214">Returns a 32-bit integer hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-215">Codice hash di valori interi a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-215">A 32-bit integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterface">
      <MemberSignature Language="C#" Value="public override Type GetInterface (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetInterface(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetInterface(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInterface (name As String, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetInterface(System::String ^ name, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f3721-216">Nome dell'interfaccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-216">The name of the interface.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="f3721-217">
            <see langword="true" /> per eseguire la ricerca senza distinzione tra maiuscole e minuscole; <see langword="false" /> per eseguire la ricerca con la distinzione tra maiuscole e minuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-217">
              <see langword="true" /> to search without regard for case; <see langword="false" /> to make a case-sensitive search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-218">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-218">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-219">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-219">Not supported for incomplete generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-220">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-220">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-221">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-221">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-222">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-222">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInterfaceMap">
      <MemberSignature Language="C#" Value="public override System.Reflection.InterfaceMapping GetInterfaceMap (Type interfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Reflection.InterfaceMapping GetInterfaceMap(class System.Type interfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetInterfaceMap(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInterfaceMap (interfaceType As Type) As InterfaceMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::InterfaceMapping GetInterfaceMap(Type ^ interfaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.InterfaceMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="interfaceType">
          <span data-ttu-id="f3721-223">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di interfaccia per il quale recuperare il mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-223">A <see cref="T:System.Type" /> object that represents the interface type for which the mapping is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-224">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-224">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-225">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-225">Not supported for incomplete generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-226">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-226">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-227">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-227">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-228">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-228">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInterfaces">
      <MemberSignature Language="C#" Value="public override Type[] GetInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInterfaces () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetInterfaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3721-229">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-229">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-230">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-230">Not supported for incomplete generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-231">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-231">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-232">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-232">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-233">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-233">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.MemberTypes type, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMember (name As String, type As MemberTypes, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::MemberTypes type, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Reflection.MemberTypes" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f3721-234">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-234">Not supported.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="f3721-235">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-235">Not supported.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="f3721-236">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-236">Not supported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-237">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-237">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-238">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-238">Not supported for incomplete generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-239">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-239">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-240">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-240">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-241">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-241">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="f3721-242">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-242">Not supported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-243">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-243">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-244">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-244">Not supported for incomplete generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-245">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-245">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-246">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-246">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-247">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-247">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.MethodInfo GetMethodImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo GetMethodImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ GetMethodImpl(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="bindingAttr">To be added.</param>
        <param name="binder">To be added.</param>
        <param name="callConvention">To be added.</param>
        <param name="types">To be added.</param>
        <param name="modifiers">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="f3721-248">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-248">Not supported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-249">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-249">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-250">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-250">Not supported for incomplete generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-251">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-251">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-252">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-252">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-253">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-253">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNestedType">
      <MemberSignature Language="C#" Value="public override Type GetNestedType (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetNestedType(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetNestedType(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNestedType (name As String, bindingAttr As BindingFlags) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetNestedType(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f3721-254">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-254">Not supported.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="f3721-255">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-255">Not supported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-256">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-256">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-257">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-257">Not supported for incomplete generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-258">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-258">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-259">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-259">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-260">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-260">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNestedTypes">
      <MemberSignature Language="C#" Value="public override Type[] GetNestedTypes (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetNestedTypes(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetNestedTypes(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNestedTypes (bindingAttr As BindingFlags) As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetNestedTypes(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="f3721-261">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-261">Not supported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-262">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-262">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-263">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-263">Not supported for incomplete generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-264">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-264">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-265">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-265">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-266">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-266">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="f3721-267">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-267">Not supported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-268">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-268">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-269">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-269">Not supported for incomplete generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-270">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-270">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-271">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-271">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-272">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-272">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.PropertyInfo GetPropertyImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.PropertyInfo GetPropertyImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::PropertyInfo ^ GetPropertyImpl(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="bindingAttr">To be added.</param>
        <param name="binder">To be added.</param>
        <param name="returnType">To be added.</param>
        <param name="types">To be added.</param>
        <param name="modifiers">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GUID">
      <MemberSignature Language="C#" Value="public override Guid GUID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid GUID" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.GUID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GUID As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid GUID { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-273">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-273">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3721-274">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-274">Not supported for incomplete generic type parameters.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-275">Questa proprietà non è supportata per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-275">This property is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-276">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-276">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-277">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-277">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasElementTypeImpl">
      <MemberSignature Language="C#" Value="protected override bool HasElementTypeImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool HasElementTypeImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.HasElementTypeImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HasElementTypeImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool HasElementTypeImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public override object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f3721-278">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-278">Not supported.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="f3721-279">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-279">Not supported.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="f3721-280">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-280">Not supported.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="f3721-281">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-281">Not supported.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="f3721-282">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-282">Not supported.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="f3721-283">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-283">Not supported.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="f3721-284">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-284">Not supported.</span>
          </span>
        </param>
        <param name="namedParameters">
          <span data-ttu-id="f3721-285">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-285">Not supported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-286">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-286">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-287">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-287">Not supported for incomplete generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-288">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-288">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-289">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-289">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-290">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-290">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsArrayImpl">
      <MemberSignature Language="C#" Value="protected override bool IsArrayImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsArrayImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsArrayImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsArrayImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsArrayImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAssignableFrom">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-291">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-291">Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAssignableFrom">
      <MemberSignature Language="C#" Value="public override bool IsAssignableFrom (System.Reflection.TypeInfo typeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsAssignableFrom(class System.Reflection.TypeInfo typeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom(System.Reflection.TypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsAssignableFrom(System::Reflection::TypeInfo ^ typeInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeInfo" Type="System.Reflection.TypeInfo" />
      </Parameters>
      <Docs>
        <param name="typeInfo">
          <span data-ttu-id="f3721-292">Oggetto da testare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-292">The object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-293">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-293">Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-294">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-294">Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-295">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-295">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-296">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-296">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-297">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-297">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAssignableFrom">
      <MemberSignature Language="C#" Value="public override bool IsAssignableFrom (Type c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsAssignableFrom(class System.Type c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsAssignableFrom (c As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsAssignableFrom(Type ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="f3721-298">Oggetto da testare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-298">The object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-299">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-299">Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-300">Genera un'eccezione <see cref="T:System.NotSupportedException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-300">Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-301">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-301">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-302">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-302">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-303">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-303">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsByRefImpl">
      <MemberSignature Language="C#" Value="protected override bool IsByRefImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsByRefImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsByRefImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsByRefImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsByRefImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByRefLike">
      <MemberSignature Language="C#" Value="public override bool IsByRefLike { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByRefLike" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.IsByRefLike" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsByRefLike As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsByRefLike { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCOMObjectImpl">
      <MemberSignature Language="C#" Value="protected override bool IsCOMObjectImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsCOMObjectImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsCOMObjectImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsCOMObjectImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsCOMObjectImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructedGenericType">
      <MemberSignature Language="C#" Value="public override bool IsConstructedGenericType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructedGenericType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.IsConstructedGenericType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsConstructedGenericType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsConstructedGenericType { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-304">Ottiene un valore che indica se l'oggetto rappresenta un tipo generico costruito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-304">Gets a value that indicates whether this object represents a constructed generic type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3721-305">
            <see langword="true" /> se questo oggetto rappresenta una definizione di tipo generico; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-305">
              <see langword="true" /> if this object represents a constructed generic type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="f3721-306">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-306">Not supported.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="f3721-307">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-307">Not supported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-308">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-308">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-309">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-309">Not supported for incomplete generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-310">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-310">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-311">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-311">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-312">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-312">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsEnum">
      <MemberSignature Language="C#" Value="public override bool IsEnum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnum" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.IsEnum" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEnum As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEnum { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGenericParameter">
      <MemberSignature Language="C#" Value="public override bool IsGenericParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenericParameter" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsGenericParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGenericParameter { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-313">Ottiene <see langword="true" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-313">Gets <see langword="true" /> in all cases.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3721-314">
            <see langword="true" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-314">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGenericType">
      <MemberSignature Language="C#" Value="public override bool IsGenericType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenericType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsGenericType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGenericType { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-315">Restituisce <see langword="false" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-315">Returns <see langword="false" /> in all cases.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3721-316">
            <see langword="false" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-316">
              <see langword="false" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-317">In un tipo costruito, il tipo assegnato a un parametro di tipo generico può essere un tipo generico, ma il parametro di tipo stesso non è generico.</span><span class="sxs-lookup"><span data-stu-id="f3721-317">In a constructed type, the type that is assigned to a generic type parameter can be a generic type, but the type parameter itself is not generic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGenericTypeDefinition">
      <MemberSignature Language="C#" Value="public override bool IsGenericTypeDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenericTypeDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericTypeDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsGenericTypeDefinition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGenericTypeDefinition { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-318">Ottiene <see langword="false" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-318">Gets <see langword="false" /> in all cases.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3721-319">
            <see langword="false" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-319">
              <see langword="false" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-320">In un tipo costruito, il tipo assegnato a un parametro di tipo generico può essere un tipo generico, ma il parametro di tipo stesso non è generico.</span><span class="sxs-lookup"><span data-stu-id="f3721-320">In a constructed type, the type that is assigned to a generic type parameter can be a generic type, but the type parameter itself is not generic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInstanceOfType">
      <MemberSignature Language="C#" Value="public override bool IsInstanceOfType (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsInstanceOfType(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsInstanceOfType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsInstanceOfType (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsInstanceOfType(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPointerImpl">
      <MemberSignature Language="C#" Value="protected override bool IsPointerImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsPointerImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsPointerImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsPointerImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsPointerImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimitiveImpl">
      <MemberSignature Language="C#" Value="protected override bool IsPrimitiveImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsPrimitiveImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsPrimitiveImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsPrimitiveImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsPrimitiveImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSerializable">
      <MemberSignature Language="C#" Value="public override bool IsSerializable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSerializable" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.IsSerializable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSerializable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSerializable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubclassOf">
      <MemberSignature Language="C#" Value="public override bool IsSubclassOf (Type c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubclassOf(class System.Type c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsSubclassOf(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubclassOf (c As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubclassOf(Type ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="f3721-321">Non supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-321">Not supported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-322">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-322">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-323">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-323">Not supported for incomplete generic type parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-324">Questo metodo non è supportato per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-324">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-325">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-325">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-326">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-326">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSZArray">
      <MemberSignature Language="C#" Value="public override bool IsSZArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSZArray" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.IsSZArray" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSZArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSZArray { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTypeDefinition">
      <MemberSignature Language="C#" Value="public override bool IsTypeDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTypeDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.IsTypeDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsTypeDefinition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsTypeDefinition { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValueTypeImpl">
      <MemberSignature Language="C#" Value="protected override bool IsValueTypeImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsValueTypeImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsValueTypeImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsValueTypeImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsValueTypeImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVariableBoundArray">
      <MemberSignature Language="C#" Value="public override bool IsVariableBoundArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVariableBoundArray" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.IsVariableBoundArray" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsVariableBoundArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsVariableBoundArray { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MakeArrayType">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-327">Restituisce il tipo di una matrice il cui tipo di elemento è il parametro di tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-327">Returns the type of an array whose element type is the generic type parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MakeArrayType">
      <MemberSignature Language="C#" Value="public override Type MakeArrayType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type MakeArrayType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MakeArrayType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ MakeArrayType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3721-328">Restituisce il tipo di una matrice unidimensionale il cui tipo di elemento è il parametro di tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-328">Returns the type of a one-dimensional array whose element type is the generic type parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-329">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di una matrice unidimensionale il cui tipo di elemento è il parametro di tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-329">A <see cref="T:System.Type" /> object that represents the type of a one-dimensional array whose element type is the generic type parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-330">Il <xref:System.Type.MakeArrayType%2A> metodo fornisce un modo per generare i tipi di matrice per elenchi di parametri.</span><span class="sxs-lookup"><span data-stu-id="f3721-330">The <xref:System.Type.MakeArrayType%2A> method provides a way to generate array types for parameter lists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3721-331">Esempio di codice seguente crea un modulo dinamico, un tipo generico astratto denominato `Sample` con un parametro di tipo, `T`e un metodo astratto denominato `TestMethod`.</span><span class="sxs-lookup"><span data-stu-id="f3721-331">The following code example creates a dynamic module, an abstract generic type named `Sample` with one type parameter, `T`, and an abstract method named `TestMethod`.</span></span> <span data-ttu-id="f3721-332">`TestMethod` accetta un `ref` parametro (`ByRef` in Visual Basic) di tipo `T`, un puntatore al tipo `T`e una matrice di `T`.</span><span class="sxs-lookup"><span data-stu-id="f3721-332">`TestMethod` takes a `ref` parameter (`ByRef` in Visual Basic) of type `T`, a pointer to type `T`, and an array of `T`.</span></span> <span data-ttu-id="f3721-333">Questo metodo restituisce una matrice bidimensionale di `T`.</span><span class="sxs-lookup"><span data-stu-id="f3721-333">This method returns a two-dimensional array of `T`.</span></span> <span data-ttu-id="f3721-334">L'esempio di codice salva il modulo dinamico su disco, è possibile esaminarlo utilizzando MSIL Disassembler (Ildasm.exe).</span><span class="sxs-lookup"><span data-stu-id="f3721-334">The code example saves the dynamic module to disk, so you can examine it using the MSIL Disassembler (Ildasm.exe).</span></span>  
  
 [!code-cpp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/cpp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/cpp/source.cpp#1)]
 [!code-csharp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/csharp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/CS/source.cs#1)]
 [!code-vb[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType" />
        <altmember cref="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType" />
      </Docs>
    </Member>
    <Member MemberName="MakeArrayType">
      <MemberSignature Language="C#" Value="public override Type MakeArrayType (int rank);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type MakeArrayType(int32 rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MakeArrayType (rank As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ MakeArrayType(int rank);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rank">
          <span data-ttu-id="f3721-335">Numero di dimensioni della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-335">The number of dimensions for the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-336">Restituisce il tipo di una matrice il cui tipo di elemento è il parametro di tipo generico con il numero di dimensioni specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-336">Returns the type of an array whose element type is the generic type parameter, with the specified number of dimensions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-337">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di una matrice il cui tipo di elemento è il parametro di tipo generico con il numero di dimensioni specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-337">A <see cref="T:System.Type" /> object that represents the type of an array whose element type is the generic type parameter, with the specified number of dimensions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-338">Il <xref:System.Type.MakeArrayType%2A> metodo fornisce un modo per generare i tipi di matrice per elenchi di parametri.</span><span class="sxs-lookup"><span data-stu-id="f3721-338">The <xref:System.Type.MakeArrayType%2A> method provides a way to generate array types for parameter lists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3721-339">Esempio di codice seguente crea un modulo dinamico, un tipo generico astratto denominato `Sample` con un parametro di tipo, `T`e un metodo astratto denominato `TestMethod`.</span><span class="sxs-lookup"><span data-stu-id="f3721-339">The following code example creates a dynamic module, an abstract generic type named `Sample` with one type parameter, `T`, and an abstract method named `TestMethod`.</span></span> <span data-ttu-id="f3721-340">`TestMethod` accetta un `ref` parametro (`ByRef` in Visual Basic) di tipo `T`, un puntatore al tipo `T`e una matrice di `T`.</span><span class="sxs-lookup"><span data-stu-id="f3721-340">`TestMethod` takes a `ref` parameter (`ByRef` in Visual Basic) of type `T`, a pointer to type `T`, and an array of `T`.</span></span> <span data-ttu-id="f3721-341">Questo metodo restituisce una matrice bidimensionale di `T`.</span><span class="sxs-lookup"><span data-stu-id="f3721-341">This method returns a two-dimensional array of `T`.</span></span> <span data-ttu-id="f3721-342">L'esempio di codice salva il modulo dinamico su disco, è possibile esaminarlo utilizzando MSIL Disassembler (Ildasm.exe).</span><span class="sxs-lookup"><span data-stu-id="f3721-342">The code example saves the dynamic module to disk, so you can examine it using the MSIL Disassembler (Ildasm.exe).</span></span>  
  
 [!code-cpp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/cpp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/cpp/source.cpp#1)]
 [!code-csharp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/csharp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/CS/source.cs#1)]
 [!code-vb[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="f3721-343">
            <paramref name="rank" /> non è un numero di dimensioni valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-343">
              <paramref name="rank" /> is not a valid number of dimensions.</span>
          </span>
          <span data-ttu-id="f3721-344">Ad esempio, il relativo valore è minore di 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-344">For example, its value is less than 1.</span>
          </span>
        </exception>
        <altmember cref="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType" />
        <altmember cref="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType" />
      </Docs>
    </Member>
    <Member MemberName="MakeByRefType">
      <MemberSignature Language="C#" Value="public override Type MakeByRefType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type MakeByRefType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MakeByRefType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ MakeByRefType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3721-345">Restituisce un oggetto <see cref="T:System.Type" /> che rappresenta il parametro di tipo generico corrente quando viene passato come parametro di riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-345">Returns a <see cref="T:System.Type" /> object that represents the current generic type parameter when passed as a reference parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-346">Oggetto <see cref="T:System.Type" /> che rappresenta il parametro di tipo generico corrente quando viene passato come parametro di riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-346">A <see cref="T:System.Type" /> object that represents the current generic type parameter when passed as a reference parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-347">Il <xref:System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType%2A> metodo fornisce un modo per generare `ref` tipi (`ByRef` in Visual Basic) per elenchi di parametri.</span><span class="sxs-lookup"><span data-stu-id="f3721-347">The <xref:System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType%2A> method provides a way to generate `ref` types (`ByRef` in Visual Basic) for parameter lists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3721-348">Esempio di codice seguente crea un modulo dinamico, un tipo generico astratto denominato `Sample` con un parametro di tipo, `T`e un metodo astratto denominato `TestMethod`.</span><span class="sxs-lookup"><span data-stu-id="f3721-348">The following code example creates a dynamic module, an abstract generic type named `Sample` with one type parameter, `T`, and an abstract method named `TestMethod`.</span></span> <span data-ttu-id="f3721-349">`TestMethod` accetta un `ref` parametro (`ByRef` in Visual Basic) di tipo `T`, un puntatore al tipo `T`e una matrice di `T`.</span><span class="sxs-lookup"><span data-stu-id="f3721-349">`TestMethod` takes a `ref` parameter (`ByRef` in Visual Basic) of type `T`, a pointer to type `T`, and an array of `T`.</span></span> <span data-ttu-id="f3721-350">Questo metodo restituisce una matrice bidimensionale di `T`.</span><span class="sxs-lookup"><span data-stu-id="f3721-350">This method returns a two-dimensional array of `T`.</span></span> <span data-ttu-id="f3721-351">L'esempio di codice salva il modulo dinamico su disco, è possibile esaminarlo utilizzando MSIL Disassembler (Ildasm.exe).</span><span class="sxs-lookup"><span data-stu-id="f3721-351">The code example saves the dynamic module to disk, so you can examine it using the MSIL Disassembler (Ildasm.exe).</span></span>  
  
 [!code-cpp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/cpp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/cpp/source.cpp#1)]
 [!code-csharp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/csharp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/CS/source.cs#1)]
 [!code-vb[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType" />
        <altmember cref="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType" />
      </Docs>
    </Member>
    <Member MemberName="MakeGenericType">
      <MemberSignature Language="C#" Value="public override Type MakeGenericType (params Type[] typeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type MakeGenericType(class System.Type[] typeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeGenericType(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MakeGenericType (ParamArray typeArguments As Type()) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ MakeGenericType(... cli::array &lt;Type ^&gt; ^ typeArguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeArguments" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typeArguments">
          <span data-ttu-id="f3721-352">Matrice di argomenti tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-352">An array of type arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-353">Non valido per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-353">Not valid for incomplete generic type parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-354">Questo metodo non è valido per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-354">This method is invalid for incomplete generic type parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3721-355">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-355">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MakePointerType">
      <MemberSignature Language="C#" Value="public override Type MakePointerType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type MakePointerType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MakePointerType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ MakePointerType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3721-356">Restituisce un oggetto <see cref="T:System.Type" /> che rappresenta un puntatore al parametro di tipo generico corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-356">Returns a <see cref="T:System.Type" /> object that represents a pointer to the current generic type parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-357">Oggetto <see cref="T:System.Type" /> che rappresenta un puntatore al parametro di tipo generico corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-357">A <see cref="T:System.Type" /> object that represents a pointer to the current generic type parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-358">Il <xref:System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType%2A> metodo fornisce un modo per generare i tipi di puntatore per elenchi di parametri.</span><span class="sxs-lookup"><span data-stu-id="f3721-358">The <xref:System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType%2A> method provides a way to generate pointer types for parameter lists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3721-359">Esempio di codice seguente crea un modulo dinamico, un tipo generico astratto denominato `Sample` con un parametro di tipo, `T`e un metodo astratto denominato `TestMethod`.</span><span class="sxs-lookup"><span data-stu-id="f3721-359">The following code example creates a dynamic module, an abstract generic type named `Sample` with one type parameter, `T`, and an abstract method named `TestMethod`.</span></span> <span data-ttu-id="f3721-360">`TestMethod` accetta un `ref` parametro (`ByRef` in Visual Basic) di tipo `T`, un puntatore al tipo `T`e una matrice di `T`.</span><span class="sxs-lookup"><span data-stu-id="f3721-360">`TestMethod` takes a `ref` parameter (`ByRef` in Visual Basic) of type `T`, a pointer to type `T`, and an array of `T`.</span></span> <span data-ttu-id="f3721-361">Questo metodo restituisce una matrice bidimensionale di `T`.</span><span class="sxs-lookup"><span data-stu-id="f3721-361">This method returns a two-dimensional array of `T`.</span></span> <span data-ttu-id="f3721-362">L'esempio di codice salva il modulo dinamico su disco, è possibile esaminarlo utilizzando MSIL Disassembler (Ildasm.exe).</span><span class="sxs-lookup"><span data-stu-id="f3721-362">The code example saves the dynamic module to disk, so you can examine it using the MSIL Disassembler (Ildasm.exe).</span></span>  
  
 [!code-cpp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/cpp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/cpp/source.cpp#1)]
 [!code-csharp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/csharp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/CS/source.cs#1)]
 [!code-vb[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType" />
        <altmember cref="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType" />
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module Module { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module Module" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.Module" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Module As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ Module { System::Reflection::Module ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-363">Ottiene il modulo dinamico che contiene il parametro di tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-363">Gets the dynamic module that contains the generic type parameter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3721-364">Oggetto <see cref="T:System.Reflection.Module" /> che rappresenta il modulo dinamico che contiene il parametro di tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-364">A <see cref="T:System.Reflection.Module" /> object that represents the dynamic module that contains the generic type parameter.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-365">Ottiene il nome del parametro di tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-365">Gets the name of the generic type parameter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3721-366">Il nome del parametro di tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-366">The name of the generic type parameter.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public override string Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Namespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-367">Ottiene <see langword="null" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-367">Gets <see langword="null" /> in all cases.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3721-368">Riferimento Null (<see langword="Nothing" /> in Visual Basic) in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-368">A null reference (<see langword="Nothing" /> in Visual Basic) in all cases.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public override Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-369">Ottiene l'oggetto <see cref="T:System.Type" /> utilizzato per ottenere la classe <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-369">Gets the <see cref="T:System.Type" /> object that was used to obtain the <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3721-370">Oggetto <see cref="T:System.Type" /> utilizzato per ottenere la classe <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-370">The <see cref="T:System.Type" /> object that was used to obtain the <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBaseTypeConstraint">
      <MemberSignature Language="C#" Value="public void SetBaseTypeConstraint (Type baseTypeConstraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBaseTypeConstraint(class System.Type baseTypeConstraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBaseTypeConstraint (baseTypeConstraint As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBaseTypeConstraint(Type ^ baseTypeConstraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseTypeConstraint" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="baseTypeConstraint">
          <span data-ttu-id="f3721-371">Oggetto <see cref="T:System.Type" /> che deve essere ereditato da qualsiasi tipo che deve essere sostituito con il parametro di tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-371">The <see cref="T:System.Type" /> that must be inherited by any type that is to be substituted for the type parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-372">Imposta il tipo di base che un tipo deve ereditare per essere sostituito con il parametro di tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-372">Sets the base type that a type must inherit in order to be substituted for the type parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-373">Per recuperare l'utilizzo di vincolo di tipo di base di <xref:System.Reflection.Emit.GenericTypeParameterBuilder.BaseType%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="f3721-373">To retrieve the base type constraint use the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.BaseType%2A> property.</span></span>  
  
 <span data-ttu-id="f3721-374">Dopo aver creato il tipo generico che contiene il parametro di tipo, è possibile utilizzare il relativo <xref:System.Type> oggetto in modo da riflettere il parametro di tipo e i vincoli.</span><span class="sxs-lookup"><span data-stu-id="f3721-374">Once you have created the generic type that contains the type parameter, you can use its <xref:System.Type> object to reflect the type parameter and their constraints.</span></span> <span data-ttu-id="f3721-375">Per ottenere i parametri di tipo di un tipo generico completato, usare il <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="f3721-375">To get the type parameters of a completed generic type, use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f3721-376">Per ogni parametro di tipo, ottenere il tipo di base vincoli di interfaccia e vincolo utilizzando la <xref:System.Type.GetGenericParameterConstraints%2A?displayProperty=nameWithType> (metodo) e ottenere i vincoli speciali mediante il <xref:System.Type.GenericParameterAttributes%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="f3721-376">For each type parameter, get the base type constraint and interface constraints by using the <xref:System.Type.GetGenericParameterConstraints%2A?displayProperty=nameWithType> method, and get the special constraints by using the <xref:System.Type.GenericParameterAttributes%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3721-377">Esempio di codice seguente crea un tipo generico con due parametri di tipo, il secondo dei quali ha un vincolo di tipo di base e li salva nell'assembly Genericemitexample1.</span><span class="sxs-lookup"><span data-stu-id="f3721-377">The following code example creates a generic type with two type parameters, the second of which has a base type constraint, and saves them in the assembly GenericEmitExample1.dll.</span></span> <span data-ttu-id="f3721-378">È possibile utilizzare il [Ildasm.exe (Disassembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) per visualizzare i tipi generati.</span><span class="sxs-lookup"><span data-stu-id="f3721-378">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to view the generated types.</span></span> <span data-ttu-id="f3721-379">Per una spiegazione più dettagliata dei passaggi coinvolti nella definizione di un tipo generico dinamico, vedere [procedura: definire un tipo generico tramite Reflection Emit](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md).</span><span class="sxs-lookup"><span data-stu-id="f3721-379">For a more detailed explanation of the steps involved in defining a dynamic generic type, see [How to: Define a Generic Type with Reflection Emit](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md).</span></span>  
  
 [!code-cpp[EmitGenericType#1](~/samples/snippets/cpp/VS_Snippets_CLR/EmitGenericType/CPP/source.cpp#1)]
 [!code-csharp[EmitGenericType#1](~/samples/snippets/csharp/VS_Snippets_CLR/EmitGenericType/CS/source.cs#1)]
 [!code-vb[EmitGenericType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EmitGenericType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-380">Imposta un attributo personalizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-380">Sets a custom attribute.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.Emit.CustomAttributeBuilder customBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (customBuilder As CustomAttributeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::Emit::CustomAttributeBuilder ^ customBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
      </Parameters>
      <Docs>
        <param name="customBuilder">
          <span data-ttu-id="f3721-381">Istanza di una classe di supporto che definisce l'attributo personalizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-381">An instance of a helper class that defines the custom attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-382">Impostare un attributo personalizzato usando un generatore di attributi personalizzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-382">Set a custom attribute using a custom attribute builder.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3721-383">
            <paramref name="customBuilder" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-383">
              <paramref name="customBuilder" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.ConstructorInfo con, unsigned int8[] binaryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (con As ConstructorInfo, binaryAttribute As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Byte&gt; ^ binaryAttribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="binaryAttribute" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="con">
          <span data-ttu-id="f3721-384">Costruttore dell'attributo personalizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-384">The constructor for the custom attribute.</span>
          </span>
        </param>
        <param name="binaryAttribute">
          <span data-ttu-id="f3721-385">BLOB di byte che rappresenta l'attributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-385">A byte blob representing the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-386">Imposta un attributo personalizzato usando un BLOB di attributi personalizzati specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-386">Sets a custom attribute using a specified custom attribute blob.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f3721-387">Per informazioni dettagliate su come formattare `binaryAttribute`, vedere la documentazione relativa a Partition II: definizione dei metadati e semantica.</span><span class="sxs-lookup"><span data-stu-id="f3721-387">For details on how to format `binaryAttribute`, see the documentation for Partition II: Metadata Definition and Semantics.</span></span> <span data-ttu-id="f3721-388">La documentazione è disponibile online; vedere [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) (ECMA C# e standard di Common Language Infrastructure) in MSDN e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) nel sito Web internazionale Ecma.</span><span class="sxs-lookup"><span data-stu-id="f3721-388">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3721-389">
            <paramref name="con" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-389">
              <paramref name="con" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="f3721-390">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-390">-or-</span>
          </span>
          <span data-ttu-id="f3721-391">
            <paramref name="binaryAttribute" /> è un riferimento null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-391">
              <paramref name="binaryAttribute" /> is a null reference.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetGenericParameterAttributes">
      <MemberSignature Language="C#" Value="public void SetGenericParameterAttributes (System.Reflection.GenericParameterAttributes genericParameterAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGenericParameterAttributes(valuetype System.Reflection.GenericParameterAttributes genericParameterAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes(System.Reflection.GenericParameterAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGenericParameterAttributes(System::Reflection::GenericParameterAttributes genericParameterAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericParameterAttributes" Type="System.Reflection.GenericParameterAttributes" />
      </Parameters>
      <Docs>
        <param name="genericParameterAttributes">
          <span data-ttu-id="f3721-392">Combinazione bit per bit di valori <see cref="T:System.Reflection.GenericParameterAttributes" /> che rappresentano le caratteristiche di varianza e i vincoli speciali del parametro di tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-392">A bitwise combination of <see cref="T:System.Reflection.GenericParameterAttributes" /> values that represent the variance characteristics and special constraints of the generic type parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-393">Imposta le caratteristiche di varianza e i vincoli speciali del parametro generico, ad esempio il vincolo del costruttore senza parametri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-393">Sets the variance characteristics and special constraints of the generic parameter, such as the parameterless constructor constraint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-394">I vincoli speciali è possono specificare qualsiasi tipo assegnato al parametro di tipo generico deve avere un costruttore predefinito, deve essere un tipo riferimento o deve essere un tipo di valore.</span><span class="sxs-lookup"><span data-stu-id="f3721-394">Special constraints can specify that any type assigned to the generic type parameter must have a default constructor, must be a reference type, or must be a value type.</span></span>  
  
 <span data-ttu-id="f3721-395">I vincoli speciali possono essere recuperati utilizzando metodi di <xref:System.Reflection.Emit.GenericTypeParameterBuilder> classe.</span><span class="sxs-lookup"><span data-stu-id="f3721-395">Special constraints cannot be retrieved using methods of the <xref:System.Reflection.Emit.GenericTypeParameterBuilder> class.</span></span> <span data-ttu-id="f3721-396">Dopo aver creato il tipo generico che contiene il parametro di tipo, è possibile utilizzare il relativo <xref:System.Type> oggetto in modo da riflettere i parametri di tipo e i vincoli.</span><span class="sxs-lookup"><span data-stu-id="f3721-396">Once you have created the generic type that contains the type parameter, you can use its <xref:System.Type> object to reflect the type parameters and their constraints.</span></span> <span data-ttu-id="f3721-397">Per ottenere i parametri di tipo di un tipo generico completato, usare il <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="f3721-397">To get the type parameters of a completed generic type, use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f3721-398">Per ottenere i vincoli speciali per ogni parametro di tipo, usare il <xref:System.Type.GenericParameterAttributes%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="f3721-398">To get the special constraints for each type parameter, use the <xref:System.Type.GenericParameterAttributes%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="f3721-399">Il <xref:System.Reflection.GenericParameterAttributes> valori di enumerazione che fanno riferimento alle caratteristiche di varianza di un parametro di tipo sono rilevanti solo per le lingue che supportano la covarianza e controvarianza, ad esempio Microsoft intermediate language (MSIL).</span><span class="sxs-lookup"><span data-stu-id="f3721-399">The <xref:System.Reflection.GenericParameterAttributes> enumeration values that refer to the variance characteristics of a type parameter are relevant only in languages that support covariance and contravariance, such as Microsoft intermediate language (MSIL).</span></span> <span data-ttu-id="f3721-400">Visual Basic e c# attualmente non supportano la covarianza e controvarianza.</span><span class="sxs-lookup"><span data-stu-id="f3721-400">Visual Basic and C# currently do not support covariance and contravariance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3721-401">Esempio di codice seguente crea un tipo generico con due parametri di tipo, il primo dei quali è vincolato per avere un costruttore predefinito e deve essere un tipo di riferimento e li salva nell'assembly Genericemitexample1.</span><span class="sxs-lookup"><span data-stu-id="f3721-401">The following code example creates a generic type with two type parameters, the first of which is constrained to have a default constructor and to be a reference type, and saves them in the assembly GenericEmitExample1.dll.</span></span> <span data-ttu-id="f3721-402">È possibile utilizzare il [Ildasm.exe (Disassembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) per visualizzare i tipi generati.</span><span class="sxs-lookup"><span data-stu-id="f3721-402">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to view the generated types.</span></span> <span data-ttu-id="f3721-403">Per una spiegazione più dettagliata dei passaggi coinvolti nella definizione di un tipo generico dinamico, vedere [procedura: definire un tipo generico tramite Reflection Emit](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md).</span><span class="sxs-lookup"><span data-stu-id="f3721-403">For a more detailed explanation of the steps involved in defining a dynamic generic type, see [How to: Define a Generic Type with Reflection Emit](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md).</span></span>  
  
 [!code-cpp[EmitGenericType#1](~/samples/snippets/cpp/VS_Snippets_CLR/EmitGenericType/CPP/source.cpp#1)]
 [!code-csharp[EmitGenericType#1](~/samples/snippets/csharp/VS_Snippets_CLR/EmitGenericType/CS/source.cs#1)]
 [!code-vb[EmitGenericType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EmitGenericType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInterfaceConstraints">
      <MemberSignature Language="C#" Value="public void SetInterfaceConstraints (params Type[] interfaceConstraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetInterfaceConstraints(class System.Type[] interfaceConstraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetInterfaceConstraints (ParamArray interfaceConstraints As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetInterfaceConstraints(... cli::array &lt;Type ^&gt; ^ interfaceConstraints);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceConstraints" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="interfaceConstraints">
          <span data-ttu-id="f3721-404">Matrice di oggetti <see cref="T:System.Type" /> che rappresentano le interfacce che devono essere implementate da un tipo perché questo venga sostituito per il parametro di tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-404">An array of <see cref="T:System.Type" /> objects that represent the interfaces a type must implement in order to be substituted for the type parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3721-405">Imposta le interfacce che devono essere implementate da un tipo perché questo venga sostituito per il parametro di tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-405">Sets the interfaces a type must implement in order to be substituted for the type parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-406">Vincoli di interfaccia possono essere recuperati utilizzando metodi di <xref:System.Reflection.Emit.GenericTypeParameterBuilder> classe.</span><span class="sxs-lookup"><span data-stu-id="f3721-406">Interface constraints cannot be retrieved using methods of the <xref:System.Reflection.Emit.GenericTypeParameterBuilder> class.</span></span> <span data-ttu-id="f3721-407">Dopo aver creato il tipo generico che contiene il parametro di tipo, è possibile utilizzare il relativo <xref:System.Type> oggetto in modo da riflettere i parametri di tipo e i vincoli.</span><span class="sxs-lookup"><span data-stu-id="f3721-407">Once you have created the generic type that contains the type parameter, you can use its <xref:System.Type> object to reflect the type parameters and their constraints.</span></span> <span data-ttu-id="f3721-408">Per ottenere i parametri di tipo di un tipo generico completato, usare il <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="f3721-408">To get the type parameters of a completed generic type, use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f3721-409">Per ogni parametro di tipo, ottenere il tipo di base vincoli di interfaccia e vincolo utilizzando la <xref:System.Type.GetGenericParameterConstraints%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="f3721-409">For each type parameter, get the base type constraint and interface constraints by using the <xref:System.Type.GetGenericParameterConstraints%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3721-410">Esempio di codice seguente crea un tipo generico con due parametri di tipo, il secondo dei quali dispone di due vincoli di interfaccia e li salva nell'assembly Genericemitexample1.</span><span class="sxs-lookup"><span data-stu-id="f3721-410">The following code example creates a generic type with two type parameters, the second of which has two interface constraints, and saves them in the assembly GenericEmitExample1.dll.</span></span> <span data-ttu-id="f3721-411">È possibile utilizzare il [Ildasm.exe (Disassembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) per visualizzare i tipi generati.</span><span class="sxs-lookup"><span data-stu-id="f3721-411">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to view the generated types.</span></span> <span data-ttu-id="f3721-412">Per una spiegazione più dettagliata dei passaggi coinvolti nella definizione di un tipo generico dinamico, vedere [procedura: definire un tipo generico tramite Reflection Emit](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md).</span><span class="sxs-lookup"><span data-stu-id="f3721-412">For a more detailed explanation of the steps involved in defining a dynamic generic type, see [How to: Define a Generic Type with Reflection Emit](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md).</span></span>  
  
 [!code-cpp[EmitGenericType#1](~/samples/snippets/cpp/VS_Snippets_CLR/EmitGenericType/CPP/source.cpp#1)]
 [!code-csharp[EmitGenericType#1](~/samples/snippets/csharp/VS_Snippets_CLR/EmitGenericType/CS/source.cs#1)]
 [!code-vb[EmitGenericType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EmitGenericType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3721-413">Restituisce una rappresentazione in formato stringa del parametro di tipo generico corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-413">Returns a string representation of the current generic type parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3721-414">Stringa che contiene il nome del parametro di tipo generico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-414">A string that contains the name of the generic type parameter.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeHandle">
      <MemberSignature Language="C#" Value="public override RuntimeTypeHandle TypeHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeTypeHandle TypeHandle" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.TypeHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeHandle As RuntimeTypeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property RuntimeTypeHandle TypeHandle { RuntimeTypeHandle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeTypeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-415">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-415">Not supported for incomplete generic type parameters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3721-416">Valore non supportato per i parametri di tipo generico incompleti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-416">Not supported for incomplete generic type parameters.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3721-417">Questa proprietà non è supportata per i parametri di tipo generico incompleti.</span><span class="sxs-lookup"><span data-stu-id="f3721-417">This property is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="f3721-418">Recuperare il parametro di tipo dalla definizione del tipo generico completo e quindi usare la reflection sul tipo recuperato.</span><span class="sxs-lookup"><span data-stu-id="f3721-418">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3721-419">In tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-419">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public override Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3721-420">Ottiene il parametro di tipo generico corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-420">Gets the current generic type parameter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3721-421">Oggetto <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3721-421">The current <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>