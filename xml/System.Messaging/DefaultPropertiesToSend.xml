<Type Name="DefaultPropertiesToSend" FullName="System.Messaging.DefaultPropertiesToSend">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1de27b1a67d05f78b04bbb5ab0355aca953652da" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36477355" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DefaultPropertiesToSend" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultPropertiesToSend extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.DefaultPropertiesToSend" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultPropertiesToSend" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultPropertiesToSend" />
  <TypeSignature Language="F#" Value="type DefaultPropertiesToSend = class" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifica i valori predefiniti delle proprietà che verranno utilizzati per l'invio di oggetti diversi da istanze <see cref="T:System.Messaging.Message" /> a una coda di messaggi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile impostare i valori predefiniti per le proprietà selezionate per i messaggi inviati a un <xref:System.Messaging.MessageQueue>. <xref:System.Messaging.DefaultPropertiesToSend> Consente di specificare valori predefiniti della proprietà il messaggio inviato quando gli oggetti diverso da <xref:System.Messaging.Message> le istanze vengono inviate a una coda, ad esempio, l'argomento di stringa passato il <xref:System.Messaging.MessageQueue.Send%2A> metodo nel frammento di codice, `myMessageQueue.Send("hello")`. Il <xref:System.Messaging.Message> classe è denominato in modo identico a quelli di proprietà corrispondente <xref:System.Messaging.DefaultPropertiesToSend> che forniscono i valori per l'invio di un <xref:System.Messaging.Message> istanza in modo specifico. Anche se è stato specificato <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> per una coda, l'invio di un <xref:System.Messaging.Message> oggetto alla coda determinerà i valori per lo stesso nome <xref:System.Messaging.Message> delle proprietà per eseguire l'override della coda <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> valori.  
  
 Impostazione predefinita per i valori specificati dal costruttore, proprietà che non si imposta in modo esplicito <xref:System.Messaging.DefaultPropertiesToSend.%23ctor%2A>.  
  
 Per un elenco di valori di proprietà iniziali per un'istanza di <xref:System.Messaging.DefaultPropertiesToSend>, vedere il <xref:System.Messaging.DefaultPropertiesToSend> costruttore.  
  
   
  
## Examples  
 Esempio di codice seguente usa la priorità di un messaggio per determinare le proprietà predefinite per l'invio del messaggio.  
  
 [!code-cpp[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/CPP/mqdefaultpropertiestosend.cpp#1)]
 [!code-csharp[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/CS/mqdefaultpropertiestosend.cs#1)]
 [!code-vb[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/VB/mqdefaultpropertiestosend.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.Message" />
    <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultPropertiesToSend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.DefaultPropertiesToSend.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultPropertiesToSend();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Messaging.DefaultPropertiesToSend" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile creare una nuova istanza della <xref:System.Messaging.DefaultPropertiesToSend> per definire valori predefiniti delle proprietà da associare gli oggetti inviati a una coda che non sono di tipo <xref:System.Messaging.Message>. Quando si lavora con <xref:System.Messaging.MessageQueue> oggetti, una <xref:System.Messaging.DefaultPropertiesToSend> istanza viene creata e associata con il <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> membro del <xref:System.Messaging.MessageQueue>.  
  
 Esistono due modi per definire le proprietà predefinite della coda per l'invio, come illustrato nel codice c# seguente. È possibile impostare i valori per questa istanza di <xref:System.Messaging.DefaultPropertiesToSend> e associarlo alla coda <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> proprietà:  
  
```  
DefaultPropertiesToSend myDefaultProperties = new DefaultPropertiesToSend();  
  // Set default values for the properties.  
  myDefaultProperties.Label = "myLabel";  
  myDefaultProperties.Recoverable = false;  
 ...  
  myMessageQueue.DefaultPropertiesToSend = myDefaultProperties;  
  myMessageQueue.Send("hello");  
```  
  
 Oppure, è possibile assegnare singolarmente i valori per il <xref:System.Messaging.MessageQueue> dell'istanza <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> proprietà direttamente:  
  
```  
myMessageQueue.DefaultPropertiesToSend.Label = "myLabel";  
  myMessageQueue.DefaultPropertiesToSend.Recoverable = false;  
...  
  myMessageQueue.Send("hello");  
```  
  
 Se si sceglie la seconda di queste opzioni, non è necessario chiamare il <xref:System.Messaging.DefaultPropertiesToSend.%23ctor%2A> costruttore in modo esplicito. È possibile creare istanze di <xref:System.Messaging.DefaultPropertiesToSend>, ad esempio, se i valori predefiniti delle proprietà dipendono da alcuni criteri del messaggio inviato. È possibile creare più <xref:System.Messaging.DefaultPropertiesToSend> istanze e assegnarli alla coda <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> proprietà prima di inviare il messaggio alla coda.  
  
 La tabella seguente illustra i valori di proprietà iniziali per un'istanza di <xref:System.Messaging.DefaultPropertiesToSend>.  
  
|Proprietà|Valore iniziale|  
|--------------|-------------------|  
|<xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A>|`AcknowledgeTypes.None`|  
|<xref:System.Messaging.DefaultPropertiesToSend.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>|0|  
|<xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>|Una matrice di lunghezza zero byte|  
|<xref:System.Messaging.DefaultPropertiesToSend.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Label%2A>|Una stringa vuota ("")|  
|<xref:System.Messaging.DefaultPropertiesToSend.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseTracing%2A>|`false`|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
        <altmember cref="T:System.Messaging.EncryptionAlgorithm" />
        <altmember cref="T:System.Messaging.HashAlgorithm" />
        <altmember cref="T:System.Messaging.MessagePriority" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="AcknowledgeType">
      <MemberSignature Language="C#" Value="public System.Messaging.AcknowledgeTypes AcknowledgeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.AcknowledgeTypes AcknowledgeType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
      <MemberSignature Language="VB.NET" Value="Public Property AcknowledgeType As AcknowledgeTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AcknowledgeTypes AcknowledgeType { System::Messaging::AcknowledgeTypes get(); void set(System::Messaging::AcknowledgeTypes value); };" />
      <MemberSignature Language="F#" Value="member this.AcknowledgeType : System.Messaging.AcknowledgeTypes with get, set" Usage="System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAcknowledgeType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AcknowledgeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tipo di messaggio di riconoscimento da restituire all'applicazione che esegue l'invio.</summary>
        <value>Uno dei valori dell'enumerazione <see cref="T:System.Messaging.AcknowledgeTypes" />. Questo valore viene utilizzato per determinare il tipo di messaggi di riconoscimento che il sistema invia alla coda di amministrazione e quando tali messaggi ritornano all'applicazione che li ha inviati. Il valore predefinito è <see langword="AcknowledgeTypes.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> proprietà specifica il tipo di messaggi di riconoscimento da restituire all'applicazione mittente. Ad esempio, impostare il <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> proprietà per richiedere la notifica quando un messaggio raggiunga la destinazione, quando viene recuperato o se un timeout ha impedito il messaggio di raggiungimento o il recupero dalla coda di destinazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
      </Docs>
    </Member>
    <Member MemberName="AdministrationQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue AdministrationQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue AdministrationQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AdministrationQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property AdministrationQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ AdministrationQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AdministrationQueue : System.Messaging.MessageQueue with get, set" Usage="System.Messaging.DefaultPropertiesToSend.AdministrationQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAdministrationQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la coda di ricezione dei messaggi di riconoscimento generati da Accodamento messaggi.</summary>
        <value>La proprietà <see cref="T:System.Messaging.MessageQueue" /> che specifica la coda di amministrazione utilizzata per i messaggi di riconoscimento generati dal sistema. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La coda specificata nella <xref:System.Messaging.DefaultPropertiesToSend.AdministrationQueue%2A> proprietà può essere una coda non transazionale. I messaggi di riconoscimento inviati alla coda di amministrazione possono indicare o meno il messaggio originale ha raggiunto la coda di destinazione e se è stato rimosso dalla coda.  
  
 Quando il <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> proprietà ha un valore diverso da `None`, l'applicazione di invio deve specificare la coda da utilizzare come coda di amministrazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
      </Docs>
    </Member>
    <Member MemberName="AppSpecific">
      <MemberSignature Language="C#" Value="public int AppSpecific { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AppSpecific" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AppSpecific" />
      <MemberSignature Language="VB.NET" Value="Public Property AppSpecific As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AppSpecific { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AppSpecific : int with get, set" Usage="System.Messaging.DefaultPropertiesToSend.AppSpecific" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAppSpecific")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta informazioni aggiuntive specifiche di un'applicazione.</summary>
        <value>Informazioni specifiche dell'applicazione. Il valore predefinito è 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A> proprietà contiene informazioni aggiuntive, specifiche dell'applicazione che possono essere usate per organizzare diversi tipi di messaggi, ad esempio, utilizzare indici specifici dell'applicazione. È compito dell'applicazione per interpretare <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A> informazioni.  
  
 Dove possibile, dati di messaggio devono essere inclusi nel corpo del messaggio anziché nel <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A> proprietà.  
  
 Quando si utilizzano code esterne, utilizzare il <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> proprietà per specificare le proprietà di non - messaggio di Accodamento messaggi. Come con <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>, è compito dell'applicazione da riconoscere il contenuto del <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.Extension" />
        <altmember cref="P:System.Messaging.Message.AppSpecific" />
      </Docs>
    </Member>
    <Member MemberName="AttachSenderId">
      <MemberSignature Language="C#" Value="public bool AttachSenderId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AttachSenderId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId" />
      <MemberSignature Language="VB.NET" Value="Public Property AttachSenderId As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AttachSenderId { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AttachSenderId : bool with get, set" Usage="System.Messaging.DefaultPropertiesToSend.AttachSenderId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAttachSenderId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'ID del mittente deve essere allegato al messaggio.</summary>
        <value>
          <see langword="true" /> se l'ID del mittente deve essere allegato al messaggio; <see langword="false" /> in caso contrario. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'ID del mittente è una matrice di byte che rappresenta l'identificatore del mittente. L'ID mittente impostata da Accodamento e viene utilizzato dal gestore delle code ricevente per verificare se il mittente disponga di diritti di accesso a una coda. L'ID del mittente è affidabile solo se il messaggio è stato autenticato quando ha raggiunto la coda di destinazione.  
  
 Quando l'ID mittente non è collegato al messaggio, l'applicazione di invio indica che il servizio Accodamento messaggi non deve convalidare il mittente del messaggio quando il messaggio viene inviato alla coda di destinazione. Se la coda di destinazione accetta solo messaggi autenticati e la <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> oppure <xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A> è `false`, il messaggio verrà rifiutato quando raggiunge la coda.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.HashAlgorithm" />
        <altmember cref="P:System.Messaging.Message.AttachSenderId" />
        <altmember cref="P:System.Messaging.Message.SenderId" />
      </Docs>
    </Member>
    <Member MemberName="EncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionAlgorithm EncryptionAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionAlgorithm EncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionAlgorithm As EncryptionAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionAlgorithm EncryptionAlgorithm { System::Messaging::EncryptionAlgorithm get(); void set(System::Messaging::EncryptionAlgorithm value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionAlgorithm : System.Messaging.EncryptionAlgorithm with get, set" Usage="System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgEncryptionAlgorithm")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'algoritmo di crittografia utilizzato per crittografare il corpo di un messaggio privato.</summary>
        <value>Uno dei valori dell'enumerazione <see cref="T:System.Messaging.EncryptionAlgorithm" />. Il valore predefinito è <see langword="RC2" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se un messaggio è privato, si viene crittografato prima di essere inviato e viene decrittografato quando viene ricevuto. Il <xref:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm%2A> proprietà specifica l'algoritmo utilizzato per crittografare il corpo di un messaggio privato.  
  
 Una coda può richiedere che in ingresso dei messaggi crittografati. Se un messaggio non crittografato (pubblici) viene inviato a una coda che accetta solo messaggi privati o se viene inviato un messaggio privato a una coda che accetta solo messaggi non privati, il messaggio viene rifiutato dalla coda. Applicazione mittente può richiedere restituito all'applicazione mittente un messaggio di riconoscimento negativo se il messaggio è stato rifiutato.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseEncryption" />
        <altmember cref="P:System.Messaging.MessageQueue.EncryptionRequired" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.EncryptionAlgorithm" />
        <altmember cref="T:System.Messaging.EncryptionAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="Extension">
      <MemberSignature Language="C#" Value="public byte[] Extension { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Extension" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Extension" />
      <MemberSignature Language="VB.NET" Value="Public Property Extension As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Extension { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Extension : byte[] with get, set" Usage="System.Messaging.DefaultPropertiesToSend.Extension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.ArrayEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgExtension")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta informazioni aggiuntive associate al messaggio.</summary>
        <value>Matrice di byte che fornisce informazioni aggiuntive, definite dall'applicazione e associate al messaggio. L'impostazione predefinita è una matrice di lunghezza zero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> proprietà fornisce informazioni aggiuntive definite dall'applicazione associate al messaggio, ad esempio un oggetto binario di grandi dimensioni. È compito dell'applicazione ricevente per interpretare il contenuto del <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>.  
  
 Dove possibile, i dati di messaggio devono essere inclusi nel corpo del messaggio invece che nell'estensione.  
  
 Quando si utilizzano code esterne, utilizzare il <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> proprietà per specificare le proprietà di non - messaggio di Accodamento messaggi.  
  
 Esiste una coda esterna in un sistema di accodamento diverso da Accodamento messaggi Microsoft. Accodamento messaggi Microsoft comunica con queste code tramite un'applicazione di connessione.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AppSpecific" />
        <altmember cref="P:System.Messaging.Message.Extension" />
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Messaging.HashAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.HashAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As HashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::HashAlgorithm HashAlgorithm { System::Messaging::HashAlgorithm get(); void set(System::Messaging::HashAlgorithm value); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Messaging.HashAlgorithm with get, set" Usage="System.Messaging.DefaultPropertiesToSend.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgHashAlgorithm")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'algoritmo hash utilizzato per autenticare i messaggi o creare una firma digitale per un messaggio.</summary>
        <value>Uno dei valori dell'enumerazione <see cref="T:System.Messaging.HashAlgorithm" />. Il valore predefinito è <see langword="MD5" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Messaging.DefaultPropertiesToSend.HashAlgorithm%2A> proprietà identifica l'algoritmo hash utilizzato da Accodamento durante l'autenticazione dei messaggi o durante la creazione di una firma digitale di un messaggio.  
  
 Il servizio Accodamento messaggi nel computer di origine utilizza l'algoritmo hash durante la creazione di una firma digitale di un messaggio. Il gestore delle code di destinazione utilizza quindi lo stesso algoritmo hash per autenticare il messaggio quando viene ricevuto.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.Message.HashAlgorithm" />
        <altmember cref="T:System.Messaging.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.Messaging.DefaultPropertiesToSend.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgLabel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una stringa definita dall'applicazione che descrive il messaggio.</summary>
        <value>L'etichetta del messaggio. Il valore predefinito è una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'etichetta di messaggio è utilizzabile per scopi di visualizzazione, ad esempio, o per elaborare in modo selettivo i messaggi in base al valore di etichetta. La lunghezza massima consentita per un'etichetta di messaggio è di 249 caratteri Unicode. L'etichetta non dovrà essere univoco all'interno dei messaggi.  
  
 Coda di messaggi e le etichette di messaggio rappresentano un valore definito dall'applicazione che può aiutare a identificare la coda o un messaggio in termini leggibili. È compito dell'applicazione per interpretare il contenuto di etichetta; non hanno alcun significato intrinseco per l'applicazione di Accodamento messaggi.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.Message.Label" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Messaging.MessagePriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.MessagePriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As MessagePriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessagePriority Priority { System::Messaging::MessagePriority get(); void set(System::Messaging::MessagePriority value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Messaging.MessagePriority with get, set" Usage="System.Messaging.DefaultPropertiesToSend.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgPriority")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessagePriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la priorità del messaggio, che viene utilizzata per determinare la posizione del messaggio nella coda.</summary>
        <value>Uno dei valori di enumerazione di <see cref="T:System.Messaging.MessagePriority" /> che rappresenta il livello di priorità di un messaggio non transazionale. Il valore predefinito è <see langword="Normal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Messaging.DefaultPropertiesToSend.Priority%2A> proprietà influenza il modo in cui il messaggio viene inserito nella coda quando raggiunge la destinazione cui Accodamento messaggi gestisce il messaggio durante l'indirizzamento. Messaggi con priorità superiore sono il preferenza durante l'instradamento e inseriti nella parte anteriore della coda. I messaggi con la stessa priorità vengono inseriti nella coda in base all'ora di arrivo.  
  
 Priorità del messaggio può essere impostata in modo significativo solo per i messaggi non transazionali. La priorità per i messaggi transazionali è automaticamente impostata su `Lowest`, che comporta l'esecuzione priorità messaggio transazionale viene ignorata.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.BasePriority" />
        <altmember cref="P:System.Messaging.Message.Priority" />
        <altmember cref="T:System.Messaging.MessagePriority" />
      </Docs>
    </Member>
    <Member MemberName="Recoverable">
      <MemberSignature Language="C#" Value="public bool Recoverable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Recoverable" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Recoverable" />
      <MemberSignature Language="VB.NET" Value="Public Property Recoverable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Recoverable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Recoverable : bool with get, set" Usage="System.Messaging.DefaultPropertiesToSend.Recoverable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgRecoverable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica che il recapito del messaggio è garantito anche nel caso di un malfunzionamento del computer o di un problema di rete.</summary>
        <value>
          <see langword="true" /> se la consegna del messaggio è garantita tramite il salvataggio del messaggio sul disco durante l'indirizzamento; <see langword="false" /> se la consegna non è garantita. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> proprietà indica se è garantito il recapito di un messaggio, anche se il computer si blocca durante il messaggio di indirizzamento alla coda di destinazione.  
  
 Se è garantito il recapito di un messaggio, il messaggio viene archiviato in locale in ogni fase della route fino a quando il messaggio viene inoltrato al computer successivo. L'impostazione <xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> al `true` su <xref:System.Messaging.DefaultPropertiesToSend> compromettere la velocità effettiva.  
  
 Se il messaggio è transazionale, Accodamento messaggi gestisce automaticamente il messaggio come recuperabile, indipendentemente dal fatto che <xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> è impostata su `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
        <altmember cref="P:System.Messaging.Message.Recoverable" />
      </Docs>
    </Member>
    <Member MemberName="ResponseQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue ResponseQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue ResponseQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.ResponseQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ ResponseQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseQueue : System.Messaging.MessageQueue with get, set" Usage="System.Messaging.DefaultPropertiesToSend.ResponseQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgResponseQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la coda che riceve i messaggi di risposta generati dall'applicazione.</summary>
        <value>La proprietà <see cref="T:System.Messaging.MessageQueue" /> alla quale vengono restituiti i messaggi di risposta generati dall'applicazione. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Messaging.DefaultPropertiesToSend.ResponseQueue%2A> proprietà identifica la coda che riceve i messaggi di risposta generati dall'applicazione che vengono restituiti all'applicazione mittente dall'applicazione ricevente. Le code di risposta vengono specificate dall'applicazione mittente quando l'applicazione invia i messaggi. È possibile specificare come coda di risposta qualsiasi coda disponibile.  
  
 I messaggi restituiti alla coda di risposta sono specifici dell'applicazione. L'applicazione deve definire novità nei messaggi e le operazioni da eseguire quando viene ricevuto un messaggio.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
      </Docs>
    </Member>
    <Member MemberName="TimeToBeReceived">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToBeReceived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToBeReceived" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToBeReceived As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToBeReceived { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToBeReceived : TimeSpan with get, set" Usage="System.Messaging.DefaultPropertiesToSend.TimeToBeReceived" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTimeToBeReceived")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il limite di tempo per il recupero del messaggio dalla coda di destinazione.</summary>
        <value>Il tempo totale in secondi necessario per la ricezione di un messaggio da parte della coda di destinazione. Il valore predefinito è <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> proprietà specifica il tempo totale espresso in secondi per un messaggio venga ricevuto dalla coda di destinazione. Questo limite di tempo comprende il tempo impiegato per raggiungere la coda di destinazione, più il tempo di attesa nella coda prima che il messaggio viene recuperato da un'applicazione.  
  
> [!CAUTION]
>  Quando si usano i computer client dipendenti, sincronizzare l'orologio del computer client con l'orologio del server che eseguono Accodamento messaggi. Se non sono sincronizzati gli orologi di due, si potrebbe riscontrare un comportamento imprevedibile durante l'invio dei messaggi quando <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> non è <xref:System.Messaging.Message.InfiniteTimeout>.  
  
 Se il <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> intervallo scade prima che il messaggio viene rimosso dalla coda, l'applicazione di Accodamento messaggi Elimina il messaggio. Il messaggio viene inviato per la coda di messaggi non recapitabili, se il messaggio <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> è impostata su `true`, o ignorato se <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> è `false`. Se <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> è minore <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>, <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> ha la precedenza.  
  
 Il messaggio <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> proprietà può essere impostata per richiedere che Accodamento messaggi invia un messaggio di riconoscimento negativo nuovamente all'applicazione mittente se non viene recuperato il messaggio prima della scadenza del timer.  
  
> [!CAUTION]
>  Se è stato specificato per ricevere <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> riconoscimenti negativi, è non li riceveranno quando il valore di <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> è minore del valore di <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>.  
  
 Quando più messaggi vengono inviati in una transazione, Accodamento messaggi utilizza il valore del primo messaggio <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.Message.TimeToBeReceived" />
      </Docs>
    </Member>
    <Member MemberName="TimeToReachQueue">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToReachQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToReachQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToReachQueue As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToReachQueue { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToReachQueue : TimeSpan with get, set" Usage="System.Messaging.DefaultPropertiesToSend.TimeToReachQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTimeToReachQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il limite di tempo impiegato dal messaggio per raggiungere la coda.</summary>
        <value>Il limite di tempo in secondi necessario a un messaggio, dal momento in cui viene inviato, per raggiungere la coda di destinazione. Il valore predefinito è <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> intervallo scade prima che il messaggio raggiunga la destinazione, l'applicazione di Accodamento messaggi Elimina il messaggio. Il messaggio viene inviato per la coda di messaggi non recapitabili, se il messaggio <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> è impostata su `true`, o ignorato se <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> è `false`. Se <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> è maggiore <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>, <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> ha la precedenza.  
  
 Il messaggio <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> proprietà può essere impostata per richiedere che Accodamento messaggi invia un messaggio di riconoscimento negativo all'applicazione mittente se il messaggio non arrivano prima della scadenza del timer.  
  
 Se <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> è 0 secondi, Accodamento messaggi esegue un tentativo di inviare il messaggio alla destinazione se la coda è in attesa del messaggio. Se la coda è locale, il messaggio raggiunga sempre la coda.  
  
 Quando più messaggi vengono inviati in una transazione, Accodamento messaggi utilizza il valore del primo messaggio <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.Message.TimeToReachQueue" />
      </Docs>
    </Member>
    <Member MemberName="TransactionStatusQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue TransactionStatusQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue TransactionStatusQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionStatusQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ TransactionStatusQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionStatusQueue : System.Messaging.MessageQueue with get, set" Usage="System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTransactionStatusQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la coda di stato della transazione sul computer di origine.</summary>
        <value>La coda di stato della transazione sul computer di origine, utilizzata per restituire messaggi di riconoscimento all'applicazione mittente. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue%2A> proprietà identifica la coda di stato transazioni sul computer di origine. Le proprietà impostate da Accodamento e viene utilizzata dalle applicazioni di connessione durante il recupero di messaggi di transazione inviati a una coda esterna.  
  
 Esiste una coda esterna in un sistema di accodamento diverso da Accodamento messaggi Microsoft. Accodamento messaggi Microsoft comunica con queste code tramite un'applicazione di connessione.  
  
 L'applicazione di connessione possa utilizzare la coda di stato di transazione per inviare messaggi di riconoscimento all'applicazione mittente. La coda di stato di transazione deve ricevere questi riconoscimenti anche se l'applicazione di invio non richiede altri.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
        <altmember cref="P:System.Messaging.Message.TransactionStatusQueue" />
      </Docs>
    </Member>
    <Member MemberName="UseAuthentication">
      <MemberSignature Language="C#" Value="public bool UseAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAuthentication { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAuthentication : bool with get, set" Usage="System.Messaging.DefaultPropertiesToSend.UseAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseAuthentication")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il messaggio deve essere autenticato prima del suo invio.</summary>
        <value>
          <see langword="true" /> se l'applicazione mittente richiede l'autenticazione del messaggio; <see langword="false" /> in caso contrario. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> proprietà specifica se il messaggio deve essere autenticato. Se l'applicazione mittente lo richiede l'autenticazione, Accodamento messaggi consente di creare una firma digitale e viene utilizzata per firmare il messaggio durante l'invio e per autenticare il messaggio quando viene ricevuto.  
  
 Se un messaggio viene inviato a una coda che accetta solo messaggi autenticati, il messaggio verrà rifiutato quando raggiunge la coda se <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> è impostata su `false`.  
  
 Non è possibile esaminare le proprietà di un messaggio e determinare se un messaggio di autenticazione non riuscita. I messaggi che l'autenticazione non riesce vengono ignorati e non vengono recapitati alla coda.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
      </Docs>
    </Member>
    <Member MemberName="UseDeadLetterQueue">
      <MemberSignature Language="C#" Value="public bool UseDeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDeadLetterQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDeadLetterQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDeadLetterQueue : bool with get, set" Usage="System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseDeadLetterQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se una copia del messaggio non recapitato deve essere inviata a una coda dei messaggi non recapitabili.</summary>
        <value>
          <see langword="true" /> se la mancata consegna del messaggio deve risultare in una copia del messaggio inviato a una coda di messaggi non consegnati; <see langword="false" /> in caso contrario. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> e <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> specificano come il servizio Accodamento messaggi terrà traccia di un messaggio. Se <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> è `true`, quindi in caso di errore di recapito (per i messaggi non transazionale), il messaggio viene inviato alla coda non transazionale recapitabili sul computer che non è stato possibile recapitare il messaggio (ad esempio, se il timer di un messaggio scade).  
  
 Nel caso di errore di recapito messaggi di transazione, il messaggio viene inviato alla coda inattiva transazionale nel computer di origine in tutti i casi negativi e in dubbio.  
  
 Quando si archiviano i messaggi in una coda di messaggi non recapitabili, svuotare la coda periodicamente per rimuovere i messaggi che non sono più necessari. Messaggi memorizzati nel recapitabili conteggio ai fini della quota di dimensioni per il computer in cui risiede la coda. La quota del computer è impostata dall'amministratore e fa riferimento alla dimensione totale allocata per memorizzare messaggi in un computer, non solo in una singola coda.  
  
 Non si crea una coda del diario o inattiva. Sono entrambe code di sistema che vengono generati da Accodamento messaggi.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
      </Docs>
    </Member>
    <Member MemberName="UseEncryption">
      <MemberSignature Language="C#" Value="public bool UseEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseEncryption" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property UseEncryption As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseEncryption { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseEncryption : bool with get, set" Usage="System.Messaging.DefaultPropertiesToSend.UseEncryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseEncryption")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se rendere privato il messaggio.</summary>
        <value>
          <see langword="true" /> per richiedere ad Accodamento messaggi di crittografare il messaggio; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se un messaggio è privato, il corpo viene crittografato prima di essere inviato e viene decrittografato quando viene ricevuto. Per inviare un messaggio privato, l'applicazione di invio deve specificare che la crittografia utilizzabile e, facoltativamente, l'algoritmo di crittografia da applicare.  
  
 Quando si inviano messaggi privati, non è necessario che l'applicazione esegua la crittografia del messaggio. Messaggio di Accodamento messaggi possono crittografare il corpo del messaggio per l'utente quando l'applicazione invia messaggi all'interno di un'organizzazione di Microsoft Windows 2000 in cui è presente l'accesso al servizio directory. Quando si ricevono messaggi privati, è sempre il gestore delle code ricevente che decrittografa il corpo del messaggio.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm" />
        <altmember cref="P:System.Messaging.MessageQueue.EncryptionRequired" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseJournalQueue : bool with get, set" Usage="System.Messaging.DefaultPropertiesToSend.UseJournalQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseJournalQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se è necessario inserire una copia del messaggio nel journal del computer di origine.</summary>
        <value>
          <see langword="true" /> per richiedere che venga memorizzata una copia di un messaggio nel journal del computer di origine dopo la trasmissione dal computer di origine a un altro computer; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> e <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> specificano come il servizio Accodamento messaggi terrà traccia di un messaggio. Se <xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> è `true`, quindi a ogni passaggio che un messaggio viene trasmesso, una copia viene mantenuta nella coda journal di computer nel computer di origine.  
  
 Il messaggio inviato verrà copiato nella coda journal solo se la coda di destinazione si trova in un computer remoto. Se la destinazione è nel computer locale, il messaggio viene inviato direttamente alla coda. non sono passaggi intermedi in modo da richiedere l'inserimento nel journal.  
  
 Quando si archiviano i messaggi in una coda journal, svuotare la coda periodicamente per rimuovere i messaggi che non sono più necessari. I messaggi archiviati in code diario ai fini della quota per il computer in cui risiede la coda (la quota del computer è impostata dall'amministratore).  
  
 Non si crea una coda del diario o inattiva. Sono entrambe code di sistema che vengono generati da Accodamento messaggi.  
  
 È possibile specificare l'inserimento nel journal per la coda sia al messaggio. Quando si <xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A?displayProperty=nameWithType> è `true`, il messaggio è del diario durante l'invio. Quando si <xref:System.Messaging.MessageQueue.UseJournalQueue%2A?displayProperty=nameWithType> è `true`, il messaggio è del diario quando viene ricevuto.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
        <altmember cref="P:System.Messaging.MessageQueue.UseJournalQueue" />
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
        <altmember cref="P:System.Messaging.Message.UseJournalQueue" />
      </Docs>
    </Member>
    <Member MemberName="UseTracing">
      <MemberSignature Language="C#" Value="public bool UseTracing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseTracing" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
      <MemberSignature Language="VB.NET" Value="Public Property UseTracing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseTracing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseTracing : bool with get, set" Usage="System.Messaging.DefaultPropertiesToSend.UseTracing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseTracing")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se tenere traccia di un messaggio mentre procede verso la coda di destinazione.</summary>
        <value>
          <see langword="true" /> per generare un report da inviare alla coda dei report di sistema per ciascuna fase intermedia dello spostamento del messaggio originale alla coda di destinazione; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Messaging.DefaultPropertiesToSend.UseTracing%2A> proprietà specifica se tenere traccia della route di un messaggio durante lo spostamento verso la coda di destinazione. Se `true`, un messaggio di rapporto generato da Accodamento-viene inviato alla coda dei rapporti ogni volta che il messaggio passa attraverso un server di Accodamento. La coda del report viene specificata dal gestore code di origine. Le code del report non sono limitate ai messaggi di Accodamento messaggi generati dal report. I messaggi generati dall'applicazione possono essere inviati alle code di report nonché.  
  
 Utilizzo delle tracce, è necessario configurare Active Directory e specificare una coda dei rapporti di Accodamento messaggi. Queste impostazioni vengono configurate dall'amministratore.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue" />
        <altmember cref="P:System.Messaging.Message.UseTracing" />
      </Docs>
    </Member>
  </Members>
</Type>