<Type Name="ReceiveCompletedEventArgs" FullName="System.Messaging.ReceiveCompletedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2ce9c98f0b219b152b6fc43b83c980bbac0b4e6a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30459885" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ReceiveCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReceiveCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.ReceiveCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ReceiveCompletedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReceiveCompletedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7ff46-101">Fornisce dati per l'evento <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7ff46-101">Provides data for the <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> event.</span>
      </span>
      <span data-ttu-id="7ff46-102">Quando l'operazione di ricezione asincrona chiama un gestore eventi, un'istanza di questa classe viene passata al gestore.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7ff46-102">When your asynchronous receive operation calls an event handler, an instance of this class is passed to the handler.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ff46-103">Quando si utilizza la notifica dell'evento per ricevere in modo asincrono i messaggi dalla coda, è necessario creare un metodo che gestisce l'elaborazione del messaggio.</span><span class="sxs-lookup"><span data-stu-id="7ff46-103">When you use event notification to receive messages asynchronously from the queue, you must create a method that handles your message processing.</span></span> <span data-ttu-id="7ff46-104">Il codice deve chiamare <xref:System.Messaging.MessageQueue.BeginReceive%2A> per iniziare l'elaborazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="7ff46-104">Your code must call <xref:System.Messaging.MessageQueue.BeginReceive%2A> to begin the asynchronous processing.</span></span> <span data-ttu-id="7ff46-105">Quando viene ricevuto un messaggio, l'applicazione riceve una notifica tramite il <xref:System.Messaging.MessageQueue.ReceiveCompleted> evento.</span><span class="sxs-lookup"><span data-stu-id="7ff46-105">When a message is received, your application is notified through the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event.</span></span> <span data-ttu-id="7ff46-106">Un'istanza di <xref:System.Messaging.ReceiveCompletedEventArgs> viene passato al delegato dell'evento che chiama il gestore eventi.</span><span class="sxs-lookup"><span data-stu-id="7ff46-106">An instance of <xref:System.Messaging.ReceiveCompletedEventArgs> is passed into the event delegate that calls your event handler.</span></span> <span data-ttu-id="7ff46-107">I dati associati con la <xref:System.Messaging.MessageQueue.ReceiveCompleted> evento è contenuto in del delegato <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> parametro.</span><span class="sxs-lookup"><span data-stu-id="7ff46-107">The data associated with the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is contained in the delegate's <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> parameter.</span></span>  
  
 <span data-ttu-id="7ff46-108">Esistono due modi per fornire la notifica di completamento evento: notifica degli eventi e callback.</span><span class="sxs-lookup"><span data-stu-id="7ff46-108">There are two ways to provide notification of event completion: event notification and callbacks.</span></span> <span data-ttu-id="7ff46-109"><xref:System.Messaging.ReceiveCompletedEventArgs> viene utilizzato solo con la notifica dell'evento.</span><span class="sxs-lookup"><span data-stu-id="7ff46-109"><xref:System.Messaging.ReceiveCompletedEventArgs> is used only with event notification.</span></span> <span data-ttu-id="7ff46-110">Per informazioni di confronto di callback e notifica degli eventi, vedere "eventi Visual Studio. Callback"su MSDN.</span><span class="sxs-lookup"><span data-stu-id="7ff46-110">For information comparing callbacks and event notification, see "Events vs. Callbacks" on MSDN.</span></span>  
  
 <span data-ttu-id="7ff46-111"><xref:System.Messaging.ReceiveCompletedEventArgs> fornisce l'accesso al messaggio che ha avviato la fine di asincrona operazione di ricezione, tramite il <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> membro.</span><span class="sxs-lookup"><span data-stu-id="7ff46-111"><xref:System.Messaging.ReceiveCompletedEventArgs> provides access to the message that initiated the end of the asynchronous receive operation, through the <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> member.</span></span> <span data-ttu-id="7ff46-112">Si tratta di un accesso alternativo per il messaggio e si comporta come una chiamata a <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7ff46-112">This is an alternate access to the message, and behaves much the same as a call to <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ff46-113">L'esempio di codice seguente crea un gestore eventi per il <xref:System.Messaging.MessageQueue.ReceiveCompleted> evento e lo associa con l'evento delegare tramite il <xref:System.Messaging.ReceiveCompletedEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="7ff46-113">The following code example creates an event handler for the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event and associates it with the event delegate by using the <xref:System.Messaging.ReceiveCompletedEventHandler>.</span></span> <span data-ttu-id="7ff46-114">Il gestore dell'evento, `MyReceiveCompleted`, riceve un messaggio da una coda e scrive il corpo sullo schermo.</span><span class="sxs-lookup"><span data-stu-id="7ff46-114">The event handler, `MyReceiveCompleted`, receives a message from a queue and writes its body to the screen.</span></span>  
  
 [!code-cpp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CPP/mqreceivecompletedeventhandler.cpp#1)]
 [!code-csharp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CS/mqreceivecompletedeventhandler.cs#1)]
 [!code-vb[MessageQueue.ReceiveCompleted#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/VB/mqreceivecompletedeventhandler.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.ReceiveCompletedEventHandler" />
    <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
    <altmember cref="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)" />
    <altmember cref="T:System.Messaging.Message" />
  </Docs>
  <Members>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.ReceiveCompletedEventArgs.AsyncResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncResult As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IAsyncResult ^ AsyncResult { IAsyncResult ^ get(); void set(IAsyncResult ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ff46-115">Ottiene o imposta i risultati dell'operazione asincrona richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ff46-115">Gets or sets the result of the asynchronous operation requested.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ff46-116">Oggetto <see cref="T:System.IAsyncResult" /> che contiene i dati associati all'operazione di ricezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ff46-116">A <see cref="T:System.IAsyncResult" /> that contains the data associated with the receive operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ff46-117"><xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> Identifica le operazioni asincrone in corso o completate.</span><span class="sxs-lookup"><span data-stu-id="7ff46-117"><xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> identifies ongoing or completed asynchronous operations.</span></span> <span data-ttu-id="7ff46-118">La proprietà contiene dati che consentono di determinare quale delle diverse operazioni asincrone potenziali completate e quando viene passato al gestore dell'evento, abilita <xref:System.Messaging.MessageQueue.EndReceive%2A> ad accedere al messaggio associato all'operazione completata.</span><span class="sxs-lookup"><span data-stu-id="7ff46-118">The property contains data that helps determine which of several potential asynchronous operations to complete, and when passed to the event handler, enables <xref:System.Messaging.MessageQueue.EndReceive%2A> to access the message associated with the completed operation.</span></span>  
  
 <span data-ttu-id="7ff46-119">Quando si chiama <xref:System.Messaging.MessageQueue.BeginReceive%2A>, <xref:System.IAsyncResult> viene restituito immediatamente, anche se non è ancora stato recuperato un messaggio, se presente, perché non è possibile completare l'operazione.</span><span class="sxs-lookup"><span data-stu-id="7ff46-119">When you call <xref:System.Messaging.MessageQueue.BeginReceive%2A>, a <xref:System.IAsyncResult> is returned immediately, even though a message, if one exists, has not yet been retrieved because the operation is not completed.</span></span> <span data-ttu-id="7ff46-120">Il <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> indica lo stato dell'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="7ff46-120">The <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> indicates the state of the asynchronous operation.</span></span> <span data-ttu-id="7ff46-121"><xref:System.Messaging.MessageQueue.BeginReceive%2A> Crea un oggetto che viene modificato durante l'operazione fino a quando <xref:System.Messaging.MessageQueue.EndReceive%2A> al completamento.</span><span class="sxs-lookup"><span data-stu-id="7ff46-121"><xref:System.Messaging.MessageQueue.BeginReceive%2A> creates the object, which is modified throughout the operation until <xref:System.Messaging.MessageQueue.EndReceive%2A> completes it.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Message Message" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.ReceiveCompletedEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Message ^ Message { System::Messaging::Message ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ff46-122">Ottiene il messaggio associato all'operazione di ricezione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ff46-122">Gets the message associated with the asynchronous receive operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ff46-123">
            <see cref="T:System.Messaging.Message" /> che rappresenta il risultato finale dell'operazione di ricezione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ff46-123">A <see cref="T:System.Messaging.Message" /> that represents the end result of the asynchronous receive operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ff46-124">Il <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> proprietà fornisce un mezzo per il recupero del messaggio che ha avviato la fine di asincrona operazione di ricezione.</span><span class="sxs-lookup"><span data-stu-id="7ff46-124">The <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> property provides a means for retrieving the message that initiated the end of the asynchronous receive operation.</span></span>  
  
 <span data-ttu-id="7ff46-125"><xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType> viene chiamato la prima volta il <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> proprietà è di lettura, pertanto non è necessario chiamare <xref:System.Messaging.MessageQueue.EndReceive%2A> prima di ottenere il valore di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="7ff46-125"><xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType> is called the first time the <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> property is read, so it is not necessary to call <xref:System.Messaging.MessageQueue.EndReceive%2A> prior to getting the value of this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7ff46-126">Non è stato possibile recuperare la proprietà <see cref="P:System.Messaging.ReceiveCompletedEventArgs.Message" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ff46-126">The <see cref="P:System.Messaging.ReceiveCompletedEventArgs.Message" /> could not be retrieved.</span>
          </span>
          <span data-ttu-id="7ff46-127">È possibile che il timeout relativo all'operazione asincrona sia scaduto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ff46-127">The time-out on the asynchronous operation might have expired.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>