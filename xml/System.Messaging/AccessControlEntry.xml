<Type Name="AccessControlEntry" FullName="System.Messaging.AccessControlEntry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c397070501c98ed73167f86342253a01773b2018" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30459695" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AccessControlEntry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessControlEntry extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.AccessControlEntry" />
  <TypeSignature Language="VB.NET" Value="Public Class AccessControlEntry" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessControlEntry" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Specifica i diritti di accesso di un fiduciario (utente, gruppo o computer) per eseguire implementazioni delle attività comuni specifiche dell'applicazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Molte applicazioni hanno operazioni simili a cui un dominio trusted può essere assegnato diritti, ad esempio, durante la lettura, scrittura ed eliminazione di oggetti. Quando si assegnano diritti per queste operazioni generali, l'applicazione li interpreta in modo specifico a tale applicazione. Ad esempio, Accodamento messaggi interpreta l'operazione di lettura come riceve o si visualizza i messaggi da una coda. La <xref:System.Messaging.AccessControlEntry> classe fornisce l'accesso a questi diritti comuni.  
  
 Quando si lavora con voci di controllo di accesso, specificare un dominio trusted a cui assegnare i diritti. È necessario impostare almeno uno del <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, o <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> proprietà per indicare i diritti da assegnare al dominio trusted. È possibile impostare il <xref:System.Messaging.AccessControlEntry.EntryType%2A> proprietà per specificare se i diritti è indicare devono essere concesse o negati. Il tipo di voce predefinito diritti verrà concessi.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.AccessControlList" />
    <altmember cref="T:System.Messaging.MessageQueueAccessControlEntry" />
    <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Messaging.AccessControlEntry" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessControlEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlEntry.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessControlEntry();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Messaging.AccessControlEntry" /> che non specifica né un fiduciario né una serie di diritti da applicare.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostare il <xref:System.Messaging.AccessControlEntry.Trustee%2A> proprietà e almeno uno del <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, o <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> proprietà prima di utilizzare questa <xref:System.Messaging.AccessControlEntry> istanza per impostare i diritti di accesso per un dominio trusted.  
  
 È possibile impostare facoltativamente il <xref:System.Messaging.AccessControlEntry.EntryType%2A> proprietà, anche se il valore predefinito è `Allow` se si sceglie di non eseguire questa operazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessControlEntry (System.Messaging.Trustee trustee);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Messaging.Trustee trustee) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessControlEntry(System::Messaging::Trustee ^ trustee);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="trustee" Type="System.Messaging.Trustee" />
      </Parameters>
      <Docs>
        <param name="trustee">
          <see cref="T:System.Messaging.Trustee" /> che specifica un utente, un gruppo, un computer, un dominio o un alias.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Messaging.AccessControlEntry" /> che specifica il trustee al quale concedere o negare i diritti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostare il <xref:System.Messaging.AccessControlEntry.EntryType%2A> proprietà e almeno uno del <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, o <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> proprietà prima di utilizzare questa <xref:System.Messaging.AccessControlEntry> istanza per impostare i diritti di accesso per un dominio trusted.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="trustee" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Messaging.Trustee" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessControlEntry (System.Messaging.Trustee trustee, System.Messaging.GenericAccessRights genericAccessRights, System.Messaging.StandardAccessRights standardAccessRights, System.Messaging.AccessControlEntryType entryType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Messaging.Trustee trustee, valuetype System.Messaging.GenericAccessRights genericAccessRights, valuetype System.Messaging.StandardAccessRights standardAccessRights, valuetype System.Messaging.AccessControlEntryType entryType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessControlEntry(System::Messaging::Trustee ^ trustee, System::Messaging::GenericAccessRights genericAccessRights, System::Messaging::StandardAccessRights standardAccessRights, System::Messaging::AccessControlEntryType entryType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="trustee" Type="System.Messaging.Trustee" />
        <Parameter Name="genericAccessRights" Type="System.Messaging.GenericAccessRights" />
        <Parameter Name="standardAccessRights" Type="System.Messaging.StandardAccessRights" />
        <Parameter Name="entryType" Type="System.Messaging.AccessControlEntryType" />
      </Parameters>
      <Docs>
        <param name="trustee">
          <see cref="T:System.Messaging.Trustee" /> che specifica un utente, un gruppo, un computer, un dominio o un alias.</param>
        <param name="genericAccessRights">Combinazione bit per bit dei valori di <see cref="T:System.Messaging.GenericAccessRights" />.</param>
        <param name="standardAccessRights">Combinazione bit per bit dei valori di <see cref="T:System.Messaging.StandardAccessRights" />.</param>
        <param name="entryType">Uno dei valori <see cref="T:System.Messaging.AccessControlEntryType" /> che specifica se concedere, negare, impostare o revocare i diritti indicati.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Messaging.AccessControlEntry" /> che specifica un fiduciario, i diritti da assegnare e se autorizzarli o negarli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo overload del costruttore imposta la <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> proprietà a una combinazione bit per bit del `genericAccessRights` e `standardAccessRights` parametri specificati.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="trustee" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">I parametri <paramref name="genericAccessRights" />, <paramref name="standardAccessRights" /> e <paramref name="entryType" /> non sono valori di enumerazione validi.</exception>
      </Docs>
    </Member>
    <Member MemberName="CustomAccessRights">
      <MemberSignature Language="C#" Value="protected int CustomAccessRights { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CustomAccessRights" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.AccessControlEntry.CustomAccessRights" />
      <MemberSignature Language="VB.NET" Value="Protected Property CustomAccessRights As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int CustomAccessRights { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta i diritti di accesso personalizzati.</summary>
        <value>Diritti di accesso specifici dell'applicazione, solitamente definiti flag di bit.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Messaging.AccessControlEntry.GenericAccessRights" />
        <altmember cref="P:System.Messaging.AccessControlEntry.StandardAccessRights" />
      </Docs>
    </Member>
    <Member MemberName="EntryType">
      <MemberSignature Language="C#" Value="public System.Messaging.AccessControlEntryType EntryType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.AccessControlEntryType EntryType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.AccessControlEntry.EntryType" />
      <MemberSignature Language="VB.NET" Value="Public Property EntryType As AccessControlEntryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AccessControlEntryType EntryType { System::Messaging::AccessControlEntryType get(); void set(System::Messaging::AccessControlEntryType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.AccessControlEntryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica in che modo i diritti di accesso si applicano al fiduciario.</summary>
        <value>Uno dei valori <see cref="T:System.Messaging.AccessControlEntryType" /> che specifica se concedere, negare, impostare o revocare i diritti indicati. Il valore predefinito è <see langword="Allow" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il tipo di voce non è un valore di enumerazione <see cref="T:System.Messaging.AccessControlEntryType" /> valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GenericAccessRights">
      <MemberSignature Language="C#" Value="public System.Messaging.GenericAccessRights GenericAccessRights { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.GenericAccessRights GenericAccessRights" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.AccessControlEntry.GenericAccessRights" />
      <MemberSignature Language="VB.NET" Value="Public Property GenericAccessRights As GenericAccessRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::GenericAccessRights GenericAccessRights { System::Messaging::GenericAccessRights get(); void set(System::Messaging::GenericAccessRights value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.GenericAccessRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una serie di diritti di accesso comuni che si mappano sui diritti di accesso sia standard che specifici dell'oggetto per operazioni di lettura, scrittura ed esecuzione.</summary>
        <value>Combinazione bit per bit dei valori di <see cref="T:System.Messaging.GenericAccessRights" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gli oggetti a protezione diretta utilizzano i quattro bit più significativi del formato maschera di accesso di Windows 2000 e Windows NT per specificare i diritti di accesso generici. Ogni tipo di oggetto a protezione diretta esegue il mapping di questi bit a un set dei relativi diritti di accesso standard e specifiche dell'oggetto. Le applicazioni che definiscono gli oggetti a protezione diretta privati è anche possono usare i diritti di accesso generici.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore impostato non è una combinazione valida di membri del flag di bit <see cref="T:System.Messaging.GenericAccessRights" />.</exception>
        <altmember cref="P:System.Messaging.AccessControlEntry.StandardAccessRights" />
        <altmember cref="P:System.Messaging.AccessControlEntry.CustomAccessRights" />
      </Docs>
    </Member>
    <Member MemberName="StandardAccessRights">
      <MemberSignature Language="C#" Value="public System.Messaging.StandardAccessRights StandardAccessRights { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.StandardAccessRights StandardAccessRights" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.AccessControlEntry.StandardAccessRights" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardAccessRights As StandardAccessRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::StandardAccessRights StandardAccessRights { System::Messaging::StandardAccessRights get(); void set(System::Messaging::StandardAccessRights value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.StandardAccessRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una serie di diritti di accesso standard che corrispondono alle operazioni comuni alla maggior parte dei tipi di oggetti proteggibili.</summary>
        <value>Combinazione bit per bit dei valori di <see cref="T:System.Messaging.StandardAccessRights" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il formato maschera di accesso di Windows 2000 e Windows NT include un set di bit per i diritti di accesso standard. Ogni tipo di oggetto a protezione diretta dispone di un set di diritti di accesso che corrispondono alle operazioni specifiche per il tipo di oggetto. Oltre a questi diritti di accesso specifiche dell'oggetto, è un set standard di diritti di accesso che corrispondono alle operazioni comuni alla maggior parte dei tipi di oggetti a protezione diretta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Il valore impostato non è una combinazione valida di membri del flag di bit <see cref="T:System.Messaging.StandardAccessRights" />.</exception>
        <altmember cref="P:System.Messaging.AccessControlEntry.GenericAccessRights" />
        <altmember cref="P:System.Messaging.AccessControlEntry.CustomAccessRights" />
      </Docs>
    </Member>
    <Member MemberName="Trustee">
      <MemberSignature Language="C#" Value="public System.Messaging.Trustee Trustee { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Trustee Trustee" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.AccessControlEntry.Trustee" />
      <MemberSignature Language="VB.NET" Value="Public Property Trustee As Trustee" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Trustee ^ Trustee { System::Messaging::Trustee ^ get(); void set(System::Messaging::Trustee ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Trustee</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'utente, il gruppo, il dominio o l'alias a cui vengono assegnati i diritti di accesso.</summary>
        <value>Oggetto <see cref="T:System.Messaging.Trustee" /> che specifica un account utente, un account di gruppo o la sessione di accesso a cui si applica un oggetto <see cref="T:System.Messaging.AccessControlEntry" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utenti e programmi, ad esempio servizi di Win32, è possibile utilizzare gli account utente per accedere al computer locale. Gli account di gruppo non può essere utilizzati per accedere a un computer, ma sono utili in <xref:System.Messaging.AccessControlEntry> istanze per consentire o negare a un set di diritti di accesso a uno o più account utente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La proprietà <see cref="P:System.Messaging.AccessControlEntry.Trustee" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Messaging.Trustee" />
      </Docs>
    </Member>
  </Members>
</Type>