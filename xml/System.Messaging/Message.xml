<Type Name="Message" FullName="System.Messaging.Message">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aca17eb5c1214cd7837f89c181242c98095e8144" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36477554" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Message : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Message extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.Message" />
  <TypeSignature Language="VB.NET" Value="Public Class Message&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class Message : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type Message = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Messaging.Design.MessageDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a6214-101">Provides access to the properties needed to define a Message Queuing message.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a6214-101">Provides access to the properties needed to define a Message Queuing message.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-102">Utilizzare la <xref:System.Messaging.Message> classe per leggere o ricevere messaggi da una coda o di un controllo accurato le proprietà del messaggio quando si invia un messaggio a una coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-102">Use the <xref:System.Messaging.Message> class to peek or receive messages from a queue, or to have fine control over message properties when sending a message to a queue.</span></span>  
  
 <span data-ttu-id="a6214-103"><xref:System.Messaging.MessageQueue> Usa il <xref:System.Messaging.Message> classe quando legge o riceve messaggi dalle code, perché sia il <xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=nameWithType> e <xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=nameWithType> metodi creano una nuova istanza della <xref:System.Messaging.Message> classe e impostare le proprietà dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="a6214-103"><xref:System.Messaging.MessageQueue> uses the <xref:System.Messaging.Message> class when it peeks or receives messages from queues, because both the <xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=nameWithType> and <xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=nameWithType> methods create a new instance of the <xref:System.Messaging.Message> class and set the instance's properties.</span></span> <span data-ttu-id="a6214-104">Il <xref:System.Messaging.Message> le proprietà di sola lettura della classe si applicano al recupero dei messaggi da una coda, mentre le proprietà di lettura/scrittura si applicano all'invio e recupero dei messaggi.</span><span class="sxs-lookup"><span data-stu-id="a6214-104">The <xref:System.Messaging.Message> class's read-only properties apply to retrieving messages from a queue, while the read/write properties apply to sending and retrieving messages.</span></span> <span data-ttu-id="a6214-105">Quando si <xref:System.Messaging.MessageQueue> legge o riceve un messaggio da una coda, il relativo <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> proprietà determina quale proprietà del messaggio vengono recuperati.</span><span class="sxs-lookup"><span data-stu-id="a6214-105">When <xref:System.Messaging.MessageQueue> peeks or receives a message from a queue, its <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> property determines which of the message's properties are retrieved.</span></span>  
  
 <span data-ttu-id="a6214-106">Il <xref:System.Messaging.MessageQueue> della classe <xref:System.Messaging.MessageQueue.Send%2A> metodo consente di specificare un tipo di oggetto per un messaggio inviato alla coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-106">The <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.Send%2A> method allows you to specify any object type for a message being sent to that queue.</span></span> <span data-ttu-id="a6214-107">È possibile usare il <xref:System.Messaging.MessageQueue> dell'istanza <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> proprietà per specificare le impostazioni per i messaggi generici inviati alla coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-107">You can use the <xref:System.Messaging.MessageQueue> instance's <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property to specify settings for generic messages sent to the queue.</span></span> <span data-ttu-id="a6214-108">I tipi di impostazioni includono formattatore, etichetta, la crittografia e autenticazione.</span><span class="sxs-lookup"><span data-stu-id="a6214-108">The types of settings include formatter, label, encryption, and authentication.</span></span> <span data-ttu-id="a6214-109">È inoltre possibile specificare valori per l'oggetto appropriato <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> membri quando si coordina l'applicazione di messaggistica per rispondere ai messaggi di riconoscimento e di report.</span><span class="sxs-lookup"><span data-stu-id="a6214-109">You can also specify values for the appropriate <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> members when you coordinate your messaging application to respond to acknowledgment and report messages.</span></span> <span data-ttu-id="a6214-110">Utilizzando un <xref:System.Messaging.Message> istanza per inviare un messaggio alla coda offre la flessibilità necessaria per accedere e modificare numerose di queste proprietà, ovvero per un singolo messaggio o in base dal messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-110">Using a <xref:System.Messaging.Message> instance to send a message to the queue gives you the flexibility to access and modify many of these properties—either for a single message or on a message-by-message basis.</span></span> <span data-ttu-id="a6214-111"><xref:System.Messaging.Message> proprietà hanno la precedenza su <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>.</span><span class="sxs-lookup"><span data-stu-id="a6214-111"><xref:System.Messaging.Message> properties take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>.</span></span>  
  
 <span data-ttu-id="a6214-112">I dati del messaggio viene archiviati nel <xref:System.Messaging.Message.Body%2A> proprietà e in misura minore, il <xref:System.Messaging.Message.AppSpecific%2A> e <xref:System.Messaging.Message.Extension%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-112">Message data is stored in the <xref:System.Messaging.Message.Body%2A> property and to a lesser extent, the <xref:System.Messaging.Message.AppSpecific%2A> and <xref:System.Messaging.Message.Extension%2A> properties.</span></span> <span data-ttu-id="a6214-113">Quando i dati del messaggio sono crittografati, serializzati o deserializzati, solo il contenuto del <xref:System.Messaging.Message.Body%2A> proprietà sono interessate.</span><span class="sxs-lookup"><span data-stu-id="a6214-113">When message data is encrypted, serialized, or deserialized, only the contents of the <xref:System.Messaging.Message.Body%2A> property are affected.</span></span>  
  
 <span data-ttu-id="a6214-114">Il contenuto del <xref:System.Messaging.Message.Body%2A> proprietà vengono serializzati quando viene inviato il messaggio, mediante il <xref:System.Messaging.Message.Formatter%2A> proprietà specificato.</span><span class="sxs-lookup"><span data-stu-id="a6214-114">The contents of the <xref:System.Messaging.Message.Body%2A> property are serialized when the message is sent, using the <xref:System.Messaging.Message.Formatter%2A> property you specify.</span></span> <span data-ttu-id="a6214-115">Il contenuto serializzato è inclusi il <xref:System.Messaging.Message.BodyStream%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-115">The serialized contents are found in the <xref:System.Messaging.Message.BodyStream%2A> property.</span></span> <span data-ttu-id="a6214-116">È inoltre possibile impostare il <xref:System.Messaging.Message.BodyStream%2A> proprietà direttamente, ad esempio, per inviare un file come il contenuto dei dati di un messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-116">You can also set the <xref:System.Messaging.Message.BodyStream%2A> property directly, for example, to send a file as the data content of a message.</span></span> <span data-ttu-id="a6214-117">È possibile modificare il <xref:System.Messaging.Message.Body%2A> oppure <xref:System.Messaging.Message.Formatter%2A> proprietà in qualsiasi momento prima dell'invio del messaggio e i dati saranno serializzate in modo appropriato quando si chiama <xref:System.Messaging.MessageQueue.Send%2A>.</span><span class="sxs-lookup"><span data-stu-id="a6214-117">You can change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> properties at any time before sending the message, and the data will be serialized appropriately when you call <xref:System.Messaging.MessageQueue.Send%2A>.</span></span>  
  
 <span data-ttu-id="a6214-118">Le proprietà definite per il <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> proprietà si applica solo ai messaggi che non sono di tipo <xref:System.Messaging.Message>.</span><span class="sxs-lookup"><span data-stu-id="a6214-118">The properties defined by the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> property apply only to messages that are not of type <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="a6214-119">Se si specifica il <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> proprietà per un <xref:System.Messaging.MessageQueue>, lo stesso nome proprietà in un <xref:System.Messaging.Message> istanza ha inviato a tale coda prevalgono queste proprietà predefinite che verranno ignorati.</span><span class="sxs-lookup"><span data-stu-id="a6214-119">If you specify the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property for a <xref:System.Messaging.MessageQueue>, the identically named properties in a <xref:System.Messaging.Message> instance sent to that queue cause these default properties to be ignored.</span></span>  
  
 <span data-ttu-id="a6214-120">Per un elenco di valori di proprietà iniziali per un'istanza di <xref:System.Messaging.Message>, vedere il <xref:System.Messaging.Message.%23ctor%2A> costruttore.</span><span class="sxs-lookup"><span data-stu-id="a6214-120">For a list of initial property values for an instance of <xref:System.Messaging.Message>, see the <xref:System.Messaging.Message.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-121">Esempio di codice seguente illustra la formattazione di un corpo del messaggio tramite <xref:System.Messaging.BinaryMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="a6214-121">The following code example demonstrates formatting a message body using <xref:System.Messaging.BinaryMessageFormatter>.</span></span>  
  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 <span data-ttu-id="a6214-122">Esempio di codice seguente illustra la formattazione di un corpo del messaggio tramite <xref:System.Messaging.XmlMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="a6214-122">The following code example demonstrates formatting a message body using <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.DefaultPropertiesToSend" />
    <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
    <altmember cref="M:System.Messaging.MessageQueue.Receive" />
    <altmember cref="M:System.Messaging.MessageQueue.Peek" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-123">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-123">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Message ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Message.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Message();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6214-124">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class with an empty body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-124">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class with an empty body.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-125">Utilizzare questo overload per creare una nuova istanza di <xref:System.Messaging.Message> classe che ha un corpo vuoto.</span><span class="sxs-lookup"><span data-stu-id="a6214-125">Use this overload to create a new instance of the <xref:System.Messaging.Message> class that has an empty body.</span></span>  
  
 <span data-ttu-id="a6214-126">Specificare il <xref:System.Messaging.Message.Body%2A> proprietà o il <xref:System.Messaging.Message.BodyStream%2A> proprietà prima di inviare il <xref:System.Messaging.Message> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a6214-126">Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object.</span></span> <span data-ttu-id="a6214-127">Il <xref:System.Messaging.Message.Body%2A> proprietà può essere qualsiasi oggetto che può essere serializzata, ad esempio una stringa di testo, un oggetto della struttura, un'istanza della classe o un oggetto incorporato.</span><span class="sxs-lookup"><span data-stu-id="a6214-127">The <xref:System.Messaging.Message.Body%2A> property can be any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.</span></span>  
  
 <span data-ttu-id="a6214-128">A meno che non si scrive il contenuto del messaggio direttamente il <xref:System.Messaging.Message.BodyStream%2A> impostare la proprietà, il <xref:System.Messaging.Message.Formatter%2A> proprietà prima di inviare il messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-128">Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message.</span></span> <span data-ttu-id="a6214-129">Il corpo viene serializzato utilizzando il <xref:System.Messaging.Message.Formatter%2A> il valore della proprietà al momento il <xref:System.Messaging.MessageQueue.Send%2A> metodo viene chiamato sul <xref:System.Messaging.MessageQueue> istanza.</span><span class="sxs-lookup"><span data-stu-id="a6214-129">The body is serialized using the <xref:System.Messaging.Message.Formatter%2A> property's value at the time the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance.</span></span>  
  
 <span data-ttu-id="a6214-130">Il <xref:System.Messaging.XmlMessageFormatter> è regime, pertanto non è necessario avere lo stesso oggetto di tipo per il mittente e ricevitore quando si utilizza questo formato.</span><span class="sxs-lookup"><span data-stu-id="a6214-130">The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</span></span> <span data-ttu-id="a6214-131">Il <xref:System.Messaging.ActiveXMessageFormatter> e <xref:System.Messaging.BinaryMessageFormatter> serializzare i dati in una rappresentazione binaria.</span><span class="sxs-lookup"><span data-stu-id="a6214-131">The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation.</span></span> <span data-ttu-id="a6214-132">Il <xref:System.Messaging.ActiveXMessageFormatter> viene utilizzato durante l'invio o la ricezione di componenti COM.</span><span class="sxs-lookup"><span data-stu-id="a6214-132">The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.</span></span>  
  
 <span data-ttu-id="a6214-133">La tabella seguente illustra i valori di proprietà iniziali per un'istanza di <xref:System.Messaging.Message>.</span><span class="sxs-lookup"><span data-stu-id="a6214-133">The following table shows initial property values for an instance of <xref:System.Messaging.Message>.</span></span>  
  
|<span data-ttu-id="a6214-134">Proprietà</span><span class="sxs-lookup"><span data-stu-id="a6214-134">Property</span></span>|<span data-ttu-id="a6214-135">Valore iniziale</span><span class="sxs-lookup"><span data-stu-id="a6214-135">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.Message.AcknowledgeType%2A>|`AcknowledgeType.None`|  
|<xref:System.Messaging.Message.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.Message.AppSpecific%2A>|<span data-ttu-id="a6214-136">0</span><span class="sxs-lookup"><span data-stu-id="a6214-136">0</span></span>|  
|<xref:System.Messaging.Message.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.Message.AuthenticationProviderName%2A>|<span data-ttu-id="a6214-137">Microsoft Enhanced Cryptographic Provider versione 1.0</span><span class="sxs-lookup"><span data-stu-id="a6214-137">Microsoft Base Cryptographic Provider version 1.0</span></span>|  
|<xref:System.Messaging.Message.AuthenticationProviderType%2A>|`CryptoProviderType.RSA_FULL`|  
|<xref:System.Messaging.Message.Body%2A>|`null`|  
|<xref:System.Messaging.Message.BodyStream%2A>|`Stream.null`|  
|<xref:System.Messaging.Message.BodyType%2A>|<span data-ttu-id="a6214-138">0</span><span class="sxs-lookup"><span data-stu-id="a6214-138">0</span></span>|  
|<xref:System.Messaging.Message.ConnectorType%2A>|`Guid.Empty`|  
|<xref:System.Messaging.Message.CorrelationId%2A>|<span data-ttu-id="a6214-139">Una stringa vuota ("")</span><span class="sxs-lookup"><span data-stu-id="a6214-139">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.DestinationSymmetricKey%2A>|<span data-ttu-id="a6214-140">Una matrice di lunghezza zero byte</span><span class="sxs-lookup"><span data-stu-id="a6214-140">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.DigitalSignature%2A>|<span data-ttu-id="a6214-141">Una matrice di lunghezza zero byte</span><span class="sxs-lookup"><span data-stu-id="a6214-141">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.Message.Extension%2A>|<span data-ttu-id="a6214-142">Una matrice di lunghezza zero byte</span><span class="sxs-lookup"><span data-stu-id="a6214-142">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.Formatter%2A>|`XmlMessageFormatter`|  
|<xref:System.Messaging.Message.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.Message.Label%2A>|<span data-ttu-id="a6214-143">Una stringa vuota ("")</span><span class="sxs-lookup"><span data-stu-id="a6214-143">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.Message.Recoverable%2A>|`false`|  
|<xref:System.Messaging.Message.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.Message.SenderCertificate%2A>|<span data-ttu-id="a6214-144">Una matrice di lunghezza zero byte</span><span class="sxs-lookup"><span data-stu-id="a6214-144">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.Message.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.Message.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.Message.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseTracing%2A>|`false`|  
  
   
  
## Examples  
 <span data-ttu-id="a6214-145">Esempio di codice seguente invia due messaggi con priorità diverse per la coda e successivamente recuperati.</span><span class="sxs-lookup"><span data-stu-id="a6214-145">The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.</span></span>  
  
 [!code-cpp[Message.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CPP/message_defaultandpriority.cpp#1)]
 [!code-csharp[Message.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CS/message_defaultandpriority.cs#1)]
 [!code-vb[Message.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/VB/message_defaultandpriority.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.XmlMessageFormatter" />
        <altmember cref="P:System.Messaging.Message.Body" />
        <altmember cref="T:System.Messaging.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.MessageQueue" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Message (object body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Message.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (body As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Message(System::Object ^ body);" />
      <MemberSignature Language="F#" Value="new System.Messaging.Message : obj -&gt; System.Messaging.Message" Usage="new System.Messaging.Message body" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="body" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="a6214-146">The object to be serialized into the body of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-146">The object to be serialized into the body of the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6214-147">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class, using the <see cref="T:System.Messaging.XmlMessageFormatter" /> to serialize the specified object into the body of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-147">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class, using the <see cref="T:System.Messaging.XmlMessageFormatter" /> to serialize the specified object into the body of the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-148">Utilizzare questo overload per creare una nuova istanza del <xref:System.Messaging.Message> classe che contiene il <xref:System.Messaging.Message.Body%2A> specificato per il `body` parametro.</span><span class="sxs-lookup"><span data-stu-id="a6214-148">Use this overload to create a new instance of the <xref:System.Messaging.Message> class that contains the <xref:System.Messaging.Message.Body%2A> specified by the `body` parameter.</span></span> <span data-ttu-id="a6214-149">Il `body` parametro può essere qualsiasi oggetto che può essere serializzata, ad esempio una stringa di testo, un oggetto della struttura, un'istanza della classe o un oggetto incorporato.</span><span class="sxs-lookup"><span data-stu-id="a6214-149">The `body` parameter can be any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.</span></span> <span data-ttu-id="a6214-150">Il corpo viene serializzato utilizzando il <xref:System.Messaging.XmlMessageFormatter> a meno che non si modifica il <xref:System.Messaging.Message.Formatter%2A> proprietà prima di <xref:System.Messaging.Message> viene inviato.</span><span class="sxs-lookup"><span data-stu-id="a6214-150">The body is serialized using the <xref:System.Messaging.XmlMessageFormatter> unless you change the <xref:System.Messaging.Message.Formatter%2A> property before the <xref:System.Messaging.Message> is sent.</span></span> <span data-ttu-id="a6214-151">Se si modifica il <xref:System.Messaging.Message.Body%2A> oppure <xref:System.Messaging.Message.Formatter%2A> proprietà in qualsiasi momento prima di chiamare <xref:System.Messaging.MessageQueue.Send%2A>, verrà serializzato il messaggio in base al nuovo valore della proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-151">If you change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> property at any time before calling <xref:System.Messaging.MessageQueue.Send%2A>, the message will be serialized according to the new property value.</span></span>  
  
 <span data-ttu-id="a6214-152">Il <xref:System.Messaging.XmlMessageFormatter> è regime, pertanto non è necessario avere lo stesso oggetto di tipo per il mittente e ricevitore quando si utilizza questo formato.</span><span class="sxs-lookup"><span data-stu-id="a6214-152">The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</span></span> <span data-ttu-id="a6214-153">Il <xref:System.Messaging.ActiveXMessageFormatter> e <xref:System.Messaging.BinaryMessageFormatter> serializzare i dati in una rappresentazione binaria.</span><span class="sxs-lookup"><span data-stu-id="a6214-153">The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation.</span></span> <span data-ttu-id="a6214-154">Il <xref:System.Messaging.ActiveXMessageFormatter> viene utilizzato durante l'invio o la ricezione di componenti COM.</span><span class="sxs-lookup"><span data-stu-id="a6214-154">The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.</span></span>  
  
 <span data-ttu-id="a6214-155">La tabella seguente illustra i valori di proprietà iniziali per un'istanza di <xref:System.Messaging.Message>.</span><span class="sxs-lookup"><span data-stu-id="a6214-155">The following table shows initial property values for an instance of <xref:System.Messaging.Message>.</span></span>  
  
|<span data-ttu-id="a6214-156">Proprietà</span><span class="sxs-lookup"><span data-stu-id="a6214-156">Property</span></span>|<span data-ttu-id="a6214-157">Valore iniziale</span><span class="sxs-lookup"><span data-stu-id="a6214-157">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.Message.AcknowledgeType%2A>|`AcknowledgeType.None`|  
|<xref:System.Messaging.Message.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.Message.AppSpecific%2A>|<span data-ttu-id="a6214-158">0</span><span class="sxs-lookup"><span data-stu-id="a6214-158">0</span></span>|  
|<xref:System.Messaging.Message.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.Message.AuthenticationProviderName%2A>|<span data-ttu-id="a6214-159">Microsoft Enhanced Cryptographic Provider versione 1.0</span><span class="sxs-lookup"><span data-stu-id="a6214-159">Microsoft Base Cryptographic Provider version 1.0</span></span>|  
|<xref:System.Messaging.Message.AuthenticationProviderType%2A>|`CryptoProviderType.RSA_FULL`|  
|<xref:System.Messaging.Message.Body%2A>|<span data-ttu-id="a6214-160">Il `body` parametro.</span><span class="sxs-lookup"><span data-stu-id="a6214-160">The `body` parameter.</span></span>|  
|<xref:System.Messaging.Message.BodyStream%2A>|`Stream.null`|  
|<xref:System.Messaging.Message.BodyType%2A>|<span data-ttu-id="a6214-161">0</span><span class="sxs-lookup"><span data-stu-id="a6214-161">0</span></span>|  
|<xref:System.Messaging.Message.ConnectorType%2A>|`Guid.Empty`|  
|<xref:System.Messaging.Message.CorrelationId%2A>|<span data-ttu-id="a6214-162">Una stringa vuota ("")</span><span class="sxs-lookup"><span data-stu-id="a6214-162">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.DestinationSymmetricKey%2A>|<span data-ttu-id="a6214-163">Una matrice di lunghezza zero byte</span><span class="sxs-lookup"><span data-stu-id="a6214-163">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.DigitalSignature%2A>|<span data-ttu-id="a6214-164">Una matrice di lunghezza zero byte</span><span class="sxs-lookup"><span data-stu-id="a6214-164">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.Message.Extension%2A>|<span data-ttu-id="a6214-165">Una matrice di lunghezza zero byte</span><span class="sxs-lookup"><span data-stu-id="a6214-165">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.Formatter%2A>|`XmlMessageFormatter`|  
|<xref:System.Messaging.Message.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.Message.Label%2A>|<span data-ttu-id="a6214-166">Una stringa vuota ("")</span><span class="sxs-lookup"><span data-stu-id="a6214-166">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.Message.Recoverable%2A>|`false`|  
|<xref:System.Messaging.Message.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.Message.SenderCertificate%2A>|<span data-ttu-id="a6214-167">Una matrice di lunghezza zero byte</span><span class="sxs-lookup"><span data-stu-id="a6214-167">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.Message.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.Message.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.Message.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseTracing%2A>|`false`|  
  
   
  
## Examples  
 <span data-ttu-id="a6214-168">Esempio di codice seguente crea una nuova coda, invia un messaggio che contiene un ordine ad esso e quindi li recupera.</span><span class="sxs-lookup"><span data-stu-id="a6214-168">The following code example creates a new queue, sends a message that contains an order to it, and then retrieves it.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.XmlMessageFormatter" />
        <altmember cref="T:System.Messaging.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.MessageQueue" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Message (object body, System.Messaging.IMessageFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object body, class System.Messaging.IMessageFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Message.#ctor(System.Object,System.Messaging.IMessageFormatter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (body As Object, formatter As IMessageFormatter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Message(System::Object ^ body, System::Messaging::IMessageFormatter ^ formatter);" />
      <MemberSignature Language="F#" Value="new System.Messaging.Message : obj * System.Messaging.IMessageFormatter -&gt; System.Messaging.Message" Usage="new System.Messaging.Message (body, formatter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="body" Type="System.Object" />
        <Parameter Name="formatter" Type="System.Messaging.IMessageFormatter" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="a6214-169">The object to be serialized into the body of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-169">The object to be serialized into the body of the message.</span>
          </span>
        </param>
        <param name="formatter">
          <span data-ttu-id="a6214-170">A <see cref="T:System.Messaging.IMessageFormatter" /> that specifies the formatter with which to serialize the message body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-170">A <see cref="T:System.Messaging.IMessageFormatter" /> that specifies the formatter with which to serialize the message body.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6214-171">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class using the specified formatter to serialize the specified object into the body of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-171">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class using the specified formatter to serialize the specified object into the body of the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-172">Utilizzare questo overload per creare una nuova istanza della <xref:System.Messaging.Message> classe che contiene il <xref:System.Messaging.Message.Body%2A> specificato dal `body` parametro e che utilizza un formattatore valido per serializzare il corpo.</span><span class="sxs-lookup"><span data-stu-id="a6214-172">Use this overload to create a new instance of the <xref:System.Messaging.Message> class that contains the <xref:System.Messaging.Message.Body%2A> specified by the `body` parameter and that uses any valid formatter to serialize the body.</span></span> <span data-ttu-id="a6214-173">Il `body` parametro è un oggetto che può essere serializzato, ad esempio una stringa di testo, un oggetto della struttura, un'istanza della classe o un oggetto incorporato.</span><span class="sxs-lookup"><span data-stu-id="a6214-173">The `body` parameter is any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.</span></span> <span data-ttu-id="a6214-174">Se si modifica il <xref:System.Messaging.Message.Body%2A> oppure <xref:System.Messaging.Message.Formatter%2A> proprietà in qualsiasi momento prima di chiamare <xref:System.Messaging.MessageQueue.Send%2A>, verrà serializzato il messaggio in base al nuovo valore della proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-174">If you change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> property at any time before calling <xref:System.Messaging.MessageQueue.Send%2A>, the message will be serialized according to the new property value.</span></span>  
  
 <span data-ttu-id="a6214-175">Il <xref:System.Messaging.XmlMessageFormatter> è regime, pertanto non è necessario avere lo stesso oggetto di tipo per il mittente e ricevitore quando si utilizza questo formato.</span><span class="sxs-lookup"><span data-stu-id="a6214-175">The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</span></span> <span data-ttu-id="a6214-176">Il <xref:System.Messaging.ActiveXMessageFormatter> e <xref:System.Messaging.BinaryMessageFormatter> serializzare i dati in una rappresentazione binaria.</span><span class="sxs-lookup"><span data-stu-id="a6214-176">The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation.</span></span> <span data-ttu-id="a6214-177">Il <xref:System.Messaging.ActiveXMessageFormatter> viene utilizzato durante l'invio o la ricezione di componenti COM.</span><span class="sxs-lookup"><span data-stu-id="a6214-177">The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.</span></span>  
  
 <span data-ttu-id="a6214-178">La tabella seguente illustra i valori di proprietà iniziali per un'istanza di <xref:System.Messaging.Message>.</span><span class="sxs-lookup"><span data-stu-id="a6214-178">The following table shows initial property values for an instance of <xref:System.Messaging.Message>.</span></span>  
  
|<span data-ttu-id="a6214-179">Proprietà</span><span class="sxs-lookup"><span data-stu-id="a6214-179">Property</span></span>|<span data-ttu-id="a6214-180">Valore iniziale</span><span class="sxs-lookup"><span data-stu-id="a6214-180">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.Message.AcknowledgeType%2A>|`AcknowledgeType.None`|  
|<xref:System.Messaging.Message.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.Message.AppSpecific%2A>|<span data-ttu-id="a6214-181">0</span><span class="sxs-lookup"><span data-stu-id="a6214-181">0</span></span>|  
|<xref:System.Messaging.Message.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.Message.AuthenticationProviderName%2A>|<span data-ttu-id="a6214-182">Microsoft Enhanced Cryptographic Provider versione 1.0</span><span class="sxs-lookup"><span data-stu-id="a6214-182">Microsoft Base Cryptographic Provider version 1.0</span></span>|  
|<xref:System.Messaging.Message.AuthenticationProviderType%2A>|`CryptoProviderType.RSA_FULL`|  
|<xref:System.Messaging.Message.Body%2A>|<span data-ttu-id="a6214-183">Il `body` parametro.</span><span class="sxs-lookup"><span data-stu-id="a6214-183">The `body` parameter.</span></span>|  
|<xref:System.Messaging.Message.BodyStream%2A>|`Stream.null`|  
|<xref:System.Messaging.Message.BodyType%2A>|<span data-ttu-id="a6214-184">0</span><span class="sxs-lookup"><span data-stu-id="a6214-184">0</span></span>|  
|<xref:System.Messaging.Message.ConnectorType%2A>|`Guid.Empty`|  
|<xref:System.Messaging.Message.CorrelationId%2A>|<span data-ttu-id="a6214-185">Una stringa vuota ("")</span><span class="sxs-lookup"><span data-stu-id="a6214-185">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.DestinationSymmetricKey%2A>|<span data-ttu-id="a6214-186">Una matrice di lunghezza zero byte</span><span class="sxs-lookup"><span data-stu-id="a6214-186">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.DigitalSignature%2A>|<span data-ttu-id="a6214-187">Una matrice di lunghezza zero byte</span><span class="sxs-lookup"><span data-stu-id="a6214-187">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.Message.Extension%2A>|<span data-ttu-id="a6214-188">Una matrice di lunghezza zero byte</span><span class="sxs-lookup"><span data-stu-id="a6214-188">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.Formatter%2A>|<span data-ttu-id="a6214-189">Il `formatter` parametro.</span><span class="sxs-lookup"><span data-stu-id="a6214-189">The `formatter` parameter.</span></span>|  
|<xref:System.Messaging.Message.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.Message.Label%2A>|<span data-ttu-id="a6214-190">Una stringa vuota ("")</span><span class="sxs-lookup"><span data-stu-id="a6214-190">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.Message.Recoverable%2A>|`false`|  
|<xref:System.Messaging.Message.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.Message.SenderCertificate%2A>|<span data-ttu-id="a6214-191">Una matrice di lunghezza zero byte</span><span class="sxs-lookup"><span data-stu-id="a6214-191">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.Message.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.Message.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.Message.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseTracing%2A>|`false`|  
  
   
  
## Examples  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.XmlMessageFormatter" />
        <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
        <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
        <altmember cref="T:System.Messaging.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.MessageQueue" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
      </Docs>
    </Member>
    <Member MemberName="AcknowledgeType">
      <MemberSignature Language="C#" Value="public System.Messaging.AcknowledgeTypes AcknowledgeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.AcknowledgeTypes AcknowledgeType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AcknowledgeType" />
      <MemberSignature Language="VB.NET" Value="Public Property AcknowledgeType As AcknowledgeTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AcknowledgeTypes AcknowledgeType { System::Messaging::AcknowledgeTypes get(); void set(System::Messaging::AcknowledgeTypes value); };" />
      <MemberSignature Language="F#" Value="member this.AcknowledgeType : System.Messaging.AcknowledgeTypes with get, set" Usage="System.Messaging.Message.AcknowledgeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAcknowledgeType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AcknowledgeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-192">Gets or sets the type of acknowledgment message to be returned to the sending application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-192">Gets or sets the type of acknowledgment message to be returned to the sending application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-193">Uno del <see cref="T:System.Messaging.AcknowledgeTypes" /> valori che rappresentano entrambi i tipi di messaggi di riconoscimento che il sistema invia alla coda di amministrazione e le condizioni in cui i riconoscimenti vengono restituiti all'applicazione mittente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-193">One of the <see cref="T:System.Messaging.AcknowledgeTypes" /> values, which represent both the types of acknowledgment messages the system posts in the administration queue and the conditions under which acknowledgments are returned to the sending application.</span>
          </span>
          <span data-ttu-id="a6214-194">Il valore predefinito è <see langword="None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-194">The default is <see langword="None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-195">Il <xref:System.Messaging.Message.AcknowledgeType%2A> proprietà specifica il tipo di messaggi di riconoscimento richiesto dall'applicazione mittente.</span><span class="sxs-lookup"><span data-stu-id="a6214-195">The <xref:System.Messaging.Message.AcknowledgeType%2A> property specifies the type of acknowledgment messages requested by the sending application.</span></span> <span data-ttu-id="a6214-196">Impostare il <xref:System.Messaging.Message.AcknowledgeType%2A> proprietà prima di inviare il messaggio per richiedere la notifica di alcuni eventi, ad esempio, un messaggio ha raggiunto la coda di destinazione, il recupero di un messaggio o un timeout che impedisce che un messaggio di raggiungimento o il recupero da la coda di destinazione.</span><span class="sxs-lookup"><span data-stu-id="a6214-196">Set the <xref:System.Messaging.Message.AcknowledgeType%2A> property before sending the message to request notification of certain occurrences—for example, a message reaching its destination queue, a message being retrieved, or a time-out preventing a message from reaching or being retrieved from the destination queue.</span></span>  
  
 <span data-ttu-id="a6214-197">Accodamento messaggi restituisce notifica inviando messaggi di riconoscimento per il <xref:System.Messaging.Message.AdministrationQueue%2A> proprietà specificata dal messaggio originale.</span><span class="sxs-lookup"><span data-stu-id="a6214-197">Message Queuing returns notification by sending acknowledgment messages to the <xref:System.Messaging.Message.AdministrationQueue%2A> property specified by the original message.</span></span> <span data-ttu-id="a6214-198">Un messaggio di riconoscimento <xref:System.Messaging.Message.Acknowledgment%2A> proprietà indica il tipo di riconoscimento da esso rappresentata.</span><span class="sxs-lookup"><span data-stu-id="a6214-198">An acknowledgment message's <xref:System.Messaging.Message.Acknowledgment%2A> property indicates the type of acknowledgment that it represents.</span></span> <span data-ttu-id="a6214-199">Ad esempio, se è stato inviato un messaggio di riconoscimento perché un messaggio non ha raggiunto la destinazione prima la <xref:System.Messaging.Message.TimeToReachQueue%2A> intervallo di scadenza, il <xref:System.Messaging.Message.Acknowledgment%2A> proprietà del messaggio di riconoscimento può contenere il valore `ReachQueueTimeout`.</span><span class="sxs-lookup"><span data-stu-id="a6214-199">For example, if an acknowledgment message was sent because a message did not reach the destination before the <xref:System.Messaging.Message.TimeToReachQueue%2A> interval expired, the <xref:System.Messaging.Message.Acknowledgment%2A> property of the acknowledgment message would contain the value `ReachQueueTimeout`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-200">Esempio di codice seguente invia e riceve un messaggio contenente un ordine da e verso una coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-200">The following code example sends and receives a message containing an order to and from a queue.</span></span> <span data-ttu-id="a6214-201">Richiede un riconoscimento positivo in particolare quando il messaggio originale raggiunge o viene recuperato dalla coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-201">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-202">The message is filtered to ignore the <see cref="P:System.Messaging.Message.AcknowledgeType" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-202">The message is filtered to ignore the <see cref="P:System.Messaging.Message.AcknowledgeType" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.Acknowledgment" />
      </Docs>
    </Member>
    <Member MemberName="Acknowledgment">
      <MemberSignature Language="C#" Value="public System.Messaging.Acknowledgment Acknowledgment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.Acknowledgment Acknowledgment" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Acknowledgment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Acknowledgment As Acknowledgment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Acknowledgment Acknowledgment { System::Messaging::Acknowledgment get(); };" />
      <MemberSignature Language="F#" Value="member this.Acknowledgment : System.Messaging.Acknowledgment" Usage="System.Messaging.Message.Acknowledgment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAcknowledgement")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.Acknowledgment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-203">Gets the classification of acknowledgment that this message represents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-203">Gets the classification of acknowledgment that this message represents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-204">Uno dei valori dell'enumerazione <see cref="T:System.Messaging.Acknowledgment" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-204">One of the <see cref="T:System.Messaging.Acknowledgment" /> enumeration values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-205">Quando si riceve un messaggio da una coda di amministrazione, leggere la <xref:System.Messaging.Message.Acknowledgment%2A> proprietà per verificare lo stato del messaggio originale.</span><span class="sxs-lookup"><span data-stu-id="a6214-205">When you receive a message from an administration queue, read the <xref:System.Messaging.Message.Acknowledgment%2A> property to verify the status of the original message.</span></span>  
  
 <span data-ttu-id="a6214-206">Quando un messaggio viene inviato alla coda di destinazione, Accodamento messaggi può essere richiesta per inviare un messaggio di riconoscimento.</span><span class="sxs-lookup"><span data-stu-id="a6214-206">When a message is sent to its destination queue, Message Queuing can be requested to post an acknowledgment message.</span></span> <span data-ttu-id="a6214-207">Tale messaggio può indicare, ad esempio, se il messaggio è arrivato ed è stato recuperato all'interno di timeout specificato, oppure può indicare la causa dell'errore nel caso di errore di recapito.</span><span class="sxs-lookup"><span data-stu-id="a6214-207">Such a message can indicate, for example, whether the message arrived and was retrieved within specified time-outs, or it can indicate what went wrong in the case of delivery failure.</span></span> <span data-ttu-id="a6214-208">La coda di destinazione restituisce messaggi di riconoscimento e li invia alla coda di amministrazione specificata del messaggio originale <xref:System.Messaging.Message.AdministrationQueue%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-208">The destination queue returns acknowledgment messages and posts them to the administration queue specified in the original message's <xref:System.Messaging.Message.AdministrationQueue%2A> property.</span></span> <span data-ttu-id="a6214-209">Il <xref:System.Messaging.Message.Id%2A> proprietà di un messaggio di riconoscimento identifica il messaggio di riconoscimento, non l'originale.</span><span class="sxs-lookup"><span data-stu-id="a6214-209">The <xref:System.Messaging.Message.Id%2A> property of an acknowledgment message identifies the acknowledgment message, not the original message.</span></span> <span data-ttu-id="a6214-210">È possibile trovare l'identificatore del messaggio originale nel riconoscimento <xref:System.Messaging.Message> dell'istanza <xref:System.Messaging.Message.CorrelationId%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-210">You can find the identifier of the original message in the acknowledgment <xref:System.Messaging.Message> instance's <xref:System.Messaging.Message.CorrelationId%2A> property.</span></span>  
  
 <span data-ttu-id="a6214-211">Se questa <xref:System.Messaging.Message> istanza rappresenta un messaggio di riconoscimento, la <xref:System.Messaging.Message.Acknowledgment%2A> proprietà specifica il tipo di riconoscimento.</span><span class="sxs-lookup"><span data-stu-id="a6214-211">If this <xref:System.Messaging.Message> instance represents an acknowledgment message, the <xref:System.Messaging.Message.Acknowledgment%2A> property specifies the type of acknowledgment.</span></span> <span data-ttu-id="a6214-212">In caso contrario, il <xref:System.Messaging.Message.Acknowledgment%2A> proprietà contiene il valore `Normal`.</span><span class="sxs-lookup"><span data-stu-id="a6214-212">Otherwise, the <xref:System.Messaging.Message.Acknowledgment%2A> property contains the value `Normal`.</span></span>  
  
 <span data-ttu-id="a6214-213">Utilizzare il <xref:System.Messaging.Message.AcknowledgeType%2A> proprietà del messaggio originale per specificare le condizioni in cui verranno restituiti riconoscimenti.</span><span class="sxs-lookup"><span data-stu-id="a6214-213">Use the <xref:System.Messaging.Message.AcknowledgeType%2A> property of the original message to specify the circumstances under which acknowledgments will be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-214">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-214">The message has not been sent.</span>
          </span>
          <span data-ttu-id="a6214-215">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-215">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="a6214-216">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.MessagePropertyFilter.Acknowledgment" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-216">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.MessagePropertyFilter.Acknowledgment" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.CorrelationId" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekById(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveById(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="AdministrationQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue AdministrationQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue AdministrationQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AdministrationQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property AdministrationQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ AdministrationQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AdministrationQueue : System.Messaging.MessageQueue with get, set" Usage="System.Messaging.Message.AdministrationQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAdministrationQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-217">Gets or sets the queue that receives the acknowledgement messages that Message Queuing generates.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-217">Gets or sets the queue that receives the acknowledgement messages that Message Queuing generates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-218">Il <see cref="T:System.Messaging.MessageQueue" /> che specifica la coda di amministrazione utilizzata per i messaggi di riconoscimento generati dal sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-218">The <see cref="T:System.Messaging.MessageQueue" /> that specifies the administration queue used for system-generated acknowledgment messages.</span>
          </span>
          <span data-ttu-id="a6214-219">Il valore predefinito è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-219">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-220">La coda specificata nella <xref:System.Messaging.Message.AdministrationQueue%2A> proprietà può essere una coda non transazionale.</span><span class="sxs-lookup"><span data-stu-id="a6214-220">The queue specified in the <xref:System.Messaging.Message.AdministrationQueue%2A> property can be any non-transactional queue.</span></span> <span data-ttu-id="a6214-221">I messaggi di riconoscimento inviati alla coda di amministrazione possono indicare se il messaggio originale ha raggiunto la coda di destinazione e se è stato rimosso dalla coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-221">The acknowledgment messages sent to the administration queue can indicate whether the original message reached its destination queue and whether it was removed from the queue.</span></span>  
  
 <span data-ttu-id="a6214-222">Quando il <xref:System.Messaging.Message.AcknowledgeType%2A> proprietà ha un valore diverso da `None`, l'applicazione di invio deve specificare la coda da usare come coda di amministrazione.</span><span class="sxs-lookup"><span data-stu-id="a6214-222">When the <xref:System.Messaging.Message.AcknowledgeType%2A> property has any value other than `None`, the sending application must specify the queue to use as the administration queue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-223">Esempio di codice seguente invia e riceve un messaggio contenente un ordine da e verso una coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-223">The following code example sends and receives a message containing an order to and from a queue.</span></span> <span data-ttu-id="a6214-224">Richiede un riconoscimento positivo in particolare quando il messaggio originale raggiunge o viene recuperato dalla coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-224">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-225">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AdministrationQueue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-225">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AdministrationQueue" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.Acknowledgment" />
      </Docs>
    </Member>
    <Member MemberName="AppSpecific">
      <MemberSignature Language="C#" Value="public int AppSpecific { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AppSpecific" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AppSpecific" />
      <MemberSignature Language="VB.NET" Value="Public Property AppSpecific As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AppSpecific { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AppSpecific : int with get, set" Usage="System.Messaging.Message.AppSpecific" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAppSpecific")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-226">Gets or sets additional, application-specific information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-226">Gets or sets additional, application-specific information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-227">Informazioni specifiche per l'applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-227">Information that is specific to the application.</span>
          </span>
          <span data-ttu-id="a6214-228">Il valore predefinito è zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-228">The default is zero.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-229">Il <xref:System.Messaging.Message.AppSpecific%2A> proprietà contiene informazioni specifiche dell'applicazione che è possibile utilizzare per organizzare diversi tipi di messaggi.</span><span class="sxs-lookup"><span data-stu-id="a6214-229">The <xref:System.Messaging.Message.AppSpecific%2A> property contains application-specific information that you can use to organize different types of messages.</span></span> <span data-ttu-id="a6214-230">Ad esempio, è possibile utilizzare indici specifici dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="a6214-230">For example, you can use application-specific indexes.</span></span> <span data-ttu-id="a6214-231">È compito dell'applicazione per interpretare <xref:System.Messaging.Message.AppSpecific%2A> informazioni sulle proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-231">It is the responsibility of the application to interpret <xref:System.Messaging.Message.AppSpecific%2A> property information.</span></span>  
  
 <span data-ttu-id="a6214-232">Laddove possibile, è necessario includere i dati del messaggio nel corpo del messaggio anziché il <xref:System.Messaging.Message.AppSpecific%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-232">Whenever possible, you should include message data in the body of the message rather than the <xref:System.Messaging.Message.AppSpecific%2A> property.</span></span>  
  
 <span data-ttu-id="a6214-233">Quando si utilizzano code esterne, utilizzare il <xref:System.Messaging.Message.Extension%2A> proprietà per specificare le proprietà di messaggio che non esistono in Accodamento messaggi.</span><span class="sxs-lookup"><span data-stu-id="a6214-233">When working with foreign queues, use the <xref:System.Messaging.Message.Extension%2A> property to specify message properties that do not exist in Message Queuing.</span></span> <span data-ttu-id="a6214-234">Come con la <xref:System.Messaging.Message.AppSpecific%2A> proprietà, è compito dell'applicazione da riconoscere il contenuto del <xref:System.Messaging.Message.Extension%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-234">As with the <xref:System.Messaging.Message.AppSpecific%2A> property, it is the responsibility of the application to understand the content of the <xref:System.Messaging.Message.Extension%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-235">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AppSpecific" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-235">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AppSpecific" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.Extension" />
        <altmember cref="P:System.Messaging.Message.Body" />
      </Docs>
    </Member>
    <Member MemberName="ArrivedTime">
      <MemberSignature Language="C#" Value="public DateTime ArrivedTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ArrivedTime" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.ArrivedTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArrivedTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ArrivedTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ArrivedTime : DateTime" Usage="System.Messaging.Message.ArrivedTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgArrivedTime")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-236">Gets the time that the message arrived in the destination queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-236">Gets the time that the message arrived in the destination queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-237">Oggetto <see cref="T:System.DateTime" /> che rappresenta l'ora di arrivo del messaggio nella coda di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-237">A <see cref="T:System.DateTime" /> that represents the message's arrival time in the destination queue.</span>
          </span>
          <span data-ttu-id="a6214-238">L'ora è aggiornata rispetto a GMT all'ora locale del computer in cui risiede la coda di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-238">The time is adjusted from GMT to the local time of the computer on which the destination queue resides.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-239">Il messaggio <xref:System.Messaging.Message.TimeToBeReceived%2A> proprietà indica con quale velocità deve ricevere il messaggio dalla coda di destinazione.</span><span class="sxs-lookup"><span data-stu-id="a6214-239">The message's <xref:System.Messaging.Message.TimeToBeReceived%2A> property indicates how quickly the message must be received from the destination queue.</span></span> <span data-ttu-id="a6214-240">Il <xref:System.Messaging.Message.TimeToBeReceived%2A> proprietà timer viene avviato quando viene inviato il messaggio, non quando il messaggio arriva nella coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-240">The <xref:System.Messaging.Message.TimeToBeReceived%2A> property timer starts when the message is sent, not when the message arrives in the queue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-241">Esempio di codice seguente consente di visualizzare il valore di un messaggio <xref:System.Messaging.Message.ArrivedTime%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-241">The following code example displays the value of a message's <xref:System.Messaging.Message.ArrivedTime%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-242">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-242">The message has not been sent.</span>
          </span>
          <span data-ttu-id="a6214-243">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-243">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="a6214-244">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ArrivedTime" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-244">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ArrivedTime" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.TimeToBeReceived" />
      </Docs>
    </Member>
    <Member MemberName="AttachSenderId">
      <MemberSignature Language="C#" Value="public bool AttachSenderId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AttachSenderId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AttachSenderId" />
      <MemberSignature Language="VB.NET" Value="Public Property AttachSenderId As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AttachSenderId { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AttachSenderId : bool with get, set" Usage="System.Messaging.Message.AttachSenderId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAttachSenderId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-245">Gets or sets a value that indicates whether the sender ID should be attached to the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-245">Gets or sets a value that indicates whether the sender ID should be attached to the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-246">
            <see langword="true" /> Se il <see cref="P:System.Messaging.Message.SenderId" /> deve essere collegato al messaggio; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-246">
              <see langword="true" /> if the <see cref="P:System.Messaging.Message.SenderId" /> should be attached to the message; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a6214-247">Il valore predefinito è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-247">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-248">Il <xref:System.Messaging.Message.SenderId%2A> proprietà è una matrice di byte che rappresenta l'identificatore del mittente.</span><span class="sxs-lookup"><span data-stu-id="a6214-248">The <xref:System.Messaging.Message.SenderId%2A> property is an array of bytes that represents the identifier of the sending user.</span></span> <span data-ttu-id="a6214-249">L'ID mittente impostata da Accodamento e viene utilizzato dal gestore delle code ricevente per verificare se il mittente disponga di diritti di accesso a una coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-249">The sender ID is set by Message Queuing and is used by the receiving Queue Manager to verify whether the sender has access rights to a queue.</span></span>  
  
 <span data-ttu-id="a6214-250">L'assenza dell'ID mittente un'indicazione dall'applicazione mittente che Accodamento messaggi deve convalidare il mittente del messaggio non verificare l'accesso del mittente diritti alla coda di ricezione.</span><span class="sxs-lookup"><span data-stu-id="a6214-250">The absence of the sender ID is an indication by the sending application that Message Queuing should not validate the message's sender nor verify the sender's access rights to the receiving queue.</span></span> <span data-ttu-id="a6214-251">Il <xref:System.Messaging.Message.SenderId%2A> sia attendibile solo se il messaggio è stato autenticato quando ha raggiunto la coda di destinazione.</span><span class="sxs-lookup"><span data-stu-id="a6214-251">The <xref:System.Messaging.Message.SenderId%2A> is trustworthy only if the message was authenticated when it reached the destination queue.</span></span> <span data-ttu-id="a6214-252">Il messaggio viene rifiutato quando raggiunge la coda di destinazione se la coda accetta solo messaggi autenticati e il <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> o il <xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A> è di proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="a6214-252">The message is rejected when it reaches the destination queue if the queue accepts only authenticated messages and either the <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> or the <xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A> property is `false`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a6214-253">Se un messaggio viene rifiutato, viene inviato alla coda inattiva (se <xref:System.Messaging.Message.UseDeadLetterQueue%2A> è `true`), o viene ignorata.</span><span class="sxs-lookup"><span data-stu-id="a6214-253">If a message is rejected, it is either sent to the dead-letter queue (if <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `true`), or it is ignored.</span></span> <span data-ttu-id="a6214-254">È possibile richiedere i riconoscimenti quando un messaggio non riesce a raggiungere la coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-254">You can request acknowledgments when a message fails to reach a queue.</span></span> <span data-ttu-id="a6214-255">In caso contrario, quando <xref:System.Messaging.Message.UseDeadLetterQueue%2A> è `false` il messaggio potrebbe andare perso senza alcun avviso.</span><span class="sxs-lookup"><span data-stu-id="a6214-255">Otherwise, when <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false` the message might be lost without warning.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-256">Esempio di codice seguente ottiene e imposta il valore di un messaggio <xref:System.Messaging.Message.AttachSenderId%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-256">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.AttachSenderId%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-257">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AttachSenderId" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-257">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AttachSenderId" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.SenderId" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.Authenticated" />
        <altmember cref="P:System.Messaging.Message.HashAlgorithm" />
        <altmember cref="P:System.Messaging.Message.SenderCertificate" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
      </Docs>
    </Member>
    <Member MemberName="Authenticated">
      <MemberSignature Language="C#" Value="public bool Authenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticated" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Authenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Authenticated : bool" Usage="System.Messaging.Message.Authenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAuthenticated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-258">Gets a value that indicates whether the message was authenticated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-258">Gets a value that indicates whether the message was authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-259">
            <see langword="true" /> Se è stata richiesta l'autenticazione per il messaggio all'ingresso nella coda. in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-259">
              <see langword="true" /> if authentication was requested for the message when it entered the queue; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-260">Il <xref:System.Messaging.Message.Authenticated%2A> proprietà viene utilizzata solo dall'applicazione durante l'interazione con il messaggio e il tentativo di determinare se è stata richiesta l'autenticazione.</span><span class="sxs-lookup"><span data-stu-id="a6214-260">The <xref:System.Messaging.Message.Authenticated%2A> property is used only by the application while it is interacting with the message and trying to determine if authentication was requested.</span></span> <span data-ttu-id="a6214-261">Se il messaggio nella coda, il messaggio è stato autenticato.</span><span class="sxs-lookup"><span data-stu-id="a6214-261">If the message is in the queue, the message was authenticated.</span></span> <span data-ttu-id="a6214-262">Viceversa, se il <xref:System.Messaging.Message.Authenticated%2A> proprietà `true`, il gestore delle code ricevente autenticato il messaggio quando ricevuto il messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-262">Conversely, if the <xref:System.Messaging.Message.Authenticated%2A> property is `true`, the receiving Queue Manager authenticated the message when it received that message.</span></span>  
  
 <span data-ttu-id="a6214-263">Non è possibile determinare se un messaggio di autenticazione non riuscita, esaminando le relative proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-263">You cannot determine if a message failed authentication by looking at its properties.</span></span> <span data-ttu-id="a6214-264">Accodamento messaggi Elimina i messaggi che l'autenticazione non riesce prima che vengano recapitati alla coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-264">Message Queuing discards messages that fail authentication before they are delivered to the queue.</span></span> <span data-ttu-id="a6214-265">Tuttavia, è possibile richiedere che un messaggio di riconoscimento verrà inviato se un errore di recapito impedisce che il messaggio arriva nella coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-265">However, you can request that an acknowledgment message be sent if a delivery failure prevents the message from arriving in the queue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-266">Esempio di codice seguente consente di visualizzare il valore di un messaggio <xref:System.Messaging.Message.Authenticated%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-266">The following code example displays the value of a message's <xref:System.Messaging.Message.Authenticated%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-267">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-267">The message has not been sent.</span>
          </span>
          <span data-ttu-id="a6214-268">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-268">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="a6214-269">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Authenticated" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-269">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Authenticated" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticationProviderName">
      <MemberSignature Language="C#" Value="public string AuthenticationProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AuthenticationProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationProviderName : string with get, set" Usage="System.Messaging.Message.AuthenticationProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAuthenticationProviderName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-270">Gets or sets the name of the cryptographic provider used to generate the digital signature of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-270">Gets or sets the name of the cryptographic provider used to generate the digital signature of the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-271">Il nome del provider di crittografia utilizzato per generare la firma digitale del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-271">The name of the cryptographic provider used to generate the digital signature of the message.</span>
          </span>
          <span data-ttu-id="a6214-272">Il valore predefinito è Microsoft Enhanced Cryptographic Provider versione 1.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-272">The default is Microsoft Base Cryptographic Provider version 1.0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-273">In genere si usa il <xref:System.Messaging.Message.AuthenticationProviderName%2A> quando si utilizzano code esterne.</span><span class="sxs-lookup"><span data-stu-id="a6214-273">You typically use the <xref:System.Messaging.Message.AuthenticationProviderName%2A> when working with foreign queues.</span></span> <span data-ttu-id="a6214-274">Accodamento messaggi richiede il nome del provider di autenticazione e il tipo di provider di autenticazione del provider di crittografia (provider di autenticazione) per convalidare le firme digitali dei messaggi inviati a una coda esterna sia messaggi passati al messaggio Accodamento messaggi da una coda esterna.</span><span class="sxs-lookup"><span data-stu-id="a6214-274">Message Queuing requires the authentication provider name and authentication provider type of the cryptographic provider (authentication provider) to validate the digital signatures of both messages sent to a foreign queue and messages passed to Message Queuing from a foreign queue.</span></span>  
  
 <span data-ttu-id="a6214-275">Quando si invia un messaggio, impostare sempre la <xref:System.Messaging.Message.AuthenticationProviderName%2A> e <xref:System.Messaging.Message.ConnectorType%2A> proprietà contemporaneamente.</span><span class="sxs-lookup"><span data-stu-id="a6214-275">When sending a message, always set the <xref:System.Messaging.Message.AuthenticationProviderName%2A> and <xref:System.Messaging.Message.ConnectorType%2A> properties together.</span></span> <span data-ttu-id="a6214-276">Quando il messaggio viene inviato, Accodamento messaggi ignora il nome del provider di autenticazione se il tipo di connettore non è impostato anche.</span><span class="sxs-lookup"><span data-stu-id="a6214-276">When the message is sent, Message Queuing ignores the authentication provider name if the connector type is not also set.</span></span>  
  
 <span data-ttu-id="a6214-277">Il <xref:System.Messaging.Message.AuthenticationProviderName%2A> proprietà non può essere `null`, ma può essere una stringa vuota ("").</span><span class="sxs-lookup"><span data-stu-id="a6214-277">The <xref:System.Messaging.Message.AuthenticationProviderName%2A> property cannot be `null`, but it can be an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-278">The <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property could not be set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-278">The <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property could not be set.</span>
          </span>
          <span data-ttu-id="a6214-279">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-279">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6214-280">The <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> was set to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-280">The <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> was set to <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.Authenticated" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderType" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticationProviderType">
      <MemberSignature Language="C#" Value="public System.Messaging.CryptographicProviderType AuthenticationProviderType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.CryptographicProviderType AuthenticationProviderType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AuthenticationProviderType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationProviderType As CryptographicProviderType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::CryptographicProviderType AuthenticationProviderType { System::Messaging::CryptographicProviderType get(); void set(System::Messaging::CryptographicProviderType value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationProviderType : System.Messaging.CryptographicProviderType with get, set" Usage="System.Messaging.Message.AuthenticationProviderType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAuthenticationProviderType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.CryptographicProviderType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-281">Gets or sets the type of cryptographic provider used to generate the digital signature of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-281">Gets or sets the type of cryptographic provider used to generate the digital signature of the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-282">Uno dei valori di <see cref="T:System.Messaging.CryptographicProviderType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-282">One of the <see cref="T:System.Messaging.CryptographicProviderType" /> values.</span>
          </span>
          <span data-ttu-id="a6214-283">Il valore predefinito è <see langword="RSA_FULL" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-283">The default is <see langword="RSA_FULL" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-284">In genere si usa il <xref:System.Messaging.Message.AuthenticationProviderType%2A> proprietà quando si lavora con le code esterne per specificare il servizio di crittografia associato a un messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-284">You typically use the <xref:System.Messaging.Message.AuthenticationProviderType%2A> property when working with foreign queues to specify which cryptographic service provider is associated with a message.</span></span> <span data-ttu-id="a6214-285">Accodamento messaggi richiede il nome del provider di autenticazione e il tipo di provider di autenticazione del provider di crittografia (provider di autenticazione) per convalidare le firme digitali dei messaggi inviati a una coda esterna sia messaggi passati al messaggio Accodamento messaggi da una coda esterna.</span><span class="sxs-lookup"><span data-stu-id="a6214-285">Message Queuing requires the authentication provider name and authentication provider type of the cryptographic provider (authentication provider) to validate the digital signatures of both messages sent to a foreign queue and messages passed to Message Queuing from a foreign queue.</span></span>  
  
 <span data-ttu-id="a6214-286">Solo `RsaFull` dovrà essere utilizzato con la messaggistica.</span><span class="sxs-lookup"><span data-stu-id="a6214-286">Only `RsaFull` is intended to be used with messaging.</span></span>  
  
 <span data-ttu-id="a6214-287">Quando si invia un messaggio, impostare sempre la <xref:System.Messaging.Message.AuthenticationProviderType%2A> e <xref:System.Messaging.Message.ConnectorType%2A> proprietà contemporaneamente.</span><span class="sxs-lookup"><span data-stu-id="a6214-287">When sending a message, always set the <xref:System.Messaging.Message.AuthenticationProviderType%2A> and <xref:System.Messaging.Message.ConnectorType%2A> properties together.</span></span> <span data-ttu-id="a6214-288">Quando il messaggio viene inviato, Accodamento messaggi ignora il tipo di provider di autenticazione se il tipo di connettore non è impostato anche.</span><span class="sxs-lookup"><span data-stu-id="a6214-288">When the message is sent, Message Queuing ignores the authentication provider type if the connector type is not also set.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-289">The <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property could not be set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-289">The <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property could not be set.</span>
          </span>
          <span data-ttu-id="a6214-290">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-290">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.Authenticated" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderName" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="T:System.Messaging.CryptographicProviderType" />
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public object Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Body" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Body" />
      <MemberSignature Language="VB.NET" Value="Public Property Body As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Body { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Body : obj with get, set" Usage="System.Messaging.Message.Body" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-291">Gets or sets the content of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-291">Gets or sets the content of the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-292">Oggetto che specifica il contenuto del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-292">An object that specifies the message contents.</span>
          </span>
          <span data-ttu-id="a6214-293">L'oggetto può essere una stringa, una data, valuta, un numero, una matrice di byte o qualsiasi oggetto gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-293">The object can be a string, a date, a currency, a number, an array of bytes, or any managed object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-294">Il messaggio <xref:System.Messaging.Message.Body%2A> proprietà contiene in genere i dati associati con il messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-294">The message's <xref:System.Messaging.Message.Body%2A> property usually contains the data associated with the message.</span></span> <span data-ttu-id="a6214-295">Anche se è anche possibile inviare i dati specifici dell'applicazione <xref:System.Messaging.Message.AppSpecific%2A> e <xref:System.Messaging.Message.Extension%2A> delle proprietà, è necessario includere dati del messaggio nel <xref:System.Messaging.Message.Body%2A> del messaggio laddove possibile.</span><span class="sxs-lookup"><span data-stu-id="a6214-295">Although you can also send application-specific data in the <xref:System.Messaging.Message.AppSpecific%2A> and <xref:System.Messaging.Message.Extension%2A> properties, you should include message data in the <xref:System.Messaging.Message.Body%2A> of the message whenever possible.</span></span> <span data-ttu-id="a6214-296">Solo il <xref:System.Messaging.Message.Body%2A> del contenuto della proprietà è serializzato né crittografato.</span><span class="sxs-lookup"><span data-stu-id="a6214-296">Only the <xref:System.Messaging.Message.Body%2A> property contents are serialized or encrypted.</span></span>  
  
 <span data-ttu-id="a6214-297">Il <xref:System.Messaging.Message.Body%2A> proprietà può contenere qualsiasi oggetto le cui dimensioni non superiori a 4 MB.</span><span class="sxs-lookup"><span data-stu-id="a6214-297">The <xref:System.Messaging.Message.Body%2A> property can contain any object whose size does not exceed 4 MB.</span></span> <span data-ttu-id="a6214-298">Se si utilizza <xref:System.Messaging.MessageQueue.Send%2A?displayProperty=nameWithType> per inviare qualsiasi oggetto che non è di tipo <xref:System.Messaging.Message> per il <xref:System.Messaging.MessageQueue>, tale oggetto viene collocato nella <xref:System.Messaging.Message.Body%2A> proprietà del <xref:System.Messaging.Message> istanza restituita dalla <xref:System.Messaging.MessageQueue.Peek%2A> o <xref:System.Messaging.MessageQueue.Receive%2A>.</span><span class="sxs-lookup"><span data-stu-id="a6214-298">If you use <xref:System.Messaging.MessageQueue.Send%2A?displayProperty=nameWithType> to send any object that is not of type <xref:System.Messaging.Message> to the <xref:System.Messaging.MessageQueue>, that object will be located in the <xref:System.Messaging.Message.Body%2A> property of the <xref:System.Messaging.Message> instance returned by <xref:System.Messaging.MessageQueue.Peek%2A> or <xref:System.Messaging.MessageQueue.Receive%2A>.</span></span>  
  
 <span data-ttu-id="a6214-299">L'argomento stringa in `MessageQueue.Send("hello.")` è riportato un esempio di un oggetto di questo tipo generico.</span><span class="sxs-lookup"><span data-stu-id="a6214-299">The string argument in `MessageQueue.Send("hello.")` is an example of such a generic object.</span></span>  
  
 <span data-ttu-id="a6214-300">Il <xref:System.Messaging.Message.BodyType%2A> proprietà indica il tipo di informazioni archiviate nel corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-300">The <xref:System.Messaging.Message.BodyType%2A> property indicates the type of information that is stored in the message body.</span></span> <span data-ttu-id="a6214-301">Accodamento messaggi utilizza queste informazioni per identificare il tipo del <xref:System.Messaging.Message.Body%2A> del contenuto della proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-301">Message Queuing uses this information to identify the type of the <xref:System.Messaging.Message.Body%2A> property contents.</span></span>  
  
 <span data-ttu-id="a6214-302">Specificare il <xref:System.Messaging.Message.Body%2A> proprietà o il <xref:System.Messaging.Message.BodyStream%2A> proprietà prima di inviare il <xref:System.Messaging.Message> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a6214-302">Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object.</span></span> <span data-ttu-id="a6214-303">Il <xref:System.Messaging.Message.Body%2A> proprietà può essere qualsiasi oggetto serializzabile, ad esempio una stringa di testo, oggetto della struttura, un'istanza di classe o oggetto incorporato.</span><span class="sxs-lookup"><span data-stu-id="a6214-303">The <xref:System.Messaging.Message.Body%2A> property can be any serializable object, such as a text string, structure object, class instance, or embedded object.</span></span>  
  
 <span data-ttu-id="a6214-304">A meno che non si scrive il contenuto del messaggio direttamente il <xref:System.Messaging.Message.BodyStream%2A> impostare la proprietà, il <xref:System.Messaging.Message.Formatter%2A> proprietà prima di inviare il messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-304">Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message.</span></span> <span data-ttu-id="a6214-305">Quando il <xref:System.Messaging.MessageQueue.Send%2A> metodo viene chiamato sul <xref:System.Messaging.MessageQueue> istanza, il corpo viene serializzato utilizzando il formattatore contenuto nella <xref:System.Messaging.Message.Formatter%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-305">When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property.</span></span> <span data-ttu-id="a6214-306">Se si invia il messaggio senza specificare un valore per il <xref:System.Messaging.Message.Formatter%2A> , il formattatore il valore predefinito proprietà <xref:System.Messaging.XmlMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="a6214-306">If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6214-307">Tentativo di impostare il corpo di un messaggio da <xref:System.Decimal.MaxValue> causerà un <xref:System.OverflowException> quando il `Send` metodo del <xref:System.Messaging.MessageQueue> classe è detta e <xref:System.Messaging.ActiveXMessageFormatter> viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="a6214-307">Attempting to set the body of a message to <xref:System.Decimal.MaxValue> will cause a <xref:System.OverflowException> when the `Send` method of the <xref:System.Messaging.MessageQueue> class is called and the <xref:System.Messaging.ActiveXMessageFormatter> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-308">Esempio di codice seguente invia due messaggi con priorità diverse per la coda e successivamente recuperati.</span><span class="sxs-lookup"><span data-stu-id="a6214-308">The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.</span></span>  
  
 [!code-cpp[Message.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CPP/message_defaultandpriority.cpp#1)]
 [!code-csharp[Message.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CS/message_defaultandpriority.cs#1)]
 [!code-vb[Message.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/VB/message_defaultandpriority.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-309">The <see cref="P:System.Messaging.Message.Formatter" /> property is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-309">The <see cref="P:System.Messaging.Message.Formatter" /> property is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a6214-310">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-310">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.Message.BodyStream" />
        <altmember cref="P:System.Messaging.Message.BodyType" />
        <altmember cref="P:System.Messaging.Message.Formatter" />
        <altmember cref="P:System.Messaging.Message.AppSpecific" />
        <altmember cref="P:System.Messaging.Message.Extension" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="BodyStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BodyStream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BodyStream" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.BodyStream" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BodyStream { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BodyStream : System.IO.Stream with get, set" Usage="System.Messaging.Message.BodyStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.BinaryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgBodyStream")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-311">Gets or sets the information in the body of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-311">Gets or sets the information in the body of the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-312">Un <see cref="T:System.IO.Stream" /> che contiene le informazioni serializzate incluso nel <see cref="P:System.Messaging.Message.Body" /> del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-312">A <see cref="T:System.IO.Stream" /> that contains the serialized information included in the <see cref="P:System.Messaging.Message.Body" /> of the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-313">Il corpo di un messaggio può essere costituito da qualsiasi tipo di informazioni, ad esempio, una stringa, una data, valuta, un numero, una matrice di byte o qualsiasi oggetto gestito.</span><span class="sxs-lookup"><span data-stu-id="a6214-313">The body of a message can consist of any type of information—for example, a string, a date, a currency, a number, an array of bytes, or any managed object.</span></span> <span data-ttu-id="a6214-314">Questa informazione viene serializzata in un <xref:System.IO.Stream> deve essere passato alla coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-314">This information is serialized into a <xref:System.IO.Stream> to be passed to the queue.</span></span>  
  
 <span data-ttu-id="a6214-315">Specificare il <xref:System.Messaging.Message.Body%2A> proprietà o il <xref:System.Messaging.Message.BodyStream%2A> proprietà prima di inviare il <xref:System.Messaging.Message> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a6214-315">Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object.</span></span> <span data-ttu-id="a6214-316">Se si imposta la <xref:System.Messaging.Message.Body%2A> proprietà, il contenuto viene serializzato nel <xref:System.Messaging.Message.BodyStream%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-316">If you set the <xref:System.Messaging.Message.Body%2A> property, the contents are serialized into the <xref:System.Messaging.Message.BodyStream%2A> property.</span></span> <span data-ttu-id="a6214-317">Tuttavia, è possibile scegliere di scrivere il <xref:System.Messaging.Message.BodyStream%2A> proprietà direttamente.</span><span class="sxs-lookup"><span data-stu-id="a6214-317">However, you can choose to write the <xref:System.Messaging.Message.BodyStream%2A> property directly.</span></span> <span data-ttu-id="a6214-318">Ciò è utile, ad esempio, quando si desidera aprire una connessione a un file e il contenuto del flusso come corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-318">This is useful, for example, when you want to open a connection to a file and stream its contents as the body of your message.</span></span>  
  
 <span data-ttu-id="a6214-319">A meno che non si scrive il contenuto del messaggio direttamente il <xref:System.Messaging.Message.BodyStream%2A> impostare la proprietà, il <xref:System.Messaging.Message.Formatter%2A> proprietà prima di inviare il messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-319">Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message.</span></span> <span data-ttu-id="a6214-320">Quando il <xref:System.Messaging.MessageQueue.Send%2A> metodo viene chiamato sul <xref:System.Messaging.MessageQueue> istanza, il corpo viene serializzato utilizzando il formattatore contenuto nella <xref:System.Messaging.Message.Formatter%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-320">When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property.</span></span> <span data-ttu-id="a6214-321">Se si invia il messaggio senza specificare un valore per il <xref:System.Messaging.Message.Formatter%2A> , il formattatore il valore predefinito proprietà <xref:System.Messaging.XmlMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="a6214-321">If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="a6214-322">Se si imposta la <xref:System.Messaging.Message.UseEncryption%2A> proprietà da `true` per il corpo del messaggio, il messaggio sarà crittografato quando viene inviato, non quando si imposta la <xref:System.Messaging.Message.Body%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-322">If you set the <xref:System.Messaging.Message.UseEncryption%2A> property to `true` for the body of this message, the message will be encrypted when it is sent, not when you set the <xref:System.Messaging.Message.Body%2A> property.</span></span> <span data-ttu-id="a6214-323">Pertanto, il <xref:System.Messaging.Message.BodyStream%2A> proprietà non verrà mai crittografata.</span><span class="sxs-lookup"><span data-stu-id="a6214-323">Therefore, the <xref:System.Messaging.Message.BodyStream%2A> property is never encrypted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-324">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-324">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.Message.Body" />
        <altmember cref="P:System.Messaging.Message.BodyType" />
        <altmember cref="P:System.Messaging.Message.Formatter" />
        <altmember cref="P:System.Messaging.Message.AppSpecific" />
        <altmember cref="P:System.Messaging.Message.Extension" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="BodyType">
      <MemberSignature Language="C#" Value="public int BodyType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BodyType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.BodyType" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyType As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BodyType { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BodyType : int with get, set" Usage="System.Messaging.Message.BodyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgBodyType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-325">Gets or sets the type of data that the message body contains.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-325">Gets or sets the type of data that the message body contains.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-326">Tipo true del corpo del messaggio, ad esempio una stringa, una data, valuta o un numero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-326">The message body's true type, such as a string, a date, a currency, or a number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-327">Il servizio Accodamento messaggi riconosce il contenuto del corpo come un oggetto o un flusso serializzato.</span><span class="sxs-lookup"><span data-stu-id="a6214-327">Message Queuing recognizes the body contents as an object or as a serialized stream.</span></span> <span data-ttu-id="a6214-328">Il <xref:System.Messaging.Message.BodyType%2A> proprietà indica il tipo di oggetto all'interno di <xref:System.Messaging.Message.Body%2A> proprietà del messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-328">The <xref:System.Messaging.Message.BodyType%2A> property indicates the type of the object within the <xref:System.Messaging.Message.Body%2A> property of the message.</span></span>  
  
 <span data-ttu-id="a6214-329">Il <xref:System.Messaging.XmlMessageFormatter> esegue l'associazione tra i tipi nativi e l'oggetto nel corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-329">The <xref:System.Messaging.XmlMessageFormatter> performs binding between native types and the object in a message body.</span></span> <span data-ttu-id="a6214-330">Se si utilizza il <xref:System.Messaging.XmlMessageFormatter>, il formattatore imposterà automaticamente la <xref:System.Messaging.Message.BodyType%2A> proprietà per l'utente.</span><span class="sxs-lookup"><span data-stu-id="a6214-330">If you use the <xref:System.Messaging.XmlMessageFormatter>, the formatter sets the <xref:System.Messaging.Message.BodyType%2A> property for you.</span></span>  
  
 <span data-ttu-id="a6214-331">Altri formattatori possono fornire funzionalità di associazione anche, come illustrato nel codice c# seguente.</span><span class="sxs-lookup"><span data-stu-id="a6214-331">Other formatters can provide binding functionality also, as shown in the following C# code.</span></span>  
  
```  
message.Formatter = new ActiveXMessageFormatter();  
object myObject message.Body;  
if (myObject is string) {  
}  
if (myObject is int) {  
}  
if (myObject is float) {  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="a6214-332">Esempio di codice seguente consente di visualizzare il valore di un messaggio <xref:System.Messaging.Message.BodyType%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-332">The following code example displays the value of a message's <xref:System.Messaging.Message.BodyType%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-333">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-333">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.Message.Body" />
        <altmember cref="P:System.Messaging.Message.BodyStream" />
        <altmember cref="P:System.Messaging.Message.Formatter" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConnectorType">
      <MemberSignature Language="C#" Value="public Guid ConnectorType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ConnectorType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.ConnectorType" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectorType As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ConnectorType { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectorType : Guid with get, set" Usage="System.Messaging.Message.ConnectorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgConnectorType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-334">Gets or sets a value that indicates that some message properties typically set by Message Queuing were set by the sending application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-334">Gets or sets a value that indicates that some message properties typically set by Message Queuing were set by the sending application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-335">Oggetto <see cref="T:System.Guid" /> definito dall'applicazione e utilizzato in combinazione con applicazioni di connessione o la crittografia dei messaggi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-335">A <see cref="T:System.Guid" /> defined by the application and used in conjunction with connector applications or message encryption.</span>
          </span>
          <span data-ttu-id="a6214-336">Ciò <see cref="T:System.Guid" /> consente a un'applicazione ricevente interpretare le proprietà del messaggio che sono state impostate dall'applicazione mittente ma che in genere vengono impostate da Accodamento messaggi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-336">This <see cref="T:System.Guid" /> allows a receiving application to interpret message properties that were set by the sending application but that are usually set by Message Queuing.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-337">Accodamento messaggi richiede la <xref:System.Messaging.Message.ConnectorType%2A> impostata ogni volta che un'applicazione imposta una proprietà del messaggio che viene in genere impostata da Accodamento messaggi.</span><span class="sxs-lookup"><span data-stu-id="a6214-337">Message Queuing requires the <xref:System.Messaging.Message.ConnectorType%2A> property be set whenever an application sets a message property that is usually set by Message Queuing.</span></span> <span data-ttu-id="a6214-338">Un'applicazione utilizza in genere un <xref:System.Messaging.Message.ConnectorType%2A> in due casi seguenti:</span><span class="sxs-lookup"><span data-stu-id="a6214-338">An application typically uses a <xref:System.Messaging.Message.ConnectorType%2A> in the following two cases:</span></span>  
  
-   <span data-ttu-id="a6214-339">Ogni volta che un'applicazione di connessione passa un messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-339">Whenever a connector application passes a message.</span></span> <span data-ttu-id="a6214-340">Il <xref:System.Messaging.Message.ConnectorType%2A> indica le applicazioni di inviare e ricezione come interpretare le proprietà di sicurezza e conferma del messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-340">The <xref:System.Messaging.Message.ConnectorType%2A> tells the sending and receiving applications how to interpret the security and acknowledgment properties of the message.</span></span>  
  
-   <span data-ttu-id="a6214-341">Ogni volta che l'applicazione mittente, piuttosto che Accodamento messaggi, consente di crittografare un messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-341">Whenever the sending application, rather than Message Queuing, encrypts a message.</span></span> <span data-ttu-id="a6214-342">Il <xref:System.Messaging.Message.ConnectorType%2A> indica ad Accodamento messaggi da utilizzare il <xref:System.Messaging.Message.DestinationSymmetricKey%2A> valore della proprietà per decrittografare il messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-342">The <xref:System.Messaging.Message.ConnectorType%2A> tells Message Queuing to use the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property value to decrypt the message.</span></span>  
  
 <span data-ttu-id="a6214-343">È necessario impostare il <xref:System.Messaging.Message.ConnectorType%2A> proprietà se si impostano le proprietà seguenti (in caso contrario, la coda ignora queste proprietà quando il messaggio viene inviato):</span><span class="sxs-lookup"><span data-stu-id="a6214-343">You must set the <xref:System.Messaging.Message.ConnectorType%2A> property if you set any of the following properties (otherwise, the queue ignores these properties when the message is sent):</span></span>  
  
-   <xref:System.Messaging.Message.AuthenticationProviderName%2A>  
  
-   <xref:System.Messaging.Message.AuthenticationProviderType%2A>  
  
-   <xref:System.Messaging.Message.DestinationSymmetricKey%2A>  
  
-   <xref:System.Messaging.Message.DigitalSignature%2A>  
  
-   <xref:System.Messaging.Message.MessageType%2A>  
  
-   <xref:System.Messaging.Message.SenderId%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-344">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ConnectorType" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-344">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ConnectorType" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderName" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderType" />
        <altmember cref="P:System.Messaging.Message.DestinationSymmetricKey" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
        <altmember cref="P:System.Messaging.Message.MessageType" />
        <altmember cref="P:System.Messaging.Message.SenderId" />
      </Docs>
    </Member>
    <Member MemberName="CorrelationId">
      <MemberSignature Language="C#" Value="public string CorrelationId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CorrelationId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.CorrelationId" />
      <MemberSignature Language="VB.NET" Value="Public Property CorrelationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CorrelationId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CorrelationId : string with get, set" Usage="System.Messaging.Message.CorrelationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgCorrelationId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-345">Gets or sets the message identifier used by acknowledgment, report, and response messages to reference the original message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-345">Gets or sets the message identifier used by acknowledgment, report, and response messages to reference the original message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-346">Identificatore del messaggio specificato per il <see cref="P:System.Messaging.Message.Id" /> proprietà del messaggio originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-346">The message identifier specified by the <see cref="P:System.Messaging.Message.Id" /> property of the original message.</span>
          </span>
          <span data-ttu-id="a6214-347">L'identificatore di correlazione viene utilizzato da Accodamento durante la generazione di un messaggio di riconoscimento o un report e da un'applicazione quando genera un messaggio di risposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-347">The correlation identifier is used by Message Queuing when it generates an acknowledgment or report message, and by an application when it generates a response message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-348">Quando il servizio Accodamento messaggi genera un messaggio di riconoscimento o di rapporto, utilizza la proprietà identificatore di correlazione per specificare l'identificatore del messaggio originale.</span><span class="sxs-lookup"><span data-stu-id="a6214-348">When Message Queuing generates an acknowledgment or report message, it uses the correlation identifier property to specify the message identifier of the original message.</span></span> <span data-ttu-id="a6214-349">In questo modo l'identificatore di correlazione unisce il rapporto o il messaggio di riconoscimento al messaggio originale.</span><span class="sxs-lookup"><span data-stu-id="a6214-349">In this manner, the correlation identifier ties the report or acknowledgment message to the original message.</span></span>  
  
 <span data-ttu-id="a6214-350">Applicazione mittente può quindi far corrispondere il riconoscimento o un report con il messaggio originale utilizzando il <xref:System.Messaging.Message.CorrelationId%2A> proprietà per identificare il messaggio originale <xref:System.Messaging.Message.Id%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-350">The sending application can then match the acknowledgment or report with the original message by using the <xref:System.Messaging.Message.CorrelationId%2A> property to identify the original message's <xref:System.Messaging.Message.Id%2A> property.</span></span>  
  
 <span data-ttu-id="a6214-351">Le applicazioni connettore devono inoltre impostare il <xref:System.Messaging.Message.CorrelationId%2A> proprietà dei messaggi di riconoscimento e report per l'identificatore del messaggio del messaggio originale.</span><span class="sxs-lookup"><span data-stu-id="a6214-351">Connector applications also must set the <xref:System.Messaging.Message.CorrelationId%2A> property of the acknowledgment and report messages to the message identifier of the original message.</span></span>  
  
 <span data-ttu-id="a6214-352">Quando l'applicazione invia un messaggio di risposta all'applicazione mittente, è possibile impostare il <xref:System.Messaging.Message.CorrelationId%2A> proprietà del messaggio di risposta per l'identificatore del messaggio del messaggio originale.</span><span class="sxs-lookup"><span data-stu-id="a6214-352">When your application sends a response message to the sending application, you can set the <xref:System.Messaging.Message.CorrelationId%2A> property of the response message to the message identifier of the original message.</span></span> <span data-ttu-id="a6214-353">Applicazione mittente può quindi far corrispondere il messaggio di risposta al messaggio inviato.</span><span class="sxs-lookup"><span data-stu-id="a6214-353">The sending application can then match your response message to the message that was sent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-354">Esempio di codice seguente invia e riceve un messaggio che contiene un ordine da e verso una coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-354">The following code example sends and receives a message that contains an order to and from a queue.</span></span> <span data-ttu-id="a6214-355">Richiede un riconoscimento positivo in particolare quando il messaggio originale raggiunge o viene recuperato dalla coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-355">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-356">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.CorrelationId" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-356">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.CorrelationId" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6214-357">The <see cref="P:System.Messaging.Message.CorrelationId" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-357">The <see cref="P:System.Messaging.Message.CorrelationId" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.Id" />
        <altmember cref="P:System.Messaging.MessagePropertyFilter.Acknowledgment" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DestinationQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue DestinationQueue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue DestinationQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.DestinationQueue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DestinationQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ DestinationQueue { System::Messaging::MessageQueue ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DestinationQueue : System.Messaging.MessageQueue" Usage="System.Messaging.Message.DestinationQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgDestinationQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-358">Gets the intended destination queue for a message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-358">Gets the intended destination queue for a message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-359">Oggetto <see cref="T:System.Messaging.MessageQueue" /> che specifica la coda di destinazione specificata per il messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-359">A <see cref="T:System.Messaging.MessageQueue" /> that specifies the intended destination queue for the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-360">Il <xref:System.Messaging.Message.DestinationQueue%2A> proprietà viene in genere utilizzata per determinare la destinazione originale di un messaggio che si trova in una coda journal o inattiva.</span><span class="sxs-lookup"><span data-stu-id="a6214-360">The <xref:System.Messaging.Message.DestinationQueue%2A> property is most commonly used to determine the original destination of a message that arrived in a journal or dead-letter queue.</span></span> <span data-ttu-id="a6214-361">In genere, non è necessario esaminare questa proprietà, perché in genere è recuperare il messaggio dalla coda di destinazione.</span><span class="sxs-lookup"><span data-stu-id="a6214-361">Usually, you do not need to examine this property, because you typically retrieve the message from its destination queue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-362">Esempio di codice seguente consente di visualizzare il valore di un messaggio <xref:System.Messaging.Message.DestinationQueue%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-362">The following code example displays the value of a message's <xref:System.Messaging.Message.DestinationQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-363">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-363">The message has not been sent.</span>
          </span>
          <span data-ttu-id="a6214-364">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-364">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="a6214-365">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DestinationQueue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-365">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DestinationQueue" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.Message.UseJournalQueue" />
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
      </Docs>
    </Member>
    <Member MemberName="DestinationSymmetricKey">
      <MemberSignature Language="C#" Value="public byte[] DestinationSymmetricKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] DestinationSymmetricKey" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.DestinationSymmetricKey" />
      <MemberSignature Language="VB.NET" Value="Public Property DestinationSymmetricKey As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ DestinationSymmetricKey { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DestinationSymmetricKey : byte[] with get, set" Usage="System.Messaging.Message.DestinationSymmetricKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgDestinationSymmetricKey")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-366">Gets or sets the symmetric key used to encrypt application-encrypted messages or messages sent to foreign queues.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-366">Gets or sets the symmetric key used to encrypt application-encrypted messages or messages sent to foreign queues.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-367">Matrice di valori di byte che specifica la chiave simmetrica di destinazione utilizzata per crittografare il messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-367">An array of byte values that specifies the destination symmetric key used to encrypt the message.</span>
          </span>
          <span data-ttu-id="a6214-368">Il valore predefinito è una matrice di lunghezza zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-368">The default is a zero-length array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-369">Due scenari è necessario utilizzare il <xref:System.Messaging.Message.DestinationSymmetricKey%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-369">Two scenarios require you to use the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property.</span></span> <span data-ttu-id="a6214-370">Il primo viene utilizzato quando l'applicazione, anziché con Accodamento messaggi, consente di crittografare un messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-370">The first is when your application, rather than Message Queuing, encrypts a message.</span></span> <span data-ttu-id="a6214-371">Il secondo è quando si invia un messaggio crittografato a un sistema di accodamento diverso da Accodamento messaggi.</span><span class="sxs-lookup"><span data-stu-id="a6214-371">The second is when you send an encrypted message to a queuing system other than Message Queuing.</span></span>  
  
 <span data-ttu-id="a6214-372">Prima di impostare questa proprietà, è necessario crittografare la chiave simmetrica con la chiave pubblica del gestore delle code ricevente.</span><span class="sxs-lookup"><span data-stu-id="a6214-372">Before you set this property, you must encrypt the symmetric key with the public key of the receiving queue manager.</span></span> <span data-ttu-id="a6214-373">Quando si invia un messaggio crittografato dall'applicazione, il gestore delle code ricevente utilizza la chiave simmetrica per decrittografare il messaggio prima dell'invio alla coda di destinazione.</span><span class="sxs-lookup"><span data-stu-id="a6214-373">When you send an application-encrypted message, the receiving queue manager uses the symmetric key to decrypt the message before sending it to its destination queue.</span></span>  
  
 <span data-ttu-id="a6214-374">Se si invia un messaggio a una coda esterna, il messaggio viene prima ricevuto dall'applicazione di connettore appropriato, che inoltra il messaggio crittografato con la chiave simmetrica associata all'applicazione ricevente.</span><span class="sxs-lookup"><span data-stu-id="a6214-374">If you send a message to a foreign queue, the message is first received by the appropriate connector application, which forwards the encrypted message with the attached symmetric key to the receiving application.</span></span> <span data-ttu-id="a6214-375">È compito dell'applicazione ricevente per decrittografare il messaggio utilizzando la chiave simmetrica.</span><span class="sxs-lookup"><span data-stu-id="a6214-375">It is then the responsibility of the receiving application to decrypt the message using the symmetric key.</span></span>  
  
 <span data-ttu-id="a6214-376">Quando si imposta la <xref:System.Messaging.Message.DestinationSymmetricKey%2A> , è necessario impostare anche la <xref:System.Messaging.Message.ConnectorType%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-376">When you set the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property, you must also set the <xref:System.Messaging.Message.ConnectorType%2A> property.</span></span> <span data-ttu-id="a6214-377">Quando il messaggio viene inviato, Accodamento messaggi non viene fatta la <xref:System.Messaging.Message.DestinationSymmetricKey%2A> proprietà se il <xref:System.Messaging.Message.ConnectorType%2A> non proprietà è impostata.</span><span class="sxs-lookup"><span data-stu-id="a6214-377">When the message is sent, Message Queuing ignores the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property if the <xref:System.Messaging.Message.ConnectorType%2A> property is not also set.</span></span>  
  
 <span data-ttu-id="a6214-378">Il <xref:System.Messaging.Message.DestinationSymmetricKey%2A> proprietà ha una dimensione di matrice massima pari a 256.</span><span class="sxs-lookup"><span data-stu-id="a6214-378">The <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property has a maximum array size of 256.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-379">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-379">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6214-380">The <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-380">The <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
      </Docs>
    </Member>
    <Member MemberName="DigitalSignature">
      <MemberSignature Language="C#" Value="public byte[] DigitalSignature { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] DigitalSignature" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.DigitalSignature" />
      <MemberSignature Language="VB.NET" Value="Public Property DigitalSignature As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ DigitalSignature { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DigitalSignature : byte[] with get, set" Usage="System.Messaging.Message.DigitalSignature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgDigitalSignature")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-381">Gets or sets the digital signature that Message Queuing uses to authenticate the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-381">Gets or sets the digital signature that Message Queuing uses to authenticate the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-382">Matrice di valori di byte che specifica la firma digitale di Accodamento messaggi 1.0 utilizzata per autenticare il messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-382">An array of byte values that specifies the Message Queuing 1.0 digital signature used to authenticate the message.</span>
          </span>
          <span data-ttu-id="a6214-383">Il valore predefinito è una matrice di lunghezza zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-383">The default is a zero-length array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-384">Accodamento messaggi utilizza la firma digitale per autenticare i messaggi che sono stati inviati dalla versione 1.0 di Accodamento messaggi.</span><span class="sxs-lookup"><span data-stu-id="a6214-384">Message Queuing uses the digital signature when authenticating messages that were sent by Message Queuing version 1.0.</span></span> <span data-ttu-id="a6214-385">Nella maggior parte dei casi, il servizio Accodamento messaggi genera l'errore e imposta il <xref:System.Messaging.Message.DigitalSignature%2A> proprietà quando l'applicazione mittente lo richiede l'autenticazione.</span><span class="sxs-lookup"><span data-stu-id="a6214-385">In most cases, Message Queuing generates and sets the <xref:System.Messaging.Message.DigitalSignature%2A> property when the sending application requests authentication.</span></span> <span data-ttu-id="a6214-386">L'applicazione ricevente utilizza questa proprietà per recuperare la firma digitale allegata al messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-386">The receiving application uses this property to retrieve the digital signature attached to the message.</span></span>  
  
 <span data-ttu-id="a6214-387">È possibile utilizzare solo il <xref:System.Messaging.Message.DigitalSignature%2A> proprietà durante l'esecuzione di Accodamento messaggi versione 2.0.</span><span class="sxs-lookup"><span data-stu-id="a6214-387">You can only use the <xref:System.Messaging.Message.DigitalSignature%2A> property when running Message Queuing version 2.0.</span></span> <span data-ttu-id="a6214-388">Quando richiede l'autenticazione, è necessario specificare le firme versione 1.0 di Accodamento messaggi all'applicazione mittente.</span><span class="sxs-lookup"><span data-stu-id="a6214-388">The sending application must specify Message Queuing version 1.0 signatures when requesting authentication.</span></span> <span data-ttu-id="a6214-389">Se l'applicazione mittente invia una firma di versione 2.0 accodamento, questa proprietà contiene un buffer di quattro byte, ciascuno contenente zero.</span><span class="sxs-lookup"><span data-stu-id="a6214-389">If the sending application sends a Message Queuing version 2.0 signature, this property contains a buffer of four bytes, each containing zero.</span></span>  
  
 <span data-ttu-id="a6214-390">Il <xref:System.Messaging.Message.DigitalSignature%2A> proprietà, insieme con il <xref:System.Messaging.Message.SenderCertificate%2A> proprietà, viene inoltre utilizzata dalle applicazioni di connessione quando viene inviato un messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-390">The <xref:System.Messaging.Message.DigitalSignature%2A> property, together with the <xref:System.Messaging.Message.SenderCertificate%2A> property, is also used by connector applications when a message is sent.</span></span> <span data-ttu-id="a6214-391">In questo scenario, l'applicazione di connessione, invece di Accodamento messaggi, genera la firma digitale, basata sul certificato dell'utente che invia il messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-391">In this scenario, the connector application—rather than Message Queuing—generates the digital signature, which it bases on the certificate of the user sending the message.</span></span>  
  
 <span data-ttu-id="a6214-392">Il <xref:System.Messaging.Message.DigitalSignature%2A> proprietà ha una dimensione di matrice massima pari a 256.</span><span class="sxs-lookup"><span data-stu-id="a6214-392">The <xref:System.Messaging.Message.DigitalSignature%2A> property has a maximum array size of 256.</span></span>  
  
 <span data-ttu-id="a6214-393">Quando si imposta la <xref:System.Messaging.Message.DigitalSignature%2A> , è necessario impostare anche la <xref:System.Messaging.Message.ConnectorType%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-393">When you set the <xref:System.Messaging.Message.DigitalSignature%2A> property, you must also set the <xref:System.Messaging.Message.ConnectorType%2A> property.</span></span> <span data-ttu-id="a6214-394">Quando viene inviato un messaggio, Accodamento messaggi non viene fatta la <xref:System.Messaging.Message.DigitalSignature%2A> proprietà se il <xref:System.Messaging.Message.ConnectorType%2A> non proprietà è impostata.</span><span class="sxs-lookup"><span data-stu-id="a6214-394">When a message is sent, Message Queuing ignores the <xref:System.Messaging.Message.DigitalSignature%2A> property if the <xref:System.Messaging.Message.ConnectorType%2A> property is not also set.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-395">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DigitalSignature" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-395">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DigitalSignature" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6214-396">The <see cref="P:System.Messaging.Message.DigitalSignature" /> property is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-396">The <see cref="P:System.Messaging.Message.DigitalSignature" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.SenderCertificate" />
        <altmember cref="P:System.Messaging.Message.HashAlgorithm" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
      </Docs>
    </Member>
    <Member MemberName="EncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionAlgorithm EncryptionAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionAlgorithm EncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.EncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionAlgorithm As EncryptionAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionAlgorithm EncryptionAlgorithm { System::Messaging::EncryptionAlgorithm get(); void set(System::Messaging::EncryptionAlgorithm value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionAlgorithm : System.Messaging.EncryptionAlgorithm with get, set" Usage="System.Messaging.Message.EncryptionAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgEncryptionAlgorithm")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-397">Gets or sets the encryption algorithm used to encrypt the body of a private message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-397">Gets or sets the encryption algorithm used to encrypt the body of a private message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-398">Uno dei valori dell'enumerazione <see cref="T:System.Messaging.EncryptionAlgorithm" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-398">One of the <see cref="T:System.Messaging.EncryptionAlgorithm" /> enumeration values.</span>
          </span>
          <span data-ttu-id="a6214-399">Il valore predefinito è <see langword="RC2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-399">The default is <see langword="RC2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-400">Se un messaggio è privato (crittografata) viene crittografato prima che venga inviato e decrittografato al momento della ricezione.</span><span class="sxs-lookup"><span data-stu-id="a6214-400">If a message is private (encrypted), it is encrypted before it is sent and decrypted upon receipt.</span></span> <span data-ttu-id="a6214-401">Il <xref:System.Messaging.Message.EncryptionAlgorithm%2A> proprietà specifica l'algoritmo utilizzato per crittografare il corpo di un messaggio privato.</span><span class="sxs-lookup"><span data-stu-id="a6214-401">The <xref:System.Messaging.Message.EncryptionAlgorithm%2A> property specifies the algorithm used to encrypt the message body of a private message.</span></span>  
  
 <span data-ttu-id="a6214-402">Una coda può richiedere che in ingresso dei messaggi crittografati.</span><span class="sxs-lookup"><span data-stu-id="a6214-402">A queue can require that incoming messages be encrypted.</span></span> <span data-ttu-id="a6214-403">Se un'applicazione invia un messaggio di (pubblici) non crittografato a una coda che accetta solo messaggi privati o invia un messaggio privato a una coda che accetta solo messaggi non privati, la coda rifiuta il messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-403">If an application sends a non-encrypted (non-private) message to a queue that accepts only private messages, or if it sends a private message to a queue that accepts only non-private messages, the queue rejects the message.</span></span> <span data-ttu-id="a6214-404">Applicazione mittente può richiedere che in tal caso essere restituito un messaggio di riconoscimento negativo.</span><span class="sxs-lookup"><span data-stu-id="a6214-404">The sending application can request that a negative acknowledgment message be returned in such a case.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-405">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.EncryptionAlgorithm" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-405">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.EncryptionAlgorithm" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
        <altmember cref="P:System.Messaging.MessageQueue.EncryptionRequired" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="T:System.Messaging.EncryptionRequired" />
      </Docs>
    </Member>
    <Member MemberName="Extension">
      <MemberSignature Language="C#" Value="public byte[] Extension { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Extension" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Extension" />
      <MemberSignature Language="VB.NET" Value="Public Property Extension As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Extension { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Extension : byte[] with get, set" Usage="System.Messaging.Message.Extension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgExtension")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-406">Gets or sets additional, application-defined information associated with the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-406">Gets or sets additional, application-defined information associated with the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-407">Matrice di valori byte che fornisce informazioni definite dall'applicazione associate al messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-407">An array of byte values that provides application-defined information associated with the message.</span>
          </span>
          <span data-ttu-id="a6214-408">Il valore predefinito è una matrice di lunghezza zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-408">The default is a zero-length array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-409">Il <xref:System.Messaging.Message.Extension%2A> proprietà fornisce informazioni aggiuntive definite dall'applicazione, come un oggetto binario di grandi dimensioni, che è associato il messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-409">The <xref:System.Messaging.Message.Extension%2A> property provides for application-defined information, like a large binary object, that is associated with the message.</span></span> <span data-ttu-id="a6214-410">È compito dell'applicazione ricevente per interpretare il contenuto del <xref:System.Messaging.Message.Extension%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-410">It is the responsibility of the receiving application to interpret the contents of the <xref:System.Messaging.Message.Extension%2A> property.</span></span>  
  
 <span data-ttu-id="a6214-411">Dove possibile, è necessario includere dati del messaggio nel <xref:System.Messaging.Message.Body%2A> proprietà del messaggio anziché il <xref:System.Messaging.Message.Extension%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-411">Where possible, you should include message data in the <xref:System.Messaging.Message.Body%2A> property of the message rather than the <xref:System.Messaging.Message.Extension%2A> property.</span></span>  
  
 <span data-ttu-id="a6214-412">Quando si utilizzano code esterne, utilizzare il <xref:System.Messaging.Message.Extension%2A> proprietà per specificare le proprietà di messaggio che non esistono in Accodamento messaggi.</span><span class="sxs-lookup"><span data-stu-id="a6214-412">When working with foreign queues, use the <xref:System.Messaging.Message.Extension%2A> property to specify message properties that do not exist in Message Queuing.</span></span>  
  
 <span data-ttu-id="a6214-413">Esiste una coda esterna in un sistema di accodamento diverso da Accodamento messaggi Microsoft.</span><span class="sxs-lookup"><span data-stu-id="a6214-413">A foreign queue exists in a queuing system other than Microsoft Message Queuing.</span></span> <span data-ttu-id="a6214-414">Il servizio Accodamento messaggi comunica con queste code tramite un'applicazione di connessione.</span><span class="sxs-lookup"><span data-stu-id="a6214-414">Message Queuing communicates with such queues through a connector application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-415">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Extension" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-415">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Extension" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6214-416">The <see cref="P:System.Messaging.Message.Extension" /> property is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-416">The <see cref="P:System.Messaging.Message.Extension" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.AppSpecific" />
        <altmember cref="P:System.Messaging.Message.Body" />
      </Docs>
    </Member>
    <Member MemberName="Formatter">
      <MemberSignature Language="C#" Value="public System.Messaging.IMessageFormatter Formatter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.IMessageFormatter Formatter" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Formatter" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatter As IMessageFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::IMessageFormatter ^ Formatter { System::Messaging::IMessageFormatter ^ get(); void set(System::Messaging::IMessageFormatter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Formatter : System.Messaging.IMessageFormatter with get, set" Usage="System.Messaging.Message.Formatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.IMessageFormatter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-417">Gets or sets the formatter used to serialize an object into or deserialize an object from the message body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-417">Gets or sets the formatter used to serialize an object into or deserialize an object from the message body.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-418">Il <see cref="T:System.Messaging.IMessageFormatter" /> che produce un flusso da scrivere o leggere dal corpo del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-418">The <see cref="T:System.Messaging.IMessageFormatter" /> that produces a stream to be written to or read from the message body.</span>
          </span>
          <span data-ttu-id="a6214-419">Il valore predefinito è <see cref="T:System.Messaging.XmlMessageFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-419">The default is <see cref="T:System.Messaging.XmlMessageFormatter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-420">Utilizzare il <xref:System.Messaging.Message.Formatter%2A> proprietà durante la lettura e scrittura di un messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-420">Use the <xref:System.Messaging.Message.Formatter%2A> property when reading and writing a message.</span></span> <span data-ttu-id="a6214-421">Quando un messaggio viene inviato alla coda, il formattatore serializza i <xref:System.Messaging.Message.Body%2A> proprietà in un flusso che può essere inviato alla coda dei messaggi.</span><span class="sxs-lookup"><span data-stu-id="a6214-421">When a message is sent to the queue, the formatter serializes the <xref:System.Messaging.Message.Body%2A> property into a stream that can be sent to the message queue.</span></span> <span data-ttu-id="a6214-422">Durante la lettura da una coda, il formattatore deserializza i dati del messaggio nel <xref:System.Messaging.Message.Body%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-422">When reading from a queue, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property.</span></span>  
  
 <span data-ttu-id="a6214-423">A meno che non si scrive il contenuto del messaggio direttamente il <xref:System.Messaging.Message.BodyStream%2A> impostare la proprietà, il <xref:System.Messaging.Message.Formatter%2A> proprietà prima di inviare il messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-423">Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message.</span></span> <span data-ttu-id="a6214-424">Quando il <xref:System.Messaging.MessageQueue.Send%2A> metodo viene chiamato sul <xref:System.Messaging.MessageQueue> istanza, il corpo viene serializzato utilizzando il formattatore contenuto nella <xref:System.Messaging.Message.Formatter%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-424">When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property.</span></span> <span data-ttu-id="a6214-425">Se si invia il messaggio senza specificare un valore per il <xref:System.Messaging.Message.Formatter%2A> , il formattatore il valore predefinito proprietà <xref:System.Messaging.XmlMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="a6214-425">If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="a6214-426">Il <xref:System.Messaging.XmlMessageFormatter> è regime, pertanto non è necessario avere lo stesso oggetto di tipo per il mittente e ricevitore quando si utilizza questo formato.</span><span class="sxs-lookup"><span data-stu-id="a6214-426">The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</span></span> <span data-ttu-id="a6214-427">Il <xref:System.Messaging.ActiveXMessageFormatter> e <xref:System.Messaging.BinaryMessageFormatter> serializzare i dati in una rappresentazione binaria.</span><span class="sxs-lookup"><span data-stu-id="a6214-427">The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation.</span></span> <span data-ttu-id="a6214-428">Il <xref:System.Messaging.ActiveXMessageFormatter> viene utilizzato durante l'invio o la ricezione di componenti COM.</span><span class="sxs-lookup"><span data-stu-id="a6214-428">The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-429">Esempio di codice seguente illustra la formattazione di un corpo del messaggio tramite <xref:System.Messaging.BinaryMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="a6214-429">The following code example demonstrates formatting a message body using <xref:System.Messaging.BinaryMessageFormatter>.</span></span>  
  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 <span data-ttu-id="a6214-430">Esempio di codice seguente illustra la formattazione di un corpo del messaggio tramite <xref:System.Messaging.XmlMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="a6214-430">The following code example demonstrates formatting a message body using <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6214-431">The <see cref="P:System.Messaging.Message.Formatter" /> property is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-431">The <see cref="P:System.Messaging.Message.Formatter" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="T:System.Messaging.XmlMessageFormatter" />
        <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
        <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
        <altmember cref="P:System.Messaging.MessageQueue.Formatter" />
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Messaging.HashAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.HashAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As HashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::HashAlgorithm HashAlgorithm { System::Messaging::HashAlgorithm get(); void set(System::Messaging::HashAlgorithm value); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Messaging.HashAlgorithm with get, set" Usage="System.Messaging.Message.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgHashAlgorithm")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-432">Gets or sets the hashing algorithm that Message Queuing uses when authenticating a message or creating a digital signature for a message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-432">Gets or sets the hashing algorithm that Message Queuing uses when authenticating a message or creating a digital signature for a message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-433">Uno dei valori dell'enumerazione <see cref="T:System.Messaging.HashAlgorithm" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-433">One of the <see cref="T:System.Messaging.HashAlgorithm" /> enumeration values.</span>
          </span>
          <span data-ttu-id="a6214-434">Per Windows XP, il valore predefinito è <see langword="SHA" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-434">For Windows XP, the default is <see langword="SHA" />.</span>
          </span>
          <span data-ttu-id="a6214-435">In caso contrario, il valore predefinito è <see langword="MD5" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-435">Otherwise, the default is <see langword="MD5" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-436">Nel computer di origine, Accodamento messaggi utilizza l'algoritmo di hash durante la creazione di una firma digitale di un messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-436">On the source computer, Message Queuing uses the hashing algorithm when creating a digital signature for a message.</span></span> <span data-ttu-id="a6214-437">Il gestore delle code di destinazione utilizza quindi lo stesso algoritmo hash per autenticare il messaggio quando viene ricevuto.</span><span class="sxs-lookup"><span data-stu-id="a6214-437">The target Queue Manager then uses the same hashing algorithm to authenticate the message when it is received.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-438">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.HashAlgorithm" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-438">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.HashAlgorithm" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.AttachSenderId" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
        <altmember cref="T:System.Messaging.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Messaging.Message.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-439">Gets the message's identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-439">Gets the message's identifier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-440">L'identificatore univoco del messaggio, che viene generato da Accodamento messaggi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-440">The message's unique identifier, which is generated by Message Queuing.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-441">Accodamento messaggi genera un identificatore di messaggio quando viene inviato il messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-441">Message Queuing generates a message identifier when the message is sent.</span></span> <span data-ttu-id="a6214-442">L'identificatore è composto da 20 byte e comprende due elementi: la macchina <xref:System.Guid> del computer mittente e un identificatore univoco per il messaggio nel computer.</span><span class="sxs-lookup"><span data-stu-id="a6214-442">The identifier is composed of 20 bytes and includes two items: the machine <xref:System.Guid> of the sending computer and a unique identifier for the message on the computer.</span></span> <span data-ttu-id="a6214-443">La combinazione dei due elementi genera un identificatore di messaggio univoco per la rete.</span><span class="sxs-lookup"><span data-stu-id="a6214-443">The combination of the two items produces a message identifier that is unique on the network.</span></span>  
  
 <span data-ttu-id="a6214-444">Accodamento messaggi genera identificatori di messaggio per tutti i messaggi, inclusi i messaggi di riconoscimento e di report.</span><span class="sxs-lookup"><span data-stu-id="a6214-444">Message Queuing generates message identifiers for all messages—including acknowledgment and report messages.</span></span> <span data-ttu-id="a6214-445">Un messaggio di riconoscimento viene in genere inviato dall'Accodamento messaggi in risposta all'arrivo o negativo di un messaggio originale inviato.</span><span class="sxs-lookup"><span data-stu-id="a6214-445">An acknowledgment message is generally sent by Message Queuing in reaction to the arrival or failure of an original, sent message.</span></span> <span data-ttu-id="a6214-446">È possibile trovare il <xref:System.Messaging.Message.Id%2A> valore della proprietà del messaggio originale nel <xref:System.Messaging.Message.CorrelationId%2A> proprietà di un messaggio di riconoscimento.</span><span class="sxs-lookup"><span data-stu-id="a6214-446">You can find the <xref:System.Messaging.Message.Id%2A> property value of the original message in the <xref:System.Messaging.Message.CorrelationId%2A> property of an acknowledgment message.</span></span>  
  
 <span data-ttu-id="a6214-447">È anche possibile usare il <xref:System.Messaging.Message.Id%2A> proprietà quando si invia un messaggio di risposta a una coda di risposta.</span><span class="sxs-lookup"><span data-stu-id="a6214-447">You can also use the <xref:System.Messaging.Message.Id%2A> property when sending a response message to a response queue.</span></span> <span data-ttu-id="a6214-448">Per includere l'identificatore del messaggio originale in un messaggio di risposta, impostare il <xref:System.Messaging.Message.CorrelationId%2A> proprietà del messaggio di risposta per la <xref:System.Messaging.Message.Id%2A> proprietà del messaggio originale.</span><span class="sxs-lookup"><span data-stu-id="a6214-448">To include the identifier of the original message in a response message, set the <xref:System.Messaging.Message.CorrelationId%2A> property of the response message to the <xref:System.Messaging.Message.Id%2A> property of the original message.</span></span> <span data-ttu-id="a6214-449">L'applicazione che legge il messaggio di risposta può quindi utilizzare l'identificatore di correlazione del messaggio di risposta per identificare il messaggio originale.</span><span class="sxs-lookup"><span data-stu-id="a6214-449">The application reading the response message can then use the correlation identifier of the response message to identify the original message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-450">Esempio di codice seguente invia e riceve un messaggio contenente un ordine da e verso una coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-450">The following code example sends and receives a message containing an order to and from a queue.</span></span> <span data-ttu-id="a6214-451">Richiede un riconoscimento positivo in particolare quando il messaggio originale raggiunge o viene recuperato dalla coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-451">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-452">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-452">The message has not been sent.</span>
          </span>
          <span data-ttu-id="a6214-453">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-453">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="a6214-454">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Id" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-454">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Id" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.CorrelationId" />
      </Docs>
    </Member>
    <Member MemberName="InfiniteTimeout">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan InfiniteTimeout;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan InfiniteTimeout" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.Message.InfiniteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteTimeout As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan InfiniteTimeout;" />
      <MemberSignature Language="F#" Value=" staticval mutable InfiniteTimeout : TimeSpan" Usage="System.Messaging.Message.InfiniteTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-455">Specifies that no time-out exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-455">Specifies that no time-out exists.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-456"><xref:System.Messaging.Message.TimeToBeReceived%2A> e <xref:System.Messaging.Message.TimeToReachQueue%2A> richiedono un valore che specifica un timeout. Nel primo caso, il timeout è il tempo massimo consentito per un messaggio venga ricevuto dalla coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-456"><xref:System.Messaging.Message.TimeToBeReceived%2A> and <xref:System.Messaging.Message.TimeToReachQueue%2A> require a value that specifies a time-out. For the former, the time-out is the maximum time allowed for a message to be received from the queue.</span></span> <span data-ttu-id="a6214-457">Nel secondo caso, il timeout è il tempo consentito per un messaggio raggiungere la coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-457">For the latter, the time-out is the time allowed for a message to reach the queue.</span></span> <span data-ttu-id="a6214-458">In entrambi i casi, è possibile specificare il timeout come un numero di secondi o usare <xref:System.Messaging.Message.InfiniteTimeout> per indicare che è presente alcun timeout.</span><span class="sxs-lookup"><span data-stu-id="a6214-458">In both cases, you can specify the time-out as a number of seconds or use <xref:System.Messaging.Message.InfiniteTimeout> to indicate that no time-out exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-459">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Messaging.Message.InfiniteTimeout> campo.</span><span class="sxs-lookup"><span data-stu-id="a6214-459">The following code example demonstrates the use of the <xref:System.Messaging.Message.InfiniteTimeout> field.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.Message.TimeToBeReceived" />
        <altmember cref="P:System.Messaging.Message.TimeToReachQueue" />
      </Docs>
    </Member>
    <Member MemberName="IsFirstInTransaction">
      <MemberSignature Language="C#" Value="public bool IsFirstInTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFirstInTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.IsFirstInTransaction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFirstInTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFirstInTransaction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFirstInTransaction : bool" Usage="System.Messaging.Message.IsFirstInTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgIsFirstInTransaction")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-460">Gets a value that indicates whether the message was the first message sent in a transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-460">Gets a value that indicates whether the message was the first message sent in a transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-461">
            <see langword="true" /> Se il messaggio è stato il primo messaggio inviato durante una transazione. in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-461">
              <see langword="true" /> if the message was the first message sent in a transaction; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-462">Un'applicazione ricevente utilizza il <xref:System.Messaging.Message.IsFirstInTransaction%2A> per verificare se un messaggio è il primo messaggio inviato in una singola transazione a una singola coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-462">Receiving applications use the <xref:System.Messaging.Message.IsFirstInTransaction%2A> property to verify that a message was the first message sent in a single transaction to a single queue.</span></span>  
  
 <span data-ttu-id="a6214-463">Questa proprietà è disponibile solo con Accodamento messaggi versione 2.0 e versioni successive.</span><span class="sxs-lookup"><span data-stu-id="a6214-463">This property is available only with Message Queuing version 2.0 and later.</span></span>  
  
 <span data-ttu-id="a6214-464">Per verificare i limiti delle transazioni, è possibile usare il <xref:System.Messaging.Message.IsFirstInTransaction%2A> proprietà, con altre due proprietà: <xref:System.Messaging.Message.IsLastInTransaction%2A> e <xref:System.Messaging.Message.TransactionId%2A>.</span><span class="sxs-lookup"><span data-stu-id="a6214-464">To verify transaction boundaries, you can use the <xref:System.Messaging.Message.IsFirstInTransaction%2A> property along with two other properties: <xref:System.Messaging.Message.IsLastInTransaction%2A> and <xref:System.Messaging.Message.TransactionId%2A>.</span></span> <span data-ttu-id="a6214-465">Utilizzare il prima possibile per controllare se un messaggio è l'ultimo messaggio inviato nella transazione e utilizzare quest'ultimo per recuperare l'ID della transazione.</span><span class="sxs-lookup"><span data-stu-id="a6214-465">Use the former to check whether a message was the last message sent in the transaction, and use the latter to retrieve the identifier of the transaction.</span></span>  
  
 <span data-ttu-id="a6214-466">Se solo un messaggio viene inviato in una transazione, il <xref:System.Messaging.Message.IsFirstInTransaction%2A> e <xref:System.Messaging.Message.IsLastInTransaction%2A> sono entrambe impostate su `true`.</span><span class="sxs-lookup"><span data-stu-id="a6214-466">If only one message is sent in a transaction, the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties are both set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-467">Esempio di codice seguente consente di visualizzare il valore di un messaggio <xref:System.Messaging.Message.IsFirstInTransaction%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-467">The following code example displays the value of a message's <xref:System.Messaging.Message.IsFirstInTransaction%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-468">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-468">The message has not been sent.</span>
          </span>
          <span data-ttu-id="a6214-469">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-469">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="a6214-470">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.IsFirstInTransaction" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-470">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.IsFirstInTransaction" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.IsLastInTransaction" />
        <altmember cref="P:System.Messaging.Message.TransactionId" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
      </Docs>
    </Member>
    <Member MemberName="IsLastInTransaction">
      <MemberSignature Language="C#" Value="public bool IsLastInTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLastInTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.IsLastInTransaction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLastInTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLastInTransaction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLastInTransaction : bool" Usage="System.Messaging.Message.IsLastInTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgIsLastInTransaction")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-471">Gets a value that indicates whether the message was the last message sent in a transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-471">Gets a value that indicates whether the message was the last message sent in a transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-472">
            <see langword="true" /> Se il messaggio è stato l'ultimo messaggio inviato in una singola transazione. in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-472">
              <see langword="true" /> if the message was the last message sent in a single transaction; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-473">Un'applicazione ricevente utilizza il <xref:System.Messaging.Message.IsLastInTransaction%2A> per verificare se un messaggio è l'ultimo messaggio inviato in una singola transazione a una singola coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-473">Receiving applications use the <xref:System.Messaging.Message.IsLastInTransaction%2A> property to verify that a message was the last message sent in a single transaction to a single queue.</span></span>  
  
 <span data-ttu-id="a6214-474">Questa proprietà è disponibile solo con Accodamento messaggi versione 2.0 e versioni successive.</span><span class="sxs-lookup"><span data-stu-id="a6214-474">This property is available only with Message Queuing version 2.0 and later.</span></span>  
  
 <span data-ttu-id="a6214-475">Per verificare i limiti delle transazioni, è possibile usare il <xref:System.Messaging.Message.IsLastInTransaction%2A> proprietà, con altre due proprietà: <xref:System.Messaging.Message.IsFirstInTransaction%2A> e <xref:System.Messaging.Message.TransactionId%2A>.</span><span class="sxs-lookup"><span data-stu-id="a6214-475">To verify transaction boundaries, you can use the <xref:System.Messaging.Message.IsLastInTransaction%2A> property along with two other properties: <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.TransactionId%2A>.</span></span> <span data-ttu-id="a6214-476">Utilizzare il prima possibile per controllare se un messaggio è il primo messaggio inviato nella transazione e utilizzare quest'ultimo per recuperare l'ID della transazione.</span><span class="sxs-lookup"><span data-stu-id="a6214-476">Use the former to check whether a message was the first message sent in the transaction, and use the latter to retrieve the identifier of the transaction.</span></span>  
  
 <span data-ttu-id="a6214-477">Se solo un messaggio viene inviato in una transazione, il <xref:System.Messaging.Message.IsFirstInTransaction%2A> e <xref:System.Messaging.Message.IsLastInTransaction%2A> sono entrambe impostate su `true`.</span><span class="sxs-lookup"><span data-stu-id="a6214-477">If only one message is sent in a transaction, the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties are both set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-478">Esempio di codice seguente consente di visualizzare il valore di un messaggio <xref:System.Messaging.Message.IsLastInTransaction%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-478">The following code example displays the value of a message's <xref:System.Messaging.Message.IsLastInTransaction%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-479">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-479">The message has not been sent.</span>
          </span>
          <span data-ttu-id="a6214-480">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-480">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="a6214-481">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.IsLastInTransaction" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-481">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.IsLastInTransaction" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.IsFirstInTransaction" />
        <altmember cref="P:System.Messaging.Message.TransactionId" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.Messaging.Message.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgLabel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-482">Gets or sets an application-defined Unicode string that describes the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-482">Gets or sets an application-defined Unicode string that describes the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-483">L'etichetta del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-483">The label of the message.</span>
          </span>
          <span data-ttu-id="a6214-484">Il valore predefinito è una stringa vuota ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-484">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-485">È possibile utilizzare un'etichetta di messaggio per diversi scopi.</span><span class="sxs-lookup"><span data-stu-id="a6214-485">You can use a message label for several purposes.</span></span> <span data-ttu-id="a6214-486">Un'etichetta di messaggio può essere utilizzata per scopi di visualizzazione o per elaborare in modo selettivo i messaggi sulla base del valore dell'etichetta.</span><span class="sxs-lookup"><span data-stu-id="a6214-486">For example, you can use it for display purposes or to selectively process messages based on the label value.</span></span> <span data-ttu-id="a6214-487">L'etichetta non dovrà essere univoco all'interno dei messaggi.</span><span class="sxs-lookup"><span data-stu-id="a6214-487">The label does not need to be unique across messages.</span></span>  
  
 <span data-ttu-id="a6214-488">La coda e le etichette di messaggio rappresentano un valore definito dall'applicazione in grado di identificare la coda o il messaggio in termini leggibili.</span><span class="sxs-lookup"><span data-stu-id="a6214-488">Message queue and message labels represent an application-defined value that can help identify the queue or message in human-readable terms.</span></span> <span data-ttu-id="a6214-489">È responsabilità dell'applicazione per interpretare il contenuto di etichetta, che non hanno alcun significato intrinseco per l'applicazione di Accodamento messaggi.</span><span class="sxs-lookup"><span data-stu-id="a6214-489">It is the responsibility of the application to interpret the label contents, which have no intrinsic meaning to the Message Queuing application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-490">Esempio di codice seguente ottiene e imposta il valore di un messaggio <xref:System.Messaging.Message.Label%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-490">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.Label%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-491">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Label" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-491">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Label" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
      </Docs>
    </Member>
    <Member MemberName="LookupId">
      <MemberSignature Language="C#" Value="public long LookupId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 LookupId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.LookupId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LookupId As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long LookupId { long get(); };" />
      <MemberSignature Language="F#" Value="member this.LookupId : int64" Usage="System.Messaging.Message.LookupId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-492">Introduced in MSMQ 3.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-492">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="a6214-493">Gets the message's lookup identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-493">Gets the message's lookup identifier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-494">Identificatore di ricerca del messaggio, che viene generato da Accodamento messaggi ed è univoco per la coda in cui si trova il messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-494">The message's lookup identifier, which is generated by Message Queuing and is unique to the queue where the message resides.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-495">Il <xref:System.Messaging.Message.LookupId%2A> proprietà fornisce l'accesso di sola lettura all'identificatore di ricerca del messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-495">The <xref:System.Messaging.Message.LookupId%2A> property provides read-only access to a message's lookup identifier.</span></span> <span data-ttu-id="a6214-496">L'identificatore di ricerca, introdotto in MSMQ 3.0, è un identificatore a 64 bit che viene generato da Accodamento messaggi e assegnato a ogni messaggio quando il messaggio viene inserito nella coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-496">The lookup identifier, introduced in MSMQ 3.0, is a 64-bit identifier that is generated by Message Queuing and assigned to each message when the message is placed in the queue.</span></span> <span data-ttu-id="a6214-497">L'identificatore di ricerca non è uguale all'identificatore del messaggio che viene generato quando viene inviato il messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-497">The lookup identifier is not the same as the message identifier that is generated when the message is sent.</span></span>  
  
 <span data-ttu-id="a6214-498">Accodamento messaggi genera un identificatore di ricerca per tutti i messaggi che vengono inseriti in una coda, tra cui generati dall'applicazione di destinazione, amministrazione, le code del report, nonché journal generati dal sistema, messaggi non recapitabili, connettore e in uscita.</span><span class="sxs-lookup"><span data-stu-id="a6214-498">Message Queuing generates a lookup identifier for all messages that are placed in any queue, including application-generated destination, administration, and report queues, as well as system-generated journal, dead-letter, connector, and outgoing queues.</span></span> <span data-ttu-id="a6214-499">In altre parole, sono inclusi entrambi i messaggi inviati dalle applicazioni mittenti e da Accodamento messaggi.</span><span class="sxs-lookup"><span data-stu-id="a6214-499">In other words, this includes both messages sent by sending applications and by Message Queuing.</span></span> <span data-ttu-id="a6214-500">L'identificatore di ricerca è univoco per la coda e non ha significato all'esterno della coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-500">The lookup identifier is unique to the queue and has no meaning outside the queue.</span></span>  
  
 <span data-ttu-id="a6214-501">Se un messaggio viene inviato a diverse code di destinazione oppure una copia di un messaggio viene archiviata in un journal del computer o della coda, ogni copia del messaggio avrà un proprio identificatore di ricerca quando viene inserito nella rispettiva coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-501">If a message is sent to several destination queues, or if a copy of a message is stored in a computer journal or queue journal, each copy of the message will have its own lookup identifier when it is placed in its respective queue.</span></span>  
  
 <span data-ttu-id="a6214-502">Il <xref:System.Messaging.Message.LookupId%2A> proprietà può essere letta solo messaggi recuperati da una coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-502">The <xref:System.Messaging.Message.LookupId%2A> property can only be read on messages retrieved from a queue.</span></span>  
  
 <span data-ttu-id="a6214-503">Un identificatore di ricerca viene utilizzato per leggere un messaggio specifico nella coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-503">A lookup identifier is used to read a specific message in the queue.</span></span> <span data-ttu-id="a6214-504">Una volta che è nota l'identificatore di ricerca di un messaggio, l'applicazione ricevente può chiamare la <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> o <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> (funzione) per passare direttamente al messaggio e leggere o recuperare dalla coda, a differenza dei cursori che deve iniziare all'inizio della coda e Spostarsi verso la fine della coda,</span><span class="sxs-lookup"><span data-stu-id="a6214-504">Once the lookup identifier of a message is known, the receiving application can call the <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> or <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> function to go directly to that message and peek at or retrieve it from the queue, unlike cursors that must start at the front of the queue and navigate towards the end of the queue,</span></span>  
  
 <span data-ttu-id="a6214-505">Ottenere gli identificatori di ricerca dei messaggi nella coda è responsabilità dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="a6214-505">Obtaining the lookup identifiers of the messages in the queue is the responsibility of the application.</span></span> <span data-ttu-id="a6214-506">Uno dei modi per ottenere gli identificatori di ricerca consiste nel creare un trigger per la coda di destinazione che richiama un componente che memorizza nella cache gli identificatori di ogni messaggio quando vengono inseriti nella coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-506">One possible way to obtain the lookup identifiers is to create a trigger for the destination queue that invokes a component that caches the identifiers of each message as they are placed in the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="a6214-507">MSMQ 3.0 is not installed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-507">MSMQ 3.0 is not installed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-508">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-508">The message has not been sent.</span>
          </span>
          <span data-ttu-id="a6214-509">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-509">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="a6214-510">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.LookupId" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-510">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.LookupId" /> property.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.PeekByLookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="MessageType">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageType MessageType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.MessageType MessageType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.MessageType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MessageType As MessageType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageType MessageType { System::Messaging::MessageType get(); };" />
      <MemberSignature Language="F#" Value="member this.MessageType : System.Messaging.MessageType" Usage="System.Messaging.Message.MessageType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgMessageType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-511">Gets the message type: <see langword="Normal" />, <see langword="Acknowledgment" />, or <see langword="Report" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-511">Gets the message type: <see langword="Normal" />, <see langword="Acknowledgment" />, or <see langword="Report" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-512">Uno dei valori di <see cref="P:System.Messaging.Message.MessageType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-512">One of the <see cref="P:System.Messaging.Message.MessageType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-513">Accodamento messaggi in genere imposta questa proprietà quando invia il messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-513">Message Queuing typically sets this property when it sends the message.</span></span> <span data-ttu-id="a6214-514">Il tipo di un messaggio di accodamento messaggi può essere uno dei seguenti:</span><span class="sxs-lookup"><span data-stu-id="a6214-514">A Message Queuing message can be one of the following types:</span></span>  
  
-   <span data-ttu-id="a6214-515">`Normal`, quale un tipico messaggio inviato da un'applicazione a una coda o un messaggio di risposta restituito all'applicazione mittente.</span><span class="sxs-lookup"><span data-stu-id="a6214-515">`Normal`, which is either a typical message sent from an application to a queue, or a response message returned to the sending application.</span></span>  
  
-   <span data-ttu-id="a6214-516">`Acknowledgement`, Accodamento messaggi generato ogni volta che l'applicazione mittente lo richiede.</span><span class="sxs-lookup"><span data-stu-id="a6214-516">`Acknowledgement`, which Message Queuing generates whenever the sending application requests one.</span></span> <span data-ttu-id="a6214-517">Accodamento messaggi, ad esempio, può generare messaggi positivi o negativi per comunicare l'arrivo o la lettura del messaggio originale.</span><span class="sxs-lookup"><span data-stu-id="a6214-517">For example, Message Queuing can generate positive or negative messages to indicate that the original message arrived or was read.</span></span> <span data-ttu-id="a6214-518">Accodamento messaggi restituisce il messaggio di conferma appropriato alla coda di amministrazione specificata dall'applicazione mittente.</span><span class="sxs-lookup"><span data-stu-id="a6214-518">Message Queuing returns the appropriate acknowledgment message to the administration queue specified by the sending application.</span></span>  
  
-   <span data-ttu-id="a6214-519">`Report`, Accodamento messaggi generato ogni volta che una coda dei rapporti è definita nel gestore delle code di origine.</span><span class="sxs-lookup"><span data-stu-id="a6214-519">`Report`, which Message Queuing generates whenever a report queue is defined at the source Queue Manager.</span></span> <span data-ttu-id="a6214-520">Quando la traccia è abilitata, l'accodamento messaggi invia un messaggio di rapporto alla coda di rapporti di accodamento messaggi ogni volta che il messaggio originale viene ricevuto o trasmesso da un server di accodamento messaggi.</span><span class="sxs-lookup"><span data-stu-id="a6214-520">When tracing is enabled, Message Queuing sends a report message to the Message Queuing report queue each time the original message enters or leaves a Message Queuing server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-521">Esempio di codice seguente consente di visualizzare il valore di un messaggio <xref:System.Messaging.Message.MessageType%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-521">The following code example displays the value of a message's <xref:System.Messaging.Message.MessageType%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-522">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-522">The message has not been sent.</span>
          </span>
          <span data-ttu-id="a6214-523">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-523">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="a6214-524">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.MessageType" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-524">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.MessageType" /> property.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageType" />
        <altmember cref="P:System.Messaging.MessagePropertyFilter.Acknowledgment" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Messaging.MessagePriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.MessagePriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As MessagePriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessagePriority Priority { System::Messaging::MessagePriority get(); void set(System::Messaging::MessagePriority value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Messaging.MessagePriority with get, set" Usage="System.Messaging.Message.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgPriority")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessagePriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-525">Gets or sets the message priority, which determines where in the queue the message is placed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-525">Gets or sets the message priority, which determines where in the queue the message is placed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-526">Uno del <see cref="T:System.Messaging.MessagePriority" /> valori che rappresentano i livelli di priorità dei messaggi non transazionali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-526">One of the <see cref="T:System.Messaging.MessagePriority" /> values, which represent the priority levels of non-transactional messages.</span>
          </span>
          <span data-ttu-id="a6214-527">Il valore predefinito è <see langword="Normal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-527">The default is <see langword="Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-528">Il <xref:System.Messaging.Message.Priority%2A> proprietà influisce sul modo in cui il servizio Accodamento messaggi gestisce il messaggio sia durante l'indirizzamento e una volta raggiunta la destinazione.</span><span class="sxs-lookup"><span data-stu-id="a6214-528">The <xref:System.Messaging.Message.Priority%2A> property affects how Message Queuing handles the message both while it is en route and once it reaches its destination.</span></span> <span data-ttu-id="a6214-529">I messaggi con priorità superiore hanno la precedenza durante l'instradamento e vengono inseriti nella parte anteriore della coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-529">Higher-priority messages are given preference during routing and inserted toward the front of the destination queue.</span></span> <span data-ttu-id="a6214-530">I messaggi con la stessa priorità vengono inseriti nella coda in base all'ora di arrivo.</span><span class="sxs-lookup"><span data-stu-id="a6214-530">Messages with the same priority are placed in the queue according to their arrival time.</span></span>  
  
 <span data-ttu-id="a6214-531">È possibile impostare una priorità significativa solo per i messaggi non transazionali.</span><span class="sxs-lookup"><span data-stu-id="a6214-531">You can set a meaningful priority only for non-transactional messages.</span></span> <span data-ttu-id="a6214-532">Accodamento messaggi imposta automaticamente la priorità per i messaggi transazionali per `Lowest`, che comporta l'esecuzione priorità messaggio transazionale viene ignorata.</span><span class="sxs-lookup"><span data-stu-id="a6214-532">Message Queuing automatically sets the priority for transactional messages to `Lowest`, which causes transactional message priority to be ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-533">Esempio di codice seguente invia due messaggi con priorità diverse per la coda e successivamente recuperati.</span><span class="sxs-lookup"><span data-stu-id="a6214-533">The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.</span></span>  
  
 [!code-cpp[Message.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CPP/message_defaultandpriority.cpp#1)]
 [!code-csharp[Message.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CS/message_defaultandpriority.cs#1)]
 [!code-vb[Message.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/VB/message_defaultandpriority.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-534">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Priority" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-534">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Priority" /> property.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessagePriority" />
        <altmember cref="P:System.Messaging.Message.MessageType" />
        <altmember cref="P:System.Messaging.MessageQueue.BasePriority" />
      </Docs>
    </Member>
    <Member MemberName="Recoverable">
      <MemberSignature Language="C#" Value="public bool Recoverable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Recoverable" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Recoverable" />
      <MemberSignature Language="VB.NET" Value="Public Property Recoverable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Recoverable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Recoverable : bool with get, set" Usage="System.Messaging.Message.Recoverable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgRecoverable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-535">Gets or sets a value that indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-535">Gets or sets a value that indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-536">
            <see langword="true" /> Se è garantito il recapito del messaggio (tramite il salvataggio sul disco durante l'indirizzamento); <see langword="false" /> se per il recapito non è garantito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-536">
              <see langword="true" /> if delivery of the message is guaranteed (through saving the message to disk while en route); <see langword="false" /> if delivery is not assured.</span>
          </span>
          <span data-ttu-id="a6214-537">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-537">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-538">Il <xref:System.Messaging.Message.Recoverable%2A> proprietà indica se è garantito il recapito di un messaggio, anche se il computer si blocca durante il messaggio di indirizzamento alla coda di destinazione.</span><span class="sxs-lookup"><span data-stu-id="a6214-538">The <xref:System.Messaging.Message.Recoverable%2A> property indicates whether the delivery of a message is guaranteed—even if a computer crashes while the message is en route to the destination queue.</span></span>  
  
 <span data-ttu-id="a6214-539">Se è garantito il recapito di un messaggio, il messaggio viene archiviato in locale in ogni fase della route, fino a quando il messaggio viene inoltrato al computer successivo.</span><span class="sxs-lookup"><span data-stu-id="a6214-539">If delivery of a message is guaranteed, the message is stored locally at every step along the route, until the message is successfully forwarded to the next computer.</span></span> <span data-ttu-id="a6214-540">Impostazione di <xref:System.Messaging.Message.Recoverable%2A> proprietà `true` potrebbero avere effetto sulla velocità effettiva.</span><span class="sxs-lookup"><span data-stu-id="a6214-540">Setting the <xref:System.Messaging.Message.Recoverable%2A> property to `true` could affect throughput.</span></span>  
  
 <span data-ttu-id="a6214-541">Se il messaggio è transazionale, Accodamento messaggi gestisce automaticamente il messaggio come recuperabile, indipendentemente dal valore della <xref:System.Messaging.Message.Recoverable%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-541">If the message is transactional, Message Queuing automatically treats the message as recoverable, regardless of the value of the <xref:System.Messaging.Message.Recoverable%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-542">Esempio di codice seguente ottiene e imposta il valore di un messaggio <xref:System.Messaging.Message.Recoverable%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-542">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.Recoverable%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-543">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Recoverable" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-543">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Recoverable" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseTracing" />
      </Docs>
    </Member>
    <Member MemberName="ResponseQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue ResponseQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue ResponseQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.ResponseQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ ResponseQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseQueue : System.Messaging.MessageQueue with get, set" Usage="System.Messaging.Message.ResponseQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgResponseQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-544">Gets or sets the queue that receives application-generated response messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-544">Gets or sets the queue that receives application-generated response messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-545">Il <see cref="T:System.Messaging.MessageQueue" /> per la risposta generati dall'applicazione vengono restituiti i messaggi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-545">The <see cref="T:System.Messaging.MessageQueue" /> to which application-generated response messages are returned.</span>
          </span>
          <span data-ttu-id="a6214-546">Il valore predefinito è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-546">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-547">Il <xref:System.Messaging.Message.ResponseQueue%2A> proprietà identifica la coda che riceve i messaggi di risposta generati dall'applicazione, che restituisce l'applicazione ricevente all'applicazione mittente.</span><span class="sxs-lookup"><span data-stu-id="a6214-547">The <xref:System.Messaging.Message.ResponseQueue%2A> property identifies the queue that receives application-generated response messages, which the receiving application returns to the sending application.</span></span> <span data-ttu-id="a6214-548">Le code di risposta vengono specificate dall'applicazione mittente all'invio dei messaggi.</span><span class="sxs-lookup"><span data-stu-id="a6214-548">The sending application specifies response queues when the application sends its messages.</span></span> <span data-ttu-id="a6214-549">È possibile specificare come coda di risposta qualsiasi coda disponibile.</span><span class="sxs-lookup"><span data-stu-id="a6214-549">Any available queue can be specified as a response queue.</span></span>  
  
 <span data-ttu-id="a6214-550">I messaggi restituiti alla coda di risposta sono specifici dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="a6214-550">Messages returned to the response queue are application-specific.</span></span> <span data-ttu-id="a6214-551">È necessario che l'applicazione definisca il contenuto dei messaggi, nonché le operazioni da eseguire alla ricezione del messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-551">The application must define the contents of the messages as well as the action to take upon receipt of a message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-552">Esempio di codice seguente ottiene e imposta il valore di un messaggio <xref:System.Messaging.Message.ResponseQueue%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-552">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.ResponseQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-553">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ResponseQueue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-553">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ResponseQueue" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.DestinationQueue" />
        <altmember cref="P:System.Messaging.Message.TransactionStatusQueue" />
      </Docs>
    </Member>
    <Member MemberName="SecurityContext">
      <MemberSignature Language="C#" Value="public System.Messaging.SecurityContext SecurityContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.SecurityContext SecurityContext" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SecurityContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityContext As SecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::SecurityContext ^ SecurityContext { System::Messaging::SecurityContext ^ get(); void set(System::Messaging::SecurityContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityContext : System.Messaging.SecurityContext with get, set" Usage="System.Messaging.Message.SecurityContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.SecurityContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-554">Gets or sets the security context for a message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-554">Gets or sets the security context for a message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-555">Oggetto <see cref="T:System.Messaging.SecurityContext" /> oggetto che contiene il contesto di sicurezza per un messaggio, se in precedenza è stata impostata la proprietà; in caso contrario NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-555">A <see cref="T:System.Messaging.SecurityContext" /> object that contains the security context for a message, if the property has previously been set; otherwise NULL.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SenderCertificate">
      <MemberSignature Language="C#" Value="public byte[] SenderCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SenderCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SenderCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property SenderCertificate As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SenderCertificate { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SenderCertificate : byte[] with get, set" Usage="System.Messaging.Message.SenderCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgSenderCertificate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-556">Gets or sets the security certificate used to authenticate messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-556">Gets or sets the security certificate used to authenticate messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-557">Matrice di valori di byte che rappresenta un certificato di sicurezza, Accodamento messaggi utilizza per verificare il mittente del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-557">An array of byte values that represents a security certificate, which Message Queuing uses to verify the sender of the message.</span>
          </span>
          <span data-ttu-id="a6214-558">Il valore predefinito è una matrice di lunghezza zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-558">The default is a zero-length array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-559">Applicazione di ricezione utilizza la <xref:System.Messaging.Message.SenderCertificate%2A> proprietà quando il messaggio include un certificato di sicurezza esterno.</span><span class="sxs-lookup"><span data-stu-id="a6214-559">The receiving application uses the <xref:System.Messaging.Message.SenderCertificate%2A> property when the message includes an external security certificate.</span></span>  
  
 <span data-ttu-id="a6214-560">In Accodamento messaggi può autenticare un messaggio utilizzando un certificato di sicurezza interni o esterni.</span><span class="sxs-lookup"><span data-stu-id="a6214-560">Message Queuing can authenticate a message using either an internal or external security certificate.</span></span> <span data-ttu-id="a6214-561">Accodamento messaggi fornisce certificati interni, che vengono usati per verificare l'integrità del messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-561">Message Queuing provides internal certificates, which are used to verify message integrity.</span></span> <span data-ttu-id="a6214-562">Un'autorità di certificazione fornisce un certificato esterno che è possibile accedere tramite il <xref:System.Messaging.Message.SenderCertificate%2A> proprietà del messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-562">A certification authority provides an external certificate, which you can access through the <xref:System.Messaging.Message.SenderCertificate%2A> property of the message.</span></span> <span data-ttu-id="a6214-563">Oltre a consentire di Accodamento per autenticare il messaggio, un certificato esterno consente all'applicazione ricevente verificare ulteriormente il mittente.</span><span class="sxs-lookup"><span data-stu-id="a6214-563">In addition to allowing Message Queuing to authenticate the message, an external certificate allows the receiving application to further verify the sender.</span></span> <span data-ttu-id="a6214-564">Nessun valore utilizzabile da un'applicazione ricevente un certificato interno.</span><span class="sxs-lookup"><span data-stu-id="a6214-564">An internal certificate has no usable value to a receiving application.</span></span>  
  
 <span data-ttu-id="a6214-565">Un certificato esterno deve essere registrato con il servizio directory di sistema di Accodamento.</span><span class="sxs-lookup"><span data-stu-id="a6214-565">An external certificate must be registered with the directory service of the Message Queuing system.</span></span> <span data-ttu-id="a6214-566">Un certificato esterno contiene informazioni sull'autorità di certificazione, l'utente del certificato, il periodo di validità del certificato, la chiave pubblica dell'utente del certificato e la firma dell'autorità di certificazione.</span><span class="sxs-lookup"><span data-stu-id="a6214-566">An external certificate contains information about the certification authority, the certificate user, the validity period of the certificate, the public key of the certificate user, and the certification authority's signature.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-567">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderCertificate" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-567">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderCertificate" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
        <altmember cref="P:System.Messaging.Message.Authenticated" />
      </Docs>
    </Member>
    <Member MemberName="SenderId">
      <MemberSignature Language="C#" Value="public byte[] SenderId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SenderId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SenderId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SenderId As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SenderId { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SenderId : byte[]" Usage="System.Messaging.Message.SenderId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgSenderId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-568">Gets the identifier of the sending user.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-568">Gets the identifier of the sending user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-569">Matrice di valori di byte che identifica il mittente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-569">An array of byte values that identifies the sender.</span>
          </span>
          <span data-ttu-id="a6214-570">Il gestore delle code ricevente utilizza l'identificatore quando si autentica il messaggio per verificare il mittente del messaggio e diritti di accesso del mittente per la coda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-570">The receiving Queue Manager uses the identifier when it authenticates the message to verify the sender of the message and the sender's access rights to the queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-571">Se il <xref:System.Messaging.Message.AttachSenderId%2A> proprietà è `false`, l'identificatore del mittente specificato nella <xref:System.Messaging.Message.SenderId%2A> proprietà non è associata al messaggio durante l'invio.</span><span class="sxs-lookup"><span data-stu-id="a6214-571">If the <xref:System.Messaging.Message.AttachSenderId%2A> property is `false`, the sender identifier specified in the <xref:System.Messaging.Message.SenderId%2A> property is not attached to the message when it is sent.</span></span> <span data-ttu-id="a6214-572">Indica che il mittente non deve essere convalidato quando invia il messaggio alla coda di destinazione per Accodamento messaggi.</span><span class="sxs-lookup"><span data-stu-id="a6214-572">This indicates to Message Queuing that the sender should not be validated when it sends the message to the destination queue.</span></span> <span data-ttu-id="a6214-573">Se il <xref:System.Messaging.Message.AttachSenderId%2A> proprietà è `true`, il <xref:System.Messaging.Message.SenderId%2A> valore della proprietà sia attendibile solo se il messaggio è stato autenticato.</span><span class="sxs-lookup"><span data-stu-id="a6214-573">If the <xref:System.Messaging.Message.AttachSenderId%2A> property is `true`, the <xref:System.Messaging.Message.SenderId%2A> property value is trustworthy only if the message was authenticated.</span></span> <span data-ttu-id="a6214-574">Usare la <xref:System.Messaging.Message.Authenticated%2A> proprietà in combinazione con il <xref:System.Messaging.Message.SenderId%2A> per verificare i diritti di accesso del mittente.</span><span class="sxs-lookup"><span data-stu-id="a6214-574">Use the <xref:System.Messaging.Message.Authenticated%2A> property in conjunction with the <xref:System.Messaging.Message.SenderId%2A> property to verify the sender's access rights.</span></span>  
  
 <span data-ttu-id="a6214-575">Un'applicazione di connessione è un'applicazione che utilizza un server del connettore per consentire la comunicazione tra il servizio Accodamento messaggi e altri sistemi di Accodamento.</span><span class="sxs-lookup"><span data-stu-id="a6214-575">A connector application is an application that uses a connector server to provide communication between Message Queuing and other queuing systems.</span></span> <span data-ttu-id="a6214-576">Accodamento messaggi richiede alle applicazioni di connettore di fornire l'identificazione del mittente.</span><span class="sxs-lookup"><span data-stu-id="a6214-576">Message Queuing requires connector applications to provide sender identification.</span></span> <span data-ttu-id="a6214-577">È necessario impostare il <xref:System.Messaging.Message.ConnectorType%2A> proprietà quando si invia un messaggio tramite un'applicazione di connessione.</span><span class="sxs-lookup"><span data-stu-id="a6214-577">You must set the <xref:System.Messaging.Message.ConnectorType%2A> property when sending a message through a connector application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-578">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-578">The message has not been sent.</span>
          </span>
          <span data-ttu-id="a6214-579">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-579">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="a6214-580">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderId" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-580">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderId" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.Authenticated" />
        <altmember cref="P:System.Messaging.Message.AttachSenderId" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderName" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderType" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
      </Docs>
    </Member>
    <Member MemberName="SenderVersion">
      <MemberSignature Language="C#" Value="public long SenderVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 SenderVersion" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SenderVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SenderVersion As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long SenderVersion { long get(); };" />
      <MemberSignature Language="F#" Value="member this.SenderVersion : int64" Usage="System.Messaging.Message.SenderVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgSenderVersion")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-581">Gets the version of Message Queuing used to send the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-581">Gets the version of Message Queuing used to send the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-582">La versione di Accodamento messaggi consente di inviare il messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-582">The version of Message Queuing used to send the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-583">Il <xref:System.Messaging.Message.SenderVersion%2A> proprietà è importante per determinate funzionalità.</span><span class="sxs-lookup"><span data-stu-id="a6214-583">The <xref:System.Messaging.Message.SenderVersion%2A> property is important for certain features.</span></span> <span data-ttu-id="a6214-584">Ad esempio, l'elaborazione delle transazioni è supportato solo da Accodamento messaggi 2.0 e versioni successive e le firme digitali vengono utilizzate per autenticare i messaggi inviati da MSMQ 1.0.</span><span class="sxs-lookup"><span data-stu-id="a6214-584">For example, transaction processing is supported only by Message Queuing 2.0 and later, and digital signatures are used to authenticate messages sent by MSMQ 1.0.</span></span>  
  
 <span data-ttu-id="a6214-585">I set di gestore delle code mittente la <xref:System.Messaging.Message.SenderVersion%2A> proprietà quando viene inviato il messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-585">The sending Queue Manager sets the <xref:System.Messaging.Message.SenderVersion%2A> property when the message is sent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-586">Esempio di codice seguente consente di visualizzare il valore di un messaggio <xref:System.Messaging.Message.SenderVersion%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-586">The following code example displays the value of a message's <xref:System.Messaging.Message.SenderVersion%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-587">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-587">The message has not been sent.</span>
          </span>
          <span data-ttu-id="a6214-588">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-588">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="a6214-589">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderVersion" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-589">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderVersion" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.TransactionId" />
        <altmember cref="P:System.Messaging.Message.IsFirstInTransaction" />
        <altmember cref="P:System.Messaging.Message.IsLastInTransaction" />
        <altmember cref="P:System.Messaging.Message.TransactionStatusQueue" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
      </Docs>
    </Member>
    <Member MemberName="SentTime">
      <MemberSignature Language="C#" Value="public DateTime SentTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime SentTime" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SentTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SentTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime SentTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.SentTime : DateTime" Usage="System.Messaging.Message.SentTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgSentTime")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-590">Gets the date and time on the sending computer that the message was sent by the source queue manager.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-590">Gets the date and time on the sending computer that the message was sent by the source queue manager.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-591">Oggetto <see cref="T:System.DateTime" /> che rappresenta l'ora di invio del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-591">A <see cref="T:System.DateTime" /> that represents the time the message was sent.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-592">Il <xref:System.Messaging.Message.SentTime%2A> proprietà viene aggiornata all'ora locale del computer in cui l'istanza di <xref:System.Messaging.Message> classe è stata creata.</span><span class="sxs-lookup"><span data-stu-id="a6214-592">The <xref:System.Messaging.Message.SentTime%2A> property is adjusted to the local time of the computer on which this instance of the <xref:System.Messaging.Message> class was created.</span></span> <span data-ttu-id="a6214-593">In questo fuso orario può essere diverso da quelli delle code di origine e di destinazione.</span><span class="sxs-lookup"><span data-stu-id="a6214-593">This time zone could be different from those of the source and destination queues.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-594">Esempio di codice seguente consente di visualizzare il valore di un messaggio <xref:System.Messaging.Message.SentTime%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-594">The following code example displays the value of a message's <xref:System.Messaging.Message.SentTime%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-595">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-595">The message has not been sent.</span>
          </span>
          <span data-ttu-id="a6214-596">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-596">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="a6214-597">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SentTime" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-597">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SentTime" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SourceMachine">
      <MemberSignature Language="C#" Value="public string SourceMachine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceMachine" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SourceMachine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceMachine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceMachine { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourceMachine : string" Usage="System.Messaging.Message.SourceMachine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgSourceMachine")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-598">Gets the computer from which the message originated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-598">Gets the computer from which the message originated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-599">Il nome del computer da cui è stato inviato il messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-599">The name of the computer from which the message was sent.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-600">Il formato del <xref:System.Messaging.Message.SourceMachine%2A> proprietà non includere barre rovesciate due (\\\\).</span><span class="sxs-lookup"><span data-stu-id="a6214-600">The format of the <xref:System.Messaging.Message.SourceMachine%2A> property does not include preceding two forward slashes (\\\\).</span></span> <span data-ttu-id="a6214-601">Ad esempio `myServer` è un valore valido <xref:System.Messaging.Message.SourceMachine%2A>.</span><span class="sxs-lookup"><span data-stu-id="a6214-601">For example, `myServer` is a valid <xref:System.Messaging.Message.SourceMachine%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-602">Esempio di codice seguente consente di visualizzare il valore di un messaggio <xref:System.Messaging.Message.SourceMachine%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-602">The following code example displays the value of a message's <xref:System.Messaging.Message.SourceMachine%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-603">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-603">The message has not been sent.</span>
          </span>
          <span data-ttu-id="a6214-604">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-604">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="a6214-605">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SourceMachine" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-605">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SourceMachine" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="a6214-606">The computer information or directory service could not be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-606">The computer information or directory service could not be accessed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
      </Docs>
    </Member>
    <Member MemberName="TimeToBeReceived">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToBeReceived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToBeReceived" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.TimeToBeReceived" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToBeReceived As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToBeReceived { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToBeReceived : TimeSpan with get, set" Usage="System.Messaging.Message.TimeToBeReceived" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTimeToBeReceived")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-607">Gets or sets the maximum amount of time for the message to be received from the destination queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-607">Gets or sets the maximum amount of time for the message to be received from the destination queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-608">Il tempo totale per un messaggio venga ricevuto dalla coda di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-608">The total time for a sent message to be received from the destination queue.</span>
          </span>
          <span data-ttu-id="a6214-609">Il valore predefinito è <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-609">The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-610">Il <xref:System.Messaging.Message.TimeToBeReceived%2A> proprietà specifica il tempo totale per un messaggio venga ricevuto dalla coda di destinazione.</span><span class="sxs-lookup"><span data-stu-id="a6214-610">The <xref:System.Messaging.Message.TimeToBeReceived%2A> property specifies the total time for a sent message to be received from the destination queue.</span></span> <span data-ttu-id="a6214-611">Il limite di tempo include il tempo impiegato per ottenere la coda di destinazione e il tempo di attesa nella coda prima che venga ricevuto il messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-611">The time limit includes the time spent getting to the destination queue and the time spent waiting in the queue before the message is received.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a6214-612">Quando si usano i computer client dipendenti, assicurarsi che l'orologio del computer client è sincronizzato con l'orologio del server che esegue il servizio Accodamento messaggi.</span><span class="sxs-lookup"><span data-stu-id="a6214-612">When using dependent client computers, be sure the clock on the client computer is synchronized with the clock on the server that is running Message Queuing.</span></span> <span data-ttu-id="a6214-613">In caso contrario, potrebbe causare un comportamento imprevisto quando si invia un messaggio il cui <xref:System.Messaging.Message.TimeToBeReceived%2A> proprietà non è <xref:System.Messaging.Message.InfiniteTimeout>.</span><span class="sxs-lookup"><span data-stu-id="a6214-613">Otherwise, unpredictable behavior might result when sending a message whose <xref:System.Messaging.Message.TimeToBeReceived%2A> property is not <xref:System.Messaging.Message.InfiniteTimeout>.</span></span>  
  
 <span data-ttu-id="a6214-614">Se l'intervallo specificato per il <xref:System.Messaging.Message.TimeToBeReceived%2A> proprietà scade prima che il messaggio viene rimosso dalla coda, Accodamento messaggi Elimina il messaggio in uno dei due modi.</span><span class="sxs-lookup"><span data-stu-id="a6214-614">If the interval specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property expires before the message is removed from the queue, Message Queuing discards the message in one of two ways.</span></span> <span data-ttu-id="a6214-615">Se la proprietà <xref:System.Messaging.Message.UseDeadLetterQueue%2A> del messaggio è `true`, il messaggio viene inviato alla coda inattiva.</span><span class="sxs-lookup"><span data-stu-id="a6214-615">If the message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, the message is sent to the dead-letter queue.</span></span> <span data-ttu-id="a6214-616">Se <xref:System.Messaging.Message.UseDeadLetterQueue%2A> è `false`, il messaggio viene ignorato.</span><span class="sxs-lookup"><span data-stu-id="a6214-616">If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false`, the message is ignored.</span></span>  
  
 <span data-ttu-id="a6214-617">È possibile impostare il messaggio <xref:System.Messaging.Message.AcknowledgeType%2A> proprietà per richiedere che il servizio Accodamento messaggi invia un messaggio di riconoscimento negativo nuovamente all'applicazione mittente se il messaggio non viene recuperato prima della scadenza del timer.</span><span class="sxs-lookup"><span data-stu-id="a6214-617">You can set the message's <xref:System.Messaging.Message.AcknowledgeType%2A> property to request that Message Queuing send a negative acknowledgment message back to the sending application if the message is not retrieved before the timer expires.</span></span>  
  
 <span data-ttu-id="a6214-618">Se il valore specificato per il <xref:System.Messaging.Message.TimeToBeReceived%2A> proprietà è minore del valore specificato per il <xref:System.Messaging.Message.TimeToReachQueue%2A> proprietà, <xref:System.Messaging.Message.TimeToBeReceived%2A> ha la precedenza.</span><span class="sxs-lookup"><span data-stu-id="a6214-618">If the value specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property is less than the value specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property, <xref:System.Messaging.Message.TimeToBeReceived%2A> takes precedence.</span></span>  
  
 <span data-ttu-id="a6214-619">Quando più messaggi vengono inviati in una singola transazione, Accodamento messaggi utilizza il <xref:System.Messaging.Message.TimeToBeReceived%2A> proprietà del primo messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-619">When several messages are sent in a single transaction, Message Queuing uses the <xref:System.Messaging.Message.TimeToBeReceived%2A> property of the first message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-620">Esempio di codice seguente ottiene e imposta il valore di un messaggio <xref:System.Messaging.Message.TimeToBeReceived%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-620">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.TimeToBeReceived%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-621">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TimeToBeReceived" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-621">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TimeToBeReceived" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6214-622">The value specified for <see cref="P:System.Messaging.Message.TimeToBeReceived" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-622">The value specified for <see cref="P:System.Messaging.Message.TimeToBeReceived" /> is invalid.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.TimeToReachQueue" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="TimeToReachQueue">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToReachQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToReachQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.TimeToReachQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToReachQueue As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToReachQueue { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToReachQueue : TimeSpan with get, set" Usage="System.Messaging.Message.TimeToReachQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTimeToReachQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-623">Gets or sets the maximum amount of time for the message to reach the queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-623">Gets or sets the maximum amount of time for the message to reach the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-624">Il limite di tempo per il messaggio raggiunga la coda di destinazione, a partire dal momento in cui il messaggio viene inviato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-624">The time limit for the message to reach the destination queue, beginning from the time the message is sent.</span>
          </span>
          <span data-ttu-id="a6214-625">Il valore predefinito è <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-625">The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-626">Se l'intervallo specificato per il <xref:System.Messaging.Message.TimeToReachQueue%2A> proprietà scade prima che il messaggio raggiunga la destinazione, Accodamento messaggi Elimina il messaggio in uno dei due modi.</span><span class="sxs-lookup"><span data-stu-id="a6214-626">If the interval specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property expires before the message reaches its destination, Message Queuing discards the message in one of two ways.</span></span> <span data-ttu-id="a6214-627">Se la proprietà <xref:System.Messaging.Message.UseDeadLetterQueue%2A> del messaggio è `true`, il messaggio viene inviato alla coda inattiva.</span><span class="sxs-lookup"><span data-stu-id="a6214-627">If the message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, the message is sent to the dead-letter queue.</span></span> <span data-ttu-id="a6214-628">Se <xref:System.Messaging.Message.UseDeadLetterQueue%2A> è `false`, il messaggio viene ignorato</span><span class="sxs-lookup"><span data-stu-id="a6214-628">If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false`, the message is ignored</span></span>  
  
 <span data-ttu-id="a6214-629">È possibile impostare del messaggio può <xref:System.Messaging.Message.AcknowledgeType%2A> proprietà per richiedere che il servizio Accodamento messaggi invia un messaggio di riconoscimento negativo nuovamente all'applicazione mittente se il messaggio non arrivano prima della scadenza del timer.</span><span class="sxs-lookup"><span data-stu-id="a6214-629">You can set he message's <xref:System.Messaging.Message.AcknowledgeType%2A> property to request that Message Queuing send a negative acknowledgment message back to the sending application if the message does not arrive before the timer expires.</span></span>  
  
 <span data-ttu-id="a6214-630">Se il <xref:System.Messaging.Message.TimeToReachQueue%2A> è impostata su 0 secondi, Accodamento messaggi esegue un tentativo di inviare il messaggio alla destinazione, ovvero se la coda è in attesa del messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-630">If the <xref:System.Messaging.Message.TimeToReachQueue%2A> property is set to 0 seconds, Message Queuing tries once to send the message to its destination—if the queue is waiting for the message.</span></span> <span data-ttu-id="a6214-631">Se la coda è locale, il messaggio raggiunge sempre.</span><span class="sxs-lookup"><span data-stu-id="a6214-631">If the queue is local, the message always reaches it.</span></span>  
  
 <span data-ttu-id="a6214-632">Se il valore specificato per il <xref:System.Messaging.Message.TimeToReachQueue%2A> proprietà è maggiore del valore specificato per il <xref:System.Messaging.Message.TimeToBeReceived%2A> proprietà, <xref:System.Messaging.Message.TimeToBeReceived%2A> ha la precedenza.</span><span class="sxs-lookup"><span data-stu-id="a6214-632">If the value specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property is greater than the value specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property, <xref:System.Messaging.Message.TimeToBeReceived%2A> takes precedence.</span></span>  
  
 <span data-ttu-id="a6214-633">Quando più messaggi vengono inviati in una singola transazione, Accodamento messaggi utilizza il <xref:System.Messaging.Message.TimeToReachQueue%2A> proprietà del primo messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-633">When several messages are sent in a single transaction, Message Queuing uses the <xref:System.Messaging.Message.TimeToReachQueue%2A> property of the first message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-634">Esempio di codice seguente ottiene e imposta il valore di un messaggio <xref:System.Messaging.Message.TimeToReachQueue%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-634">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.TimeToReachQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-635">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TimeToReachQueue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-635">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TimeToReachQueue" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6214-636">The value specified for <see cref="P:System.Messaging.Message.TimeToReachQueue" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-636">The value specified for <see cref="P:System.Messaging.Message.TimeToReachQueue" /> is invalid.</span>
          </span>
          <span data-ttu-id="a6214-637">It might represent a negative number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-637">It might represent a negative number.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.TimeToBeReceived" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="TransactionId">
      <MemberSignature Language="C#" Value="public string TransactionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransactionId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.TransactionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransactionId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransactionId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransactionId : string" Usage="System.Messaging.Message.TransactionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTransactionId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-638">Gets the identifier for the transaction of which the message was a part.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-638">Gets the identifier for the transaction of which the message was a part.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-639">L'identificatore per la transazione associata al messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-639">The identifier for the transaction associated with the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-640">Un'applicazione ricevente utilizza il <xref:System.Messaging.Message.TransactionId%2A> per verificare che un messaggio è stato inviato come parte di una transazione specifica.</span><span class="sxs-lookup"><span data-stu-id="a6214-640">Receiving applications use the <xref:System.Messaging.Message.TransactionId%2A> property to verify that a message was sent as part of a specific transaction.</span></span> <span data-ttu-id="a6214-641">L'identificatore di transazione contiene l'identificatore del computer di invio (primi 16 bit) seguito da un numero di sequenza della transazione a 4 byte.</span><span class="sxs-lookup"><span data-stu-id="a6214-641">The transaction identifier contains the identifier of the sending computer (first 16 bits) followed by a 4-byte transaction sequence number.</span></span>  
  
 <span data-ttu-id="a6214-642">Questa proprietà è disponibile solo per il servizio Accodamento messaggi versione 2.0 e versioni successive.</span><span class="sxs-lookup"><span data-stu-id="a6214-642">This property is available only for Message Queuing version 2.0 and later.</span></span>  
  
 <span data-ttu-id="a6214-643">Gli identificatori delle transazioni non sono necessariamente essere univoco, perché i numeri di sequenza delle transazioni non sono persistenti e ripartono 2 <sup>20</sup>.</span><span class="sxs-lookup"><span data-stu-id="a6214-643">Transaction identifiers are not guaranteed to be unique, because transaction sequence numbers are not persistent, and they start over again at 2 <sup>20</sup>.</span></span> <span data-ttu-id="a6214-644">Accodamento messaggi garantisce solo che le transazioni successive avranno diversi numeri di sequenza.</span><span class="sxs-lookup"><span data-stu-id="a6214-644">Message Queuing guarantees only that subsequent transactions will have different transaction sequence numbers.</span></span>  
  
 <span data-ttu-id="a6214-645">È possibile usare il <xref:System.Messaging.Message.TransactionId%2A> proprietà lungo con il <xref:System.Messaging.Message.IsFirstInTransaction%2A> e <xref:System.Messaging.Message.IsLastInTransaction%2A> per verificare i limiti delle transazioni.</span><span class="sxs-lookup"><span data-stu-id="a6214-645">You can use the <xref:System.Messaging.Message.TransactionId%2A> property along with the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties to verify transaction boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-646">Esempio di codice seguente consente di visualizzare il valore di un messaggio <xref:System.Messaging.Message.TransactionId%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-646">The following code example displays the value of a message's <xref:System.Messaging.Message.TransactionId%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-647">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-647">The message has not been sent.</span>
          </span>
          <span data-ttu-id="a6214-648">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-648">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="a6214-649">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TransactionId" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-649">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TransactionId" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.IsFirstInTransaction" />
        <altmember cref="P:System.Messaging.Message.IsLastInTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
      </Docs>
    </Member>
    <Member MemberName="TransactionStatusQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue TransactionStatusQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue TransactionStatusQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.TransactionStatusQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionStatusQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ TransactionStatusQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionStatusQueue : System.Messaging.MessageQueue with get, set" Usage="System.Messaging.Message.TransactionStatusQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTransactionStatusQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-650">Gets the transaction status queue on the source computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-650">Gets the transaction status queue on the source computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-651">Coda di stato transazioni sul computer di origine, viene utilizzato per l'invio di messaggi di acknowledgement restituito all'applicazione mittente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-651">The transaction status queue on the source computer, which is used for sending acknowledgement messages back to the sending application.</span>
          </span>
          <span data-ttu-id="a6214-652">Il valore predefinito è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-652">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-653">Il <xref:System.Messaging.Message.TransactionStatusQueue%2A> proprietà identifica la coda transazionale nel computer di origine che riceve i riconoscimenti di conferma di lettura da applicazioni di connessione.</span><span class="sxs-lookup"><span data-stu-id="a6214-653">The <xref:System.Messaging.Message.TransactionStatusQueue%2A> property identifies the transactional queue on the source computer that receives read-receipt acknowledgments from connector applications.</span></span> <span data-ttu-id="a6214-654">Accodamento messaggi imposta la proprietà e le applicazioni di connettore utilizzano la proprietà durante il recupero di messaggi di transazione inviati alle code esterne.</span><span class="sxs-lookup"><span data-stu-id="a6214-654">Message Queuing sets the property, and connector applications use the property when retrieving transactional messages sent to foreign queues.</span></span>  
  
 <span data-ttu-id="a6214-655">Esiste una coda esterna in un sistema di accodamento diverso da Accodamento messaggi Microsoft.</span><span class="sxs-lookup"><span data-stu-id="a6214-655">A foreign queue exists in a queuing system other than Microsoft Message Queuing.</span></span> <span data-ttu-id="a6214-656">Il servizio Accodamento messaggi comunica con queste code tramite un'applicazione di connessione.</span><span class="sxs-lookup"><span data-stu-id="a6214-656">Message Queuing communicates with such queues through a connector application.</span></span>  
  
 <span data-ttu-id="a6214-657">L'applicazione di connessione possa utilizzare la coda di stato di transazione per inviare messaggi di riconoscimento all'applicazione mittente.</span><span class="sxs-lookup"><span data-stu-id="a6214-657">The connector application can use the transaction status queue to send acknowledgment messages back to the sending application.</span></span> <span data-ttu-id="a6214-658">La coda di stato di transazione deve ricevere questi riconoscimenti anche se l'applicazione di invio non richiede altri.</span><span class="sxs-lookup"><span data-stu-id="a6214-658">The transaction status queue should receive these acknowledgments even if the sending application does not request other acknowledgments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-659">Esempio di codice seguente consente di visualizzare il valore di un messaggio <xref:System.Messaging.Message.TransactionStatusQueue%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-659">The following code example displays the value of a message's <xref:System.Messaging.Message.TransactionStatusQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-660">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-660">The message has not been sent.</span>
          </span>
          <span data-ttu-id="a6214-661">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-661">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="a6214-662">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TransactionStatusQueue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-662">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TransactionStatusQueue" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.TransactionId" />
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.DestinationQueue" />
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
      </Docs>
    </Member>
    <Member MemberName="UseAuthentication">
      <MemberSignature Language="C#" Value="public bool UseAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.UseAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAuthentication { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAuthentication : bool with get, set" Usage="System.Messaging.Message.UseAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseAuthentication")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-663">Gets or sets a value that indicates whether the message was (or must be) authenticated before being sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-663">Gets or sets a value that indicates whether the message was (or must be) authenticated before being sent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-664">
            <see langword="true" /> Se l'applicazione di invio ha richiesto l'autenticazione del messaggio; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-664">
              <see langword="true" /> if the sending application requested authentication for the message; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-665">Il <xref:System.Messaging.Message.UseAuthentication%2A> proprietà specifica se il messaggio deve essere autenticato.</span><span class="sxs-lookup"><span data-stu-id="a6214-665">The <xref:System.Messaging.Message.UseAuthentication%2A> property specifies whether the message needs to be authenticated.</span></span> <span data-ttu-id="a6214-666">Se l'applicazione mittente lo richiede l'autenticazione, Accodamento messaggi consente di creare una firma digitale e lo usa per firmare il messaggio durante l'invio e autenticare il messaggio quando viene ricevuto.</span><span class="sxs-lookup"><span data-stu-id="a6214-666">If the sending application requests authentication, Message Queuing creates a digital signature and uses it to sign the message when it is sent and authenticate the message when it is received.</span></span>  
  
 <span data-ttu-id="a6214-667">Se <xref:System.Messaging.Message.UseAuthentication%2A> è `false` e viene inviato un messaggio a una coda che accetta solo messaggi autenticati, il messaggio verrà rifiutato quando raggiunge la coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-667">If <xref:System.Messaging.Message.UseAuthentication%2A> is `false` and a message is sent to a queue that accepts only authenticated messages, the message will be rejected when it reaches the queue.</span></span>  
  
 <span data-ttu-id="a6214-668">Non è possibile determinare se un messaggio di autenticazione non riuscita, esaminando le relative proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-668">You cannot determine if a message failed authentication by looking at its properties.</span></span> <span data-ttu-id="a6214-669">Accodamento messaggi elimina tali messaggi prima che vengano recapitati alla coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-669">Message Queuing discards such messages before they are delivered to the queue.</span></span> <span data-ttu-id="a6214-670">Tuttavia, è possibile richiedere che un messaggio di riconoscimento verrà inviato se un errore di recapito impedisce che un messaggio arriva nella coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-670">However, you can request that an acknowledgment message be sent if a delivery failure prevents a message from arriving in the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-671">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseAuthentication" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-671">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseAuthentication" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.Authenticated" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderName" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderType" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
        <altmember cref="P:System.Messaging.Message.AttachSenderId" />
      </Docs>
    </Member>
    <Member MemberName="UseDeadLetterQueue">
      <MemberSignature Language="C#" Value="public bool UseDeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.UseDeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDeadLetterQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDeadLetterQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDeadLetterQueue : bool with get, set" Usage="System.Messaging.Message.UseDeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseDeadLetterQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-672">Gets or sets a value that indicates whether a copy of the message that could not be delivered should be sent to a dead-letter queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-672">Gets or sets a value that indicates whether a copy of the message that could not be delivered should be sent to a dead-letter queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-673">
            <see langword="true" /> Se il recapito dei messaggi deve rispettate, una copia del messaggio inviato a una coda di messaggi non recapitabili; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-673">
              <see langword="true" /> if message-delivery failure should result in a copy of the message being sent to a dead-letter queue; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a6214-674">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-674">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-675">Il <xref:System.Messaging.Message.UseJournalQueue%2A> e <xref:System.Messaging.Message.UseDeadLetterQueue%2A> specificano come il servizio Accodamento messaggi di traccia dei messaggi.</span><span class="sxs-lookup"><span data-stu-id="a6214-675">The <xref:System.Messaging.Message.UseJournalQueue%2A> and <xref:System.Messaging.Message.UseDeadLetterQueue%2A> properties specify how Message Queuing tracks a message.</span></span> <span data-ttu-id="a6214-676">Se <xref:System.Messaging.Message.UseDeadLetterQueue%2A> è `true`, errore di recapito (di un messaggio non transazionale), fa sì che il messaggio da inviare alla coda non transazionale recapitabili sul computer che non è stato possibile recapitare il messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-676">If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `true`, delivery failure (of a non-transactional message), causes the message to be sent to the non-transactional dead-letter queue on the computer that could not deliver the message.</span></span> <span data-ttu-id="a6214-677">Errore di recapito può essere provocato da un timer di messaggio che scade, ad esempio.</span><span class="sxs-lookup"><span data-stu-id="a6214-677">Delivery failure could be caused by a message timer expiring, for example.</span></span>  
  
 <span data-ttu-id="a6214-678">Nel caso di errore di recapito per un messaggio transazionale, Accodamento messaggi invia il messaggio alla coda inattiva transazionale nel computer di origine in tutti i casi negativi e in dubbio.</span><span class="sxs-lookup"><span data-stu-id="a6214-678">In the case of delivery failure for a transactional message, Message Queuing sends the message to the transactional dead-letter queue on the source machine in all negative and in-doubt cases.</span></span>  
  
 <span data-ttu-id="a6214-679">Quando si archiviano i messaggi in una coda di messaggi non recapitabili, è necessario cancellare la coda periodicamente per rimuovere i messaggi che non sono più necessari.</span><span class="sxs-lookup"><span data-stu-id="a6214-679">When you store messages in a dead-letter queue, you should clear the queue periodically to remove messages that are no longer needed.</span></span> <span data-ttu-id="a6214-680">Messaggi memorizzati nel recapitabili conteggio ai fini della quota di dimensioni per il computer in cui risiede la coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-680">Messages stored in dead-letter queues count against the size quota for the computer where the queue resides.</span></span> <span data-ttu-id="a6214-681">La quota del computer è impostata dall'amministratore e si riferisce alle dimensioni allocate per memorizzare messaggi sull'intero computer, non solo in una singola coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-681">The computer quota is set by the administrator and refers to the size allocated for storing messages on the whole computer, not just in a single queue.</span></span>  
  
 <span data-ttu-id="a6214-682">Non si crea una coda del diario o inattiva.</span><span class="sxs-lookup"><span data-stu-id="a6214-682">You do not create a journal or dead-letter queue.</span></span> <span data-ttu-id="a6214-683">Sono entrambe code di sistema di Accodamento messaggi genera l'errore.</span><span class="sxs-lookup"><span data-stu-id="a6214-683">These are both system queues that Message Queuing generates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-684">Esempio di codice seguente ottiene e imposta il valore di un messaggio <xref:System.Messaging.Message.UseDeadLetterQueue%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-684">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-685">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseDeadLetterQueue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-685">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseDeadLetterQueue" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseJournalQueue" />
        <altmember cref="P:System.Messaging.Message.UseTracing" />
      </Docs>
    </Member>
    <Member MemberName="UseEncryption">
      <MemberSignature Language="C#" Value="public bool UseEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseEncryption" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.UseEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property UseEncryption As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseEncryption { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseEncryption : bool with get, set" Usage="System.Messaging.Message.UseEncryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseEncryption")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-686">Gets or sets a value that indicates whether to make the message private.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-686">Gets or sets a value that indicates whether to make the message private.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-687">
            <see langword="true" /> per richiedere di Accodamento per crittografare il messaggio; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-687">
              <see langword="true" /> to require Message Queuing to encrypt the message; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a6214-688">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-688">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-689">Se un messaggio è privato, il corpo viene crittografato prima che venga inviato e decrittografata quando vengono ricevuti.</span><span class="sxs-lookup"><span data-stu-id="a6214-689">If a message is private, its body is encrypted before it is sent and decrypted when it is received.</span></span> <span data-ttu-id="a6214-690">Per inviare un messaggio privato, l'applicazione di invio deve specificare che la crittografia utilizzabile e, facoltativamente, l'algoritmo di crittografia.</span><span class="sxs-lookup"><span data-stu-id="a6214-690">To send a private message, the sending application must specify that encryption be used and, optionally, the encryption algorithm.</span></span>  
  
 <span data-ttu-id="a6214-691">Quando si inviano messaggi privati, l'applicazione non necessario eseguire la crittografia del messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-691">When sending private messages, your application does not need to perform the message encryption.</span></span> <span data-ttu-id="a6214-692">In Accodamento messaggi può crittografare il corpo del messaggio per l'utente se l'applicazione invia messaggi all'interno di un'azienda di Microsoft Windows 2000, che dispone dell'accesso al servizio directory.</span><span class="sxs-lookup"><span data-stu-id="a6214-692">Message Queuing can encrypt the message body for you if your application is sending messages within a Microsoft Windows 2000 enterprise, which has access to the directory service.</span></span> <span data-ttu-id="a6214-693">Quando si ricevono messaggi privati, il gestore delle code ricevente decrittografa sempre il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="a6214-693">When receiving private messages, the receiving Queue Manager always decrypts the message body.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-694">Esempio di codice seguente ottiene e imposta il valore di un messaggio <xref:System.Messaging.Message.UseEncryption%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-694">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.UseEncryption%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-695">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseEncryption" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-695">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseEncryption" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.EncryptionAlgorithm" />
        <altmember cref="P:System.Messaging.MessageQueue.EncryptionRequired" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseJournalQueue : bool with get, set" Usage="System.Messaging.Message.UseJournalQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseJournalQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-696">Gets or sets a value that indicates whether a copy of the message should be kept in a machine journal on the originating computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-696">Gets or sets a value that indicates whether a copy of the message should be kept in a machine journal on the originating computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-697">
            <see langword="true" /> per richiedere di essere mantenuta una copia di un messaggio nel journal del computer di origine dopo che il messaggio è stato trasmesso (dal computer di origine con il server successivo); in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-697">
              <see langword="true" /> to require that a copy of a message be kept in the originating computer's machine journal after the message has been successfully transmitted (from the originating computer to the next server); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a6214-698">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-698">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-699">Il <xref:System.Messaging.Message.UseJournalQueue%2A> e <xref:System.Messaging.Message.UseDeadLetterQueue%2A> specificano come il servizio Accodamento messaggi di traccia dei messaggi.</span><span class="sxs-lookup"><span data-stu-id="a6214-699">The <xref:System.Messaging.Message.UseJournalQueue%2A> and <xref:System.Messaging.Message.UseDeadLetterQueue%2A> properties specify how Message Queuing tracks a message.</span></span> <span data-ttu-id="a6214-700">Se <xref:System.Messaging.Message.UseJournalQueue%2A> è `true`, quindi una copia viene mantenuta nella coda journal di computer nel computer di origine a ogni passaggio che un messaggio viene trasmesso.</span><span class="sxs-lookup"><span data-stu-id="a6214-700">If <xref:System.Messaging.Message.UseJournalQueue%2A> is `true`, then a copy is kept in the computer journal on the originating machine at each step that a message is transmitted.</span></span>  
  
 <span data-ttu-id="a6214-701">Il messaggio inviato viene copiato nella coda journal solo se la coda di destinazione si trova in un computer remoto.</span><span class="sxs-lookup"><span data-stu-id="a6214-701">The sent message is only copied to the journal queue if the destination queue is on a remote computer.</span></span> <span data-ttu-id="a6214-702">Se la destinazione è nel computer locale, il messaggio viene inviato direttamente alla coda. non sono passaggi intermedi in modo da richiedere l'inserimento nel journal.</span><span class="sxs-lookup"><span data-stu-id="a6214-702">If the destination is on the local computer, the message is sent directly to the queue; there are no intermediate steps to require journaling.</span></span>  
  
 <span data-ttu-id="a6214-703">Quando si archiviano i messaggi in una coda journal, deselezionare la periodicamente la coda per rimuovere i messaggi che non sono più necessari.</span><span class="sxs-lookup"><span data-stu-id="a6214-703">When you store messages in a journal queue, clear the queue periodically to remove messages that are no longer needed.</span></span> <span data-ttu-id="a6214-704">Messaggi archiviati in code diario ai fini della quota per il computer in cui risiede la coda.</span><span class="sxs-lookup"><span data-stu-id="a6214-704">Messages stored in journal queues count against the quota for the computer where the queue resides.</span></span> <span data-ttu-id="a6214-705">(La quota del computer è impostata dall'amministratore).</span><span class="sxs-lookup"><span data-stu-id="a6214-705">(The computer quota is set by the administrator.)</span></span>  
  
 <span data-ttu-id="a6214-706">Non si crea una coda del diario o inattiva.</span><span class="sxs-lookup"><span data-stu-id="a6214-706">You do not create a journal or dead-letter queue.</span></span> <span data-ttu-id="a6214-707">Sono entrambe code di sistema di Accodamento messaggi genera l'errore.</span><span class="sxs-lookup"><span data-stu-id="a6214-707">These are both system queues that Message Queuing generates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-708">Esempio di codice seguente ottiene e imposta il valore di un messaggio <xref:System.Messaging.Message.UseJournalQueue%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-708">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.UseJournalQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-709">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseJournalQueue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-709">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseJournalQueue" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.Message.UseTracing" />
        <altmember cref="P:System.Messaging.MessageQueue.UseJournalQueue" />
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
      </Docs>
    </Member>
    <Member MemberName="UseTracing">
      <MemberSignature Language="C#" Value="public bool UseTracing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseTracing" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.UseTracing" />
      <MemberSignature Language="VB.NET" Value="Public Property UseTracing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseTracing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseTracing : bool with get, set" Usage="System.Messaging.Message.UseTracing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseTracing")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6214-710">Gets or sets a value that indicates whether to trace a message as it moves toward its destination queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-710">Gets or sets a value that indicates whether to trace a message as it moves toward its destination queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6214-711">
            <see langword="true" /> Se ogni fase intermedia dell'invio del messaggio originale alla coda di destinazione viene generato un report da inviare alla coda di rapporti del sistema; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-711">
              <see langword="true" /> if each intermediate step made by the original message en route to the destination queue generates a report to be sent to the system's report queue; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a6214-712">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-712">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6214-713">Il <xref:System.Messaging.Message.UseTracing%2A> proprietà specifica se tenere traccia della route di un messaggio durante lo spostamento verso la coda di destinazione.</span><span class="sxs-lookup"><span data-stu-id="a6214-713">The <xref:System.Messaging.Message.UseTracing%2A> property specifies whether to track the route of a message as it moves toward its destination queue.</span></span> <span data-ttu-id="a6214-714">Se `true`, un messaggio di rapporto (generato da Accodamento messaggi) viene inviato alla coda dei rapporti ogni volta che il messaggio passa attraverso un server di Accodamento.</span><span class="sxs-lookup"><span data-stu-id="a6214-714">If `true`, a report message (generated by Message Queuing) is sent to a report queue each time the message passes through a Message Queuing routing server.</span></span> <span data-ttu-id="a6214-715">La coda del report viene specificata dal gestore code di origine.</span><span class="sxs-lookup"><span data-stu-id="a6214-715">The report queue is specified by the source Queue Manager.</span></span> <span data-ttu-id="a6214-716">Le code del report non sono limitate per segnalare i messaggi generati da Accodamento messaggi; i messaggi generati dall'applicazione possono anche essere inviati alle code di report.</span><span class="sxs-lookup"><span data-stu-id="a6214-716">Report queues are not limited to report messages generated by Message Queuing; your application-generated messages can also be sent to report queues.</span></span>  
  
 <span data-ttu-id="a6214-717">Utilizzo delle tracce, è necessario configurare Active Directory e specificare una coda dei rapporti di Accodamento messaggi.</span><span class="sxs-lookup"><span data-stu-id="a6214-717">Using tracing involves setting up Active Directory and specifying a report queue for the Message Queuing enterprise.</span></span> <span data-ttu-id="a6214-718">L'amministratore configura le impostazioni.</span><span class="sxs-lookup"><span data-stu-id="a6214-718">The administrator configures these settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6214-719">Esempio di codice seguente ottiene e imposta il valore di un messaggio <xref:System.Messaging.Message.UseTracing%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a6214-719">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.UseTracing%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6214-720">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseTracing" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6214-720">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseTracing" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.Message.UseJournalQueue" />
      </Docs>
    </Member>
  </Members>
</Type>