<Type Name="XmlMessageFormatter" FullName="System.Messaging.XmlMessageFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="563e678b40760a20036da2630095cb8b05f461de" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460735" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.XmlMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="9ecf4-101">Serializza e deserializza oggetti nel e dal corpo di un messaggio, utilizzando il formato XML basato sulla definizione di schema XSD.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9ecf4-101">Serializes and deserializes objects to or from the body of a message, using the XML format based on the XSD schema definition.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ecf4-102">Il <xref:System.Messaging.XmlMessageFormatter> è il formattatore predefinito che un'istanza di <xref:System.Messaging.MessageQueue> viene utilizzato per serializzare i messaggi scritti nella coda.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-102">The <xref:System.Messaging.XmlMessageFormatter> is the default formatter that an instance of <xref:System.Messaging.MessageQueue> uses to serialize messages written to the queue.</span></span> <span data-ttu-id="9ecf4-103">Quando si crea un'istanza di <xref:System.Messaging.MessageQueue>, un'istanza di <xref:System.Messaging.XmlMessageFormatter> viene creato e associato il <xref:System.Messaging.MessageQueue>.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-103">When you create an instance of <xref:System.Messaging.MessageQueue>, an instance of <xref:System.Messaging.XmlMessageFormatter> is created for you and associated with the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="9ecf4-104">È possibile specificare un formattatore differente creandolo nel codice e assegnarlo al <xref:System.Messaging.MessageQueue.Formatter%2A> proprietà del <xref:System.Messaging.MessageQueue>.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-104">You can specify a different formatter by creating it in your code and assigning it to the <xref:System.Messaging.MessageQueue.Formatter%2A> property of your <xref:System.Messaging.MessageQueue>.</span></span>  
  
 <span data-ttu-id="9ecf4-105">Valore predefinito di una coda <xref:System.Messaging.XmlMessageFormatter> istanza può essere utilizzata per scrivere nella coda, ma non può essere utilizzato per leggere dalla coda fino a quando non si imposta la <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> o <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> proprietà sul formattatore.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-105">A queue's default <xref:System.Messaging.XmlMessageFormatter> instance can be used to write to the queue, but it cannot be used to read from the queue until you set either the <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> property on the formatter.</span></span> <span data-ttu-id="9ecf4-106">È possibile impostare uno o entrambi i valori nell'istanza del formattatore predefinito oppure è possibile creare una nuova istanza del formattatore e impostare i valori automaticamente tramite il passaggio come argomenti in appropriata <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> costruttore.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-106">You can either set one or both of these values on the default formatter instance, or you can create a new instance of the formatter and set the values automatically by passing them as arguments into the appropriate <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="9ecf4-107">Quando si specifica <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> anziché <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, esistenza di tipo viene verificata in fase di compilazione anziché in fase di lettura, riducendo la probabilità di errore.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-107">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span> <span data-ttu-id="9ecf4-108"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> richiede che ogni voce sia completa, specificando il nome dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-108"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="9ecf4-109">Inoltre, quando si utilizzano più versioni simultanee, il numero di versione deve essere inoltre aggiunto al nome del tipo di destinazione nonché.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-109">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="9ecf4-110">Il <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> indicano il formattatore quali gli schemi per tentare di corrispondenza durante la deserializzazione di un messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-110">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="9ecf4-111">In questo modo il formattatore interpretare il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-111">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="9ecf4-112">L'istanza serializzata nel corpo del messaggio deve essere conforme con uno degli schemi rappresentati nella matrice del tipo.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-112">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="9ecf4-113">Quando si legge il messaggio utilizzando il <xref:System.Messaging.MessageQueue.Receive%2A> (metodo), il metodo crea un oggetto di tipo che corrisponde allo schema indicato e in cui viene letto il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-113">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="9ecf4-114">Solo una delle due proprietà deve essere impostata durante la lettura dalla coda, ma è possibile impostare entrambi.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-114">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="9ecf4-115">Il set di tipi è il set combinato delle due proprietà.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-115">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="9ecf4-116">La decisione di quale proprietà utilizzare è specifica dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-116">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="9ecf4-117">Se il corpo del messaggio contiene un tipo il cui schema non corrisponde a nessuno dei tipi nella matrice per delle proprietà, verrà generata un'eccezione quando viene letto il messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-117">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="9ecf4-118">Il <xref:System.Messaging.XmlMessageFormatter> è un componente fondamentale della messaggistica accoppiamento basato su XML.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-118">The <xref:System.Messaging.XmlMessageFormatter> is a crucial component of loosely coupled XML-based messaging.</span></span> <span data-ttu-id="9ecf4-119">Utilizza l'utilità XSD.exe che viene utilizzato il formato XML per generare schemi XML, ad esempio quando si utilizza l'utilità per serializzare una classe utilizzata dall'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-119">The XSD.exe utility uses the XML format is used to generate XML schema, such as when you use the utility to serialize a class used by your application.</span></span> <span data-ttu-id="9ecf4-120">La classe deve disporre di un costruttore predefinito.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-120">The class must have a default constructor.</span></span>  
  
 <span data-ttu-id="9ecf4-121">Viene utilizzato il formato nuovamente il processo inverso quando l'utilità genera una classe in base allo schema distribuito per descrivere i dati della classe.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-121">The format is used again in the reverse process when the utility generates a class based on the schema you distribute to describe your class data.</span></span> <span data-ttu-id="9ecf4-122">L'utilizzo dell'utilità e dello schema XML generato consente di evitare ridistribuire i file ogni volta che una classe viene ricompilata dopo che è stata modificata l'implementazione della classe.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-122">The use of the utility and the XML schema it generates enables you to avoid redistributing.dll files every time you recompile a class after the implementation of your class has changed.</span></span> <span data-ttu-id="9ecf4-123">Fino a quando lo schema non viene modificato sul client o server, le altre modifiche su entrambi i lati non influisce sugli altri.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-123">As long as the schema does not change on the client or the server, other changes on either side do not affect the other.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ecf4-124">L'esempio di codice seguente include tre parti di codice: un componente server, una classe order e il codice client.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-124">The following code example includes three pieces of code: a server component, an order class, and client code.</span></span> <span data-ttu-id="9ecf4-125">La classe order è utilizzabile dall'utilità di XSD.exe per generare lo schema riconosciuto dal server all'interno di messaggi in ingresso.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-125">The order class can be used by the XSD.exe utility to generate schema that the server recognizes within incoming messages.</span></span> <span data-ttu-id="9ecf4-126">Lo schema è un file in formato XML che descrive la "forma" della classe.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-126">The schema is an XML formatted file that describes the "shape" of the class.</span></span> <span data-ttu-id="9ecf4-127">Questo schema può quindi essere utilizzato sul lato client per generare una classe order specifica di client che condivide lo stesso schema della classe server.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-127">This schema can then be used on the client side to generate a client-specific order class that shares the same schema as the server class.</span></span>  
  
 <span data-ttu-id="9ecf4-128">Esempio di codice seguente rappresenta un componente server che riceve gli ordini tramite una coda di messaggi.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-128">The following code example represents a server component that receives orders through a message queue.</span></span> <span data-ttu-id="9ecf4-129">Il corpo del messaggio deve essere un oggetto ordine il cui schema corrisponde classe cs.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-129">The body of the message should be an order object whose schema matches the Order.cs class below.</span></span> <span data-ttu-id="9ecf4-130">Il processo del server o l'applicazione deserializza l'ordine.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-130">The server process or application deserializes the order.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlMessageFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source.cs#1)]
 [!code-vb[Classic XmlMessageFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9ecf4-131">Esempio di codice seguente rappresenta la classe order che fornisce uno schema per gli oggetti di ordine che riceve l'applicazione sul server e la deserializzazione.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-131">The following code example represents the order class that provides a schema for the order objects that the application on the server receives and deserializes.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic XmlMessageFormatter Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source2.cs#2)]
 [!code-vb[Classic XmlMessageFormatter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="9ecf4-132">Qualsiasi applicazione client che interagisce con l'applicazione nel server deve inviare i messaggi al server serializzando le informazioni in una classe order definita localmente nel corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-132">Any client application that interacts with the application on the server must send messages to the server by serializing information in a locally defined order class into the message body.</span></span> <span data-ttu-id="9ecf4-133">La classe definita localmente order deve avere lo stesso schema della classe server definito dall'ordine in cui l'applicazione nel server tenterà di deserializzare il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-133">The locally defined order class must have the same schema as the server-defined order class into which the application on the server will attempt to deserialize the message body.</span></span> <span data-ttu-id="9ecf4-134">Creare e distribuire lo schema a cui che il client deve utilizzare per serializzare i messaggi inviati al server, l'utilità di XSD.exe consente la gestione dell'applicazione nel server.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-134">The XSD.exe utility lets the manager of the application on the server create and distribute the schema the client must use to serialize messages going to the server.</span></span>  
  
 <span data-ttu-id="9ecf4-135">Quando il gestore dell'applicazione client riceve lo schema per la classe order, l'utilità di XSD.exe viene usato di nuovo per generare una classe order specifica dello schema.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-135">When the manager of the client application receives the schema for the order class, the XSD.exe utility is used again to generate a client-specific order class from the schema.</span></span> <span data-ttu-id="9ecf4-136">Questa classe che viene utilizzato nell'esempio di codice client seguente, non l'ordine della classe server (utilità di XSD.exe fa sì che la classe di schema generato per lo stesso nome della classe originale).</span><span class="sxs-lookup"><span data-stu-id="9ecf4-136">It is this class that is used in the client code example below, not the server's order class (the XSD.exe utility causes the schema-generated class to have the same name as the original class).</span></span> <span data-ttu-id="9ecf4-137">La nuova classe order viene utilizzata per serializzare l'ordine nel corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-137">This new order class is used to serialize the order into the message body.</span></span>  
  
 <span data-ttu-id="9ecf4-138">Esempio di codice seguente è il lato client l'elaborazione, utilizzata per serializzare un ordine e inviare le informazioni associate con l'ordine in una coda.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-138">The following code example is the client-side processing, used to serialize an order and send the information associated with the order to a queue.</span></span> <span data-ttu-id="9ecf4-139">Il codice associa informazioni articolo, quantità e l'indirizzo a elementi dello schema per la classe cs generati dall'utilità di XSD.exe.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-139">The code associates Item, Quantity, and Address information with elements of the schema that were generated for the Order.cs class by the XSD.exe utility.</span></span> <span data-ttu-id="9ecf4-140">Un ordine viene inviato alla coda degli ordini nel computer locale.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-140">An order is sent to the Orders queue on the local computer.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source3.cpp#3)]
 [!code-csharp[Classic XmlMessageFormatter Example#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source3.cs#3)]
 [!code-vb[Classic XmlMessageFormatter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source3.vb#3)]  
  
 <span data-ttu-id="9ecf4-141">Dopo che lo schema viene generato dalla classe order sul server, è possibile modificare la classe.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-141">After the schema is generated from the order class on the server, you can modify the class.</span></span> <span data-ttu-id="9ecf4-142">A meno che le modifiche dello schema, non è necessario ridistribuire lo schema.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-142">Unless the schema changes, you do not need to redistribute the schema.</span></span> <span data-ttu-id="9ecf4-143">Dopo avere distribuito lo schema e generare una classe order sul lato client, tale classe client inoltre possibile modificare in modo indipendente da classe order del server, fino a quando non viene modificato lo schema stesso.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-143">After you have distributed the schema and generated a client-side order class, that client class can also be modified independently of the server's order class, as long as the schema itself is not modified.</span></span> <span data-ttu-id="9ecf4-144">Le due classi sono abbinate più.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-144">The two classes have become loosely coupled.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
    <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
    <altmember cref="T:System.Messaging.IMessageFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9ecf4-145">Inizializza una nuova istanza della classe <see cref="T:System.Messaging.XmlMessageFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-145">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ecf4-146">Inizializza una nuova istanza della classe <see cref="T:System.Messaging.XmlMessageFormatter" /> senza tipi di destinazione impostati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-146">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, without target types set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ecf4-147">Questo overload del costruttore viene utilizzato più frequentemente durante la scrittura in coda, come tipi di destinazione non sono necessari durante la scrittura.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-147">This overload of the constructor is used most frequently when writing to the queue, as target types are not required when writing.</span></span>  
  
 <span data-ttu-id="9ecf4-148">Per leggere un messaggio da una coda utilizzando un'istanza di <xref:System.Messaging.XmlMessageFormatter> creato utilizzando il costruttore, è necessario impostare il <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> o <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> proprietà affinché il formattatore sappia quali tipi deserializzare.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-148">To read a message from a queue using an instance of <xref:System.Messaging.XmlMessageFormatter> created using this constructor, you must set the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties so the formatter knows what types to attempt to deserialize.</span></span>  
  
 <span data-ttu-id="9ecf4-149">Quando si crea un nuovo <xref:System.Messaging.MessageQueue>, valore predefinito è <xref:System.Messaging.XmlMessageFormatter> istanza viene creata, senza il set di tipi di destinazione.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-149">When you create a new <xref:System.Messaging.MessageQueue>, a default <xref:System.Messaging.XmlMessageFormatter> instance is created, without the target types set.</span></span> <span data-ttu-id="9ecf4-150">Come con un formattatore creato utilizzando il costruttore, è necessario impostare i tipi di destinazione per l'istanza del formattatore se si desidera leggere dalla coda.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-150">As with a formatter created using this constructor, you must set target types for that formatter instance if you want to read from the queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter (string[] targetTypeNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] targetTypeNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetTypeNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter(cli::array &lt;System::String ^&gt; ^ targetTypeNames);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetTypeNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targetTypeNames">
          <span data-ttu-id="9ecf4-151">Matrice di tipo <see cref="T:System.String" /> che specifica l'insieme di tipi possibili che verranno deserializzati tramite il formattatore dal messaggio fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-151">An array of type <see cref="T:System.String" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          </span>
          <span data-ttu-id="9ecf4-152">Tali valori devono essere completamente qualificati, ad esempio "MyNamespace.MyOrders, MyOrdersAssemblyName".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-152">These values must be fully qualified, for example, "MyNamespace.MyOrders, MyOrdersAssemblyName".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ecf4-153">Inizializza una nuova istanza della classe <see cref="T:System.Messaging.XmlMessageFormatter" /> impostando i tipi di destinazione passati come matrice di valori di stringa (completamente qualificati).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-153">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of (fully qualified) string values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ecf4-154">I costruttori con parametri di tipo di destinazione vengono utilizzati più frequentemente durante la lettura dalla coda.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-154">The constructors with target type parameters are most frequently used when reading from the queue.</span></span> <span data-ttu-id="9ecf4-155">Durante la scrittura, non è necessario specificare i tipi di destinazione.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-155">When writing, it is not necessary to specify target types.</span></span>  
  
 <span data-ttu-id="9ecf4-156">Questo overload del metodo di <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> costruttore imposta la <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> proprietà per i valori della matrice passato tramite il `targetTypeNames` parametro.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-156">This overload of the <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor sets the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> property to the array values passed in through the `targetTypeNames` parameter.</span></span> <span data-ttu-id="9ecf4-157">L'impostazione di questa proprietà consente un <xref:System.Messaging.MessageQueue> usando questa <xref:System.Messaging.XmlMessageFormatter> istanza per leggere i messaggi contenenti oggetti di determinati tipi.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-157">Setting this property enables a <xref:System.Messaging.MessageQueue> using this <xref:System.Messaging.XmlMessageFormatter> instance to read messages containing objects of given types.</span></span>  
  
 <span data-ttu-id="9ecf4-158">Sia il <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> indicano il formattatore quali gli schemi per tentare di corrispondenza durante la deserializzazione di un messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-158">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="9ecf4-159">In questo modo il formattatore interpretare il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-159">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="9ecf4-160">L'istanza serializzata nel corpo del messaggio deve essere conforme con uno degli schemi rappresentati nella matrice del tipo.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-160">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="9ecf4-161">Quando si legge il messaggio utilizzando il <xref:System.Messaging.MessageQueue.Receive%2A> (metodo), il metodo crea un oggetto di tipo che corrisponde allo schema indicato e in cui viene letto il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-161">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="9ecf4-162">Solo una delle due proprietà deve essere impostata durante la lettura dalla coda, ma è possibile impostare entrambi.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-162">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="9ecf4-163">Il set di tipi è il set combinato delle due proprietà.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-163">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="9ecf4-164">La scelta di quale utilizzare è specifico dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-164">The decision of which one to use is specific to your application.</span></span> <span data-ttu-id="9ecf4-165">Se il corpo del messaggio contiene un tipo il cui schema non corrisponde a nessuno dei tipi nella matrice per delle proprietà, verrà generata un'eccezione in fase di lettura.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-165">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ecf4-166">Il valore del parametro <paramref name="targetTypeNames" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-166">The <paramref name="targetTypeNames" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter (Type[] targetTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type[] targetTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetTypes As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter(cli::array &lt;Type ^&gt; ^ targetTypes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="targetTypes">
          <span data-ttu-id="9ecf4-167">Matrice di tipo <see cref="T:System.Type" /> che specifica l'insieme di tipi possibili che verranno deserializzati tramite il formattatore dal messaggio fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-167">An array of type <see cref="T:System.Type" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ecf4-168">Inizializza una nuova istanza della classe <see cref="T:System.Messaging.XmlMessageFormatter" /> impostando i tipi di destinazione passati come matrice di tipi di oggetti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-168">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of object types.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ecf4-169">I costruttori con parametri di tipo di destinazione vengono utilizzati più frequentemente durante la lettura dalla coda.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-169">The constructors with target type parameters are most frequently used when reading from the queue.</span></span> <span data-ttu-id="9ecf4-170">Durante la scrittura, non è necessario specificare i tipi di destinazione.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-170">When writing, it is not necessary to specify target types.</span></span>  
  
 <span data-ttu-id="9ecf4-171">Questo overload del metodo di <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> costruttore imposta la <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> proprietà per i valori della matrice passato tramite il `targetTypes` parametro.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-171">This overload of the <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor sets the <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property to the array values passed in through the `targetTypes` parameter.</span></span> <span data-ttu-id="9ecf4-172">L'impostazione di questa proprietà consente un <xref:System.Messaging.MessageQueue> usando questa <xref:System.Messaging.XmlMessageFormatter> istanza per leggere i messaggi contenenti oggetti di tipi specificati.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-172">Setting this property enables a <xref:System.Messaging.MessageQueue> using this <xref:System.Messaging.XmlMessageFormatter> instance to read messages containing objects of the given types.</span></span>  
  
 <span data-ttu-id="9ecf4-173">Sia il <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> indicano il formattatore quali gli schemi per tentare di corrispondenza durante la deserializzazione di un messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-173">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="9ecf4-174">In questo modo il formattatore interpretare il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-174">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="9ecf4-175">L'istanza serializzata nel corpo del messaggio deve essere conforme con uno degli schemi rappresentati nella matrice del tipo.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-175">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="9ecf4-176">Quando si legge il messaggio utilizzando il <xref:System.Messaging.MessageQueue.Receive%2A> (metodo), il metodo crea un oggetto di tipo che corrisponde allo schema indicato e in cui viene letto il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-176">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="9ecf4-177">Solo una delle due proprietà deve essere impostata durante la lettura dalla coda, ma è possibile impostare entrambi.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-177">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="9ecf4-178">Il set di tipi è il set combinato delle due proprietà.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-178">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="9ecf4-179">La scelta di quale utilizzare è specifico dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-179">The decision of which one to use is specific to your application.</span></span> <span data-ttu-id="9ecf4-180">Se il corpo del messaggio contiene un tipo il cui schema non corrisponde a nessuno dei tipi nella matrice per delle proprietà, verrà generata un'eccezione in fase di lettura.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-180">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</span></span>  
  
 <span data-ttu-id="9ecf4-181">Quando si specifica <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> anziché <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, esistenza di tipo viene verificata in fase di compilazione anziché in fase di lettura, riducendo la probabilità di errore.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-181">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span> <span data-ttu-id="9ecf4-182"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> richiede che ogni voce sia completa, specificando il nome dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-182"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="9ecf4-183">Inoltre, quando si utilizzano più versioni simultanee, il numero di versione deve essere inoltre aggiunto al nome del tipo di destinazione nonché.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-183">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="9ecf4-184">Quando si utilizza <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, è possibile aggiungere ogni oggetto (ad esempio, `MyClass`) all'elenco nel modo descritto dal codice c# seguente.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-184">When using <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, you can add each object (for example, `MyClass`) to the list in a way demonstrated by the following C# code.</span></span>  
  
```  
TargetTypes = new Type[]{typeof(MyClass)}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ecf4-185">Il valore del parametro <paramref name="targetTypes" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-185">The <paramref name="targetTypes" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="9ecf4-186">
            <see cref="T:System.Messaging.Message" /> da esaminare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-186">The <see cref="T:System.Messaging.Message" /> to inspect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ecf4-187">Determina se il formattatore può deserializzare il messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-187">Determines whether the formatter can deserialize the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ecf4-188">
            <see langword="true" /> se il formattatore XML può deserializzare il messaggio; altrimenti <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-188">
              <see langword="true" /> if the XML formatter can deserialize the message; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ecf4-189">Quando <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> viene chiamato, il formattatore tenta di determinare se è possibile deserializzare il contenuto del messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-189">When <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> is called, the formatter attempts to determine if the contents of the message are something it can deserialize.</span></span> <span data-ttu-id="9ecf4-190">Il formattatore può deserializzare il messaggio solo se il tipo nel corpo del messaggio ha lo stesso schema di uno dei tipi nella matrice rappresentata dal <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-190">The formatter can only deserialize the message if the type in the message body has the same schema as one of the types in the array represented by the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties.</span></span> <span data-ttu-id="9ecf4-191"><xref:System.Messaging.XmlMessageFormatter.CanRead%2A> Restituisce `false` nei due casi seguenti:</span><span class="sxs-lookup"><span data-stu-id="9ecf4-191"><xref:System.Messaging.XmlMessageFormatter.CanRead%2A> returns `false` under the following two circumstances:</span></span>  
  
-   <span data-ttu-id="9ecf4-192">Il messaggio non è stato formattato utilizzando il <xref:System.Messaging.XmlMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-192">The message was not formatted using the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
-   <span data-ttu-id="9ecf4-193">Lo schema del corpo del messaggio non è tra quelli elencati in entrambi i <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> o <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-193">The schema of the message body is not among those listed in either the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property.</span></span>  
  
 <span data-ttu-id="9ecf4-194">Il <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> indicano al formattatore i tipi di oggetti deve essere in grado di deserializzare.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-194">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what types of objects it must be able to deserialize.</span></span> <span data-ttu-id="9ecf4-195">Se non è presente nell'elenco di qualsiasi tipo, viene trovato all'interno del messaggio, <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-195">If any type is missing from the list, yet is found within the message, <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9ecf4-196">Nessuna delle due proprietà <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> e <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> è stata impostata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-196">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ecf4-197">Il valore del parametro <paramref name="message" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-197">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
        <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ecf4-198">Crea un'istanza della classe <see cref="T:System.Messaging.XmlMessageFormatter" /> le cui proprietà di lettura/scrittura (gli insiemi dei tipi di destinazione) sono le stesse dell'istanza <see cref="T:System.Messaging.XmlMessageFormatter" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-198">Creates an instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class whose read/write properties (the sets of target types) are the same as the current <see cref="T:System.Messaging.XmlMessageFormatter" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ecf4-199">Oggetto le cui proprietà sono identiche a quelle di questa istanza <see cref="T:System.Messaging.XmlMessageFormatter" />, ma i cui metadati non specificano che si tratta di un'istanza di classe formatter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-199">An object whose properties are identical to those of this <see cref="T:System.Messaging.XmlMessageFormatter" /> instance, but whose metadata does not specify it to be a formatter class instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ecf4-200">Questo metodo crea una copia del formattatore e inizializza tutte le proprietà con valori di questo <xref:System.Messaging.XmlMessageFormatter> oggetto.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-200">This method creates a copy of the formatter and initializes all its properties to the values of this <xref:System.Messaging.XmlMessageFormatter> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="9ecf4-201">Il <see cref="T:System.Messaging.Message" />, in formato XML da deserializzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-201">The <see cref="T:System.Messaging.Message" />, in XML format, to deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ecf4-202">Legge il contenuto del messaggio indicato e crea un oggetto contenente il messaggio deserializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-202">Reads the contents from the given message and creates an object that contains the deserialized message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ecf4-203">Messaggio deserializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-203">The deserialized message.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ecf4-204">Sia il <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> indicano il formattatore quali gli schemi per tentare di corrispondenza durante la deserializzazione di un messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-204">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="9ecf4-205">Una di queste proprietà deve essere impostata prima che il messaggio può essere deserializzato.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-205">One of these properties must be set before the message can be deserialized.</span></span>  
  
 <span data-ttu-id="9ecf4-206">L'istanza serializzata nel corpo del messaggio deve essere conforme con uno degli schemi rappresentati nella matrice del tipo.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-206">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="9ecf4-207">Quando si legge il messaggio utilizzando il <xref:System.Messaging.MessageQueue.Receive%2A> (metodo), il metodo crea un oggetto di tipo che corrisponde allo schema indicato e in cui viene letto il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-207">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="9ecf4-208">I tipi di destinazione non è necessario specificare per scrivere nella coda.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-208">The target types do not have to be specified in order to write to the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9ecf4-209">Nessuna delle due proprietà <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> e <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> è stata impostata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-209">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.</span>
          </span>
          <span data-ttu-id="9ecf4-210">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-210">-or-</span>
          </span>
          <span data-ttu-id="9ecf4-211">L'istanza serializzata nel corpo del messaggio non è conforme ad alcuno degli schemi rappresentati dai tipi nelle proprietà <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> e <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-211">The instance serialized in the message body does not comply with any of the schemas represented by the types in the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> and <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> properties.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ecf4-212">Il valore del parametro <paramref name="message" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-212">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="TargetTypeNames">
      <MemberSignature Language="C#" Value="public string[] TargetTypeNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] TargetTypeNames" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetTypeNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ TargetTypeNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("XmlMsgTargetTypeNames")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ecf4-213">Specifica l'insieme di tipi possibili che verranno deserializzati tramite il formattatore dal messaggio fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-213">Specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ecf4-214">Matrice di tipo <see cref="T:System.String" /> che specifica i tipi di oggetti da deserializzare dal corpo del messaggio durante la lettura del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-214">An array of type <see cref="T:System.String" /> that specifies the types of objects to deserialize from the message body when reading the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ecf4-215">Sia il <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> indicano il formattatore quali gli schemi per tentare di corrispondenza durante la deserializzazione di un messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-215">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="9ecf4-216">In questo modo il formattatore interpretare il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-216">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="9ecf4-217">L'istanza serializzata nel corpo del messaggio deve essere conforme con uno degli schemi rappresentati nella matrice del tipo.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-217">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="9ecf4-218">Quando si legge il messaggio utilizzando il <xref:System.Messaging.MessageQueue.Receive%2A> (metodo), il metodo crea un oggetto di tipo che corrisponde allo schema indicato e in cui viene letto il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-218">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="9ecf4-219">Solo una delle due proprietà deve essere impostata durante la lettura dalla coda, ma è possibile impostare entrambi.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-219">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="9ecf4-220">Il set di tipi è il set combinato delle due proprietà.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-220">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="9ecf4-221">La decisione di quale proprietà utilizzare è specifica dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-221">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="9ecf4-222">Se il corpo del messaggio contiene un tipo il cui schema non corrisponde a nessuno dei tipi nella matrice per delle proprietà, verrà generata un'eccezione quando viene letto il messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-222">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="9ecf4-223"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> richiede che ogni voce sia completa, specificando il nome dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-223"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="9ecf4-224">Inoltre, quando si utilizzano più versioni simultanee, il numero di versione deve essere inoltre aggiunto al nome del tipo di destinazione nonché.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-224">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="9ecf4-225">I tipi di destinazione sono necessari durante la lettura dalla coda.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-225">The target types are only required when reading from the queue.</span></span> <span data-ttu-id="9ecf4-226">Il <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> proprietà non è necessario impostare la scrittura nella coda.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-226">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties do not need to be set to write to the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ecf4-227">La proprietà <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-227">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="TargetTypes">
      <MemberSignature Language="C#" Value="public Type[] TargetTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] TargetTypes" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Type ^&gt; ^ TargetTypes { cli::array &lt;Type ^&gt; ^ get(); void set(cli::array &lt;Type ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("XmlMsgTargetTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ecf4-228">Specifica l'insieme di tipi possibili che verranno deserializzati tramite il formattatore dal messaggio fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-228">Specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ecf4-229">Matrice di tipo <see cref="T:System.Type" /> che specifica i tipi di oggetti da deserializzare dal corpo del messaggio durante la lettura del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-229">An array of type <see cref="T:System.Type" /> that specifies the types of objects to deserialize from the message body when reading the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ecf4-230">Sia il <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> indicano il formattatore quali gli schemi per tentare di corrispondenza durante la deserializzazione di un messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-230">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="9ecf4-231">In questo modo il formattatore interpretare il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-231">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="9ecf4-232">L'istanza serializzata nel corpo del messaggio deve essere conforme con uno degli schemi rappresentati nella matrice del tipo.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-232">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="9ecf4-233">Quando si legge il messaggio utilizzando il <xref:System.Messaging.MessageQueue.Receive%2A> (metodo), il metodo crea un oggetto di tipo che corrisponde allo schema indicato e in cui viene letto il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-233">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="9ecf4-234">Solo una delle due proprietà deve essere impostata durante la lettura dalla coda, ma è possibile impostare entrambi.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-234">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="9ecf4-235">Il set di tipi è il set combinato delle due proprietà.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-235">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="9ecf4-236">La decisione di quale proprietà utilizzare è specifica dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-236">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="9ecf4-237">Se il corpo del messaggio contiene un tipo il cui schema non corrisponde a nessuno dei tipi nella matrice per delle proprietà, verrà generata un'eccezione quando viene letto il messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-237">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="9ecf4-238">I tipi di destinazione sono necessari durante la lettura dalla coda.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-238">The target types are only required when reading from the queue.</span></span> <span data-ttu-id="9ecf4-239">Il <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> proprietà non è necessario impostare la scrittura nella coda.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-239">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties do not need to be set to write to the queue.</span></span>  
  
 <span data-ttu-id="9ecf4-240">Quando si specifica <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> anziché <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, esistenza di tipo viene verificata in fase di compilazione anziché in fase di lettura, riducendo la probabilità di errore.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-240">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span>  
  
 <span data-ttu-id="9ecf4-241">Quando si utilizza <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, è possibile aggiungere ogni oggetto (ad esempio, `MyClass`) per l'elenco nel modo illustrato nel codice c# `TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-241">When using <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, you can add each object (for example, `MyClass`) to the list in a way demonstrated by the C# code `TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ecf4-242">Esempio di codice seguente invia e riceve un messaggio che contiene un ordine da e verso una coda.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-242">The following code example sends and receives a message that contains an order to and from a queue.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ecf4-243">La proprietà <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-243">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="9ecf4-244">
            <see cref="T:System.Messaging.Message" /> la cui proprietà <see cref="P:System.Messaging.Message.Body" /> conterrà l'oggetto serializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-244">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span>
          </span>
        </param>
        <param name="obj">
          <span data-ttu-id="9ecf4-245">L'<see cref="T:System.Object" /> da serializzare nel corpo del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-245">The <see cref="T:System.Object" /> to be serialized into the message body.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ecf4-246">Serializza un oggetto nel corpo del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-246">Serializes an object into the body of the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ecf4-247">Non è necessario specificare i tipi di destinazione devono essere durante la lettura di scrivere nella coda.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-247">The target types need not be specified to write to the queue as they must be when reading.</span></span> <span data-ttu-id="9ecf4-248">Il <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> o <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> è utilizzata dal formattatore solo durante la deserializzazione di un messaggio.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-248">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property is used by the formatter only when deserializing a message.</span></span>  
  
 <span data-ttu-id="9ecf4-249">Il <xref:System.Messaging.XmlMessageFormatter> utilizza il <xref:System.Xml.Serialization.XmlSerializer> (classe), che definisce ciò che può essere serializzato.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-249">The <xref:System.Messaging.XmlMessageFormatter> makes use of the <xref:System.Xml.Serialization.XmlSerializer> class, which defines what can be serialized.</span></span> <span data-ttu-id="9ecf4-250">Solo le proprietà pubbliche e i campi pubblici possono essere serializzate.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-250">Only public fields and public properties can be serialized.</span></span> <span data-ttu-id="9ecf4-251">Strutture, le strutture con matrici e le matrici di strutture sono tutte serializzabili, purché non utilizzano lo stile codificato con il protocollo SOAP.</span><span class="sxs-lookup"><span data-stu-id="9ecf4-251">Structures, structures with arrays, and arrays of structures are all serializable, as long as they do not use the encoded style with the SOAP protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ecf4-252">Il valore del parametro <paramref name="message" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-252">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="9ecf4-253">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-253">-or-</span>
          </span>
          <span data-ttu-id="9ecf4-254">Il valore del parametro <paramref name="obj" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ecf4-254">The <paramref name="obj" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>