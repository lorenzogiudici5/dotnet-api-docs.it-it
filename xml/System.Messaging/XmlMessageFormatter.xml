<Type Name="XmlMessageFormatter" FullName="System.Messaging.XmlMessageFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e9b5b367df928ff6d7a99dc28208e2d881b64249" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37478895" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.XmlMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <TypeSignature Language="F#" Value="type XmlMessageFormatter = class&#xA;    interface IMessageFormatter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="4b8e5-101">Serializes and deserializes objects to or from the body of a message, using the XML format based on the XSD schema definition.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4b8e5-101">Serializes and deserializes objects to or from the body of a message, using the XML format based on the XSD schema definition.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b8e5-102">Il <xref:System.Messaging.XmlMessageFormatter> il formattatore predefinito che un'istanza di <xref:System.Messaging.MessageQueue> viene utilizzato per serializzare i messaggi scritti nella coda.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-102">The <xref:System.Messaging.XmlMessageFormatter> is the default formatter that an instance of <xref:System.Messaging.MessageQueue> uses to serialize messages written to the queue.</span></span> <span data-ttu-id="4b8e5-103">Quando si crea un'istanza di <xref:System.Messaging.MessageQueue>, un'istanza di <xref:System.Messaging.XmlMessageFormatter> viene creato e associato il <xref:System.Messaging.MessageQueue>.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-103">When you create an instance of <xref:System.Messaging.MessageQueue>, an instance of <xref:System.Messaging.XmlMessageFormatter> is created for you and associated with the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="4b8e5-104">È possibile specificare un formattatore diversi crearlo nel codice e assegnarlo al <xref:System.Messaging.MessageQueue.Formatter%2A> proprietà del <xref:System.Messaging.MessageQueue>.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-104">You can specify a different formatter by creating it in your code and assigning it to the <xref:System.Messaging.MessageQueue.Formatter%2A> property of your <xref:System.Messaging.MessageQueue>.</span></span>  
  
 <span data-ttu-id="4b8e5-105">Impostazione predefinita della coda <xref:System.Messaging.XmlMessageFormatter> istanza può essere usata per scrivere nella coda, ma non può essere usato per leggere dalla coda, fino a quando non è impostata la <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> o <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> proprietà sul formattatore.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-105">A queue's default <xref:System.Messaging.XmlMessageFormatter> instance can be used to write to the queue, but it cannot be used to read from the queue until you set either the <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> property on the formatter.</span></span> <span data-ttu-id="4b8e5-106">È possibile impostare uno o entrambi questi valori nell'istanza del formattatore predefinito, oppure è possibile creare una nuova istanza del formattatore e impostare i valori automaticamente passandoli come argomenti nel appropriato <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> costruttore.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-106">You can either set one or both of these values on the default formatter instance, or you can create a new instance of the formatter and set the values automatically by passing them as arguments into the appropriate <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="4b8e5-107">Quando si specificano <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> anziché <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, tipo esistenza viene verificata in fase di compilazione anziché in fase di lettura, riducendo la probabilità di errore.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-107">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span> <span data-ttu-id="4b8e5-108"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> richiede che ogni voce sia completo, che specifica il nome dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-108"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="4b8e5-109">Inoltre, quando si usano più versioni simultanee, il numero di versione deve essere inoltre aggiunto al nome del tipo di destinazione anche.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-109">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="4b8e5-110">Il <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> indicano il formattatore quali gli schemi per tentare di corrispondenza durante la deserializzazione di un messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-110">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="4b8e5-111">In questo modo il formattatore interpretare il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-111">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="4b8e5-112">L'istanza serializzato nel corpo del messaggio deve essere conformi con uno degli schemi rappresentati nella matrice del tipo.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-112">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="4b8e5-113">Quando si legge il messaggio usando la <xref:System.Messaging.MessageQueue.Receive%2A> metodo, il metodo crea un oggetto del tipo che corrisponde allo schema indicato e in cui viene letto il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-113">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="4b8e5-114">Solo una delle due proprietà deve essere impostato durante la lettura dalla coda, ma è possibile impostare entrambe.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-114">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="4b8e5-115">Il set di tipi è il set combinato delle due proprietà.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-115">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="4b8e5-116">La scelta della proprietà da utilizzare è specifica dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-116">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="4b8e5-117">Se il corpo del messaggio contiene un tipo il cui schema non corrisponde a nessuno dei tipi nella matrice per delle proprietà, verrà generata un'eccezione quando il messaggio viene letto.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-117">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="4b8e5-118">Il <xref:System.Messaging.XmlMessageFormatter> è un componente fondamentale della messaggistica accoppiamento basato su XML.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-118">The <xref:System.Messaging.XmlMessageFormatter> is a crucial component of loosely coupled XML-based messaging.</span></span> <span data-ttu-id="4b8e5-119">Usa l'utilità XSD.exe che il formato XML viene usato per generare lo schema XML, ad esempio quando si usa l'utilità per serializzare una classe utilizzata dall'applicazione.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-119">The XSD.exe utility uses the XML format is used to generate XML schema, such as when you use the utility to serialize a class used by your application.</span></span> <span data-ttu-id="4b8e5-120">La classe deve disporre di un costruttore predefinito.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-120">The class must have a default constructor.</span></span>  
  
 <span data-ttu-id="4b8e5-121">Il formato viene usato anche in questo caso nel processo di reverse quando l'utilità genera una classe basata allo schema distribuito per descrivere i dati di classe.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-121">The format is used again in the reverse process when the utility generates a class based on the schema you distribute to describe your class data.</span></span> <span data-ttu-id="4b8e5-122">L'uso dell'utilità e viene generato il XML schema consente di evitare ridistribuire i file ogni volta che viene ricompilata una classe dopo l'implementazione della classe è stato modificato.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-122">The use of the utility and the XML schema it generates enables you to avoid redistributing.dll files every time you recompile a class after the implementation of your class has changed.</span></span> <span data-ttu-id="4b8e5-123">Purché lo schema non influisce sul client o server, altre modifiche su entrambi i lati non influiscano su altra.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-123">As long as the schema does not change on the client or the server, other changes on either side do not affect the other.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b8e5-124">L'esempio di codice seguente include tre parti di codice: un componente server, una classe order e codice client.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-124">The following code example includes three pieces of code: a server component, an order class, and client code.</span></span> <span data-ttu-id="4b8e5-125">La classe order è utilizzabile dall'utilità XSD.exe per generare lo schema che il server riconosca all'interno di messaggi in ingresso.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-125">The order class can be used by the XSD.exe utility to generate schema that the server recognizes within incoming messages.</span></span> <span data-ttu-id="4b8e5-126">Lo schema è un file XML formattato che descrive la "forma" della classe.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-126">The schema is an XML formatted file that describes the "shape" of the class.</span></span> <span data-ttu-id="4b8e5-127">Questo schema è quindi utilizzabile per generare una classe order specifiche del client che condivide lo stesso schema della classe server sul lato client.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-127">This schema can then be used on the client side to generate a client-specific order class that shares the same schema as the server class.</span></span>  
  
 <span data-ttu-id="4b8e5-128">Esempio di codice seguente rappresenta un componente server che riceve gli ordini tramite una coda di messaggi.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-128">The following code example represents a server component that receives orders through a message queue.</span></span> <span data-ttu-id="4b8e5-129">Il corpo del messaggio deve essere un oggetto di ordini il cui schema corrisponde alla classe Order.cs riportata di seguito.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-129">The body of the message should be an order object whose schema matches the Order.cs class below.</span></span> <span data-ttu-id="4b8e5-130">Il processo del server o l'applicazione deserializza l'ordine.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-130">The server process or application deserializes the order.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlMessageFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source.cs#1)]
 [!code-vb[Classic XmlMessageFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="4b8e5-131">Il codice seguente rappresenta la classe order che fornisce uno schema per gli oggetti di ordine che riceve l'applicazione nel server e la deserializzazione.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-131">The following code example represents the order class that provides a schema for the order objects that the application on the server receives and deserializes.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic XmlMessageFormatter Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source2.cs#2)]
 [!code-vb[Classic XmlMessageFormatter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="4b8e5-132">Qualsiasi applicazione client che interagisce con l'applicazione nel server debba inviare messaggi al server dalle informazioni sulla serializzazione in una classe definita localmente ordine nel corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-132">Any client application that interacts with the application on the server must send messages to the server by serializing information in a locally defined order class into the message body.</span></span> <span data-ttu-id="4b8e5-133">La classe definita localmente order deve avere lo stesso schema della classe order definito dal server in cui l'applicazione nel server tenterà di deserializzare il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-133">The locally defined order class must have the same schema as the server-defined order class into which the application on the server will attempt to deserialize the message body.</span></span> <span data-ttu-id="4b8e5-134">L'utilità XSD.exe consente la gestione dell'applicazione nel server di creare e distribuire lo schema che il client deve utilizzare per serializzare i messaggi inviati al server.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-134">The XSD.exe utility lets the manager of the application on the server create and distribute the schema the client must use to serialize messages going to the server.</span></span>  
  
 <span data-ttu-id="4b8e5-135">Quando il gestore dell'applicazione client riceve lo schema per la classe order, l'utilità XSD.exe viene utilizzato anche in questo caso per generare una classe client specifico ordine dallo schema.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-135">When the manager of the client application receives the schema for the order class, the XSD.exe utility is used again to generate a client-specific order class from the schema.</span></span> <span data-ttu-id="4b8e5-136">Si tratta della classe che viene usata nell'esempio di codice client seguente, non l'ordine della classe server (l'utilità XSD.exe fa sì che la classe di schema generato avere lo stesso nome di classe originale).</span><span class="sxs-lookup"><span data-stu-id="4b8e5-136">It is this class that is used in the client code example below, not the server's order class (the XSD.exe utility causes the schema-generated class to have the same name as the original class).</span></span> <span data-ttu-id="4b8e5-137">La nuova classe order viene utilizzata per serializzare l'ordine nel corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-137">This new order class is used to serialize the order into the message body.</span></span>  
  
 <span data-ttu-id="4b8e5-138">Esempio di codice seguente è il lato client l'elaborazione, utilizzato per serializzare un ordine e le informazioni relative all'ordine in una coda di trasmissione.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-138">The following code example is the client-side processing, used to serialize an order and send the information associated with the order to a queue.</span></span> <span data-ttu-id="4b8e5-139">Il codice associa Item, Quantity e indirizzo informazioni con gli elementi dello schema che sono stati generati per la classe Order.cs dall'utilità XSD.exe.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-139">The code associates Item, Quantity, and Address information with elements of the schema that were generated for the Order.cs class by the XSD.exe utility.</span></span> <span data-ttu-id="4b8e5-140">Un ordine viene inviato alla coda degli ordini nel computer locale.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-140">An order is sent to the Orders queue on the local computer.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source3.cpp#3)]
 [!code-csharp[Classic XmlMessageFormatter Example#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source3.cs#3)]
 [!code-vb[Classic XmlMessageFormatter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source3.vb#3)]  
  
 <span data-ttu-id="4b8e5-141">Dopo che lo schema viene generato dalla classe order sul server, è possibile modificare la classe.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-141">After the schema is generated from the order class on the server, you can modify the class.</span></span> <span data-ttu-id="4b8e5-142">A meno che le modifiche dello schema, è necessario ridistribuire lo schema.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-142">Unless the schema changes, you do not need to redistribute the schema.</span></span> <span data-ttu-id="4b8e5-143">Dopo avere distribuito lo schema e generare una classe order dal lato client, tale classe di client può essere modificato indipendentemente dalla classe order del server, inoltre, purché lo schema stesso non viene modificato.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-143">After you have distributed the schema and generated a client-side order class, that client class can also be modified independently of the server's order class, as long as the schema itself is not modified.</span></span> <span data-ttu-id="4b8e5-144">Le due classi hanno diventano regime di controllo.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-144">The two classes have become loosely coupled.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
    <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
    <altmember cref="T:System.Messaging.IMessageFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b8e5-145">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-145">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b8e5-146">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, without target types set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-146">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, without target types set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b8e5-147">Questo overload del costruttore viene utilizzato più frequentemente durante la scrittura in coda, come tipi di destinazione non sono necessari durante la scrittura.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-147">This overload of the constructor is used most frequently when writing to the queue, as target types are not required when writing.</span></span>  
  
 <span data-ttu-id="4b8e5-148">Per leggere un messaggio da una coda usando un'istanza di <xref:System.Messaging.XmlMessageFormatter> creata utilizzando questo costruttore, è necessario impostare la <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> o <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> proprietà affinché il formattatore sappia quali tipi nel tentativo di deserializzare.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-148">To read a message from a queue using an instance of <xref:System.Messaging.XmlMessageFormatter> created using this constructor, you must set the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties so the formatter knows what types to attempt to deserialize.</span></span>  
  
 <span data-ttu-id="4b8e5-149">Quando si crea una nuova <xref:System.Messaging.MessageQueue>, valore predefinito <xref:System.Messaging.XmlMessageFormatter> istanza viene creata, senza set di tipi di destinazione.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-149">When you create a new <xref:System.Messaging.MessageQueue>, a default <xref:System.Messaging.XmlMessageFormatter> instance is created, without the target types set.</span></span> <span data-ttu-id="4b8e5-150">Come con un formattatore creato utilizzando il costruttore, è necessario impostare i tipi di destinazione per l'istanza del formattatore se si desidera leggere dalla coda.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-150">As with a formatter created using this constructor, you must set target types for that formatter instance if you want to read from the queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter (string[] targetTypeNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] targetTypeNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetTypeNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter(cli::array &lt;System::String ^&gt; ^ targetTypeNames);" />
      <MemberSignature Language="F#" Value="new System.Messaging.XmlMessageFormatter : string[] -&gt; System.Messaging.XmlMessageFormatter" Usage="new System.Messaging.XmlMessageFormatter targetTypeNames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetTypeNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targetTypeNames">
          <span data-ttu-id="4b8e5-151">An array of type <see cref="T:System.String" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-151">An array of type <see cref="T:System.String" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          </span>
          <span data-ttu-id="4b8e5-152">These values must be fully qualified, for example, "MyNamespace.MyOrders, MyOrdersAssemblyName".</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-152">These values must be fully qualified, for example, "MyNamespace.MyOrders, MyOrdersAssemblyName".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b8e5-153">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of (fully qualified) string values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-153">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of (fully qualified) string values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b8e5-154">I costruttori con parametri di tipo di destinazione vengono spesso usati durante la lettura dalla coda.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-154">The constructors with target type parameters are most frequently used when reading from the queue.</span></span> <span data-ttu-id="4b8e5-155">Durante la scrittura, non è necessario specificare i tipi di destinazione.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-155">When writing, it is not necessary to specify target types.</span></span>  
  
 <span data-ttu-id="4b8e5-156">Questo overload del metodo di <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> costruttore imposta la <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> proprietà per i valori della matrice passato tramite la `targetTypeNames` parametro.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-156">This overload of the <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor sets the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> property to the array values passed in through the `targetTypeNames` parameter.</span></span> <span data-ttu-id="4b8e5-157">Impostazione di questa proprietà consente a un <xref:System.Messaging.MessageQueue> usando questo <xref:System.Messaging.XmlMessageFormatter> istanza per leggere i messaggi che contiene gli oggetti di determinati tipi.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-157">Setting this property enables a <xref:System.Messaging.MessageQueue> using this <xref:System.Messaging.XmlMessageFormatter> instance to read messages containing objects of given types.</span></span>  
  
 <span data-ttu-id="4b8e5-158">Sia la <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> indicano il formattatore quali gli schemi per tentare di corrispondenza durante la deserializzazione di un messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-158">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="4b8e5-159">In questo modo il formattatore interpretare il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-159">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="4b8e5-160">L'istanza serializzato nel corpo del messaggio deve essere conformi con uno degli schemi rappresentati nella matrice del tipo.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-160">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="4b8e5-161">Quando si legge il messaggio usando la <xref:System.Messaging.MessageQueue.Receive%2A> metodo, il metodo crea un oggetto del tipo che corrisponde allo schema indicato e in cui viene letto il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-161">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="4b8e5-162">Solo una delle due proprietà deve essere impostato durante la lettura dalla coda, ma è possibile impostare entrambe.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-162">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="4b8e5-163">Il set di tipi è il set combinato delle due proprietà.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-163">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="4b8e5-164">La scelta di quale uno da usare è specifico dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-164">The decision of which one to use is specific to your application.</span></span> <span data-ttu-id="4b8e5-165">Se il corpo del messaggio contiene un tipo il cui schema non corrisponde a nessuno dei tipi nella matrice per delle proprietà, verrà generata un'eccezione in fase di lettura.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-165">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b8e5-166">The <paramref name="targetTypeNames" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-166">The <paramref name="targetTypeNames" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter (Type[] targetTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type[] targetTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetTypes As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter(cli::array &lt;Type ^&gt; ^ targetTypes);" />
      <MemberSignature Language="F#" Value="new System.Messaging.XmlMessageFormatter : Type[] -&gt; System.Messaging.XmlMessageFormatter" Usage="new System.Messaging.XmlMessageFormatter targetTypes" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="targetTypes">
          <span data-ttu-id="4b8e5-167">An array of type <see cref="T:System.Type" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-167">An array of type <see cref="T:System.Type" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b8e5-168">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of object types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-168">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of object types.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b8e5-169">I costruttori con parametri di tipo di destinazione vengono spesso usati durante la lettura dalla coda.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-169">The constructors with target type parameters are most frequently used when reading from the queue.</span></span> <span data-ttu-id="4b8e5-170">Durante la scrittura, non è necessario specificare i tipi di destinazione.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-170">When writing, it is not necessary to specify target types.</span></span>  
  
 <span data-ttu-id="4b8e5-171">Questo overload del metodo di <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> costruttore imposta la <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> proprietà per i valori della matrice passato tramite la `targetTypes` parametro.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-171">This overload of the <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor sets the <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property to the array values passed in through the `targetTypes` parameter.</span></span> <span data-ttu-id="4b8e5-172">Impostazione di questa proprietà consente a un <xref:System.Messaging.MessageQueue> usando questo <xref:System.Messaging.XmlMessageFormatter> istanza per leggere i messaggi che contiene gli oggetti dei tipi specificati.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-172">Setting this property enables a <xref:System.Messaging.MessageQueue> using this <xref:System.Messaging.XmlMessageFormatter> instance to read messages containing objects of the given types.</span></span>  
  
 <span data-ttu-id="4b8e5-173">Sia la <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> indicano il formattatore quali gli schemi per tentare di corrispondenza durante la deserializzazione di un messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-173">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="4b8e5-174">In questo modo il formattatore interpretare il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-174">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="4b8e5-175">L'istanza serializzato nel corpo del messaggio deve essere conformi con uno degli schemi rappresentati nella matrice del tipo.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-175">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="4b8e5-176">Quando si legge il messaggio usando la <xref:System.Messaging.MessageQueue.Receive%2A> metodo, il metodo crea un oggetto del tipo che corrisponde allo schema indicato e in cui viene letto il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-176">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="4b8e5-177">Solo una delle due proprietà deve essere impostato durante la lettura dalla coda, ma è possibile impostare entrambe.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-177">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="4b8e5-178">Il set di tipi è il set combinato delle due proprietà.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-178">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="4b8e5-179">La scelta di quale uno da usare è specifico dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-179">The decision of which one to use is specific to your application.</span></span> <span data-ttu-id="4b8e5-180">Se il corpo del messaggio contiene un tipo il cui schema non corrisponde a nessuno dei tipi nella matrice per delle proprietà, verrà generata un'eccezione in fase di lettura.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-180">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</span></span>  
  
 <span data-ttu-id="4b8e5-181">Quando si specificano <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> anziché <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, tipo esistenza viene verificata in fase di compilazione anziché in fase di lettura, riducendo la probabilità di errore.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-181">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span> <span data-ttu-id="4b8e5-182"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> richiede che ogni voce sia completo, che specifica il nome dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-182"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="4b8e5-183">Inoltre, quando si usano più versioni simultanee, il numero di versione deve essere inoltre aggiunto al nome del tipo di destinazione anche.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-183">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="4b8e5-184">Quando si usa <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, è possibile aggiungere ogni oggetto (ad esempio, `MyClass`) all'elenco nel modo descritto dal codice c# seguente.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-184">When using <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, you can add each object (for example, `MyClass`) to the list in a way demonstrated by the following C# code.</span></span>  
  
```  
TargetTypes = new Type[]{typeof(MyClass)}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b8e5-185">The <paramref name="targetTypes" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-185">The <paramref name="targetTypes" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member CanRead : System.Messaging.Message -&gt; bool&#xA;override this.CanRead : System.Messaging.Message -&gt; bool" Usage="xmlMessageFormatter.CanRead message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="4b8e5-186">The <see cref="T:System.Messaging.Message" /> to inspect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-186">The <see cref="T:System.Messaging.Message" /> to inspect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b8e5-187">Determines whether the formatter can deserialize the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-187">Determines whether the formatter can deserialize the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b8e5-188">
            <see langword="true" /> if the XML formatter can deserialize the message; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-188">
              <see langword="true" /> if the XML formatter can deserialize the message; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b8e5-189">Quando si <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> viene chiamato, il formattatore tenta di determinare se è possibile deserializzare il contenuto del messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-189">When <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> is called, the formatter attempts to determine if the contents of the message are something it can deserialize.</span></span> <span data-ttu-id="4b8e5-190">Il formattatore può deserializzare solo i messaggi se il tipo nel corpo del messaggio ha lo stesso schema di uno dei tipi nella matrice rappresentata dal <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-190">The formatter can only deserialize the message if the type in the message body has the same schema as one of the types in the array represented by the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties.</span></span> <span data-ttu-id="4b8e5-191"><xref:System.Messaging.XmlMessageFormatter.CanRead%2A> Restituisce `false` due circostanze seguenti:</span><span class="sxs-lookup"><span data-stu-id="4b8e5-191"><xref:System.Messaging.XmlMessageFormatter.CanRead%2A> returns `false` under the following two circumstances:</span></span>  
  
-   <span data-ttu-id="4b8e5-192">Il messaggio non è stato formattato utilizzando il <xref:System.Messaging.XmlMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-192">The message was not formatted using the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
-   <span data-ttu-id="4b8e5-193">Lo schema del corpo del messaggio non è tra quelli elencati in entrambi i <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> o <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-193">The schema of the message body is not among those listed in either the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property.</span></span>  
  
 <span data-ttu-id="4b8e5-194">Il <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> proprietà indicano al formattatore di quali tipi di oggetti deve essere in grado di deserializzare.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-194">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what types of objects it must be able to deserialize.</span></span> <span data-ttu-id="4b8e5-195">Se qualsiasi tipo non è presente nell'elenco, anche se viene trovato all'interno del messaggio <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-195">If any type is missing from the list, yet is found within the message, <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4b8e5-196">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-196">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b8e5-197">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-197">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
        <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="xmlMessageFormatter.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b8e5-198">Creates an instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class whose read/write properties (the sets of target types) are the same as the current <see cref="T:System.Messaging.XmlMessageFormatter" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-198">Creates an instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class whose read/write properties (the sets of target types) are the same as the current <see cref="T:System.Messaging.XmlMessageFormatter" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b8e5-199">An object whose properties are identical to those of this <see cref="T:System.Messaging.XmlMessageFormatter" /> instance, but whose metadata does not specify it to be a formatter class instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-199">An object whose properties are identical to those of this <see cref="T:System.Messaging.XmlMessageFormatter" /> instance, but whose metadata does not specify it to be a formatter class instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b8e5-200">Questo metodo crea una copia del formattatore e la inizializza tutte le relative proprietà per i valori di questa <xref:System.Messaging.XmlMessageFormatter> oggetto.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-200">This method creates a copy of the formatter and initializes all its properties to the values of this <xref:System.Messaging.XmlMessageFormatter> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Read : System.Messaging.Message -&gt; obj&#xA;override this.Read : System.Messaging.Message -&gt; obj" Usage="xmlMessageFormatter.Read message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="4b8e5-201">The <see cref="T:System.Messaging.Message" />, in XML format, to deserialize.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-201">The <see cref="T:System.Messaging.Message" />, in XML format, to deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b8e5-202">Reads the contents from the given message and creates an object that contains the deserialized message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-202">Reads the contents from the given message and creates an object that contains the deserialized message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b8e5-203">The deserialized message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-203">The deserialized message.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b8e5-204">Sia la <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> indicano il formattatore quali gli schemi per tentare di corrispondenza durante la deserializzazione di un messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-204">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="4b8e5-205">Una di queste proprietà deve essere impostata prima che il messaggio può essere deserializzato.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-205">One of these properties must be set before the message can be deserialized.</span></span>  
  
 <span data-ttu-id="4b8e5-206">L'istanza serializzato nel corpo del messaggio deve essere conformi con uno degli schemi rappresentati nella matrice del tipo.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-206">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="4b8e5-207">Quando si legge il messaggio usando la <xref:System.Messaging.MessageQueue.Receive%2A> metodo, il metodo crea un oggetto del tipo che corrisponde allo schema indicato e in cui viene letto il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-207">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="4b8e5-208">I tipi di destinazione non è necessario specificare per poter scrivere nella coda.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-208">The target types do not have to be specified in order to write to the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4b8e5-209">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-209">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.</span>
          </span>
          <span data-ttu-id="4b8e5-210">-or-  The instance serialized in the message body does not comply with any of the schemas represented by the types in the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> and <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-210">-or-  The instance serialized in the message body does not comply with any of the schemas represented by the types in the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> and <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> properties.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b8e5-211">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-211">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="TargetTypeNames">
      <MemberSignature Language="C#" Value="public string[] TargetTypeNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] TargetTypeNames" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetTypeNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ TargetTypeNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetTypeNames : string[] with get, set" Usage="System.Messaging.XmlMessageFormatter.TargetTypeNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("XmlMsgTargetTypeNames")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b8e5-212">Specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-212">Specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b8e5-213">Matrice di tipo <see cref="T:System.String" /> che specifica i tipi di oggetti da deserializzare dal corpo del messaggio durante la lettura del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-213">An array of type <see cref="T:System.String" /> that specifies the types of objects to deserialize from the message body when reading the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b8e5-214">Sia la <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> indicano il formattatore quali gli schemi per tentare di corrispondenza durante la deserializzazione di un messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-214">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="4b8e5-215">In questo modo il formattatore interpretare il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-215">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="4b8e5-216">L'istanza serializzato nel corpo del messaggio deve essere conformi con uno degli schemi rappresentati nella matrice del tipo.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-216">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="4b8e5-217">Quando si legge il messaggio usando la <xref:System.Messaging.MessageQueue.Receive%2A> metodo, il metodo crea un oggetto del tipo che corrisponde allo schema indicato e in cui viene letto il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-217">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="4b8e5-218">Solo una delle due proprietà deve essere impostato durante la lettura dalla coda, ma è possibile impostare entrambe.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-218">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="4b8e5-219">Il set di tipi è il set combinato delle due proprietà.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-219">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="4b8e5-220">La scelta della proprietà da utilizzare è specifica dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-220">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="4b8e5-221">Se il corpo del messaggio contiene un tipo il cui schema non corrisponde a nessuno dei tipi nella matrice per delle proprietà, verrà generata un'eccezione quando il messaggio viene letto.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-221">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="4b8e5-222"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> richiede che ogni voce sia completo, che specifica il nome dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-222"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="4b8e5-223">Inoltre, quando si usano più versioni simultanee, il numero di versione deve essere inoltre aggiunto al nome del tipo di destinazione anche.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-223">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="4b8e5-224">I tipi di destinazione sono solo necessarie durante la lettura dalla coda.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-224">The target types are only required when reading from the queue.</span></span> <span data-ttu-id="4b8e5-225">Il <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> proprietà non sono necessario essere impostati per scrivere nella coda.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-225">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties do not need to be set to write to the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b8e5-226">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> property is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-226">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="TargetTypes">
      <MemberSignature Language="C#" Value="public Type[] TargetTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] TargetTypes" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Type ^&gt; ^ TargetTypes { cli::array &lt;Type ^&gt; ^ get(); void set(cli::array &lt;Type ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetTypes : Type[] with get, set" Usage="System.Messaging.XmlMessageFormatter.TargetTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("XmlMsgTargetTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b8e5-227">Specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-227">Specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b8e5-228">Matrice di tipo <see cref="T:System.Type" /> che specifica i tipi di oggetti da deserializzare dal corpo del messaggio durante la lettura del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-228">An array of type <see cref="T:System.Type" /> that specifies the types of objects to deserialize from the message body when reading the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b8e5-229">Sia la <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> indicano il formattatore quali gli schemi per tentare di corrispondenza durante la deserializzazione di un messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-229">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="4b8e5-230">In questo modo il formattatore interpretare il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-230">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="4b8e5-231">L'istanza serializzato nel corpo del messaggio deve essere conformi con uno degli schemi rappresentati nella matrice del tipo.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-231">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="4b8e5-232">Quando si legge il messaggio usando la <xref:System.Messaging.MessageQueue.Receive%2A> metodo, il metodo crea un oggetto del tipo che corrisponde allo schema indicato e in cui viene letto il corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-232">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="4b8e5-233">Solo una delle due proprietà deve essere impostato durante la lettura dalla coda, ma è possibile impostare entrambe.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-233">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="4b8e5-234">Il set di tipi è il set combinato delle due proprietà.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-234">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="4b8e5-235">La scelta della proprietà da utilizzare è specifica dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-235">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="4b8e5-236">Se il corpo del messaggio contiene un tipo il cui schema non corrisponde a nessuno dei tipi nella matrice per delle proprietà, verrà generata un'eccezione quando il messaggio viene letto.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-236">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="4b8e5-237">I tipi di destinazione sono solo necessarie durante la lettura dalla coda.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-237">The target types are only required when reading from the queue.</span></span> <span data-ttu-id="4b8e5-238">Il <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> proprietà non sono necessario essere impostati per scrivere nella coda.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-238">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties do not need to be set to write to the queue.</span></span>  
  
 <span data-ttu-id="4b8e5-239">Quando si specificano <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> anziché <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, tipo esistenza viene verificata in fase di compilazione anziché in fase di lettura, riducendo la probabilità di errore.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-239">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span>  
  
 <span data-ttu-id="4b8e5-240">Quando si usa <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, è possibile aggiungere ogni oggetto (ad esempio `MyClass`) all'elenco nel modo illustrato nel codice c# `TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-240">When using <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, you can add each object (for example, `MyClass`) to the list in a way demonstrated by the C# code `TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b8e5-241">Esempio di codice seguente invia e riceve un messaggio contenente un ordine a e da una coda.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-241">The following code example sends and receives a message that contains an order to and from a queue.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b8e5-242">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-242">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Messaging.Message * obj -&gt; unit&#xA;override this.Write : System.Messaging.Message * obj -&gt; unit" Usage="xmlMessageFormatter.Write (message, obj)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="4b8e5-243">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-243">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span>
          </span>
        </param>
        <param name="obj">
          <span data-ttu-id="4b8e5-244">The <see cref="T:System.Object" /> to be serialized into the message body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-244">The <see cref="T:System.Object" /> to be serialized into the message body.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b8e5-245">Serializes an object into the body of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-245">Serializes an object into the body of the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b8e5-246">Non è necessario specificare i tipi di destinazione per scrivere nella coda come devono essere durante la lettura.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-246">The target types need not be specified to write to the queue as they must be when reading.</span></span> <span data-ttu-id="4b8e5-247">Il <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> o <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> proprietà viene utilizzata dal formattatore solo quando si deserializza un messaggio.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-247">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property is used by the formatter only when deserializing a message.</span></span>  
  
 <span data-ttu-id="4b8e5-248">Il <xref:System.Messaging.XmlMessageFormatter> Usa il <xref:System.Xml.Serialization.XmlSerializer> (classe), che definisce ciò che può essere serializzato.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-248">The <xref:System.Messaging.XmlMessageFormatter> makes use of the <xref:System.Xml.Serialization.XmlSerializer> class, which defines what can be serialized.</span></span> <span data-ttu-id="4b8e5-249">Solo le proprietà pubbliche e campi pubblici possono essere serializzate.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-249">Only public fields and public properties can be serialized.</span></span> <span data-ttu-id="4b8e5-250">Strutture, le strutture con matrici e matrici di strutture sono tutti serializzabile, purché non usano lo stile codificato con il protocollo SOAP.</span><span class="sxs-lookup"><span data-stu-id="4b8e5-250">Structures, structures with arrays, and arrays of structures are all serializable, as long as they do not use the encoded style with the SOAP protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b8e5-251">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-251">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4b8e5-252">-or-  The <paramref name="obj" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b8e5-252">-or-  The <paramref name="obj" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>