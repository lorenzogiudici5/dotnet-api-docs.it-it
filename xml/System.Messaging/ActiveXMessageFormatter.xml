<Type Name="ActiveXMessageFormatter" FullName="System.Messaging.ActiveXMessageFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bcb0d5ed5e9f2af7770e251b62d11f1b941dd6ec" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ActiveXMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveXMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.ActiveXMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class ActiveXMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveXMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="18000-101">Serializza o deserializza i tipi di dati primitivi e altri oggetti nel o dal corpo di un messaggio di Accodamento messaggi, utilizzando un formato compatibile con il componente MSMQ ActiveX.</span>
      <span class="sxs-lookup">
        <span data-stu-id="18000-101">Serializes or deserializes primitive data types and other objects to or from the body of a Message Queuing message, using a format that is compatible with the MSMQ ActiveX Component.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18000-102">Il <xref:System.Messaging.ActiveXMessageFormatter> è compatibile con i messaggi inviati utilizzando i componenti COM di Accodamento messaggi, consentendo l'interoperabilità con applicazioni che utilizzano il controllo COM di MSMQ.</span><span class="sxs-lookup"><span data-stu-id="18000-102">The <xref:System.Messaging.ActiveXMessageFormatter> is compatible with messages sent using Message Queuing COM components, allowing interoperability with applications that use the MSMQ COM control.</span></span>  
  
 <span data-ttu-id="18000-103">Il <xref:System.Messaging.ActiveXMessageFormatter> in grado di serializzare la maggior parte delle primitive, nonché gli oggetti che implementano il `IPersistStream` interfaccia OLE.</span><span class="sxs-lookup"><span data-stu-id="18000-103">The <xref:System.Messaging.ActiveXMessageFormatter> can serialize most primitives, as well as objects that implement the `IPersistStream` OLE interface.</span></span> <span data-ttu-id="18000-104">Può deserializzare lo stesso set di primitive, ma richiede un'ulteriore impegno durante la deserializzazione di un oggetto COM (ad esempio, un oggetto creato con Visual Basic 6.0) che implementa `IPersistStream`.</span><span class="sxs-lookup"><span data-stu-id="18000-104">It can deserialize the same set of primitives, but requires further effort when deserializing a COM object (for example, an object created using Visual Basic 6.0) that implements `IPersistStream`.</span></span> <span data-ttu-id="18000-105">Oggetto da deserializzare deve trovarsi nella memoria importando prima l'oggetto in un'applicazione .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="18000-105">The object to deserialize must be in memory by first importing the object into a .NET Framework application.</span></span>  
  
 <span data-ttu-id="18000-106">Quando un'applicazione invia un messaggio alla coda utilizzando un'istanza di <xref:System.Messaging.MessageQueue> (classe), il formattatore serializza l'oggetto in un flusso e lo inserisce nel corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="18000-106">When an application sends a message to the queue using an instance of the <xref:System.Messaging.MessageQueue> class, the formatter serializes the object into a stream and inserts it into the message body.</span></span> <span data-ttu-id="18000-107">Durante la lettura da una coda utilizzando un <xref:System.Messaging.MessageQueue>, il formattatore deserializza i dati del messaggio nel <xref:System.Messaging.Message.Body%2A> proprietà di un <xref:System.Messaging.Message>.</span><span class="sxs-lookup"><span data-stu-id="18000-107">When reading from a queue using a <xref:System.Messaging.MessageQueue>, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>.</span></span>  
  
 <span data-ttu-id="18000-108">La serializzazione ActiveX è molto compact, che rende l'utilizzo di <xref:System.Messaging.ActiveXMessageFormatter> e un metodo di serializzazione molto rapido del controllo COM di MSMQ.</span><span class="sxs-lookup"><span data-stu-id="18000-108">ActiveX serialization is very compact, which makes using the <xref:System.Messaging.ActiveXMessageFormatter> and MSMQ COM control a very fast method of serialization.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveXMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveXMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18000-109">Inizializza una nuova istanza della classe <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18000-109">Initializes a new instance of the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="18000-110">
            <see cref="T:System.Messaging.Message" /> da esaminare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18000-110">The <see cref="T:System.Messaging.Message" /> to inspect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18000-111">Determina se il formattatore può deserializzare il contenuto del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18000-111">Determines whether the formatter can deserialize the contents of the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18000-112">
            <see langword="true" /> se <see cref="T:System.Messaging.ActiveXMessageFormatter" /> può deserializzare il messaggio; altrimenti, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18000-112">
              <see langword="true" /> if the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> can deserialize the message; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18000-113"><xref:System.Messaging.ActiveXMessageFormatter.CanRead%2A> Restituisce `false` se il corpo del messaggio non è una primitiva che può deserializzare il controllo ActiveX di Accodamento messaggi o se non implementa il `IPersistStream` interfaccia.</span><span class="sxs-lookup"><span data-stu-id="18000-113"><xref:System.Messaging.ActiveXMessageFormatter.CanRead%2A> returns `false` if the message body is not a primitive that the Message Queuing ActiveX control can deserialize or if it does not implement the `IPersistStream` interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="18000-114">Il valore del parametro <paramref name="message" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18000-114">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18000-115">Crea un'istanza della classe <see cref="T:System.Messaging.ActiveXMessageFormatter" /> che è identica al <see cref="T:System.Messaging.ActiveXMessageFormatter" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18000-115">Creates an instance of the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> class that is identical to the current <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18000-116">Oggetto le cui proprietà sono identiche a quelle di questo <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18000-116">An object whose properties are identical to those of this <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18000-117">Questo metodo viene utilizzato il <xref:System.Messaging.MessageQueue> classe per ricevere più messaggi contemporaneamente (ad esempio, se l'applicazione riceve in modo asincrono).</span><span class="sxs-lookup"><span data-stu-id="18000-117">This method is used by the <xref:System.Messaging.MessageQueue> class in order to receive multiple messages at the same time (for example, if the application is receiving asynchronously).</span></span> <span data-ttu-id="18000-118">Non in genere necessario chiamare questo metodo nel codice dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="18000-118">You typically do not need to call this method in your application code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="InitStreamedObject">
      <MemberSignature Language="C#" Value="public static void InitStreamedObject (object streamedObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitStreamedObject(object streamedObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InitStreamedObject (streamedObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitStreamedObject(System::Object ^ streamedObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamedObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="streamedObject">
          <span data-ttu-id="18000-119">Oggetto OLE che implementa <see langword="IPersistStreamInit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18000-119">An OLE object that implements <see langword="IPersistStreamInit" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18000-120">Fornisce un'utilità che aiuta a serializzare gli oggetti COM che implementano <see langword="IPersistStream" /> e richiedono che venga chiamata <see langword="IPersistStreamInit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18000-120">Provides a utility to help serialize COM objects that implement <see langword="IPersistStream" /> and require <see langword="IPersistStreamInit" /> to be called.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="18000-121">
            <see cref="T:System.Messaging.Message" />, in formato di controllo MSMQ ActiveX, da deserializzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18000-121">The <see cref="T:System.Messaging.Message" />, in MSMQ ActiveX control format, to deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18000-122">Legge il contenuto del messaggio indicato e crea un oggetto contenente il messaggio deserializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18000-122">Reads the contents from the given message and creates an object that contains the deserialized message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18000-123">Messaggio deserializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18000-123">The deserialized message.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18000-124">Se il corpo del messaggio rappresenta un tipo primitivo, il messaggio <xref:System.Messaging.Message.BodyType%2A> proprietà deve essere uno dei tipi gestiti nella tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="18000-124">If the body of the message represents a primitive type, the message's <xref:System.Messaging.Message.BodyType%2A> property must be one of the managed types in the following table.</span></span>  
  
|<span data-ttu-id="18000-125">Valore BodyType</span><span class="sxs-lookup"><span data-stu-id="18000-125">BodyType value</span></span>|<span data-ttu-id="18000-126">Tipo gestito</span><span class="sxs-lookup"><span data-stu-id="18000-126">Managed type</span></span>|  
|--------------------|------------------|  
|<span data-ttu-id="18000-127">VT_LPSTR</span><span class="sxs-lookup"><span data-stu-id="18000-127">VT_LPSTR</span></span>|<span data-ttu-id="18000-128"><xref:System.Char> matrice (deserializzata tramite codifica ASCII)</span><span class="sxs-lookup"><span data-stu-id="18000-128"><xref:System.Char> array (deserialized using ASCII encoding)</span></span>|  
|<span data-ttu-id="18000-129">VT_BSTR, VT_LPWSTR</span><span class="sxs-lookup"><span data-stu-id="18000-129">VT_BSTR, VT_LPWSTR</span></span>|<span data-ttu-id="18000-130"><xref:System.String> (deserializzato utilizzando la codifica Unicode)</span><span class="sxs-lookup"><span data-stu-id="18000-130"><xref:System.String> (deserialized using Unicode encoding)</span></span>|  
|<span data-ttu-id="18000-131">VT_VECTOR &#124; VT_UI1</span><span class="sxs-lookup"><span data-stu-id="18000-131">VT_VECTOR &#124; VT_UI1</span></span>|<span data-ttu-id="18000-132">Matrice <xref:System.Byte></span><span class="sxs-lookup"><span data-stu-id="18000-132"><xref:System.Byte> array</span></span>|  
|<span data-ttu-id="18000-133">VT_BOOL</span><span class="sxs-lookup"><span data-stu-id="18000-133">VT_BOOL</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="18000-134">VT_CLSID</span><span class="sxs-lookup"><span data-stu-id="18000-134">VT_CLSID</span></span>|<xref:System.Guid>|  
|<span data-ttu-id="18000-135">VT_CY</span><span class="sxs-lookup"><span data-stu-id="18000-135">VT_CY</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="18000-136">VT_DATE</span><span class="sxs-lookup"><span data-stu-id="18000-136">VT_DATE</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="18000-137">VT_I1, VT_UI1</span><span class="sxs-lookup"><span data-stu-id="18000-137">VT_I1, VT_UI1</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="18000-138">VT_I2</span><span class="sxs-lookup"><span data-stu-id="18000-138">VT_I2</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="18000-139">VT_UI2</span><span class="sxs-lookup"><span data-stu-id="18000-139">VT_UI2</span></span>|<xref:System.UInt16>|  
|<span data-ttu-id="18000-140">VT_I4</span><span class="sxs-lookup"><span data-stu-id="18000-140">VT_I4</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="18000-141">VT_UI4</span><span class="sxs-lookup"><span data-stu-id="18000-141">VT_UI4</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="18000-142">VT_I8</span><span class="sxs-lookup"><span data-stu-id="18000-142">VT_I8</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="18000-143">VT_UI8</span><span class="sxs-lookup"><span data-stu-id="18000-143">VT_UI8</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="18000-144">VT_R4</span><span class="sxs-lookup"><span data-stu-id="18000-144">VT_R4</span></span>|<xref:System.Single>|  
|<span data-ttu-id="18000-145">VT_R8</span><span class="sxs-lookup"><span data-stu-id="18000-145">VT_R8</span></span>|<xref:System.Double>|  
|<span data-ttu-id="18000-146">VT_NULL</span><span class="sxs-lookup"><span data-stu-id="18000-146">VT_NULL</span></span>|`null`|  
|<span data-ttu-id="18000-147">VT_STREAMED_OBJECT</span><span class="sxs-lookup"><span data-stu-id="18000-147">VT_STREAMED_OBJECT</span></span>|<xref:System.Object>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="18000-148">La proprietà <see cref="P:System.Messaging.Message.BodyType" /> di <paramref name="message" /> passata come parametro non può essere mappata su un tipo primitivo, né rappresenta un oggetto inserito nel flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18000-148">The <see cref="P:System.Messaging.Message.BodyType" /> property of the <paramref name="message" /> passed as a parameter cannot be mapped to a primitive type, nor does it represent a streamed object.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="18000-149">Il corpo rappresenta un oggetto memorizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18000-149">The body represents a stored object.</span>
          </span>
          <span data-ttu-id="18000-150">
            <see cref="T:System.Messaging.ActiveXMessageFormatter" /> non supporta la deserializzazione degli oggetti memorizzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18000-150">The <see cref="T:System.Messaging.ActiveXMessageFormatter" /> does not support deserialization of stored objects.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="18000-151">Il valore del parametro <paramref name="message" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18000-151">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="18000-152">
            <see cref="T:System.Messaging.Message" /> la cui proprietà <see cref="P:System.Messaging.Message.Body" /> conterrà l'oggetto serializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18000-152">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span>
          </span>
        </param>
        <param name="obj">
          <span data-ttu-id="18000-153">Oggetto da serializzare nel corpo del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18000-153">The object to be serialized into the message body.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18000-154">Serializza un oggetto nel corpo del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18000-154">Serializes an object into the body of the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18000-155">Nella tabella seguente viene illustrata la relazione tra i tipi gestiti e <xref:System.Messaging.Message.BodyType%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="18000-155">The following table shows the relationship between managed types and the <xref:System.Messaging.Message.BodyType%2A> property.</span></span> <span data-ttu-id="18000-156">L'oggetto da serializzare deve essere uno di questi tipi gestiti o deve implementare OLE `IPersistStream` interfaccia.</span><span class="sxs-lookup"><span data-stu-id="18000-156">The object that you serialize must be one of these managed types or must implement the OLE `IPersistStream` interface.</span></span>  
  
|<span data-ttu-id="18000-157">Valore BodyType</span><span class="sxs-lookup"><span data-stu-id="18000-157">BodyType value</span></span>|<span data-ttu-id="18000-158">Tipo gestito</span><span class="sxs-lookup"><span data-stu-id="18000-158">Managed type</span></span>|  
|--------------------|------------------|  
|<span data-ttu-id="18000-159">VT_LPSTR</span><span class="sxs-lookup"><span data-stu-id="18000-159">VT_LPSTR</span></span>|<xref:System.Char>|  
|<span data-ttu-id="18000-160">VT_BSTR, VT_LPWSTR</span><span class="sxs-lookup"><span data-stu-id="18000-160">VT_BSTR, VT_LPWSTR</span></span>|<xref:System.String>|  
|<span data-ttu-id="18000-161">VT_VECTOR &#124; VT_UI1</span><span class="sxs-lookup"><span data-stu-id="18000-161">VT_VECTOR &#124; VT_UI1</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="18000-162">VT_BOOL</span><span class="sxs-lookup"><span data-stu-id="18000-162">VT_BOOL</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="18000-163">VT_CLSID</span><span class="sxs-lookup"><span data-stu-id="18000-163">VT_CLSID</span></span>|<xref:System.Guid>|  
|<span data-ttu-id="18000-164">VT_CY</span><span class="sxs-lookup"><span data-stu-id="18000-164">VT_CY</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="18000-165">VT_DATE</span><span class="sxs-lookup"><span data-stu-id="18000-165">VT_DATE</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="18000-166">VT_I1, VT_UI1</span><span class="sxs-lookup"><span data-stu-id="18000-166">VT_I1, VT_UI1</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="18000-167">VT_I2</span><span class="sxs-lookup"><span data-stu-id="18000-167">VT_I2</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="18000-168">VT_UI2</span><span class="sxs-lookup"><span data-stu-id="18000-168">VT_UI2</span></span>|<xref:System.UInt16>|  
|<span data-ttu-id="18000-169">VT_I4</span><span class="sxs-lookup"><span data-stu-id="18000-169">VT_I4</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="18000-170">VT_UI4</span><span class="sxs-lookup"><span data-stu-id="18000-170">VT_UI4</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="18000-171">VT_I8</span><span class="sxs-lookup"><span data-stu-id="18000-171">VT_I8</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="18000-172">VT_UI8</span><span class="sxs-lookup"><span data-stu-id="18000-172">VT_UI8</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="18000-173">VT_R4</span><span class="sxs-lookup"><span data-stu-id="18000-173">VT_R4</span></span>|<xref:System.Single>|  
|<span data-ttu-id="18000-174">VT_R8</span><span class="sxs-lookup"><span data-stu-id="18000-174">VT_R8</span></span>|<xref:System.Double>|  
|<span data-ttu-id="18000-175">VT_NULL</span><span class="sxs-lookup"><span data-stu-id="18000-175">VT_NULL</span></span>|`null`|  
|<span data-ttu-id="18000-176">VT_STREAMED_OBJECT</span><span class="sxs-lookup"><span data-stu-id="18000-176">VT_STREAMED_OBJECT</span></span>|<span data-ttu-id="18000-177">`IPersistStream` (OLE) <xref:System.Object></span><span class="sxs-lookup"><span data-stu-id="18000-177">`IPersistStream` (OLE) <xref:System.Object></span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="18000-178">L'oggetto da serializzare non è una primitiva né un oggetto inserito in un flusso che implementa l'interfaccia OLE <see langword="IPersistStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18000-178">The object to serialize is neither a primitive nor a streamed object that implements the OLE <see langword="IPersistStream" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="18000-179">Il valore del parametro <paramref name="message" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18000-179">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>