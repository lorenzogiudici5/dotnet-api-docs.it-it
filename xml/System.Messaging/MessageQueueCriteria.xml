<Type Name="MessageQueueCriteria" FullName="System.Messaging.MessageQueueCriteria">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8671370755dbebeed83b86ed7fd88a50c49e101f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36476891" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageQueueCriteria" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueueCriteria extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueCriteria" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueueCriteria" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueueCriteria" />
  <TypeSignature Language="F#" Value="type MessageQueueCriteria = class" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Filters message queues when performing a query using the <see cref="T:System.Messaging.MessageQueue" /> class's <see cref="M:System.Messaging.MessageQueue.GetPublicQueues" /> method.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Messaging.MessageQueue> classe fornisce numerosi metodi che consentono di filtrare la ricerca per le code pubbliche nella rete. I metodi specifici per il filtro dall'indirizzo di server, categoria o etichetta di coda sono il <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%2A>, <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%2A>, e <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%2A>.  
  
 Il <xref:System.Messaging.MessageQueueCriteria> classe, quando viene utilizzato con il <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> (metodo), consente di ridefinire il filtro. È possibile specificare i criteri di ricerca non specificamente per affrontare uno del `GetPublicQueuesBy`* metodi, o da più criteri. È possibile passare un <xref:System.Messaging.MessageQueueCriteria> dell'istanza nel <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> metodo per eseguire una ricerca, ad esempio, da tempi di attesa durante la creazione o modifica, la coda risiede sul computer, l'etichetta della coda o categoria o qualsiasi combinazione di queste proprietà.  
  
 Quando si Filtra per più proprietà, i criteri vengono composti applicando il `AND` operatore per il set di proprietà. Pertanto, quando si specifica un valore per il <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A> proprietà con il <xref:System.Messaging.MessageQueueCriteria.MachineName%2A> proprietà, viene chiesto di tutte le code che sono stati creati dopo il tempo specificato e che si trovano in un computer specifico.  
  
 Quando si imposta una proprietà, il metodo che consente di impostare la proprietà imposta anche un flag per indicare che devono essere inclusi nel filtro che si sta compilando. È possibile rimuovere le singole proprietà dal filtro di ricerca. Al contrario, rimuovere tutte le proprietà dal filtro chiamando <xref:System.Messaging.MessageQueueCriteria.ClearAll%2A>e quindi impostare le proprietà che si desidera includere nel filtro di ricerca. <xref:System.Messaging.MessageQueueCriteria.ClearAll%2A> Reimposta tutte le proprietà in uno stato predefinito "non impostata".  
  
 È necessario impostare una proprietà prima di tentare di leggere. in caso contrario, viene generata un'eccezione.  
  
   
  
## Examples  
 Nell'esempio seguente esegue l'iterazione attraverso le code di messaggi e visualizza il percorso di ogni coda che è stato creato nell'ultimo giorno e che esista nel computer "MyComputer".  
  
 [!code-cpp[MessageQueue.GetMessageQueueEnumerator_criteria#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_criteria/CPP/mqgetmessagequeueenumerator_criteria.cpp#1)]
 [!code-csharp[MessageQueue.GetMessageQueueEnumerator_criteria#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_criteria/CS/mqgetmessagequeueenumerator_criteria.cs#1)]
 [!code-vb[MessageQueue.GetMessageQueueEnumerator_criteria#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_criteria/VB/mqgetmessagequeueenumerator_criteria.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
    <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)" />
    <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)" />
    <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueCriteria ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueCriteria.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueCriteria();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueCriteria" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public Guid Category { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Category" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueCriteria.Category" />
      <MemberSignature Language="VB.NET" Value="Public Property Category As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Category { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.Category : Guid with get, set" Usage="System.Messaging.MessageQueueCriteria.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the category by which to filter queues in the network.</summary>
        <value>Categoria delle code.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La categoria di coda consente a un'applicazione suddividere in categorie proprie code. Ad esempio, è possibile inserire tutte le code di fatturazione in una categoria e tutte le code di ordini in un altro. Il <xref:System.Messaging.MessageQueue.Category%2A> proprietà è definito dall'applicazione e non ha alcun significato intrinseco in Accodamento messaggi.  
  
 Se si sta filtrando solo per categoria, quando la ricerca delle code in rete, è possibile utilizzare il metodo <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%2A>, che è progettato specificamente per questo scopo. Se si esegue la ricerca in base a più criteri che includono la categoria, impostare questa <xref:System.Messaging.MessageQueueCriteria.Category%2A> proprietà e passare il parametro in <xref:System.Messaging.MessageQueue.GetPublicQueues%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The application did not set the <see cref="P:System.Messaging.MessageQueueCriteria.Category" /> property before reading it.</exception>
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="P:System.Messaging.MessageQueue.Category" />
      </Docs>
    </Member>
    <Member MemberName="ClearAll">
      <MemberSignature Language="C#" Value="public void ClearAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueCriteria.ClearAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearAll();" />
      <MemberSignature Language="F#" Value="member this.ClearAll : unit -&gt; unit" Usage="messageQueueCriteria.ClearAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears all properties from being built into a filter and puts all property values into a "not set" state.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si chiama <xref:System.Messaging.MessageQueueCriteria.ClearAll%2A>, il metodo imposta i flag relativi a ognuno del <xref:System.Messaging.MessageQueueCriteria> proprietà, che indicano che nessuna proprietà devono essere incluse quando l'applicazione crea il filtro di ricerca. <xref:System.Messaging.MessageQueueCriteria.ClearAll%2A> Reimposta tutte le proprietà che attualmente dispongono dei valori in uno stato predefinito "non impostata". Le eventuali proprietà successivamente si modifica vengono combinate tramite l'operatore logico `AND` operatore per definire un nuovo filtro per il <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> metodo. Quando si modifica la proprietà, il metodo che consente di impostare la proprietà imposta anche un flag per indicare che devono essere inclusi nel filtro che si sta compilando.  
  
 È possibile rimuovere le singole proprietà dal filtro di ricerca. Al contrario, rimuovere tutte le proprietà dal filtro chiamando <xref:System.Messaging.MessageQueueCriteria.ClearAll%2A>e quindi impostare le proprietà che si desidera includere nel filtro di ricerca.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatedAfter">
      <MemberSignature Language="C#" Value="public DateTime CreatedAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CreatedAfter" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueCriteria.CreatedAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property CreatedAfter As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CreatedAfter { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.CreatedAfter : DateTime with get, set" Usage="System.Messaging.MessageQueueCriteria.CreatedAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the lower boundary of the queue creation date and time by which to filter queues on the network.</summary>
        <value>Oggetto <see cref="T:System.DateTime" /> che specifica il limite inferiore per ora e data di creazione di una coda.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Messaging.MessageQueueCriteria> proprietà vengono combinate mediante l'operatore logico `AND`, quindi si impostano entrambe <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A> e <xref:System.Messaging.MessageQueueCriteria.CreatedBefore%2A> delimita un intervallo di tempo per la creazione le code. Se si imposta solo <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A>, non vi è alcun limite superiore alla data.  
  
 Se si prova a impostare <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A> a un momento successivo <xref:System.DateTime> valore rispetto <xref:System.Messaging.MessageQueueCriteria.CreatedBefore%2A>, <xref:System.Messaging.MessageQueueCriteria.CreatedBefore%2A> viene reimpostato sullo stesso valore (nuovo) come <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The application did not set the <see cref="P:System.Messaging.MessageQueueCriteria.CreatedAfter" /> property before reading it.</exception>
        <altmember cref="P:System.Messaging.MessageQueueCriteria.CreatedBefore" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="P:System.Messaging.MessageQueue.CreateTime" />
      </Docs>
    </Member>
    <Member MemberName="CreatedBefore">
      <MemberSignature Language="C#" Value="public DateTime CreatedBefore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CreatedBefore" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueCriteria.CreatedBefore" />
      <MemberSignature Language="VB.NET" Value="Public Property CreatedBefore As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CreatedBefore { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.CreatedBefore : DateTime with get, set" Usage="System.Messaging.MessageQueueCriteria.CreatedBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the upper boundary of the queue creation date and time by which to filter queues on the network.</summary>
        <value>Oggetto <see cref="T:System.DateTime" /> che specifica il limite massimo per data di creazione e l'ora della coda.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Messaging.MessageQueueCriteria> proprietà vengono combinate mediante l'operatore logico `AND`, quindi si impostano entrambe <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A> e <xref:System.Messaging.MessageQueueCriteria.CreatedBefore%2A> delimita un intervallo di tempo per la creazione le code. Se si imposta solo <xref:System.Messaging.MessageQueueCriteria.CreatedBefore%2A>, non vi è alcun limite inferiore alla data.  
  
 Se si prova a impostare <xref:System.Messaging.MessageQueueCriteria.CreatedBefore%2A> alla versione precedente <xref:System.DateTime> valore rispetto <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A>, <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A> viene reimpostato sullo stesso valore (nuovo) come <xref:System.Messaging.MessageQueueCriteria.CreatedBefore%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The application did not set the <see cref="P:System.Messaging.MessageQueueCriteria.CreatedBefore" /> property before reading it.</exception>
        <altmember cref="P:System.Messaging.MessageQueueCriteria.CreatedAfter" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="P:System.Messaging.MessageQueue.CreateTime" />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueCriteria.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.Messaging.MessageQueueCriteria.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the label by which to filter queues in the network.</summary>
        <value>Etichetta le code.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Etichetta di una coda di messaggi è una descrizione definita dall'applicazione della coda. Non ha un significato intrinseco per Accodamento messaggi.  
  
 Se si sta filtrando solo da un'etichetta quando la ricerca delle code in rete, è possibile utilizzare il metodo <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%2A>, che è progettato specificamente per questo scopo. Se si esegue la ricerca in base a più criteri che includono l'etichetta, impostare questa <xref:System.Messaging.MessageQueueCriteria.Label%2A> proprietà e passare il parametro in <xref:System.Messaging.MessageQueue.GetPublicQueues%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The application did not set the <see cref="P:System.Messaging.MessageQueueCriteria.Label" /> property before reading it.</exception>
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueCriteria.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string with get, set" Usage="System.Messaging.MessageQueueCriteria.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the computer name by which to filter queues in the network.</summary>
        <value>Il nome del server del computer in cui si trovano le code.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una coda di messaggi <xref:System.Messaging.MessageQueue.MachineName%2A> corrisponda al nome del server in cui risiede la coda, senza barre rovesciate (\\\\).  
  
 Se si sta filtrando solo dal nome del computer durante la ricerca delle code in rete, è possibile utilizzare il metodo <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%2A>, che è progettato specificamente per questo scopo. Se si esegue la ricerca in base a più criteri che includono il nome del computer, impostare questa <xref:System.Messaging.MessageQueueCriteria.MachineName%2A> proprietà e passare il parametro in <xref:System.Messaging.MessageQueue.GetPublicQueues%2A>.  
  
 È inoltre possibile cercare le code private della rete specificando un nome di computer nel <xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%2A> metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The application did not set the <see cref="P:System.Messaging.MessageQueueCriteria.MachineName" /> property before reading it.  -or-  The computer name syntax is invalid.</exception>
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
      </Docs>
    </Member>
    <Member MemberName="ModifiedAfter">
      <MemberSignature Language="C#" Value="public DateTime ModifiedAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ModifiedAfter" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueCriteria.ModifiedAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property ModifiedAfter As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ModifiedAfter { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.ModifiedAfter : DateTime with get, set" Usage="System.Messaging.MessageQueueCriteria.ModifiedAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the lower boundary of the queue modification date and time by which to filter queues on the network.</summary>
        <value>Oggetto <see cref="T:System.DateTime" /> che specifica il limite inferiore per la data di modifica e l'ora ultima una coda.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Flag di modifica della coda è impostato quando si modificano le proprietà di una coda, ma non quando un messaggio viene letto o scritto nella coda.  
  
 Il <xref:System.Messaging.MessageQueueCriteria> proprietà vengono combinate mediante l'operatore logico `AND`, quindi si impostano entrambe <xref:System.Messaging.MessageQueueCriteria.ModifiedAfter%2A> e <xref:System.Messaging.MessageQueueCriteria.ModifiedBefore%2A> delimita un intervallo di tempo per l'ultima modifica le code. Se si imposta solo <xref:System.Messaging.MessageQueueCriteria.ModifiedAfter%2A>, non vi è alcun limite superiore alla data.  
  
 Se si prova a impostare <xref:System.Messaging.MessageQueueCriteria.ModifiedAfter%2A> a un momento successivo <xref:System.DateTime> valore rispetto <xref:System.Messaging.MessageQueueCriteria.ModifiedBefore%2A>, <xref:System.Messaging.MessageQueueCriteria.ModifiedBefore%2A> viene reimpostato sullo stesso valore (nuovo) come <xref:System.Messaging.MessageQueueCriteria.ModifiedAfter%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The application did not set the <see cref="P:System.Messaging.MessageQueueCriteria.ModifiedAfter" /> property before reading it.</exception>
        <altmember cref="P:System.Messaging.MessageQueueCriteria.ModifiedBefore" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="P:System.Messaging.MessageQueue.LastModifyTime" />
      </Docs>
    </Member>
    <Member MemberName="ModifiedBefore">
      <MemberSignature Language="C#" Value="public DateTime ModifiedBefore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ModifiedBefore" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueCriteria.ModifiedBefore" />
      <MemberSignature Language="VB.NET" Value="Public Property ModifiedBefore As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ModifiedBefore { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.ModifiedBefore : DateTime with get, set" Usage="System.Messaging.MessageQueueCriteria.ModifiedBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the upper boundary of the queue modification date and time by which to filter queues on the network.</summary>
        <value>Oggetto <see cref="T:System.DateTime" /> che specifica il limite massimo per data di modifica e l'ora ultima una coda.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Flag di modifica della coda è impostato quando si modificano le proprietà di una coda, ma non quando un messaggio viene letto o scritto nella coda.  
  
 Il <xref:System.Messaging.MessageQueueCriteria> proprietà vengono combinate mediante l'operatore logico `AND`, quindi si impostano entrambe <xref:System.Messaging.MessageQueueCriteria.ModifiedBefore%2A> e <xref:System.Messaging.MessageQueueCriteria.ModifiedAfter%2A> delimita un intervallo di tempo per l'ultima modifica le code. Se si imposta solo <xref:System.Messaging.MessageQueueCriteria.ModifiedBefore%2A>, non vi è alcun limite inferiore alla data.  
  
 Se si prova a impostare <xref:System.Messaging.MessageQueueCriteria.ModifiedBefore%2A> alla versione precedente <xref:System.DateTime> valore rispetto <xref:System.Messaging.MessageQueueCriteria.ModifiedAfter%2A>, <xref:System.Messaging.MessageQueueCriteria.ModifiedAfter%2A> viene reimpostato sullo stesso valore (nuovo) come <xref:System.Messaging.MessageQueueCriteria.ModifiedBefore%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The application did not set the <see cref="P:System.Messaging.MessageQueueCriteria.ModifiedBefore" /> property before reading it.</exception>
        <altmember cref="P:System.Messaging.MessageQueueCriteria.ModifiedAfter" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="P:System.Messaging.MessageQueue.LastModifyTime" />
      </Docs>
    </Member>
  </Members>
</Type>