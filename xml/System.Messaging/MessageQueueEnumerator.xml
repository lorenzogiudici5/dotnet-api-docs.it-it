<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MessageQueueEnumerator.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52dd645dcfd97fa2036ad0395acbbbf3e86c2865e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2dd645dcfd97fa2036ad0395acbbbf3e86c2865e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Provides a forward-only cursor to enumerate through messages in a message queue.</source>
          <target state="translated">Fornisce un cursore forward-only per enumerare i messaggi in una coda di messaggi.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Use <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> for dynamic interaction with queues on the network.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> per un'interazione dinamica con le code in rete.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Methods available through the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class can return either a <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> containing a dynamic list of queues, or an array that contains a snapshot of the queue collection at the time the specified method was called.</source>
          <target state="translated">Metodi disponibili tramite il <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> classe può restituire un <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> contenente un elenco dinamico di code o una matrice che contiene uno snapshot dell'insieme di code al momento è stato chiamato il metodo specificato.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>There is no defined ordering of queues in a network.</source>
          <target state="translated">Non è stato definito nessun ordine di code in una rete.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>They are not ordered, for example, by computer, label, public or private status, or other user-accessible criteria.</source>
          <target state="translated">Non sono ordinati, ad esempio, per computer, etichetta, stato pubblico o privato o altri criteri accessibili all'utente.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>A <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> is a cursor, initialized to the head of a dynamic list.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> è un cursore, inizializzato all'inizio di un elenco dinamico.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>You can move the cursor to the first queue of the enumeration by calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">È possibile spostare il cursore sulla prima coda dell'enumerazione chiamando <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>After the enumerator has been initialized, you can use <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> to step forward through the remaining queues.</source>
          <target state="translated">Dopo l'enumeratore è stato inizializzato, è possibile utilizzare <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> per avanzare tra le code rimanenti.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>It is not possible to step backward with a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>.</source>
          <target state="translated">Non è possibile tornare indietro con un <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>A cursor only allows forward movement through the queue enumeration.</source>
          <target state="translated">Un cursore consente solo il movimento in avanti mediante l'enumerazione di coda.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>However, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> to reset the enumeration and put the cursor at the beginning of the list again.</source>
          <target state="translated">Tuttavia, è possibile chiamare <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> per reimpostare l'enumerazione e posizionare il cursore all'inizio dell'elenco.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Because the enumerator is dynamic, a queue that is appended beyond the cursor's current position can be accessed by the enumerator.</source>
          <target state="translated">Poiché l'enumeratore è dinamico, una coda che viene aggiunto oltre la posizione corrente del cursore sono accessibili dall'enumeratore.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>A queue that is inserted before the cursor's current position cannot be accessed without first calling Reset.</source>
          <target state="translated">Impossibile accedere a una coda che viene inserita prima della posizione del cursore corrente senza prima chiamare Reset.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>The following code example iterates through all the message queues in the network, and examines the path for each queue.</source>
          <target state="translated">L'esempio di codice seguente scorre tutte le code di messaggi nella rete e viene esaminato il percorso per ogni coda.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Finally, it displays the number of public queues on the network.</source>
          <target state="translated">Infine, visualizzato il numero di code pubbliche nella rete.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Close">
          <source>Frees the resources associated with the enumerator.</source>
          <target state="translated">Rende disponibili le risorse associate all'enumeratore.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Close">
          <source>The operating system retains an open handle, <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A&gt;</ph>, to the queue enumerator during the lifetime of the cursor.</source>
          <target state="translated">Il sistema operativo mantiene un handle aperto, <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A&gt;</ph>, per l'enumeratore della coda nel corso della durata del cursore.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Close">
          <source>When you finish working with the enumerator, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;</ph> to release the resources associated with the handle.</source>
          <target state="translated">Al termine del lavoro con l'enumeratore, chiamare <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;</ph> per rilasciare le risorse associate all'handle.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>Gets the current <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> of the enumeration.</source>
          <target state="translated">Ottiene la <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> corrente dell'enumerazione.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>The queue at which the cursor is currently positioned.</source>
          <target state="translated">La coda sulla quale è attualmente posizionato il cursore.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>When the enumerator is created, it does not point to anything, so <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> is not valid and will throw an exception if it is accessed.</source>
          <target state="translated">Quando viene creato l'enumeratore, non corrisponde a qualsiasi tipo, così <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> non è valido e verrà generata un'eccezione se vi si accede.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>You must call <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> to position the cursor at the first queue in the enumeration.</source>
          <target state="translated">È necessario chiamare <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> per posizionare il cursore nella prima coda nell'enumerazione.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>Multiple calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> with no intervening calls to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> will return the same <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> object.</source>
          <target state="translated">Più chiamate al metodo <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> senza alcuna chiamata a <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> restituirà lo stesso <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>You called <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueueEnumerator.Current" /&gt;</ph> before the first call to <ph id="ph2">&lt;see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /&gt;</ph>.</source>
          <target state="translated">È stata chiamata la proprietà <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueueEnumerator.Current" /&gt;</ph> prima della prima chiamata al metodo <ph id="ph2">&lt;see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>The cursor is located before the first queue in the enumeration.</source>
          <target state="translated">Il cursore precede la prima coda dell'enumerazione.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>You called <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueueEnumerator.Current" /&gt;</ph> after a call to <ph id="ph2">&lt;see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /&gt;</ph> had returned false (indicating the cursor is located after the last queue in the enumeration).</source>
          <target state="translated">È stato chiamato <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueueEnumerator.Current" /&gt;</ph> dopo che una chiamata a <ph id="ph2">&lt;see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /&gt;</ph> ha restituito false, il che indica che il cursore è posizionato dopo l'ultima coda dell'enumerazione.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph>.</source>
          <target state="translated">Rilascia le risorse usate da <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph>.</source>
          <target state="translated">Rilascia tutte le risorse usate da <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph> allows the resources used by the <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">La chiamata <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph> le risorse utilizzate da di <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> riallocazione per altri scopi.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose">
          <source>For more information about <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph>, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per rilasciare sia le risorse gestite sia quelle non gestite; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per rilasciare solo le risorse non gestite.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Rilascia le risorse non gestite usate da <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph> e, facoltativamente, le risorse gestite.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Questo metodo viene chiamato dal metodo pubblico <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph> (metodo) e <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> richiama il metodo protetto <ph id="ph2">`Dispose(Boolean)`</ph> metodo con il <ph id="ph3">`disposing`</ph> parametro impostato su <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> richiama <ph id="ph2">`Dispose`</ph> con <ph id="ph3">`disposing`</ph> impostato su <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> references.</source>
          <target state="translated">Se il parametro <ph id="ph1">`disposing`</ph> è <ph id="ph2">`true`</ph>, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti a cui la classe <ph id="ph3">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> fa riferimento.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">Il metodo richiama il metodo <ph id="ph1">`Dispose`</ph> di ciascun oggetto cui viene fatto riferimento.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> può essere chiamato più volte da altri oggetti.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">In caso di override di <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, non fare riferimento a oggetti già eliminati in una chiamata precedente a <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su come implementare <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, vedere <bpt id="p1">[</bpt>implementazione di un metodo Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> e <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>si esegue l'override del metodo Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>Gets the native Message Queuing handle used to locate queues in a network.</source>
          <target state="translated">Ottiene l'handle nativo di Accodamento messaggi utilizzato per individuare le code in una rete.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>The native handle to the current queue.</source>
          <target state="translated">L'handle nativo per la coda corrente.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>When you no longer need this <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> instance, call <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;</ph> to free this handle to the resource.</source>
          <target state="translated">Quando non è più necessario questo <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> dell'istanza, chiamare <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;</ph> per liberare l'handle per la risorsa.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>The handle does not exist.</source>
          <target state="translated">L'handle non esiste.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>The calling code does not have browse permissions.</source>
          <target state="translated">Il codice chiamante non dispone di autorizzazioni per l'esplorazione.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>Advances the enumerator to the next queue of the enumeration, if one is currently available.</source>
          <target state="translated">Sposta l'enumeratore alla coda successiva dell'enumerazione, se ve n'è una disponibile.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next queue; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has reached the end of the enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'enumeratore è passato alla coda successiva, <ph id="ph2">&lt;see langword="false" /&gt;</ph> se l'enumeratore ha raggiunto la fine dell'enumerazione.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`false`</ph> immediately if there are no queues associated with the enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> Restituisce <ph id="ph2">`false`</ph> immediatamente se non esistono code associate all'enumerazione.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> will return <ph id="ph2">`true`</ph> until it has reached the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> restituirà <ph id="ph2">`true`</ph> fino a quando non raggiunta la fine della raccolta.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>It will then return <ph id="ph1">`false`</ph> for each successive call.</source>
          <target state="translated">Verrà quindi restituito <ph id="ph1">`false`</ph> per ogni chiamata successiva.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>However once <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> has returned <ph id="ph2">`false`</ph>, accessing the <ph id="ph3">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> property will throw an exception.</source>
          <target state="translated">Tuttavia, una volta <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> ha restituito <ph id="ph2">`false`</ph>, l'accesso al <ph id="ph3">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> proprietà genererà un'eccezione.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>Upon creation, an enumerator is conceptually positioned before the first <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> of the enumeration, and the first call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> brings the first queue of the enumeration into view.</source>
          <target state="translated">Al momento della creazione, un enumeratore concettualmente prima del primo <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> dell'enumerazione e la prima chiamata a <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> riporta la prima coda dell'enumerazione nella visualizzazione.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>The calling code does not have browse permissions.</source>
          <target state="translated">Il codice chiamante non dispone di autorizzazioni per l'esplorazione.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source>Resets the cursor, so it points to the beginning of the enumeration.</source>
          <target state="translated">Reimposta il cursore, in modo che punti all'inizio dell'enumerazione.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source>An enumerator moves in a forward-only direction.</source>
          <target state="translated">Un enumeratore viene spostato in una direzione forward-only.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source>Use this method to return to the beginning of the enumeration of queues.</source>
          <target state="translated">Utilizzare questo metodo per tornare all'inizio dell'enumerazione delle code.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> positions the cursor at the first queue in the list.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> posiziona il cursore nella prima coda nell'elenco.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source>You do not need to call <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> to move the cursor forward to the first queue in the enumeration.</source>
          <target state="translated">Non è necessario chiamare <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> dopo la chiamata <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> per spostare in avanti il cursore sulla prima coda nell'enumerazione.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.System#Collections#IEnumerator#Current">
          <source>Gets the current <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> of the enumeration.</source>
          <target state="translated">Ottiene la <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> corrente dell'enumerazione.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.System#Collections#IEnumerator#Current">
          <source>The queue at which the cursor is currently positioned.</source>
          <target state="translated">La coda sulla quale è attualmente posizionato il cursore.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>