<Type Name="IMessageFormatter" FullName="System.Messaging.IMessageFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bf6bb2256d5598c84bd5a464f78b006a80ed3307" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39987665" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMessageFormatter : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMessageFormatter implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.IMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMessageFormatter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMessageFormatter : ICloneable" />
  <TypeSignature Language="F#" Value="type IMessageFormatter = interface&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.MessageFormatterConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b6b28-101">Serializza o deserializza gli oggetti dal corpo di un messaggio di Accodamento messaggi.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b6b28-101">Serializes or deserializes objects from the body of a Message Queuing message.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6b28-102">Quando un'applicazione invia un messaggio alla coda utilizzando un'istanza di <xref:System.Messaging.MessageQueue> (classe), il formattatore serializza l'oggetto (che può essere un'istanza di qualsiasi classe) in un flusso e lo inserisce nel corpo del messaggio.</span><span class="sxs-lookup"><span data-stu-id="b6b28-102">When an application sends a message to the queue using an instance of the <xref:System.Messaging.MessageQueue> class, the formatter serializes the object (which can be an instance of any class) into a stream and inserts it into the message body.</span></span> <span data-ttu-id="b6b28-103">Durante la lettura da una coda tramite una <xref:System.Messaging.MessageQueue>, il formattatore deserializza i dati del messaggio nel <xref:System.Messaging.Message.Body%2A> proprietà di un <xref:System.Messaging.Message>.</span><span class="sxs-lookup"><span data-stu-id="b6b28-103">When reading from a queue using a <xref:System.Messaging.MessageQueue>, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>.</span></span>  
  
 <span data-ttu-id="b6b28-104"><xref:System.Messaging.BinaryMessageFormatter> e <xref:System.Messaging.ActiveXMessageFormatter> ottenere velocità maggiori rispetto la <xref:System.Messaging.XmlMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="b6b28-104"><xref:System.Messaging.BinaryMessageFormatter> and <xref:System.Messaging.ActiveXMessageFormatter> provide faster throughput than the <xref:System.Messaging.XmlMessageFormatter>.</span></span> <span data-ttu-id="b6b28-105">Il <xref:System.Messaging.ActiveXMessageFormatter> consente l'interoperabilità con applicazioni di Accodamento messaggi di Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="b6b28-105">The <xref:System.Messaging.ActiveXMessageFormatter> allows interoperability with Visual Basic 6.0 Message Queuing applications.</span></span> <span data-ttu-id="b6b28-106">Il <xref:System.Messaging.XmlMessageFormatter> è debolmente accoppiati, il che significa che il server e client possono versione del tipo che viene inviato e ricevuto in modo indipendente.</span><span class="sxs-lookup"><span data-stu-id="b6b28-106">The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, which means that the server and client can version the type that is sent and received independently.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Messaging.MessageQueue.Formatter" />
    <altmember cref="P:System.Messaging.Message.Formatter" />
    <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
    <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
    <altmember cref="T:System.Messaging.XmlMessageFormatter" />
  </Docs>
  <Members>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanRead(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member CanRead : System.Messaging.Message -&gt; bool" Usage="iMessageFormatter.CanRead message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b6b28-107">
            <see cref="T:System.Messaging.Message" /> da esaminare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6b28-107">The <see cref="T:System.Messaging.Message" /> to inspect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b6b28-108">Quando è implementato in una classe, determina se il formattatore può deserializzare il contenuto del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6b28-108">When implemented in a class, determines whether the formatter can deserialize the contents of the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b6b28-109">
            <see langword="true" /> se il formattatore può deserializzare il messaggio; altrimenti, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6b28-109">
              <see langword="true" /> if the formatter can deserialize the message; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Read : System.Messaging.Message -&gt; obj" Usage="iMessageFormatter.Read message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b6b28-110">
            <see cref="T:System.Messaging.Message" /> da deserializzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6b28-110">The <see cref="T:System.Messaging.Message" /> to deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b6b28-111">Quando viene implementato in una classe, legge il contenuto del messaggio indicato e crea un oggetto contenente i dati del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6b28-111">When implemented in a class, reads the contents from the given message and creates an object that contains data from the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b6b28-112">Messaggio deserializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6b28-112">The deserialized message.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Messaging.Message * obj -&gt; unit" Usage="iMessageFormatter.Write (message, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b6b28-113">
            <see cref="T:System.Messaging.Message" /> che conterrà l'oggetto serializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6b28-113">The <see cref="T:System.Messaging.Message" /> that will contain the serialized object.</span>
          </span>
        </param>
        <param name="obj">
          <span data-ttu-id="b6b28-114">Oggetto da serializzare nel messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6b28-114">The object to be serialized into the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b6b28-115">Quando viene implementato in una classe, serializza un oggetto nel corpo del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6b28-115">When implemented in a class, serializes an object into the body of the message.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>