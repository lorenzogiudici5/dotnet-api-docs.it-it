<Type Name="XmlSchemaCollection" FullName="System.Xml.Schema.XmlSchemaCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4fec8ddd8d80912cae1352853ba7c3ed04b5d88c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720965" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlSchemaCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaCollection sealed : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Use System.Xml.Schema.XmlSchemaSet for schema compilation and validation. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contiene una cache di schemi XSD (XML Schema Definition Language) e XDR (XML-Data Reduced). La classe <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> è obsoleta. In alternativa, usare <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gli schemi vengono caricati utilizzando il <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A> (metodo), ora in cui lo schema è associato a uno spazio dei nomi Uniform Resource Identifier (URI). Per gli schemi XML, in genere si tratterà il `targetNamespace` proprietà dello schema.  
  
 Sebbene questa classe archivi sia schemi XDR e schemi XML, tutti i metodi e proprietà che accettano o restituiscono un <xref:System.Xml.Schema.XmlSchema> si applica solo a XML Schema.  
  
 Questa versione del prodotto supporta la raccomandazione del World Wide Web Consortium (W3C) XML Schema disponibile all'indirizzo http://www.w3.org/TR/xmlschema-1 e http://www.w3.org/TR/xmlschema-2. Lo spazio dei nomi dello Schema W3C deve fare riferimento a uno Schema XML `http://www.w3.org/2001/XMLSchema` nell'elemento dello schema. Vedere il <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A> metodo per un esempio.  
  
 `XmlSchemaCollection` può essere utilizzato da <xref:System.Xml.XmlValidatingReader> per la convalida dei dati efficiente.  
  
> [!IMPORTANT]
>  Il <xref:System.Xml.Schema.XmlSchemaCollection> classe è obsoleta in Microsoft .NET Framework versione 2.0 ed è stata sostituita dalla <xref:System.Xml.Schema.XmlSchemaSet> classe.  
  
   
  
## Examples  
 Nell'esempio seguente viene convalidato un documento XML usando il `XmlSchemaCollection`.  
  
 [!code-cpp[XmlSchemaCollection.Basic#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaCollection.Basic/CPP/aa.cpp#1)]
 [!code-csharp[XmlSchemaCollection.Basic#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaCollection.Basic/CS/aa.cs#1)]
 [!code-vb[XmlSchemaCollection.Basic#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaCollection.Basic/VB/aa.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see langword="XmlSchemaCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Il <xref:System.Xml.Schema.XmlSchemaCollection> classe è obsoleta in .NET Framework versione 2.0 ed è stata sostituita dalla <xref:System.Xml.Schema.XmlSchemaSet> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see langword="XmlSchemaCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Il <xref:System.Xml.Schema.XmlSchemaCollection> classe è obsoleta in .NET Framework versione 2.0 ed è stata sostituita dalla <xref:System.Xml.Schema.XmlSchemaSet> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaCollection (System.Xml.XmlNameTable nametable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nametable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nametable As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaCollection(System::Xml::XmlNameTable ^ nametable);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nametable" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nametable">Oggetto <see langword="XmlNameTable" /> da usare.</param>
        <summary>Inizializza una nuova istanza della classe <see langword="XmlSchemaCollection" /> con l'oggetto <see cref="T:System.Xml.XmlNameTable" /> specificato. L'oggetto <see langword="XmlNameTable" /> viene utilizzato quando vengono caricati gli schemi.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiunge lo schema specificato alla raccolta di schemi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Il <xref:System.Xml.Schema.XmlSchemaCollection> classe è obsoleta in .NET Framework versione 2.0 ed è stata sostituita dalla <xref:System.Xml.Schema.XmlSchemaSet> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (schema As XmlSchema) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema">Oggetto <see langword="XmlSchema" /> da aggiungere alla raccolta.</param>
        <summary>Aggiunge l'oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> all'insieme.</summary>
        <returns>Oggetto <see langword="XmlSchema" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `targetNamespace` attributo viene utilizzato per identificare questo schema.  
  
 Se lo schema aggiunto contiene riferimenti ad altri spazi dei nomi (tramite `include` e `import` elementi), il livello di attendibilità dell'applicazione determina come questi spazi dei nomi vengono risolti. (In .NET Framework versione 1.0, valore predefinito è <xref:System.Xml.XmlUrlResolver> viene sempre utilizzato).  
  
 `Fully trusted code:` Valore predefinito è `XmlUrlResolver` con nessun utente credenziali viene utilizzato per risolvere risorse esterne. Gli schemi per altri spazi dei nomi vengono caricati solo ai fini della convalida. A differenza di schema originale, gli altri schemi non vengono aggiunti in modo esplicito alla raccolta di schemi. Di conseguenza, non sono accessibili mediante le proprietà o i metodi di raccolta. Se queste risorse esterne si trovano su una risorsa di rete che richiede l'autenticazione, usare un overload che accetta un <xref:System.Xml.XmlResolver> come uno degli argomenti e specificare un `XmlResolver` con le credenziali necessarie.  
  
 `Semi-trusted code:` Non vengono risolti i riferimenti esterni.  
  
> [!NOTE]
>  Se il `XmlSchemaCollection` si accede tramite il <xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=nameWithType> proprietà, il `Add` metodo utilizza il `XmlResolver` specificato da di <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType> proprietà.  
  
> [!IMPORTANT]
>  Il <xref:System.Xml.Schema.XmlSchemaCollection> classe è obsoleta in .NET Framework versione 2.0 ed è stata sostituita dalla <xref:System.Xml.Schema.XmlSchemaSet> classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchema" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Xml.Schema.XmlSchemaCollection schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Xml.Schema.XmlSchemaCollection schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (schema As XmlSchemaCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Xml::Schema::XmlSchemaCollection ^ schema);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchemaCollection" />
      </Parameters>
      <Docs>
        <param name="schema">
          <see langword="XmlSchemaCollection" /> che si desidera aggiungere a questo insieme.</param>
        <summary>Aggiunge a questa raccolta tutti gli spazi dei nomi definiti nella raccolta specificata, inclusi i relativi schemi associati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se lo schema aggiunto contiene riferimenti ad altri spazi dei nomi (tramite `include` e `import` elementi o `x-schema` attributo), il livello di attendibilità dell'applicazione determina come questi spazi dei nomi vengono risolti. (In .NET Framework versione 1.0, valore predefinito è <xref:System.Xml.XmlUrlResolver> viene sempre utilizzato).  
  
 `Fully trusted code:` Valore predefinito è `XmlUrlResolver` con nessun utente credenziali viene utilizzato per risolvere risorse esterne. Gli schemi per altri spazi dei nomi vengono caricati solo ai fini della convalida. A differenza di schema originale, gli altri schemi non vengono aggiunti in modo esplicito alla raccolta di schemi. Di conseguenza, non sono accessibili mediante le proprietà o i metodi di raccolta. Se queste risorse esterne si trovano su una risorsa di rete che richiede l'autenticazione, usare un overload che accetta un <xref:System.Xml.XmlResolver> come uno degli argomenti e specificare un `XmlResolver` con le credenziali necessarie.  
  
 `Semi-trusted code:` Non vengono risolti i riferimenti esterni.  
  
> [!NOTE]
>  Se il `XmlSchemaCollection` si accede tramite il <xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=nameWithType> proprietà, il `Add` metodo utilizza il `XmlResolver` specificato da di <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType> proprietà.  
  
> [!IMPORTANT]
>  Il <xref:System.Xml.Schema.XmlSchemaCollection> classe è obsoleta in .NET Framework versione 2.0 ed è stata sostituita dalla <xref:System.Xml.Schema.XmlSchemaSet> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (string ns, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(string ns, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (ns As String, uri As String) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::String ^ ns, System::String ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">URI dello spazio dei nomi associato allo schema. Per gli schemi XML, corrisponderà in genere a <see langword="targetNamespace" />.</param>
        <param name="uri">URL che specifica lo schema da caricare.</param>
        <summary>Aggiunge alla raccolta di schemi lo schema individuato dall'URL specificato.</summary>
        <returns>
          <see cref="T:System.Xml.Schema.XmlSchema" /> aggiunto all'insieme di schemi. È <see langword="null" /> se lo schema aggiunto è uno schema XDR oppure in caso di errori di compilazione nello schema.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `ns` è già stata associata con un altro schema nella raccolta, lo schema aggiunto sostituisce lo schema originale nella raccolta. Nel seguente codice c#, ad esempio, authors. xsd viene rimosso dalla raccolta e viene aggiunto names.  
  
```  
schemaColl.Add("urn:author", "authors.xsd");  
schemaColl.Add("urn:author", "names.xsd");  
```  
  
 Se `ns` è `null` e lo schema da aggiungere è un XML Schema, il `Add` metodo utilizza il `targetNamespace` definito nello Schema XML per identificare lo schema nella raccolta. Se lo schema aggiunto contiene riferimenti ad altri spazi dei nomi (tramite `include` e `import` elementi o `x-schema` attributo), il livello di attendibilità dell'applicazione determina come questi spazi dei nomi vengono risolti. (In .NET Framework versione 1.0, valore predefinito è <xref:System.Xml.XmlUrlResolver> viene sempre utilizzato).  
  
 `Fully trusted code:` Valore predefinito è `XmlUrlResolver` con nessun utente credenziali viene utilizzato per risolvere risorse esterne. Gli schemi per altri spazi dei nomi vengono caricati solo ai fini della convalida. A differenza di schema originale, gli altri schemi non vengono aggiunti in modo esplicito alla raccolta di schemi. Di conseguenza, non sono accessibili mediante le proprietà o i metodi di raccolta. Se queste risorse esterne si trovano su una risorsa di rete che richiede l'autenticazione, usare un overload che accetta un <xref:System.Xml.XmlResolver> come uno degli argomenti e specificare un `XmlResolver` con le credenziali necessarie.  
  
 `Semi-trusted code:` Non vengono risolti i riferimenti esterni.  
  
> [!NOTE]
>  Se il `XmlSchemaCollection` si accede tramite il <xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=nameWithType> proprietà, il `Add` metodo utilizza il `XmlResolver` specificato da di <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType> proprietà.  
  
> [!IMPORTANT]
>  Il <xref:System.Xml.Schema.XmlSchemaCollection> classe è obsoleta in .NET Framework versione 2.0 ed è stata sostituita dalla <xref:System.Xml.Schema.XmlSchemaSet> classe.  
  
   
  
## Examples  
 Nell'esempio seguente viene convalidato tre file XML utilizzando gli schemi memorizzati nel `XmlSchemaCollection`.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/VB/source.vb#1)]  
  
 L'esempio utilizza i seguenti cinque file di input:  
  
 `booksSchema.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#2)]  
  
 `booksSchemaFail.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#3)]  
  
 `newbooks.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#4](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#4)]  
  
 `books.xsd`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#5](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#5)]  
  
 `schema1.xdr`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#6](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Lo schema non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (string ns, System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(string ns, class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (ns As String, reader As XmlReader) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::String ^ ns, System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="ns">URI dello spazio dei nomi associato allo schema. Per gli schemi XML, corrisponderà in genere a <see langword="targetNamespace" />.</param>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> contenente lo schema da aggiungere.</param>
        <summary>Aggiunge lo schema contenuto in <see cref="T:System.Xml.XmlReader" /> all'insieme di schemi.</summary>
        <returns>
          <see cref="T:System.Xml.Schema.XmlSchema" /> aggiunto all'insieme di schemi. È <see langword="null" /> se lo schema aggiunto è uno schema XDR oppure in caso di errori di compilazione nello schema.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `ns` è già stata associata con un altro schema nella raccolta, lo schema aggiunto sostituisce lo schema originale nella raccolta.  
  
 Se `ns` è `null` e lo schema da aggiungere è un XML Schema, il `Add` metodo utilizza il `targetNamespace` definito nello Schema XML per identificare lo schema nella raccolta.  
  
 Se lo schema aggiunto contiene riferimenti ad altri spazi dei nomi (tramite `include` e `import` elementi o `x-schema` attributo), il livello di attendibilità dell'applicazione determina come questi spazi dei nomi vengono risolti. (In .NET Framework versione 1.0, valore predefinito è <xref:System.Xml.XmlUrlResolver> viene sempre utilizzato).  
  
 `Fully trusted code:` Valore predefinito è `XmlUrlResolver` con nessun utente credenziali viene utilizzato per risolvere risorse esterne. Gli schemi per altri spazi dei nomi vengono caricati solo ai fini della convalida. A differenza di schema originale, gli altri schemi non vengono aggiunti in modo esplicito alla raccolta di schemi. Di conseguenza, non sono accessibili mediante le proprietà o i metodi di raccolta. Se queste risorse esterne si trovano su una risorsa di rete che richiede l'autenticazione, usare un overload che accetta un <xref:System.Xml.XmlResolver> come uno degli argomenti e specificare un `XmlResolver` con le credenziali necessarie.  
  
 `Semi-trusted code:` Non vengono risolti i riferimenti esterni.  
  
> [!NOTE]
>  Se il `XmlSchemaCollection` si accede tramite il <xref:System.Xml.XmlValidatingReader.Schemas%2A?displayProperty=nameWithType> proprietà, il `Add` metodo utilizza il `XmlResolver` specificato da di <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType> proprietà.  
  
> [!IMPORTANT]
>  Il <xref:System.Xml.Schema.XmlSchemaCollection> classe è obsoleta in .NET Framework versione 2.0 ed è stata sostituita dalla <xref:System.Xml.Schema.XmlSchemaSet> classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Lo schema non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (System.Xml.Schema.XmlSchema schema, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(class System.Xml.Schema.XmlSchema schema, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (schema As XmlSchema, resolver As XmlResolver) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::Xml::Schema::XmlSchema ^ schema, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="schema">Oggetto <see langword="XmlSchema" /> da aggiungere alla raccolta.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> utilizzato per risolvere gli spazi dei nomi a cui si fa riferimento negli elementi <see langword="include" /> e <see langword="import" />. Se è <see langword="null" />, i riferimenti esterni non verranno risolti.</param>
        <summary>Aggiunge l'oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> all'insieme. L'oggetto <see cref="T:System.Xml.XmlResolver" /> specificato viene utilizzato per risolvere eventuali riferimenti esterni.</summary>
        <returns>
          <see langword="XmlSchema" /> aggiunto all'insieme di schemi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `targetNamespace` attributo viene utilizzato per identificare questo schema.  
  
 Se lo schema contiene `include` e `import` elementi che fanno riferimento altri spazi dei nomi, gli schemi per altri spazi dei nomi vengono caricati solo ai fini della convalida. A differenza di schema originale, gli altri schemi non vengono aggiunti in modo esplicito alla raccolta di schemi. Di conseguenza, non sono accessibili mediante le proprietà o i metodi di raccolta.  
  
> [!IMPORTANT]
>  Il <xref:System.Xml.Schema.XmlSchemaCollection> classe è obsoleta in .NET Framework versione 2.0 ed è stata sostituita dalla <xref:System.Xml.Schema.XmlSchemaSet> classe.  
  
   
  
## Examples  
 Nell'esempio seguente viene aggiunto uno schema alla raccolta. Un <xref:System.Xml.XmlUrlResolver> viene passato per il `Add` metodo che imposta le credenziali necessarie richieste per accedere alle risorse esterne a cui viene fatto riferimento nello schema.  
  
 [!code-cpp[XmlSchemaCollection.Add#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaCollection.Add/CPP/schemacolladd.cpp#1)]
 [!code-csharp[XmlSchemaCollection.Add#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaCollection.Add/CS/schemacolladd.cs#1)]
 [!code-vb[XmlSchemaCollection.Add#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaCollection.Add/VB/schemacolladd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Lo schema non è valido.</exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (string ns, System.Xml.XmlReader reader, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(string ns, class System.Xml.XmlReader reader, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (ns As String, reader As XmlReader, resolver As XmlResolver) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::String ^ ns, System::Xml::XmlReader ^ reader, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="ns">URI dello spazio dei nomi associato allo schema. Per gli schemi XML, corrisponderà in genere a <see langword="targetNamespace" />.</param>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> contenente lo schema da aggiungere.</param>
        <param name="resolver">
          <see cref="T:System.Xml.XmlResolver" /> utilizzato per risolvere gli spazi dei nomi a cui si fa riferimento negli elementi <see langword="include" /> e <see langword="import" /> o nell'attributo <see langword="x-schema" /> (schemi XDR). Se è <see langword="null" />, i riferimenti esterni non verranno risolti.</param>
        <summary>Aggiunge lo schema contenuto in <see cref="T:System.Xml.XmlReader" /> all'insieme di schemi. L'oggetto <see cref="T:System.Xml.XmlResolver" /> specificato viene utilizzato per risolvere eventuali riferimenti esterni.</summary>
        <returns>
          <see cref="T:System.Xml.Schema.XmlSchema" /> aggiunto all'insieme di schemi. È <see langword="null" /> se lo schema aggiunto è uno schema XDR oppure in caso di errori di compilazione nello schema.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `ns` è già stata associata con un altro schema nella raccolta, lo schema aggiunto sostituisce lo schema originale nella raccolta.  
  
 Se `ns` è `null` e lo schema da aggiungere è un XML Schema, il `Add` metodo utilizza il `targetNamespace` attributo definito nello Schema XML per identificare lo schema nella raccolta.  
  
 Se lo schema aggiunto contiene riferimenti ad altri spazi dei nomi (tramite `include` e `import` elementi o `x-schema` attributo), gli schemi per altri spazi dei nomi vengono caricati solo ai fini della convalida. A differenza di schema originale, gli altri schemi non vengono aggiunti in modo esplicito alla raccolta di schemi. Di conseguenza, non sono accessibili mediante le proprietà o i metodi di raccolta.  
  
> [!IMPORTANT]
>  Il <xref:System.Xml.Schema.XmlSchemaCollection> classe è obsoleta in .NET Framework versione 2.0 ed è stata sostituita dalla <xref:System.Xml.Schema.XmlSchemaSet> classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Lo schema non è valido.</exception>
        <altmember cref="P:System.Xml.XmlUrlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene un valore che indica se uno schema con lo spazio dei nomi specificato si trova nella raccolta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Il <xref:System.Xml.Schema.XmlSchemaCollection> classe è obsoleta in .NET Framework versione 2.0 ed è stata sostituita dalla <xref:System.Xml.Schema.XmlSchemaSet> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (ns As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">URI dello spazio dei nomi associato allo schema. Per gli schemi XML, corrisponderà in genere allo spazio dei nomi di destinazione.</param>
        <summary>Ottiene un valore che indica se uno schema con lo spazio dei nomi specificato si trova nella raccolta.</summary>
        <returns>
          <see langword="true" /> se uno schema con lo spazio dei nomi specificato si trova nell'insieme. In caso contrario <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Il <xref:System.Xml.Schema.XmlSchemaCollection> classe è obsoleta in .NET Framework versione 2.0 ed è stata sostituita dalla <xref:System.Xml.Schema.XmlSchemaSet> classe.  
  
   
  
## Examples  
 Nell'esempio seguente verifica se è presente uno schema nella raccolta. Questo caso, lo schema viene visualizzato.  
  
 [!code-cpp[Classic WebData XmlSchemaCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlSchemaCollection.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlSchemaCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlSchemaCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlSchemaCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlSchemaCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (schema As XmlSchema) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema">Oggetto <see langword="XmlSchema" />.</param>
        <summary>Ottiene un valore che indica se il <see langword="targetNamespace" /> dell'oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> specificato si trova nell'insieme.</summary>
        <returns>
          <see langword="true" /> se c'è uno schema nell'insieme con lo stesso <see langword="targetNamespace" />. In caso contrario <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Il <xref:System.Xml.Schema.XmlSchemaCollection> classe è obsoleta in .NET Framework versione 2.0 ed è stata sostituita dalla <xref:System.Xml.Schema.XmlSchemaSet> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Xml.Schema.XmlSchema[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Xml.Schema.XmlSchema[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As XmlSchema(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Xml::Schema::XmlSchema ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Xml.Schema.XmlSchema[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Matrice in cui copiare gli oggetti.</param>
        <param name="index">Indice in <c>array</c> da cui ha inizio la copia.</param>
        <summary>Copia tutti gli oggetti <see langword="XmlSchema" /> dell'insieme nella matrice indicata a partire dall'indice specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Il <xref:System.Xml.Schema.XmlSchemaCollection> classe è obsoleta in .NET Framework versione 2.0 ed è stata sostituita dalla <xref:System.Xml.Schema.XmlSchemaSet> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di spazi dei nomi definiti nella raccolta.</summary>
        <value>Numero di spazi dei nomi definiti nella raccolta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Il <xref:System.Xml.Schema.XmlSchemaCollection> classe è obsoleta in .NET Framework versione 2.0 ed è stata sostituita dalla <xref:System.Xml.Schema.XmlSchemaSet> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaCollectionEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaCollectionEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As XmlSchemaCollectionEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaCollectionEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaCollectionEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fornisce supporto per l'iterazione in stile "for each" nella raccolta di schemi.</summary>
        <returns>Enumeratore per eseguire l'iterazione in tutti gli schemi della raccolta corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Il <xref:System.Xml.Schema.XmlSchemaCollection> classe è obsoleta in .NET Framework versione 2.0 ed è stata sostituita dalla <xref:System.Xml.Schema.XmlSchemaSet> classe.  
  
   
  
## Examples  
 Nell'esempio seguente viene visualizzato ogni degli schemi XML nella raccolta di schemi.  
  
 [!code-cpp[Classic WebData XmlSchemaCollection.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlSchemaCollection.GetEnumerator Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlSchemaCollection.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlSchemaCollection.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlSchemaCollection.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlSchemaCollection.GetEnumerator Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaCollectionEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema this[string ns] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchema Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(ns As String) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchema ^ default[System::String ^] { System::Xml::Schema::XmlSchema ^ get(System::String ^ ns); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">URI dello spazio dei nomi associato allo schema che dovrà essere restituito. Sarà generalmente il <see langword="targetNamespace" /> dello schema.</param>
        <summary>Ottiene l'<see cref="T:System.Xml.Schema.XmlSchema" /> associato all'URI dello spazio dei nomi dato.</summary>
        <value>
          <see langword="XmlSchema" /> associato all'URI dello spazio dei nomi. <see langword="null" /> se non è presente uno schema caricato associato allo spazio dei nomi considerato oppure se lo spazio dei nomi è associato a uno schema XDR.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Il <xref:System.Xml.Schema.XmlSchemaCollection> classe è obsoleta in .NET Framework versione 2.0 ed è stata sostituita dalla <xref:System.Xml.Schema.XmlSchemaSet> classe.  
  
   
  
## Examples  
 Nell'esempio seguente verifica se è presente uno schema nella raccolta. Questo caso, lo schema viene visualizzato.  
  
 [!code-cpp[Classic WebData XmlSchemaCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlSchemaCollection.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlSchemaCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlSchemaCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlSchemaCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlSchemaCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaCollection.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene lo <see langword="XmlNameTable" /> predefinito utilizzato dallo <see langword="XmlSchemaCollection" /> nel caricamento di nuovi schemi.</summary>
        <value>Oggetto <see langword="XmlNameTable" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Il <xref:System.Xml.Schema.XmlSchemaCollection> classe è obsoleta in .NET Framework versione 2.0 ed è stata sostituita dalla <xref:System.Xml.Schema.XmlSchemaSet> classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Matrice in cui copiare gli oggetti.</param>
        <param name="index">Indice in <c>array</c> da cui ha inizio la copia.</param>
        <summary>Per una descrizione di questo membro, vedere <see cref="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Xml.Schema.XmlSchemaCollection> a un'interfaccia <xref:System.Collections.ICollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="P:System.Xml.Schema.XmlSchemaCollection.Count" />.</summary>
        <value>Restituisce il numero di elementi nella raccolta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Xml.Schema.XmlSchemaCollection> a un'interfaccia <xref:System.Collections.ICollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized" />.</summary>
        <value>Restituisce <see langword="true" /> se l'insieme è sincronizzato. In caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Xml.Schema.XmlSchemaCollection> a un'interfaccia <xref:System.Collections.ICollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot" />.</summary>
        <value>Restituisce un oggetto <see cref="P:System.Collections.ICollection.SyncRoot" /> che può essere utilizzato per sincronizzare l'accesso all'insieme.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Xml.Schema.XmlSchemaCollection> a un'interfaccia <xref:System.Collections.ICollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator" />.</summary>
        <returns>Restituisce l'oggetto <see cref="T:System.Collections.IEnumerator" /> dell'insieme.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Xml.Schema.XmlSchemaCollection> a un'interfaccia <xref:System.Collections.IEnumerable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Imposta un gestore eventi per ricevere informazioni sugli errori di convalida di schemi XDR e XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questi eventi si verificano quando gli schemi vengono aggiunti alla raccolta. Se non viene fornito un gestore eventi, un <xref:System.Xml.Schema.XmlSchemaException> viene generata per gli errori di convalida in cui il <xref:System.Xml.Schema.ValidationEventArgs.Severity%2A> è `XmlSeverityType.Error`. Per specificare un gestore eventi, definire una funzione di callback e aggiungerla al `ValidationEventHandler`.  
  
> [!IMPORTANT]
>  Il <xref:System.Xml.Schema.XmlSchemaCollection> classe è obsoleta in .NET Framework versione 2.0 ed è stata sostituita dalla <xref:System.Xml.Schema.XmlSchemaSet> classe.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare un gestore eventi per gestire gli schemi XML non valido.  
  
 [!code-cpp[XmlSchema.ValidationEventHandler#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchema.ValidationEventHandler/CPP/schemaevent.cpp#1)]
 [!code-csharp[XmlSchema.ValidationEventHandler#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchema.ValidationEventHandler/CS/schemaevent.cs#1)]
 [!code-vb[XmlSchema.ValidationEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchema.ValidationEventHandler/VB/schemaevent.vb#1)]  
  
 Nell'esempio precedente viene utilizzato il file `invalid.xsd` come input.  
  
 [!code-xml[XmlSchema.ValidationEventHandler#2](~/samples/snippets/xml/VS_Snippets_Data/XmlSchema.ValidationEventHandler/XML/invalid.xsd#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>