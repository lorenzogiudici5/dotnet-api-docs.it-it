<Type Name="XmlSchemaDatatype" FullName="System.Xml.Schema.XmlSchemaDatatype">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd74f89cbe9b2982b49752ff9b6b16016e220713" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52737932" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XmlSchemaDatatype" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlSchemaDatatype extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaDatatype" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlSchemaDatatype" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaDatatype abstract" />
  <TypeSignature Language="F#" Value="type XmlSchemaDatatype = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>La classe <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> è una classe astratta per il mapping di tipi XSD (XML Schema Definition Language) a tipi CLR (Common Language Runtime).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo del <xref:System.Xml.Schema.XmlSchemaDatatype> classe.  
  
 [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CPP/datatype.cpp#1)]
 [!code-csharp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CS/datatype.cs#1)]
 [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/VB/datatype.vb#1)]  
  
 Il file XML seguente viene usato per l'esempio di codice precedente.  
  
 [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/XML/example.xsd#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlSchemaDatatype ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlSchemaDatatype();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore viene chiamato dai costruttori della classe derivata per inizializzare lo stato di questo tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangeType">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converte il valore specificato, il cui tipo è una delle rappresentazioni CLR (Common Language Runtime) valide del tipo di schema XML rappresentato da <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, in un'altra rappresentazione CLR valida dello stesso valore.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public virtual object ChangeType (object value, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChangeType(object value, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ChangeType (value As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ChangeType(System::Object ^ value, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="abstract member ChangeType : obj * Type -&gt; obj&#xA;override this.ChangeType : obj * Type -&gt; obj" Usage="xmlSchemaDatatype.ChangeType (value, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">Valore di input da convertire nel tipo specificato.</param>
        <param name="targetType">Il tipo di destinazione in cui convertire il valore di input.</param>
        <summary>Converte il valore specificato, il cui tipo è una delle rappresentazioni CLR (Common Language Runtime) valide del tipo di schema XML rappresentato da <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, nel tipo CLR specificato.</summary>
        <returns>Valore di input convertito.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni sul tipo di supporto nel <xref:System.Xml?displayProperty=nameWithType> classi e conversione dei tipi di dati XML, vedere la [tipo di supporto nelle classi System. XML](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) argomento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <see cref="T:System.Object" /> o il parametro <see cref="T:System.Type" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidCastException">Il tipo rappresentato da <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> non supporta la conversione dal tipo del valore specificato al tipo specificato.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public virtual object ChangeType (object value, Type targetType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChangeType(object value, class System.Type targetType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ChangeType (value As Object, targetType As Type, namespaceResolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ChangeType(System::Object ^ value, Type ^ targetType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="abstract member ChangeType : obj * Type * System.Xml.IXmlNamespaceResolver -&gt; obj&#xA;override this.ChangeType : obj * Type * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xmlSchemaDatatype.ChangeType (value, targetType, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="value">Valore di input da convertire nel tipo specificato.</param>
        <param name="targetType">Il tipo di destinazione in cui convertire il valore di input.</param>
        <param name="namespaceResolver">Oggetto <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilizzato per la risoluzione dei prefissi degli spazi dei nomi. Viene utilizzato solo se <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> rappresenta il tipo xs:QName o un tipo derivato.</param>
        <summary>Converte il valore specificato, il cui tipo è una delle rappresentazioni CLR (Common Language Runtime) valide del tipo di schema XML rappresentato da <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, nel tipo CLR specificato utilizzando il <see cref="T:System.Xml.IXmlNamespaceResolver" />, se <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> rappresenta il tipo xs:QName o un tipo derivato.</summary>
        <returns>Valore di input convertito.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni sul tipo di supporto nel <xref:System.Xml?displayProperty=nameWithType> classi e conversione dei tipi di dati XML, vedere la [tipo di supporto nelle classi System. XML](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) argomento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <see cref="T:System.Object" /> o il parametro <see cref="T:System.Type" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidCastException">Il tipo rappresentato da <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> non supporta la conversione dal tipo del valore specificato al tipo specificato.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDerivedFrom">
      <MemberSignature Language="C#" Value="public virtual bool IsDerivedFrom (System.Xml.Schema.XmlSchemaDatatype datatype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDerivedFrom(class System.Xml.Schema.XmlSchemaDatatype datatype) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDerivedFrom (datatype As XmlSchemaDatatype) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDerivedFrom(System::Xml::Schema::XmlSchemaDatatype ^ datatype);" />
      <MemberSignature Language="F#" Value="abstract member IsDerivedFrom : System.Xml.Schema.XmlSchemaDatatype -&gt; bool&#xA;override this.IsDerivedFrom : System.Xml.Schema.XmlSchemaDatatype -&gt; bool" Usage="xmlSchemaDatatype.IsDerivedFrom datatype" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datatype" Type="System.Xml.Schema.XmlSchemaDatatype" />
      </Parameters>
      <Docs>
        <param name="datatype">Oggetto <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />.</param>
        <summary>Il metodo <see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /> restituisce sempre <see langword="false" />.</summary>
        <returns>Restituisce sempre <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseValue">
      <MemberSignature Language="C#" Value="public abstract object ParseValue (string s, System.Xml.XmlNameTable nameTable, System.Xml.IXmlNamespaceResolver nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseValue(string s, class System.Xml.XmlNameTable nameTable, class System.Xml.IXmlNamespaceResolver nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ParseValue (s As String, nameTable As XmlNameTable, nsmgr As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ParseValue(System::String ^ s, System::Xml::XmlNameTable ^ nameTable, System::Xml::IXmlNamespaceResolver ^ nsmgr);" />
      <MemberSignature Language="F#" Value="abstract member ParseValue : string * System.Xml.XmlNameTable * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xmlSchemaDatatype.ParseValue (s, nameTable, nsmgr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
        <Parameter Name="nsmgr" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="s">
          <see langword="string" /> da convalidare rispetto al tipo semplice.</param>
        <param name="nameTable">Classe <see cref="T:System.Xml.XmlNameTable" /> da utilizzare per la suddivisione in elementi di base durante l'analisi della <see langword="string" />, se l'oggetto <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> rappresenta il tipo xs:NCName.</param>
        <param name="nsmgr">L'oggetto <see cref="T:System.Xml.IXmlNamespaceResolver" /> da utilizzare durante l'analisi della <see langword="string" />, se l'oggetto <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> rappresenta il tipo xs:QName.</param>
        <summary>Quando viene eseguito l'override in una classe derivata, convalida la <see langword="string" /> specificata rispetto a un tipo semplice incorporato o definito dall'utente.</summary>
        <returns>Oggetto <see cref="T:System.Object" /> di cui può essere eseguito il cast al tipo restituito dalla proprietà <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> metodo convalida il `string` specificato rispetto a un tipo semplice incorporato o definito dall'utente. Ad esempio, se l'oggetto <xref:System.Xml.Schema.XmlSchemaDatatype> rappresenta il tipo xs: date, quindi un'istanza di <xref:System.DateTime> viene restituito.  
  
 Di seguito sono riportati i passaggi eseguiti durante il <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> processo di convalida del metodo.  
  
1.  Convertire il valore specificato come un `string` digitare a Common Language Runtime (CLR) corrispondente.  
  
2.  Verificare che il valore non violino eventuali facet per il tipo semplice.  
  
 Il valore convertito viene quindi restituito come un <xref:System.Object> e può essere il cast al tipo restituito dal <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> proprietà.  
  
 Quando la <xref:System.Xml.Schema.XmlSchemaDatatype> oggetto rappresenta un tipo di elenco, l'input `string` valore viene convertito in un elenco di uno o più oggetti. Quando il <xref:System.Xml.Schema.XmlSchemaDatatype> oggetto rappresenta un tipo di elenco, viene effettuato un tentativo di analizzare il valore di input come un tipo di membro dell'unione. Se il tentativo di analisi non riesce, quindi il tentativo di conversione con il successivo membro dell'unione fino a quando l'analisi ha esito positivo o non sono disponibili altri tipi di membro da analizzare. Se l'analisi ha esito negativo, viene generata un'eccezione.  
  
   
  
## Examples  
 Nell'esempio seguente recupera il `LotteryNumber` tipo semplice dal file Example come un <xref:System.Xml.Schema.XmlSchemaSimpleType> e quindi convalida la `string` pari a `5` usando la <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> (metodo).  
  
 [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CPP/datatype.cpp#1)]
 [!code-csharp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CS/datatype.cs#1)]
 [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/VB/datatype.vb#1)]  
  
 Il file XML seguente viene usato per l'esempio di codice precedente.  
  
 [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/XML/example.xsd#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Il valore di input non è un'istanza valida del tipo di schema XML W3C.</exception>
        <exception cref="T:System.ArgumentNullException">Il valore da analizzare non può essere <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseValue">
      <MemberSignature Language="C#" Value="public abstract object ParseValue (string s, System.Xml.XmlNameTable nameTable, System.Xml.XmlNamespaceManager nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseValue(string s, class System.Xml.XmlNameTable nameTable, class System.Xml.XmlNamespaceManager nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ParseValue (s As String, nameTable As XmlNameTable, nsmgr As XmlNamespaceManager) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ParseValue(System::String ^ s, System::Xml::XmlNameTable ^ nameTable, System::Xml::XmlNamespaceManager ^ nsmgr);" />
      <MemberSignature Language="F#" Value="abstract member ParseValue : string * System.Xml.XmlNameTable * System.Xml.XmlNamespaceManager -&gt; obj" Usage="xmlSchemaDatatype.ParseValue (s, nameTable, nsmgr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="s">Stringa da convalidare rispetto al tipo semplice.</param>
        <param name="nameTable">Classe <see cref="T:System.Xml.XmlNameTable" /> da usare per l'atomizzazione durante l'analisi della stringa se l'oggetto <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> rappresenta il tipo xs:NCName.</param>
        <param name="nsmgr">L'oggetto <see cref="T:System.Xml.XmlNamespaceManager" /> da usare durante l'analisi della stringa se l'oggetto <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> rappresenta il tipo xs:QName.</param>
        <summary>Quando ne viene eseguito l'override in una classe derivata, convalida la stringa specificata rispetto a un tipo semplice predefinito o definito dall'utente.</summary>
        <returns>Oggetto <see cref="T:System.Object" /> di cui può essere eseguito il cast al tipo restituito da <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Il <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> metodo convalida la stringa specificata rispetto a un tipo semplice incorporato o definito dall'utente. Ad esempio, se l'oggetto <xref:System.Xml.Schema.XmlSchemaDatatype> rappresenta il tipo xs: date, quindi un'istanza di <xref:System.DateTime> viene restituito.

Di seguito sono riportati i passaggi eseguiti durante il <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> processo di convalida del metodo.

1. Convertire la stringa specificata nel relativo tipo Common Language Runtime (CLR) corrispondenti.

2. Verificare che il valore non violino eventuali facet definiti per il tipo semplice.

Il valore convertito viene quindi restituito come un <xref:System.Object> e può essere il cast al tipo restituito dal <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType> proprietà.

Quando il <xref:System.Xml.Schema.XmlSchemaDatatype> oggetto rappresenta un tipo di elenco, il valore di stringa di input viene convertito in un elenco di uno o più oggetti. Quando il <xref:System.Xml.Schema.XmlSchemaDatatype> oggetto rappresenta un tipo di elenco, viene effettuato un tentativo di analizzare il valore di input come un tipo di membro dell'unione. Se il tentativo di analisi non riesce, quindi il tentativo di conversione con il successivo membro dell'unione fino a quando l'analisi ha esito positivo o non sono disponibili altri tipi di membro da analizzare. Se l'analisi ha esito negativo, viene generata un'eccezione.

]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Il valore di input non è un'istanza valida del tipo di schema XML W3C.</exception>
        <exception cref="T:System.ArgumentNullException">Il valore da analizzare non può essere Null (Nothing in Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="TokenizedType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlTokenizedType TokenizedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlTokenizedType TokenizedType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TokenizedType As XmlTokenizedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlTokenizedType TokenizedType { System::Xml::XmlTokenizedType get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenizedType : System.Xml.XmlTokenizedType" Usage="System.Xml.Schema.XmlSchemaDatatype.TokenizedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlTokenizedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando viene eseguito l'override in una classe derivata, ottiene il tipo per la <see langword="string" />, come indicato nella specifica W3C (World Wide Web Consortium) XML 1.0.</summary>
        <value>Valore <see cref="T:System.Xml.XmlTokenizedType" /> per la <see langword="string" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consente di `string` essere letto come un particolare tipo XML, ad esempio, un tipo di sezione CDATA.  
  
 La tabella seguente illustra i tipi di token.  
  
|XmlTokenizedType|Descrizione|  
|----------------------|-----------------|  
|`CDATA`|Tipo CDATA|  
|`ID`|Tipo ID|  
|`IDREF`|Tipo IDREF|  
|`IDREFS`|Tipo IDREFS|  
|`ENTITY`|Tipo di entità|  
|`ENTITIES`|Tipo di entità|  
|`NMTOKEN`|Tipo NMTOKEN|  
|`NMTOKENS`|Tipo NMTOKENS|  
|`NOTATION`|Tipo NOTATION|  
|`ENUMERATION`|Tipo di ENUMERAZIONE|  
|`QName`|Tipo QName|  
|`NCName`|Tipo NCName|  
|`None`|Nessun tipo|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeCode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.XmlTypeCode TypeCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlTypeCode TypeCode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TypeCode As XmlTypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::XmlTypeCode TypeCode { System::Xml::Schema::XmlTypeCode get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeCode : System.Xml.Schema.XmlTypeCode" Usage="System.Xml.Schema.XmlSchemaDatatype.TypeCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlTypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore di <see cref="T:System.Xml.Schema.XmlTypeCode" /> per il tipo semplice.</summary>
        <value>Valore <see cref="T:System.Xml.Schema.XmlTypeCode" /> per il tipo semplice.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elenco di W3C XML Schema tipi, ad esempio xs, xs: NMTOKENS e xs: IDREFS non sono rappresentate dal <xref:System.Xml.Schema.XmlTypeCode> enumerazione. Invece sono rappresentate dal <xref:System.Xml.Schema.XmlTypeCode> i valori per i tipi di tipi, xs: NMTOKEN e xs: IDREF con il <xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A> proprietà delle <xref:System.Xml.Schema.XmlSchemaDatatype> oggetto impostato su <xref:System.Xml.Schema.XmlSchemaDatatypeVariety.List>.  
  
> [!NOTE]
>  I tipi xs: anySimpleType e xs: anyType non sono rappresentati da <xref:System.Xml.Schema.XmlTypeCode> enumerazione. Queste informazioni sono rappresentate un <xref:System.Xml.Schema.XmlSchemaDatatype> dell'oggetto con un <xref:System.Xml.Schema.XmlTypeCode> il cui valore è <xref:System.Xml.Schema.XmlTypeCode.UntypedAtomic> per xs: anySimpleType o <xref:System.Xml.Schema.XmlTypeCode.Item> per xs: anyType.  
  
   
  
## Examples  
 Per un esempio del <xref:System.Xml.Schema.XmlSchemaDatatype.TypeCode%2A> proprietà, vedere <xref:System.Xml.Schema.XmlSchemaDatatype>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlTypeCode" />
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public abstract Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ValueType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type" Usage="System.Xml.Schema.XmlSchemaDatatype.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando è sottoposto a override in una classe derivata, ottiene il tipo CLR (Common Language Runtime) dell'elemento.</summary>
        <value>Tipo CLR (Common Language Runtime) dell'elemento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> proprietà ottiene il tipo CLR dell'elemento. Ad esempio, un elemento di tipo `xs:int` avrebbe un <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> di <xref:System.Int32> per impostazione predefinita. Tuttavia, il <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> potrebbe essere uno qualsiasi dei tipi validi che possono essere mappati ai `xs:int`, ad esempio <xref:System.Int16> o <xref:System.Double>.  
  
 Per altre informazioni sul tipo di supporto nel <xref:System.Xml?displayProperty=nameWithType> dello spazio dei nomi, vedere [tipo di supporto nelle classi System. XML](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).  
  
   
  
## Examples  
 Per un esempio del <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> proprietà, vedere <xref:System.Xml.Schema.XmlSchemaDatatype>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Variety">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.XmlSchemaDatatypeVariety Variety { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaDatatypeVariety Variety" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.Variety" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Variety As XmlSchemaDatatypeVariety" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::XmlSchemaDatatypeVariety Variety { System::Xml::Schema::XmlSchemaDatatypeVariety get(); };" />
      <MemberSignature Language="F#" Value="member this.Variety : System.Xml.Schema.XmlSchemaDatatypeVariety" Usage="System.Xml.Schema.XmlSchemaDatatype.Variety" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaDatatypeVariety</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il valore di <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> per il tipo semplice.</summary>
        <value>Valore <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> per il tipo semplice.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" />
      </Docs>
    </Member>
  </Members>
</Type>