<Type Name="XmlSchemaInference" FullName="System.Xml.Schema.XmlSchemaInference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="42dbabff920f5482d6f67fbb43526916a3163a22" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720525" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlSchemaInference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaInference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaInference" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaInference" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaInference sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Deduce uno schema XSD (XML Schema Definition Language) da un documento XML. Non è possibile ereditare la classe <see cref="T:System.Xml.Schema.XmlSchemaInference" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  -   Non utilizzare gli schemi da origini sconosciute o non attendibili o posizioni. In questo modo può pregiudicare la sicurezza del codice.  
> -   XML Schema (inclusi gli schemi inline) sono intrinsecamente vulnerabili ad attacchi denial of service; non le accetti in scenari non attendibili.  
> -   Le eccezioni e messaggi di errore di convalida dello schema possono esporre informazioni riservate riguardanti il modello di contenuto o i percorsi URI per il file di schema. Prestare attenzione a non esporre queste informazioni per i chiamanti non attendibili.  
  
 Il <xref:System.Xml.Schema.XmlSchemaInference> classe il <xref:System.Xml.Schema?displayProperty=nameWithType> dello spazio dei nomi consente di inferire uno schema (XSD (XML Schema Definition Language) dalla struttura di un documento XML. La classe <xref:System.Xml.Schema.XmlSchemaInference> genera uno schema XML in grado di convalidare il documento XML.  
  
 La <xref:System.Xml.Schema.XmlSchemaInference> classe supporta gli standard W3C XML e XML Schema. E può essere utilizzato per derivare un nuovo schema o per ridefinire uno schema esistente.  
  
   
  
## Examples  
 In questo esempio viene utilizzato un file XML come input e genera uno schema in grado di convalidare il XML di esempio.  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 Di seguito è riportato il file XML di input.  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 Di seguito è riportato lo schema inferito dal documento XML.  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaInference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaInference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Schema.XmlSchemaInference" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InferSchema">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deduce uno schema XSD (XML Schema Definition Language) dal documento XML specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="instanceDocument">Oggetto <see cref="T:System.Xml.XmlReader" /> contenente il documento XML da cui derivare uno schema.</param>
        <summary>Deriva uno schema XSD (XML Schema Definition Language) dal documento XML contenuto nell'oggetto <see cref="T:System.Xml.XmlReader" /> specificato.</summary>
        <returns>Oggetto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> contenente gli schemi derivati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> metodo deriva uno o più schemi W3C XML Schema Definition Language (XSD) dai dati XML contenuto nel documento dell'istanza di <xref:System.Xml.XmlReader> l'oggetto specificato. Se il documento XML contiene elementi e attributi provenienti da più spazi dei nomi, quindi vengono generati più schemi: uno per ogni spazio dei nomi utilizzato nel documento. Lo schema principale è in grado di convalidare l'intero documento XML schema e lo spazio dei nomi di destinazione è lo stesso spazio dei nomi dell'elemento del documento del documento XML.  
  
 Di seguito sono riportate note importanti relative all'utilizzo di <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> metodo.  
  
-   Il <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> metodo ignora qualsiasi `xsi:type`, `xsi:schemaLocation`, o `xsi:noNamespaceSchemaLocation` attributi nel documento XML.  
  
-   Se il <xref:System.Xml.XmlReader> oggetto è tipizzato, le informazioni sul tipo contenute viene ignorate.  
  
-   Se il <xref:System.Xml.XmlReader> oggetto viene posizionato su un elemento che non è l'elemento radice del documento XML, è derivato da uno schema solo per tale elemento. Se il <xref:System.Xml.XmlReader> oggetto non è posizionato su un elemento, il <xref:System.Xml.XmlReader.Read%2A> metodo viene chiamato sul <xref:System.Xml.XmlReader> parametro fino a quando non viene rilevato un elemento (ad esempio, quando <xref:System.Xml.XmlReader.NodeType%2A> è <xref:System.Xml.XmlNodeType.Element>). A questo punto, il processo di inferenza inizia da tale elemento. Se non viene rilevato alcun elemento fino alla fine del documento, un <xref:System.ArgumentException> viene generata un'eccezione.  
  
   
  
## Examples  
 In questo esempio viene utilizzato un file XML come input e genera uno schema in grado di convalidare il XML di esempio.  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 Di seguito è riportato il file XML di input.  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 Di seguito è riportato lo schema inferito dal documento XML.  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Il formato del documento XML non è corretto.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">L'oggetto <see cref="T:System.Xml.XmlReader" /> non è posizionato in corrispondenza del nodo radice o di un elemento. Si verifica un errore durante il processo di derivazione dello schema.</exception>
      </Docs>
    </Member>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument, System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument, class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader, schemas As XmlSchemaSet) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument, System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="instanceDocument">Oggetto <see cref="T:System.Xml.XmlReader" /> contenente il documento XML da cui derivare uno schema.</param>
        <param name="schemas">Oggetto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> contenente uno schema esistente utilizzato per definire in modo più preciso lo schema derivato.</param>
        <summary>Deriva uno schema XSD (XML Schema Definition Language) dal documento XML contenuto nell'oggetto <see cref="T:System.Xml.XmlReader" /> specificato e definisce in modo più preciso lo schema derivato utilizzando uno schema esistente nell'oggetto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> specificato con lo stesso spazio dei nomi di destinazione.</summary>
        <returns>Oggetto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> contenente gli schemi derivati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> metodo deriva uno o più schemi W3C XML Schema Definition Language (XSD) dai dati XML contenuto nel documento dell'istanza di <xref:System.Xml.XmlReader> l'oggetto specificato. Se il documento XML contiene elementi e attributi provenienti da più spazi dei nomi, vengono generati più schemi: uno per ogni spazio dei nomi utilizzato nel documento. Lo schema principale è in grado di convalidare l'intero documento XML schema e lo spazio dei nomi di destinazione è lo stesso spazio dei nomi dell'elemento del documento del documento XML.  
  
 Di seguito sono riportate note importanti relative all'utilizzo di <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> metodo.  
  
-   Il <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> metodo ignora qualsiasi `xsi:type`, `xsi:schemaLocation`, o `xsi:noNamespaceSchemaLocation` attributi nel documento XML.  
  
-   Se il <xref:System.Xml.XmlReader> oggetto è tipizzato, le informazioni sul tipo contenute viene ignorate.  
  
-   Se il <xref:System.Xml.XmlReader> oggetto viene posizionato su un elemento che non è l'elemento radice del documento XML, è derivato da uno schema solo per tale elemento. Se il <xref:System.Xml.XmlReader> oggetto non è posizionato su un elemento, il <xref:System.Xml.XmlReader.Read%2A> metodo viene chiamato sul <xref:System.Xml.XmlReader> parametro fino a quando non viene rilevato un elemento (ad esempio, quando <xref:System.Xml.XmlReader.NodeType%2A> è <xref:System.Xml.XmlNodeType.Element>). A questo punto, il processo di inferenza inizia da tale elemento. Se non viene rilevato alcun elemento fino alla fine del documento, un <xref:System.ArgumentException> viene generata un'eccezione.  
  
-   Se un <xref:System.Xml.Schema.XmlSchemaSet> oggetto viene passato come parametro e l'elemento su cui il <xref:System.Xml.XmlReader> è posizionato l'oggetto è definito in uno degli schemi di <xref:System.Xml.Schema.XmlSchemaSet>, viene utilizzato lo schema inferito per ridefinire uno schema esistente nel <xref:System.Xml.Schema.XmlSchemaSet> parametro con lo stesso spazio dei nomi di destinazione; in caso contrario, un nuovo schema viene dedotto per lo spazio dei nomi.  
  
   
  
## Examples  
 L'esempio di codice seguente viene utilizzato il documento XML 1 come input e genera uno schema in grado di convalidare il documento XML 1. Nell'esempio di codice viene quindi utilizzato il documento XML 2 e ottimizza lo schema generato dal documento XML 1, in base alle modifiche rilevate nel documento XML 2.  
  
 Di seguito è riportato il documento XML 1.  
  
 [!code-xml[XmlSchemaInferenceExamples#13](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item1.xml#13)]  
  
 Di seguito è riportato il documento XML 2.  
  
 [!code-xml[XmlSchemaInferenceExamples#14](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item2.xml#14)]  
  
 Esempio di codice seguente deduce uno schema dal primo documento XML contenuto in `reader`e quindi perfeziona lo schema inferito con le modifiche rilevate nel secondo documento XML contenuto `reader1`. Nell'esempio di codice viene utilizzato il primo overload <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> metodo dedurre lo schema e il secondo overload <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> ridefinire lo schema esistente nel metodo il <xref:System.Xml.Schema.XmlSchemaSet> oggetto.  
  
 [!code-cpp[XmlSchemaInferenceExamples#4](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#4)]
 [!code-csharp[XmlSchemaInferenceExamples#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#4)]
 [!code-vb[XmlSchemaInferenceExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#4)]  
  
 Lo schema seguente è lo schema inferito dal documento XML 1.  
  
 [!code-xml[XmlSchemaInferenceExamples#15](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema1.xml#15)]  
  
 Lo schema seguente è la versione dello schema precedente, perfezionata basato sul documento XML 2.  
  
 [!code-xml[XmlSchemaInferenceExamples#16](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema2.xml#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Il formato del documento XML non è corretto.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">L'oggetto <see cref="T:System.Xml.XmlReader" /> non è posizionato in corrispondenza del nodo radice o di un elemento. Si verifica un errore durante il processo di derivazione dello schema.</exception>
      </Docs>
    </Member>
    <Member MemberName="Occurrence">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption Occurrence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption Occurrence" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.Occurrence" />
      <MemberSignature Language="VB.NET" Value="Public Property Occurrence As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption Occurrence { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore di <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> che influisce sulle dichiarazioni di occorrenza dello schema derivate dal documento XML.</summary>
        <value>Oggetto <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> è impostata su <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>, i primi elementi di tempo vengono rilevati nel documento XML, la dichiarazione dello schema viene inferita come `minOccurs="1"`. Quando vengono rilevati attributi, la dichiarazione dello schema viene inferita come `use="required"`.  
  
 Se il <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> è impostata su <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, le dichiarazioni di elemento dello schema vengono inferite come `minOccurs="0"`, e le dichiarazioni di attributo dello schema vengono inferite come `use="optional"`.  
  
 Il valore predefinito di <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> proprietà <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>.  
  
   
  
## Examples  
 Questo esempio viene illustrato come interessato occorrenza il <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> proprietà. Nell'esempio di codice viene dedotto occorrenza da un file XML in due modi diversi: relaxed e limitata. Di seguito è riportato il file XML di esempio.  
  
 [!code-xml[XmlSchemaInferenceExamples#7](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence1.xml#7)]  
  
 Esempio di codice seguente indica la <xref:System.Xml.Schema.XmlSchemaInference> classe per derivare l'occorrenza di elementi e attributi in modo flessibile.  
  
 [!code-cpp[XmlSchemaInferenceExamples#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#2)]
 [!code-csharp[XmlSchemaInferenceExamples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#2)]
 [!code-vb[XmlSchemaInferenceExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#2)]  
  
 Poiché il <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> è stata impostata su <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, lo schema seguente è stato generato.  
  
 [!code-xml[XmlSchemaInferenceExamples#8](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence2.xml#8)]  
  
 Nel codice di esempio qui sopra, se il <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> proprietà non è stata impostata su <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, <xref:System.Xml.Schema.XmlSchemaInference> classe sarebbe sono impostate come predefinite per <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> e generato lo schema seguente.  
  
 [!code-xml[XmlSchemaInferenceExamples#9](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence3.xml#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInference">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption TypeInference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption TypeInference" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.TypeInference" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInference As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption TypeInference { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore di <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> che influisce sui tipi derivati dal documento XML.</summary>
        <value>Oggetto <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> è impostata su <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, il tipo derivato di elementi e attributi nel documento XML con contenuto semplice è sempre `xs:string`. Se il <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> è impostata su <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>, vengono dedotti tipi più specifici, ad esempio `xs:date`, `xs:decimal`, `xs:unsignedByte`e così via.  
  
 Il valore predefinito di <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> proprietà <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>.  
  
   
  
## Examples  
 Questo esempio viene illustrato come l'inferenza del tipo è interessato dal <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> proprietà. Nell'esempio di codice deduce tipi da un file XML in due modi diversi: relaxed e limitata. Di seguito è riportato il file XML di esempio.  
  
 [!code-xml[XmlSchemaInferenceExamples#10](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference1.xml#10)]  
  
 Esempio di codice seguente indica la <xref:System.Xml.Schema.XmlSchemaInference> classe dedurre `xs:string` per gli elementi e attributi con contenuto semplice.  
  
 [!code-cpp[XmlSchemaInferenceExamples#3](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#3)]
 [!code-csharp[XmlSchemaInferenceExamples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#3)]
 [!code-vb[XmlSchemaInferenceExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#3)]  
  
 Poiché il <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> è stata impostata su <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, lo schema seguente è stato generato.  
  
 [!code-xml[XmlSchemaInferenceExamples#11](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference2.xml#11)]  
  
 Nel codice di esempio qui sopra, se il <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> proprietà non è stata impostata su <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, <xref:System.Xml.Schema.XmlSchemaInference> classe sarebbe sono impostate come predefinite per <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> e generato lo schema seguente.  
  
 [!code-xml[XmlSchemaInferenceExamples#12](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference3.xml#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>