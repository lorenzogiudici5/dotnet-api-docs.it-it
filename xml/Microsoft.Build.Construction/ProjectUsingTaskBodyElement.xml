<Type Name="ProjectUsingTaskBodyElement" FullName="Microsoft.Build.Construction.ProjectUsingTaskBodyElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="786303a2aa937ad4012b44405fcb3bbb548818b5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ProjectUsingTaskBodyElement : Microsoft.Build.Construction.ProjectElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectUsingTaskBodyElement extends Microsoft.Build.Construction.ProjectElement" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Construction.ProjectUsingTaskBodyElement" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectUsingTaskBodyElement&#xA;Inherits ProjectElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectUsingTaskBodyElement : Microsoft::Build::Construction::ProjectElement" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Construction.ProjectElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Evaluate={Evaluate} TaskBody={TaskBody}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9fd0c-101">Rappresenta il corpo di un'attività inline.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9fd0c-101">Represents the body of an inline task.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public override string Condition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Condition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.Condition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Condition As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Condition { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fd0c-102">Ottiene il valore null perché l'attributo Condition è inesistente per questo elemento e una condizione inesistente è implicitamente true.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd0c-102">Gets null because the Condition attribute is nonexistent for this element and a nonexistent condition is implicitly true.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fd0c-103">Restituisce null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd0c-103">Returns a null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionLocation">
      <MemberSignature Language="C#" Value="public override Microsoft.Build.Construction.ElementLocation ConditionLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ConditionLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.ConditionLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConditionLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::Build::Construction::ElementLocation ^ ConditionLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fd0c-104">Non usare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd0c-104">Do not use.</span>
          </span>
          <span data-ttu-id="9fd0c-105">L'attributo Condition è inesistente per <see cref="T:Microsoft.Build.Construction.ProjectUsingTaskBodyElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd0c-105">The Condition attribute is nonexistent for <see cref="T:Microsoft.Build.Construction.ProjectUsingTaskBodyElement" />.</span>
          </span>
          <span data-ttu-id="9fd0c-106">Ottiene le generazioni di un errore interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd0c-106">Get throws an internal error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fd0c-107">Genera un errore interno e un restituisce un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd0c-107">Throws an internal error and returns null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public string Evaluate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Evaluate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.Evaluate" />
      <MemberSignature Language="VB.NET" Value="Public Property Evaluate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Evaluate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fd0c-108">Ottiene il valore dell'attributo Evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd0c-108">Gets the value of the Evaluate attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fd0c-109">Restituisce il valore dell'attributo Evaluate, che può essere "true" o "false".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd0c-109">Returns the value of the Evaluate attribute, which is either "true" or "false".</span>
          </span>
          <span data-ttu-id="9fd0c-110">Restituisce "true" se l'attributo non è presente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd0c-110">Returns "true" if the attribute is not present.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fd0c-111">Se è "true", espande i valori di proprietà e l'elemento nel corpo dell'attività inline.</span><span class="sxs-lookup"><span data-stu-id="9fd0c-111">If "true", expands the item and property values in the inline task body.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation EvaluateLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation EvaluateLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.EvaluateLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluateLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ EvaluateLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fd0c-112">Posizione dell'attributo Evaluate sull'elemento, se disponibile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd0c-112">Location of the Evaluate attribute on this element, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fd0c-113">Posizione la posizione dell'attributo Evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd0c-113">Returns Evaluate attribute location.</span>
          </span>
          <span data-ttu-id="9fd0c-114">In assenza di tale attributo, restituisce la posizione dell'elemento, anziché la posizione dell'attributo predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd0c-114">If there is no such attribute, returns the location of the element, instead of the location of the default attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskBody">
      <MemberSignature Language="C#" Value="public string TaskBody { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TaskBody" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.TaskBody" />
      <MemberSignature Language="VB.NET" Value="Public Property TaskBody As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TaskBody { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fd0c-115">Ottiene o imposta il valore non valutato del contenuto dell'attività inline.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd0c-115">Gets or sets the unevaluated value of the contents of the inline task.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fd0c-116">Restituisce il contenuto XML interno non valutato dell'attività inline.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd0c-116">Returns the unevaluated inner XML content of the inline task.</span>
          </span>
          <span data-ttu-id="9fd0c-117">Restituisce una stringa vuota se non è presente alcun corpo dell'attività inline.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd0c-117">Returns an empty string if no inline task body is present.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>