<Type Name="IXmlSerializable" FullName="System.Xml.Serialization.IXmlSerializable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="07f472e239d440bb029fc42deaa18068f7a22d4d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36440572" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXmlSerializable" />
  <TypeSignature Language="F#" Value="type IXmlSerializable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Fornisce la formattazione personalizzata per la serializzazione e deserializzazione XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esistono due motivi per implementare questa interfaccia. La prima consiste nel controllare come l'oggetto serializzato o deserializzato dal <xref:System.Xml.Serialization.XmlSerializer>. Ad esempio, è possibile suddividere i dati in byte anziché il buffer di grandi set di dati, evitando anche l'ingrandimento che si verifica quando i dati vengono codificati utilizzando la codifica Base64. Per controllare la serializzazione, implementare il <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> e <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> metodi per controllare il <xref:System.Xml.XmlReader> e <xref:System.Xml.XmlWriter> classi utilizzate per leggere e scrivere il codice XML. Per un esempio di questo, vedere [procedura: blocco serializzato dati](~/docs/standard/serialization/how-to-chunk-serialized-data.md).  
  
 Il motivo secondo è in grado di controllare lo schema. A tale scopo, è necessario applicare il <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> serializzato digitare e specificare il nome del membro statico che restituisce lo schema. Vedere il <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> per un esempio.  
  
 Una classe che implementa l'interfaccia deve avere un costruttore senza parametri. Questo è un requisito del <xref:System.Xml.Serialization.XmlSerializer> classe.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata un'implementazione del <xref:System.Xml.Serialization.IXmlSerializable> interfaccia che serializza un campo privato.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#0)]
 [!code-csharp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ GetSchema();" />
      <MemberSignature Language="F#" Value="abstract member GetSchema : unit -&gt; System.Xml.Schema.XmlSchema" Usage="iXmlSerializable.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Il metodo è riservato e non deve essere utilizzato. Quando si implementa l'interfaccia <see langword="IXmlSerializable" />, è necessario restituire <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) da questo metodo. Se invece è richiesta la specifica di uno schema personalizzato, applicare <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> alla classe.</summary>
        <returns>Oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> che descrive la rappresentazione XML dell'oggetto prodotto dal metodo <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> e usato dal metodo <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante la serializzazione o deserializzazione di un oggetto, il <xref:System.Xml.Serialization.XmlSerializer> classe non esegue la convalida XML. Per questo motivo, è spesso consigliabile omettere le informazioni sullo schema fornendo un'implementazione semplice di questo metodo, ad esempio restituendo `null` (`Nothing` in Visual Basic).  
  
 Se è necessario fornire informazioni sullo schema, è consigliabile utilizzare il <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> attributo. Il `GetSchema` metodo deve restituire ancora `null` (o `Nothing`).  
  
 Alcuni [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] i tipi, nonché legacy tipi personalizzati che implementano il `IXmlSerializable` interfaccia stia utilizzando `GetSchema` anziché `XmlSchemaProvider`. In questo caso, il metodo restituisce uno schema XML preciso che descrive la rappresentazione XML dell'oggetto generato dal <xref:System.Data.DataSet.WriteXml%2A> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public void ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXml (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadXml : System.Xml.XmlReader -&gt; unit" Usage="iXmlSerializable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Flusso di <see cref="T:System.Xml.XmlReader" /> da cui viene deserializzato l'oggetto.</param>
        <summary>Genera un oggetto dalla relativa rappresentazione XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> metodo deve ricostituire l'oggetto utilizzando le informazioni che è stato scritto dal <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> metodo.  
  
 Quando questo metodo viene chiamato, il lettore è posizionato sul tag di inizio che contiene le informazioni per il tipo. Vale a dire, direttamente sul tag di inizio che indica l'inizio di un oggetto serializzato. Quando termina, questo metodo deve disporre di lettura l'intero elemento dall'inizio alla fine, inclusi tutti i relativi contenuti. A differenza di <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> (metodo), il framework non gestisce automaticamente l'elemento wrapper. L'implementazione deve essere eseguita. Osservare le seguenti regole posizionamento potrebbero che codice generare le eccezioni di runtime imprevisto o dati danneggiati.  
  
 Quando si implementa questo metodo, è opportuno considerare la possibilità che un utente malintenzionato potrebbe fornire una rappresentazione XML ben formata, ma non valida per disabilitare o in caso contrario, modificare il comportamento dell'applicazione.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata un'implementazione del <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> metodo.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#2)]
 [!code-csharp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#2)]  
  
 Nell'esempio seguente viene illustrato l'utilizzo del <xref:System.Xml.Serialization.XmlSerializer> classe per deserializzare questo oggetto.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/reader.cpp#20)]
 [!code-csharp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/reader.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="iXmlSerializable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Flusso <see cref="T:System.Xml.XmlWriter" /> nel quale viene serializzato l'oggetto.</param>
        <summary>Converte un oggetto nella relativa rappresentazione XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> deve scrivere l'implementazione è fornire la rappresentazione XML dell'oggetto. Il framework scrive un elemento wrapper e posiziona il writer XML dopo l'avvio. L'implementazione può scrivere il contenuto, inclusi gli elementi figlio. Il framework chiude quindi l'elemento wrapper.  
  
 Scrivere informazioni sufficienti per la <xref:System.Xml.XmlWriter> flusso per consentire il <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> metodo per ricostituire l'oggetto.  
  
 Ad esempio, se lo stato dell'oggetto include una variabile di matrice, assicurarsi di scrivere la lunghezza della matrice oppure utilizzare un elemento padre per contenere gli elementi che descrivono i valori della matrice, in modo da sapere quanti valori leggere quando l'oggetto viene ricostituito.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata un'implementazione del <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> metodo.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#1)]
 [!code-csharp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#1)]  
  
 Nell'esempio seguente viene illustrato l'utilizzo del <xref:System.Xml.Serialization.XmlSerializer> classe per deserializzare questo oggetto.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/writer.cpp#10)]
 [!code-csharp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/writer.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>