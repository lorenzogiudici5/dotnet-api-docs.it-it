<Type Name="XmlElementAttribute" FullName="System.Xml.Serialization.XmlElementAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f52c99f86df8bcad1587162b029827008d4c7ef8" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37484800" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Indica che una proprietà o un campo public rappresenta un elemento XML quando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza o deserializza l'oggetto in cui è contenuto.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.Serialization.XmlElementAttribute> appartiene a una famiglia di attributi che controlla come il <xref:System.Xml.Serialization.XmlSerializer> serializza o deserializza un oggetto. Per un elenco completo degli attributi simili, vedere [gli attributi che controllano la serializzazione XML](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).  
  
 In genere, un documento XML contiene elementi XML, ognuno dei quali è costituito da tre parti: un tag di apertura con gli eventuali attributi, un tag di chiusura e i dati tra i tag. I tag XML possono essere annidati, ovvero, i dati tra i tag possono essere anche elementi XML. Questa capacità di un elemento per racchiudere un'altra consente di documento contengono gerarchie di dati. Un elemento XML può includere anche gli attributi.  
  
 Applicare il <xref:System.Xml.Serialization.XmlElementAttribute> ai campi pubblici o le proprietà di lettura/scrittura pubblica per controllare le caratteristiche degli elementi XML, ad esempio il nome dell'elemento e lo spazio dei nomi.  
  
 Il <xref:System.Xml.Serialization.XmlElementAttribute> può essere applicato più volte a un campo che restituisce una matrice di oggetti. Lo scopo di questo consiste nello specificare (mediante il <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> proprietà) diversi tipi che possono essere inseriti nella matrice. Ad esempio, la matrice nel codice c# seguente accetta numeri interi e stringhe.  
  
```  
public class Things{  
   [XmlElement(Type = typeof(string)),  
   XmlElement(Type = typeof(int))]  
   public object[] StringsAndInts;  
}  
```  
  
 Il risultato XML potrebbe assomigliare agli elementi seguenti.  
  
```  
<Things>  
   <string>Hello</string>  
   <int>999</int>  
   <string>World</string>  
</Things>  
```  
  
 Si noti che quando si applica il <xref:System.Xml.Serialization.XmlElementAttribute> più volte senza specificare un <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> valore della proprietà, gli elementi vengono denominati dopo il tipo degli oggetti accettabili.  
  
 Se si applica il <xref:System.Xml.Serialization.XmlElementAttribute> a un campo o proprietà che restituisce una matrice, gli elementi nella matrice sono codificati come una sequenza di elementi XML.  
  
 Invece se un <xref:System.Xml.Serialization.XmlElementAttribute> non viene applicato a un campo o una proprietà, gli elementi nella matrice sono codificati come una sequenza di elementi, annidato in un elemento denominato al campo o della proprietà. (Usare il <xref:System.Xml.Serialization.XmlArrayAttribute> e <xref:System.Xml.Serialization.XmlArrayItemAttribute> attributi per controllare la serializzazione di una matrice.)  
  
 È possibile impostare il <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> proprietà per specificare un tipo derivato dal tipo del campo originale o della proprietà, vale a dire, il campo o proprietà a cui è stato applicato il <xref:System.Xml.Serialization.XmlElementAttribute>.  
  
 Se un campo o proprietà restituisce un <xref:System.Collections.ArrayList>, è possibile applicare più istanze del <xref:System.Xml.Serialization.XmlElementAttribute> al membro. Per ogni istanza, impostare il <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> proprietà a un tipo di oggetto che può essere inserito nella matrice.  
  
 Per altre informazioni sull'utilizzo di attributi, vedere [attributi](~/docs/standard/attributes/index.md).  
  
> [!NOTE]
>  È possibile usare la parola `XmlElement` nel codice anziché la forma estesa <xref:System.Xml.Serialization.XmlElementAttribute>.  
  
   
  
## Examples  
 Nell'esempio seguente serializza una classe denominata `Group` e applica il <xref:System.Xml.Serialization.XmlElementAttribute> a molti dei suoi membri. Il campo denominato `Employees` restituisce una matrice di `Employee` oggetti. In questo caso, il <xref:System.Xml.Serialization.XmlElementAttribute> specifica che il codice XML risultante non deve essere annidato (ovvero il comportamento predefinito di elementi in una matrice).  
  
 [!code-cpp[Classic XmlElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlElementAttributes" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
    <altmember cref="T:System.Xml.Serialization.XmlRootAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente applica il <xref:System.Xml.Serialization.XmlElementAttribute> a una classe.  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : string -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">Il nome dell'elemento XML del membro serializzato.</param>
        <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> e di specificare il nome dell'elemento XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, il <xref:System.Xml.Serialization.XmlSerializer> Usa il nome del membro come il nome dell'elemento XML quando si serializza un'istanza della classe. Ad esempio, un campo denominato `Vehicle` genera un elemento XML denominato `Vehicle`. Tuttavia se è necessario un elemento diverso, ad esempio `Cars`, passano il `elementName` parametro.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrata una classe semplice che contiene un campo unico denominato `Vehicles`. Nell'esempio viene applicato il <xref:System.Xml.Serialization.XmlElementAttribute> al campo e include le `elementName` parametro, facendo in modo che il <xref:System.Xml.Serialization.XmlSerializer> per generare gli elementi XML denominati "Cars" anziché "Veicoli operativi".  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : Type -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> di un oggetto derivato dal tipo del membro.</param>
        <summary>Inizializza una nuova istanza di <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> e specifica un tipo per il membro a cui viene applicato <see cref="T:System.Xml.Serialization.XmlElementAttribute" />. Questo tipo viene utilizzato da <see cref="T:System.Xml.Serialization.XmlSerializer" /> durante la serializzazione o la deserializzazione dell'oggetto in cui è contenuto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il `type` parametro per specificare un tipo derivato da una classe di base. Ad esempio, si supponga che una proprietà denominata `MyAnimal` restituisce un `Animal` oggetto. Si desidera ottimizzare l'oggetto, in modo da creare una nuova classe denominata `Mammal` che eredita dal `Animal` classe. Per indicare il <xref:System.Xml.Serialization.XmlSerializer> per accettare il `Mammal` classe durante la serializzazione il `MyAnimal` proprietà, passare il <xref:System.Type> del `Mammal` classe al costruttore.  
  
   
  
## Examples  
 Nell'esempio seguente serializza una classe denominata `Orchestra` che contiene un campo unico denominato `Instruments`, che restituisce una matrice di `Instrument` oggetti. Una seconda classe denominata `Brass` eredita il `Instrument` classe. Nell'esempio viene applicato il <xref:System.Xml.Serialization.XmlElementAttribute> per il `Instruments` campo che specifica il `Brass` tipo, che consente la `Instruments` campo per accettare `Brass` oggetti. L'esempio specifica anche il nome dell'elemento XML impostando il <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> proprietà.  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (string elementName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(System::String ^ elementName, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : string * Type -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute (elementName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="elementName">Il nome dell'elemento XML del membro serializzato.</param>
        <param name="type">
          <see cref="T:System.Type" /> di un oggetto derivato dal tipo del membro.</param>
        <summary>Inizializza una nuova istanza di <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> e specifica il nome dell'elemento XML e un tipo derivato per il membro a cui viene applicato <see cref="T:System.Xml.Serialization.XmlElementAttribute" />. Questo tipo di membro viene utilizzato quando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza l'oggetto in cui è contenuto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, il <xref:System.Xml.Serialization.XmlSerializer> Usa il nome del membro come il nome dell'elemento XML quando si serializza un'istanza della classe. Ad esempio, un campo denominato `Vehicle` genera un elemento XML denominato `Vehicle`. Tuttavia, se è necessario un elemento diverso, ad esempio `Cars`, passano il `elementName` parametro.  
  
 Usare il `type` parametro per specificare un tipo derivato da una classe di base. Ad esempio, si supponga che una proprietà denominata `MyAnimal` restituisce un `Animal` oggetto. Si desidera ottimizzare l'oggetto, in modo da creare una nuova classe denominata `Mammal` che eredita dal `Animal` classe. Per indicare il <xref:System.Xml.Serialization.XmlSerializer> per accettare il `Mammal` classe durante la serializzazione il `MyAnimal` proprietà, passare il <xref:System.Type> del `Mammal` classe al costruttore.  
  
   
  
## Examples  
 Nell'esempio seguente serializza una classe denominata `Orchestra` che contiene un campo unico denominato `Instruments`, che restituisce una matrice di `Instrument` oggetti. Una seconda classe denominata `Brass` eredita il `Instrument` classe. Nell'esempio viene applicato il <xref:System.Xml.Serialization.XmlElementAttribute> per il `Instruments` campo che specifica il `Brass` tipo, che consente la `Instruments` campo per accettare `Brass` oggetti. L'esempio specifica anche il nome dell'elemento XML impostando il <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> proprietà.  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tipo di dati XSD (XML Schema Definition) dell'elemento XML generato da <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
        <value>Un tipo di dati XML Schema secondo la definizione fornita da World Wide Web Consortium (www.w3.org) nel documento "XML Schema Part 2: Datatypes".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nella tabella seguente elenca i tipi di dati semplici di XML Schema con i rispettivi equivalenti.  
  
 Per XML Schema `base64Binary` e `hexBinary` tipi di dati, usare una matrice di <xref:System.Byte> strutture e applicare una <xref:System.Xml.Serialization.XmlElementAttribute> con il <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> impostato su "base64Binary" o "hexBinary", come appropriato. Per lo Schema XML `time` e `date` tipi di dati, utilizzare il <xref:System.DateTime> type e applicare il <xref:System.Xml.Serialization.XmlElementAttribute> con il <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> impostato su "Data" o "ora".  
  
 Per ogni tipo di XML Schema è mappata a una stringa, si applicano i <xref:System.Xml.Serialization.XmlElementAttribute> con relativo <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> proprietà impostata sul tipo di XML Schema. È possibile che questo può cambiare il formato di serializzazione, non solo lo schema per il membro.  
  
> [!NOTE]
>  La proprietà è tra maiuscole e minuscole, pertanto è necessario impostarlo esattamente a uno dei tipi di dati XML Schema.  
  
> [!NOTE]
>  Elemento passando i dati binari come una stringa XML è più efficiente e passargli come attributo XML Schema.  
  
 Per altre informazioni sui tipi di dati XML, vedere il documento del World Wide Web Consortium (www.w3.org) denominato "XML Schema Part 2: Datatypes".  
  
|Tipo di dati XSD|Tipo di dati .NET|  
|-------------------|--------------------|  
|anyURI|<xref:System.String>|  
|base64Binary|Matrice di <xref:System.Byte> oggetti|  
|boolean|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|date|<xref:System.DateTime>|  
|dateTime|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|ENTITY|<xref:System.String>|  
|ENTITÀ|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|Matrice di <xref:System.Byte> oggetti|  
|Id|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|numero intero|<xref:System.String>|  
|language|<xref:System.String>|  
|long|<xref:System.Int64>|  
|nome|<xref:System.String>|  
|NCName|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTATION|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|duration|<xref:System.String>|  
|stringa|<xref:System.String>|  
|short|<xref:System.Int16>|  
|ora|<xref:System.DateTime>|  
|token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 Nell'esempio seguente serializza una classe denominata `Group` che contiene un campo denominato `ExtraInfo`, che restituisce un <xref:System.Collections.ArrayList>. L'esempio applica due istanze del <xref:System.Xml.Serialization.XmlElementAttribute> al campo e consente di specificare diversi <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> valori per ogni istanza. Consente a ogni istanza di <xref:System.Xml.Serialization.XmlSerializer> per serializzare i tipi specificati inseriti nella matrice.  
  
 [!code-cpp[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Non è possibile eseguire il mapping del tipo di dati XML Schema al tipo di dati .NET.</exception>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome dell'elemento XML generato.</summary>
        <value>Il nome dell'elemento XML generato. Il valore predefinito è l'identificatore del membro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Specificare un <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> se si desidera che il nome dell'elemento XML generato sia diverso dall'identificatore del membro.  
  
 È possibile impostare lo stesso <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> valore a più di un membro di classe, se il documento XML generato utilizza gli spazi dei nomi XML per distinguere tra i membri con nomi identico. Per informazioni dettagliate su come usare gli spazi dei nomi e i nomi con prefissi nel documento XML, vedere il <xref:System.Xml.Serialization.XmlSerializerNamespaces> classe.  
  
   
  
## Examples  
 L'esempio seguente imposta la <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> proprietà di un <xref:System.Xml.Serialization.XmlElementAttribute> su un nuovo valore.  
  
 [!code-cpp[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName" />
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Xml.Schema.XmlSchemaForm with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'elemento è completo.</summary>
        <value>Uno dei valori di <see cref="T:System.Xml.Schema.XmlSchemaForm" />. Il valore predefinito è <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> proprietà determina se un elemento XML è o non qualificati. Il <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> proprietà conforme alla specifica World Wide Web Consortium (www.w3.org) 1999, "Namespaces in XML".  
  
 Se il <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> è impostata su qualsiasi valore, il tentativo di impostare il <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> proprietà `XmlSchemaForm.Unqualified` genera un'eccezione. L'impostazione predefinita, `XmlSchemaForm.None`, indica il <xref:System.Xml.Serialization.XmlSerializer> per controllare lo schema per il documento XML determinare se lo spazio dei nomi è completo. Se lo schema non specifica un valore per un singolo elemento o attributo, il <xref:System.Xml.Serialization.XmlSerializer> utilizza le `elementFormDefault` e `attributeFormDefault` valori per determinare se un elemento o attributo è qualificato. Il codice XML seguente mostra uno schema:  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified"... >  
 <element name="Name"/>  
 <attribute name="Number"/>  
</schema>  
```  
  
 Quando il <xref:System.Xml.Serialization.XmlSerializer> legge lo schema, il <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> valore sia per il `Name` e `Number` viene `XmlSchemaForm.None`, ma la `Name` elemento è qualificato, mentre il `Number` elemento non è qualificato.  
  
   
  
## Examples  
 L'esempio seguente imposta la <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> proprietà `XmlSchemaForm.Unqualified`.  
  
 [!code-cpp[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se <see cref="T:System.Xml.Serialization.XmlSerializer" /> deve serializzare un membro impostato su <see langword="null" /> come un tag vuoto con l'attributo <see langword="xsi:nil" /> impostato su <see langword="true" />.</summary>
        <value>
          <see langword="true" /> se l'attributo <see langword="xsi:nil" /> viene generato dalla classe <see cref="T:System.Xml.Serialization.XmlSerializer" />; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La specifica di XML schema per le strutture consente a un documento XML da segnalare in modo esplicito che manca il contenuto di un elemento. Tale elemento contiene l'attributo `xsi:nil` impostato su `true`. Per altre informazioni, vedere la specifica World Wide Web Consortium (www.w3.org), "XML Schema Part 1: Structures".  
  
 Se il <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> è impostata su `true`, il `xsi:nil` attributo viene generato per i membri di classe che sono stati impostati su `null`. Ad esempio se si imposta un campo denominato `MyStringArray` al `null`, il <xref:System.Xml.Serialization.XmlSerializer> genera il codice XML seguente.  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 Se il <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> proprietà viene `false`, viene generato alcun elemento XML per i membri di classe che sono stati impostati su `null`.  
  
> [!NOTE]
>  Non è possibile applicare il <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> proprietà a un membro è tipizzato come un tipo di valore perché non può contenere un tipo di valore `null`. Inoltre, è possibile impostare questa proprietà `false` per i tipi di valore nullable. Quando questi tipi sono `null`, vengono serializzati tramite l'impostazione `xsi:nil` a `true`.  
  
   
  
## Examples  
 L'esempio seguente mostra un campo con il <xref:System.Xml.Serialization.XmlElementAttribute> applicato e il <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> impostata su `false`.  
  
 [!code-cpp[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta lo spazio dei nomi assegnato all'elemento XML restituito quando la classe viene serializzata.</summary>
        <value>Lo spazio dei nomi dell'elemento XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> proprietà conforme alla specifica World Wide Web Consortium (www.w3.org), "Namespaces in XML".  
  
 Per creare gli spazi dei nomi che sono associati a un prefisso, è necessario creare un <xref:System.Xml.Serialization.XmlSerializerNamespaces> che contiene gli spazi dei nomi e i prefissi utilizzati nel documento XML. Quando si imposta lo spazio dei nomi per ognuno <xref:System.Xml.Serialization.XmlArrayAttribute>, deve corrispondere a uno degli spazi dei nomi nel <xref:System.Xml.Serialization.XmlSerializerNamespaces>. Quando viene generato il codice XML, ogni matrice il prefisso corretto con il prefisso associato allo spazio dei nomi specificato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Order : int with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'ordine esplicito in cui gli elementi vengono serializzati o deserializzati.</summary>
        <value>Ordine di generazione del codice.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> enumerazione per indicare il <xref:System.Web.Services.Description.ServiceDescriptionImporter> per generare il codice che imposta il <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> proprietà.  
  
> [!IMPORTANT]
>  Una volta il <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> proprietà è stata utilizzata su una proprietà pubblica o un campo in un tipo, deve essere applicata a tutte le proprietà e campi pubblici per quel tipo e tutti i tipi ereditati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tipo di oggetto utilizzato per rappresentare l'elemento XML.</summary>
        <value>Il <see cref="T:System.Type" /> del membro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> proprietà per specificare un tipo derivato per un campo o proprietà.  
  
 Se un campo o proprietà restituisce un <xref:System.Collections.ArrayList>, è possibile applicare più istanze del <xref:System.Xml.Serialization.XmlElementAttribute> al membro. Per ogni istanza, impostare il <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> proprietà a un tipo di oggetto che può essere inserito nella matrice.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> proprietà per specificare un oggetto derivato per un <xref:System.Xml.Serialization.XmlElementAttribute>. Nell'esempio si applica anche tre istanze del <xref:System.Xml.Serialization.XmlElementAttribute> a un campo che restituisce un <xref:System.Collections.ArrayList>. Ogni istanza specifica di un tipo consentito nel campo.  
  
 [!code-cpp[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>