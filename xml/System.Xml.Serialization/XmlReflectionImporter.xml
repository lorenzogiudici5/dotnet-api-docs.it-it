<Type Name="XmlReflectionImporter" FullName="System.Xml.Serialization.XmlReflectionImporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="06c93e09947225d5f2642793c7f44e6e8b1e04a3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36439204" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlReflectionImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlReflectionImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlReflectionImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlReflectionImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlReflectionImporter" />
  <TypeSignature Language="F#" Value="type XmlReflectionImporter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Genera mapping a dichiarazioni di elementi dello schema XML, incluse parti di messaggi XSD (XML Schema Definition) letterali in un documento nel linguaggio di descrizione dei servizi Web (WSDL, Web Services Description Language), per tipi .NET Framework o informazioni dei metodi di servizi Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.Serialization.XmlReflectionImporter> classe non viene utilizzata direttamente. Al contrario, viene utilizzata come indicato di seguito:  
  
-   Per il <xref:System.Web.Services.Description.ServiceDescriptionReflector> classe durante la creazione <xref:System.Web.Services.Description.ServiceDescription> oggetti dalle classi che vengono identificati come servizi Web.  
  
-   Da un servizio Web o un client, tra cui durante l'inizializzazione.  
  
-   Per inizializzare un <xref:System.Xml.Serialization.XmlSerializer> oggetto.  
  
-   Per lo strumento XML Schema Definition (Xsd.exe) durante lo strumento genera schemi XML da tipi in un file di assembly di runtime.  
  
-   Per lo strumento di Web Services Description Language (Wsdl.exe) durante lo strumento genera le classi proxy del client o classi astratte server da un documento WSDL.  
  
 Il <xref:System.Xml.Serialization.XmlReflectionImporter> classe viene utilizzata per i servizi Web quando un servizio o client specifica:  
  
-   Utilizzo letterale, che indica che il contenuto di SOAP messaggio parametri e valori restituiti (o documenti di richiesta e risposta) viene specificato in modo letterale con definizioni di schema XML.  
  
-   Non-SOAP le implementazioni dei servizi Web utilizzando le operazioni HTTP-GET e HTTP-POST.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è necessario creare un'istanza di un <xref:System.Xml.Serialization.XmlReflectionImporter> direttamente l'oggetto.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter (string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (defaultNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter(System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlReflectionImporter : string -&gt; System.Xml.Serialization.XmlReflectionImporter" Usage="new System.Xml.Serialization.XmlReflectionImporter defaultNamespace" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="defaultNamespace">Spazio dei nomi XML predefinito da utilizzare per i mapping di tipi importati.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> utilizzando lo spazio dei nomi XML predefinito specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è necessario creare un'istanza di <xref:System.Xml.Serialization.XmlReflectionImporter> direttamente alla classe.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter (System.Xml.Serialization.XmlAttributeOverrides attributeOverrides);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlAttributeOverrides attributeOverrides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeOverrides As XmlAttributeOverrides)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter(System::Xml::Serialization::XmlAttributeOverrides ^ attributeOverrides);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlReflectionImporter : System.Xml.Serialization.XmlAttributeOverrides -&gt; System.Xml.Serialization.XmlReflectionImporter" Usage="new System.Xml.Serialization.XmlReflectionImporter attributeOverrides" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeOverrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
      </Parameters>
      <Docs>
        <param name="attributeOverrides">Oggetto che esegue l'override del modo in cui la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza i tipi mappati.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> utilizzando gli override di serializzazione XML specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è necessario creare un'istanza di <xref:System.Xml.Serialization.XmlReflectionImporter> direttamente alla classe.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter (System.Xml.Serialization.XmlAttributeOverrides attributeOverrides, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlAttributeOverrides attributeOverrides, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeOverrides As XmlAttributeOverrides, defaultNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter(System::Xml::Serialization::XmlAttributeOverrides ^ attributeOverrides, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlReflectionImporter : System.Xml.Serialization.XmlAttributeOverrides * string -&gt; System.Xml.Serialization.XmlReflectionImporter" Usage="new System.Xml.Serialization.XmlReflectionImporter (attributeOverrides, defaultNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeOverrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeOverrides">Oggetto che esegue l'override del modo in cui la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza i tipi mappati.</param>
        <param name="defaultNamespace">Spazio dei nomi XML predefinito da utilizzare per i mapping di tipi importati.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> utilizzando gli override di serializzazione XML e lo spazio dei nomi XML predefinito specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è necessario creare un'istanza di <xref:System.Xml.Serialization.XmlReflectionImporter> direttamente alla classe.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportMembersMapping">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce mapping interni di tipi utilizzando le informazioni provenienti da un metodo di servizio Web.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement);" />
      <MemberSignature Language="F#" Value="member this.ImportMembersMapping : string * string * System.Xml.Serialization.XmlReflectionMember[] * bool -&gt; System.Xml.Serialization.XmlMembersMapping" Usage="xmlReflectionImporter.ImportMembersMapping (elementName, ns, members, hasWrapperElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementName">Nome di elemento XML prodotto dal metodo di servizio Web.</param>
        <param name="ns">Spazio dei nomi di un elemento XML prodotto dal metodo di servizio Web.</param>
        <param name="members">Matrice di oggetti <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> che contengono entità di codice .NET Framework che appartengono a un metodo di servizio Web.</param>
        <param name="hasWrapperElement">
          <see langword="true" /> se gli elementi che corrispondono alle parti di un messaggio WSDL devono essere racchiusi in un elemento wrapper aggiuntivo in un messaggio SOAP; in caso contrario, <see langword="false" />.</param>
        <summary>Genera mapping interni di tipi per le informazioni provenienti da un metodo di servizio Web.</summary>
        <returns>Classe <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> con mapping alle parti elemento di una definizione di messaggio WSDL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping%2A> metodo viene chiamato durante l'inizializzazione di un servizio Web o un client o la reflection di un servizio Web. Non è necessario chiamarlo direttamente.  
  
 Il <xref:System.Xml.Serialization.XmlReflectionMember> parametro di matrice può essere costituito da una delle operazioni seguenti:  
  
-   Parametri inpui metodo servizio Web.  
  
-   Parametri di output metodo servizio Web, oltre al tipo restituito, se diverso da void, in corrispondenza dell'indice 0.  
  
-   Intestazioni SOAP di input.  
  
-   Intestazioni SOAP di output.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean, rpc As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement, bool rpc);" />
      <MemberSignature Language="F#" Value="member this.ImportMembersMapping : string * string * System.Xml.Serialization.XmlReflectionMember[] * bool * bool -&gt; System.Xml.Serialization.XmlMembersMapping" Usage="xmlReflectionImporter.ImportMembersMapping (elementName, ns, members, hasWrapperElement, rpc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="rpc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementName">Nome di elemento XML prodotto dal metodo di servizio Web.</param>
        <param name="ns">Spazio dei nomi di un elemento XML prodotto dal metodo di servizio Web.</param>
        <param name="members">Matrice di oggetti <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> che contengono entità di codice .NET Framework che appartengono a un metodo di servizio Web.</param>
        <param name="hasWrapperElement">
          <see langword="true" /> se gli elementi che corrispondono alle parti di un messaggio WSDL devono essere racchiusi in un elemento wrapper aggiuntivo in un messaggio SOAP; in caso contrario, <see langword="false" />.</param>
        <param name="rpc">
          <see langword="true" /> se il metodo è una chiamata di procedura remota; in caso contrario, <see langword="false" />.</param>
        <summary>Restituisce mapping interni di tipi utilizzando informazioni derivate da un metodo di servizio Web e consente di specificare un nome di elemento XML, uno spazio dei nomi XML e altre opzioni.</summary>
        <returns>Oggetto <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> che contiene i mapping.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean, rpc As Boolean, openModel As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement, bool rpc, bool openModel);" />
      <MemberSignature Language="F#" Value="member this.ImportMembersMapping : string * string * System.Xml.Serialization.XmlReflectionMember[] * bool * bool * bool -&gt; System.Xml.Serialization.XmlMembersMapping" Usage="xmlReflectionImporter.ImportMembersMapping (elementName, ns, members, hasWrapperElement, rpc, openModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="rpc" Type="System.Boolean" />
        <Parameter Name="openModel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementName">Nome di elemento XML prodotto dal metodo di servizio Web.</param>
        <param name="ns">Spazio dei nomi di un elemento XML prodotto dal metodo di servizio Web.</param>
        <param name="members">Matrice di oggetti <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> che contengono entità di codice .NET Framework che appartengono a un metodo di servizio Web.</param>
        <param name="hasWrapperElement">
          <see langword="true" /> se gli elementi che corrispondono alle parti di un messaggio WSDL devono essere racchiusi in un elemento wrapper aggiuntivo in un messaggio SOAP; in caso contrario, <see langword="false" />.</param>
        <param name="rpc">
          <see langword="true" /> se il metodo è una chiamata di procedura remota; in caso contrario, <see langword="false" />.</param>
        <param name="openModel">
          <see langword="true" /> per specificare che il tipo di schema generato verrà contrassegnato con l'elemento <see langword="&lt;xs:anyAttribute&gt;" />; in caso contrario, <see langword="false" />.</param>
        <summary>Restituisce mapping interni di tipi utilizzando informazioni derivate da un metodo di servizio Web e consente di specificare un nome di elemento XML, uno spazio dei nomi XML e altre opzioni.</summary>
        <returns>Oggetto <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> che contiene i mapping.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel, System.Xml.Serialization.XmlMappingAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel, valuetype System.Xml.Serialization.XmlMappingAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean, rpc As Boolean, openModel As Boolean, access As XmlMappingAccess) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement, bool rpc, bool openModel, System::Xml::Serialization::XmlMappingAccess access);" />
      <MemberSignature Language="F#" Value="member this.ImportMembersMapping : string * string * System.Xml.Serialization.XmlReflectionMember[] * bool * bool * bool * System.Xml.Serialization.XmlMappingAccess -&gt; System.Xml.Serialization.XmlMembersMapping" Usage="xmlReflectionImporter.ImportMembersMapping (elementName, ns, members, hasWrapperElement, rpc, openModel, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="rpc" Type="System.Boolean" />
        <Parameter Name="openModel" Type="System.Boolean" />
        <Parameter Name="access" Type="System.Xml.Serialization.XmlMappingAccess" />
      </Parameters>
      <Docs>
        <param name="elementName">Nome di elemento XML prodotto dal metodo di servizio Web.</param>
        <param name="ns">Spazio dei nomi di un elemento XML prodotto dal metodo di servizio Web.</param>
        <param name="members">Matrice di oggetti <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> che contengono entità di codice .NET Framework che appartengono a un metodo di servizio Web.</param>
        <param name="hasWrapperElement">
          <see langword="true" /> se gli elementi che corrispondono alle parti di un messaggio WSDL devono essere racchiusi in un elemento wrapper aggiuntivo in un messaggio SOAP; in caso contrario, <see langword="false" />.</param>
        <param name="rpc">
          <see langword="true" /> se il metodo è una chiamata di procedura remota; in caso contrario, <see langword="false" />.</param>
        <param name="openModel">
          <see langword="true" /> per specificare che il tipo di schema generato verrà contrassegnato con l'elemento <see langword="&lt;xs:anyAttribute&gt;" />; in caso contrario, <see langword="false" />.</param>
        <param name="access">Uno dei valori di <see cref="T:System.Xml.Serialization.XmlMappingAccess" />. Il valore predefinito è <see langword="None" />.</param>
        <summary>Genera mapping interni di tipi per le informazioni provenienti da un metodo di servizio Web.</summary>
        <returns>Oggetto <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> che contiene i mapping.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportTypeMapping">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Genera un mapping a un elemento dello schema XML per un tipo .NET Framework specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.ImportTypeMapping : Type -&gt; System.Xml.Serialization.XmlTypeMapping" Usage="xmlReflectionImporter.ImportTypeMapping type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Tipo .NET Framework per cui generare un mapping dei tipi.</param>
        <summary>Genera un mapping a un elemento dello schema XML per un tipo .NET Framework specificato.</summary>
        <returns>Mapping .NET Framework interno tra un tipo e un elemento dello schema XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è necessario chiamare il <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> metodo direttamente.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="member this.ImportTypeMapping : Type * string -&gt; System.Xml.Serialization.XmlTypeMapping" Usage="xmlReflectionImporter.ImportTypeMapping (type, defaultNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Tipo .NET Framework per cui generare un mapping dei tipi.</param>
        <param name="defaultNamespace">Spazio dei nomi XML predefinito da utilizzare.</param>
        <summary>Genera un mapping a un elemento dello schema XML per un tipo .NET Framework utilizzando il tipo e lo spazio dei nomi specificati.</summary>
        <returns>Mapping .NET Framework interno tra un tipo e un elemento dello schema XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è necessario chiamare il <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> metodo direttamente.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, System.Xml.Serialization.XmlRootAttribute root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, class System.Xml.Serialization.XmlRootAttribute root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type, System::Xml::Serialization::XmlRootAttribute ^ root);" />
      <MemberSignature Language="F#" Value="member this.ImportTypeMapping : Type * System.Xml.Serialization.XmlRootAttribute -&gt; System.Xml.Serialization.XmlTypeMapping" Usage="xmlReflectionImporter.ImportTypeMapping (type, root)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
      </Parameters>
      <Docs>
        <param name="type">Tipo .NET Framework per cui generare un mapping dei tipi.</param>
        <param name="root">Attributo <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> che viene applicato al tipo.</param>
        <summary>Genera un mapping a un elemento dello schema XML per un tipo .NET Framework utilizzando il tipo e l'attributo specificati.</summary>
        <returns>Classe <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> che rappresenta un mapping tra un tipo .NET Framework e un elemento dello schema XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è necessario chiamare il <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> metodo direttamente.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="member this.ImportTypeMapping : Type * System.Xml.Serialization.XmlRootAttribute * string -&gt; System.Xml.Serialization.XmlTypeMapping" Usage="xmlReflectionImporter.ImportTypeMapping (type, root, defaultNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Tipo .NET Framework per cui generare un mapping dei tipi.</param>
        <param name="root">Attributo <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> che viene applicato al tipo.</param>
        <param name="defaultNamespace">Spazio dei nomi XML predefinito da utilizzare.</param>
        <summary>Genera un mapping a un elemento dello schema XML per un tipo .NET Framework utilizzando il tipo, l'attributo e lo spazio dei nomi specificati.</summary>
        <returns>Classe <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> che contiene il mapping .NET Framework interno tra un tipo e un elemento dello schema XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è necessario chiamare il <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> metodo direttamente.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IncludeType">
      <MemberSignature Language="C#" Value="public void IncludeType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncludeType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncludeType(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.IncludeType : Type -&gt; unit" Usage="xmlReflectionImporter.IncludeType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Tipo .NET Framework per cui salvare informazioni dei mapping dei tipi.</param>
        <summary>Include i mapping relativi a un tipo per utilizzarli successivamente, quando vengono richiamati i metodi di importazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è necessario chiamare il <xref:System.Xml.Serialization.XmlReflectionImporter.IncludeType%2A> metodo direttamente.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IncludeTypes">
      <MemberSignature Language="C#" Value="public void IncludeTypes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncludeTypes(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncludeTypes (provider As ICustomAttributeProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncludeTypes(System::Reflection::ICustomAttributeProvider ^ provider);" />
      <MemberSignature Language="F#" Value="member this.IncludeTypes : System.Reflection.ICustomAttributeProvider -&gt; unit" Usage="xmlReflectionImporter.IncludeTypes provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Istanza della classe <see cref="T:System.Reflection.ICustomAttributeProvider" /> che contiene attributi personalizzati derivati dall'attributo <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</param>
        <summary>Include i mapping relativi a tipi derivati per utilizzarli successivamente, quando vengono richiamati i metodi di importazione.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>