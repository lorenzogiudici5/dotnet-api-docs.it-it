<Type Name="XmlSerializer" FullName="System.Xml.Serialization.XmlSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d07956b41790d10b90106ace692180cac099fd6d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30721615" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Serializza e deserializza oggetti in e da documenti XML. <see cref="T:System.Xml.Serialization.XmlSerializer" /> consente di controllare le modalità di codifica degli oggetti in XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La serializzazione XML è il processo di conversione delle proprietà e dei campi pubblici di un oggetto in un formato seriale (in questo caso, XML) per l'archiviazione o il trasporto. La deserializzazione ricrea l'oggetto nello stato originale nell'output XML. È possibile considerare la serializzazione come un modo per salvare lo stato di un oggetto in un flusso o buffer. Ad esempio, ASP.NET utilizza il <xref:System.Xml.Serialization.XmlSerializer> per la codifica di messaggi del servizio Web XML.  
  
 I dati negli oggetti sono descritti tramite costrutti del linguaggio di programmazione come classi, campi, proprietà, tipi primitivi, matrici, nonché XML incorporati sotto forma di oggetti <xref:System.Xml.XmlElement> o <xref:System.Xml.XmlAttribute>. È possibile scegliere di creare le classi, annotate con gli attributi o utilizzare il [XML Schema Definition Tool (Xsd.exe)](http://msdn.microsoft.com/library/a6e6e65c-347f-4494-9457-653bf29baac2) per generare le classi basate su un documento di XML Schema definition (XSD) esistente. Se si dispone di uno Schema XML, è possibile eseguire il Xsd.exe per produrre un set di classi fortemente tipizzate rispetto allo schema e annotati con attributi di essere conforme allo schema di serializzazione.  
  
 Per trasferire dati tra oggetti e XML richiede un mapping dai costrutti di linguaggio di programmazione allo schema XML e da XML schema per i costrutti di linguaggio di programmazione. Il <xref:System.Xml.Serialization.XmlSerializer> e gli strumenti correlati come Xsd.exe fungono da ponte tra queste due tecnologie in fase di progettazione e runtime. In fase di progettazione, utilizzare il Xsd.exe per produrre un documento XML schema (XSD) dalle classi personalizzate o per generare classi da un determinato schema. In entrambi i casi, le classi sono annotate con gli attributi personalizzati per indicare il <xref:System.Xml.Serialization.XmlSerializer> come eseguire il mapping tra il sistema di schema XML e common language runtime. In fase di esecuzione, le istanze delle classi possono essere serializzate in documenti XML che seguono lo schema specificato. Analogamente, i documenti XML possono essere deserializzati in oggetti di runtime. Si noti che il XML schema è facoltativo e non necessario in fase di progettazione o in fase di esecuzione.  
  
## <a name="controlling-generated-xml"></a>Controllo del codice XML generato  
 Per controllare il codice XML generato, è possibile applicare attributi speciali alle classi e membri. Per specificare un nome di elemento XML diverso, ad esempio, applicare un <xref:System.Xml.Serialization.XmlElementAttribute> per un campo pubblico o una proprietà e un set di <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> proprietà. Per un elenco completo di attributi simili, vedere [attributi che controllano la serializzazione XML](http://msdn.microsoft.com/library/414b820f-a696-4206-b576-2711d85490c7). È anche possibile implementare il <xref:System.Xml.Serialization.IXmlSerializable> interfaccia per controllare l'output XML.  
  
 Se il codice XML generato deve essere conforme alla sezione 5 del documento World Wide Web Consortium (www.w3.org), "Simple Object Access Protocol (SOAP) 1.1", è necessario costruire la <xref:System.Xml.Serialization.XmlSerializer> con un <xref:System.Xml.Serialization.XmlTypeMapping>. Per controllare il codice XML con codifica SOAP ulteriormente, utilizzare gli attributi elencati nel [attributi che controllano con codifica SOAP la serializzazione](http://msdn.microsoft.com/library/93ee258c-9c0f-4a08-897c-c10db7a00f91).  
  
 Con il <xref:System.Xml.Serialization.XmlSerializer> è possibile sfruttare i vantaggi dell'utilizzo di classi fortemente tipizzate e ancora la flessibilità di XML. Utilizzando i campi e proprietà di tipo <xref:System.Xml.XmlElement>, <xref:System.Xml.XmlAttribute> o <xref:System.Xml.XmlNode> nelle classi fortemente tipizzate, è possibile leggere parti del documento XML direttamente negli oggetti XML.  
  
 Se si lavora con schemi XML estendibili, è inoltre possibile utilizzare il <xref:System.Xml.Serialization.XmlAnyElementAttribute> e <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> gli attributi per serializzare e deserializzare gli elementi o attributi che non si trovano nello schema originale. Per utilizzare gli oggetti, applicare un <xref:System.Xml.Serialization.XmlAnyElementAttribute> a un campo che restituisce una matrice di <xref:System.Xml.XmlElement> oggetti o applicare un <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> a un campo che restituisce una matrice di <xref:System.Xml.XmlAttribute> oggetti.  
  
 Se una proprietà o un campo restituisce un oggetto complesso (come una matrice o l'istanza di una classe), <xref:System.Xml.Serialization.XmlSerializer> lo converte in un elemento annidato nel documento XML principale. Ad esempio, la prima classe nel codice seguente restituisce un'istanza della classe secondo.  
  
```vb  
Public Class MyClass  
    Public MyObjectProperty As MyObject  
End Class  
  
Public Class MyObject  
    Public ObjectName As String  
End Class  
```  
  
```csharp  
public class MyClass  
{  
    public MyObject MyObjectProperty;  
}  
public class MyObject  
{  
    public string ObjectName;  
}  
```  
  
 La serializzazione, l'output XML è simile al seguente:  
  
```  
<MyClass>  
  <MyObjectProperty>  
  <ObjectName>My String</ObjectName>  
  </MyObjectProperty>  
</MyClass>  
```  
  
 Se uno schema include un elemento facoltativo (minOccurs = '0'), o se lo schema include un valore predefinito, sono disponibili due opzioni. È possibile utilizzare <xref:System.ComponentModel.DefaultValueAttribute?displayProperty=nameWithType> per specificare il valore predefinito, come illustrato nel codice seguente.  
  
```vb  
Public Class PurchaseOrder  
    <System.ComponentModel.DefaultValueAttribute ("2002")> _  
    Public Year As String  
End Class  
```  
  
```csharp  
public class PurchaseOrder  
{  
    [System.ComponentModel.DefaultValueAttribute ("2002")]  
    public string Year;  
}  
```  
  
 Un'altra opzione consiste nell'utilizzare un modello speciale per creare un campo booleano riconosciuto dal <xref:System.Xml.Serialization.XmlSerializer>e applicare il <xref:System.Xml.Serialization.XmlIgnoreAttribute> al campo. Il modello viene creato sotto forma di `propertyNameSpecified`. Ad esempio, se è un campo denominato "MyFirstName", si creerà anche un campo denominato "MyFirstNameSpecified" che indica il <xref:System.Xml.Serialization.XmlSerializer> se generare l'elemento XML denominato "MyFirstName". come illustrato nell'esempio riportato di seguito.  
  
```vb  
Public Class OptionalOrder  
    ' This field's value should not be serialized   
    ' if it is uninitialized.  
    Public FirstOrder As String  
  
    ' Use the XmlIgnoreAttribute to ignore the   
    ' special field named "FirstOrderSpecified".  
    <System.Xml.Serialization.XmlIgnoreAttribute> _  
    Public FirstOrderSpecified As Boolean  
End Class  
```  
  
```csharp  
public class OptionalOrder  
{  
    // This field should not be serialized   
    // if it is uninitialized.  
    public string FirstOrder;  
  
    // Use the XmlIgnoreAttribute to ignore the   
    // special field named "FirstOrderSpecified".  
    [System.Xml.Serialization.XmlIgnoreAttribute]  
    public bool FirstOrderSpecified;  
}  
```  
  
## <a name="overriding-default-serialization"></a>Override della serializzazione predefinita  
 È inoltre possibile sostituire la serializzazione di un insieme di oggetti e i relativi campi e proprietà creando uno degli attributi appropriati e aggiungerlo a un'istanza del <xref:System.Xml.Serialization.XmlAttributes> classe. Override della serializzazione in questo modo ha due utilizzi: in primo luogo, è possibile controllare e migliorare la serializzazione degli oggetti presenti in una DLL, anche se non si ha accesso all'origine; in secondo luogo, è possibile creare un set di classi serializzabili, ma serializzare gli oggetti in diversi modi. Per ulteriori informazioni, vedere il <xref:System.Xml.Serialization.XmlAttributeOverrides> classe e [procedura: controllo della serializzazione di classi derivate da](http://msdn.microsoft.com/library/caa92596-9e15-4d91-acbe-56911ef47a84).  
  
 Per serializzare un oggetto, chiamare il <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> metodo. Per deserializzare un oggetto, chiamare il <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> metodo.  
  
 Per aggiungere spazi dei nomi XML in un documento XML, vedere <xref:System.Xml.Serialization.XmlSerializerNamespaces>.  
  
> [!NOTE]
>  Il <xref:System.Xml.Serialization.XmlSerializer> alle classi che implementano un trattamento speciale per <xref:System.Collections.IEnumerable> o <xref:System.Collections.ICollection>. Una classe che implementa <xref:System.Collections.IEnumerable> deve implementare un metodo `Add` pubblico che accetta un solo parametro. Il `Add` parametro del metodo deve essere dello stesso tipo, come restituito dal `Current` proprietà sul valore restituito da `GetEnumerator`, o una delle basi del tipo specificato. Una classe che implementa <xref:System.Collections.ICollection> (ad esempio <xref:System.Collections.CollectionBase>) oltre a <xref:System.Collections.IEnumerable> deve avere un pubblico `Item` proprietà indicizzata (indicizzatore in c#) che accetta un numero intero e deve avere un pubblico `Count` proprietà di tipo integer. Il parametro per il `Add` metodo deve essere lo stesso tipo di quello restituito dal `Item` proprietà o una delle basi del tipo specificato. Per le classi che implementano <xref:System.Collections.ICollection>, i valori da serializzare vengono recuperati da indicizzata `Item` proprietà, non chiamando `GetEnumerator`.  
  
 È necessario disporre dell'autorizzazione di scrittura alla directory temporanea (come definito dalla variabile di ambiente TEMP) per deserializzare un oggetto.  
  
## <a name="dynamically-generated-assemblies"></a>Assembly generati in modo dinamico  
 Per migliorare le prestazioni, l'infrastruttura di serializzazione XML generati in modo dinamico gli assembly per serializzare e deserializzare tipi specificati. L'infrastruttura rileva e riutilizza tali assembly. Questo comportamento si verifica solo quando si utilizza i seguenti costruttori:  
  
 <xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%29?displayProperty=nameWithType>  
  
 <xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.String%29?displayProperty=nameWithType>  
  
 Se si utilizza uno degli altri costruttori, più versioni dello stesso assembly vengono generate e non vengono mai scaricate, determinando una perdita di memoria e una riduzione delle prestazioni. La soluzione più semplice consiste nell'utilizzare uno dei due costruttori indicati in precedenza. In caso contrario, è necessario memorizzare nella cache gli assembly in un <xref:System.Collections.Hashtable>, come illustrato nell'esempio seguente.  
  
```csharp  
Hashtable serializers = new Hashtable();  
  
// Use the constructor that takes a type and XmlRootAttribute.  
XmlSerializer s = new XmlSerializer(typeof(MyClass), myRoot);  
  
// Implement a method named GenerateKey that creates unique keys   
// for each instance of the XmlSerializer. The code should take   
// into account all parameters passed to the XmlSerializer   
// constructor.  
object key = GenerateKey(typeof(MyClass), myRoot);  
  
// Check the local cache for a matching serializer.  
XmlSerializer ser = (XmlSerializer)serializers[key];  
if (ser == null)   
{  
    ser = new XmlSerializer(typeof(MyClass), myRoot);  
    // Cache the serializer.  
    serializers[key] = ser;  
}  
else  
{  
    // Use the serializer to serialize, or deserialize.  
}  
```  
  
```vb  
Dim serializers As New Hashtable()  
  
' Use the constructor that takes a type and XmlRootAttribute.  
Dim s As New XmlSerializer(GetType([MyClass]), myRoot)  
  
' Implement a method named GenerateKey that creates unique keys   
' for each instance of the XmlSerializer. The code should take   
' into account all parameters passed to the XmlSerializer   
' constructor.  
Dim key As Object = GenerateKey(GetType([MyClass]), myRoot)  
  
' Check the local cache for a matching serializer.  
Dim ser As XmlSerializer = CType(serializers(key), XmlSerializer)  
  
If ser Is Nothing Then  
    ser = New XmlSerializer(GetType([MyClass]), myRoot)  
    ' Cache the serializer.  
    serializers(key) = ser  
Else   
    ' Use the serializer to serialize, or deserialize.  
End If  
```  
  
## <a name="serialization-of-arraylist-and-generic-list"></a>Serializzazione di ArrayList ed elenco generico  
 Il <xref:System.Xml.Serialization.XmlSerializer> non è possibile serializzare o deserializzare i seguenti:  
  
-   Matrici di <xref:System.Collections.ArrayList>  
  
-   Matrici di <xref:System.Collections.Generic.List%601>  
  
## <a name="serialization-of-enumerations-of-unsigned-long"></a>Serializzazione di enumerazioni di tipo Long senza segno  
 Il <xref:System.Xml.Serialization.XmlSerializer> non può essere creata un'istanza per serializzare un'enumerazione se vengono soddisfatte le condizioni seguenti: l'enumerazione è di tipo long senza segno (`ulong` in c#) e l'enumerazione contiene un qualsiasi membro con un valore maggiore di 9.223.372.036.854.775.807. Di seguito, ad esempio, non può essere serializzato.  
  
```  
public enum LargeNumbers: ulong  
{  
    a = 9223372036854775808  
}  
// At runtime, the following code will fail.  
xmlSerializer mySerializer=new XmlSerializer(typeof(LargeNumbers));  
```  
  
## <a name="objects-marked-with-the-obsolete-attribute-no-longer-serialized"></a>Gli oggetti contrassegnati con l'attributo Obsolete non vengono più serializzati  
 Nel [!INCLUDE[netfx35_short](~/includes/netfx35-short-md.md)] il <xref:System.Xml.Serialization.XmlSerializer> classe non è più serializza gli oggetti che sono contrassegnati come `[Obsolete]`.  
  
   
  
## Examples  
 L'esempio seguente contiene due classi principali: `PurchaseOrder` e `Test`. La `PurchaseOrder` classe contiene informazioni su un singolo acquisto. La `Test` classe contiene metodi che creano l'ordine di acquisto, e la lettura dell'ordine creato.  
  
 [!code-cpp[Classic XmlSerializer Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Questo tipo è thread-safe.</threadsafe>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlText" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Il tipo dell'oggetto che questo <see cref="T:System.Xml.Serialization.XmlSerializer" /> può serializzare.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> in grado di serializzare gli oggetti del tipo specificato in documenti XML e di deserializzare documenti XML in oggetti del tipo specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, un'applicazione definisce diverse classi che il <xref:System.Xml.Serialization.XmlSerializer> converte in un singolo documento di istanza XML. Tuttavia, il <xref:System.Xml.Serialization.XmlSerializer> deve conoscere un solo tipo, il tipo della classe che rappresenta l'elemento radice XML. Il <xref:System.Xml.Serialization.XmlSerializer> serializza automaticamente tutte le istanze di classi subordinate. Analogamente, solo il tipo dell'elemento radice XML è obbligatorio per la deserializzazione.  
  
   
  
## Examples  
 Nell'esempio seguente viene costruito un <xref:System.Xml.Serialization.XmlSerializer> che serializza un oggetto denominato `Widget`. L'esempio imposta diverse proprietà dell'oggetto prima di chiamare il <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> metodo.  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer6 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer6 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer6 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer6 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer6 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer6 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (System.Xml.Serialization.XmlTypeMapping xmlTypeMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlTypeMapping xmlTypeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(System::Xml::Serialization::XmlTypeMapping ^ xmlTypeMapping);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlTypeMapping" Type="System.Xml.Serialization.XmlTypeMapping" />
      </Parameters>
      <Docs>
        <param name="xmlTypeMapping">
          <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> che esegue il mapping di un tipo a un altro.</param>
        <summary>Inizializza un'istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> tramite un oggetto che esegue il mapping di un tipo a un altro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore viene utilizzato per creare un <xref:System.Xml.Serialization.XmlSerializer> quando si serializza un oggetto in un messaggio SOAP. Per controllare i messaggi SOAP generati, utilizzare gli attributi speciali (inizia con la parola "Soap"), vedere il <xref:System.Xml.Serialization> dello spazio dei nomi.  
  
   
  
## Examples  
 Nell'esempio seguente viene serializzata una classe denominata `Group`. La serializzazione del `GroupName`, `IgnoreThis` campi e i membri del `GroupType` enumerazione sottoposta a override. Nel `CreateOverrideSerializer` (metodo), un <xref:System.Xml.Serialization.SoapAttributeOverrides> oggetto sia stato creato e per ogni membro sottoposto a override o l'enumerazione, un <xref:System.Xml.Serialization.SoapAttributes> oggetto viene creato con la proprietà appropriata impostata e aggiunta a di <xref:System.Xml.Serialization.SoapAttributeOverrides> oggetto. Un <xref:System.Xml.Serialization.XmlMapping> oggetto viene creato utilizzando il <xref:System.Xml.Serialization.SoapAttributeOverrides> oggetto e tale <xref:System.Xml.Serialization.XmlMapping> oggetto viene utilizzato per creare il <xref:System.Xml.Serialization.XmlSerializer> che esegue l'override della serializzazione predefinita.  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::String ^ defaultNamespace);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Il tipo dell'oggetto che questo <see cref="T:System.Xml.Serialization.XmlSerializer" /> può serializzare.</param>
        <param name="defaultNamespace">Lo spazio dei nomi predefinito da utilizzare per tutti gli elementi XML.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> in grado di serializzare gli oggetti del tipo specificato in documenti XML e di deserializzare documenti XML in oggetti del tipo specificato. Specifica lo spazio dei nomi predefinito per tutti gli elementi XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene costruito un <xref:System.Xml.Serialization.XmlSerializer> che serializza un oggetto denominato `Widget`. L'esempio imposta diverse proprietà dell'oggetto prima di chiamare il <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> metodo.  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, Type[] extraTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Type[] extraTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, cli::array &lt;Type ^&gt; ^ extraTypes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="extraTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="type">Il tipo dell'oggetto che questo <see cref="T:System.Xml.Serialization.XmlSerializer" /> può serializzare.</param>
        <param name="extraTypes">Una matrice <see cref="T:System.Type" /> di ulteriori oggetti da serializzare.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> in grado di serializzare gli oggetti del tipo specificato in documenti XML e di deserializzare documenti XML in oggetti di un tipo specificato. Se una proprietà o un campo restituisce una matrice, il parametro <paramref name="extraTypes" /> specifica gli oggetti che possono essere inseriti nella matrice.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, se una proprietà pubblica o un campo restituisce un oggetto o una matrice di oggetti, i tipi di oggetto vengono serializzati automaticamente. Tuttavia, se una classe contiene un campo o proprietà che restituisce una matrice di tipo <xref:System.Object>, qualsiasi oggetto può essere inserito in una matrice. In tal caso, il <xref:System.Xml.Serialization.XmlSerializer> deve prevedere tutti i possibili tipi di oggetto vengono inseriti le <xref:System.Object> matrice. A tale scopo, utilizzare il `extraTypes` parametro per specificare i tipi di oggetti aggiuntivi da serializzare o deserializzare.  
  
 È inoltre possibile utilizzare il `extraTypes` parametro per specificare i tipi derivati da una classe base. Ad esempio, si supponga che una classe base denominata `Phone` esiste e una classe denominata `InternationalPhone` deriva da esso. Utilizzare il `extraTypes` parametro per specificare anche il tipo derivato.  
  
   
  
## Examples  
 Nell'esempio seguente viene serializzata un'istanza di una classe che contiene un campo pubblico che restituisce una matrice di oggetti. Il `extraTypes` parametro il <xref:System.Xml.Serialization.XmlSerializer> costruttore specifica i tipi di oggetti che possono essere serializzati nella matrice.  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer3 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
      </Parameters>
      <Docs>
        <param name="type">Il tipo dell'oggetto da serializzare.</param>
        <param name="overrides">Oggetto <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> in grado di serializzare gli oggetti del tipo specificato in documenti XML e di deserializzare documenti XML in oggetti del tipo specificato. Ciascun oggetto da serializzare può contenere istanze di classi e questo overload può eseguire l'override con altre classi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `overrides` parametro può essere utilizzato per controllare come vengono codificate i campi e proprietà in XML. Queste impostazioni sostituiscono tutti gli attributi già presenti gli oggetti. Può essere utile quando il codice sorgente non può essere modificato o più tipi di codifica sono necessari per le stesse classi.  
  
   
  
## Examples  
 Nell'esempio seguente viene serializzata un'istanza di una classe definita in una DLL e a tale scopo, esegue l'override dei membri pubblici presenti nella DLL.  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer4 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer4 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer4 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlRootAttribute root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlRootAttribute root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlRootAttribute ^ root);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
      </Parameters>
      <Docs>
        <param name="type">Il tipo dell'oggetto che questo <see cref="T:System.Xml.Serialization.XmlSerializer" /> può serializzare.</param>
        <param name="root">Un <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> che rappresenta l'elemento XML di primo livello.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> in grado di serializzare gli oggetti del tipo specificato in documenti XML e di deserializzare documenti XML in oggetti del tipo specificato. Specifica inoltre la classe da utilizzare come elemento XML di primo livello.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'elemento radice di un documento XML racchiude tutti gli altri elementi. Per impostazione predefinita, l'oggetto specificato da di `type` parametro venga serializzato come elemento radice. Proprietà, ad esempio il nome dell'elemento XML dell'elemento radice, vengono prelevate i `type` oggetto. Tuttavia, il `root` parametro consente di sostituire le informazioni dell'oggetto predefinito specificando un <xref:System.Xml.Serialization.XmlRootAttribute>; l'oggetto consente di impostare un altro spazio dei nomi, nome dell'elemento e così via.  
  
   
  
## Examples  
 Nell'esempio seguente viene costruito un <xref:System.Xml.Serialization.XmlSerializer> che utilizza un <xref:System.Xml.Serialization.XmlRootAttribute> che contiene varie proprietà dell'elemento radice XML, ad esempio il nome dello spazio dei nomi e l'elemento.  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides, class System.Type[] extraTypes, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides, cli::array &lt;Type ^&gt; ^ extraTypes, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
        <Parameter Name="extraTypes" Type="System.Type[]" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Il tipo dell'oggetto che questo <see cref="T:System.Xml.Serialization.XmlSerializer" /> può serializzare.</param>
        <param name="overrides">
          <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> che estende il comportamento della classe specificata nel parametro <c>type</c> o ne esegue l'override.</param>
        <param name="extraTypes">Una matrice <see cref="T:System.Type" /> di ulteriori oggetti da serializzare.</param>
        <param name="root">Un <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> che definisce le proprietà dell'elemento XML di primo livello.</param>
        <param name="defaultNamespace">Lo spazio dei nomi predefinito di tutti gli elementi XML nel documento XML.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> in grado di serializzare oggetti di tipo <see cref="T:System.Object" /> in istanze di documento XML e di deserializzare istanze di documento XML in oggetti di tipo <see cref="T:System.Object" />. Ciascun oggetto da serializzare può contenere istanze di classi e questo overload ne esegue l'override con altre classi. Questo overload specifica inoltre lo spazio dei nomi predefinito per tutti gli elementi XML e la classe da utilizzare come elemento XML di primo livello.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `overrides` parametro consente la creazione di un [costruttore XmlSerializer (tipo, XmlAttributeOverrides, tipo\<xref:System.Xml.Serialization.XmlSerializer > che serializza una classe che estende o sostituisce il comportamento di un classe di base. Ad esempio, nel caso di una DLL, è possibile creare una classe che eredita o estende una classe contenuta nella DLL. Per serializzare tale classe, è necessario utilizzare un'istanza del [costruttore XmlSerializer (tipo tipo, XmlAttributeOverrides,\<xref:System.Xml.Serialization.XmlAttributeOverrides > classe quando si costruisce il [costruttore XmlSerializer ( Tipo di tipo, XmlAttributeOverrides,\<xref:System.Xml.Serialization.XmlSerializer >. Per ulteriori informazioni, vedere [costruttore XmlSerializer (tipo tipo, XmlAttributeOverrides,\<xref:System.Xml.Serialization.XmlAttributeOverrides >.  
  
 Per impostazione predefinita, se una proprietà pubblica o un campo restituisce un oggetto o una matrice di oggetti, i tipi di oggetto vengono serializzati automaticamente. Tuttavia, se una classe contiene un campo o proprietà che restituisce una matrice di tipo [costruttore XmlSerializer (tipo tipo, XmlAttributeOverrides,\<xref:System.Object >, qualsiasi oggetto può essere inserito in una matrice. In tal caso, il [costruttore XmlSerializer (tipo tipo, XmlAttributeOverrides,\<xref:System.Xml.Serialization.XmlSerializer > deve prevedere tutti i possibili tipi di oggetto vengono inseriti [XmlSerializer Costruttore (tipo tipo, XmlAttributeOverrides,\<xref:System.Object > matrice. A tale scopo, utilizzare il `extraTypes` parametro per specificare i tipi di oggetti aggiuntivi da serializzare o deserializzare.  
  
 L'elemento radice di un documento XML racchiude tutti gli altri elementi. Per impostazione predefinita, l'oggetto specificato da di `type` parametro venga serializzato come elemento radice. Proprietà, ad esempio il nome dell'elemento XML dell'elemento radice vengono prelevate i `type` oggetto. Tuttavia, il `root` parametro consente di sostituire le informazioni dell'oggetto predefinito specificando un [costruttore XmlSerializer (, XmlAttributeOverrides, tipo\<xref:System.Xml.Serialization.XmlRootAttribute >; oggetto consente di impostare un altro spazio dei nomi, nome dell'elemento e così via.  
  
 Utilizzare il `defaultName` parametro per specificare lo spazio dei nomi predefinito di tutti gli elementi XML generati dal [costruttore XmlSerializer (, XmlAttributeOverrides, tipo\<xref:System.Xml.Serialization.XmlSerializer >.  
  
   
  
## Examples  
 Nell'esempio seguente viene serializzata un'istanza di una classe definita in una DLL e a tale scopo, esegue l'override dei membri pubblici presenti nella classe. L'esempio specifica inoltre una matrice di tipi aggiuntivi, lo spazio dei nomi predefinito per tutti gli elementi XML e la classe da usare che fornisce le informazioni di elemento radice XML. Nell'esempio si presuppone che sia stato compilato il codice all'inizio in una DLL denominata `HighSchool`.  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
        <altmember cref="T:System.Xml.Serialization.XmlRootAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides, class System.Type[] extraTypes, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides, cli::array &lt;Type ^&gt; ^ extraTypes, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace, System::String ^ location);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
        <Parameter Name="extraTypes" Type="System.Type[]" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
        <Parameter Name="defaultNamespace" Type="System.String" />
        <Parameter Name="location" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Il tipo dell'oggetto che questo <see cref="T:System.Xml.Serialization.XmlSerializer" /> può serializzare.</param>
        <param name="overrides">
          <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> che estende il comportamento della classe specificata nel parametro <c>type</c> o ne esegue l'override.</param>
        <param name="extraTypes">Una matrice <see cref="T:System.Type" /> di ulteriori oggetti da serializzare.</param>
        <param name="root">Un <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> che definisce le proprietà dell'elemento XML di primo livello.</param>
        <param name="defaultNamespace">Lo spazio dei nomi predefinito di tutti gli elementi XML nel documento XML.</param>
        <param name="location">Posizione dei tipi.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> in grado di serializzare oggetti di tipo <see cref="T:System.Object" /> in istanze di documento XML e di deserializzare istanze di documento XML in oggetti di tipo <see cref="T:System.Object" />. Ciascun oggetto da serializzare può contenere istanze di classi e questo overload ne esegue l'override con altre classi. Questo overload specifica inoltre lo spazio dei nomi predefinito per tutti gli elementi XML e la classe da utilizzare come elemento XML di primo livello.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides, class System.Type[] extraTypes, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides, cli::array &lt;Type ^&gt; ^ extraTypes, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace, System::String ^ location, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method is obsolete and will be removed in a future release of the .NET Framework. Please use a XmlSerializer constructor overload which does not take an Evidence parameter. See http://go2.microsoft.com/fwlink/?LinkId=131738 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
        <Parameter Name="extraTypes" Type="System.Type[]" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
        <Parameter Name="defaultNamespace" Type="System.String" />
        <Parameter Name="location" Type="System.String" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="type">Il tipo dell'oggetto che questo <see cref="T:System.Xml.Serialization.XmlSerializer" /> può serializzare.</param>
        <param name="overrides">
          <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> che estende il comportamento della classe specificata nel parametro <c>type</c> o ne esegue l'override.</param>
        <param name="extraTypes">Una matrice <see cref="T:System.Type" /> di ulteriori oggetti da serializzare.</param>
        <param name="root">Un <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> che definisce le proprietà dell'elemento XML di primo livello.</param>
        <param name="defaultNamespace">Lo spazio dei nomi predefinito di tutti gli elementi XML nel documento XML.</param>
        <param name="location">Posizione dei tipi.</param>
        <param name="evidence">Istanza della classe <see cref="T:System.Security.Policy.Evidence" /> contenente le credenziali necessarie per l'accesso ai tipi.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> in grado di serializzare gli oggetti del tipo specificato in istanze di documento XML e di deserializzare istanze di documento XML in oggetti del tipo specificato. Questo overload consente di fornire altri tipi rilevabili durante un'operazione di serializzazione o deserializzazione, nonché uno spazio dei nomi predefinito per tutti gli elementi XML, la classe da utilizzare come elemento XML di primo livello, la relativa posizione e le credenziali necessarie per l'accesso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consente un controllo più preciso sull'accesso a una directory temporanea e impedisce l'utilizzo e l'inserimento di codice. Per utilizzare questo metodo, specificare un percorso e consentire l'accesso solo a utenti specifici. Gli amministratori possono configurare criteri con elenchi di evidenze corrispondenti alle autorizzazioni.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDeserialize">
      <MemberSignature Language="C#" Value="public virtual bool CanDeserialize (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDeserialize(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanDeserialize(System::Xml::XmlReader ^ xmlReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader">Un <see cref="T:System.Xml.XmlReader" /> che punta al documento da deserializzare.</param>
        <summary>Ottiene un valore che indica se questo <see cref="T:System.Xml.Serialization.XmlSerializer" /> può deserializzare un documento XML specificato.</summary>
        <returns>
          <see langword="true" /> se questo <see cref="T:System.Xml.Serialization.XmlSerializer" /> può deserializzare l'oggetto a cui punta <see cref="T:System.Xml.XmlReader" />. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente chiama il <xref:System.Xml.Serialization.XmlSerializer.CanDeserialize%2A> metodo per verificare se un documento XML può essere deserializzato.  
  
 [!code-cpp[Classic XmlSerializer.CanDeserialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.CanDeserialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.CanDeserialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.CanDeserialize Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.CanDeserialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.CanDeserialize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="CreateReader">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Serialization.XmlSerializationReader CreateReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Serialization.XmlSerializationReader CreateReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.CreateReader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateReader () As XmlSerializationReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Serialization::XmlSerializationReader ^ CreateReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializationReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto utilizzato per leggere il documento XML da serializzare.</summary>
        <returns>Classe <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> utilizzata per leggere il documento XML.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Qualsiasi tentativo di accedere al metodo viene effettuato quando questo non è sottoposto a override in una classe derivata.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWriter">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Serialization.XmlSerializationWriter CreateWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Serialization.XmlSerializationWriter CreateWriter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.CreateWriter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateWriter () As XmlSerializationWriter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Serialization::XmlSerializationWriter ^ CreateWriter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializationWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando sottoposto a override in una classe derivata, restituisce un writer utilizzato per serializzare l'oggetto.</summary>
        <returns>Istanza che implementa la classe <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Qualsiasi tentativo di accedere al metodo viene effettuato quando questo non è sottoposto a override in una classe derivata.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Deserialize">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deserializza un documento XML.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> contenente il documento XML da deserializzare.</param>
        <summary>Deserializza il documento XML contenuto dal <see cref="T:System.IO.Stream" /> specificato.</summary>
        <returns>L'<see cref="T:System.Object" /> da deserializzare.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La deserializzazione è il processo di lettura di un documento XML e creazione di un oggetto fortemente tipizzato per il XSD (XML Schema) del documento.  
  
 Prima della deserializzazione, un <xref:System.Xml.Serialization.XmlSerializer> deve essere costruito utilizzando il tipo di oggetto da deserializzare.  
  
 Utilizzare il `stream` parametro per specificare un oggetto che deriva dal <xref:System.IO.Stream> (classe), che è progettato per scrivere in flussi. Le classi che derivano dalla <xref:System.IO.Stream> classe includono:  
  
-   <xref:System.IO.BufferedStream>  
  
-   <xref:System.IO.FileStream>  
  
-   <xref:System.IO.MemoryStream>  
  
-   <xref:System.Net.Sockets.NetworkStream>  
  
-   <xref:System.Security.Cryptography.CryptoStream>  
  
> [!NOTE]
>  Il <xref:System.Xml.Serialization.XmlSerializer> Impossibile deserializzare le operazioni seguenti: le matrici di <xref:System.Collections.ArrayList> e le matrici di <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 Nell'esempio seguente viene deserializzato un oggetto utilizzando un <xref:System.IO.Stream> oggetto.  
  
 [!code-cpp[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.TextReader textReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.IO.TextReader textReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::IO::TextReader ^ textReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="textReader">
          <see cref="T:System.IO.TextReader" /> contenente il documento XML da deserializzare.</param>
        <summary>Deserializza il documento XML contenuto dal <see cref="T:System.IO.TextReader" /> specificato.</summary>
        <returns>L'<see cref="T:System.Object" /> da deserializzare.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La deserializzazione è il processo di lettura di un'istanza di un documento XML e creazione di un oggetto fortemente tipizzato per il XSD (XML Schema) del documento.  
  
 Prima della deserializzazione, un <xref:System.Xml.Serialization.XmlSerializer> deve essere costruito utilizzando il tipo di oggetto da deserializzare.  
  
 Le classi che ereditano da <xref:System.IO.TextReader> includono <xref:System.IO.StringReader> e <xref:System.IO.StreamReader>. Se si utilizza un <xref:System.IO.StreamReader> per deserializzare un oggetto, è necessario costruire la <xref:System.IO.StreamReader> con un appropriato <xref:System.Text.Encoding>. La codifica specificata dal documento XML viene ignorata.  
  
> [!NOTE]
>  Per utilizzare la codifica specificata dal documento XML, utilizzare il <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> overload che accetta un <xref:System.Xml.XmlReader> invece. Il <xref:System.Xml.XmlReader> automaticamente rileva e utilizza la codifica specificata dal documento XML.  
  
> [!NOTE]
>  Il <xref:System.Xml.Serialization.XmlSerializer> Impossibile deserializzare le operazioni seguenti: le matrici di <xref:System.Collections.ArrayList> e le matrici di <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 Nell'esempio seguente viene deserializzato un oggetto utilizzando un <xref:System.IO.TextReader> oggetto.  
  
 [!code-cpp[Classic XmlSerializer.Deserialize1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Deserialize1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Deserialize1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante la deserializzazione. L'eccezione originale è disponibile tramite la proprietà <see cref="P:System.Exception.InnerException" />.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="protected virtual object Deserialize (System.Xml.Serialization.XmlSerializationReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object Deserialize(class System.Xml.Serialization.XmlSerializationReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Deserialize (reader As XmlSerializationReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ Deserialize(System::Xml::Serialization::XmlSerializationReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.Serialization.XmlSerializationReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> contenente il documento XML da deserializzare.</param>
        <summary>Deserializza il documento XML contenuto dal <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> specificato.</summary>
        <returns>Oggetto deserializzato.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Qualsiasi tentativo di accedere al metodo viene effettuato quando questo non è sottoposto a override in una classe derivata.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader">
          <see cref="T:System.Xml.XmlReader" /> contenente il documento XML da deserializzare.</param>
        <summary>Deserializza il documento XML contenuto dal <see cref="T:System.Xml.XmlReader" /> specificato.</summary>
        <returns>L'<see cref="T:System.Object" /> da deserializzare.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La deserializzazione è il processo di lettura di un'istanza di un documento XML e creazione di un oggetto fortemente tipizzato per il XSD (XML Schema) del documento.  
  
 Prima della deserializzazione, un <xref:System.Xml.Serialization.XmlSerializer> deve essere costruito utilizzando il tipo di oggetto da deserializzare.  
  
 Il <xref:System.Xml.XmlReader> automaticamente rileva e utilizza la codifica specificata dal documento XML.  
  
> [!NOTE]
>  Il <xref:System.Xml.Serialization.XmlSerializer> Impossibile deserializzare le operazioni seguenti: le matrici di <xref:System.Collections.ArrayList> e le matrici di <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 Nell'esempio seguente viene deserializzato un oggetto utilizzando un <xref:System.Xml.XmlReader>.  
  
 [!code-cpp[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante la deserializzazione. L'eccezione originale è disponibile tramite la proprietà <see cref="P:System.Exception.InnerException" />.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader, string encodingStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader, string encodingStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader, System::String ^ encodingStyle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="encodingStyle" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlReader">
          <see cref="T:System.Xml.XmlReader" /> contenente il documento XML da deserializzare.</param>
        <param name="encodingStyle">Stile di codifica dell'XML serializzato.</param>
        <summary>Deserializza il documento XML contenuto nel <see cref="T:System.Xml.XmlReader" /> specificato e lo stile di codifica.</summary>
        <returns>Oggetto deserializzato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La deserializzazione è il processo di lettura di un'istanza di un documento XML e creazione di un oggetto fortemente tipizzato per il XSD (XML Schema) del documento.  
  
 Prima della deserializzazione, un <xref:System.Xml.Serialization.XmlSerializer> deve essere costruito utilizzando il tipo di oggetto da deserializzare.  
  
 Impostare il `encodingStyle` parametro "http://schemas.xmlsoap.org/soap/encoding/ " per la codifica SOAP versione 1.1; in caso contrario, impostarla su "http://www.w3.org/2001/12/soap-encoding" per la codifica SOAP versione 1.2.  
  
 **Nota** il <xref:System.Xml.Serialization.XmlSerializer> Impossibile deserializzare le operazioni seguenti: le matrici di <xref:System.Collections.ArrayList> e le matrici di <xref:System.Collections.Generic.List%601>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante la deserializzazione. L'eccezione originale è disponibile tramite la proprietà <see cref="P:System.Exception.InnerException" />.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader, System.Xml.Serialization.XmlDeserializationEvents events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader, valuetype System.Xml.Serialization.XmlDeserializationEvents events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader, System::Xml::Serialization::XmlDeserializationEvents events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="events" Type="System.Xml.Serialization.XmlDeserializationEvents" />
      </Parameters>
      <Docs>
        <param name="xmlReader">
          <see cref="T:System.Xml.XmlReader" /> contenente il documento da deserializzare.</param>
        <param name="events">Istanza della classe <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />.</param>
        <summary>Deserializza un documento XML contenuto nell'oggetto <see cref="T:System.Xml.XmlReader" /> specificato e consente l'override degli eventi che si verificano durante la deserializzazione.</summary>
        <returns>L'<see cref="T:System.Object" /> da deserializzare.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto da deserializzare.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader, string encodingStyle, System.Xml.Serialization.XmlDeserializationEvents events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader, string encodingStyle, valuetype System.Xml.Serialization.XmlDeserializationEvents events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader, System::String ^ encodingStyle, System::Xml::Serialization::XmlDeserializationEvents events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="encodingStyle" Type="System.String" />
        <Parameter Name="events" Type="System.Xml.Serialization.XmlDeserializationEvents" />
      </Parameters>
      <Docs>
        <param name="xmlReader">Istanza della classe <see cref="T:System.Xml.XmlReader" /> utilizzata per leggere il documento.</param>
        <param name="encodingStyle">Codifica utilizzata.</param>
        <param name="events">Istanza della classe <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />.</param>
        <summary>Deserializza l'oggetto utilizzando i dati contenuti nell'oggetto <see cref="T:System.Xml.XmlReader" /> specificato.</summary>
        <returns>L'oggetto da deserializzare.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è obbligatorio per la deserializzazione di intestazioni sconosciute esclusivamente a scenari di servizio Web. Questo metodo consente di evitare la sincronizzazione di eventi nei metodi di servizio Web.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromMappings">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce un'istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> dai mapping specificati.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromMappings">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromMappings (System.Xml.Serialization.XmlMapping[] mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromMappings(class System.Xml.Serialization.XmlMapping[] mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromMappings (mappings As XmlMapping()) As XmlSerializer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromMappings(cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" />
      </Parameters>
      <Docs>
        <param name="mappings">Matrice di <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> che esegue il mapping di un tipo a un altro.</param>
        <summary>Restituisce una matrice di oggetti <see cref="T:System.Xml.Serialization.XmlSerializer" /> creati da una matrice di oggetti <see cref="T:System.Xml.Serialization.XmlTypeMapping" />.</summary>
        <returns>Matrice di oggetti <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMappings">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromMappings (System.Xml.Serialization.XmlMapping[] mappings, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromMappings(class System.Xml.Serialization.XmlMapping[] mappings, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromMappings(cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method is obsolete and will be removed in a future release of the .NET Framework. Please use an overload of FromMappings which does not take an Evidence parameter. See http://go2.microsoft.com/fwlink/?LinkId=131738 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="mappings">Matrice di oggetti <see cref="T:System.Xml.Serialization.XmlMapping" /> utilizzati per il mapping di un tipo a un altro.</param>
        <param name="evidence">Istanza della classe <see cref="T:System.Security.Policy.Evidence" /> contenente i dati di assembly e host presentati al sistema di criteri Common Language Runtime.</param>
        <summary>Restituisce un'istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> creata dai mapping di un tipo XML a un altro.</summary>
        <returns>Istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMappings">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromMappings (System.Xml.Serialization.XmlMapping[] mappings, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromMappings(class System.Xml.Serialization.XmlMapping[] mappings, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromMappings(cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="mappings">Matrice di oggetti <see cref="T:System.Xml.Serialization.XmlMapping" />.</param>
        <param name="type">
          <see cref="T:System.Type" /> dell'oggetto deserializzato.</param>
        <summary>Restituisce un'istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> dai mapping specificati.</summary>
        <returns>Istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromTypes">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromTypes (Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromTypes(class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromTypes (types As Type()) As XmlSerializer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromTypes(cli::array &lt;Type ^&gt; ^ types);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="types">Matrice di oggetti <see cref="T:System.Type" />.</param>
        <summary>Restituisce una matrice di oggetti <see cref="T:System.Xml.Serialization.XmlSerializer" /> creati da una matrice di tipi.</summary>
        <returns>Matrice di oggetti <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A> metodo consente di creare in modo efficiente una matrice di <xref:System.Xml.Serialization.XmlSerializer> oggetti per l'elaborazione di una matrice di <xref:System.Type> oggetti.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A> per restituire una matrice di <xref:System.Xml.Serialization.XmlSerializer> oggetti. Il codice comprende tre definizioni di classe che vengono utilizzate per creare una matrice di <xref:System.Type> oggetti.  
  
 [!code-cpp[Classic XmlSerializer.FromTypes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.FromTypes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.FromTypes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.FromTypes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.FromTypes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.FromTypes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateSerializer">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce un assembly contenente serializzatori tipizzati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il [XML Serializer Generator Tool (Sgen.exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) crea un assembly di serializzazione XML per tipi di un assembly specificato per migliorare le prestazioni in fase di esecuzione di un <xref:System.Xml.Serialization.XmlSerializer> quando serializza o deserializza gli oggetti del tipi specificati. Utilizzare il <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> per restituire il nome di tale assembly.  
  
 Se si distribuisce un assembly come parte di un'applicazione client che chiama un servizio Web, è possibile applicare la <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> al tipo di client per specificare il percorso e il nome dell'assembly.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateSerializer">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GenerateSerializer (Type[] types, System.Xml.Serialization.XmlMapping[] mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GenerateSerializer(class System.Type[] types, class System.Xml.Serialization.XmlMapping[] mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateSerializer (types As Type(), mappings As XmlMapping()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GenerateSerializer(cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" />
      </Parameters>
      <Docs>
        <param name="types">Raccolta di tipi.</param>
        <param name="mappings">Insieme di oggetti <see cref="T:System.Xml.Serialization.XmlMapping" /> utilizzati per la conversione di un tipo in un altro.</param>
        <summary>Restituisce un assembly contenente serializzatori personalizzati utilizzati per serializzare o deserializzare i tipi specificati, mediante i mapping specificati.</summary>
        <returns>Oggetto <see cref="T:System.Reflection.Assembly" /> contenente serializzatori per i tipi e i mapping forniti.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSerializer">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GenerateSerializer (Type[] types, System.Xml.Serialization.XmlMapping[] mappings, System.CodeDom.Compiler.CompilerParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GenerateSerializer(class System.Type[] types, class System.Xml.Serialization.XmlMapping[] mappings, class System.CodeDom.Compiler.CompilerParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateSerializer (types As Type(), mappings As XmlMapping(), parameters As CompilerParameters) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GenerateSerializer(cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings, System::CodeDom::Compiler::CompilerParameters ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" />
        <Parameter Name="parameters" Type="System.CodeDom.Compiler.CompilerParameters" />
      </Parameters>
      <Docs>
        <param name="types">Matrice di tipo <see cref="T:System.Type" /> contenente oggetti utilizzati per la serializzazione e la deserializzazione di dati.</param>
        <param name="mappings">Matrice di tipo <see cref="T:System.Xml.Serialization.XmlMapping" /> che esegue il mapping dei dati XML ai dati di tipo.</param>
        <param name="parameters">Istanza della classe <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che rappresenta i parametri utilizzati per richiamare un compilatore.</param>
        <summary>Restituisce un assembly contenente serializzatori personalizzati utilizzati per serializzare o deserializzare i tipi specificati, mediante le impostazioni e opzioni del compilatore e i mapping specificati.</summary>
        <returns>
          <see cref="T:System.Reflection.Assembly" /> contenente versioni speciali di <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXmlSerializerAssemblyName">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce il nome dell'assembly contenente una o più versioni di <see cref="T:System.Xml.Serialization.XmlSerializer" /> appositamente create per serializzare o deserializzare tipi specifici.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il [XML Serializer Generator Tool (Sgen.exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) crea un assembly di serializzazione XML per tipi di un assembly specificato per migliorare le prestazioni in fase di esecuzione di un <xref:System.Xml.Serialization.XmlSerializer> quando serializza o deserializza gli oggetti del tipi specificati. Utilizzare il <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> per restituire il nome di tale assembly.  
  
 Se si distribuisce un assembly come parte di un'applicazione client che chiama un servizio Web, è possibile applicare la <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> al tipo di client per specificare il percorso e il nome dell'assembly.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXmlSerializerAssemblyName">
      <MemberSignature Language="C#" Value="public static string GetXmlSerializerAssemblyName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetXmlSerializerAssemblyName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetXmlSerializerAssemblyName(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Classe <see cref="T:System.Type" /> da deserializzare.</param>
        <summary>Restituisce il nome dell'assembly contenente una o più versioni di <see cref="T:System.Xml.Serialization.XmlSerializer" /> appositamente create per serializzare o deserializzare il tipo specificato.</summary>
        <returns>Nome dell'assembly contenente un <see cref="T:System.Xml.Serialization.XmlSerializer" /> per il tipo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il [XML Serializer Generator Tool (Sgen.exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) crea un assembly di serializzazione XML per tipi di un assembly specificato per migliorare le prestazioni in fase di esecuzione di un <xref:System.Xml.Serialization.XmlSerializer> quando serializza o deserializza gli oggetti del tipi specificati. Utilizzare il <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> per restituire il nome di tale assembly.  
  
 Se si distribuisce un assembly come parte di un'applicazione client che chiama un servizio Web, è possibile applicare la <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> al tipo di client per specificare il percorso e il nome dell'assembly.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlSerializerAssemblyName">
      <MemberSignature Language="C#" Value="public static string GetXmlSerializerAssemblyName (Type type, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetXmlSerializerAssemblyName(class System.Type type, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetXmlSerializerAssemblyName(Type ^ type, System::String ^ defaultNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Classe <see cref="T:System.Type" /> in questione.</param>
        <param name="defaultNamespace">Spazio dei nomi del tipo.</param>
        <summary>Restituisce il nome dell'assembly contenente il serializzatore per il tipo specificato nello spazio dei nomi specificato.</summary>
        <returns>Nome dell'assembly contenente serializzatori appositamente compilati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il [XML Serializer Generator Tool (Sgen.exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) crea un assembly di serializzazione XML per tipi di un assembly specificato per migliorare le prestazioni in fase di esecuzione di un <xref:System.Xml.Serialization.XmlSerializer> quando serializza o deserializza gli oggetti del tipi specificati. Utilizzare il <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> per restituire il nome di tale assembly.  
  
 Se si distribuisce un assembly come parte di un'applicazione client che chiama un servizio Web, è possibile applicare la <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> al tipo di client per specificare il percorso e il nome dell'assembly.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Serializza un oggetto in un documento XML.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream stream, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.Stream stream, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::Stream ^ stream, System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream">Il <see cref="T:System.IO.Stream" /> utilizzato per scrivere il documento XML.</param>
        <param name="o">
          <see cref="T:System.Object" /> da serializzare.</param>
        <summary>Serializza l'<see cref="T:System.Object" /> specificato e scrive il documento XML in un file utilizzando il <see cref="T:System.IO.Stream" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> metodo converte i campi pubblici e le proprietà di lettura/scrittura di un oggetto in XML. Non converte i metodi, gli indicizzatori, campi privati o le proprietà di sola lettura. Per serializzare tutti i campi e le proprietà di un oggetto, pubblici e privati, utilizzare il <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.  
  
 Nel `stream` parametro, specificare un oggetto che deriva dalla classe astratta <xref:System.IO.Stream> classe. Le classi che derivano da <xref:System.IO.Stream> includono:  
  
-   <xref:System.IO.BufferedStream>  
  
-   <xref:System.IO.FileStream>  
  
-   <xref:System.IO.MemoryStream>  
  
-   <xref:System.Net.Sockets.NetworkStream>  
  
-   <xref:System.Security.Cryptography.CryptoStream>  
  
> [!NOTE]
>  Il <xref:System.Xml.Serialization.XmlSerializer> non è possibile serializzare le operazioni seguenti: le matrici di <xref:System.Collections.ArrayList> e le matrici di <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 Nell'esempio seguente serializza un oggetto utilizzando un <xref:System.IO.Stream> oggetto.  
  
 [!code-cpp[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante la serializzazione. L'eccezione originale è disponibile tramite la proprietà <see cref="P:System.Exception.InnerException" />.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.TextWriter textWriter, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.TextWriter textWriter, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::TextWriter ^ textWriter, System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="textWriter">Il <see cref="T:System.IO.TextWriter" /> utilizzato per scrivere il documento XML.</param>
        <param name="o">
          <see cref="T:System.Object" /> da serializzare.</param>
        <summary>Serializza l'<see cref="T:System.Object" /> specificato e scrive il documento XML in un file utilizzando il <see cref="T:System.IO.TextWriter" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> metodo converte i campi pubblici e le proprietà di lettura/scrittura di un oggetto in XML. Non converte i metodi, gli indicizzatori, campi privati o le proprietà di sola lettura. Per serializzare campi e proprietà tutti un oggetto, pubblici e privati, utilizzare il <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.  
  
 Nel `textWriter` parametro, specificare un oggetto che deriva dalla classe astratta <xref:System.IO.TextWriter> classe. Le classi che derivano da <xref:System.IO.TextWriter> includono:  
  
-   <xref:System.IO.StreamWriter>  
  
-   <xref:System.IO.StringWriter>  
  
-   <xref:System.CodeDom.Compiler.IndentedTextWriter>  
  
> [!NOTE]
>  Il <xref:System.Xml.Serialization.XmlSerializer> non è possibile serializzare le operazioni seguenti: le matrici di <xref:System.Collections.ArrayList> e le matrici di <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 Nell'esempio seguente serializza un oggetto utilizzando un <xref:System.IO.TextWriter>.  
  
 [!code-cpp[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="protected virtual void Serialize (object o, System.Xml.Serialization.XmlSerializationWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Serialize(object o, class System.Xml.Serialization.XmlSerializationWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Serialize (o As Object, writer As XmlSerializationWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Serialize(System::Object ^ o, System::Xml::Serialization::XmlSerializationWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="writer" Type="System.Xml.Serialization.XmlSerializationWriter" />
      </Parameters>
      <Docs>
        <param name="o">
          <see cref="T:System.Object" /> da serializzare.</param>
        <param name="writer">Il <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> utilizzato per scrivere il documento XML.</param>
        <summary>Serializza l'<see cref="T:System.Object" /> specificato e scrive il documento XML in un file utilizzando il <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> specificato.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Qualsiasi tentativo di accedere al metodo viene effettuato quando questo non è sottoposto a override in una classe derivata.</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">Il <see cref="T:System.Xml.XmlWriter" /> utilizzato per scrivere il documento XML.</param>
        <param name="o">
          <see cref="T:System.Object" /> da serializzare.</param>
        <summary>Serializza l'<see cref="T:System.Object" /> specificato e scrive il documento XML in un file utilizzando il <see cref="T:System.Xml.XmlWriter" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> metodo converte i campi pubblici e le proprietà di lettura/scrittura di un oggetto in XML. Non converte i metodi, gli indicizzatori, campi privati o le proprietà di sola lettura. Per serializzare campi e proprietà tutti un oggetto, pubblici e privati, utilizzare il <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.  
  
 Nel `xmlWriter` parametro, specificare un oggetto che deriva dalla classe astratta <xref:System.Xml.XmlWriter> classe. Il <xref:System.Xml.XmlTextWriter> deriva il <xref:System.Xml.XmlWriter>.  
  
> [!NOTE]
>  Il <xref:System.Xml.Serialization.XmlSerializer> non è possibile serializzare le operazioni seguenti: le matrici di <xref:System.Collections.ArrayList> e le matrici di <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 Nell'esempio seguente serializza un oggetto utilizzando un <xref:System.Xml.XmlWriter>.  
  
 [!code-cpp[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante la serializzazione. L'eccezione originale è disponibile tramite la proprietà <see cref="P:System.Exception.InnerException" />.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream stream, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.Stream stream, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::Stream ^ stream, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" />
      </Parameters>
      <Docs>
        <param name="stream">Il <see cref="T:System.IO.Stream" /> utilizzato per scrivere il documento XML.</param>
        <param name="o">
          <see cref="T:System.Object" /> da serializzare.</param>
        <param name="namespaces">L'<see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> cui fa riferimento l'oggetto.</param>
        <summary>Serializza l'oggetto <see cref="T:System.Object" /> specificato e scrive il documento XML in un file mediante l'oggetto <see cref="T:System.IO.Stream" /> specificato, che fa riferimento agli spazi dei nomi specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> metodo viene richiamato, i campi pubblici e le proprietà di lettura/scrittura di un oggetto vengono convertite in XML. Metodi, gli indicizzatori, campi privati e proprietà di sola lettura non vengono serializzate. Per serializzare tutti i campi e proprietà, pubblici e privati, utilizzare il <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.  
  
 Utilizzare il `stream` parametro per specificare un oggetto che deriva dalla classe astratta <xref:System.IO.Stream> (classe), che è progettato per scrivere in flussi. Le classi che derivano dalla <xref:System.IO.Stream> classe includono:  
  
-   <xref:System.IO.BufferedStream>  
  
-   <xref:System.IO.FileStream>  
  
-   <xref:System.IO.MemoryStream>  
  
-   <xref:System.Net.Sockets.NetworkStream>  
  
-   <xref:System.Security.Cryptography.CryptoStream>  
  
> [!NOTE]
>  Il <xref:System.Xml.Serialization.XmlSerializer> non è possibile serializzare le operazioni seguenti: le matrici di <xref:System.Collections.ArrayList> e le matrici di <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 Il seguente esempio serializza un oggetto con un <xref:System.IO.Stream> oggetto. Nell'esempio viene creato anche un <xref:System.Xml.Serialization.XmlSerializerNamespaces> e aggiunge due spazi dei nomi all'oggetto. La classe che definisce l'oggetto serializzato è attribuita anche <xref:System.Xml.Serialization.XmlElementAttribute> gli attributi per specificare lo spazio dei nomi per ogni elemento.  
  
 [!code-cpp[Classic XmlSerializer.Serialize3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize3 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante la serializzazione. L'eccezione originale è disponibile tramite la proprietà <see cref="P:System.Exception.InnerException" />.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.TextWriter textWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.TextWriter textWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::TextWriter ^ textWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" />
      </Parameters>
      <Docs>
        <param name="textWriter">Il <see cref="T:System.IO.TextWriter" /> utilizzato per scrivere il documento XML.</param>
        <param name="o">
          <see cref="T:System.Object" /> da serializzare.</param>
        <param name="namespaces">
          <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> contenente gli spazi dei nomi del documento XML generato.</param>
        <summary>Serializza l'oggetto <see cref="T:System.Object" /> specificato e scrive il documento XML in un file mediante l'oggetto <see cref="T:System.IO.TextWriter" /> specificato, facendo riferimento agli spazi dei nomi specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> viene richiamato con i campi pubblici e le proprietà di lettura/scrittura di un oggetto vengono convertite in XML. Metodi, gli indicizzatori, campi privati e proprietà di sola lettura non vengono serializzate. Per serializzare tutti i campi e proprietà, pubblici e privati, utilizzare il <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.  
  
 Utilizzare il `textWriter` parametro per specificare un oggetto che deriva dalla classe astratta <xref:System.IO.TextWriter> classe. Le classi che derivano da <xref:System.IO.TextWriter> classe includono:  
  
-   <xref:System.IO.StreamWriter>  
  
-   <xref:System.IO.StringWriter>  
  
-   <xref:System.CodeDom.Compiler.IndentedTextWriter>  
  
> [!NOTE]
>  Il <xref:System.Xml.Serialization.XmlSerializer> non è possibile serializzare le operazioni seguenti: le matrici di <xref:System.Collections.ArrayList> e le matrici di <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 Il seguente esempio serializza un oggetto con un <xref:System.IO.TextWriter>. Nell'esempio viene creato anche un <xref:System.Xml.Serialization.XmlSerializerNamespaces> dell'oggetto e aggiunge due spazi dei nomi all'oggetto. La classe che definisce l'oggetto serializzato è attribuita anche <xref:System.Xml.Serialization.XmlElementAttribute> gli attributi per specificare lo spazio dei nomi per ogni elemento.  
  
 [!code-cpp[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante la serializzazione. L'eccezione originale è disponibile tramite la proprietà <see cref="P:System.Exception.InnerException" />.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">Il <see cref="T:System.Xml.XmlWriter" /> utilizzato per scrivere il documento XML.</param>
        <param name="o">
          <see cref="T:System.Object" /> da serializzare.</param>
        <param name="namespaces">L'<see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> cui fa riferimento l'oggetto.</param>
        <summary>Serializza l'oggetto <see cref="T:System.Object" /> specificato e scrive il documento XML in un file mediante l'oggetto <see cref="T:System.Xml.XmlWriter" /> specificato, facendo riferimento agli spazi dei nomi specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> metodo viene richiamato, i campi pubblici e le proprietà di lettura/scrittura di un oggetto vengono convertite in XML. Metodi, gli indicizzatori, campi privati e proprietà di sola lettura non vengono serializzate. Per serializzare tutti i campi e proprietà, pubblici e privati, utilizzare il <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.  
  
 Utilizzare il `xmlWriter` parametro per specificare un oggetto che deriva dalla classe astratta <xref:System.Xml.XmlWriter> (classe), che è progettato per scrivere documenti XML. Il <xref:System.Xml.XmlTextWriter> deriva il <xref:System.Xml.XmlWriter>.  
  
> [!NOTE]
>  Il <xref:System.Xml.Serialization.XmlSerializer> non è possibile serializzare le operazioni seguenti: le matrici di <xref:System.Collections.ArrayList> e le matrici di <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 Il seguente esempio serializza un oggetto con un <xref:System.Xml.XmlWriter>. Nell'esempio viene creato anche un <xref:System.Xml.Serialization.XmlSerializerNamespaces> e aggiunge due spazi dei nomi all'oggetto. Più istanze del <xref:System.Xml.Serialization.XmlElementAttribute> classe vengono applicate ai membri della classe per specificare lo spazio dei nomi per ogni elemento.  
  
 [!code-cpp[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante la serializzazione. L'eccezione originale è disponibile tramite la proprietà <see cref="P:System.Exception.InnerException" />.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces, System::String ^ encodingStyle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" />
        <Parameter Name="encodingStyle" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">Il <see cref="T:System.Xml.XmlWriter" /> utilizzato per scrivere il documento XML.</param>
        <param name="o">Oggetto da serializzare.</param>
        <param name="namespaces">L'<see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> cui fa riferimento l'oggetto.</param>
        <param name="encodingStyle">Stile di codifica dell'XML serializzato.</param>
        <summary>Serializza l'oggetto specificato e scrive il documento XML in un file mediante l'oggetto <see cref="T:System.Xml.XmlWriter" /> specificato, facendo riferimento agli spazi dei nomi specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> metodo viene richiamato, i campi pubblici e le proprietà di lettura/scrittura di un oggetto vengono convertite in XML. Metodi, gli indicizzatori, campi privati e proprietà di sola lettura non vengono serializzate. Per serializzare tutti i campi e proprietà, pubblici e privati, utilizzare il <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.  
  
 Utilizzare il `xmlWriter` parametro per specificare un oggetto che deriva dalla classe astratta <xref:System.Xml.XmlWriter> (classe), che è progettato per scrivere documenti XML. Il <xref:System.Xml.XmlTextWriter> deriva il <xref:System.Xml.XmlWriter>.  
  
 Impostare il `encodingStyle` parametro "http://schemas.xmlsoap.org/soap/encoding/"per la versione 1.1 la codifica SOAP; in caso contrario, impostarla su"http://www.w3.org/2001/12/soap-encoding" per la codifica SOAP versione 1.2.  
  
> [!NOTE]
>  Il <xref:System.Xml.Serialization.XmlSerializer> non è possibile serializzare le operazioni seguenti: le matrici di <xref:System.Collections.ArrayList> e le matrici di <xref:System.Collections.Generic.List%601>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è verificato un errore durante la serializzazione. L'eccezione originale è disponibile tramite la proprietà <see cref="P:System.Exception.InnerException" />.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces, System::String ^ encodingStyle, System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" />
        <Parameter Name="encodingStyle" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">Il <see cref="T:System.Xml.XmlWriter" /> utilizzato per scrivere il documento XML.</param>
        <param name="o">Oggetto da serializzare.</param>
        <param name="namespaces">Istanza di <see langword="XmlSerializaerNamespaces" /> contenente gli spazi dei nomi e i prefissi da utilizzare.</param>
        <param name="encodingStyle">Codifica utilizzata nel documento.</param>
        <param name="id">Per i messaggi con codifica SOAP, base utilizzata per generare attributi di ID.</param>
        <summary>Serializza l'oggetto <see cref="T:System.Object" /> specificato e scrive il documento XML in un file mediante l'oggetto <see cref="T:System.Xml.XmlWriter" />, gli spazi dei nomi XML e la codifica specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il *id* parametro fornisce la stringa di base utilizzata per creare ID SOAP. Per impostazione predefinita, questi sono "id1", "id2" e così via. Ma se il parametro è impostato su "myBase" i valori generati è "Baseid1", "Baseid2" e così via. Questa funzionalità viene usata per creare i valori di id univoco per l'intero messaggio SOAP.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownAttribute">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.XmlAttributeEventHandler UnknownAttribute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.XmlAttributeEventHandler UnknownAttribute" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnknownAttribute As XmlAttributeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::XmlAttributeEventHandler ^ UnknownAttribute;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando <see cref="T:System.Xml.Serialization.XmlSerializer" /> incontra un attributo XML di tipo sconosciuto durante la deserializzazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, dopo la chiamata di <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> (metodo), il <xref:System.Xml.Serialization.XmlSerializer> ignora gli attributi XML di tipo sconosciuto. Tuttavia, è possibile utilizzare questo evento per gestire questi tipi di nodo.  
  
 Se l'istanza della classe da deserializzare contiene un campo che restituisce una matrice di <xref:System.Xml.XmlAttribute> oggetti e un <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> è stato applicato al campo, il <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> non vengono generati eventi. Al contrario, tutti gli attributi XML sconosciuti vengono raccolti nella matrice.  
  
   
  
## Examples  
 L'esempio seguente visualizza informazioni su qualsiasi attributo sconosciuto durante la deserializzazione di un documento XML.  
  
 [!code-cpp[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName="UnknownElement">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.XmlElementEventHandler UnknownElement;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.XmlElementEventHandler UnknownElement" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnknownElement As XmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::XmlElementEventHandler ^ UnknownElement;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando <see cref="T:System.Xml.Serialization.XmlSerializer" /> incontra un elemento XML di tipo sconosciuto durante la deserializzazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, dopo la chiamata di <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> (metodo), il <xref:System.Xml.Serialization.XmlSerializer> ignora gli attributi XML di tipo sconosciuto. Tuttavia, è possibile utilizzare questo evento per gestire questi tipi di nodo.  
  
> [!NOTE]
>  Se il <xref:System.Xml.Serialization.XmlAnyElementAttribute> viene applicato a un campo che restituisce una matrice di <xref:System.Xml.XmlElement> oggetti, tutti gli elementi sconosciuti vengono raccolti nella matrice. In tal caso, il <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> non vengono generati eventi.  
  
   
  
## Examples  
 Nell'esempio seguente viene deserializzata una classe denominata `Group` da un file denominato UnknownElements. Ogni volta che un elemento viene trovato nel file che non dispone di alcun membro corrispondente nella classe, il <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> si verifica l'evento. Per eseguire l'esempio, incollare il codice XML seguente in un file denominato UnknownElements.  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <GroupName>MyGroup</GroupName>  
  <GroupSize>Large</GroupSize>  
  <GroupNumber>444</GroupNumber>  
  <GroupBase>West</GroupBase>  
</Group>  
```  
  
 [!code-cpp[XmlSerializer.UnknownElement Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CPP/unknownelement.cpp#1)]
 [!code-csharp[XmlSerializer.UnknownElement Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CS/unknownelement.cs#1)]
 [!code-vb[XmlSerializer.UnknownElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/VB/unknownelement.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName="UnknownNode">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.XmlNodeEventHandler UnknownNode;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.XmlNodeEventHandler UnknownNode" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnknownNode As XmlNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::XmlNodeEventHandler ^ UnknownNode;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando <see cref="T:System.Xml.Serialization.XmlSerializer" /> incontra un nodo XML di tipo sconosciuto durante la deserializzazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, dopo la chiamata di <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> (metodo), il <xref:System.Xml.Serialization.XmlSerializer> ignora i nodi XML di tipo sconosciuto. Tuttavia, è possibile utilizzare questo evento per gestire questi tipi di nodo.  
  
   
  
## Examples  
 L'esempio seguente visualizza il tipo di qualsiasi nodo sconosciuto rilevato.  
  
 [!code-cpp[Classic XmlSerializer.UnknownNode Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.UnknownNode Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownNode Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.UnknownNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.UnknownNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName="UnreferencedObject">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.UnreferencedObjectEventHandler UnreferencedObject;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.UnreferencedObjectEventHandler UnreferencedObject" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnreferencedObject As UnreferencedObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::UnreferencedObjectEventHandler ^ UnreferencedObject;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.UnreferencedObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica durante la deserializzazione di un flusso XML con codifica SOAP, quando <see cref="T:System.Xml.Serialization.XmlSerializer" /> rileva un tipo riconosciuto che non viene utilizzato o a cui non viene fatto riferimento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> evento si verifica solo quando il <xref:System.Xml.Serialization.XmlSerializer> viene utilizzato per deserializzare un documento XML che contiene un messaggio SOAP conforme alla sezione 5 del documento World Wide Web Consortium (www.w3.org), "Simple Object Access Protocol (SOAP) 1.1".  
  
 I documenti che è conforme alla sezione 5 sono in un formato speciale. Come minimo, tale documento include il corpo principale del messaggio SOAP. Tuttavia, anziché tutti i tipi definiti inline nel documento, alcune definizioni del tipo possono essere codificati come riferimenti a elementi di livello principale nel documento. Di conseguenza, per ogni elemento trovato nel corpo principale che è un riferimento, è necessario un elemento corrispondente che contiene la definizione del tipo. Per correlare l'elemento di riferimento e la definizione del tipo, la definizione del tipo ha un `id` attributo impostato su un ID di stringa univoco e di elemento di riferimento ha un `href` attributo che fa riferimento lo stesso ID.  
  
```  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="id1" n1:GroupName=".NET" GroupNumber="ZDI=" CreationDate="2002-05-02" xmlns:n1="http:'www.cpandl.com">  
    <PosInt xsi:type="xsd:nonNegativeInteger">10000</PosInt>  
    <GroupVehicle href="#id2" />  
  </Group>  
  <Vehicle id="id2" n1:type="Vehicle" xmlns:n1="http://www.w3.org/2001/XMLSchema-instance">  
    <licenseNumber xmlns:q1="http://www.w3.org/2001/XMLSchema" n1:type="q1:string">1234</licenseNumber>  
  </Vehicle>  
```  
  
 Il <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> evento si verifica quando viene trovata nel documento di una definizione di tipo, ma nessun parametro nel corpo principale fa riferimento. Quando si verifica l'evento, è possibile recuperare il tipo XML dell'oggetto senza riferimento esaminando il <xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject%2A> proprietà la <xref:System.Xml.Serialization.UnreferencedObjectEventArgs> classe. L'ID XML dell'oggetto viene restituito dal <xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId%2A> proprietà.  
  
 Il <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> evento non deve essere confuso con il <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> e <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> che si verificano quando nessun membro di classe che corrisponde al tipo di nodo o un elemento XML.  
  
   
  
## Examples  
 L'esempio seguente aggiunge un <xref:System.Xml.Serialization.UnreferencedObjectEventHandler> per un <xref:System.Xml.Serialization.XmlSerializer>. L'evento è gestito dal `Serializer``_``UnreferencedObject` metodo. Per eseguire l'esempio, tagliare e incollare il seguente codice XML nel file "UnrefObj".  
  
```  
<wrapper>  
  <Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="id1" n1:GroupName=".NET" xmlns:n1="http://www.cpandl.com">  
   </Group>  
<Vehicle id="id2" n1:type="Vehicle" xmlns:n1="http://www.w3.org/2001/XMLSchema-instance">  
    <licenseNumber xmlns:q1="http://www.w3.org/2001/XMLSchema" n1:type="q1:string">ABCD</licenseNumber>  
  </Vehicle>  
<Vehicle id="id3" n1:type="Vehicle" xmlns:n1="http://www.w3.org/2001/XMLSchema-instance">  
    <licenseNumber xmlns:q1="http://www.w3.org/2001/XMLSchema" n1:type="q1:string">1234</licenseNumber>  
  </Vehicle>  
</wrapper>  
```  
  
 [!code-cpp[UnreferencedObject Event Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/UnreferencedObject Event Example/CPP/unrefobj.cpp#1)]
 [!code-csharp[UnreferencedObject Event Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/UnreferencedObject Event Example/CS/unrefobj.cs#1)]
 [!code-vb[UnreferencedObject Event Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/UnreferencedObject Event Example/VB/unrefobj.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
  </Members>
</Type>