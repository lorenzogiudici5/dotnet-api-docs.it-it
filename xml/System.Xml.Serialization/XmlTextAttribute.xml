<Type Name="XmlTextAttribute" FullName="System.Xml.Serialization.XmlTextAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd1d340d704f2f3871d98c0ff007f941da7ed18b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720765" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlTextAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlTextAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Indica a <see cref="T:System.Xml.Serialization.XmlSerializer" /> che il membro deve essere trattato come testo XML quando la classe in cui è contenuto viene serializzata o deserializzata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Xml.Serialization.XmlTextAttribute> appartiene a un gruppo di attributi che controlla il modo in <xref:System.Xml.Serialization.XmlSerializer> serializza e deserializza un oggetto (tramite il relativo <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> e <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> metodi). Per un elenco completo di attributi simili, vedere [attributi che controllano la serializzazione XML](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).  
  
 Solo un'istanza di <xref:System.Xml.Serialization.XmlTextAttribute> classe può essere applicata in una classe.  
  
 È possibile applicare il <xref:System.Xml.Serialization.XmlTextAttribute> a campi pubblici e le proprietà di lettura/scrittura pubblici che restituiscono tipi primitivi e di enumerazione.  
  
 È possibile applicare il <xref:System.Xml.Serialization.XmlTextAttribute> a un campo o proprietà che restituisce una matrice di stringhe. È inoltre possibile applicare l'attributo a una matrice di tipo <xref:System.Object> ma è necessario impostare il <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> proprietà stringa. In tal caso, qualsiasi stringa inserita nella matrice viene serializzati come testo XML.  
  
 Il <xref:System.Xml.Serialization.XmlTextAttribute> può anche essere applicato a un campo che restituisce un <xref:System.Xml.XmlNode> o una matrice di <xref:System.Xml.XmlNode> oggetti.  
  
 Per impostazione predefinita, il <xref:System.Xml.Serialization.XmlSerializer> serializza un membro di classe come un elemento XML. Tuttavia, se si applica il <xref:System.Xml.Serialization.XmlTextAttribute> a un membro, il <xref:System.Xml.Serialization.XmlSerializer> converte il valore in testo XML. Ciò significa che il valore è codificato nel contenuto di un elemento XML.  
  
 Il [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) talvolta genera il <xref:System.Xml.Serialization.XmlTextAttribute> durante la creazione di classi da un file XML Schema definition (XSD). Questo errore si verifica quando lo schema contiene un `complexType` con contenuto misto; in tal caso, la classe corrispondente contiene un membro che restituisce una matrice di stringhe a cui il <xref:System.Xml.Serialization.XmlTextAttribute> viene applicato. Ad esempio, quando il `Xml Schema Definition` strumento elabora questo schema:  
  
```  
<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace=""   
xmlns:xs="http://www.w3.org/2001/XMLSchema">  
  <xs:element name="LinkList" type="LinkList" />  
  <xs:complexType name="LinkList" mixed="true">  
    <xs:sequence>  
      <xs:element minOccurs="1" maxOccurs="1" name="id" type="xs:int" />  
      <xs:element minOccurs="0" maxOccurs="1" name="name" type="xs:string" />  
      <xs:element minOccurs="0" maxOccurs="1" name="next" type="LinkList" />  
    </xs:sequence>  
  </xs:complexType>  
</xs:schema>  
```  
  
 viene generata la seguente classe (spazi aggiuntivi e la sezione Osservazioni sono state rimosse):  
  
 [!code-csharp[XmlTextAttribute#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlTextAttribute/cs/source.cs#0)]
 [!code-vb[XmlTextAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlTextAttribute/vb/source.vb#0)]  
  
 Per ulteriori informazioni sull'utilizzo degli attributi, vedere [attributi](~/docs/standard/attributes/index.md).  
  
> [!NOTE]
>  È possibile utilizzare la parola `XmlText` nel codice anziché la forma estesa <xref:System.Xml.Serialization.XmlTextAttribute>.  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlText" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile ignorare il modo che il <xref:System.Xml.Serialization.XmlSerializer> serializza un campo pubblico o una proprietà di lettura/scrittura pubblici tramite la creazione di un <xref:System.Xml.Serialization.XmlAttributes>e l'impostazione relativa <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> proprietà per un <xref:System.Xml.Serialization.XmlTextAttribute>. Per ulteriori dettagli, vedere la classe <xref:System.Xml.Serialization.XmlAttributeOverrides>.  
  
   
  
## Examples  
 Nell'esempio seguente viene serializzata una classe che contiene un campo pubblico denominato `Comment`. Nell'esempio viene applicato un <xref:System.Xml.Serialization.XmlTextAttribute> il campo, eseguendo l'override della serializzazione come elemento XML e serializzandolo invece come testo XML.  
  
 [!code-cpp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> del membro da serializzare.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile ignorare il modo che il <xref:System.Xml.Serialization.XmlSerializer> serializza un campo pubblico o una proprietà di lettura/scrittura pubblici tramite la creazione di un <xref:System.Xml.Serialization.XmlAttributes>e l'impostazione relativa <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> proprietà per un <xref:System.Xml.Serialization.XmlTextAttribute>. Per ulteriori dettagli, vedere la classe <xref:System.Xml.Serialization.XmlAttributeOverrides>.  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tipo di dati XSD (XML Schema Definition Language) del testo generato dalla classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
        <value>Tipo di dati XSD (XML Schema), secondo la definizione fornita da World Wide Web Consortium (www.w3.org) nel documento "XML Schema Part 2: Datatypes".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'impostazione di <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> proprietà a un tipo di dati semplici di XML Schema influisce sul formato del XML generato. Ad esempio, impostare la proprietà su "Data", il testo generato sarà formattato nello stile generale delle date, ad esempio: 2001-08-31. Al contrario, impostare la proprietà su "dateTime" risultati in un momento specifico, come definito da International Organization documento ISO 8601, "Rappresentazioni di date e ore", ad esempio: 2001-08-15T06:59:11.0508456-07:00.  
  
 L'effetto dell'impostazione di <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> proprietà può essere visualizzata anche quando si utilizza il [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) per generare lo Schema XML per un file compilato. Per ulteriori informazioni sull'utilizzo dello strumento, vedere [il XML Schema Definition Tool e la serializzazione XML](~/docs/standard/serialization/the-xml-schema-definition-tool-and-xml-serialization.md).  
  
 Nella tabella seguente sono elencati i tipi di dati semplici di XML Schema e gli equivalenti di .NET.  
  
 Per lo Schema XML `base64Binary` e `hexBinary` tipi di dati, utilizzare una matrice di <xref:System.Byte> strutture e applicare un <xref:System.Xml.Serialization.XmlTextAttribute> con il <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> impostata su "base64Binary" o "hexBinary", come appropriato. Per lo Schema XML `time` e `date` tipi di dati, utilizzare il <xref:System.DateTime> tipo e applicare il <xref:System.Xml.Serialization.XmlTextAttribute> con il <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> impostato su "Data" o "ora".  
  
 Per ogni tipo di dati di XML Schema che viene eseguito il mapping a una stringa, applicare il <xref:System.Xml.Serialization.XmlTextAttribute> con il relativo <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> impostata per il tipo di dati XML Schema. Si noti che ciò non modifica il formato di serializzazione solo lo schema per il membro.  
  
> [!NOTE]
>  La proprietà è tra maiuscole e minuscole, pertanto è necessario impostarlo esattamente a uno dei tipi di dati XML Schema.  
  
> [!NOTE]
>  Elemento passando i dati binari in formato XML è più efficiente passare come un attributo XML.  
  
 Per ulteriori informazioni sui tipi di dati XML Schema, vedere il documento di World Wide Web Consortium (www.w3.org) denominato "XML Schema Part 2: Datatypes".  
  
|Tipo di dati XSD|Tipo di dati .NET|  
|-------------------|--------------------|  
|anyURI|<xref:System.String>|  
|base64Binary|Matrice di <xref:System.Byte> oggetti|  
|boolean|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|date|<xref:System.DateTime>|  
|dateTime|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|ENTITY|<xref:System.String>|  
|ENTITÀ|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|Matrice di <xref:System.Byte> oggetti|  
|Id|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|numero intero|<xref:System.String>|  
|language|<xref:System.String>|  
|long|<xref:System.Int64>|  
|nome|<xref:System.String>|  
|NCName|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTATION|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|duration|<xref:System.String>|  
|stringa|<xref:System.String>|  
|short|<xref:System.Int16>|  
|ora|<xref:System.DateTime>|  
|token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Non è possibile eseguire il mapping del tipo di dati XML Schema al tipo di dati .NET.</exception>
        <exception cref="T:System.InvalidOperationException">Il tipo di dati XML Schema specificato non è valido per la proprietà e non può essere convertito nel tipo di membro.</exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tipo del membro.</summary>
        <value>Il <see cref="T:System.Type" /> del membro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Type> proprietà può essere impostata solo su tipi primitivi ed enumerazioni.  
  
 Il <xref:System.Xml.Serialization.XmlTextAttribute> può anche essere applicato a un campo che restituisce un <xref:System.Xml.XmlNode> o una matrice di <xref:System.Xml.XmlNode> oggetti.  
  
 È possibile applicare il <xref:System.Xml.Serialization.XmlTextAttribute> a un campo o proprietà che restituisce una matrice di stringhe. È inoltre possibile applicare l'attributo a una matrice di tipo <xref:System.Object> ma è necessario impostare il <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> proprietà stringa. In tal caso, qualsiasi stringa inserita nella matrice viene serializzati come testo XML.  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>