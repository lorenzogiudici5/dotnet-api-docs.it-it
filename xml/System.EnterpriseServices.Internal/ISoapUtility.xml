<Type Name="ISoapUtility" FullName="System.EnterpriseServices.Internal.ISoapUtility">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3c57972c59c40495374521bf43250c45066f4d2d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30407805" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISoapUtility" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISoapUtility" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ISoapUtility" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISoapUtility" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISoapUtility" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("5AC4CB7E-F89F-429b-926B-C7F940936BF4")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce utilità per il supporto dell'esportazione di proxy di applicazioni abilitate per COM+ SOAP da parte del server e dell'importazione dei proxy da parte del client.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le funzioni di utilità <xref:System.EnterpriseServices.Internal.ISoapUtility> fornisce sono chiamate da diverse posizioni all'interno di COM+; tuttavia, il loro scopo principale è per supportare l'esportazione e importazione di proxy client.  
  
 Vedere <xref:System.EnterpriseServices.Internal.SoapUtility> per l'implementazione predefinita.  
  
 <xref:System.EnterpriseServices.Internal.ISoapUtility> viene utilizzata internamente da .NET Framework. Non è necessario utilizzarla direttamente nel codice.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetServerBinPath">
      <MemberSignature Language="C#" Value="public void GetServerBinPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string binPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetServerBinPath(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; binPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetServerBinPath (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef binPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetServerBinPath(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % binPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="binPath" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">Server Web radice.</param>
        <param name="inBaseUrl">Indirizzo URL di base.</param>
        <param name="inVirtualRoot">Nome della radice virtuale.</param>
        <param name="binPath">Quando il metodo termina, questo parametro contiene il percorso della directory bin della radice virtuale SOAP.</param>
        <summary>Restituisce il percorso della directory bin della radice virtuale SOAP.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">Un chiamante nella catena di chiamate non dispone dell'autorizzazione all'accesso a codice non gestito.</exception>
        <exception cref="T:System.PlatformNotSupportedException">L'utilità SOAP non è disponibile.</exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException">La chiamata per ottenere la directory di sistema non è riuscita.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerPhysicalPath">
      <MemberSignature Language="C#" Value="public void GetServerPhysicalPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string physicalPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetServerPhysicalPath(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; physicalPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetServerPhysicalPath (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef physicalPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetServerPhysicalPath(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % physicalPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">Server Web radice.</param>
        <param name="inBaseUrl">Indirizzo URL di base.</param>
        <param name="inVirtualRoot">Nome della radice virtuale.</param>
        <param name="physicalPath">Quando il metodo termina, questo parametro contiene il percorso della radice virtuale SOAP.</param>
        <summary>Restituisce il percorso della radice virtuale SOAP.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">Un chiamante nella catena di chiamate non dispone dell'autorizzazione all'accesso a codice non gestito.</exception>
        <exception cref="T:System.PlatformNotSupportedException">L'utilità SOAP non è disponibile.</exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException">La chiamata per ottenere la directory di sistema non è riuscita.</exception>
      </Docs>
    </Member>
    <Member MemberName="Present">
      <MemberSignature Language="C#" Value="public void Present ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Present() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapUtility.Present" />
      <MemberSignature Language="VB.NET" Value="Public Sub Present ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Present();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se sono presenti interfacce SOAP crittografate e autenticate.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">Un chiamante nella catena di chiamate non dispone dell'autorizzazione all'accesso a codice non gestito.</exception>
        <exception cref="T:System.PlatformNotSupportedException">L'utilità SOAP non è disponibile.</exception>
      </Docs>
    </Member>
  </Members>
</Type>