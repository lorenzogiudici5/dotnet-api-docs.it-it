<Type Name="IServerWebConfig" FullName="System.EnterpriseServices.Internal.IServerWebConfig">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="86831a6ad9194bc385bb814d43a6301246a847f5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36487509" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IServerWebConfig" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IServerWebConfig" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.IServerWebConfig" />
  <TypeSignature Language="VB.NET" Value="Public Interface IServerWebConfig" />
  <TypeSignature Language="C++ CLI" Value="public interface class IServerWebConfig" />
  <TypeSignature Language="F#" Value="type IServerWebConfig = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("6261e4b5-572a-4142-a2f9-1fe1a0c97097")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Crea un file Web.config per un'applicazione COM+ abilitata per SOAP e vi aggiunge voci relative ai componenti per le interfacce COM pubblicate nell'applicazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.EnterpriseServices.Internal.IServerWebConfig> interfaccia è implementata solo per il <xref:System.EnterpriseServices.Internal.ServerWebConfig> classe e viene utilizzato solo all'interno dell'infrastruttura di .NET Framework. Anziché implementare questa interfaccia o creare un'istanza di un <xref:System.EnterpriseServices.Internal.IServerWebConfig> oggetto dell'interfaccia, usare il <xref:System.EnterpriseServices.Internal.Publish> classe che implementa il <xref:System.EnterpriseServices.Internal.IComSoapPublisher> interfaccia.  
  
 <xref:System.EnterpriseServices.Internal.IServerWebConfig> viene utilizzata internamente da .NET Framework. Non è necessario utilizzare direttamente nel codice.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="AddElement">
      <MemberSignature Language="C#" Value="public void AddElement (string FilePath, string AssemblyName, string TypeName, string ProgId, string Mode, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddElement(string FilePath, string AssemblyName, string TypeName, string ProgId, string Mode, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddElement (FilePath As String, AssemblyName As String, TypeName As String, ProgId As String, Mode As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddElement(System::String ^ FilePath, System::String ^ AssemblyName, System::String ^ TypeName, System::String ^ ProgId, System::String ^ Mode, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member AddElement : string * string * string * string * string *  -&gt; unit" Usage="iServerWebConfig.AddElement (FilePath, AssemblyName, TypeName, ProgId, Mode, Error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FilePath" Type="System.String" />
        <Parameter Name="AssemblyName" Type="System.String" />
        <Parameter Name="TypeName" Type="System.String" />
        <Parameter Name="ProgId" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="FilePath">Percorso del file Web.config esistente.</param>
        <param name="AssemblyName">Nome dell'assembly contenente il tipo aggiunto.</param>
        <param name="TypeName">Nome del tipo aggiunto.</param>
        <param name="ProgId">Identificatore a livello di codice del tipo aggiunto.</param>
        <param name="Mode">Costante di stringa corrispondente al nome di un membro dell'enumerazione <see cref="T:System.Runtime.Remoting.WellKnownObjectMode" />, che indica la modalità di attivazione di un oggetto noto.</param>
        <param name="Error">Stringa in cui è possibile scrivere un messaggio di errore.</param>
        <summary>Aggiunge a un file Web.config elementi XML per un'interfaccia COM pubblicata in un'applicazione COM+ abilitata per SOAP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vedere il <xref:System.EnterpriseServices.Internal.ServerWebConfig.AddElement%2A> metodo per i dettagli di implementazione. Tuttavia, è necessario chiamare `AddElement` metodo direttamente.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (string FilePath, string FileRootName, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Create(string FilePath, string FileRootName, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IServerWebConfig.Create(System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create (FilePath As String, FileRootName As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::String ^ FilePath, System::String ^ FileRootName, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member Create : string * string *  -&gt; unit" Usage="iServerWebConfig.Create (FilePath, FileRootName, Error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FilePath" Type="System.String" />
        <Parameter Name="FileRootName" Type="System.String" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="FilePath">Cartella in cui creare il file di configurazione.</param>
        <param name="FileRootName">Valore stringa a cui è possibile aggiungere l'estensione CONFIG, ad esempio Web nel caso di Web.config.</param>
        <param name="Error">Stringa in cui è possibile scrivere un messaggio di errore.</param>
        <summary>Crea un file Web.config per un'applicazione COM+ abilitata per SOAP, nel quale è possibile aggiungere elementi XML per le interfacce COM pubblicate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vedere il <xref:System.EnterpriseServices.Internal.ServerWebConfig.Create%2A> metodo per i dettagli di implementazione. Tuttavia, è necessario chiamare `Create` direttamente.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>