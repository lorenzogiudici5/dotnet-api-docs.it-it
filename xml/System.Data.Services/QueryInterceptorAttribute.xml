<Type Name="QueryInterceptorAttribute" FullName="System.Data.Services.QueryInterceptorAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b929429772036e91a54d501fddcfe7efc1d283d6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36681095" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class QueryInterceptorAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit QueryInterceptorAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.QueryInterceptorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class QueryInterceptorAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryInterceptorAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type QueryInterceptorAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>La presenza di <see cref="T:System.Data.Services.QueryInterceptorAttribute" /> in un metodo lo identifica come intercettore di query sul set di entità specificato.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'autorizzazione e la convalida a livello di set di entità vengono implementate da metodi annotati con <xref:System.Data.Services.QueryInterceptorAttribute>. [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]non implementano criteri di sicurezza ma invece forniscono l'infrastruttura necessaria agli sviluppatori di servizi per scrivere regole di sicurezza personalizzare nonché la convalida business.  
  
 Il controllo e la convalida dell'accesso al set di entità vengono abilitati mediante operazioni di query utilizzando la composizione di query. Per controllare l'accesso basato sulle entità, implementare un metodo per set di entità in base alle seguenti regole:  
  
 Il metodo deve avere ambito pubblico e deve essere annotato con <xref:System.Data.Services.QueryInterceptorAttribute>, assumendo il nome di un set di entità come parametro.  
  
 Il metodo non deve accettare parametri.  
  
 Il metodo deve restituire un'espressione di tipo `Expression<Func<T, bool>>` che rappresenta il filtro da comporre per il set di entità.  
  
   
  
## Examples  
 Nell'esempio seguente viene controllato l'accesso al set di entità `Customers`. Ogni `Customer` è in grado di vedere solo gli oggetti `Orders` associato al `Customer` in questione.  
  
```  
[QueryInterceptor("Orders")]  
public Expression<Func<Order, bool>> FilterOrders()   
{  
    return o => o.Customer.Name == /* Current principal name. */;  
}   
  
// Insures that the user accessing the customer(s) has the appropriate  
// rights as defined in the QueryRules object to access the customer  
// resource(s).  
  
[QueryInterceptor ("Customers")]  
public Expression<Func<Customer, bool>> FilterCustomers()   
{  
  return c => c.Name == /* Current principal name. */ &&  
              this.CurrentDataSource.QueryRules.Contains(  
                rule => rule.Name == c.Name &&  
                        rule.CustomerAllowedToQuery == true  
              );  
}  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryInterceptorAttribute (string entitySetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string entitySetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entitySetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryInterceptorAttribute(System::String ^ entitySetName);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.QueryInterceptorAttribute : string -&gt; System.Data.Services.QueryInterceptorAttribute" Usage="new System.Data.Services.QueryInterceptorAttribute entitySetName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entitySetName">Il nome del set di entità che contiene l'entità a cui viene applicato l'intercettore.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Services.QueryInterceptorAttribute" /> per il set di entità specificato dal parametro <paramref name="entitySetName" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntitySetName">
      <MemberSignature Language="C#" Value="public string EntitySetName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntitySetName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.QueryInterceptorAttribute.EntitySetName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntitySetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntitySetName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntitySetName : string" Usage="System.Data.Services.QueryInterceptorAttribute.EntitySetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome del set di entità che contiene l'entità a cui viene applicato l'intercettore.</summary>
        <value>Una stringa che indica il nome del set di entità che contiene l'entità a cui viene applicato l'intercettore.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>