<Type Name="IpcClientChannel" FullName="System.Runtime.Remoting.Channels.Ipc.IpcClientChannel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c57d132850d449269fbe94f793d464f164348353" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36536486" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class IpcClientChannel : System.Runtime.Remoting.Channels.IChannel, System.Runtime.Remoting.Channels.IChannelSender, System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IpcClientChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelSender, class System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" />
  <TypeSignature Language="VB.NET" Value="Public Class IpcClientChannel&#xA;Implements IChannel, IChannelSender, ISecurableChannel" />
  <TypeSignature Language="C++ CLI" Value="public ref class IpcClientChannel : System::Runtime::Remoting::Channels::IChannel, System::Runtime::Remoting::Channels::IChannelSender, System::Runtime::Remoting::Channels::ISecurableChannel" />
  <TypeSignature Language="F#" Value="type IpcClientChannel = class&#xA;    interface IChannelSender&#xA;    interface IChannel&#xA;    interface ISecurableChannel" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSender</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.ISecurableChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Implementa un canale client per chiamate remote che utilizza il protocollo IPC per la trasmissione dei messaggi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I canali vengono utilizzati dall'infrastruttura di comunicazione remota di.NET Framework per trasportare chiamate remote. Quando un client chiama un oggetto remoto, la chiamata viene serializzata in un messaggio inviato da un canale client e ricevuto da un canale server. Dopo aver ricevuto il messaggio, che venga deserializzato ed elaborato. I valori restituiti vengono trasmessi tramite il canale del server e ricevuti dal canale client.  
  
 Il <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> classe utilizza il sistema di comunicazione interprocesso (IPC) Windows per il trasporto di messaggi tra i domini applicazione nello stesso computer. Durante la comunicazione tra i domini applicazione nello stesso computer, il canale IPC è molto più veloce rispetto i canali TCP o HTTP.  
  
 Per eseguire un'ulteriore elaborazione dei messaggi sul lato client, è possibile specificare un'implementazione del <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> interfaccia tramite quale tutti i messaggi elaborati dal <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> oggetto verrà passato.  
  
 Per impostazione predefinita, il <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> classe utilizza un formattatore binario per serializzare tutti i messaggi.  
  
 A <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> oggetto sono associate proprietà di configurazione che può essere impostata in fase di esecuzione in un file di configurazione (richiamando il metodo statico <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> (metodo)) o a livello di codice (passando un <xref:System.Collections.IDictionary> raccolta per il <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A> costruttore). Per un elenco di queste proprietà di configurazione, vedere la documentazione per il <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A> costruttore.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato l'utilizzo della classe <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel>.  
  
 [!code-cpp[Remoting_Ipc#20](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/client.cpp#20)]
 [!code-csharp[Remoting_Ipc#20](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/client.cs#20)]  
  
 Il codice precedente utilizza il seguente oggetto remoto.  
  
 [!code-cpp[Remoting_Ipc#0](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/counter.cpp#0)]
 [!code-csharp[Remoting_Ipc#0](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/counter.cs#0)]  
  
 Per un esempio di un server che espone l'oggetto in modalità remota, vedere <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcClientChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcClientChannel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le proprietà della configurazione di <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> istanza restituita da questo costruttore sono impostati sui valori predefiniti. Nella tabella seguente mostra il valore predefinito per ogni proprietà di configurazione.  
  
|Proprietà di configurazione|Descrizione|  
|----------------------------|-----------------|  
|`name`|Il nome predefinito è "ipc client". Ogni canale deve avere un nome univoco.|  
|`priority`|La priorità predefinita è 1.|  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare questo costruttore.  
  
 [!code-cpp[Remoting_Ipc#21](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/client.cpp#21)]
 [!code-csharp[Remoting_Ipc#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/client.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcClientChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IClientChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcClientChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IClientChannelSinkProvider ^ sinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcClientChannel : System.Collections.IDictionary * System.Runtime.Remoting.Channels.IClientChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcClientChannel (properties, sinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="properties">Insieme <see cref="T:System.Collections.IDictionary" /> che specifica i valori per le proprietà di configurazione che vengono utilizzate dal canale.</param>
        <param name="sinkProvider">Implementazione di <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> che verrà utilizzata dal canale.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" /> con le proprietà di configurazione e il sink specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulle proprietà di configurazione dei canali, vedere [Channel e Formatter Configuration Properties](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  
  
 Se non si necessita di funzionalità sink, impostare il `sinkProvider` parametro `null`.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare questo costruttore.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#41](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client2.cpp#41)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#41](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client2.cs#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcClientChannel (string name, System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, sinkProvider As IClientChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcClientChannel(System::String ^ name, System::Runtime::Remoting::Channels::IClientChannelSinkProvider ^ sinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcClientChannel : string * System.Runtime.Remoting.Channels.IClientChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcClientChannel (name, sinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="name">Nome del canale.</param>
        <param name="sinkProvider">Implementazione di <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> che verrà utilizzata dal canale.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" /> con il nome e il sink specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore imposta la <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName%2A> proprietà utilizzando il `name` parametro. Se si desidera registrare più di un canale, ogni canale deve avere un nome univoco.  
  
 Se non si necessita di funzionalità sink, impostare il `sinkProvider` parametro `null`.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare questo costruttore.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#42](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client2.cpp#42)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#42](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client2.cs#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelName">
      <MemberSignature Language="C#" Value="public string ChannelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChannelName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelName : string" Usage="System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome del canale corrente.</summary>
        <value>Istanza <see cref="T:System.String" /> che contiene il nome del canale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni canale registrato ha un nome univoco. Il nome viene utilizzato per recuperare un canale specifico quando si chiama il <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A?displayProperty=nameWithType> metodo. Il nome predefinito è "ipc client".  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare la proprietà <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName%2A>.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#21](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client.cpp#21)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#21](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPriority">
      <MemberSignature Language="C#" Value="public int ChannelPriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelPriority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChannelPriority { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelPriority : int" Usage="System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la priorità del canale corrente.</summary>
        <value>Intero che indica la priorità assegnata al canale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La priorità determina l'ordine in cui i client si connettono a un determinato endpoint; i canali con priorità maggiore collegare prima i canali con priorità inferiore. La priorità predefinita è 1. negativi sono consentiti.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare la proprietà <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority%2A>.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#23](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client.cpp#23)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#23](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client.cs#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageSink">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink (string url, object remoteChannelData, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink(string url, object remoteChannelData, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink(System.String,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateMessageSink (url As String, remoteChannelData As Object, ByRef objectURI As String) As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessageSink ^ CreateMessageSink(System::String ^ url, System::Object ^ remoteChannelData, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateMessageSink : string * obj *  -&gt; System.Runtime.Remoting.Messaging.IMessageSink&#xA;override this.CreateMessageSink : string * obj *  -&gt; System.Runtime.Remoting.Messaging.IMessageSink" Usage="ipcClientChannel.CreateMessageSink (url, remoteChannelData, objectURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="remoteChannelData" Type="System.Object" />
        <Parameter Name="objectURI" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">URL al quale il nuovo sink invia messaggi. Questo parametro può essere <see langword="null" />.</param>
        <param name="remoteChannelData">Oggetto dati del canale dell'host remoto al quale il nuovo sink invierà i messaggi. Questo parametro può essere <see langword="null" />.</param>
        <param name="objectURI">Quando questo metodo termina, contiene l'URI del nuovo sink di messaggi del canale che invia messaggi all'URL o all'oggetto dati del canale specificato. Questo parametro viene passato non inizializzato.</param>
        <summary>Restituisce un sink dei messaggi del canale che invia messaggi all'URL o all'oggetto dati del canale specificato.</summary>
        <returns>Sink di messaggi del canale che invia messaggi all'URL o all'oggetto dati del canale specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink%2A> metodo restituisce un sink di messaggio del canale che invia messaggi all'URL specificato o oggetto dati del canale. Se il `uri` parametro `null`, `remoteChannelData` viene utilizzato come destinazione per il sink. Sia il `url` oppure `remoteChannelData` i parametri possono essere `null`, ma non entrambi.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink%2A>.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#22](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client.cpp#22)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#22](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client.cs#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Remoting.RemotingException">Il sink specificato non implementa l'oggetto <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecured { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSecured : bool with get, set" Usage="System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore booleano che indica se il canale corrente è protetto.</summary>
        <value>Valore booleano che indica se l'istanza corrente è sicura.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string url, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Parse(string url, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (url As String, ByRef objectURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Parse(System::String ^ url, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberSignature Language="F#" Value="abstract member Parse : string *  -&gt; string&#xA;override this.Parse : string *  -&gt; string" Usage="ipcClientChannel.Parse (url, objectURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="objectURI" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">URL da cui estrarre l'URI dell'oggetto.</param>
        <param name="objectURI">Quando il metodo termina, restituisce un'istanza di <see cref="T:System.String" /> che contiene l'URI dell'oggetto remoto conosciuto. Questo parametro viene passato non inizializzato.</param>
        <summary>Estrae dall'URL specificato l'URI del canale e quello dell'oggetto remoto conosciuto.</summary>
        <returns>Oggetto <see cref="T:System.String" /> contenente l'URI del canale.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse%2A>.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#24](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client.cpp#24)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#24](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client.cs#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>