<Type Name="CaseInsensitiveComparer" FullName="System.Collections.CaseInsensitiveComparer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="86276633a91f3ef0fd7c54b8c6041c7d5a460135" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34316333" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CaseInsensitiveComparer : System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CaseInsensitiveComparer extends System.Object implements class System.Collections.IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.CaseInsensitiveComparer" />
  <TypeSignature Language="VB.NET" Value="Public Class CaseInsensitiveComparer&#xA;Implements IComparer" />
  <TypeSignature Language="C++ CLI" Value="public ref class CaseInsensitiveComparer : System::Collections::IComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Consente di confrontare due oggetti in termini di uguaglianza, ignorando la distinzione tra maiuscole e minuscole nelle stringhe.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.CaseInsensitiveComparer> implementa il <xref:System.Collections.IComparer> interfaccia che supporta i confronti tra maiuscole e minuscole nelle stringhe, come <xref:System.Collections.CaseInsensitiveHashCodeProvider> implementa il <xref:System.Collections.IHashCodeProvider> interfaccia che supporta i confronti tra maiuscole e minuscole nelle stringhe.  
  
 Il <xref:System.Collections.Comparer> classe è l'implementazione predefinita del <xref:System.Collections.IComparer> interfaccia ed esegue i confronti di stringhe tra maiuscole e minuscole.  
  
 Gli oggetti utilizzati come chiavi da un <xref:System.Collections.Hashtable> necessarie per eseguire l'override di <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> (metodo) (o <xref:System.Collections.IHashCodeProvider> interfaccia) e <xref:System.Object.Equals%2A?displayProperty=nameWithType> (metodo) (o <xref:System.Collections.IComparer> interfaccia). L'implementazione dei metodi o delle interfacce deve gestire distinzione maiuscole/minuscole allo stesso modo; in caso contrario, il <xref:System.Collections.Hashtable> comportarsi in modo non corretto. Ad esempio, quando si crea un <xref:System.Collections.Hashtable>, è necessario utilizzare questa classe con il <xref:System.Collections.CaseInsensitiveHashCodeProvider> classe o una qualsiasi tra maiuscole e minuscole <xref:System.Collections.IHashCodeProvider> implementazione.  
  
 I confronti di stringhe potrebbero avere risultati diversi a seconda delle impostazioni cultura. Per ulteriori informazioni su confronti di impostazioni cultura specifiche, vedere il <xref:System.Globalization> dello spazio dei nomi e [globalizzazione e localizzazione](~/docs/standard/globalization-localization/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente crea una tabella hash tra maiuscole e minuscole e una tabella hash tra maiuscole e minuscole e viene illustrata la differenza di comportamento, anche se entrambe contengono gli stessi elementi.  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IComparer" />
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.Comparer" />
    <altmember cref="T:System.Globalization.CompareInfo" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.CaseInsensitiveComparer" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CaseInsensitiveComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveComparer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CaseInsensitiveComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.CaseInsensitiveComparer" /> utilizzando la proprietà <see cref="P:System.Threading.Thread.CurrentCulture" /> del thread corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Collections.CaseInsensitiveComparer> istanza viene creata utilizzando questo costruttore, il <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> del thread corrente viene salvato. Routine di confronto utilizzate le impostazioni cultura salvate per determinare l'ordinamento e regole di maiuscole e minuscole. di conseguenza, i confronti di stringhe potrebbero essere risultati diversi a seconda delle impostazioni cultura. Per ulteriori informazioni su confronti di impostazioni cultura specifiche, vedere il <xref:System.Globalization> dello spazio dei nomi e [globalizzazione e localizzazione](~/docs/standard/globalization-localization/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente crea una tabella hash tra maiuscole e minuscole e una tabella hash tra maiuscole e minuscole e viene illustrata la differenza di comportamento, anche se entrambe contengono gli stessi elementi.  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CaseInsensitiveComparer (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CaseInsensitiveComparer(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <see cref="T:System.Globalization.CultureInfo" /> da utilizzare per la nuova <see cref="T:System.Collections.CaseInsensitiveComparer" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.CaseInsensitiveComparer" /> usando il <see cref="T:System.Globalization.CultureInfo" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Routine di confronto utilizzate specificato <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> per determinare l'ordinamento e regole di maiuscole e minuscole. I confronti di stringhe potrebbero avere risultati diversi a seconda delle impostazioni cultura. Per ulteriori informazioni su confronti di impostazioni cultura specifiche, vedere il <xref:System.Globalization> dello spazio dei nomi e [globalizzazione e localizzazione](~/docs/standard/globalization-localization/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente crea una tabella hash tra maiuscole e minuscole e una tabella hash tra maiuscole e minuscole e viene illustrata la differenza di comportamento, anche se entrambe contengono gli stessi elementi.  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="culture" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(object a, object b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (a As Object, b As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::Object ^ a, System::Object ^ b);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a">Primo oggetto da confrontare.</param>
        <param name="b">Secondo oggetto da confrontare.</param>
        <summary>Esegue un confronto senza distinzione tra maiuscole e minuscole tra due oggetti dello stesso tipo e viene restituito un valore che indica se uno degli oggetti è minore, uguale o maggiore dell'altro.</summary>
        <returns>Intero con segno che indica i valori relativi di <paramref name="a" /> e <paramref name="b" />, come illustrato nella tabella seguente.  
  
 <list type="table"><listheader><term> Valore  </term><description> Significato  </description></listheader><item><term> Minore di zero  </term><description><paramref name="a" /> è minore di <paramref name="b" />, senza distinzione tra maiuscole e minuscole.  </description></item><item><term> Zero  </term><description><paramref name="a" /> è uguale a <paramref name="b" />, senza distinzione tra maiuscole e minuscole.  </description></item><item><term> Maggiore di zero  </term><description><paramref name="a" /> è maggiore di <paramref name="b" />, senza distinzione tra maiuscole e minuscole. </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `a` e `b` sono entrambe le stringhe, questo metodo utilizza <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> per confrontare le stringhe con le maiuscole e minuscole ignorata; in caso contrario, viene utilizzato il <xref:System.IComparable> implementazione degli oggetti. Vale a dire se `a` implementa <xref:System.IComparable>, questo metodo restituisce il risultato di `a`. `CompareTo` (`b`); in caso contrario, se `b` implementa <xref:System.IComparable>, restituisce il risultato negato di `b`. `CompareTo` (`a`).  
  
 Confronto tra `null` è consentita con qualsiasi tipo e non genera un'eccezione quando si utilizza <xref:System.IComparable>. Durante l'ordinamento, `null` viene considerato minore rispetto a qualsiasi altro oggetto.  
  
 I confronti di stringhe potrebbero avere risultati diversi a seconda delle impostazioni cultura. Per ulteriori informazioni su confronti di impostazioni cultura specifiche, vedere il <xref:System.Globalization> dello spazio dei nomi e [globalizzazione e localizzazione](~/docs/standard/globalization-localization/index.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="a" /> e <paramref name="b" /> non implementano l'interfaccia <see cref="T:System.IComparable" />.  -oppure-  <paramref name="a" /> e <paramref name="b" /> sono di tipo diverso.</exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Globalization.CompareInfo" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.CaseInsensitiveComparer Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.CaseInsensitiveComparer Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CaseInsensitiveComparer.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As CaseInsensitiveComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::CaseInsensitiveComparer ^ Default { System::Collections::CaseInsensitiveComparer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.CaseInsensitiveComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un'istanza di <see cref="T:System.Collections.CaseInsensitiveComparer" /> associata alla proprietà <see cref="P:System.Threading.Thread.CurrentCulture" /> del thread corrente e sempre disponibile.</summary>
        <value>Istanza di <see cref="T:System.Collections.CaseInsensitiveComparer" /> associata alla proprietà <see cref="P:System.Threading.Thread.CurrentCulture" /> del thread corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Collections.CaseInsensitiveComparer> istanza viene creata utilizzando il costruttore senza parametri, il <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> del thread corrente viene salvato. Routine di confronto utilizzate le impostazioni cultura salvate per determinare l'ordinamento e regole di maiuscole e minuscole. di conseguenza, i confronti di stringhe potrebbero essere risultati diversi a seconda delle impostazioni cultura. Per ulteriori informazioni su confronti di impostazioni cultura specifiche, vedere il <xref:System.Globalization> dello spazio dei nomi e [globalizzazione e localizzazione](~/docs/standard/globalization-localization/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="DefaultInvariant">
      <MemberSignature Language="C#" Value="public static System.Collections.CaseInsensitiveComparer DefaultInvariant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.CaseInsensitiveComparer DefaultInvariant" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CaseInsensitiveComparer.DefaultInvariant" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultInvariant As CaseInsensitiveComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::CaseInsensitiveComparer ^ DefaultInvariant { System::Collections::CaseInsensitiveComparer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.CaseInsensitiveComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un'istanza di <see cref="T:System.Collections.CaseInsensitiveComparer" /> associata alla proprietà <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> e sempre disponibile.</summary>
        <value>Istanza di <see cref="T:System.Collections.CaseInsensitiveComparer" /> associata a <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Routine di confronto utilizzate la <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> per determinare l'ordinamento e regole di maiuscole e minuscole. I confronti di stringhe potrebbero avere risultati diversi a seconda delle impostazioni cultura. Per ulteriori informazioni su confronti di impostazioni cultura specifiche, vedere il <xref:System.Globalization> dello spazio dei nomi e [globalizzazione e localizzazione](~/docs/standard/globalization-localization/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente crea una tabella hash tra maiuscole e minuscole e una tabella hash tra maiuscole e minuscole e viene illustrata la differenza di comportamento, anche se entrambe contengono gli stessi elementi.  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
  </Members>
</Type>