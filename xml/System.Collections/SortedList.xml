<Type Name="SortedList" FullName="System.Collections.SortedList">
  <TypeSignature Language="C#" Value="public class SortedList : ICloneable, System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SortedList extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.SortedList" />
  <TypeSignature Language="VB.NET" Value="Public Class SortedList&#xA;Implements ICloneable, IDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortedList : ICloneable, System::Collections::IDictionary" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.SortedList/SortedListDebugView))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8d7ba-101">Rappresenta una raccolta di coppie chiave/valore, ordinate in base alle chiavi e accessibili per chiave e per indice.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-101">Represents a collection of key/value pairs that are sorted by the keys and are accessible by key and by index.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-102">Per la versione generica di questa raccolta, vedere <xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-102">For the generic version of this collection, see <xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8d7ba-103">Oggetto <xref:System.Collections.SortedList> accessibili tramite la chiave, ad esempio un elemento in qualsiasi elemento <xref:System.Collections.IDictionary> implementazione, o dal relativo indice, ad esempio un elemento in qualsiasi <xref:System.Collections.IList> implementazione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-103">A <xref:System.Collections.SortedList> element can be accessed by its key, like an element in any <xref:System.Collections.IDictionary> implementation, or by its index, like an element in any <xref:System.Collections.IList> implementation.</span></span>  
  
 <span data-ttu-id="8d7ba-104">Oggetto <xref:System.Collections.SortedList> oggetto gestisce internamente due matrici per archiviare gli elementi dell'elenco, ovvero una matrice per le chiavi e un'altra matrice per i valori associati.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-104">A <xref:System.Collections.SortedList> object internally maintains two arrays to store the elements of the list; that is, one array for the keys and another array for the associated values.</span></span> <span data-ttu-id="8d7ba-105">Ogni elemento è una coppia chiave/valore che è possibile accedere come un <xref:System.Collections.DictionaryEntry> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-105">Each element is a key/value pair that can be accessed as a <xref:System.Collections.DictionaryEntry> object.</span></span> <span data-ttu-id="8d7ba-106">Non può essere una chiave `null`, ma può essere un valore.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-106">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="8d7ba-107">La capacità di un <xref:System.Collections.SortedList> oggetto è il numero di elementi di <xref:System.Collections.SortedList> può contenere.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-107">The capacity of a <xref:System.Collections.SortedList> object is the number of elements the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="8d7ba-108">Quando gli elementi vengono aggiunti a un <xref:System.Collections.SortedList>, incrementata automaticamente in base alle necessità, tramite riallocazione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-108">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required through reallocation.</span></span> <span data-ttu-id="8d7ba-109">È possibile diminuire la capacità chiamando <xref:System.Collections.SortedList.TrimToSize%2A> o impostando la <xref:System.Collections.SortedList.Capacity%2A> proprietà in modo esplicito.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-109">The capacity can be decreased by calling <xref:System.Collections.SortedList.TrimToSize%2A> or by setting the <xref:System.Collections.SortedList.Capacity%2A> property explicitly.</span></span>  
  
 <span data-ttu-id="8d7ba-110">Per grandi <xref:System.Collections.SortedList> oggetti, è possibile aumentare la capacità massima a 2 miliardi di elementi in un sistema a 64 bit impostando il `enabled` attributo dell'elemento di configurazione per `true` nell'ambiente di runtime.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-110">For very large <xref:System.Collections.SortedList> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the  configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="8d7ba-111">Gli elementi di un <xref:System.Collections.SortedList> oggetto sono ordinate per chiave in uno specifico <xref:System.Collections.IComparer> implementazione specificato al momento il <xref:System.Collections.SortedList> viene creato o in base al <xref:System.IComparable> implementazione fornita dalle chiavi stesse.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-111">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span> <span data-ttu-id="8d7ba-112">In entrambi i casi, un <xref:System.Collections.SortedList> non consentono chiavi duplicate.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-112">In either case, a <xref:System.Collections.SortedList> does not allow duplicate keys.</span></span>  
  
 <span data-ttu-id="8d7ba-113">La sequenza di indice si basa sulla sequenza di ordinamento.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-113">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="8d7ba-114">Quando viene aggiunto un elemento, viene inserito nella <xref:System.Collections.SortedList> nell'ordinamento corretto ordine e l'indicizzazione si adegua di conseguenza.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-114">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="8d7ba-115">Quando un elemento viene rimosso, l'indicizzazione anche si adegua di conseguenza.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-115">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="8d7ba-116">Pertanto, l'indice di una coppia chiave/valore specifica potrebbe cambiare come gli elementi vengono aggiunti o rimossi dal <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-116">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="8d7ba-117">Operazioni su un <xref:System.Collections.SortedList> oggetto tendono a essere più lente delle operazioni su un <xref:System.Collections.Hashtable> oggetto a causa dell'ordinamento.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-117">Operations on a <xref:System.Collections.SortedList> object tend to be slower than operations on a <xref:System.Collections.Hashtable> object because of the sorting.</span></span> <span data-ttu-id="8d7ba-118">Tuttavia, il <xref:System.Collections.SortedList> offre maggiore flessibilità, consentendo l'accesso ai valori delle chiavi associate o mediante gli indici.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-118">However, the <xref:System.Collections.SortedList> offers more flexibility by allowing access to the values either through the associated keys or through the indexes.</span></span>  
  
 <span data-ttu-id="8d7ba-119">Elementi nella raccolta è accessibile tramite un indice intero.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-119">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="8d7ba-120">Gli indici in questa raccolta sono in base zero.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-120">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="8d7ba-121">Il `foreach` istruzione del linguaggio c# (`for each` in Visual Basic) restituisce un oggetto di tipo degli elementi nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-121">The `foreach` statement of the C# language (`for each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="8d7ba-122">Poiché ogni elemento di <xref:System.Collections.SortedList> oggetto è una coppia chiave/valore, il tipo di elemento non è il tipo della chiave o il tipo del valore.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-122">Since each element of the <xref:System.Collections.SortedList> object is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="8d7ba-123">Invece, il tipo di elemento è <xref:System.Collections.DictionaryEntry>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-123">Rather, the element type is <xref:System.Collections.DictionaryEntry>.</span></span> <span data-ttu-id="8d7ba-124">Ad esempio:</span><span class="sxs-lookup"><span data-stu-id="8d7ba-124">For example:</span></span>  
  
 [!code-cpp[Classic SortedList Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic SortedList Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList Example/CS/remarks.cs#2)]
 [!code-vb[Classic SortedList Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList Example/VB/remarks.vb#2)]  
  
 <span data-ttu-id="8d7ba-125">Il `foreach` istruzione è un wrapper per l'enumeratore, che consente solo di leggere da, non la scrittura, la raccolta.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-125">The `foreach` statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-126">Esempio di codice seguente viene illustrato come creare e inizializzare un <xref:System.Collections.SortedList> oggetto e come stampare i relativi valori e chiavi.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-126">The following code example shows how to create and initialize a <xref:System.Collections.SortedList> object and how to print out its keys and values.</span></span>  
  
 [!code-cpp[Classic SortedList Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="8d7ba-127">Statici pubblici (<see langword="Shared" /> in Visual Basic) di questo tipo sono thread-safe.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-127">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="8d7ba-128">I membri di istanza non sono garantiti come thread-safe.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-128">Any instance members are not guaranteed to be thread safe.</span></span>  
  
 <span data-ttu-id="8d7ba-129">Oggetto <see cref="T:System.Collections.SortedList" /> oggetto può supportare più lettori contemporaneamente, fino a quando non è possibile modificare la raccolta.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-129">A <see cref="T:System.Collections.SortedList" /> object can support multiple readers concurrently, as long as the collection is not modified.</span></span> <span data-ttu-id="8d7ba-130">Per garantire la thread-safe di <see cref="T:System.Collections.SortedList" />, tutte le operazioni devono essere eseguite tramite il wrapper restituito dal <see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /> metodo.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-130">To guarantee the thread safety of the <see cref="T:System.Collections.SortedList" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /> method.</span></span>  
  
 <span data-ttu-id="8d7ba-131">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-131">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="8d7ba-132">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-132">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="8d7ba-133">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-133">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.IComparer" />
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="T:System.Collections.Hashtable" />
    <altmember cref="T:System.Collections.Generic.SortedList`2" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d7ba-134">Inizializza una nuova istanza della classe <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-134">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d7ba-135">Inizializza una nuova istanza della classe <see cref="T:System.Collections.SortedList" /> che è vuota, ha una capacità iniziale predefinita ed è ordinata in base all'interfaccia <see cref="T:System.IComparable" /> implementata da ciascuna chiave aggiunta all'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-135">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the default initial capacity, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key added to the <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-136">Ogni chiave deve implementare il <xref:System.IComparable> interfaccia devono essere in grado di eseguire confronti con ogni altra chiave di <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-136">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="8d7ba-137">Gli elementi vengono ordinati in base al <xref:System.IComparable> implementazione di ciascuna chiave aggiunta al <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-137">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="8d7ba-138">La capacità di un <xref:System.Collections.SortedList> oggetto è il numero di elementi che la <xref:System.Collections.SortedList> può contenere.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-138">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="8d7ba-139">Quando gli elementi vengono aggiunti a un <xref:System.Collections.SortedList>, incrementata automaticamente come richiesto tramite la riallocazione della matrice interna.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-139">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="8d7ba-140">Se è possibile stimare le dimensioni della raccolta, specificando la capacità iniziale Elimina la necessità di eseguire numerose operazioni di ridimensionamento durante l'aggiunta di elementi di <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-140">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="8d7ba-141">Questo costruttore è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="8d7ba-141">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-142">Esempio di codice seguente crea diverse raccolte utilizzando <xref:System.Collections.SortedList> costruttori e vengono illustrate le differenze nel comportamento delle raccolte.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-142">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CPP/sortedlist_ctor.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CS/sortedlist_ctor.cs#1)]
 [!code-vb[System.Collections.SortedList_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/VB/sortedlist_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IComparer ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="8d7ba-143">Implementazione di <see cref="T:System.Collections.IComparer" /> da usare quando si confrontano le chiavi.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-143">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span></span>  
  
 <span data-ttu-id="8d7ba-144">oppure</span><span class="sxs-lookup"><span data-stu-id="8d7ba-144">-or-</span></span>  
  
 <span data-ttu-id="8d7ba-145"><see langword="null" /> per utilizzare l'implementazione <see cref="T:System.IComparable" /> di ciascuna chiave.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-145"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span></span></param>
        <summary><span data-ttu-id="8d7ba-146">Inizializza una nuova istanza della classe <see cref="T:System.Collections.SortedList" />, che è vuota, ha una capacità iniziale predefinita ed è ordinata in base all'interfaccia <see cref="T:System.Collections.IComparer" /> specificata.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-146">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the default initial capacity, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-147">Gli elementi vengono ordinati in base alle specificato <xref:System.Collections.IComparer> implementazione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-147">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="8d7ba-148">Se il `comparer` parametro è `null`, <xref:System.IComparable> l'implementazione di ogni chiave è utilizzato; pertanto, ogni chiave deve implementare il <xref:System.IComparable> interfaccia devono essere in grado di eseguire confronti con ogni altra chiave il <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-148">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="8d7ba-149">La capacità di un <xref:System.Collections.SortedList> oggetto è il numero di elementi che la <xref:System.Collections.SortedList> può contenere.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-149">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="8d7ba-150">Quando gli elementi vengono aggiunti a un <xref:System.Collections.SortedList>, incrementata automaticamente come richiesto tramite la riallocazione della matrice interna.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-150">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="8d7ba-151">Se è possibile stimare le dimensioni della raccolta, specificando la capacità iniziale Elimina la necessità di eseguire numerose operazioni di ridimensionamento durante l'aggiunta di elementi di <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-151">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="8d7ba-152">Questo costruttore è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="8d7ba-152">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-153">Esempio di codice seguente crea diverse raccolte utilizzando <xref:System.Collections.SortedList> costruttori e vengono illustrate le differenze nel comportamento delle raccolte.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-153">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CPP/sortedlist_ctor.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CS/sortedlist_ctor.cs#1)]
 [!code-vb[System.Collections.SortedList_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/VB/sortedlist_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IDictionary ^ d);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="8d7ba-154">Implementazione <see cref="T:System.Collections.IDictionary" /> da copiare in un nuovo oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-154">The <see cref="T:System.Collections.IDictionary" /> implementation to copy to a new <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <summary><span data-ttu-id="8d7ba-155">Inizializza una nuova istanza della classe <see cref="T:System.Collections.SortedList" /> che contiene gli elementi copiati dal dizionario specificato, ha la capacità iniziale definita dal numero di elementi copiati ed è ordinata in base all'interfaccia <see cref="T:System.IComparable" /> implementata da ciascuna chiave.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-155">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-156">Ogni chiave deve implementare il <xref:System.IComparable> interfaccia devono essere in grado di eseguire confronti con ogni altra chiave di <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-156">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="8d7ba-157">Gli elementi vengono ordinati in base al <xref:System.IComparable> implementazione di ciascuna chiave aggiunta al <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-157">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="8d7ba-158">Oggetto <xref:System.Collections.Hashtable> oggetto è un esempio di un <xref:System.Collections.IDictionary> implementazione che può essere passato al costruttore.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-158">A <xref:System.Collections.Hashtable> object is an example of an <xref:System.Collections.IDictionary> implementation that can be passed to this constructor.</span></span> <span data-ttu-id="8d7ba-159">Il nuovo <xref:System.Collections.SortedList> oggetto contiene una copia delle chiavi e valori archiviati nel <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-159">The new <xref:System.Collections.SortedList> object contains a copy of the keys and values stored in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="8d7ba-160">La capacità di un <xref:System.Collections.SortedList> oggetto è il numero di elementi che la <xref:System.Collections.SortedList> può contenere.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-160">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="8d7ba-161">Quando gli elementi vengono aggiunti a un <xref:System.Collections.SortedList>, incrementata automaticamente come richiesto tramite la riallocazione della matrice interna.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-161">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="8d7ba-162">Se è possibile stimare le dimensioni della raccolta, specificando la capacità iniziale Elimina la necessità di eseguire numerose operazioni di ridimensionamento durante l'aggiunta di elementi di <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-162">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="8d7ba-163">Questo costruttore è un'operazione O (`n`) operazione, in cui `n` è il numero di elementi in `d`.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-163">This constructor is an O(`n`) operation, where `n` is the number of elements in `d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-164">Esempio di codice seguente crea diverse raccolte utilizzando <xref:System.Collections.SortedList> costruttori e vengono illustrate le differenze nel comportamento delle raccolte.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-164">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CPP/sortedlist_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CS/sortedlist_ctordictionary.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/VB/sortedlist_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8d7ba-165"><paramref name="d" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-165"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="8d7ba-166">Uno o più elementi in <paramref name="d" /> non implementano l'interfaccia <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-166">One or more elements in <paramref name="d" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(int initialCapacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCapacity"><span data-ttu-id="8d7ba-167">Numero iniziale degli elementi che l'oggetto <see cref="T:System.Collections.SortedList" /> può contenere.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-167">The initial number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span></span></param>
        <summary><span data-ttu-id="8d7ba-168">Inizializza una nuova istanza della classe <see cref="T:System.Collections.SortedList" /> che è vuota, di cui è stata specificata la capacità iniziale e che è ordinata in base all'interfaccia <see cref="T:System.IComparable" /> implementata da ciascuna chiave aggiunta all'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-168">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the specified initial capacity, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key added to the <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-169">Ogni chiave deve implementare il <xref:System.IComparable> interfaccia devono essere in grado di eseguire confronti con ogni altra chiave di <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-169">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="8d7ba-170">Gli elementi vengono ordinati in base al <xref:System.IComparable> implementazione di ciascuna chiave aggiunta al <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-170">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="8d7ba-171">La capacità di un <xref:System.Collections.SortedList> oggetto è il numero di elementi che la <xref:System.Collections.SortedList> può contenere.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-171">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="8d7ba-172">Quando gli elementi vengono aggiunti a un <xref:System.Collections.SortedList>, incrementata automaticamente come richiesto tramite la riallocazione della matrice interna.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-172">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="8d7ba-173">Se è possibile stimare le dimensioni della raccolta, specificando la capacità iniziale Elimina la necessità di eseguire numerose operazioni di ridimensionamento durante l'aggiunta di elementi di <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-173">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="8d7ba-174">Questo costruttore è un'operazione O (`n`) operazione, in cui `n` è `initialCapacity`.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-174">This constructor is an O(`n`) operation, where `n` is `initialCapacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-175">Esempio di codice seguente crea diverse raccolte utilizzando <xref:System.Collections.SortedList> costruttori e vengono illustrate le differenze nel comportamento delle raccolte.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-175">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CPP/sortedlist_ctorint.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CS/sortedlist_ctorint.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/VB/sortedlist_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8d7ba-176"><paramref name="initialCapacity" /> è minore di zero.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-176"><paramref name="initialCapacity" /> is less than zero.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="8d7ba-177">La memoria disponibile non è sufficiente per creare un oggetto <see cref="T:System.Collections.SortedList" /> con il parametro <paramref name="initialCapacity" /> specificato.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-177">There is not enough available memory to create a <see cref="T:System.Collections.SortedList" /> object with the specified <paramref name="initialCapacity" />.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IComparer comparer, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IComparer comparer, int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer, capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IComparer ^ comparer, int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="8d7ba-178">Implementazione di <see cref="T:System.Collections.IComparer" /> da usare quando si confrontano le chiavi.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-178">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span></span>  
  
 <span data-ttu-id="8d7ba-179">oppure</span><span class="sxs-lookup"><span data-stu-id="8d7ba-179">-or-</span></span>  
  
 <span data-ttu-id="8d7ba-180"><see langword="null" /> per utilizzare l'implementazione <see cref="T:System.IComparable" /> di ciascuna chiave.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-180"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span></span></param>
        <param name="capacity"><span data-ttu-id="8d7ba-181">Numero iniziale degli elementi che l'oggetto <see cref="T:System.Collections.SortedList" /> può contenere.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-181">The initial number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span></span></param>
        <summary><span data-ttu-id="8d7ba-182">Inizializza una nuova istanza della classe <see cref="T:System.Collections.SortedList" />, che è vuota, ha una capacità iniziale specificata ed è ordinata in base all'interfaccia <see cref="T:System.Collections.IComparer" /> specificata.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-182">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the specified initial capacity, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-183">Gli elementi vengono ordinati in base alle specificato <xref:System.Collections.IComparer> implementazione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-183">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="8d7ba-184">Se il `comparer` parametro è `null`, <xref:System.IComparable> l'implementazione di ogni chiave è utilizzato; pertanto, ogni chiave deve implementare il <xref:System.IComparable> interfaccia devono essere in grado di eseguire confronti con ogni altra chiave il <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-184">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="8d7ba-185">La capacità di un <xref:System.Collections.SortedList> oggetto è il numero di elementi che la <xref:System.Collections.SortedList> può contenere.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-185">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="8d7ba-186">Quando gli elementi vengono aggiunti a un <xref:System.Collections.SortedList>, incrementata automaticamente come richiesto tramite la riallocazione della matrice interna.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-186">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="8d7ba-187">Se è possibile stimare le dimensioni della raccolta, specificando la capacità iniziale Elimina la necessità di eseguire numerose operazioni di ridimensionamento durante l'aggiunta di elementi di <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-187">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="8d7ba-188">Questo costruttore è un'operazione O (`n`) operazione, in cui `n` è `capacity`.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-188">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-189">Esempio di codice seguente crea diverse raccolte utilizzando <xref:System.Collections.SortedList> costruttori e vengono illustrate le differenze nel comportamento delle raccolte.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-189">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CPP/sortedlist_ctorint.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CS/sortedlist_ctorint.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/VB/sortedlist_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8d7ba-190"><paramref name="capacity" /> è minore di zero.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-190"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="8d7ba-191">La memoria disponibile non è sufficiente per creare un oggetto <see cref="T:System.Collections.SortedList" /> con il parametro <paramref name="capacity" /> specificato.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-191">There is not enough available memory to create a <see cref="T:System.Collections.SortedList" /> object with the specified <paramref name="capacity" />.</span></span></exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IDictionary d, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IDictionary ^ d, System::Collections::IComparer ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="8d7ba-192">Implementazione <see cref="T:System.Collections.IDictionary" /> da copiare in un nuovo oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-192">The <see cref="T:System.Collections.IDictionary" /> implementation to copy to a new <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <param name="comparer"><span data-ttu-id="8d7ba-193">Implementazione di <see cref="T:System.Collections.IComparer" /> da usare quando si confrontano le chiavi.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-193">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span></span>  
  
 <span data-ttu-id="8d7ba-194">oppure</span><span class="sxs-lookup"><span data-stu-id="8d7ba-194">-or-</span></span>  
  
 <span data-ttu-id="8d7ba-195"><see langword="null" /> per utilizzare l'implementazione <see cref="T:System.IComparable" /> di ciascuna chiave.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-195"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span></span></param>
        <summary><span data-ttu-id="8d7ba-196">Inizializza una nuova istanza della classe <see cref="T:System.Collections.SortedList" /> che contiene gli elementi copiati dal dizionario specificato, ha la capacità iniziale definita dal numero degli elementi copiati ed è ordinata in base all'interfaccia <see cref="T:System.Collections.IComparer" /> specificata.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-196">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-197">Gli elementi vengono ordinati in base alle specificato <xref:System.Collections.IComparer> implementazione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-197">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="8d7ba-198">Se il `comparer` parametro è `null`, <xref:System.IComparable> l'implementazione di ogni chiave è utilizzato; pertanto, ogni chiave deve implementare il <xref:System.IComparable> interfaccia devono essere in grado di eseguire confronti con ogni altra chiave il <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-198">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="8d7ba-199">Oggetto <xref:System.Collections.Hashtable> oggetto è un esempio di un <xref:System.Collections.IDictionary> implementazione che può essere passato al costruttore.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-199">A <xref:System.Collections.Hashtable> object is an example of an <xref:System.Collections.IDictionary> implementation that can be passed to this constructor.</span></span> <span data-ttu-id="8d7ba-200">Il nuovo <xref:System.Collections.SortedList> oggetto contiene una copia delle chiavi e valori archiviati nel <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-200">The new <xref:System.Collections.SortedList> object contains a copy of the keys and values stored in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="8d7ba-201">La capacità di un <xref:System.Collections.SortedList> oggetto è il numero di elementi che la <xref:System.Collections.SortedList> può contenere.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-201">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="8d7ba-202">Quando gli elementi vengono aggiunti a un <xref:System.Collections.SortedList>, incrementata automaticamente come richiesto tramite la riallocazione della matrice interna.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-202">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="8d7ba-203">Se è possibile stimare le dimensioni della raccolta, specificando la capacità iniziale Elimina la necessità di eseguire numerose operazioni di ridimensionamento durante l'aggiunta di elementi di <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-203">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="8d7ba-204">Questo costruttore è un'operazione O (`n`) operazione, in cui `n` è il numero di elementi in `d`.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-204">This constructor is an O(`n`) operation, where `n` is the number of elements in `d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-205">Esempio di codice seguente crea diverse raccolte utilizzando <xref:System.Collections.SortedList> costruttori e vengono illustrate le differenze nel comportamento delle raccolte.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-205">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CPP/sortedlist_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CS/sortedlist_ctordictionary.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/VB/sortedlist_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8d7ba-206"><paramref name="d" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-206"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="8d7ba-207"><paramref name="comparer" /> è <see langword="null" /> e uno o più elementi in <paramref name="d" /> non implementano l'interfaccia <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-207"><paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="d" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Object ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8d7ba-208">Chiave dell'elemento da aggiungere.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-208">The key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="8d7ba-209">Valore dell'elemento da aggiungere.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-209">The value of the element to add.</span></span> <span data-ttu-id="8d7ba-210">Il valore può essere <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-210">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8d7ba-211">Aggiunge a un oggetto <see cref="T:System.Collections.SortedList" /> un elemento con la chiave e il valore specificati.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-211">Adds an element with the specified key and value to a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-212">Il punto di inserimento viene determinato in base all'operatore di confronto selezionato, in modo esplicito o per impostazione predefinita, quando il <xref:System.Collections.SortedList> oggetto è stato creato.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-212">The insertion point is determined based on the comparer selected, either explicitly or by default, when the <xref:System.Collections.SortedList> object was created.</span></span>  
  
 <span data-ttu-id="8d7ba-213">Se <xref:System.Collections.SortedList.Count%2A> è già uguale <xref:System.Collections.SortedList.Capacity%2A>, la capacità del <xref:System.Collections.SortedList> oggetto viene aumentato automaticamente la riallocazione della matrice interna e gli elementi esistenti vengono copiati nella nuova matrice prima che venga aggiunto il nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-213">If <xref:System.Collections.SortedList.Count%2A> already equals <xref:System.Collections.SortedList.Capacity%2A>, the capacity of the <xref:System.Collections.SortedList> object is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="8d7ba-214">È inoltre possibile utilizzare il <xref:System.Collections.SortedList.Item%2A> proprietà per aggiungere nuovi elementi impostando il valore di una chiave che non esiste nel <xref:System.Collections.SortedList> oggetto (ad esempio, `myCollection["myNonexistentKey"] = myValue`).</span><span class="sxs-lookup"><span data-stu-id="8d7ba-214">You can also use the <xref:System.Collections.SortedList.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.SortedList> object (for example, `myCollection["myNonexistentKey"] = myValue`).</span></span> <span data-ttu-id="8d7ba-215">Tuttavia, se la chiave specificata esiste già nel <xref:System.Collections.SortedList>, impostando il <xref:System.Collections.SortedList.Item%2A> proprietà sovrascrive il vecchio valore.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-215">However, if the specified key already exists in the <xref:System.Collections.SortedList>, setting the <xref:System.Collections.SortedList.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="8d7ba-216">Al contrario, il <xref:System.Collections.SortedList.Add%2A> metodo non modifica gli elementi esistenti.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-216">In contrast, the <xref:System.Collections.SortedList.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="8d7ba-217">Gli elementi di un <xref:System.Collections.SortedList> oggetto sono ordinate per chiave in uno specifico <xref:System.Collections.IComparer> implementazione specificato al momento il <xref:System.Collections.SortedList> viene creato o in base al <xref:System.IComparable> implementazione fornita dalle chiavi stesse.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-217">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="8d7ba-218">Non può essere una chiave `null`, ma può essere un valore.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-218">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="8d7ba-219">Questo metodo è un'operazione O (`n`) per dati non ordinati, in cui `n` è <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-219">This method is an O(`n`) operation for unsorted data, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="8d7ba-220">È un'operazione O (log `n`) operazione se il nuovo elemento viene aggiunto alla fine dell'elenco.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-220">It is an O(log `n`) operation if the new element is added at the end of the list.</span></span> <span data-ttu-id="8d7ba-221">Se l'inserimento comporta un ridimensionamento, l'operazione è O (`n`).</span><span class="sxs-lookup"><span data-stu-id="8d7ba-221">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-222">Esempio di codice riportato di seguito viene illustrato come aggiungere elementi a un <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-222">The following code example shows how to add elements to a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8d7ba-223"><paramref name="key" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-223"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d7ba-224">Un elemento con il parametro <paramref name="key" /> specificato esiste già nell'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-224">An element with the specified <paramref name="key" /> already exists in the <see cref="T:System.Collections.SortedList" /> object.</span></span>  
  
 <span data-ttu-id="8d7ba-225">oppure</span><span class="sxs-lookup"><span data-stu-id="8d7ba-225">-or-</span></span>  
  
 <span data-ttu-id="8d7ba-226"><see cref="T:System.Collections.SortedList" /> è impostato per l'utilizzo dell'interfaccia <see cref="T:System.IComparable" /> e <paramref name="key" /> non implementa l'interfaccia <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-226">The <see cref="T:System.Collections.SortedList" /> is set to use the <see cref="T:System.IComparable" /> interface, and <paramref name="key" /> does not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8d7ba-227">La classe <see cref="T:System.Collections.SortedList" /> è di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-227">The <see cref="T:System.Collections.SortedList" /> is read-only.</span></span>  
  
 <span data-ttu-id="8d7ba-228">oppure</span><span class="sxs-lookup"><span data-stu-id="8d7ba-228">-or-</span></span>  
  
 <span data-ttu-id="8d7ba-229">Le dimensioni dell'oggetto <see cref="T:System.Collections.SortedList" /> sono fisse.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-229">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="8d7ba-230">La memoria disponibile non è sufficiente per aggiungere l'elemento all'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-230">There is not enough available memory to add the element to the <see cref="T:System.Collections.SortedList" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d7ba-231">L'operatore di confronto genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-231">The comparer throws an exception.</span></span></exception>
        <altmember cref="P:System.Collections.SortedList.Item(System.Object)" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public virtual int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Capacity { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d7ba-232">Ottiene o imposta la capacità di un oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-232">Gets or sets the capacity of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="8d7ba-233">Numero degli elementi che l'oggetto <see cref="T:System.Collections.SortedList" /> può contenere.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-233">The number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-234"><xref:System.Collections.SortedList.Capacity%2A> è il numero di elementi che la <xref:System.Collections.SortedList> può archiviare l'oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-234"><xref:System.Collections.SortedList.Capacity%2A> is the number of elements that the <xref:System.Collections.SortedList> object can store.</span></span> <span data-ttu-id="8d7ba-235"><xref:System.Collections.SortedList.Count%2A> è il numero di elementi effettivamente contenuti nella <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-235"><xref:System.Collections.SortedList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="8d7ba-236"><xref:System.Collections.SortedList.Capacity%2A> è sempre maggiore di o uguale a <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-236"><xref:System.Collections.SortedList.Capacity%2A> is always greater than or equal to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="8d7ba-237">Se <xref:System.Collections.SortedList.Count%2A> supera <xref:System.Collections.SortedList.Capacity%2A> durante l'aggiunta di elementi, la capacità viene aumentata automaticamente tramite la riallocazione della matrice interna prima di copiare gli elementi e aggiunta di nuovi elementi.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-237">If <xref:System.Collections.SortedList.Count%2A> exceeds <xref:System.Collections.SortedList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="8d7ba-238">È possibile diminuire la capacità chiamando <xref:System.Collections.SortedList.TrimToSize%2A> o impostando la <xref:System.Collections.SortedList.Capacity%2A> proprietà in modo esplicito.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-238">The capacity can be decreased by calling <xref:System.Collections.SortedList.TrimToSize%2A> or by setting the <xref:System.Collections.SortedList.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="8d7ba-239">Quando il valore di <xref:System.Collections.SortedList.Capacity%2A> è impostato in modo esplicito, la matrice interna viene riallocata anche per consentire la capacità specificata.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-239">When the value of <xref:System.Collections.SortedList.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="8d7ba-240">Il recupero del valore di questa proprietà è un'operazione o (1). l'impostazione della proprietà è un'operazione O (`n`) operazione, in cui `n` è la nuova capacità.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-240">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8d7ba-241">Il valore assegnato è minore del numero corrente di elementi inclusi nell'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-241">The value assigned is less than the current number of elements in the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="8d7ba-242">La memoria disponibile nel sistema non è sufficiente.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-242">There is not enough memory available on the system.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.TrimToSize" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d7ba-243">Rimuove tutti gli elementi da un oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-243">Removes all elements from a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-244"><xref:System.Collections.SortedList.Count%2A> è impostato su zero e vengono rilasciati anche i riferimenti ad altri oggetti da elementi della raccolta.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-244"><xref:System.Collections.SortedList.Count%2A> is set to zero and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="8d7ba-245"><xref:System.Collections.SortedList.Capacity%2A> rimane invariato.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-245"><xref:System.Collections.SortedList.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="8d7ba-246">Per reimpostare la capacità del <xref:System.Collections.SortedList> dell'oggetto, chiamare <xref:System.Collections.SortedList.TrimToSize%2A> o impostare il <xref:System.Collections.SortedList.Capacity%2A> proprietà direttamente.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-246">To reset the capacity of the <xref:System.Collections.SortedList> object, call <xref:System.Collections.SortedList.TrimToSize%2A> or set the <xref:System.Collections.SortedList.Capacity%2A> property directly.</span></span> <span data-ttu-id="8d7ba-247">L'eliminazione di un oggetto vuoto <xref:System.Collections.SortedList> imposta la capacità del <xref:System.Collections.SortedList> per la capacità predefinita.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-247">Trimming an empty <xref:System.Collections.SortedList> sets the capacity of the <xref:System.Collections.SortedList> to the default capacity.</span></span>  
  
 <span data-ttu-id="8d7ba-248">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-248">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-249">Esempio di codice seguente viene illustrato come tagliare le parti inutilizzate di un <xref:System.Collections.SortedList> oggetto e viene illustrato come cancellare i valori del <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-249">The following code example shows how to trim the unused portions of a <xref:System.Collections.SortedList> object and how to clear the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8d7ba-250">L'oggetto <see cref="T:System.Collections.SortedList" /> è in sola lettura.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-250">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span>  
  
 <span data-ttu-id="8d7ba-251">oppure</span><span class="sxs-lookup"><span data-stu-id="8d7ba-251">-or-</span></span>  
  
 <span data-ttu-id="8d7ba-252">Le dimensioni dell'oggetto <see cref="T:System.Collections.SortedList" /> sono fisse.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-252">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.TrimToSize" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <altmember cref="P:System.Collections.SortedList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d7ba-253">Crea una copia superficiale di un oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-253">Creates a shallow copy of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="8d7ba-254">Copia superficiale dell'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-254">A shallow copy of the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-255">Una copia superficiale di un insieme di copia solo gli elementi della raccolta, se sono tipi di riferimento o tipi di valore, ma non copia gli oggetti che fanno riferimento i riferimenti.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-255">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but does not copy the objects that the references refer to.</span></span> <span data-ttu-id="8d7ba-256">I riferimenti nella nuova raccolta puntano agli stessi oggetti che puntano i riferimenti nella raccolta originale.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-256">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="8d7ba-257">Al contrario, una copia completa di una raccolta copia gli elementi e tutti gli elementi direttamente o indirettamente a cui fa riferimento gli elementi.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-257">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="8d7ba-258">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-258">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8d7ba-259">Chiave da individuare nell'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-259">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <summary><span data-ttu-id="8d7ba-260">Determina se un oggetto <see cref="T:System.Collections.SortedList" /> contiene una chiave specifica.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-260">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific key.</span></span></summary>
        <returns>
          <span data-ttu-id="8d7ba-261"><see langword="true" /> se l'oggetto <see cref="T:System.Collections.SortedList" /> contiene un elemento con il parametro <paramref name="key" /> specificato; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-261"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="key" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-262">Gli elementi di un <xref:System.Collections.SortedList> oggetto sono ordinate per chiave in uno specifico <xref:System.Collections.IComparer> implementazione specificato al momento il <xref:System.Collections.SortedList> viene creato o in base al <xref:System.IComparable> implementazione fornita dalle chiavi stesse.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-262">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="8d7ba-263"><xref:System.Collections.SortedList.Contains%2A> implementa <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-263"><xref:System.Collections.SortedList.Contains%2A> implements <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8d7ba-264">Funziona esattamente come <xref:System.Collections.SortedList.ContainsKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-264">It behaves exactly as <xref:System.Collections.SortedList.ContainsKey%2A>.</span></span>  
  
 <span data-ttu-id="8d7ba-265">Questo metodo utilizza un algoritmo di ricerca binario; Pertanto, questo metodo è un'operazione O (log `n`) operazione, in cui `n` è <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-265">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="8d7ba-266">A partire da .NET Framework 2.0, questo metodo utilizza degli oggetti della raccolta <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> metodi su `item` per determinare se esiste un elemento.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-266">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="8d7ba-267">Nelle versioni precedenti di .NET Framework, questa operazione è stata effettuata utilizzando il <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> metodi il `item` parametro per gli oggetti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-267">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-268">Esempio di codice seguente viene illustrato come determinare se un <xref:System.Collections.SortedList> oggetto contiene un elemento specifico.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-268">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8d7ba-269"><paramref name="key" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-269"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d7ba-270">L'operatore di confronto genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-270">The comparer throws an exception.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.ContainsKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8d7ba-271">Chiave da individuare nell'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-271">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <summary><span data-ttu-id="8d7ba-272">Determina se un oggetto <see cref="T:System.Collections.SortedList" /> contiene una chiave specifica.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-272">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific key.</span></span></summary>
        <returns>
          <span data-ttu-id="8d7ba-273"><see langword="true" /> se l'oggetto <see cref="T:System.Collections.SortedList" /> contiene un elemento con il parametro <paramref name="key" /> specificato; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-273"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="key" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-274">Gli elementi di un <xref:System.Collections.SortedList> oggetto sono ordinate per chiave in uno specifico <xref:System.Collections.IComparer> implementazione specificato al momento il <xref:System.Collections.SortedList> viene creato o in base al <xref:System.IComparable> implementazione fornita dalle chiavi stesse.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-274">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="8d7ba-275">Questo metodo funziona esattamente come il <xref:System.Collections.SortedList.Contains%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-275">This method behaves exactly as the <xref:System.Collections.SortedList.Contains%2A> method.</span></span>  
  
 <span data-ttu-id="8d7ba-276">Questo metodo utilizza un algoritmo di ricerca binario; Pertanto, questo metodo è un'operazione O (log `n`) operazione, in cui `n` è <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-276">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="8d7ba-277">A partire da .NET Framework 2.0, questo metodo utilizza degli oggetti della raccolta <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> metodi su `item` per determinare se esiste un elemento.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-277">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="8d7ba-278">Nelle versioni precedenti di .NET Framework, questa operazione è stata effettuata utilizzando il <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> metodi il `item` parametro per gli oggetti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-278">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-279">Esempio di codice seguente viene illustrato come determinare se un <xref:System.Collections.SortedList> oggetto contiene un elemento specifico.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-279">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8d7ba-280"><paramref name="key" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-280"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d7ba-281">L'operatore di confronto genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-281">The comparer throws an exception.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.Contains(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.ContainsValue(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public virtual bool ContainsValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.ContainsValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsValue (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsValue(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8d7ba-282">Valore da individuare nell'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-282">The value to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span> <span data-ttu-id="8d7ba-283">Il valore può essere <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-283">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8d7ba-284">Determina se un oggetto <see cref="T:System.Collections.SortedList" /> contiene un valore specifico.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-284">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific value.</span></span></summary>
        <returns>
          <span data-ttu-id="8d7ba-285"><see langword="true" /> se l'oggetto <see cref="T:System.Collections.SortedList" /> contiene un elemento con il parametro <paramref name="value" /> specificato; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-285"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="value" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-286">I valori degli elementi del <xref:System.Collections.SortedList> oggetto vengono confrontati con il valore specificato utilizzando il <xref:System.Object.Equals%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-286">The values of the elements of the <xref:System.Collections.SortedList> object are compared to the specified value using the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="8d7ba-287">Questo metodo esegue una ricerca lineare. Pertanto, il tempo medio di esecuzione è proporzionale al <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-287">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="8d7ba-288">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-288">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="8d7ba-289">A partire da .NET Framework 2.0, questo metodo utilizza degli oggetti della raccolta <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> metodi su `item` per determinare se esiste un elemento.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-289">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="8d7ba-290">Nelle versioni precedenti di .NET Framework, questa operazione è stata effettuata utilizzando il <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> metodi il `item` parametro per gli oggetti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-290">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-291">Esempio di codice seguente viene illustrato come determinare se un <xref:System.Collections.SortedList> oggetto contiene un elemento specifico.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-291">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="8d7ba-292">Oggetto <see cref="T:System.Array" /> unidimensionale che corrisponde alla destinazione degli oggetti <see cref="T:System.Collections.DictionaryEntry" /> copiati dall'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-292">The one-dimensional <see cref="T:System.Array" /> object that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from <see cref="T:System.Collections.SortedList" />.</span></span> <span data-ttu-id="8d7ba-293">L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-293">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="8d7ba-294">Indice in base zero in <c>array</c> in corrispondenza del quale ha inizio la copia.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-294">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="8d7ba-295">Copia gli elementi <see cref="T:System.Collections.SortedList" /> in un oggetto <see cref="T:System.Array" /> unidimensionale, a partire dall'indice specificato nella matrice.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-295">Copies <see cref="T:System.Collections.SortedList" /> elements to a one-dimensional <see cref="T:System.Array" /> object, starting at the specified index in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-296">Le coppie chiave/valore vengono copiate il <xref:System.Array> oggetto nello stesso ordine in cui l'enumeratore scorre la <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-296">The key/value pairs are copied to the <xref:System.Array> object in the same order in which the enumerator iterates through the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="8d7ba-297">Per copiare solo le chiavi di <xref:System.Collections.SortedList>, utilizzare `SortedList.Keys.CopyTo`.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-297">To copy only the keys in the <xref:System.Collections.SortedList>, use `SortedList.Keys.CopyTo`.</span></span>  
  
 <span data-ttu-id="8d7ba-298">Per copiare solo i valori di <xref:System.Collections.SortedList>, utilizzare `SortedList.Values.CopyTo`.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-298">To copy only the values in the <xref:System.Collections.SortedList>, use `SortedList.Values.CopyTo`.</span></span>  
  
 <span data-ttu-id="8d7ba-299">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-299">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-300">Esempio di codice seguente viene illustrato come copiare i valori in un <xref:System.Collections.SortedList> oggetto in una matrice unidimensionale <xref:System.Array> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-300">The following code example shows how to copy the values in a <xref:System.Collections.SortedList> object into a one-dimensional <xref:System.Array> object.</span></span>  
  
 [!code-cpp[Classic SortedList.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8d7ba-301"><paramref name="array" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-301"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8d7ba-302"><paramref name="arrayIndex" /> è minore di zero.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-302"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8d7ba-303"><paramref name="array" /> è multidimensionale.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-303"><paramref name="array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="8d7ba-304">oppure</span><span class="sxs-lookup"><span data-stu-id="8d7ba-304">-or-</span></span>  
  
 <span data-ttu-id="8d7ba-305">Il numero degli elementi dell'oggetto <see cref="T:System.Collections.SortedList" /> di origine è maggiore dello spazio disponibile tra il parametro <paramref name="arrayIndex" /> e la fine del parametro <paramref name="array" /> di destinazione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-305">The number of elements in the source <see cref="T:System.Collections.SortedList" /> object is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="8d7ba-306">Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.SortedList" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-306">The type of the source <see cref="T:System.Collections.SortedList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="M:System.Collections.SortedList.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d7ba-307">Ottiene il numero degli elementi contenuti in un oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-307">Gets the number of elements contained in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="8d7ba-308">Numero degli elementi contenuti nell'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-308">The number of elements contained in the <see cref="T:System.Collections.SortedList" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-309">Ogni elemento è una coppia chiave/valore che è possibile accedere come un <xref:System.Collections.DictionaryEntry> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-309">Each element is a key/value pair that can be accessed as a <xref:System.Collections.DictionaryEntry> object.</span></span>  
  
 <span data-ttu-id="8d7ba-310"><xref:System.Collections.SortedList.Capacity%2A> è il numero di elementi che la <xref:System.Collections.SortedList> può archiviare l'oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-310"><xref:System.Collections.SortedList.Capacity%2A> is the number of elements that the <xref:System.Collections.SortedList> object can store.</span></span> <span data-ttu-id="8d7ba-311"><xref:System.Collections.SortedList.Count%2A> è il numero di elementi effettivamente contenuti nella <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-311"><xref:System.Collections.SortedList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="8d7ba-312"><xref:System.Collections.SortedList.Capacity%2A> è sempre maggiore di o uguale a <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-312"><xref:System.Collections.SortedList.Capacity%2A> is always greater than or equal to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="8d7ba-313">Se <xref:System.Collections.SortedList.Count%2A> supera <xref:System.Collections.SortedList.Capacity%2A> durante l'aggiunta di elementi, la capacità viene aumentata automaticamente tramite la riallocazione della matrice interna prima di copiare gli elementi e aggiunta di nuovi elementi.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-313">If <xref:System.Collections.SortedList.Count%2A> exceeds <xref:System.Collections.SortedList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="8d7ba-314">Il recupero del valore di questa proprietà è un'operazione O(1).</span><span class="sxs-lookup"><span data-stu-id="8d7ba-314">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="GetByIndex">
      <MemberSignature Language="C#" Value="public virtual object GetByIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetByIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetByIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByIndex (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetByIndex(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="8d7ba-315">Indice in base zero del valore da ottenere.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-315">The zero-based index of the value to get.</span></span></param>
        <summary><span data-ttu-id="8d7ba-316">Ottiene il valore in corrispondenza dell'indice specificato di un oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-316">Gets the value at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="8d7ba-317">Valore in corrispondenza dell'indice specificato dell'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-317">The value at the specified index of the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-318">La sequenza di indice si basa sulla sequenza di ordinamento.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-318">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="8d7ba-319">Quando viene aggiunto un elemento, viene inserito nella <xref:System.Collections.SortedList> nell'ordinamento corretto ordine e l'indicizzazione si adegua di conseguenza.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-319">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="8d7ba-320">Quando un elemento viene rimosso, l'indicizzazione anche si adegua di conseguenza.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-320">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="8d7ba-321">Pertanto, l'indice di una coppia chiave/valore specifica potrebbe cambiare come gli elementi vengono aggiunti o rimossi dal <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-321">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="8d7ba-322">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="8d7ba-322">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-323">Esempio di codice seguente viene illustrato come ottenere una o tutte le chiavi o i valori in un <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-323">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8d7ba-324">Il parametro <paramref name="index" /> non rientra nell'intervallo di indici validi per l'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-324"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d7ba-325">Restituisce un oggetto <see cref="T:System.Collections.IDictionaryEnumerator" /> che consente di scorrere un oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-325">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> object that iterates through a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="8d7ba-326">Oggetto <see cref="T:System.Collections.IDictionaryEnumerator" /> per l'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-326">An <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-327">L'istruzione `foreach` del linguaggio C# (`for each` in Visual Basic) nasconde la complessità degli enumeratori.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-327">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="8d7ba-328">Pertanto, si consiglia l'utilizzo di `foreach`, anziché la modifica diretta dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-328">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="8d7ba-329">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-329">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="8d7ba-330">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-330">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="8d7ba-331">Anche il metodo <xref:System.Collections.IEnumerator.Reset%2A> riporta l'enumeratore in questa posizione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-331"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="8d7ba-332">In questa posizione, la proprietà <xref:System.Collections.IEnumerator.Current%2A> è indefinita.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-332">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="8d7ba-333">Pertanto, è necessario chiamare il metodo <xref:System.Collections.IEnumerator.MoveNext%2A> per spostare in avanti l'enumeratore, in corrispondenza del primo elemento della raccolta, prima di leggere il valore di <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-333">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="8d7ba-334"><xref:System.Collections.IEnumerator.Current%2A> restituisce lo stesso oggetto finché non viene chiamato il metodo <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-334"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="8d7ba-335"><xref:System.Collections.IEnumerator.MoveNext%2A> imposta <xref:System.Collections.IEnumerator.Current%2A> sull'elemento successivo.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-335"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="8d7ba-336">Se <xref:System.Collections.IEnumerator.MoveNext%2A> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <xref:System.Collections.IEnumerator.MoveNext%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-336">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="8d7ba-337">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <xref:System.Collections.IEnumerator.MoveNext%2A> restituire anche `false`.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-337">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="8d7ba-338">Se l'ultima chiamata a <xref:System.Collections.IEnumerator.MoveNext%2A> restituito `false`, <xref:System.Collections.IEnumerator.Current%2A> è definito.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-338">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="8d7ba-339">Per impostare nuovamente la proprietà <xref:System.Collections.IEnumerator.Current%2A> sul primo elemento della raccolta, è possibile chiamare il metodo <xref:System.Collections.IEnumerator.Reset%2A> seguito da <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-339">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="8d7ba-340">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-340">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="8d7ba-341">In caso di modifiche alla raccolta, ad esempio aggiunta, modifica o eliminazione di elementi, l'enumeratore sarà reso non valido in modo irreversibile e il comportamento corrispondente non sarà definito.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-341">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="8d7ba-342">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-342">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="8d7ba-343">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-343">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="8d7ba-344">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-344">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="8d7ba-345">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="8d7ba-345">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public virtual object GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKey (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetKey(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="8d7ba-346">Indice in base zero della chiave da ottenere.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-346">The zero-based index of the key to get.</span></span></param>
        <summary><span data-ttu-id="8d7ba-347">Ottiene la chiave in corrispondenza dell'indice specificato di un oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-347">Gets the key at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="8d7ba-348">Chiave in corrispondenza dell'indice specificato dell'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-348">The key at the specified index of the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-349">La sequenza di indice si basa sulla sequenza di ordinamento.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-349">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="8d7ba-350">Quando viene aggiunto un elemento, viene inserito nella <xref:System.Collections.SortedList> nell'ordinamento corretto ordine e l'indicizzazione si adegua di conseguenza.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-350">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="8d7ba-351">Quando un elemento viene rimosso, l'indicizzazione anche si adegua di conseguenza.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-351">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="8d7ba-352">Pertanto, l'indice di una coppia chiave/valore specifica potrebbe cambiare come gli elementi vengono aggiunti o rimossi dal <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-352">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="8d7ba-353">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="8d7ba-353">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-354">Esempio di codice seguente viene illustrato come ottenere una o tutte le chiavi o i valori in un <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-354">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8d7ba-355">Il parametro <paramref name="index" /> non rientra nell'intervallo di indici validi per l'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-355"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList GetKeyList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList GetKeyList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetKeyList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyList () As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IList ^ GetKeyList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d7ba-356">Ottiene le chiavi di un oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-356">Gets the keys in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="8d7ba-357">Ottiene un oggetto <see cref="T:System.Collections.IList" /> contenente le chiavi dell'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-357">An <see cref="T:System.Collections.IList" /> object containing the keys in the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-358">L'oggetto restituito <xref:System.Collections.IList> è una visualizzazione di sola lettura delle chiavi del <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-358">The returned <xref:System.Collections.IList> object is a read-only view of the keys of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="8d7ba-359">Le modifiche apportate alle sottostante <xref:System.Collections.SortedList> vengono applicate immediatamente il <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-359">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="8d7ba-360">Gli elementi dell'oggetto restituito <xref:System.Collections.IList> vengono ordinati nello stesso ordine delle chiavi del <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-360">The elements of the returned <xref:System.Collections.IList> are sorted in the same order as the keys of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="8d7ba-361">Questo metodo è simile al <xref:System.Collections.SortedList.Keys%2A> proprietà, ma restituisce un <xref:System.Collections.IList> oggetto anziché un <xref:System.Collections.ICollection> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-361">This method is similar to the <xref:System.Collections.SortedList.Keys%2A> property, but returns an <xref:System.Collections.IList> object instead of an <xref:System.Collections.ICollection> object.</span></span>  
  
 <span data-ttu-id="8d7ba-362">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="8d7ba-362">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-363">Esempio di codice seguente viene illustrato come ottenere una o tutte le chiavi o i valori in un <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-363">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.SortedList.GetValueList" />
        <altmember cref="P:System.Collections.SortedList.Keys" />
      </Docs>
    </Member>
    <Member MemberName="GetValueList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList GetValueList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList GetValueList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetValueList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValueList () As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IList ^ GetValueList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d7ba-364">Ottiene i valori di un oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-364">Gets the values in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="8d7ba-365">Oggetto <see cref="T:System.Collections.IList" /> contenente i valori dell'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-365">An <see cref="T:System.Collections.IList" /> object containing the values in the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-366">L'oggetto restituito <xref:System.Collections.IList> è una visualizzazione di sola lettura dei valori del <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-366">The returned <xref:System.Collections.IList> object is a read-only view of the values of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="8d7ba-367">Le modifiche apportate alle sottostante <xref:System.Collections.SortedList> vengono applicate immediatamente il <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-367">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="8d7ba-368">Gli elementi dell'oggetto restituito <xref:System.Collections.IList> vengono ordinati nello stesso ordine dei valori del <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-368">The elements of the returned <xref:System.Collections.IList> are sorted in the same order as the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="8d7ba-369">Questo metodo è simile al <xref:System.Collections.SortedList.Values%2A> proprietà, ma restituisce un <xref:System.Collections.IList> oggetto anziché un <xref:System.Collections.ICollection> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-369">This method is similar to the <xref:System.Collections.SortedList.Values%2A> property, but returns an <xref:System.Collections.IList> object instead of an <xref:System.Collections.ICollection> object.</span></span>  
  
 <span data-ttu-id="8d7ba-370">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="8d7ba-370">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-371">Esempio di codice seguente viene illustrato come ottenere una o tutte le chiavi o i valori in un <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-371">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.SortedList.GetKeyList" />
        <altmember cref="P:System.Collections.SortedList.Values" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8d7ba-372">Chiave da individuare nell'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-372">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <summary><span data-ttu-id="8d7ba-373">Viene restituito l'indice in base zero della chiave specificata in un oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-373">Returns the zero-based index of the specified key in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="8d7ba-374">Indice in base zero del parametro <paramref name="key" /> se il parametro <paramref name="key" /> viene trovato nell'oggetto <see cref="T:System.Collections.SortedList" />; in caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-374">The zero-based index of the <paramref name="key" /> parameter, if <paramref name="key" /> is found in the <see cref="T:System.Collections.SortedList" /> object; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-375">Gli elementi di un <xref:System.Collections.SortedList> oggetto sono ordinate per chiave in uno specifico <xref:System.Collections.IComparer> implementazione specificato al momento il <xref:System.Collections.SortedList> viene creato o in base al <xref:System.IComparable> implementazione fornita dalle chiavi stesse.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-375">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created, or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="8d7ba-376">La sequenza di indice si basa sulla sequenza di ordinamento.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-376">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="8d7ba-377">Quando viene aggiunto un elemento, viene inserito nella <xref:System.Collections.SortedList> nell'ordinamento corretto ordine e l'indicizzazione si adegua di conseguenza.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-377">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="8d7ba-378">Quando un elemento viene rimosso, l'indicizzazione anche si adegua di conseguenza.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-378">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="8d7ba-379">Pertanto, l'indice di una coppia chiave/valore specifica potrebbe cambiare come gli elementi vengono aggiunti o rimossi dal <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-379">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="8d7ba-380">Questo metodo utilizza un algoritmo di ricerca binario; Pertanto, questo metodo è un'operazione O (log `n`) operazione, in cui `n` è <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-380">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="8d7ba-381">A partire da .NET Framework 2.0, questo metodo utilizza degli oggetti della raccolta <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> metodi su `item` per determinare se esiste un elemento.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-381">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="8d7ba-382">Nelle versioni precedenti di .NET Framework, questa operazione è stata effettuata utilizzando il <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> metodi il `item` parametro per gli oggetti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-382">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-383">Esempio di codice seguente viene illustrato come determinare l'indice di una chiave o un valore in un <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-383">The following code example shows how to determine the index of a key or a value in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8d7ba-384"><paramref name="key" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-384"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d7ba-385">L'operatore di confronto genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-385">The comparer throws an exception.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfValue">
      <MemberSignature Language="C#" Value="public virtual int IndexOfValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfValue (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfValue(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8d7ba-386">Valore da individuare nell'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-386">The value to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span> <span data-ttu-id="8d7ba-387">Il valore può essere <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-387">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8d7ba-388">Restituisce l'indice in base zero della prima occorrenza del valore specificato in un oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-388">Returns the zero-based index of the first occurrence of the specified value in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="8d7ba-389">Indice in base zero della prima occorrenza del parametro <paramref name="value" />, se il parametro <paramref name="value" /> viene trovato nell'oggetto <see cref="T:System.Collections.SortedList" />; in caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-389">The zero-based index of the first occurrence of the <paramref name="value" /> parameter, if <paramref name="value" /> is found in the <see cref="T:System.Collections.SortedList" /> object; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-390">La sequenza di indice si basa sulla sequenza di ordinamento.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-390">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="8d7ba-391">Quando viene aggiunto un elemento, viene inserito nella <xref:System.Collections.SortedList> nell'ordinamento corretto ordine e l'indicizzazione si adegua di conseguenza.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-391">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="8d7ba-392">Quando un elemento viene rimosso, l'indicizzazione anche si adegua di conseguenza.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-392">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="8d7ba-393">Pertanto, l'indice di una coppia chiave/valore specifica potrebbe cambiare come gli elementi vengono aggiunti o rimossi dal <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-393">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="8d7ba-394">I valori degli elementi del <xref:System.Collections.SortedList> vengono confrontati con il valore specificato utilizzando il <xref:System.Object.Equals%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-394">The values of the elements of the <xref:System.Collections.SortedList> are compared to the specified value using the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="8d7ba-395">Questo metodo utilizza una ricerca lineare. Pertanto, questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-395">This method uses a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="8d7ba-396">A partire da .NET Framework 2.0, questo metodo utilizza degli oggetti della raccolta <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> metodi su `item` per determinare se esiste un elemento.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-396">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="8d7ba-397">Nelle versioni precedenti di .NET Framework, questa operazione è stata effettuata utilizzando il <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> metodi il `item` parametro per gli oggetti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-397">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-398">Esempio di codice seguente viene illustrato come determinare l'indice di una chiave o un valore in un <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-398">The following code example shows how to determine the index of a key or a value in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.ContainsValue(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d7ba-399">Ottiene un valore che indica se le dimensioni di un oggetto <see cref="T:System.Collections.SortedList" /> sono fisse.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-399">Gets a value indicating whether a <see cref="T:System.Collections.SortedList" /> object has a fixed size.</span></span></summary>
        <value>
          <span data-ttu-id="8d7ba-400"><see langword="true" /> se le dimensioni dell'oggetto <see cref="T:System.Collections.SortedList" /> sono fisse; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-400"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object has a fixed size; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8d7ba-401">Il valore predefinito è <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-401">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-402">Una raccolta con dimensioni fisse non consente l'aggiunta o la rimozione di elementi dopo la raccolta viene creata, ma consente la modifica degli elementi esistenti.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-402">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</span></span>  
  
 <span data-ttu-id="8d7ba-403">Una raccolta con una dimensione fissa è semplicemente una raccolta con un wrapper che impedisce l'aggiunta e rimozione di elementi. Pertanto, se vengono apportate modifiche alla raccolta sottostante, incluse l'aggiunta o la rimozione di elementi, la raccolta a dimensione fissa riflette le modifiche.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-403">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="8d7ba-404">Il recupero del valore di questa proprietà è un'operazione O(1).</span><span class="sxs-lookup"><span data-stu-id="8d7ba-404">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d7ba-405">Ottiene un valore che indica se un oggetto <see cref="T:System.Collections.SortedList" /> è di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-405">Gets a value indicating whether a <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="8d7ba-406"><see langword="true" /> se l'oggetto <see cref="T:System.Collections.SortedList" /> è di sola lettura; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-406"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8d7ba-407">Il valore predefinito è <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-407">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-408">Una raccolta di sola lettura non consente l'aggiunta, la rimozione o la modifica di elementi dopo la sua creazione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-408">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="8d7ba-409">Una raccolta di sola lettura è semplicemente una raccolta con un wrapper che impedisce la modifica. Pertanto, se vengono apportate modifiche alla raccolta sottostante, la raccolta di sola lettura riflette le modifiche.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-409">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="8d7ba-410">Il recupero del valore di questa proprietà è un'operazione O(1).</span><span class="sxs-lookup"><span data-stu-id="8d7ba-410">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d7ba-411">Ottiene un valore che indica se l'accesso a un oggetto <see cref="T:System.Collections.SortedList" /> è sincronizzato (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="8d7ba-411">Gets a value indicating whether access to a <see cref="T:System.Collections.SortedList" /> object is synchronized (thread safe).</span></span></summary>
        <value>
          <span data-ttu-id="8d7ba-412"><see langword="true" /> se l'accesso all'oggetto <see cref="T:System.Collections.SortedList" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-412"><see langword="true" /> if access to the <see cref="T:System.Collections.SortedList" /> object is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8d7ba-413">Il valore predefinito è <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-413">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-414">Per garantire la protezione del thread di un <xref:System.Collections.SortedList> dell'oggetto, tutte le operazioni devono essere eseguite tramite il wrapper restituito dal <xref:System.Collections.SortedList.Synchronized%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-414">To guarantee the thread safety of a <xref:System.Collections.SortedList> object, all operations must be done through the wrapper returned by the <xref:System.Collections.SortedList.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="8d7ba-415">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-415">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="8d7ba-416">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-416">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="8d7ba-417">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-417">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-418">Esempio di codice riportato di seguito viene illustrato come bloccare un insieme utilizzando la <xref:System.Collections.SortedList.SyncRoot%2A> proprietà durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-418">The following code example shows how to lock a collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="8d7ba-419">Il recupero del valore di questa proprietà è un'operazione O(1).</span><span class="sxs-lookup"><span data-stu-id="8d7ba-419">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="8d7ba-420">Esempio di codice seguente viene illustrato come sincronizzare un <xref:System.Collections.SortedList> dell'oggetto, determinare se un <xref:System.Collections.SortedList> è sincronizzato e utilizzare un oggetto sincronizzato <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-420">The following code example shows how to synchronize a <xref:System.Collections.SortedList> object, determine whether a <xref:System.Collections.SortedList> is synchronized, and use a synchronized <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.SyncRoot" />
        <altmember cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8d7ba-421">Chiave associata al valore da ottenere o impostare.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-421">The key associated with the value to get or set.</span></span></param>
        <summary><span data-ttu-id="8d7ba-422">Ottiene e imposta il valore associato a una determinata chiave in un oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-422">Gets and sets the value associated with a specific key in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="8d7ba-423">Valore associato al parametro <paramref name="key" /> nell'oggetto <see cref="T:System.Collections.SortedList" />, se il parametro <paramref name="key" /> è presente; in caso contrario, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-423">The value associated with the <paramref name="key" /> parameter in the <see cref="T:System.Collections.SortedList" /> object, if <paramref name="key" /> is found; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-424">È possibile utilizzare il <xref:System.Collections.SortedList.Item%2A> proprietà per accedere a un elemento specifico in una raccolta, specificando la sintassi seguente: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-424">You can use the <xref:System.Collections.SortedList.Item%2A> property to access a specific element in a collection by specifying the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="8d7ba-425">È inoltre possibile utilizzare questa proprietà per aggiungere nuovi elementi impostando il valore di una chiave che non esiste nel <xref:System.Collections.SortedList> oggetto (ad esempio, `myCollection["myNonexistentKey"] = myValue)`.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-425">You can also use this property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.SortedList> object (for example, `myCollection["myNonexistentKey"] = myValue)`.</span></span> <span data-ttu-id="8d7ba-426">Tuttavia, se la chiave specificata esiste già nel <xref:System.Collections.SortedList>, impostando il <xref:System.Collections.SortedList.Item%2A> proprietà sovrascrive il vecchio valore.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-426">However, if the specified key already exists in the <xref:System.Collections.SortedList>, setting the <xref:System.Collections.SortedList.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="8d7ba-427">Al contrario, il <xref:System.Collections.SortedList.Add%2A> metodo non modifica gli elementi esistenti.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-427">In contrast, the <xref:System.Collections.SortedList.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="8d7ba-428">Non può essere una chiave `null`, ma può essere un valore.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-428">A key cannot be `null`, but a value can be.</span></span> <span data-ttu-id="8d7ba-429">Per distinguere tra `null` restituito perché non è stata trovata la chiave specificata e `null` restituito perché il valore della chiave specificata è `null`, utilizzare il <xref:System.Collections.SortedList.Contains%2A> metodo o <xref:System.Collections.SortedList.ContainsKey%2A> per determinare se la chiave è presente nell'elenco.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-429">To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.SortedList.Contains%2A> method or the <xref:System.Collections.SortedList.ContainsKey%2A> method to determine if the key exists in the list.</span></span>  
  
 <span data-ttu-id="8d7ba-430">Gli elementi di un <xref:System.Collections.SortedList> sono ordinate per chiave in uno specifico <xref:System.Collections.IComparer> implementazione specificato al momento il <xref:System.Collections.SortedList> viene creato o in base al <xref:System.IComparable> implementazione fornita dalle chiavi stesse.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-430">The elements of a <xref:System.Collections.SortedList> are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="8d7ba-431">Nel linguaggio c# viene utilizzata la parola chiave per definire gli indicizzatori anziché implementare la <xref:System.Collections.SortedList.Keys%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-431">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.SortedList.Keys%2A> property.</span></span> <span data-ttu-id="8d7ba-432">In Visual Basic la proprietà <xref:System.Collections.SortedList.Item%2A> viene implementata come predefinita per fornire la stessa funzionalità di indicizzazione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-432">Visual Basic implements <xref:System.Collections.SortedList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="8d7ba-433">Il recupero del valore di questa proprietà è un'operazione O (log `n`) operazione, in cui `n` è <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-433">Retrieving the value of this property is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="8d7ba-434">L'impostazione della proprietà è un'operazione O (log `n`) se la chiave è già nel <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-434">Setting the property is an O(log `n`) operation if the key is already in the <xref:System.Collections.SortedList>.</span></span> <span data-ttu-id="8d7ba-435">Se la chiave non è presente nell'elenco, l'impostazione della proprietà è un'operazione O (`n`) operazione per i dati non ordinati oppure O (log `n`) se il nuovo elemento viene aggiunto alla fine dell'elenco.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-435">If the key is not in the list, setting the property is an O(`n`) operation for unsorted data, or O(log `n`) if the new element is added at the end of the list.</span></span> <span data-ttu-id="8d7ba-436">Se l'inserimento comporta un ridimensionamento, l'operazione è O (`n`).</span><span class="sxs-lookup"><span data-stu-id="8d7ba-436">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8d7ba-437"><paramref name="key" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-437"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8d7ba-438">La proprietà è impostata e l'oggetto <see cref="T:System.Collections.SortedList" /> è in sola lettura.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-438">The property is set and the <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span>  
  
 <span data-ttu-id="8d7ba-439">oppure</span><span class="sxs-lookup"><span data-stu-id="8d7ba-439">-or-</span></span>  
  
 <span data-ttu-id="8d7ba-440">La proprietà è impostata, <paramref name="key" /> non esiste nella raccolta e <see cref="T:System.Collections.SortedList" /> è di dimensioni fisse.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-440">The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="8d7ba-441">La memoria disponibile non è sufficiente per aggiungere l'elemento all'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-441">There is not enough available memory to add the element to the <see cref="T:System.Collections.SortedList" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d7ba-442">L'operatore di confronto genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-442">The comparer throws an exception.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.Add(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.SortedList.Contains(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d7ba-443">Ottiene le chiavi di un oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-443">Gets the keys in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="8d7ba-444">Ottiene un oggetto <see cref="T:System.Collections.ICollection" /> contenente le chiavi dell'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-444">An <see cref="T:System.Collections.ICollection" /> object containing the keys in the <see cref="T:System.Collections.SortedList" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-445">Il <xref:System.Collections.ICollection> è una visualizzazione di sola lettura delle chiavi del <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-445">The <xref:System.Collections.ICollection> object is a read-only view of the keys of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="8d7ba-446">Le modifiche apportate alle sottostante <xref:System.Collections.SortedList> vengono applicate immediatamente il <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-446">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="8d7ba-447">Gli elementi del <xref:System.Collections.ICollection> vengono ordinati nello stesso ordine delle chiavi del <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-447">The elements of the <xref:System.Collections.ICollection> are sorted in the same order as the keys of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="8d7ba-448">Questa proprietà è simile al <xref:System.Collections.SortedList.GetKeyList%2A> (metodo), ma restituisce un <xref:System.Collections.ICollection> oggetto anziché un <xref:System.Collections.IList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-448">This property is similar to the <xref:System.Collections.SortedList.GetKeyList%2A> method, but returns an <xref:System.Collections.ICollection> object instead of an <xref:System.Collections.IList> object.</span></span>  
  
 <span data-ttu-id="8d7ba-449">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="8d7ba-449">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.SortedList.Values" />
        <altmember cref="M:System.Collections.SortedList.GetKeyList" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8d7ba-450">Chiave dell'elemento da rimuovere.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-450">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="8d7ba-451">Rimuove da un oggetto <see cref="T:System.Collections.SortedList" /> l'elemento con la chiave specificata.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-451">Removes the element with the specified key from a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-452">Se l'oggetto <xref:System.Collections.SortedList> non contiene alcun elemento con la chiave specificata, <xref:System.Collections.SortedList> rimarrà invariato.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-452">If the <xref:System.Collections.SortedList> object does not contain an element with the specified key, the <xref:System.Collections.SortedList> remains unchanged.</span></span> <span data-ttu-id="8d7ba-453">Non viene generata alcuna eccezione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-453">No exception is thrown.</span></span>  
  
 <span data-ttu-id="8d7ba-454">In raccolte di elementi adiacenti, quali gli elenchi, gli elementi successivi al punto di inserimento vengono spostati verso il basso per consentire l'inserimento del nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-454">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="8d7ba-455">Se la raccolta è indicizzata, vengono aggiornati anche gli indici degli elementi spostati.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-455">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="8d7ba-456">Questo comportamento non viene applicato alle raccolte in cui gli elementi sono raggruppati concettualmente in bucket, come accade ad esempio per le tabelle hash.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-456">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="8d7ba-457">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-457">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-458">Esempio di codice seguente viene illustrato come rimuovere elementi da un <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-458">The following code example shows how to remove elements from a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8d7ba-459"><paramref name="key" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-459"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8d7ba-460">L'oggetto <see cref="T:System.Collections.SortedList" /> è in sola lettura.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-460">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span>  
  
 <span data-ttu-id="8d7ba-461">oppure</span><span class="sxs-lookup"><span data-stu-id="8d7ba-461">-or-</span></span>  
  
 <span data-ttu-id="8d7ba-462">Le dimensioni dell'oggetto <see cref="T:System.Collections.SortedList" /> sono fisse.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-462">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="8d7ba-463">Indice in base zero dell'elemento da rimuovere.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-463">The zero-based index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="8d7ba-464">Rimuove l'elemento in corrispondenza dell'indice specificato di un oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-464">Removes the element at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-465">La sequenza di indice si basa sulla sequenza di ordinamento.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-465">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="8d7ba-466">Quando viene aggiunto un elemento, viene inserito nella <xref:System.Collections.SortedList> nell'ordinamento corretto ordine e l'indicizzazione si adegua di conseguenza.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-466">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="8d7ba-467">Quando un elemento viene rimosso, l'indicizzazione anche si adegua di conseguenza.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-467">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="8d7ba-468">Pertanto, l'indice di una coppia chiave/valore specifica potrebbe cambiare come gli elementi vengono aggiunti o rimossi dal <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-468">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="8d7ba-469">In raccolte di elementi adiacenti, quali gli elenchi, gli elementi successivi al punto di inserimento vengono spostati verso il basso per consentire l'inserimento del nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-469">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="8d7ba-470">Se la raccolta è indicizzata, vengono aggiornati anche gli indici degli elementi spostati.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-470">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="8d7ba-471">Questo comportamento non viene applicato alle raccolte in cui gli elementi sono raggruppati concettualmente in bucket, come accade ad esempio per le tabelle hash.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-471">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="8d7ba-472">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-472">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-473">Esempio di codice seguente viene illustrato come rimuovere elementi da un <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-473">The following code example shows how to remove elements from a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8d7ba-474">Il parametro <paramref name="index" /> non rientra nell'intervallo di indici validi per l'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-474"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8d7ba-475">La classe <see cref="T:System.Collections.SortedList" /> è di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-475">The <see cref="T:System.Collections.SortedList" /> is read-only.</span></span>  
  
 <span data-ttu-id="8d7ba-476">oppure</span><span class="sxs-lookup"><span data-stu-id="8d7ba-476">-or-</span></span>  
  
 <span data-ttu-id="8d7ba-477">Le dimensioni dell'oggetto <see cref="T:System.Collections.SortedList" /> sono fisse.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-477">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetByIndex">
      <MemberSignature Language="C#" Value="public virtual void SetByIndex (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetByIndex(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetByIndex (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetByIndex(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="8d7ba-478">Indice in base zero nel quale salvare <c>value</c>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-478">The zero-based index at which to save <c>value</c>.</span></span></param>
        <param name="value"><span data-ttu-id="8d7ba-479">Oggetto <see cref="T:System.Object" /> da salvare nell'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-479">The <see cref="T:System.Object" /> to save into the <see cref="T:System.Collections.SortedList" /> object.</span></span> <span data-ttu-id="8d7ba-480">Il valore può essere <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-480">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8d7ba-481">Sostituisce il valore in corrispondenza di un indice specifico in un oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-481">Replaces the value at a specific index in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-482">La sequenza di indice si basa sulla sequenza di ordinamento.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-482">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="8d7ba-483">Quando viene aggiunto un elemento, viene inserito nella <xref:System.Collections.SortedList> nell'ordinamento corretto ordine e l'indicizzazione si adegua di conseguenza.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-483">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="8d7ba-484">Quando un elemento viene rimosso, l'indicizzazione anche si adegua di conseguenza.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-484">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="8d7ba-485">Pertanto, l'indice di una coppia chiave/valore specifica potrebbe cambiare come gli elementi vengono aggiunti o rimossi dal <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-485">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="8d7ba-486">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="8d7ba-486">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-487">Esempio di codice seguente viene illustrato come sostituire il valore di un elemento esistente in un <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-487">The following code example shows how to replace the value of an existing element in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.SetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.SetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.SetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8d7ba-488">Il parametro <paramref name="index" /> non rientra nell'intervallo di indici validi per l'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-488"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.SortedList Synchronized (System.Collections.SortedList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.SortedList Synchronized(class System.Collections.SortedList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As SortedList) As SortedList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::SortedList ^ Synchronized(System::Collections::SortedList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.SortedList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.SortedList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="8d7ba-489">Oggetto <see cref="T:System.Collections.SortedList" /> da sincronizzare.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-489">The <see cref="T:System.Collections.SortedList" /> object to synchronize.</span></span></param>
        <summary><span data-ttu-id="8d7ba-490">Restituisce un wrapper sincronizzato (thread-safe) per un oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-490">Returns a synchronized (thread-safe) wrapper for a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="8d7ba-491">Wrapper sincronizzato (thread-safe) per l'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-491">A synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-492">Per garantire la protezione del thread di un <xref:System.Collections.SortedList> dell'oggetto, tutte le operazioni devono essere eseguite solo tramite questo wrapper.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-492">To guarantee the thread safety of a <xref:System.Collections.SortedList> object, all operations must be done through this wrapper only.</span></span>  
  
 <span data-ttu-id="8d7ba-493">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-493">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="8d7ba-494">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-494">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="8d7ba-495">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-495">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-496">Esempio di codice seguente viene illustrato come bloccare la raccolta utilizzando la <xref:System.Collections.SortedList.SyncRoot%2A> proprietà durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-496">The following code example shows how to lock the collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="8d7ba-497">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="8d7ba-497">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="8d7ba-498">Esempio di codice seguente viene illustrato come sincronizzare un <xref:System.Collections.SortedList> dell'oggetto, determinare se un <xref:System.Collections.SortedList> è sincronizzato e utilizzare un oggetto sincronizzato <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-498">The following code example shows how to synchronize a <xref:System.Collections.SortedList> object, determine whether a <xref:System.Collections.SortedList> is synchronized, and use a synchronized <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8d7ba-499"><paramref name="list" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-499"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.SortedList.IsSynchronized" />
        <altmember cref="P:System.Collections.SortedList.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d7ba-500">Ottiene un oggetto che può essere usato per sincronizzare l'accesso all'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-500">Gets an object that can be used to synchronize access to a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="8d7ba-501">Oggetto che può essere usato per sincronizzare l'accesso all'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-501">An object that can be used to synchronize access to the <see cref="T:System.Collections.SortedList" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-502">Per creare una versione sincronizzata del <xref:System.Collections.SortedList> oggetto, usare il <xref:System.Collections.SortedList.Synchronized%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-502">To create a synchronized version of the <xref:System.Collections.SortedList> object, use the <xref:System.Collections.SortedList.Synchronized%2A> method.</span></span> <span data-ttu-id="8d7ba-503">Tuttavia, le classi derivate possono fornire una propria versione sincronizzata del <xref:System.Collections.SortedList> utilizzando il <xref:System.Collections.SortedList.SyncRoot%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-503">However, derived classes can provide their own synchronized version of the <xref:System.Collections.SortedList> using the <xref:System.Collections.SortedList.SyncRoot%2A> property.</span></span> <span data-ttu-id="8d7ba-504">Il codice di sincronizzazione è necessario eseguire operazioni sul <xref:System.Collections.SortedList.SyncRoot%2A> del <xref:System.Collections.SortedList>, non direttamente sul <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-504">The synchronizing code must perform operations on the <xref:System.Collections.SortedList.SyncRoot%2A> of the <xref:System.Collections.SortedList>, not directly on the <xref:System.Collections.SortedList>.</span></span> <span data-ttu-id="8d7ba-505">In questo modo si garantisce il corretto funzionamento delle raccolte derivate da altri oggetti.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-505">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="8d7ba-506">In particolare, viene mantenuta la sincronizzazione con altri thread che potrebbero modificare contemporaneamente il <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-506">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="8d7ba-507">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-507">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="8d7ba-508">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-508">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="8d7ba-509">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-509">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-510">Esempio di codice seguente viene illustrato come bloccare la raccolta utilizzando la <xref:System.Collections.SortedList.SyncRoot%2A> proprietà durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-510">The following code example shows how to lock the collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="8d7ba-511">Il recupero del valore di questa proprietà è un'operazione O(1).</span><span class="sxs-lookup"><span data-stu-id="8d7ba-511">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.IsSynchronized" />
        <altmember cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d7ba-512">Restituisce un oggetto <see cref="T:System.Collections.IEnumerator" /> che esegue l'iterazione di <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-512">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Collections.SortedList" />.</span></span></summary>
        <returns><span data-ttu-id="8d7ba-513"><see cref="T:System.Collections.IEnumerator" /> per l'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-513">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.SortedList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-514">[Visual Basic, c#]</span><span class="sxs-lookup"><span data-stu-id="8d7ba-514">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="8d7ba-515">L'istruzione `foreach` del linguaggio C# (`for each` in Visual Basic) nasconde la complessità degli enumeratori.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-515">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="8d7ba-516">Pertanto, si consiglia l'utilizzo di `foreach`, anziché la modifica diretta dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-516">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="8d7ba-517">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-517">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="8d7ba-518">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-518">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="8d7ba-519">Anche il metodo <xref:System.Collections.IEnumerator.Reset%2A> riporta l'enumeratore in questa posizione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-519"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="8d7ba-520">In questa posizione, la chiamata <xref:System.Collections.IEnumerator.Current%2A> genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-520">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="8d7ba-521">Pertanto, è necessario chiamare il metodo <xref:System.Collections.IEnumerator.MoveNext%2A> per spostare in avanti l'enumeratore, in corrispondenza del primo elemento della raccolta, prima di leggere il valore di <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-521">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="8d7ba-522"><xref:System.Collections.IEnumerator.Current%2A> restituisce lo stesso oggetto finché non viene chiamato il metodo <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-522"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="8d7ba-523"><xref:System.Collections.IEnumerator.MoveNext%2A> imposta <xref:System.Collections.IEnumerator.Current%2A> sull'elemento successivo.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-523"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="8d7ba-524">Se <xref:System.Collections.IEnumerator.MoveNext%2A> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <xref:System.Collections.IEnumerator.MoveNext%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-524">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="8d7ba-525">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <xref:System.Collections.IEnumerator.MoveNext%2A> restituire anche `false`.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-525">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="8d7ba-526">Se l'ultima chiamata a <xref:System.Collections.IEnumerator.MoveNext%2A> restituito `false`, la chiamata <xref:System.Collections.IEnumerator.Current%2A> genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-526">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="8d7ba-527">Per impostare nuovamente la proprietà <xref:System.Collections.IEnumerator.Current%2A> sul primo elemento della raccolta, è possibile chiamare il metodo <xref:System.Collections.IEnumerator.Reset%2A> seguito da <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-527">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="8d7ba-528">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-528">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="8d7ba-529">Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l'enumeratore viene invalidato in modo irreversibile e la successiva chiamata al <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> genera un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-529">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="8d7ba-530">Se la raccolta viene modificata tra <xref:System.Collections.IEnumerator.MoveNext%2A> e <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> restituisce l'elemento su cui è stata impostata, anche se l'enumeratore risulta già invalidato.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-530">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="8d7ba-531">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-531">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="8d7ba-532">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-532">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="8d7ba-533">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-533">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="8d7ba-534">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="8d7ba-534">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public virtual void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimToSize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d7ba-535">Imposta la capacità sul numero effettivo di elementi contenuti in un oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-535">Sets the capacity to the actual number of elements in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-536">Questo metodo può essere utilizzato per ridurre il sovraccarico della memoria di una raccolta se nessun nuovo elemento verrà aggiunto alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-536">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span>  
  
 <span data-ttu-id="8d7ba-537">Per reimpostare un <xref:System.Collections.SortedList> oggetto allo stato iniziale, chiamata di <xref:System.Collections.SortedList.Clear%2A> metodo prima di chiamare <xref:System.Collections.SortedList.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-537">To reset a <xref:System.Collections.SortedList> object to its initial state, call the <xref:System.Collections.SortedList.Clear%2A> method before calling <xref:System.Collections.SortedList.TrimToSize%2A>.</span></span> <span data-ttu-id="8d7ba-538">L'eliminazione di un oggetto vuoto <xref:System.Collections.SortedList> imposta la capacità del <xref:System.Collections.SortedList> per la capacità predefinita.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-538">Trimming an empty <xref:System.Collections.SortedList> sets the capacity of the <xref:System.Collections.SortedList> to the default capacity.</span></span>  
  
 <span data-ttu-id="8d7ba-539">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-539">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7ba-540">Esempio di codice seguente viene illustrato come tagliare le parti inutilizzate di un <xref:System.Collections.SortedList> oggetto e come cancellare i relativi valori.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-540">The following code example shows how to trim the unused portions of a <xref:System.Collections.SortedList> object and how to clear its values.</span></span>  
  
 [!code-cpp[Classic SortedList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8d7ba-541">L'oggetto <see cref="T:System.Collections.SortedList" /> è in sola lettura.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-541">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span>  
  
 <span data-ttu-id="8d7ba-542">oppure</span><span class="sxs-lookup"><span data-stu-id="8d7ba-542">-or-</span></span>  
  
 <span data-ttu-id="8d7ba-543">Le dimensioni dell'oggetto <see cref="T:System.Collections.SortedList" /> sono fisse.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-543">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.Clear" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <altmember cref="P:System.Collections.SortedList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Values" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d7ba-544">Ottiene i valori di un oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-544">Gets the values in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="8d7ba-545">Oggetto <see cref="T:System.Collections.ICollection" /> contenente i valori dell'oggetto <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-545">An <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.SortedList" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7ba-546">Il <xref:System.Collections.ICollection> è una visualizzazione di sola lettura dei valori del <xref:System.Collections.SortedList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-546">The <xref:System.Collections.ICollection> object is a read-only view of the values of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="8d7ba-547">Le modifiche apportate alle sottostante <xref:System.Collections.SortedList> vengono applicate immediatamente il <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-547">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="8d7ba-548">Gli elementi del <xref:System.Collections.ICollection> vengono ordinati nello stesso ordine dei valori del <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-548">The elements of the <xref:System.Collections.ICollection> are sorted in the same order as the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="8d7ba-549">Questa proprietà è simile al <xref:System.Collections.SortedList.GetValueList%2A> (metodo), ma restituisce un <xref:System.Collections.ICollection> oggetto anziché un <xref:System.Collections.IList> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8d7ba-549">This property is similar to the <xref:System.Collections.SortedList.GetValueList%2A> method, but returns an <xref:System.Collections.ICollection> object instead of an <xref:System.Collections.IList> object.</span></span>  
  
 <span data-ttu-id="8d7ba-550">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="8d7ba-550">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.SortedList.Keys" />
        <altmember cref="M:System.Collections.SortedList.GetValueList" />
      </Docs>
    </Member>
  </Members>
</Type>