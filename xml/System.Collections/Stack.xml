<Type Name="Stack" FullName="System.Collections.Stack">
  <TypeSignature Language="C#" Value="public class Stack : ICloneable, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Stack extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Stack" />
  <TypeSignature Language="VB.NET" Value="Public Class Stack&#xA;Implements ICloneable, ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stack : ICloneable, System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Stack/StackDebugView))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f7400-101">Rappresenta una raccolta di oggetti non generica di tipo LIFO (Last-In First-Out).</span><span class="sxs-lookup"><span data-stu-id="f7400-101">Represents a simple last-in-first-out (LIFO) non-generic collection of objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7400-102">Per la versione generica di questa raccolta, vedere <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f7400-102">For the generic version of this collection, see <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f7400-103">La capacità di un <xref:System.Collections.Stack> è il numero di elementi di <xref:System.Collections.Stack> può contenere.</span><span class="sxs-lookup"><span data-stu-id="f7400-103">The capacity of a <xref:System.Collections.Stack> is the number of elements the <xref:System.Collections.Stack> can hold.</span></span> <span data-ttu-id="f7400-104">Quando gli elementi vengono aggiunti a un <xref:System.Collections.Stack>, incrementata automaticamente in base alle necessità, tramite riallocazione.</span><span class="sxs-lookup"><span data-stu-id="f7400-104">As elements are added to a <xref:System.Collections.Stack>, the capacity is automatically increased as required through reallocation.</span></span>  
  
 <span data-ttu-id="f7400-105">Se <xref:System.Collections.Stack.Count%2A> è inferiore alla capacità dello stack, <xref:System.Collections.Stack.Push%2A> è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="f7400-105">If <xref:System.Collections.Stack.Count%2A> is less than the capacity of the stack, <xref:System.Collections.Stack.Push%2A> is an O(1) operation.</span></span> <span data-ttu-id="f7400-106">Se la capacità deve essere incrementata per far posto al nuovo elemento <xref:System.Collections.Stack.Push%2A> diventa un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7400-106">If the capacity needs to be increased to accommodate the new element, <xref:System.Collections.Stack.Push%2A> becomes an O(`n`) operation, where `n` is <xref:System.Collections.Stack.Count%2A>.</span></span> <span data-ttu-id="f7400-107"><xref:System.Collections.Stack.Pop%2A> è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="f7400-107"><xref:System.Collections.Stack.Pop%2A> is an O(1) operation.</span></span>  
  
 <span data-ttu-id="f7400-108"><xref:System.Collections.Stack> accetta `null` come un valore valido e consente elementi duplicati.</span><span class="sxs-lookup"><span data-stu-id="f7400-108"><xref:System.Collections.Stack> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7400-109">Nell'esempio seguente viene illustrato come creare e aggiungere i valori per un <xref:System.Collections.Stack> e come visualizzare i relativi valori.</span><span class="sxs-lookup"><span data-stu-id="f7400-109">The following example shows how to create and add values to a <xref:System.Collections.Stack> and how to display its values.</span></span>  
  
 [!code-cpp[Classic Stack Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack Example/CS/source.cs#1)]
 [!code-vb[Classic Stack Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="f7400-110">Statici pubblici (<see langword="Shared" /> in Visual Basic) di questo tipo sono thread-safe.</span><span class="sxs-lookup"><span data-stu-id="f7400-110">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="f7400-111">I membri di istanza non sono garantiti come thread-safe.</span><span class="sxs-lookup"><span data-stu-id="f7400-111">Any instance members are not guaranteed to be thread safe.</span></span>  
  
 <span data-ttu-id="f7400-112">Per garantire la thread-safe di <see cref="T:System.Collections.Stack" />, tutte le operazioni devono essere eseguite tramite il wrapper restituito dal <see cref="M:System.Collections.Stack.Synchronized(System.Collections.Stack)" /> metodo.</span><span class="sxs-lookup"><span data-stu-id="f7400-112">To guarantee the thread safety of the <see cref="T:System.Collections.Stack" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.Stack.Synchronized(System.Collections.Stack)" /> method.</span></span>  
  
 <span data-ttu-id="f7400-113">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="f7400-113">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="f7400-114">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="f7400-114">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="f7400-115">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</span><span class="sxs-lookup"><span data-stu-id="f7400-115">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Collections.Generic.Stack`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7400-116">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-116">Initializes a new instance of the <see cref="T:System.Collections.Stack" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7400-117">Inizializza una nuova istanza della classe <see cref="T:System.Collections.Stack" /> vuota e con capacità iniziale predefinita.</span><span class="sxs-lookup"><span data-stu-id="f7400-117">Initializes a new instance of the <see cref="T:System.Collections.Stack" /> class that is empty and has the default initial capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7400-118">La capacità di un <xref:System.Collections.Stack> è il numero di elementi che la <xref:System.Collections.Stack> può contenere.</span><span class="sxs-lookup"><span data-stu-id="f7400-118">The capacity of a <xref:System.Collections.Stack> is the number of elements that the <xref:System.Collections.Stack> can hold.</span></span> <span data-ttu-id="f7400-119">Quando gli elementi vengono aggiunti a un <xref:System.Collections.Stack>, incrementata automaticamente come richiesto tramite la riallocazione della matrice interna.</span><span class="sxs-lookup"><span data-stu-id="f7400-119">As elements are added to a <xref:System.Collections.Stack>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="f7400-120">Se è possibile stimare le dimensioni della raccolta, specificando la capacità iniziale Elimina la necessità di eseguire numerose operazioni di ridimensionamento durante l'aggiunta di elementi di <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="f7400-120">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Stack>.</span></span>  
  
 <span data-ttu-id="f7400-121">Questo costruttore è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="f7400-121">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack (System.Collections.ICollection col);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection col) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (col As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack(System::Collections::ICollection ^ col);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="col" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="col"><span data-ttu-id="f7400-122"><see cref="T:System.Collections.ICollection" /> da cui copiare gli elementi.</span><span class="sxs-lookup"><span data-stu-id="f7400-122">The <see cref="T:System.Collections.ICollection" /> to copy elements from.</span></span></param>
        <summary><span data-ttu-id="f7400-123">Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.Collections.Stack" /> che contiene gli elementi copiati dall'insieme specificato e ha la capacità iniziale definita dal numero degli elementi copiati.</span><span class="sxs-lookup"><span data-stu-id="f7400-123">Initializes a new instance of the <see cref="T:System.Collections.Stack" /> class that contains elements copied from the specified collection and has the same initial capacity as the number of elements copied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7400-124">La capacità di un <xref:System.Collections.Stack> è il numero di elementi che la <xref:System.Collections.Stack> può contenere.</span><span class="sxs-lookup"><span data-stu-id="f7400-124">The capacity of a <xref:System.Collections.Stack> is the number of elements that the <xref:System.Collections.Stack> can hold.</span></span> <span data-ttu-id="f7400-125">Quando gli elementi vengono aggiunti a un <xref:System.Collections.Stack>, incrementata automaticamente come richiesto tramite la riallocazione della matrice interna.</span><span class="sxs-lookup"><span data-stu-id="f7400-125">As elements are added to a <xref:System.Collections.Stack>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="f7400-126">Se è possibile stimare le dimensioni della raccolta, specificando la capacità iniziale Elimina la necessità di eseguire numerose operazioni di ridimensionamento durante l'aggiunta di elementi di <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="f7400-126">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Stack>.</span></span>  
  
 <span data-ttu-id="f7400-127">Gli elementi vengono copiati nel <xref:System.Collections.Stack> nello stesso ordine in cui vengono letti dal <xref:System.Collections.IEnumerator> del <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="f7400-127">The elements are copied onto the <xref:System.Collections.Stack> in the same order they are read by the <xref:System.Collections.IEnumerator> of the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="f7400-128">Questo costruttore è un'operazione O (`n`) operazione, in cui `n` è il numero di elementi in `col`.</span><span class="sxs-lookup"><span data-stu-id="f7400-128">This constructor is an O(`n`) operation, where `n` is the number of elements in `col`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7400-129"><paramref name="col" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-129"><paramref name="col" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack(int initialCapacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCapacity"><span data-ttu-id="f7400-130">Numero iniziale degli elementi che <see cref="T:System.Collections.Stack" /> può contenere.</span><span class="sxs-lookup"><span data-stu-id="f7400-130">The initial number of elements that the <see cref="T:System.Collections.Stack" /> can contain.</span></span></param>
        <summary><span data-ttu-id="f7400-131">Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.Collections.Stack" />, che è vuota e ha la capacità iniziale maggiore tra quella specificata e quella predefinita.</span><span class="sxs-lookup"><span data-stu-id="f7400-131">Initializes a new instance of the <see cref="T:System.Collections.Stack" /> class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7400-132">La capacità di un <xref:System.Collections.Stack> è il numero di elementi che la <xref:System.Collections.Stack> può contenere.</span><span class="sxs-lookup"><span data-stu-id="f7400-132">The capacity of a <xref:System.Collections.Stack> is the number of elements that the <xref:System.Collections.Stack> can hold.</span></span> <span data-ttu-id="f7400-133">Quando gli elementi vengono aggiunti a un <xref:System.Collections.Stack>, incrementata automaticamente come richiesto tramite la riallocazione della matrice interna.</span><span class="sxs-lookup"><span data-stu-id="f7400-133">As elements are added to a <xref:System.Collections.Stack>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="f7400-134">Se è possibile stimare le dimensioni della raccolta, specificando la capacità iniziale Elimina la necessità di eseguire numerose operazioni di ridimensionamento durante l'aggiunta di elementi di <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="f7400-134">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Stack>.</span></span>  
  
 <span data-ttu-id="f7400-135">Questo costruttore è un'operazione O (`n`) operazione, in cui `n` è `initialCapacity`.</span><span class="sxs-lookup"><span data-stu-id="f7400-135">This constructor is an O(`n`) operation, where `n` is `initialCapacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f7400-136"><paramref name="initialCapacity" /> è minore di zero.</span><span class="sxs-lookup"><span data-stu-id="f7400-136"><paramref name="initialCapacity" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7400-137">Rimuove tutti gli oggetti da <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-137">Removes all objects from the <see cref="T:System.Collections.Stack" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7400-138"><xref:System.Collections.Stack.Count%2A> è impostato su zero e vengono rilasciati anche i riferimenti ad altri oggetti da elementi della raccolta.</span><span class="sxs-lookup"><span data-stu-id="f7400-138"><xref:System.Collections.Stack.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="f7400-139">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7400-139">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Stack.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7400-140">Nell'esempio seguente viene illustrato come cancellare i valori del <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="f7400-140">The following example shows how to clear the values of the <xref:System.Collections.Stack>.</span></span>  
  
 [!code-cpp[Classic Stack.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7400-141">Crea una copia superficiale di <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-141">Creates a shallow copy of the <see cref="T:System.Collections.Stack" />.</span></span></summary>
        <returns><span data-ttu-id="f7400-142">Copia superficiale di <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-142">A shallow copy of the <see cref="T:System.Collections.Stack" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7400-143">Una copia superficiale di un insieme di copia solo gli elementi della raccolta, se sono tipi di riferimento o tipi di valore, ma non copia gli oggetti che fanno riferimento i riferimenti.</span><span class="sxs-lookup"><span data-stu-id="f7400-143">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="f7400-144">I riferimenti nella nuova raccolta puntano agli stessi oggetti che puntano i riferimenti nella raccolta originale.</span><span class="sxs-lookup"><span data-stu-id="f7400-144">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="f7400-145">Al contrario, una copia completa di una raccolta copia gli elementi e tutti gli elementi direttamente o indirettamente a cui fa riferimento gli elementi.</span><span class="sxs-lookup"><span data-stu-id="f7400-145">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="f7400-146">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7400-146">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Stack.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="f7400-147">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-147">The object to locate in the <see cref="T:System.Collections.Stack" />.</span></span> <span data-ttu-id="f7400-148">Il valore può essere <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-148">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="f7400-149">Determina se un elemento è incluso in <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-149">Determines whether an element is in the <see cref="T:System.Collections.Stack" />.</span></span></summary>
        <returns>
          <span data-ttu-id="f7400-150"><see langword="true" /> se <paramref name="obj" /> è presente in <see cref="T:System.Collections.Stack" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-150"><see langword="true" />, if <paramref name="obj" /> is found in the <see cref="T:System.Collections.Stack" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7400-151">Questo metodo determina l'uguaglianza chiamando il <xref:System.Object.Equals%2A?displayProperty=nameWithType> metodo.</span><span class="sxs-lookup"><span data-stu-id="f7400-151">This method determines equality by calling the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f7400-152">Questo metodo esegue una ricerca lineare. Pertanto, questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7400-152">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Stack.Count%2A>.</span></span>  
  
 <span data-ttu-id="f7400-153">A partire da .NET Framework 2.0, questo metodo testa l'uguaglianza passando il `obj` argomento per il <xref:System.Object.Equals%2A> metodo dei singoli oggetti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="f7400-153">Starting with the .NET Framework 2.0, this method tests for equality by passing the `obj` argument to the <xref:System.Object.Equals%2A> method of individual objects in the collection.</span></span> <span data-ttu-id="f7400-154">Nelle versioni precedenti di .NET Framework, questa operazione è stata effettuata utilizzando passa i singoli elementi della raccolta per il <xref:System.Object.Equals%2A> metodo il `obj` argomento.</span><span class="sxs-lookup"><span data-stu-id="f7400-154">In the earlier versions of the .NET Framework, this determination was made by using passing the individual items in the collection to the <xref:System.Object.Equals%2A> method of the `obj` argument.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="f7400-155">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-155">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Stack" />.</span></span> <span data-ttu-id="f7400-156">L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</span><span class="sxs-lookup"><span data-stu-id="f7400-156">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="f7400-157">Indice in base zero in <c>array</c> in corrispondenza del quale ha inizio la copia.</span><span class="sxs-lookup"><span data-stu-id="f7400-157">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="f7400-158">Consente di copiare lo <see cref="T:System.Collections.Stack" /> in una <see cref="T:System.Array" /> unidimensionale esistente, partendo dall'indice della matrice specificata.</span><span class="sxs-lookup"><span data-stu-id="f7400-158">Copies the <see cref="T:System.Collections.Stack" /> to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7400-159">Gli elementi vengono copiati nella matrice last-in-first-out (LIFO) ordinamento, analogamente agli elementi restituiti da una sequenza di chiamate a <xref:System.Collections.Stack.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7400-159">The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <xref:System.Collections.Stack.Pop%2A>.</span></span>  
  
 <span data-ttu-id="f7400-160">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7400-160">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Stack.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7400-161">Nell'esempio seguente viene illustrato come copiare un <xref:System.Collections.Stack> in una matrice unidimensionale.</span><span class="sxs-lookup"><span data-stu-id="f7400-161">The following example shows how to copy a <xref:System.Collections.Stack> into a one-dimensional array.</span></span>  
  
 [!code-cpp[Classic Stack.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7400-162"><paramref name="array" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-162"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f7400-163"><paramref name="index" /> è minore di zero.</span><span class="sxs-lookup"><span data-stu-id="f7400-163"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f7400-164"><paramref name="array" /> è multidimensionale.</span><span class="sxs-lookup"><span data-stu-id="f7400-164"><paramref name="array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="f7400-165">oppure</span><span class="sxs-lookup"><span data-stu-id="f7400-165">-or-</span></span>  
  
 <span data-ttu-id="f7400-166">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Stack" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</span><span class="sxs-lookup"><span data-stu-id="f7400-166">The number of elements in the source <see cref="T:System.Collections.Stack" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="f7400-167">Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.Stack" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</span><span class="sxs-lookup"><span data-stu-id="f7400-167">The type of the source <see cref="T:System.Collections.Stack" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="M:System.Collections.Stack.ToArray" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Stack.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7400-168">Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-168">Gets the number of elements contained in the <see cref="T:System.Collections.Stack" />.</span></span></summary>
        <value><span data-ttu-id="f7400-169">Il numero di elementi contenuti in <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-169">The number of elements contained in the <see cref="T:System.Collections.Stack" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7400-170">La capacità è il numero di elementi che la <xref:System.Collections.Stack> può archiviare.</span><span class="sxs-lookup"><span data-stu-id="f7400-170">The capacity is the number of elements that the <xref:System.Collections.Stack> can store.</span></span> <span data-ttu-id="f7400-171"><xref:System.Collections.Stack.Count%2A> è il numero di elementi effettivamente contenuti nella <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="f7400-171"><xref:System.Collections.Stack.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Stack>.</span></span>  
  
 <span data-ttu-id="f7400-172">La capacità è sempre maggiore di o uguale a <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7400-172">The capacity is always greater than or equal to <xref:System.Collections.Stack.Count%2A>.</span></span> <span data-ttu-id="f7400-173">Se <xref:System.Collections.Stack.Count%2A> durante l'aggiunta di elementi supera la capacità, la capacità viene aumentata automaticamente tramite la riallocazione della matrice interna prima di copiare gli elementi e aggiunta di nuovi elementi.</span><span class="sxs-lookup"><span data-stu-id="f7400-173">If <xref:System.Collections.Stack.Count%2A> exceeds the capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="f7400-174">Il recupero del valore di questa proprietà è un'operazione O(1).</span><span class="sxs-lookup"><span data-stu-id="f7400-174">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7400-175">Restituisce <see cref="T:System.Collections.IEnumerator" /> per <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-175">Returns an <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.Stack" />.</span></span></summary>
        <returns><span data-ttu-id="f7400-176"><see cref="T:System.Collections.IEnumerator" /> per l'oggetto <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-176">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.Stack" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7400-177">[Visual Basic, c#]</span><span class="sxs-lookup"><span data-stu-id="f7400-177">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="f7400-178">L'istruzione `foreach` del linguaggio C# (`for each` in Visual Basic) nasconde la complessità degli enumeratori.</span><span class="sxs-lookup"><span data-stu-id="f7400-178">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="f7400-179">Pertanto, si consiglia l'utilizzo di `foreach`, anziché la modifica diretta dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="f7400-179">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="f7400-180">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="f7400-180">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="f7400-181">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</span><span class="sxs-lookup"><span data-stu-id="f7400-181">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="f7400-182">Anche il metodo <xref:System.Collections.IEnumerator.Reset%2A> riporta l'enumeratore in questa posizione.</span><span class="sxs-lookup"><span data-stu-id="f7400-182"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="f7400-183">In questa posizione, la proprietà <xref:System.Collections.IEnumerator.Current%2A> è indefinita.</span><span class="sxs-lookup"><span data-stu-id="f7400-183">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="f7400-184">Pertanto, è necessario chiamare il metodo <xref:System.Collections.IEnumerator.MoveNext%2A> per spostare in avanti l'enumeratore, in corrispondenza del primo elemento della raccolta, prima di leggere il valore di <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7400-184">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="f7400-185"><xref:System.Collections.IEnumerator.Current%2A> restituisce lo stesso oggetto finché non viene chiamato il metodo <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7400-185"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="f7400-186"><xref:System.Collections.IEnumerator.MoveNext%2A> imposta <xref:System.Collections.IEnumerator.Current%2A> sull'elemento successivo.</span><span class="sxs-lookup"><span data-stu-id="f7400-186"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="f7400-187">Se <xref:System.Collections.IEnumerator.MoveNext%2A> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <xref:System.Collections.IEnumerator.MoveNext%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="f7400-187">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="f7400-188">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <xref:System.Collections.IEnumerator.MoveNext%2A> restituire anche `false`.</span><span class="sxs-lookup"><span data-stu-id="f7400-188">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="f7400-189">Se l'ultima chiamata a <xref:System.Collections.IEnumerator.MoveNext%2A> restituito `false`, <xref:System.Collections.IEnumerator.Current%2A> è definito.</span><span class="sxs-lookup"><span data-stu-id="f7400-189">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="f7400-190">Per impostare nuovamente la proprietà <xref:System.Collections.IEnumerator.Current%2A> sul primo elemento della raccolta, è possibile chiamare il metodo <xref:System.Collections.IEnumerator.Reset%2A> seguito da <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7400-190">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="f7400-191">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</span><span class="sxs-lookup"><span data-stu-id="f7400-191">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="f7400-192">In caso di modifiche alla raccolta, ad esempio aggiunta, modifica o eliminazione di elementi, l'enumeratore sarà reso non valido in modo irreversibile e il comportamento corrispondente non sarà definito.</span><span class="sxs-lookup"><span data-stu-id="f7400-192">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="f7400-193">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="f7400-193">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="f7400-194">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="f7400-194">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f7400-195">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="f7400-195">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="f7400-196">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="f7400-196">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Stack.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7400-197">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.Stack" /> è sincronizzato (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="f7400-197">Gets a value indicating whether access to the <see cref="T:System.Collections.Stack" /> is synchronized (thread safe).</span></span></summary>
        <value>
          <span data-ttu-id="f7400-198"><see langword="true" /> se l'accesso alla classe <see cref="T:System.Collections.Stack" /> è sincronizzato (thread-safe), <see langword="false" /> in caso contrario.</span><span class="sxs-lookup"><span data-stu-id="f7400-198"><see langword="true" />, if access to the <see cref="T:System.Collections.Stack" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f7400-199">Il valore predefinito è <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-199">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7400-200">Per garantire la thread-safe di <xref:System.Collections.Stack>, tutte le operazioni devono essere eseguite tramite il wrapper restituito dal <xref:System.Collections.Stack.Synchronized%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="f7400-200">To guarantee the thread safety of the <xref:System.Collections.Stack>, all operations must be done through the wrapper returned by the <xref:System.Collections.Stack.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="f7400-201">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="f7400-201">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="f7400-202">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="f7400-202">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="f7400-203">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</span><span class="sxs-lookup"><span data-stu-id="f7400-203">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="f7400-204">Esempio di codice seguente viene illustrato come bloccare la raccolta utilizzando la <xref:System.Collections.Stack.SyncRoot%2A> durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="f7400-204">The following code example shows how to lock the collection using the <xref:System.Collections.Stack.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic Stack.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Stack.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic Stack.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="f7400-205">Il recupero del valore di questa proprietà è un'operazione O(1).</span><span class="sxs-lookup"><span data-stu-id="f7400-205">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7400-206">Nell'esempio seguente viene illustrato come sincronizzare un <xref:System.Collections.Stack>, determinare se un <xref:System.Collections.Stack> è sincronizzato e utilizzare un oggetto sincronizzato <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="f7400-206">The following example shows how to synchronize a <xref:System.Collections.Stack>, determine if a <xref:System.Collections.Stack> is synchronized, and use a synchronized <xref:System.Collections.Stack>.</span></span>  
  
 [!code-cpp[Classic Stack.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public virtual object Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Peek () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Peek();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7400-207">Viene restituito l'oggetto all'inizio dello <see cref="T:System.Collections.Stack" /> senza rimuoverlo.</span><span class="sxs-lookup"><span data-stu-id="f7400-207">Returns the object at the top of the <see cref="T:System.Collections.Stack" /> without removing it.</span></span></summary>
        <returns><span data-ttu-id="f7400-208"><see cref="T:System.Object" /> all'inizio dello <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-208">The <see cref="T:System.Object" /> at the top of the <see cref="T:System.Collections.Stack" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7400-209">Questo metodo è analogo al metodo <xref:System.Collections.Stack.Pop%2A>, ma <xref:System.Collections.Stack.Peek%2A> non modifica la <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="f7400-209">This method is similar to the <xref:System.Collections.Stack.Pop%2A> method, but <xref:System.Collections.Stack.Peek%2A> does not modify the <xref:System.Collections.Stack>.</span></span>  
  
 <span data-ttu-id="f7400-210">`null` può essere inserito il <xref:System.Collections.Stack> come segnaposto, se necessario.</span><span class="sxs-lookup"><span data-stu-id="f7400-210">`null` can be pushed onto the <xref:System.Collections.Stack> as a placeholder, if needed.</span></span> <span data-ttu-id="f7400-211">Per distinguere tra un valore null e la fine dello stack, controllare il <xref:System.Collections.Stack.Count%2A> proprietà o intercettare il <xref:System.InvalidOperationException>, che viene generato quando il <xref:System.Collections.Stack> è vuoto.</span><span class="sxs-lookup"><span data-stu-id="f7400-211">To distinguish between a null value and the end of the stack, check the <xref:System.Collections.Stack.Count%2A> property or catch the <xref:System.InvalidOperationException>, which is thrown when the <xref:System.Collections.Stack> is empty.</span></span>  
  
 <span data-ttu-id="f7400-212">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="f7400-212">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7400-213">Nell'esempio seguente viene illustrato come aggiungere elementi per il <xref:System.Collections.Stack>, rimuovere elementi dal <xref:System.Collections.Stack>, o visualizzare l'elemento all'inizio del <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="f7400-213">The following example shows how to add elements to the <xref:System.Collections.Stack>, remove elements from the <xref:System.Collections.Stack>, or view the element at the top of the <xref:System.Collections.Stack>.</span></span>  
  
 [!code-cpp[Classic Stack.Peek Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.Peek Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.Peek Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.Peek Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.Peek Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.Peek Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7400-214">La classe <see cref="T:System.Collections.Stack" /> è vuota.</span><span class="sxs-lookup"><span data-stu-id="f7400-214">The <see cref="T:System.Collections.Stack" /> is empty.</span></span></exception>
        <altmember cref="M:System.Collections.Stack.Pop" />
        <altmember cref="M:System.Collections.Stack.Push(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public virtual object Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Pop () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Pop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7400-215">Rimuove e restituisce l'oggetto all'inizio dello <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-215">Removes and returns the object at the top of the <see cref="T:System.Collections.Stack" />.</span></span></summary>
        <returns><span data-ttu-id="f7400-216"><see cref="T:System.Object" /> rimosso dall'inizio dello <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-216">The <see cref="T:System.Object" /> removed from the top of the <see cref="T:System.Collections.Stack" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7400-217">Questo metodo è analogo al metodo <xref:System.Collections.Stack.Peek%2A>, ma <xref:System.Collections.Stack.Peek%2A> non modifica la <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="f7400-217">This method is similar to the <xref:System.Collections.Stack.Peek%2A> method, but <xref:System.Collections.Stack.Peek%2A> does not modify the <xref:System.Collections.Stack>.</span></span>  
  
 <span data-ttu-id="f7400-218">`null` può essere inserito il <xref:System.Collections.Stack> come segnaposto, se necessario.</span><span class="sxs-lookup"><span data-stu-id="f7400-218">`null` can be pushed onto the <xref:System.Collections.Stack> as a placeholder, if needed.</span></span> <span data-ttu-id="f7400-219">Per distinguere tra un valore null e la fine dello stack, controllare il <xref:System.Collections.Stack.Count%2A> proprietà o intercettare il <xref:System.InvalidOperationException>, che viene generato quando il <xref:System.Collections.Stack> è vuoto.</span><span class="sxs-lookup"><span data-stu-id="f7400-219">To distinguish between a null value and the end of the stack, check the <xref:System.Collections.Stack.Count%2A> property or catch the <xref:System.InvalidOperationException>, which is thrown when the <xref:System.Collections.Stack> is empty.</span></span>  
  
 <span data-ttu-id="f7400-220">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="f7400-220">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7400-221">Nell'esempio seguente viene illustrato come aggiungere elementi per il <xref:System.Collections.Stack>, rimuovere elementi dal <xref:System.Collections.Stack>, o visualizzare l'elemento all'inizio del <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="f7400-221">The following example shows how to add elements to the <xref:System.Collections.Stack>, remove elements from the <xref:System.Collections.Stack>, or view the element at the top of the <xref:System.Collections.Stack>.</span></span>  
  
 [!code-cpp[Classic Stack.Peek Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.Peek Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.Peek Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.Peek Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.Peek Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.Peek Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7400-222">La classe <see cref="T:System.Collections.Stack" /> è vuota.</span><span class="sxs-lookup"><span data-stu-id="f7400-222">The <see cref="T:System.Collections.Stack" /> is empty.</span></span></exception>
        <altmember cref="M:System.Collections.Stack.Peek" />
        <altmember cref="M:System.Collections.Stack.Push(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public virtual void Push (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Push(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.Push(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Push (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Push(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="f7400-223"><see cref="T:System.Object" /> da inserire nello <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-223">The <see cref="T:System.Object" /> to push onto the <see cref="T:System.Collections.Stack" />.</span></span> <span data-ttu-id="f7400-224">Il valore può essere <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-224">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="f7400-225">Inserisce un oggetto all'inizio della classe <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-225">Inserts an object at the top of the <see cref="T:System.Collections.Stack" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7400-226">Se <xref:System.Collections.Stack.Count%2A> è già pari alla capacità, la capacità del <xref:System.Collections.Stack> viene aumentata automaticamente la riallocazione della matrice interna e gli elementi esistenti vengono copiati nella nuova matrice prima che venga aggiunto il nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="f7400-226">If <xref:System.Collections.Stack.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Stack> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="f7400-227">`null` può essere inserito il <xref:System.Collections.Stack> come segnaposto, se necessario.</span><span class="sxs-lookup"><span data-stu-id="f7400-227">`null` can be pushed onto the <xref:System.Collections.Stack> as a placeholder, if needed.</span></span> <span data-ttu-id="f7400-228">Occupa uno slot nello stack e viene trattato come qualsiasi altro oggetto.</span><span class="sxs-lookup"><span data-stu-id="f7400-228">It occupies a slot in the stack and is treated like any object.</span></span>  
  
 <span data-ttu-id="f7400-229">Se <xref:System.Collections.Stack.Count%2A> è inferiore alla capacità dello stack, <xref:System.Collections.Stack.Push%2A> è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="f7400-229">If <xref:System.Collections.Stack.Count%2A> is less than the capacity of the stack, <xref:System.Collections.Stack.Push%2A> is an O(1) operation.</span></span> <span data-ttu-id="f7400-230">Se la capacità deve essere incrementata per far posto al nuovo elemento <xref:System.Collections.Stack.Push%2A> diventa un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7400-230">If the capacity needs to be increased to accommodate the new element, <xref:System.Collections.Stack.Push%2A> becomes an O(`n`) operation, where `n` is <xref:System.Collections.Stack.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7400-231">Nell'esempio seguente viene illustrato come aggiungere elementi per il <xref:System.Collections.Stack>, rimuovere elementi dal <xref:System.Collections.Stack>, o visualizzare l'elemento all'inizio del <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="f7400-231">The following example shows how to add elements to the <xref:System.Collections.Stack>, remove elements from the <xref:System.Collections.Stack>, or view the element at the top of the <xref:System.Collections.Stack>.</span></span>  
  
 [!code-cpp[Classic Stack.Peek Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.Peek Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.Peek Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.Peek Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.Peek Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.Peek Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Stack.Peek" />
        <altmember cref="M:System.Collections.Stack.Pop" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.Stack Synchronized (System.Collections.Stack stack);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Stack Synchronized(class System.Collections.Stack stack) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.Synchronized(System.Collections.Stack)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Stack ^ Synchronized(System::Collections::Stack ^ stack);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Stack</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stack" Type="System.Collections.Stack" />
      </Parameters>
      <Docs>
        <param name="stack"><span data-ttu-id="f7400-232">Oggetto <see cref="T:System.Collections.Stack" /> da sincronizzare.</span><span class="sxs-lookup"><span data-stu-id="f7400-232">The <see cref="T:System.Collections.Stack" /> to synchronize.</span></span></param>
        <summary><span data-ttu-id="f7400-233">Restituisce un wrapper sincronizzato (thread-safe) per la classe <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-233">Returns a synchronized (thread safe) wrapper for the <see cref="T:System.Collections.Stack" />.</span></span></summary>
        <returns><span data-ttu-id="f7400-234">Un wrapper sincronizzato per lo <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-234">A synchronized wrapper around the <see cref="T:System.Collections.Stack" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7400-235">Per garantire la thread-safe di <xref:System.Collections.Stack>, tutte le operazioni devono essere eseguite tramite questo wrapper.</span><span class="sxs-lookup"><span data-stu-id="f7400-235">To guarantee the thread safety of the <xref:System.Collections.Stack>, all operations must be done through this wrapper.</span></span>  
  
 <span data-ttu-id="f7400-236">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="f7400-236">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="f7400-237">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="f7400-237">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="f7400-238">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</span><span class="sxs-lookup"><span data-stu-id="f7400-238">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="f7400-239">Esempio di codice seguente viene illustrato come bloccare la raccolta utilizzando la <xref:System.Collections.Stack.SyncRoot%2A> durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="f7400-239">The following code example shows how to lock the collection using the <xref:System.Collections.Stack.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic Stack.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Stack.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic Stack.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="f7400-240">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="f7400-240">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7400-241">Nell'esempio seguente viene illustrato come sincronizzare un <xref:System.Collections.Stack>, determinare se un <xref:System.Collections.Stack> è sincronizzato e utilizzare un oggetto sincronizzato <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="f7400-241">The following example shows how to synchronize a <xref:System.Collections.Stack>, determine if a <xref:System.Collections.Stack> is synchronized, and use a synchronized <xref:System.Collections.Stack>.</span></span>  
  
 [!code-cpp[Classic Stack.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7400-242"><paramref name="stack" /> è <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-242"><paramref name="stack" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Stack.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7400-243">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-243">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Stack" />.</span></span></summary>
        <value><span data-ttu-id="f7400-244">Oggetto <see cref="T:System.Object" /> che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-244">An <see cref="T:System.Object" /> that can be used to synchronize access to the <see cref="T:System.Collections.Stack" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7400-245">Per creare una versione sincronizzata del <xref:System.Collections.Stack>, utilizzare il <xref:System.Collections.Stack.Synchronized%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="f7400-245">To create a synchronized version of the <xref:System.Collections.Stack>, use the <xref:System.Collections.Stack.Synchronized%2A> method.</span></span> <span data-ttu-id="f7400-246">Tuttavia, le classi derivate possono fornire una propria versione sincronizzata del <xref:System.Collections.Stack> utilizzando il <xref:System.Collections.Stack.SyncRoot%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="f7400-246">However, derived classes can provide their own synchronized version of the <xref:System.Collections.Stack> using the <xref:System.Collections.Stack.SyncRoot%2A> property.</span></span> <span data-ttu-id="f7400-247">Il codice di sincronizzazione è necessario eseguire operazioni sul <xref:System.Collections.Stack.SyncRoot%2A> del <xref:System.Collections.Stack>, non direttamente sul <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="f7400-247">The synchronizing code must perform operations on the <xref:System.Collections.Stack.SyncRoot%2A> of the <xref:System.Collections.Stack>, not directly on the <xref:System.Collections.Stack>.</span></span> <span data-ttu-id="f7400-248">In questo modo si garantisce il corretto funzionamento delle raccolte derivate da altri oggetti.</span><span class="sxs-lookup"><span data-stu-id="f7400-248">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="f7400-249">In particolare, viene mantenuta la sincronizzazione con altri thread che potrebbero modificare contemporaneamente il <xref:System.Collections.Stack> oggetto.</span><span class="sxs-lookup"><span data-stu-id="f7400-249">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Stack> object.</span></span>  
  
 <span data-ttu-id="f7400-250">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="f7400-250">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="f7400-251">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="f7400-251">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="f7400-252">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</span><span class="sxs-lookup"><span data-stu-id="f7400-252">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="f7400-253">Esempio di codice seguente viene illustrato come bloccare la raccolta utilizzando la <xref:System.Collections.Stack.SyncRoot%2A> durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="f7400-253">The following code example shows how to lock the collection using the <xref:System.Collections.Stack.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic Stack.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Stack.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic Stack.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="f7400-254">Il recupero del valore di questa proprietà è un'operazione O(1).</span><span class="sxs-lookup"><span data-stu-id="f7400-254">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual object[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToArray () As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ ToArray();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7400-255">Consente di copiare lo <see cref="T:System.Collections.Stack" /> in una nuova matrice.</span><span class="sxs-lookup"><span data-stu-id="f7400-255">Copies the <see cref="T:System.Collections.Stack" /> to a new array.</span></span></summary>
        <returns><span data-ttu-id="f7400-256">Nuova matrice contenente le copie degli elementi dello <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="f7400-256">A new array containing copies of the elements of the <see cref="T:System.Collections.Stack" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7400-257">Gli elementi vengono copiati nella matrice last-in-first-out (LIFO) ordinamento, analogamente agli elementi restituiti da una sequenza di chiamate a <xref:System.Collections.Stack.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7400-257">The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <xref:System.Collections.Stack.Pop%2A>.</span></span>  
  
 <span data-ttu-id="f7400-258">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7400-258">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Stack.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7400-259">Nell'esempio seguente viene illustrato come copiare un <xref:System.Collections.Stack> in una matrice unidimensionale.</span><span class="sxs-lookup"><span data-stu-id="f7400-259">The following example shows how to copy a <xref:System.Collections.Stack> into a one-dimensional array.</span></span>  
  
 [!code-cpp[Classic Stack.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)" />
        <altmember cref="M:System.Collections.Stack.Pop" />
      </Docs>
    </Member>
  </Members>
</Type>