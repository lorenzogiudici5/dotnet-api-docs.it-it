<Type Name="IEnumerator" FullName="System.Collections.IEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f899d5b30819887e359cfccfb19a232983dfc83f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("496B0ABF-CDEE-11d3-88E8-00902754C43A")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1ab5d-101">Supporta una iterazione semplice in una raccolta non generica.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ab5d-101">Supports a simple iteration over a non-generic collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ab5d-102"><xref:System.Collections.IEnumerator> rappresenta l'interfaccia di base per tutti gli enumeratori non generici.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-102"><xref:System.Collections.IEnumerator> is the base interface for all non-generic enumerators.</span></span>  
  
 <span data-ttu-id="1ab5d-103">Per la versione generica di questa interfaccia vedere <xref:System.Collections.Generic.IEnumerator%601>.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-103">For the generic version of this interface see <xref:System.Collections.Generic.IEnumerator%601>.</span></span>  
  
 <span data-ttu-id="1ab5d-104">L'istruzione `foreach` del linguaggio C# (`for each` in Visual Basic) nasconde la complessità degli enumeratori.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-104">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="1ab5d-105">Pertanto, l'utilizzo `foreach` è consigliabile anziché la modifica diretta dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-105">Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="1ab5d-106">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-106">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="1ab5d-107">Il <xref:System.Collections.IEnumerator.Reset%2A> metodo è fornito per l'interoperabilità COM e non è necessario essere implementate completamente; in alternativa, è possibile generare l'implementatore un <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-107">The <xref:System.Collections.IEnumerator.Reset%2A> method is provided for COM interoperability and does not need to be fully implemented; instead, the implementer can throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="1ab5d-108">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-108">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="1ab5d-109">È necessario chiamare il <xref:System.Collections.IEnumerator.MoveNext%2A> metodo per passare l'enumeratore al primo elemento della raccolta prima di leggere il valore di <xref:System.Collections.IEnumerator.Current%2A>; in caso contrario, <xref:System.Collections.IEnumerator.Current%2A> è definito.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-109">You must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>; otherwise, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span>  
  
 <span data-ttu-id="1ab5d-110"><xref:System.Collections.IEnumerator.Current%2A> restituisce lo stesso oggetto finché non viene chiamato il metodo <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-110"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="1ab5d-111"><xref:System.Collections.IEnumerator.MoveNext%2A> imposta <xref:System.Collections.IEnumerator.Current%2A> sull'elemento successivo.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-111"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="1ab5d-112">Se <xref:System.Collections.IEnumerator.MoveNext%2A> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <xref:System.Collections.IEnumerator.MoveNext%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-112">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="1ab5d-113">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <xref:System.Collections.IEnumerator.MoveNext%2A> restituire anche `false`.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-113">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="1ab5d-114">Se l'ultima chiamata a <xref:System.Collections.IEnumerator.MoveNext%2A> restituito `false`, la chiamata <xref:System.Collections.IEnumerator.Current%2A> genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-114">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span>  
  
 <span data-ttu-id="1ab5d-115">Per impostare <xref:System.Collections.IEnumerator.Current%2A> al primo elemento della raccolta di nuovo, è possibile chiamare <xref:System.Collections.IEnumerator.Reset%2A>, se viene implementato, seguito da <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-115">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A>, if it’s implemented, followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span> <span data-ttu-id="1ab5d-116">Se <xref:System.Collections.IEnumerator.Reset%2A> non è implementato, è necessario creare una nuova istanza di enumeratore per restituire il primo elemento della raccolta.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-116">If <xref:System.Collections.IEnumerator.Reset%2A> is not implemented, you must create a new enumerator instance to return to the first element of the collection.</span></span>  
  
 <span data-ttu-id="1ab5d-117">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-117">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="1ab5d-118">Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l'enumeratore viene invalidato in modo irreversibile e la successiva chiamata al <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> genera un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-118">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="1ab5d-119">Se la raccolta viene modificata tra <xref:System.Collections.IEnumerator.MoveNext%2A> e <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> restituisce l'elemento su cui è stata impostata, anche se l'enumeratore risulta già invalidato.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-119">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="1ab5d-120">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-120">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="1ab5d-121">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-121">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="1ab5d-122">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-122">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ab5d-123">Esempio di codice seguente illustra l'implementazione del <xref:System.Collections.IEnumerable> e <xref:System.Collections.IEnumerator> interfacce per una raccolta personalizzata.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-123">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerable> and <xref:System.Collections.IEnumerator> interfaces for a custom collection.</span></span> <span data-ttu-id="1ab5d-124">In questo esempio, i membri di queste interfacce non sono chiamati in modo esplicito, ma vengono implementati per supportare l'utilizzo di `foreach` (`for each` in Visual Basic) per scorrere la raccolta.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-124">In this example, members of these interfaces are not explicitly called, but they are implemented to support the use of `foreach` (`for each` in Visual Basic) to iterate through the collection.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#1)]
 [!code-vb[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEnumerable" />
    <altmember cref="T:System.Collections.ICollection" />
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ab5d-125">Ottiene l'elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab5d-125">Gets the element in the collection at the current position of the enumerator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ab5d-126">Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab5d-126">The element in the collection at the current position of the enumerator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ab5d-127"><xref:System.Collections.IEnumerator.Current%2A> non è definita in presenza delle condizioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="1ab5d-127"><xref:System.Collections.IEnumerator.Current%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="1ab5d-128">L'enumeratore è posizionato prima del primo elemento nella raccolta, subito dopo la creazione dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-128">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.</span></span>   <span data-ttu-id="1ab5d-129"><xref:System.Collections.IEnumerator.MoveNext%2A> deve essere chiamato per passare l'enumeratore al primo elemento della raccolta prima di leggere il valore di <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-129"><xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
-   <span data-ttu-id="1ab5d-130">L'ultima chiamata a <xref:System.Collections.IEnumerator.MoveNext%2A> restituito `false`, che indica la fine della raccolta.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-130">The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="1ab5d-131">L'enumeratore viene invalidato a causa di modifiche apportate nella raccolta, ad esempio aggiunta, modifica o eliminazione di elementi.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-131">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="1ab5d-132">La proprietà <xref:System.Collections.IEnumerator.Current%2A> restituisce lo stesso oggetto finché non viene chiamato il metodo <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-132"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="1ab5d-133"><xref:System.Collections.IEnumerator.MoveNext%2A> imposta <xref:System.Collections.IEnumerator.Current%2A> sull'elemento successivo.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-133"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ab5d-134">Esempio di codice seguente illustra l'implementazione del <xref:System.Collections.IEnumerator> interfacce per una raccolta personalizzata.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-134">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerator> interfaces for a custom collection.</span></span> <span data-ttu-id="1ab5d-135">In questo esempio, <xref:System.Collections.IEnumerator.Current%2A> non viene chiamato in modo esplicito, ma viene implementato per supportare l'utilizzo di `foreach` (`for each` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1ab5d-135">In this example, <xref:System.Collections.IEnumerator.Current%2A> is not explicitly called, but it is implemented to support the use of `foreach` (`for each` in Visual Basic).</span></span> <span data-ttu-id="1ab5d-136">Questo esempio di codice fa parte di un esempio più esaustivo per le <xref:System.Collections.IEnumerator> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-136">This code example is part of a larger example for the <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#2)]
 [!code-vb[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ab5d-137">Sposta l'enumeratore all'elemento successivo della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab5d-137">Advances the enumerator to the next element of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ab5d-138">
            <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab5d-138">
              <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ab5d-139">Dopo la creazione di un enumeratore o dopo il <xref:System.Collections.IEnumerator.Reset%2A> metodo viene chiamato, l'enumeratore è posizionato davanti al primo elemento della raccolta e la prima chiamata al <xref:System.Collections.IEnumerator.MoveNext%2A> metodo sposta l'enumeratore sul primo elemento della raccolta.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-139">After an enumerator is created or after the <xref:System.Collections.IEnumerator.Reset%2A> method is called, an enumerator is positioned before the first element of the collection, and the first call to the <xref:System.Collections.IEnumerator.MoveNext%2A> method moves the enumerator over the first element of the collection.</span></span>  
  
 <span data-ttu-id="1ab5d-140">Se <xref:System.Collections.IEnumerator.MoveNext%2A> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <xref:System.Collections.IEnumerator.MoveNext%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-140">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="1ab5d-141">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <xref:System.Collections.IEnumerator.MoveNext%2A> restituiscono `false` fino a quando non <xref:System.Collections.IEnumerator.Reset%2A> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-141">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false` until <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="1ab5d-142">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-142">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="1ab5d-143">Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l'enumeratore viene invalidato in modo irreversibile e la successiva chiamata al <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> genera un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-143">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ab5d-144">Esempio di codice seguente illustra l'implementazione del <xref:System.Collections.IEnumerator> interfacce per una raccolta personalizzata.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-144">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerator> interfaces for a custom collection.</span></span> <span data-ttu-id="1ab5d-145">In questo esempio, <xref:System.Collections.IEnumerator.MoveNext%2A> non viene chiamato in modo esplicito, ma viene implementato per supportare l'utilizzo di `foreach` (`for each` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1ab5d-145">In this example, <xref:System.Collections.IEnumerator.MoveNext%2A> is not explicitly called, but it is implemented to support the use of `foreach` (`for each` in Visual Basic).</span></span> <span data-ttu-id="1ab5d-146">Questo esempio di codice fa parte di un esempio più esaustivo per le <xref:System.Collections.IEnumerator> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-146">This code example is part of a larger example for the <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#2)]
 [!code-vb[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1ab5d-147">La raccolta è stata modificata dopo la creazione dell'enumeratore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab5d-147">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ab5d-148">Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab5d-148">Sets the enumerator to its initial position, which is before the first element in the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ab5d-149">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-149">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="1ab5d-150">Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l'enumeratore viene invalidato in modo irreversibile e la successiva chiamata al <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> metodo genera un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-150">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to the <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> method throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="1ab5d-151">Il <xref:System.Collections.IEnumerator.Reset%2A> metodo è fornito per l'interoperabilità COM.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-151">The <xref:System.Collections.IEnumerator.Reset%2A> method is provided for COM interoperability.</span></span> <span data-ttu-id="1ab5d-152">Non deve necessariamente essere implementata; al contrario, il responsabile dell'implementazione può essere generato un <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-152">It does not necessarily need to be implemented; instead, the implementer can simply throw a <xref:System.NotSupportedException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ab5d-153">Esempio di codice seguente illustra l'implementazione del <xref:System.Collections.IEnumerator> interfacce per una raccolta personalizzata.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-153">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerator> interfaces for a custom collection.</span></span> <span data-ttu-id="1ab5d-154">In questo esempio, <xref:System.Collections.IEnumerator.Reset%2A> non viene chiamato in modo esplicito, ma viene implementato per supportare l'utilizzo di `foreach` (`for each` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1ab5d-154">In this example, <xref:System.Collections.IEnumerator.Reset%2A> is not explicitly called, but it is implemented to support the use of `foreach` (`for each` in Visual Basic).</span></span> <span data-ttu-id="1ab5d-155">Questo esempio di codice fa parte di un esempio più esaustivo per le <xref:System.Collections.IEnumerator> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="1ab5d-155">This code example is part of a larger example for the <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#2)]
 [!code-vb[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1ab5d-156">La raccolta è stata modificata dopo la creazione dell'enumeratore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ab5d-156">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1ab5d-157">Tutte le chiamate a <see cref="M:System.Collections.IEnumerator.Reset" /> deve restituire lo stesso stato per l'enumeratore.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ab5d-157">All calls to <see cref="M:System.Collections.IEnumerator.Reset" /> must result in the same state for the enumerator.</span>
            </span>
            <span data-ttu-id="1ab5d-158">L'implementazione consigliata consiste nello spostare l'enumeratore all'inizio della raccolta, prima del primo elemento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ab5d-158">The preferred implementation is to move the enumerator to the beginning of the collection, before the first element.</span>
            </span>
            <span data-ttu-id="1ab5d-159">Questa operazione invalida l'enumeratore se la raccolta è stata modificata dopo la creazione dell'enumeratore, che è coerente con <see cref="M:System.Collections.IEnumerator.MoveNext" /> e <see cref="P:System.Collections.IEnumerator.Current" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1ab5d-159">This invalidates the enumerator if the collection has been modified since the enumerator was created, which is consistent with <see cref="M:System.Collections.IEnumerator.MoveNext" /> and <see cref="P:System.Collections.IEnumerator.Current" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>