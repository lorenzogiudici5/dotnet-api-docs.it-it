<Type Name="IEnumerator" FullName="System.Collections.IEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="655088f36c3067166e0713ecb39df2830a03420a" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/13/2018" />
    <Meta Name="ms.locfileid" Value="35417186" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("496B0ABF-CDEE-11d3-88E8-00902754C43A")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8f944-101">Supporta una iterazione semplice in una raccolta non generica.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8f944-101">Supports a simple iteration over a non-generic collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f944-102"><xref:System.Collections.IEnumerator> rappresenta l'interfaccia di base per tutti gli enumeratori non generici.</span><span class="sxs-lookup"><span data-stu-id="8f944-102"><xref:System.Collections.IEnumerator> is the base interface for all non-generic enumerators.</span></span>  
  
 <span data-ttu-id="8f944-103">Per la versione generica di questa interfaccia vedere <xref:System.Collections.Generic.IEnumerator%601>.</span><span class="sxs-lookup"><span data-stu-id="8f944-103">For the generic version of this interface see <xref:System.Collections.Generic.IEnumerator%601>.</span></span>  
  
 <span data-ttu-id="8f944-104">L'istruzione `foreach` del linguaggio C# (`for each` in Visual Basic) nasconde la complessità degli enumeratori.</span><span class="sxs-lookup"><span data-stu-id="8f944-104">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="8f944-105">Pertanto, l'utilizzo `foreach` è consigliabile anziché la modifica diretta dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="8f944-105">Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="8f944-106">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="8f944-106">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="8f944-107">Il <xref:System.Collections.IEnumerator.Reset%2A> metodo è fornito per l'interoperabilità COM e non è necessario essere implementate completamente; in alternativa, è possibile generare l'implementatore un <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="8f944-107">The <xref:System.Collections.IEnumerator.Reset%2A> method is provided for COM interoperability and does not need to be fully implemented; instead, the implementer can throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="8f944-108">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</span><span class="sxs-lookup"><span data-stu-id="8f944-108">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="8f944-109">È necessario chiamare il <xref:System.Collections.IEnumerator.MoveNext%2A> metodo per passare l'enumeratore al primo elemento della raccolta prima di leggere il valore di <xref:System.Collections.IEnumerator.Current%2A>; in caso contrario, <xref:System.Collections.IEnumerator.Current%2A> è definito.</span><span class="sxs-lookup"><span data-stu-id="8f944-109">You must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>; otherwise, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span>  
  
 <span data-ttu-id="8f944-110"><xref:System.Collections.IEnumerator.Current%2A> restituisce lo stesso oggetto finché non viene chiamato il metodo <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="8f944-110"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="8f944-111"><xref:System.Collections.IEnumerator.MoveNext%2A> imposta <xref:System.Collections.IEnumerator.Current%2A> sull'elemento successivo.</span><span class="sxs-lookup"><span data-stu-id="8f944-111"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="8f944-112">Se <xref:System.Collections.IEnumerator.MoveNext%2A> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <xref:System.Collections.IEnumerator.MoveNext%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="8f944-112">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="8f944-113">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <xref:System.Collections.IEnumerator.MoveNext%2A> restituire anche `false`.</span><span class="sxs-lookup"><span data-stu-id="8f944-113">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="8f944-114">Se l'ultima chiamata a <xref:System.Collections.IEnumerator.MoveNext%2A> restituito `false`, <xref:System.Collections.IEnumerator.Current%2A> è definito.</span><span class="sxs-lookup"><span data-stu-id="8f944-114">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span>  
  
 <span data-ttu-id="8f944-115">Per impostare <xref:System.Collections.IEnumerator.Current%2A> al primo elemento della raccolta di nuovo, è possibile chiamare <xref:System.Collections.IEnumerator.Reset%2A>, se viene implementato, seguito da <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="8f944-115">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A>, if it’s implemented, followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span> <span data-ttu-id="8f944-116">Se <xref:System.Collections.IEnumerator.Reset%2A> non è implementato, è necessario creare una nuova istanza di enumeratore per restituire il primo elemento della raccolta.</span><span class="sxs-lookup"><span data-stu-id="8f944-116">If <xref:System.Collections.IEnumerator.Reset%2A> is not implemented, you must create a new enumerator instance to return to the first element of the collection.</span></span>  
  
 <span data-ttu-id="8f944-117">Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, non è definito il comportamento dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="8f944-117">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of the enumerator is undefined.</span></span>  
  
 <span data-ttu-id="8f944-118">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="8f944-118">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="8f944-119">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="8f944-119">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="8f944-120">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</span><span class="sxs-lookup"><span data-stu-id="8f944-120">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f944-121">Esempio di codice seguente illustra l'implementazione del <xref:System.Collections.IEnumerable> e <xref:System.Collections.IEnumerator> interfacce per una raccolta personalizzata.</span><span class="sxs-lookup"><span data-stu-id="8f944-121">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerable> and <xref:System.Collections.IEnumerator> interfaces for a custom collection.</span></span> <span data-ttu-id="8f944-122">In questo esempio, i membri di queste interfacce non sono chiamati in modo esplicito, ma vengono implementati per supportare l'utilizzo di `foreach` (`for each` in Visual Basic) per scorrere la raccolta.</span><span class="sxs-lookup"><span data-stu-id="8f944-122">In this example, members of these interfaces are not explicitly called, but they are implemented to support the use of `foreach` (`for each` in Visual Basic) to iterate through the collection.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#1)]
 [!code-vb[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEnumerable" />
    <altmember cref="T:System.Collections.ICollection" />
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f944-123">Ottiene l'elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f944-123">Gets the element in the collection at the current position of the enumerator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f944-124">Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f944-124">The element in the collection at the current position of the enumerator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f944-125"><xref:System.Collections.IEnumerator.Current%2A> non è definita in presenza delle condizioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="8f944-125"><xref:System.Collections.IEnumerator.Current%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="8f944-126">L'enumeratore è posizionato prima del primo elemento nella raccolta, subito dopo la creazione dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="8f944-126">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.</span></span>   <span data-ttu-id="8f944-127"><xref:System.Collections.IEnumerator.MoveNext%2A> deve essere chiamato per passare l'enumeratore al primo elemento della raccolta prima di leggere il valore di <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="8f944-127"><xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
-   <span data-ttu-id="8f944-128">L'ultima chiamata a <xref:System.Collections.IEnumerator.MoveNext%2A> restituito `false`, che indica la fine della raccolta.</span><span class="sxs-lookup"><span data-stu-id="8f944-128">The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="8f944-129">L'enumeratore viene invalidato a causa di modifiche apportate nella raccolta, ad esempio aggiunta, modifica o eliminazione di elementi.</span><span class="sxs-lookup"><span data-stu-id="8f944-129">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="8f944-130">La proprietà <xref:System.Collections.IEnumerator.Current%2A> restituisce lo stesso oggetto finché non viene chiamato il metodo <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="8f944-130"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="8f944-131"><xref:System.Collections.IEnumerator.MoveNext%2A> imposta <xref:System.Collections.IEnumerator.Current%2A> sull'elemento successivo.</span><span class="sxs-lookup"><span data-stu-id="8f944-131"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f944-132">Esempio di codice seguente illustra l'implementazione del <xref:System.Collections.IEnumerator> interfacce per una raccolta personalizzata.</span><span class="sxs-lookup"><span data-stu-id="8f944-132">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerator> interfaces for a custom collection.</span></span> <span data-ttu-id="8f944-133">In questo esempio, <xref:System.Collections.IEnumerator.Current%2A> non viene chiamato in modo esplicito, ma viene implementato per supportare l'utilizzo di `foreach` (`for each` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="8f944-133">In this example, <xref:System.Collections.IEnumerator.Current%2A> is not explicitly called, but it is implemented to support the use of `foreach` (`for each` in Visual Basic).</span></span> <span data-ttu-id="8f944-134">Questo esempio di codice fa parte di un esempio più esaustivo per le <xref:System.Collections.IEnumerator> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="8f944-134">This code example is part of a larger example for the <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#2)]
 [!code-vb[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8f944-135">Sposta l'enumeratore all'elemento successivo della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f944-135">Advances the enumerator to the next element of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f944-136">
            <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f944-136">
              <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f944-137">Dopo la creazione di un enumeratore o dopo il <xref:System.Collections.IEnumerator.Reset%2A> metodo viene chiamato, l'enumeratore è posizionato davanti al primo elemento della raccolta e la prima chiamata al <xref:System.Collections.IEnumerator.MoveNext%2A> metodo sposta l'enumeratore sul primo elemento della raccolta.</span><span class="sxs-lookup"><span data-stu-id="8f944-137">After an enumerator is created or after the <xref:System.Collections.IEnumerator.Reset%2A> method is called, an enumerator is positioned before the first element of the collection, and the first call to the <xref:System.Collections.IEnumerator.MoveNext%2A> method moves the enumerator over the first element of the collection.</span></span>  
  
 <span data-ttu-id="8f944-138">Se <xref:System.Collections.IEnumerator.MoveNext%2A> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <xref:System.Collections.IEnumerator.MoveNext%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="8f944-138">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="8f944-139">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <xref:System.Collections.IEnumerator.MoveNext%2A> restituiscono `false` fino a quando non <xref:System.Collections.IEnumerator.Reset%2A> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="8f944-139">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false` until <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="8f944-140">Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, il comportamento di <xref:System.Collections.IEnumerator.MoveNext%2A> è definito.</span><span class="sxs-lookup"><span data-stu-id="8f944-140">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of <xref:System.Collections.IEnumerator.MoveNext%2A> is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f944-141">Esempio di codice seguente illustra l'implementazione del <xref:System.Collections.IEnumerator> interfacce per una raccolta personalizzata.</span><span class="sxs-lookup"><span data-stu-id="8f944-141">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerator> interfaces for a custom collection.</span></span> <span data-ttu-id="8f944-142">In questo esempio, <xref:System.Collections.IEnumerator.MoveNext%2A> non viene chiamato in modo esplicito, ma viene implementato per supportare l'utilizzo di `foreach` (`for each` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="8f944-142">In this example, <xref:System.Collections.IEnumerator.MoveNext%2A> is not explicitly called, but it is implemented to support the use of `foreach` (`for each` in Visual Basic).</span></span> <span data-ttu-id="8f944-143">Questo esempio di codice fa parte di un esempio più esaustivo per le <xref:System.Collections.IEnumerator> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="8f944-143">This code example is part of a larger example for the <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#2)]
 [!code-vb[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8f944-144">Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f944-144">Sets the enumerator to its initial position, which is before the first element in the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f944-145">Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, il comportamento di <xref:System.Collections.IEnumerator.Reset%2A> è definito.</span><span class="sxs-lookup"><span data-stu-id="8f944-145">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of <xref:System.Collections.IEnumerator.Reset%2A> is undefined.</span></span>  
  
 <span data-ttu-id="8f944-146">Il <xref:System.Collections.IEnumerator.Reset%2A> metodo è fornito per l'interoperabilità COM.</span><span class="sxs-lookup"><span data-stu-id="8f944-146">The <xref:System.Collections.IEnumerator.Reset%2A> method is provided for COM interoperability.</span></span> <span data-ttu-id="8f944-147">Non deve necessariamente essere implementata; al contrario, il responsabile dell'implementazione può essere generato un <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="8f944-147">It does not necessarily need to be implemented; instead, the implementer can simply throw a <xref:System.NotSupportedException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f944-148">Esempio di codice seguente illustra l'implementazione del <xref:System.Collections.IEnumerator> interfacce per una raccolta personalizzata.</span><span class="sxs-lookup"><span data-stu-id="8f944-148">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerator> interfaces for a custom collection.</span></span> <span data-ttu-id="8f944-149">In questo esempio, <xref:System.Collections.IEnumerator.Reset%2A> non viene chiamato in modo esplicito, ma viene implementato per supportare l'utilizzo di `foreach` (`for each` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="8f944-149">In this example, <xref:System.Collections.IEnumerator.Reset%2A> is not explicitly called, but it is implemented to support the use of `foreach` (`for each` in Visual Basic).</span></span> <span data-ttu-id="8f944-150">Questo esempio di codice fa parte di un esempio più esaustivo per le <xref:System.Collections.IEnumerator> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="8f944-150">This code example is part of a larger example for the <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#2)]
 [!code-vb[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8f944-151">
            <para>Tutte le chiamate a <see cref="M:System.Collections.IEnumerator.Reset" /> deve restituire lo stesso stato per l'enumeratore. L'implementazione consigliata consiste nello spostare l'enumeratore all'inizio della raccolta, prima del primo elemento. Ciò consente di invalidare l'enumeratore se la raccolta è stata modificata dopo la creazione dell'enumeratore, che è coerente con <see cref="M:System.Collections.IEnumerator.MoveNext" /> e <see cref="P:System.Collections.IEnumerator.Current" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8f944-151">
              <para>All calls to <see cref="M:System.Collections.IEnumerator.Reset" /> must result in the same state for the enumerator. The preferred implementation is to move the enumerator to the beginning of the collection, before the first element. This invalidates the enumerator if the collection has been modified since the enumerator was created, which is consistent with <see cref="M:System.Collections.IEnumerator.MoveNext" /> and <see cref="P:System.Collections.IEnumerator.Current" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>