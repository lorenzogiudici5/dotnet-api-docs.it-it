<Type Name="IStructuralEquatable" FullName="System.Collections.IStructuralEquatable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e79517aa8dab302204c461cf349e6d34f100645e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30368695" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralEquatable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralEquatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definisce i metodi per supportare il confronto di oggetti allo scopo di verificarne l'uguaglianza strutturale.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'uguaglianza strutturale significa che i due oggetti sono uguali perché hanno valori uguali. Si differenzia dall'uguaglianza di riferimento, che indica che i due riferimenti a oggetti sono uguali perché fanno riferimento allo stesso oggetto fisico. Il <xref:System.Collections.IStructuralEquatable> interfaccia consente di implementare confronti personalizzati per verificare l'uguaglianza strutturale di oggetti della raccolta. Ovvero, è possibile creare la definizione di verificarne l'uguaglianza strutturale e specificare che la definizione di essere utilizzata con un tipo di insieme che accetta il <xref:System.Collections.IStructuralEquatable> interfaccia. L'interfaccia contiene due membri: <xref:System.Collections.IStructuralEquatable.Equals%2A>, che verifica l'uguaglianza utilizzando un oggetto specificato <xref:System.Collections.IEqualityComparer> , implementazione e <xref:System.Collections.IStructuralEquatable.GetHashCode%2A>, che restituisce codici hash identici per gli oggetti sono uguali.  
  
> [!NOTE]
>  Il <xref:System.Collections.IStructuralEquatable> interfaccia supporta solo i confronti personalizzati per verificarne l'uguaglianza strutturale. Il <xref:System.Collections.IStructuralComparable> interfaccia supporta confronti strutturali personalizzati per l'ordinamento.  
  
 .NET Framework fornisce inoltre predefinite di operatori di uguaglianza, vengono restituiti dal <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> e <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> proprietà. Per ulteriori informazioni, vedere l'esempio.  
  
 Le classi di tuple generico (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>e così via) e <xref:System.Array> classe forniscono implementazioni esplicite del <xref:System.Collections.IStructuralEquatable> interfaccia. Cast (in c#) o convertendo (in Visual Basic) l'istanza corrente di una matrice o una tupla da un <xref:System.Collections.IStructuralEquatable> valore di interfaccia e fornendo il <xref:System.Collections.IEqualityComparer> implementazione come argomento per il <xref:System.Collections.IStructuralEquatable.Equals%2A> (metodo), è possibile definire un'uguaglianza personalizzata confronto per la matrice o raccolta.  
  
   
  
## Examples  
 Operatore di uguaglianza predefinito, `EqualityComparer<Object>.Default.Equals`, considera due `NaN` valori uguali. Tuttavia, in alcuni casi, si consiglia il confronto di `NaN` valori per verificarne l'uguaglianza restituire `false`, che indica che non è possibile confrontare i valori. Nell'esempio seguente viene definita una classe `NanComparer` che implementa l'interfaccia <xref:System.Collections.IStructuralEquatable>. Confronta due <xref:System.Double> o due <xref:System.Single> valori usando l'operatore di uguaglianza. Operatore di uguaglianza predefinito passa i valori di qualsiasi altro tipo.  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 L'esempio seguente crea due oggetti tupla con 3 i cui componenti sono costituiti da tre <xref:System.Double> valori. Il valore del secondo componente è <xref:System.Double.NaN?displayProperty=nameWithType>. Nell'esempio viene quindi chiamato il <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> metodo e chiama il <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> metodo tre volte. La prima volta, passa l'operatore di confronto uguaglianze predefinito restituito dal <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> proprietà. La seconda volta, passa l'operatore di confronto uguaglianze predefinito restituito dal <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> proprietà. La terza volta, passa l'oggetto personalizzato `NanComparer` oggetto. Come illustrato nell'output dell'esempio, i primi tre chiamate al metodo restituito `true`, mentre la quarta chiamata restituisce `false`.  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEqualityComparer" />
    <altmember cref="T:System.Collections.IStructuralComparable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object, comparer As IEqualityComparer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">Oggetto da confrontare con l'istanza corrente.</param>
        <param name="comparer">Oggetto che determina se l'istanza corrente e <c>other</c> sono uguali.</param>
        <summary>Determina se un oggetto è uguale all'istanza corrente dal punto di vista strutturale.</summary>
        <returns>
          <see langword="true" /> se i due oggetti sono uguali; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Collections.IStructuralEquatable.Equals%2A> metodo supporta il confronto strutturale personalizzato di oggetti tupla e matrice di oggetti. Questo metodo chiama a sua volta il `comparer` dell'oggetto <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> metodo per confrontare gli elementi della matrice singoli o componenti della tupla, a partire dal primo elemento o un componente. Le chiamate singole a <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> fine e <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> metodo restituisce un valore quando una chiamata al metodo viene restituito `false` o dopo tutti gli elementi della matrice o sono stati confrontati i componenti di tupla.  
  
   
  
## Examples  
 Operatore di uguaglianza predefinito, `EqualityComparer<Object>.Default.Equals`, considera due `NaN` valori uguali. Tuttavia, in alcuni casi, si consiglia il confronto di `NaN` valori per verificarne l'uguaglianza restituire `false`, che indica che non è possibile confrontare i valori. Nell'esempio seguente viene definita una classe `NanComparer` che implementa l'interfaccia <xref:System.Collections.IStructuralEquatable>. Confronta due <xref:System.Double> o due <xref:System.Single> valori usando l'operatore di uguaglianza. Operatore di uguaglianza predefinito passa i valori di qualsiasi altro tipo.  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 L'esempio seguente crea due oggetti tupla con 3 i cui componenti sono costituiti da tre <xref:System.Double> valori. Il valore del secondo componente è <xref:System.Double.NaN?displayProperty=nameWithType>. Nell'esempio viene quindi chiamato il <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> metodo e chiama il <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> metodo tre volte. La prima volta, passa l'operatore di confronto uguaglianze predefinito restituito dal <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> proprietà. La seconda volta, passa l'operatore di confronto uguaglianze predefinito restituito dal <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> proprietà. La terza volta, passa l'oggetto personalizzato `NanComparer` oggetto. Come illustrato nell'output dell'esempio, i primi tre chiamate al metodo restituito `true`, mentre la quarta chiamata restituisce `false`.  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (comparer As IEqualityComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(System::Collections::IEqualityComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">Oggetto che calcola il codice hash dell'oggetto corrente.</param>
        <summary>Restituisce un codice hash per l'istanza corrente.</summary>
        <returns>Codice hash per l'istanza corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementare questo metodo per restituire i codici hash personalizzati per gli oggetti di raccolta che corrispondono al confronto personalizzato per verificarne l'uguaglianza strutturale fornita dal <xref:System.Collections.IStructuralEquatable.Equals%2A> metodo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Se il <see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /> restituisce <see langword="true" /> per due oggetti, i valori restituiti dal <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> metodo per i due oggetti deve essere uguale.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>