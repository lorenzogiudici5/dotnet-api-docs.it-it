<Type Name="IEnumerable" FullName="System.Collections.IEnumerable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1269175e017ee276e798409db761cfed3207abd9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36643928" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IEnumerable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnumerable" />
  <TypeSignature Language="F#" Value="type IEnumerable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("496B0ABE-CDEE-11d3-88E8-00902754C43A")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="68379-101">Espone un enumeratore, che supporta un'iterazione semplice su una raccolta non generica.</span>
      <span class="sxs-lookup">
        <span data-stu-id="68379-101">Exposes an enumerator, which supports a simple iteration over a non-generic collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68379-102"><xref:System.Collections.IEnumerable> è l'interfaccia di base per tutte le raccolte non generiche che possono essere enumerati.</span><span class="sxs-lookup"><span data-stu-id="68379-102"><xref:System.Collections.IEnumerable> is the base interface for all non-generic collections that can be enumerated.</span></span> <span data-ttu-id="68379-103">Per la versione generica di questa interfaccia vedere <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="68379-103">For the generic version of this interface see <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>.</span></span> <span data-ttu-id="68379-104"><xref:System.Collections.IEnumerable> contiene un solo metodo, <xref:System.Collections.IEnumerable.GetEnumerator%2A>, che restituisce un <xref:System.Collections.IEnumerator>.</span><span class="sxs-lookup"><span data-stu-id="68379-104"><xref:System.Collections.IEnumerable> contains a single method, <xref:System.Collections.IEnumerable.GetEnumerator%2A>, which returns an <xref:System.Collections.IEnumerator>.</span></span> <span data-ttu-id="68379-105"><xref:System.Collections.IEnumerator> offre la possibilità di scorrere la raccolta che espongono un <xref:System.Collections.IEnumerator.Current%2A> proprietà e <xref:System.Collections.IEnumerator.MoveNext%2A> e <xref:System.Collections.IEnumerator.Reset%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="68379-105"><xref:System.Collections.IEnumerator> provides the ability to iterate through the collection by exposing a <xref:System.Collections.IEnumerator.Current%2A> property and <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Reset%2A> methods.</span></span>  
  
 <span data-ttu-id="68379-106">È consigliabile implementare <xref:System.Collections.IEnumerable> e <xref:System.Collections.IEnumerator> sulle classi di raccolta per abilitare il `foreach` (`For Each` in Visual Basic) sintassi, tuttavia implementazione <xref:System.Collections.IEnumerable> non è necessaria.</span><span class="sxs-lookup"><span data-stu-id="68379-106">It is a best practice to implement <xref:System.Collections.IEnumerable> and <xref:System.Collections.IEnumerator> on your collection classes to enable the `foreach` (`For Each` in Visual Basic) syntax, however implementing <xref:System.Collections.IEnumerable> is not required.</span></span> <span data-ttu-id="68379-107">Se la raccolta non implementa <xref:System.Collections.IEnumerable>, è comunque necessario seguire il criterio di iteratore per supportare questa sintassi, fornendo un `GetEnumerator` metodo che restituisce un'interfaccia, classe o struct.</span><span class="sxs-lookup"><span data-stu-id="68379-107">If your collection does not implement <xref:System.Collections.IEnumerable>, you must still follow the iterator pattern to support this syntax by providing a `GetEnumerator` method that returns an interface, class or struct.</span></span> <span data-ttu-id="68379-108">Quando si utilizza Visual Basic, è necessario fornire un <xref:System.Collections.IEnumerator> implementazione, che viene restituito dal `GetEnumerator`.</span><span class="sxs-lookup"><span data-stu-id="68379-108">When using Visual Basic, you must provide an <xref:System.Collections.IEnumerator> implementation, which is returned by `GetEnumerator`.</span></span> <span data-ttu-id="68379-109">Quando lo sviluppo con c# è necessario fornire una classe che contiene un `Current` proprietà, e `MoveNext` e `Reset` metodi come descritto dalla <xref:System.Collections.IEnumerator>, ma la classe non è necessario implementare <xref:System.Collections.IEnumerator>.</span><span class="sxs-lookup"><span data-stu-id="68379-109">When developing with C# you must provide a class that contains a `Current` property, and `MoveNext` and `Reset` methods as described by <xref:System.Collections.IEnumerator>, but the class does not have to implement <xref:System.Collections.IEnumerator>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68379-110">L'esempio di codice seguente illustra la procedura consigliata per eseguire l'iterazione di una raccolta personalizzata implementando il <xref:System.Collections.IEnumerable> e <xref:System.Collections.IEnumerator> interfacce.</span><span class="sxs-lookup"><span data-stu-id="68379-110">The following code example demonstrates the best practice for iterating a custom collection by implementing the <xref:System.Collections.IEnumerable> and <xref:System.Collections.IEnumerator> interfaces.</span></span> <span data-ttu-id="68379-111">In questo esempio, i membri di queste interfacce non sono esplicitamente indicati, ma vengono implementati per supportare l'utilizzo di `foreach` (`For Each` in Visual Basic) per scorrere la raccolta.</span><span class="sxs-lookup"><span data-stu-id="68379-111">In this example, members of these interfaces are not explicitly called, but they are implemented to support the use of `foreach` (`For Each` in Visual Basic) to iterate through the collection.</span></span> <span data-ttu-id="68379-112">Questo esempio è un'applicazione Console completa.</span><span class="sxs-lookup"><span data-stu-id="68379-112">This example is a complete Console app.</span></span> <span data-ttu-id="68379-113">Per compilare l'app Visual Basic, modificare il **oggetto di avvio** alla **Sub Main** del progetto **proprietà** pagina.</span><span class="sxs-lookup"><span data-stu-id="68379-113">To compile the Visual Basic app, change the **Startup object** to **Sub Main** in the project’s **Properties** page.</span></span>  
  
 <span data-ttu-id="68379-114">Per un esempio che illustra come implementare il <xref:System.Collections.IEnumerable> l'interfaccia, vedere [implementando l'interfaccia IEnumerable in una classe Collection](https://code.msdn.microsoft.com/Implementing-the-e1708a24)</span><span class="sxs-lookup"><span data-stu-id="68379-114">For a sample that shows how to implement the <xref:System.Collections.IEnumerable> interface, see [Implementing the IEnumerable Interface in a Collection Class](https://code.msdn.microsoft.com/Implementing-the-e1708a24)</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#1)]
 [!code-vb[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEnumerator" />
    <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
  </Docs>
  <Members>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IEnumerable.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="iEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="68379-115">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68379-115">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68379-116">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68379-116">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68379-117">L'istruzione `foreach` del linguaggio C# (`For Each` in Visual Basic) nasconde la complessità degli enumeratori.</span><span class="sxs-lookup"><span data-stu-id="68379-117">The `foreach` statement of the C# language (`For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="68379-118">Pertanto, si consiglia l'utilizzo di `foreach`, anziché la modifica diretta dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="68379-118">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="68379-119">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="68379-119">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="68379-120">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</span><span class="sxs-lookup"><span data-stu-id="68379-120">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="68379-121">Il <xref:System.Collections.IEnumerator.Reset%2A> metodo riporta l'enumeratore in questa posizione.</span><span class="sxs-lookup"><span data-stu-id="68379-121">The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span>  <span data-ttu-id="68379-122">In questa posizione, la <xref:System.Collections.IEnumerator.Current%2A> proprietà non è definita.</span><span class="sxs-lookup"><span data-stu-id="68379-122">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="68379-123">Pertanto, è necessario chiamare il <xref:System.Collections.IEnumerator.MoveNext%2A> metodo per passare l'enumeratore al primo elemento della raccolta, prima di leggere il valore di <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="68379-123">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="68379-124"><xref:System.Collections.IEnumerator.Current%2A> restituisce lo stesso oggetto finché non viene chiamato il metodo <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="68379-124"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="68379-125"><xref:System.Collections.IEnumerator.MoveNext%2A> imposta <xref:System.Collections.IEnumerator.Current%2A> sull'elemento successivo.</span><span class="sxs-lookup"><span data-stu-id="68379-125"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="68379-126">Se <xref:System.Collections.IEnumerator.MoveNext%2A> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <xref:System.Collections.IEnumerator.MoveNext%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="68379-126">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="68379-127">Quando l'enumeratore si trova in questa posizione, le chiamate successive alle <xref:System.Collections.IEnumerator.MoveNext%2A> restituire anche `false`.</span><span class="sxs-lookup"><span data-stu-id="68379-127">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="68379-128">Se l'ultima chiamata a <xref:System.Collections.IEnumerator.MoveNext%2A> restituisce `false`, <xref:System.Collections.IEnumerator.Current%2A> è definito.</span><span class="sxs-lookup"><span data-stu-id="68379-128">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="68379-129">Per impostare nuovamente la proprietà <xref:System.Collections.IEnumerator.Current%2A> sul primo elemento della raccolta, è possibile chiamare il metodo <xref:System.Collections.IEnumerator.Reset%2A> seguito da <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="68379-129">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="68379-130">Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, non è definito il comportamento dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="68379-130">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of the enumerator is undefined.</span></span>  
  
 <span data-ttu-id="68379-131">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="68379-131">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="68379-132">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="68379-132">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="68379-133">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="68379-133">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68379-134">Esempio di codice seguente illustra l'implementazione del <xref:System.Collections.IEnumerable> interfacce per una raccolta personalizzata.</span><span class="sxs-lookup"><span data-stu-id="68379-134">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerable> interfaces for a custom collection.</span></span> <span data-ttu-id="68379-135">In questo esempio, <xref:System.Collections.IEnumerable.GetEnumerator%2A> non viene chiamato in modo esplicito, ma viene implementato per supportare l'utilizzo di `foreach` (`For Each` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="68379-135">In this example, <xref:System.Collections.IEnumerable.GetEnumerator%2A> is not explicitly called, but it is implemented to support the use of `foreach` (`For Each` in Visual Basic).</span></span> <span data-ttu-id="68379-136">Questo esempio di codice fa parte di un esempio più esaustivo per le <xref:System.Collections.IEnumerable> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="68379-136">This code example is part of a larger example for the <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#1)]
 [!code-vb[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>