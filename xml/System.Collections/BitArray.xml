<Type Name="BitArray" FullName="System.Collections.BitArray">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="056363895a01ed4f3d85a3d6c19a8aa8cb07f553" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BitArray : ICloneable, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit BitArray extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.BitArray" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BitArray&#xA;Implements ICloneable, ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class BitArray sealed : ICloneable, System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="165fb-101">Consente di gestire una matrice compatta di valori di bit, rappresentati come Boolean, dove <see langword="true" /> indica che il bit è attivo (1), mentre <see langword="false" /> indica che il bit è inattivo (0).</span>
      <span class="sxs-lookup">
        <span data-stu-id="165fb-101">Manages a compact array of bit values, which are represented as Booleans, where <see langword="true" /> indicates that the bit is on (1) and <see langword="false" /> indicates the bit is off (0).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-102">Il <xref:System.Collections.BitArray> è una classe di raccolta in cui la capacità è sempre lo stesso come il conteggio.</span><span class="sxs-lookup"><span data-stu-id="165fb-102">The <xref:System.Collections.BitArray> class is a collection class in which the capacity is always the same as the count.</span></span> <span data-ttu-id="165fb-103">Gli elementi vengono aggiunti a un <xref:System.Collections.BitArray> aumentando il <xref:System.Collections.BitArray.Length%2A> proprietà; elementi sono stati eliminati, diminuendo il <xref:System.Collections.BitArray.Length%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="165fb-103">Elements are added to a <xref:System.Collections.BitArray> by increasing the <xref:System.Collections.BitArray.Length%2A> property; elements are deleted by decreasing the <xref:System.Collections.BitArray.Length%2A> property.</span></span> <span data-ttu-id="165fb-104">Le dimensioni di un <xref:System.Collections.BitArray> è controllata dal client; indicizzazione oltre la fine del <xref:System.Collections.BitArray> genera un <xref:System.ArgumentException>. Il <xref:System.Collections.BitArray> classe fornisce metodi che non si trovano in altre raccolte, inclusi quelli che consentono di modificare contemporaneamente, ad esempio utilizzando un filtro, più elementi <xref:System.Collections.BitArray.And%2A>, <xref:System.Collections.BitArray.Or%2A>, <xref:System.Collections.BitArray.Xor%2A> , <xref:System.Collections.BitArray.Not%2A>e <xref:System.Collections.BitArray.SetAll%2A>.</span><span class="sxs-lookup"><span data-stu-id="165fb-104">The size of a <xref:System.Collections.BitArray> is controlled by the client; indexing past the end of the <xref:System.Collections.BitArray> throws an <xref:System.ArgumentException>.The <xref:System.Collections.BitArray> class provides methods that are not found in other collections, including those that allow multiple elements to be modified at once using a filter, such as <xref:System.Collections.BitArray.And%2A>, <xref:System.Collections.BitArray.Or%2A>, <xref:System.Collections.BitArray.Xor%2A> , <xref:System.Collections.BitArray.Not%2A>, and <xref:System.Collections.BitArray.SetAll%2A>.</span></span>  
  
 <span data-ttu-id="165fb-105">Il <xref:System.Collections.Specialized.BitVector32> classe è una struttura che fornisce la stessa funzionalità <xref:System.Collections.BitArray>, ma con prestazioni più veloci.</span><span class="sxs-lookup"><span data-stu-id="165fb-105">The <xref:System.Collections.Specialized.BitVector32> class is a structure that provides the same functionality as <xref:System.Collections.BitArray>, but with faster performance.</span></span> <span data-ttu-id="165fb-106"><xref:System.Collections.Specialized.BitVector32> non è più veloce perché è un tipo di valore e quindi allocato nello stack, mentre <xref:System.Collections.BitArray> è un tipo riferimento e, pertanto, allocati nell'heap.</span><span class="sxs-lookup"><span data-stu-id="165fb-106"><xref:System.Collections.Specialized.BitVector32> is faster because it is a value type and therefore allocated on the stack, whereas <xref:System.Collections.BitArray> is a reference type and, therefore, allocated on the heap.</span></span>  
  
 <span data-ttu-id="165fb-107"><xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType> Consente di archiviare esattamente a 32 bit, mentre <xref:System.Collections.BitArray> può archiviare un numero variabile di bit.</span><span class="sxs-lookup"><span data-stu-id="165fb-107"><xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType> can store exactly 32 bits, whereas <xref:System.Collections.BitArray> can store a variable number of bits.</span></span> <span data-ttu-id="165fb-108"><xref:System.Collections.Specialized.BitVector32> Archivia i flag di bit e i valori interi piccoli, rendendo in tal modo ideale per i dati che non sono esposta all'utente.</span><span class="sxs-lookup"><span data-stu-id="165fb-108"><xref:System.Collections.Specialized.BitVector32> stores both bit flags and small integers, thereby making it ideal for data that is not exposed to the user.</span></span> <span data-ttu-id="165fb-109">Tuttavia, se il numero di flag di bit richiesto è sconosciuto, variabile o è maggiore di 32, utilizzare <xref:System.Collections.BitArray> invece.</span><span class="sxs-lookup"><span data-stu-id="165fb-109">However, if the number of required bit flags is unknown, is variable, or is greater than 32, use <xref:System.Collections.BitArray> instead.</span></span>  
  
 <span data-ttu-id="165fb-110"><xref:System.Collections.BitArray> nel <xref:System.Collections> spazio dei nomi. <xref:System.Collections.Specialized.BitVector32> è il <xref:System.Collections.Specialized> dello spazio dei nomi.</span><span class="sxs-lookup"><span data-stu-id="165fb-110"><xref:System.Collections.BitArray> is in the <xref:System.Collections> namespace; <xref:System.Collections.Specialized.BitVector32> is in the <xref:System.Collections.Specialized> namespace.</span></span>  
  
 <span data-ttu-id="165fb-111">Elementi nella raccolta è accessibile tramite un indice intero.</span><span class="sxs-lookup"><span data-stu-id="165fb-111">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="165fb-112">Gli indici in questa raccolta sono in base zero.</span><span class="sxs-lookup"><span data-stu-id="165fb-112">Indexes in this collection are zero-based.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="165fb-113">Esempio di codice seguente viene illustrato come creare e inizializzare un <xref:System.Collections.BitArray> e come stampare i relativi valori.</span><span class="sxs-lookup"><span data-stu-id="165fb-113">The following code example shows how to create and initialize a <xref:System.Collections.BitArray> and how to print out its values.</span></span>  
  
 [!code-cpp[Classic BitArray Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="165fb-114">Statici pubblici (<see langword="Shared" /> in Visual Basic) di questo tipo sono thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="165fb-114">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="165fb-115">I membri di istanza non sono garantiti come thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="165fb-115">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="165fb-116">Questa implementazione non fornisce un oggetto sincronizzato wrapper (thread-safe) per un <see cref="T:System.Collections.BitArray" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="165fb-116">This implementation does not provide a synchronized (thread safe) wrapper for a <see cref="T:System.Collections.BitArray" />.</span>
      </span>
      <span data-ttu-id="165fb-117">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="165fb-117">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="165fb-118">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</span>
      <span class="sxs-lookup">
        <span data-stu-id="165fb-118">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="165fb-119">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</span>
      <span class="sxs-lookup">
        <span data-stu-id="165fb-119">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.Specialized.BitVector32" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="165fb-120">Inizializza una nuova istanza della classe <see cref="T:System.Collections.BitArray" /> di cui è possibile specificare la capacità e i valori iniziali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-120">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class whose capacity and initial values can be specified.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (bool[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Boolean[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As Boolean())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(cli::array &lt;bool&gt; ^ values);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="System.Boolean[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="165fb-121">Matrice di valori booleani da copiare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-121">An array of Booleans to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165fb-122">Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.Collections.BitArray" /> contenente i valori di bit copiati dalla matrice specificata di valori Boolean.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-122">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that contains bit values copied from the specified array of Booleans.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-123">Questo costruttore è un'operazione O (`n`) operazione, in cui `n` è il numero di elementi in `values`.</span><span class="sxs-lookup"><span data-stu-id="165fb-123">This constructor is an O(`n`) operation, where `n` is the number of elements in `values`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="165fb-124">
            <paramref name="values" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-124">
              <paramref name="values" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="165fb-125">Matrice di byte contenente i valori da copiare, dove ogni byte rappresenta otto bit consecutivi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-125">An array of bytes containing the values to copy, where each byte represents eight consecutive bits.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165fb-126">Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.Collections.BitArray" /> contenente i valori di bit copiati dalla matrice di byte specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-126">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that contains bit values copied from the specified array of bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-127">Il primo byte nella matrice rappresenta bit da 0 a 7, il secondo byte rappresenta 8 a 15 bit e così via.</span><span class="sxs-lookup"><span data-stu-id="165fb-127">The first byte in the array represents bits 0 through 7, the second byte represents bits 8 through 15, and so on.</span></span> <span data-ttu-id="165fb-128">Il Bit meno significativo di ogni byte rappresenta il valore di indice più basso: " `bytes` [0] & 1" rappresenta il bit 0, " `bytes` [0] & 2" rappresenta il bit 1, " `bytes` [0] & 4" rappresenta il bit 2 e così via.</span><span class="sxs-lookup"><span data-stu-id="165fb-128">The Least Significant Bit of each byte represents the lowest index value: " `bytes` [0] & 1" represents bit 0, " `bytes` [0] & 2" represents bit 1, " `bytes` [0] & 4" represents bit 2, and so on.</span></span>  
  
 <span data-ttu-id="165fb-129">Questo costruttore è un'operazione O (`n`) operazione, in cui `n` è il numero di elementi in `bytes`.</span><span class="sxs-lookup"><span data-stu-id="165fb-129">This constructor is an O(`n`) operation, where `n` is the number of elements in `bytes`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="165fb-130">
            <paramref name="bytes" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-130">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="165fb-131">La lunghezza di <paramref name="bytes" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-131">The length of <paramref name="bytes" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (System.Collections.BitArray bits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.BitArray bits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Collections.BitArray)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bits As BitArray)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(System::Collections::BitArray ^ bits);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bits" Type="System.Collections.BitArray" />
      </Parameters>
      <Docs>
        <param name="bits">
          <span data-ttu-id="165fb-132">La <see cref="T:System.Collections.BitArray" /> da copiare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-132">The <see cref="T:System.Collections.BitArray" /> to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165fb-133">Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.Collections.BitArray" /> contenente i valori di bit copiati dalla <see cref="T:System.Collections.BitArray" /> specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-133">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that contains bit values copied from the specified <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-134">Questo costruttore è un'operazione O (`n`) operazione, in cui `n` è il numero di elementi in `bits`.</span><span class="sxs-lookup"><span data-stu-id="165fb-134">This constructor is an O(`n`) operation, where `n` is the number of elements in `bits`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="165fb-135">
            <paramref name="bits" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-135">
              <paramref name="bits" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(int length);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">
          <span data-ttu-id="165fb-136">Il numero di valori di bit nella nuova <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-136">The number of bit values in the new <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165fb-137">Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.Collections.BitArray" /> che può contenere il numero specificato di valori di bit, inizialmente impostato su <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-137">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that can hold the specified number of bit values, which are initially set to <see langword="false" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-138">Questo costruttore è un'operazione O (`n`) operazione, in cui `n` è `length`.</span><span class="sxs-lookup"><span data-stu-id="165fb-138">This constructor is an O(`n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="165fb-139">
            <paramref name="length" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-139">
              <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (int[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(cli::array &lt;int&gt; ^ values);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="165fb-140">Matrice di valori interi contenente i valori da copiare, dove ogni valore rappresenta 32 bit consecutivi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-140">An array of integers containing the values to copy, where each integer represents 32 consecutive bits.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165fb-141">Inizializza una nuova istanza della classe <see cref="T:System.Collections.BitArray" /> contenente i valori di bit copiati dalla matrice specificata di valori interi a 32 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-141">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that contains bit values copied from the specified array of 32-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-142">Il numero nel primo `values` elemento della matrice rappresenta bit da 0 a 31, il secondo numero nella matrice di bit da 32 a 63 e così via.</span><span class="sxs-lookup"><span data-stu-id="165fb-142">The number in the first `values` array element represents bits 0 through 31, the second number in the array represents bits 32 through 63, and so on.</span></span> <span data-ttu-id="165fb-143">Il Bit meno significativo di ogni valore integer rappresenta il valore di indice più basso: " `values` [0] & 1" rappresenta il bit 0, " `values` [0] & 2" rappresenta il bit 1, " `values` [0] & 4" rappresenta il bit 2 e così via.</span><span class="sxs-lookup"><span data-stu-id="165fb-143">The Least Significant Bit of each integer represents the lowest index value: " `values` [0] & 1" represents bit 0, " `values` [0] & 2" represents bit 1, " `values` [0] & 4" represents bit 2, and so on.</span></span>  
  
 <span data-ttu-id="165fb-144">Questo costruttore è un'operazione O (`n`) operazione, in cui `n` è il numero di elementi in `values`.</span><span class="sxs-lookup"><span data-stu-id="165fb-144">This constructor is an O(`n`) operation, where `n` is the number of elements in `values`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="165fb-145">
            <paramref name="values" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-145">
              <paramref name="values" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="165fb-146">La lunghezza di <paramref name="values" /> è maggiore di <see cref="F:System.Int32.MaxValue" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-146">The length of <paramref name="values" /> is greater than <see cref="F:System.Int32.MaxValue" /></span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (int length, bool defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 length, bool defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (length As Integer, defaultValue As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(int length, bool defaultValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="defaultValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="length">
          <span data-ttu-id="165fb-147">Il numero di valori di bit nella nuova <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-147">The number of bit values in the new <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </param>
        <param name="defaultValue">
          <span data-ttu-id="165fb-148">Valore booleano da assegnare a ogni bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-148">The Boolean value to assign to each bit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165fb-149">Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.Collections.BitArray" /> che può contenere il numero specificato di valori di bit , inizialmente impostato sul valore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-149">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that can hold the specified number of bit values, which are initially set to the specified value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-150">Questo costruttore è un'operazione O (`n`) operazione, in cui `n` è `length`.</span><span class="sxs-lookup"><span data-stu-id="165fb-150">This constructor is an O(`n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="165fb-151">
            <paramref name="length" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-151">
              <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray And (System.Collections.BitArray value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray And(class System.Collections.BitArray value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.And(System.Collections.BitArray)" />
      <MemberSignature Language="VB.NET" Value="Public Function And (value As BitArray) As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ And(System::Collections::BitArray ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.BitArray" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="165fb-152">L'array con il quale eseguire l'operazione AND bit per bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-152">The array with which to perform the bitwise AND operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165fb-153">Esegue l'operazione con AND bit per bit tra gli elementi dell'oggetto <see cref="T:System.Collections.BitArray" /> corrente e gli elementi corrispondenti nella matrice specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-153">Performs the bitwise AND operation between the elements of the current <see cref="T:System.Collections.BitArray" /> object and the corresponding elements in the specified array.</span>
          </span>
          <span data-ttu-id="165fb-154">L'oggetto <see cref="T:System.Collections.BitArray" /> corrente verrà modificato per archiviare il risultato dell'operazione con AND bit per bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-154">The current <see cref="T:System.Collections.BitArray" /> object will be modified to store the result of the bitwise AND operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="165fb-155">Matrice contenente il risultato dell'operazione con AND bit per bit, che è un riferimento all'oggetto <see cref="T:System.Collections.BitArray" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-155">An array containing the result of the bitwise AND operation, which is a reference to the current <see cref="T:System.Collections.BitArray" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-156">Restituisce l'operazione AND bit per bit `true` se entrambi gli operandi sono `true`e restituisce `false` se uno o entrambi gli operandi sono `false`.</span><span class="sxs-lookup"><span data-stu-id="165fb-156">The bitwise AND operation returns `true` if both operands are `true`, and returns `false` if one or both operands are `false`.</span></span>  
  
 <span data-ttu-id="165fb-157">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.BitArray.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="165fb-157">This method is an O(`n`) operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="165fb-158">Esempio di codice seguente viene illustrato come eseguire l'operazione AND bit per bit tra due <xref:System.Collections.BitArray> oggetti.</span><span class="sxs-lookup"><span data-stu-id="165fb-158">The following code example shows how to perform the bitwise AND operation between two <xref:System.Collections.BitArray> objects.</span></span>  
  
 [!code-cpp[Classic BitArray.And Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.And Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.And Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.And Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.And Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.And Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="165fb-159">
            <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-159">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="165fb-160">
            <paramref name="value" /> e la <see cref="T:System.Collections.BitArray" /> corrente non contengono lo stesso numero di elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-160">
              <paramref name="value" /> and the current <see cref="T:System.Collections.BitArray" /> do not have the same number of elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="165fb-161">Crea una copia superficiale di <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-161">Creates a shallow copy of the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="165fb-162">Copia superficiale di <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-162">A shallow copy of the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-163">Una copia superficiale di un insieme di copia solo gli elementi della raccolta, se sono tipi di riferimento o tipi di valore, ma non copia gli oggetti che fanno riferimento i riferimenti.</span><span class="sxs-lookup"><span data-stu-id="165fb-163">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="165fb-164">I riferimenti nella nuova raccolta puntano agli stessi oggetti che puntano i riferimenti nella raccolta originale.</span><span class="sxs-lookup"><span data-stu-id="165fb-164">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="165fb-165">Al contrario, una copia completa di una raccolta copia gli elementi e tutti gli elementi direttamente o indirettamente a cui fa riferimento gli elementi.</span><span class="sxs-lookup"><span data-stu-id="165fb-165">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="165fb-166">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.BitArray.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="165fb-166">This method is an O(`n`) operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="165fb-167">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-167">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.BitArray" />.</span>
          </span>
          <span data-ttu-id="165fb-168">L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-168">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="165fb-169">Indice in base zero in <c>array</c> in corrispondenza del quale ha inizio la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-169">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165fb-170">Copia l'intero oggetto <see cref="T:System.Collections.BitArray" /> in un oggetto <see cref="T:System.Array" /> compatibile unidimensionale, a partire dall'indice specificato della matrice di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-170">Copies the entire <see cref="T:System.Collections.BitArray" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-171">La matrice specificata deve essere di un tipo compatibile.</span><span class="sxs-lookup"><span data-stu-id="165fb-171">The specified array must be of a compatible type.</span></span> <span data-ttu-id="165fb-172">Solo `bool`, `int`, e `byte` sono supportati i tipi di matrici.</span><span class="sxs-lookup"><span data-stu-id="165fb-172">Only `bool`, `int`, and `byte` types of arrays are supported.</span></span>  
  
 <span data-ttu-id="165fb-173">Questo metodo utilizza <xref:System.Array.Copy%2A?displayProperty=nameWithType> per copiare gli elementi.</span><span class="sxs-lookup"><span data-stu-id="165fb-173">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="165fb-174">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.BitArray.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="165fb-174">This method is an O(`n`) operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="165fb-175">Esempio di codice seguente viene illustrato come copiare un <xref:System.Collections.BitArray> in una matrice unidimensionale <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="165fb-175">The following code example shows how to copy a <xref:System.Collections.BitArray> into a one-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic BitArray.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="165fb-176">
            <paramref name="array" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-176">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="165fb-177">
            <paramref name="index" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-177">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="165fb-178">
            <paramref name="array" /> è multidimensionale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-178">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="165fb-179">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-179">-or-</span>
          </span>
          <span data-ttu-id="165fb-180">Il numero di elementi nell'oggetto <see cref="T:System.Collections.BitArray" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-180">The number of elements in the source <see cref="T:System.Collections.BitArray" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="165fb-181">Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.BitArray" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-181">The type of the source <see cref="T:System.Collections.BitArray" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="165fb-182">Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-182">Gets the number of elements contained in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="165fb-183">Il numero di elementi contenuti in <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-183">The number of elements contained in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-184"><xref:System.Collections.BitArray.Length%2A> e <xref:System.Collections.BitArray.Count%2A> restituiscono lo stesso valore.</span><span class="sxs-lookup"><span data-stu-id="165fb-184"><xref:System.Collections.BitArray.Length%2A> and <xref:System.Collections.BitArray.Count%2A> return the same value.</span></span> <span data-ttu-id="165fb-185"><xref:System.Collections.BitArray.Length%2A> può essere impostata su un valore specifico, ma <xref:System.Collections.BitArray.Count%2A> è di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="165fb-185"><xref:System.Collections.BitArray.Length%2A> can be set to a specific value, but <xref:System.Collections.BitArray.Count%2A> is read-only.</span></span>  
  
 <span data-ttu-id="165fb-186">Il recupero del valore di questa proprietà è un'operazione O(1).</span><span class="sxs-lookup"><span data-stu-id="165fb-186">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public bool Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Get(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Get(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="165fb-187">Indice in base zero del valore da ottenere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-187">The zero-based index of the value to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165fb-188">Ottiene il valore del bit in una posizione specifica nella <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-188">Gets the value of the bit at a specific position in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="165fb-189">Il valore del bit nella posizione <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-189">The value of the bit at position <paramref name="index" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-190">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="165fb-190">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="165fb-191">Esempio di codice seguente viene illustrato come impostare e ottenere elementi specifici in un <xref:System.Collections.BitArray>.</span><span class="sxs-lookup"><span data-stu-id="165fb-191">The following code example shows how to set and get specific elements in a <xref:System.Collections.BitArray>.</span></span>  
  
 [!code-cpp[Classic BitArray.Get Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Get Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="165fb-192">
            <paramref name="index" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-192">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="165fb-193">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-193">-or-</span>
          </span>
          <span data-ttu-id="165fb-194">
            <paramref name="index" /> è maggiore o uguale al numero di elementi della <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-194">
              <paramref name="index" /> is greater than or equal to the number of elements in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="165fb-195">Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-195">Returns an enumerator that iterates through the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="165fb-196">
            <see cref="T:System.Collections.IEnumerator" /> per l'intera <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-196">An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-197">L'istruzione `foreach` del linguaggio C# (`for each` in Visual Basic) nasconde la complessità degli enumeratori.</span><span class="sxs-lookup"><span data-stu-id="165fb-197">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="165fb-198">Pertanto, si consiglia l'utilizzo di `foreach`, anziché la modifica diretta dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="165fb-198">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="165fb-199">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</span><span class="sxs-lookup"><span data-stu-id="165fb-199">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="165fb-200">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</span><span class="sxs-lookup"><span data-stu-id="165fb-200">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="165fb-201">Anche il metodo <xref:System.Collections.IEnumerator.Reset%2A> riporta l'enumeratore in questa posizione.</span><span class="sxs-lookup"><span data-stu-id="165fb-201"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="165fb-202">In questa posizione, la proprietà <xref:System.Collections.IEnumerator.Current%2A> è indefinita.</span><span class="sxs-lookup"><span data-stu-id="165fb-202">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="165fb-203">Pertanto, è necessario chiamare il metodo <xref:System.Collections.IEnumerator.MoveNext%2A> per spostare in avanti l'enumeratore, in corrispondenza del primo elemento della raccolta, prima di leggere il valore di <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="165fb-203">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="165fb-204"><xref:System.Collections.IEnumerator.Current%2A> restituisce lo stesso oggetto finché non viene chiamato il metodo <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="165fb-204"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="165fb-205"><xref:System.Collections.IEnumerator.MoveNext%2A> imposta <xref:System.Collections.IEnumerator.Current%2A> sull'elemento successivo.</span><span class="sxs-lookup"><span data-stu-id="165fb-205"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="165fb-206">Se <xref:System.Collections.IEnumerator.MoveNext%2A> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <xref:System.Collections.IEnumerator.MoveNext%2A> restituisce `false`.</span><span class="sxs-lookup"><span data-stu-id="165fb-206">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="165fb-207">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <xref:System.Collections.IEnumerator.MoveNext%2A> restituire anche `false`.</span><span class="sxs-lookup"><span data-stu-id="165fb-207">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="165fb-208">Se l'ultima chiamata a <xref:System.Collections.IEnumerator.MoveNext%2A> restituito `false`, <xref:System.Collections.IEnumerator.Current%2A> è definito.</span><span class="sxs-lookup"><span data-stu-id="165fb-208">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="165fb-209">Per impostare nuovamente la proprietà <xref:System.Collections.IEnumerator.Current%2A> sul primo elemento della raccolta, è possibile chiamare il metodo <xref:System.Collections.IEnumerator.Reset%2A> seguito da <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="165fb-209">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="165fb-210">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</span><span class="sxs-lookup"><span data-stu-id="165fb-210">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="165fb-211">In caso di modifiche alla raccolta, ad esempio aggiunta, modifica o eliminazione di elementi, l'enumeratore sarà reso non valido in modo irreversibile e il comportamento corrispondente non sarà definito.</span><span class="sxs-lookup"><span data-stu-id="165fb-211">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="165fb-212">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="165fb-212">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="165fb-213">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="165fb-213">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="165fb-214">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</span><span class="sxs-lookup"><span data-stu-id="165fb-214">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="165fb-215">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="165fb-215">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="165fb-216">Ottiene un valore che indica se <see cref="T:System.Collections.BitArray" /> è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-216">Gets a value indicating whether the <see cref="T:System.Collections.BitArray" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="165fb-217">Questa proprietà è sempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-217">This property is always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-218"><xref:System.Collections.BitArray> implementa il <xref:System.Collections.BitArray.IsReadOnly%2A> proprietà perché è necessaria per il <xref:System.Collections.IList?displayProperty=nameWithType> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="165fb-218"><xref:System.Collections.BitArray> implements the <xref:System.Collections.BitArray.IsReadOnly%2A> property because it is required by the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="165fb-219">Una raccolta di sola lettura non consente l'aggiunta, la rimozione o la modifica di elementi dopo la sua creazione.</span><span class="sxs-lookup"><span data-stu-id="165fb-219">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="165fb-220">Una raccolta di sola lettura è semplicemente una raccolta con un wrapper che impedisce la modifica. Pertanto, se vengono apportate modifiche alla raccolta sottostante, la raccolta di sola lettura riflette le modifiche.</span><span class="sxs-lookup"><span data-stu-id="165fb-220">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="165fb-221">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="165fb-221">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="165fb-222">Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.BitArray" /> è sincronizzato (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-222">Gets a value indicating whether access to the <see cref="T:System.Collections.BitArray" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="165fb-223">Questa proprietà è sempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-223">This property is always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-224"><xref:System.Collections.BitArray> implementa il <xref:System.Collections.BitArray.IsSynchronized%2A> proprietà perché è necessaria per il <xref:System.Collections.ICollection?displayProperty=nameWithType> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="165fb-224"><xref:System.Collections.BitArray> implements the <xref:System.Collections.BitArray.IsSynchronized%2A> property because it is required by the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="165fb-225">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="165fb-225">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="165fb-226">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="165fb-226">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="165fb-227">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</span><span class="sxs-lookup"><span data-stu-id="165fb-227">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="165fb-228">Esempio di codice seguente viene illustrato come bloccare la raccolta utilizzando la <xref:System.Collections.BitArray.SyncRoot%2A> durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="165fb-228">The following code example shows how to lock the collection using the <xref:System.Collections.BitArray.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic BitArray Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic BitArray Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray Example/CS/source2.cs#2)]
 [!code-vb[Classic BitArray Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="165fb-229">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="165fb-229">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.BitArray.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public bool this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool default[int] { bool get(int index); void set(int index, bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="165fb-230">Indice in base zero del valore da ottenere o impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-230">The zero-based index of the value to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165fb-231">Ottiene o imposta il valore del bit in una specifica posizione nella <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-231">Gets or sets the value of the bit at a specific position in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="165fb-232">Il valore del bit nella posizione <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-232">The value of the bit at position <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-233">Questa proprietà consente di accedere a un elemento specifico della raccolta utilizzando la sintassi seguente: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="165fb-233">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="165fb-234">Nel linguaggio c# viene utilizzata la parola chiave per definire gli indicizzatori anziché implementare la <xref:System.Collections.BitArray.Item%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="165fb-234">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.BitArray.Item%2A> property.</span></span> <span data-ttu-id="165fb-235">In Visual Basic la proprietà <xref:System.Collections.BitArray.Item%2A> viene implementata come predefinita per fornire la stessa funzionalità di indicizzazione.</span><span class="sxs-lookup"><span data-stu-id="165fb-235">Visual Basic implements <xref:System.Collections.BitArray.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="165fb-236">Il recupero del valore di questa proprietà è un'operazione o (1). l'impostazione della proprietà è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="165fb-236">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="165fb-237">
            <paramref name="index" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-237">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="165fb-238">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-238">-or-</span>
          </span>
          <span data-ttu-id="165fb-239">
            <paramref name="index" /> è uguale a o maggiore di <see cref="P:System.Collections.BitArray.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-239">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.BitArray.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.BitArray.Count" />
      </Docs>
    </Member>
    <Member MemberName="LeftShift">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray LeftShift (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray LeftShift(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.LeftShift(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LeftShift (count As Integer) As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ LeftShift(int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="165fb-240">Ottiene o imposta il numero di elementi nella <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-240">Gets or sets the number of elements in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="165fb-241">Numero di elementi in <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-241">The number of elements in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-242"><xref:System.Collections.BitArray.Length%2A> e <xref:System.Collections.BitArray.Count%2A> restituiscono lo stesso valore.</span><span class="sxs-lookup"><span data-stu-id="165fb-242"><xref:System.Collections.BitArray.Length%2A> and <xref:System.Collections.BitArray.Count%2A> return the same value.</span></span> <span data-ttu-id="165fb-243"><xref:System.Collections.BitArray.Length%2A> può essere impostata su un valore specifico, ma <xref:System.Collections.BitArray.Count%2A> è di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="165fb-243"><xref:System.Collections.BitArray.Length%2A> can be set to a specific value, but <xref:System.Collections.BitArray.Count%2A> is read-only.</span></span>  
  
 <span data-ttu-id="165fb-244">Se <xref:System.Collections.BitArray.Length%2A> è impostata su un valore che è minore di <xref:System.Collections.BitArray.Count%2A>, <xref:System.Collections.BitArray> viene troncato e gli elementi dopo l'indice `value` -1 vengono eliminati.</span><span class="sxs-lookup"><span data-stu-id="165fb-244">If <xref:System.Collections.BitArray.Length%2A> is set to a value that is less than <xref:System.Collections.BitArray.Count%2A>, the <xref:System.Collections.BitArray> is truncated and the elements after the index `value` -1 are deleted.</span></span>  
  
 <span data-ttu-id="165fb-245">Se <xref:System.Collections.BitArray.Length%2A> è impostata su un valore maggiore di <xref:System.Collections.BitArray.Count%2A>, i nuovi elementi sono impostati su `false`.</span><span class="sxs-lookup"><span data-stu-id="165fb-245">If <xref:System.Collections.BitArray.Length%2A> is set to a value that is greater than <xref:System.Collections.BitArray.Count%2A>, the new elements are set to `false`.</span></span>  
  
 <span data-ttu-id="165fb-246">Il recupero del valore di questa proprietà è un'operazione O(1).</span><span class="sxs-lookup"><span data-stu-id="165fb-246">Retrieving the value of this property is an O(1) operation.</span></span> <span data-ttu-id="165fb-247">Impostazione di questa proprietà è un'operazione O (`n`) operazione.</span><span class="sxs-lookup"><span data-stu-id="165fb-247">Setting this property is an O(`n`) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="165fb-248">La proprietà è impostata su un valore minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-248">The property is set to a value that is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray Not ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray Not() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Not" />
      <MemberSignature Language="VB.NET" Value="Public Function Not () As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ Not();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="165fb-249">Consente di invertire tutti i valori dei bit nella <see cref="T:System.Collections.BitArray" /> corrente in modo che gli elementi impostati su <see langword="true" /> diventino <see langword="false" /> e gli elementi impostati su <see langword="false" /> diventino <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-249">Inverts all the bit values in the current <see cref="T:System.Collections.BitArray" />, so that elements set to <see langword="true" /> are changed to <see langword="false" />, and elements set to <see langword="false" /> are changed to <see langword="true" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="165fb-250">Istanza corrente con i valori di bit invertiti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-250">The current instance with inverted bit values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-251">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.BitArray.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="165fb-251">This method is an O(`n`) operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="165fb-252">Esempio di codice seguente viene illustrato come applicare non a un <xref:System.Collections.BitArray>.</span><span class="sxs-lookup"><span data-stu-id="165fb-252">The following code example shows how to apply NOT to a <xref:System.Collections.BitArray>.</span></span>  
  
 [!code-cpp[Classic BitArray.Not Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Not Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Not Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Not Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Not Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Not Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray Or (System.Collections.BitArray value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray Or(class System.Collections.BitArray value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Or(System.Collections.BitArray)" />
      <MemberSignature Language="VB.NET" Value="Public Function Or (value As BitArray) As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ Or(System::Collections::BitArray ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.BitArray" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="165fb-253">Matrice con cui eseguire l'operazione OR bit per bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-253">The array with which to perform the bitwise OR operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165fb-254">Esegue l'operazione con OR bit per bit tra gli elementi dell'oggetto <see cref="T:System.Collections.BitArray" /> corrente e gli elementi corrispondenti nella matrice specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-254">Performs the bitwise OR operation between the elements of the current <see cref="T:System.Collections.BitArray" /> object and the corresponding elements in the specified array.</span>
          </span>
          <span data-ttu-id="165fb-255">L'oggetto <see cref="T:System.Collections.BitArray" /> corrente verrà modificato per archiviare il risultato dell'operazione con OR bit per bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-255">The current <see cref="T:System.Collections.BitArray" /> object will be modified to store the result of the bitwise OR operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="165fb-256">Matrice contenente il risultato dell'operazione con OR bit per bit, che è un riferimento all'oggetto <see cref="T:System.Collections.BitArray" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-256">An array containing the result of the bitwise OR operation, which is a reference to the current <see cref="T:System.Collections.BitArray" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-257">L'operazione OR bit per bit restituisce `true` se uno o entrambi gli operandi sono `true`e restituisce `false` se entrambi gli operandi sono `false`.</span><span class="sxs-lookup"><span data-stu-id="165fb-257">The bitwise OR operation returns `true` if one or both operands are `true`, and returns `false` if both operands are `false`.</span></span>  
  
 <span data-ttu-id="165fb-258">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.BitArray.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="165fb-258">This method is an O(`n`) operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="165fb-259">Esempio di codice seguente viene illustrato come eseguire l'operazione di OR tra due <xref:System.Collections.BitArray> oggetti.</span><span class="sxs-lookup"><span data-stu-id="165fb-259">The following code example shows how to perform the OR operation between two <xref:System.Collections.BitArray> objects.</span></span>  
  
 [!code-cpp[Classic BitArray.Or Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Or Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Or Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Or Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Or Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Or Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="165fb-260">
            <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-260">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="165fb-261">
            <paramref name="value" /> e la <see cref="T:System.Collections.BitArray" /> corrente non contengono lo stesso numero di elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-261">
              <paramref name="value" /> and the current <see cref="T:System.Collections.BitArray" /> do not have the same number of elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RightShift">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray RightShift (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray RightShift(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.RightShift(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RightShift (count As Integer) As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ RightShift(int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (int index, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(int32 index, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (index As Integer, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Set(int index, bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="165fb-262">Indice in base zero del bit da impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-262">The zero-based index of the bit to set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="165fb-263">Valore booleano da assegnare al bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-263">The Boolean value to assign to the bit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165fb-264">Imposta il bit in una posizione specifica nella <see cref="T:System.Collections.BitArray" /> sul valore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-264">Sets the bit at a specific position in the <see cref="T:System.Collections.BitArray" /> to the specified value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-265">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="165fb-265">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="165fb-266">Esempio di codice seguente viene illustrato come impostare e ottenere elementi specifici in un <xref:System.Collections.BitArray>.</span><span class="sxs-lookup"><span data-stu-id="165fb-266">The following code example shows how to set and get specific elements in a <xref:System.Collections.BitArray>.</span></span>  
  
 [!code-cpp[Classic BitArray.Get Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Get Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="165fb-267">
            <paramref name="index" /> è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-267">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="165fb-268">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-268">-or-</span>
          </span>
          <span data-ttu-id="165fb-269">
            <paramref name="index" /> è maggiore o uguale al numero di elementi della <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-269">
              <paramref name="index" /> is greater than or equal to the number of elements in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAll">
      <MemberSignature Language="C#" Value="public void SetAll (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAll(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.SetAll(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAll (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAll(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="165fb-270">Valore booleano da assegnare a tutti i bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-270">The Boolean value to assign to all bits.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165fb-271">Imposta tutti i bit della <see cref="T:System.Collections.BitArray" /> sul valore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-271">Sets all bits in the <see cref="T:System.Collections.BitArray" /> to the specified value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-272">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.BitArray.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="165fb-272">This method is an O(`n`) operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="165fb-273">Esempio di codice seguente viene illustrato come impostare e ottenere elementi specifici in un <xref:System.Collections.BitArray>.</span><span class="sxs-lookup"><span data-stu-id="165fb-273">The following code example shows how to set and get specific elements in a <xref:System.Collections.BitArray>.</span></span>  
  
 [!code-cpp[Classic BitArray.Get Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Get Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="165fb-274">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-274">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="165fb-275">Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-275">An object that can be used to synchronize access to the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-276">Classi derivate possono fornire una propria versione sincronizzata del <xref:System.Collections.BitArray> utilizzando il <xref:System.Collections.BitArray.SyncRoot%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="165fb-276">Derived classes can provide their own synchronized version of the <xref:System.Collections.BitArray> using the <xref:System.Collections.BitArray.SyncRoot%2A> property.</span></span> <span data-ttu-id="165fb-277">Il codice di sincronizzazione è necessario eseguire operazioni sul <xref:System.Collections.BitArray.SyncRoot%2A> del <xref:System.Collections.BitArray>, non direttamente sul <xref:System.Collections.BitArray>.</span><span class="sxs-lookup"><span data-stu-id="165fb-277">The synchronizing code must perform operations on the <xref:System.Collections.BitArray.SyncRoot%2A> of the <xref:System.Collections.BitArray>, not directly on the <xref:System.Collections.BitArray>.</span></span> <span data-ttu-id="165fb-278">In questo modo si garantisce il corretto funzionamento delle raccolte derivate da altri oggetti.</span><span class="sxs-lookup"><span data-stu-id="165fb-278">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="165fb-279">In particolare, viene mantenuta la sincronizzazione con altri thread che potrebbero modificare contemporaneamente il <xref:System.Collections.BitArray> oggetto.</span><span class="sxs-lookup"><span data-stu-id="165fb-279">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.BitArray> object.</span></span>  
  
 <span data-ttu-id="165fb-280">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</span><span class="sxs-lookup"><span data-stu-id="165fb-280">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="165fb-281">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</span><span class="sxs-lookup"><span data-stu-id="165fb-281">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="165fb-282">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</span><span class="sxs-lookup"><span data-stu-id="165fb-282">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="165fb-283">Esempio di codice seguente viene illustrato come bloccare la raccolta utilizzando la <xref:System.Collections.BitArray.SyncRoot%2A> durante l'intera enumerazione.</span><span class="sxs-lookup"><span data-stu-id="165fb-283">The following code example shows how to lock the collection using the <xref:System.Collections.BitArray.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic BitArray Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic BitArray Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray Example/CS/source2.cs#2)]
 [!code-vb[Classic BitArray Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="165fb-284">Il recupero del valore di questa proprietà è un'operazione O(1).</span><span class="sxs-lookup"><span data-stu-id="165fb-284">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.BitArray.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray Xor (System.Collections.BitArray value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray Xor(class System.Collections.BitArray value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Xor(System.Collections.BitArray)" />
      <MemberSignature Language="VB.NET" Value="Public Function Xor (value As BitArray) As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ Xor(System::Collections::BitArray ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.BitArray" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="165fb-285">La matrice con la quale eseguire l'operazione OR esclusivo bit per bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-285">The array with which to perform the bitwise exclusive OR operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165fb-286">Esegue l'operazione con OR esclusivo bit per bit tra gli elementi dell'oggetto <see cref="T:System.Collections.BitArray" /> corrente e gli elementi corrispondenti nella matrice specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-286">Performs the bitwise exclusive OR operation between the elements of the current <see cref="T:System.Collections.BitArray" /> object against the corresponding elements in the specified array.</span>
          </span>
          <span data-ttu-id="165fb-287">L'oggetto <see cref="T:System.Collections.BitArray" /> corrente verrà modificato per archiviare il risultato dell'operazione con OR esclusivo bit per bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-287">The current <see cref="T:System.Collections.BitArray" /> object will be modified to store the result of the bitwise exclusive OR operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="165fb-288">Matrice contenente il risultato dell'operazione con OR esclusivo bit per bit, che è un riferimento all'oggetto <see cref="T:System.Collections.BitArray" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-288">An array containing the result of the bitwise exclusive OR operation, which is a reference to the current <see cref="T:System.Collections.BitArray" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165fb-289">L'operazione di OR esclusivo bit per bit restituisce `true` se uno degli operandi è `true`e restituisce `false` se entrambi gli operandi hanno lo stesso valore booleano.</span><span class="sxs-lookup"><span data-stu-id="165fb-289">The bitwise exclusive OR operation returns `true` if exactly one operand is `true`, and returns `false` if both operands have the same Boolean value.</span></span>  
  
 <span data-ttu-id="165fb-290">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.BitArray.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="165fb-290">This method is an O(`n`) operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="165fb-291">Esempio di codice seguente viene illustrato come eseguire l'operazione XOR tra due <xref:System.Collections.BitArray> oggetti.</span><span class="sxs-lookup"><span data-stu-id="165fb-291">The following code example shows how to perform the XOR operation between two <xref:System.Collections.BitArray> objects.</span></span>  
  
 [!code-cpp[Classic BitArray.Xor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Xor Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Xor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Xor Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Xor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Xor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="165fb-292">
            <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-292">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="165fb-293">
            <paramref name="value" /> e la <see cref="T:System.Collections.BitArray" /> corrente non contengono lo stesso numero di elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165fb-293">
              <paramref name="value" /> and the current <see cref="T:System.Collections.BitArray" /> do not have the same number of elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>