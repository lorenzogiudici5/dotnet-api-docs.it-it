<Type Name="IStructuralComparable" FullName="System.Collections.IStructuralComparable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fc9fd918f6e5498c96c356a7bacfda695f6a55c3" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49151206" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStructuralComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralComparable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralComparable" />
  <TypeSignature Language="F#" Value="type IStructuralComparable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Supporta il confronto strutturale di oggetti della raccolta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Collections.IStructuralComparable> interfaccia consente di implementare i confronti personalizzati per i membri della raccolta. Vale a dire, è possibile definire con precisione significato per un oggetto di raccolta a far precedere o seguire si trovano nella stessa posizione nella sequenza di ordinamento come un secondo oggetto. È quindi possibile specificare che questa definizione di essere usato con un tipo di raccolta che accetta il <xref:System.Collections.IStructuralComparable> interfaccia.  
  
 L'interfaccia dispone di un singolo membro, <xref:System.Collections.IStructuralComparable.CompareTo%2A>, che determina se l'oggetto raccolta corrente è minore, uguale o maggiore di un secondo oggetto nell'ordinamento. Il confronto dei membri o elementi nell'istanza corrente con quelle in un secondo oggetto effettivo viene eseguito da un <xref:System.Collections.IComparer> implementazione dell'interfaccia, che contiene la definizione di confronto personalizzato.  
  
> [!NOTE]
>  Il <xref:System.Collections.IStructuralComparable> interfaccia supporta solo i confronti strutturali per l'ordinamento. Il <xref:System.Collections.IStructuralEquatable> interfaccia supporta i confronti personalizzati per verificarne l'uguaglianza strutturale.  
  
 .NET Framework fornisce due operatori di confronto predefinito. Viene restituito da uno il <xref:System.Collections.StructuralComparisons.StructuralComparer%2A?displayProperty=nameWithType> proprietà; l'altra viene restituita dal <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> proprietà.  
  
 Le classi di tupla generica (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>e così via) e il <xref:System.Array> classe forniscono implementazioni esplicite del <xref:System.Collections.IStructuralComparable> interfaccia. Eseguendo il cast (in c#) o convertire (in Visual Basic) l'istanza corrente di una matrice o una tupla a un <xref:System.Collections.IStructuralComparable> valore dell'interfaccia e fornendo il <xref:System.Collections.IComparer> implementazione come argomento per il <xref:System.Collections.IStructuralComparable.CompareTo%2A> metodo, è possibile definire un ordinamento personalizzato per il matrice o raccolta. Tuttavia, non viene chiamato il <xref:System.Collections.IStructuralComparable.CompareTo%2A> metodo direttamente nella maggior parte dei casi. Al contrario, il <xref:System.Collections.IStructuralComparable.CompareTo%2A> metodo viene chiamato da metodi di ordinamento, ad esempio <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29>. In questo caso, definiscono le <xref:System.Collections.IComparer> implementazione e passarlo come argomento al costruttore della classe un ordinamento metodo o una raccolta dell'oggetto. Il <xref:System.Collections.IStructuralComparable.CompareTo%2A> con l'operatore di confronto personalizzato viene quindi chiamato il metodo automaticamente ogni volta che la raccolta è ordinata.  
  
   
  
## Examples  
 L'esempio seguente crea una matrice di <xref:System.Tuple%606> gli oggetti che contiene i dati della popolazione per tre città degli Stati Uniti dal 1960 al 2000. Primo componente della sestupla è il nome della città. I cinque componenti rimanenti rappresentano la popolazione in intervalli di dieci anni dal 1960 al 2000.  
  
 Il `PopulationComparer` classe fornisce un <xref:System.Collections.IComparer> implementazione che consente la matrice di sestuple in base a uno qualsiasi dei relativi componenti. Due valori vengono forniti i `PopulationComparer` classe nel relativo costruttore: la posizione del componente che definisca l'ordinamento e un valore booleano che indica se gli oggetti tupla devono essere disposti in ordine crescente o decrescente.  
  
 Nell'esempio viene quindi Visualizza gli elementi nella matrice in ordine casuale, li ordina in base al terzo componente (il popolamento in 1970), verranno visualizzati e li ordina in base al sesto componente (la popolazione nel 2000) e li visualizza. Si noti che l'esempio non viene chiamato direttamente il <xref:System.Collections.IStructuralComparable.CompareTo%2A> (metodo). Il metodo viene chiamato in modo implicito dal <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29> metodo per ogni oggetto tupla nella matrice.  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.IStructuralEquatable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralComparer" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj * System.Collections.IComparer -&gt; int" Usage="iStructuralComparable.CompareTo (other, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">Oggetto da confrontare con l'istanza corrente.</param>
        <param name="comparer">Oggetto che confronta membri dell'oggetto raccolta corrente con i membri corrispondenti del parametro <c>other</c>.</param>
        <summary>Determina se l'oggetto raccolta corrente precede, è nella stessa posizione o segue un altro oggetto nell'ordinamento.</summary>
        <returns>Integer con segno che indica la relazione dell'oggetto corrente con <paramref name="other" /> nell'ordinamento:<br /> - Se minore di 0, l'istanza corrente precede <paramref name="other" />.<br /> - Se 0, l'istanza corrente e <paramref name="other" /> sono uguali.<br /> - Se maggiore di 0, l'istanza corrente segue <paramref name="other" />.  
  
 <list type="table"><listheader><term> Valore restituito 
 </term><description> Descrizione 
 </description></listheader><item><term> -1 
 </term><description> L'istanza corrente precede <paramref name="other" />.  
  
 </description></item><item><term> 0 
 </term><description> L'istanza corrente è uguale a <paramref name="other" />.  
  
 </description></item><item><term> 1 
 </term><description> L'istanza corrente segue <paramref name="other" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Collections.IStructuralComparable.CompareTo%2A> metodo supporta il confronto strutturale personalizzato e l'ordinamento di tupla e matrice di oggetti. Il <xref:System.Collections.IStructuralComparable.CompareTo%2A> chiamate al metodo il `comparer` dell'oggetto <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> metodo per confrontare singoli elementi della matrice o componenti della tupla, a partire dal primo elemento o un componente. Le singole chiamate a <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> finale e il <xref:System.Collections.IStructuralComparable.CompareTo%2A> metodo restituisce un valore quando una delle condizioni seguenti è true:  
  
-   Il <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> metodo restituisce -1.  
  
-   Il <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> metodo restituisce 1.  
  
-   Il <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> metodo viene chiamato per l'ultimo elemento o nell'oggetto raccolta di componenti.  
  
   
  
## Examples  
 L'esempio seguente crea una matrice di <xref:System.Tuple%606> gli oggetti che contiene i dati della popolazione per tre città degli Stati Uniti dal 1960 al 2000. Primo componente della sestupla è il nome della città. I cinque componenti rimanenti rappresentano la popolazione in intervalli di dieci anni dal 1960 al 2000.  
  
 Il `PopulationComparer` classe fornisce un <xref:System.Collections.IComparer> implementazione che consente la matrice di sestuple in base a uno qualsiasi dei relativi componenti. Vengono forniti due valori per il `PopulationComparer` classe nel relativo costruttore: la posizione del componente che definisca l'ordinamento, e un <xref:System.Boolean> valore che indica se gli oggetti tupla devono essere disposti in ordine crescente o decrescente.  
  
 Nell'esempio viene quindi Visualizza gli elementi nella matrice in ordine casuale, li ordina in base al terzo componente (il popolamento in 1970), verranno visualizzati e li ordina in base al sesto componente (la popolazione nel 2000) e li visualizza. Si noti che l'esempio non viene chiamato direttamente il <xref:System.Collections.IStructuralComparable.CompareTo%2A?displayProperty=nameWithType> implementazione. Il metodo viene chiamato in modo implicito dal <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29> metodo per ogni oggetto tupla nella matrice.  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Questa istanza e <paramref name="other" /> non sono dello stesso tipo.</exception>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
  </Members>
</Type>