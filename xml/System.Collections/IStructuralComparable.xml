<Type Name="IStructuralComparable" FullName="System.Collections.IStructuralComparable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf8d7de2981a659a0ec7ffa7680e40f16114e0a5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30368055" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStructuralComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralComparable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Supporta il confronto strutturale di oggetti della raccolta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Collections.IStructuralComparable> interfaccia consente di implementare confronti personalizzati per i membri della raccolta. Ovvero, è possibile definire esattamente le implicazioni per un oggetto di raccolta e precedere o seguire si verificano nella stessa posizione nella sequenza di ordinamento come un secondo oggetto. È quindi possibile specificare che questa definizione utilizzata con un tipo di insieme che accetta il <xref:System.Collections.IStructuralComparable> interfaccia.  
  
 L'interfaccia dispone di un singolo membro, <xref:System.Collections.IStructuralComparable.CompareTo%2A>, che determina se l'oggetto raccolta corrente è minore, uguale o maggiore di un secondo oggetto nell'ordinamento. Il confronto tra i membri e gli elementi nell'istanza corrente con quelli in un secondo oggetto effettivo viene eseguito da un <xref:System.Collections.IComparer> implementazione di interfaccia, che contiene la definizione di confronto personalizzato.  
  
> [!NOTE]
>  Il <xref:System.Collections.IStructuralComparable> interfaccia supporta solo confronti strutturali per l'ordinamento. Il <xref:System.Collections.IStructuralEquatable> interfaccia supporta i confronti personalizzati per verificarne l'uguaglianza strutturale.  
  
 .NET Framework fornisce due operatori di confronto predefinito. Viene restituito da uno di <xref:System.Collections.StructuralComparisons.StructuralComparer%2A?displayProperty=nameWithType> proprietà; l'altro viene restituito dal <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> proprietà.  
  
 Le classi di tuple generico (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>e così via) e <xref:System.Array> classe forniscono implementazioni esplicite del <xref:System.Collections.IStructuralComparable> interfaccia. Cast (in c#) o convertendo (in Visual Basic) l'istanza corrente di una matrice o una tupla da un <xref:System.Collections.IStructuralComparable> valore di interfaccia e fornendo il <xref:System.Collections.IComparer> implementazione come argomento per il <xref:System.Collections.IStructuralComparable.CompareTo%2A> (metodo), è possibile definire un ordinamento personalizzato per il matrice o raccolta. Tuttavia, non si chiama il <xref:System.Collections.IStructuralComparable.CompareTo%2A> metodo direttamente nella maggior parte dei casi. Al contrario, il <xref:System.Collections.IStructuralComparable.CompareTo%2A> metodo viene chiamato da metodi di ordinamento, ad esempio <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29>. In questo caso, definiscono i <xref:System.Collections.IComparer> implementazione e passarla come argomento al costruttore della classe un ordinamento metodo o una raccolta dell'oggetto. Il <xref:System.Collections.IStructuralComparable.CompareTo%2A> con l'operatore di confronto personalizzato viene quindi chiamato il metodo automaticamente ogni volta che la raccolta è ordinata.  
  
   
  
## Examples  
 L'esempio seguente crea una matrice di <xref:System.Tuple%606> gli oggetti che contiene i dati della popolazione per tre città degli Stati Uniti dal 1960 a 2000. Primo componente della sestupla è il nome della città. I cinque componenti rimanenti rappresentano la popolazione a intervalli di 10 anni dal 1960 a 2000.  
  
 Il `PopulationComparer` classe fornisce un <xref:System.Collections.IComparer> implementazione che consente la matrice di sestuple in base a uno qualsiasi dei relativi componenti. Vengono forniti due valori per il `PopulationComparer` nel relativo costruttore di classe: la posizione del componente che definisce l'ordinamento e un valore booleano che indica se gli oggetti tupla devono essere ordinati in ordine crescente o decrescente.  
  
 Nell'esempio viene quindi Visualizza gli elementi nella matrice in ordine casuale, li ordina in base al terzo componente (la popolazione nel 1970), verranno visualizzati e quindi li ordina in base al sesto componente (la popolazione nel 2000) e li visualizza. Si noti che nell'esempio viene chiamato direttamente il <xref:System.Collections.IStructuralComparable.CompareTo%2A> metodo. Il metodo viene chiamato in modo implicito dal <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29> metodo per ogni oggetto tupla nella matrice.  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.IStructuralEquatable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralComparer" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">Oggetto da confrontare con l'istanza corrente.</param>
        <param name="comparer">Oggetto che confronta membri dell'oggetto raccolta corrente con i membri corrispondenti del parametro <c>other</c>.</param>
        <summary>Determina se l'oggetto raccolta corrente precede, è nella stessa posizione o segue un altro oggetto nell'ordinamento.</summary>
        <returns>Integer che indica la relazione tra l'oggetto raccolta corrente e <paramref name="other" />, come illustrato nella tabella seguente.  
  
 <list type="table"><listheader><term> Valore restituito  
  
 </term><description> Descrizione  
  
 </description></listheader><item><term> -1  
  
 </term><description> L'istanza corrente precede <paramref name="other" />.  
  
 </description></item><item><term> 0  
  
 </term><description> L'istanza corrente è uguale a <paramref name="other" />.  
  
 </description></item><item><term> 1  
  
 </term><description> L'istanza corrente segue <paramref name="other" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Collections.IStructuralComparable.CompareTo%2A> metodo supporta il confronto strutturale personalizzato e l'ordinamento di oggetti tupla e matrice di oggetti. Il <xref:System.Collections.IStructuralComparable.CompareTo%2A> chiamate al metodo di `comparer` dell'oggetto <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> metodo per confrontare gli elementi della matrice singoli o componenti della tupla, a partire dal primo elemento o un componente. Le chiamate singole a <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> fine e <xref:System.Collections.IStructuralComparable.CompareTo%2A> metodo restituisce un valore quando una delle seguenti condizioni è true:  
  
-   Il <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> metodo restituisce -1.  
  
-   Il <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> metodo restituisce 1.  
  
-   Il <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> metodo viene chiamato per l'ultimo elemento o nell'oggetto raccolta di componenti.  
  
   
  
## Examples  
 L'esempio seguente crea una matrice di <xref:System.Tuple%606> gli oggetti che contiene i dati della popolazione per tre città degli Stati Uniti dal 1960 a 2000. Primo componente della sestupla è il nome della città. I cinque componenti rimanenti rappresentano la popolazione a intervalli di 10 anni dal 1960 a 2000.  
  
 Il `PopulationComparer` classe fornisce un <xref:System.Collections.IComparer> implementazione che consente la matrice di sestuple in base a uno qualsiasi dei relativi componenti. Vengono forniti due valori per il `PopulationComparer` nel relativo costruttore di classe: la posizione del componente che definisce l'ordinamento, e un <xref:System.Boolean> valore che indica se gli oggetti tupla devono essere ordinati in ordine crescente o decrescente.  
  
 Nell'esempio viene quindi Visualizza gli elementi nella matrice in ordine casuale, li ordina in base al terzo componente (la popolazione nel 1970), verranno visualizzati e quindi li ordina in base al sesto componente (la popolazione nel 2000) e li visualizza. Si noti che nell'esempio viene chiamato direttamente il <xref:System.Collections.IStructuralComparable.CompareTo%2A?displayProperty=nameWithType> implementazione. Il metodo viene chiamato in modo implicito dal <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29> metodo per ogni oggetto tupla nella matrice.  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Questa istanza e <paramref name="other" /> non sono dello stesso tipo.</exception>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
  </Members>
</Type>