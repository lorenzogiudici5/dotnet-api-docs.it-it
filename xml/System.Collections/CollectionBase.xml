<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CollectionBase.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac509de5a8fc0b91651ca42d10dde326c186122e14a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">09de5a8fc0b91651ca42d10dde326c186122e14a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.CollectionBase">
          <source>Provides the <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> base class for a strongly typed collection.</source>
          <target state="translated">Fornisce la classe base <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> per una raccolta fortemente tipizzata.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>A <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> instance is always modifiable.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> istanza è sempre modificabile.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>See <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> for a read-only version of this class.</source>
          <target state="translated">Vedere <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> per una versione di sola lettura di questa classe.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> can hold.</source>
          <target state="translated">La capacità di un <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> è il numero di elementi di <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> può contenere.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">Quando gli elementi vengono aggiunti a un <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph>, incrementata automaticamente in base alle necessità, tramite riallocazione.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>The capacity can be decreased by setting the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> property explicitly.</source>
          <target state="translated">È possibile diminuire la capacità impostando il <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> proprietà in modo esplicito.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">Nell'esempio di codice viene implementato il <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e tale implementazione viene utilizzata per creare una raccolta di <ph id="ph2">&lt;xref:System.Int16&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Statici pubblici (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) di questo tipo sono thread-safe.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">I membri di istanza non sono garantiti come thread-safe.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>This implementation does not provide a synchronized (thread safe) wrapper for a <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>, but derived classes can create their own synchronized versions of the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> using the <ph id="ph3">&lt;see cref="P:System.Collections.ICollection.SyncRoot" /&gt;</ph> property.</source>
          <target state="translated">Questa implementazione non fornisce un oggetto sincronizzato wrapper (thread-safe) per un <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>, ma le classi derivate possono creare una propria versione sincronizzata del <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> utilizzando il <ph id="ph3">&lt;see cref="P:System.Collections.ICollection.SyncRoot" /&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">L'enumerazione di una raccolta non è quindi una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>This base class is provided to make it easier for implementers to create a strongly typed custom collection.</source>
          <target state="translated">Questa classe di base viene fornita per renderne più semplice per gli implementatori di creare una raccolta fortemente tipizzata personalizzata.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>Implementers are encouraged to extend this base class instead of creating their own.</source>
          <target state="translated">Gli sviluppatori sono invitati a estendere la classe base anziché crearne di proprie.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Collections.CollectionBase">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> class with the default initial capacity.</source>
          <target state="translated">Consente l'inizializzazione di una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> utilizzando la capacità iniziale predefinita.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.#ctor">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> can hold.</source>
          <target state="translated">La capacità di un <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> è il numero di elementi che la <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> può contenere.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.#ctor">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Quando gli elementi vengono aggiunti a un <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph>, incrementata automaticamente come richiesto tramite la riallocazione della matrice interna.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.#ctor">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</source>
          <target state="translated">Se è possibile stimare le dimensioni della raccolta, specificando la capacità iniziale Elimina la necessità di eseguire numerose operazioni di ridimensionamento durante l'aggiunta di elementi di <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Questo costruttore è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.#ctor(System.Int32)">
          <source>The number of elements that the new list can initially store.</source>
          <target state="translated">Numero di elementi che possono essere archiviati inizialmente nel nuovo elenco.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> class with the specified capacity.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> con la capacità specificata.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.#ctor(System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> can hold.</source>
          <target state="translated">La capacità di un <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> è il numero di elementi che la <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> può contenere.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.#ctor(System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Quando gli elementi vengono aggiunti a un <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph>, incrementata automaticamente come richiesto tramite la riallocazione della matrice interna.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.#ctor(System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</source>
          <target state="translated">Se è possibile stimare le dimensioni della raccolta, specificando la capacità iniziale Elimina la necessità di eseguire numerose operazioni di ridimensionamento durante l'aggiunta di elementi di <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.#ctor(System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">Questo costruttore è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">`capacity`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.Capacity">
          <source>Gets or sets the number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> can contain.</source>
          <target state="translated">Ottiene o imposta il numero di elementi che <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> può contenere.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Capacity">
          <source>The number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> can contain.</source>
          <target state="translated">Numero degli elementi che <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> può contenere.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> can store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> è il numero di elementi che la <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> può archiviare.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> è il numero di elementi effettivamente contenuti nella <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> è sempre maggiore di o uguale a <ph id="ph2">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Capacity">
          <source>If <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> supera <ph id="ph2">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> durante l'aggiunta di elementi, la capacità viene aumentata automaticamente tramite la riallocazione della matrice interna prima di copiare gli elementi e aggiunta di nuovi elementi.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Capacity">
          <source>The capacity can be decreased by setting the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> property explicitly.</source>
          <target state="translated">È possibile diminuire la capacità impostando il <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> proprietà in modo esplicito.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Capacity">
          <source>When the value of <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</source>
          <target state="translated">Quando il valore di <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> è impostato in modo esplicito, la matrice interna viene riallocata anche per consentire la capacità specificata.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Capacity">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the new capacity.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione o (1). l'impostazione della proprietà è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è la nuova capacità.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.Capacity">
          <source><ph id="ph1">&lt;see cref="P:System.Collections.CollectionBase.Capacity" /&gt;</ph> is set to a value that is less than <ph id="ph2">&lt;see cref="P:System.Collections.CollectionBase.Count" /&gt;</ph>.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="P:System.Collections.CollectionBase.Capacity" /&gt;</ph> è impostato su un valore minore di <ph id="ph2">&lt;see cref="P:System.Collections.CollectionBase.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.Capacity">
          <source>There is not enough memory available on the system.</source>
          <target state="translated">La memoria disponibile nel sistema non è sufficiente.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.Clear">
          <source>Removes all objects from the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Consente di rimuovere tutti gli oggetti dall'istanza <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.Clear">
          <source>This method cannot be overridden.</source>
          <target state="translated">Questo metodo non può essere sottoposto a override.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> is set to zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> è impostato su zero.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.Clear">
          <source>To perform custom actions before or after the collection is cleared, override the protected <ph id="ph1">&lt;xref:System.Collections.CollectionBase.OnClear%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.CollectionBase.OnClearComplete%2A&gt;</ph> method.</source>
          <target state="translated">Per eseguire azioni personalizzate prima o dopo la raccolta viene cancellata, eseguire l'override protetto <ph id="ph1">&lt;xref:System.Collections.CollectionBase.OnClear%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Collections.CollectionBase.OnClearComplete%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.Count">
          <source>Gets the number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Ottiene il numero di elementi contenuti nell'istanza di <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.Count">
          <source>This property cannot be overridden.</source>
          <target state="translated">Questa proprietà non può essere sottoposta a override.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Numero di elementi contenuti nell'istanza di <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione O(1).</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Count">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">Nell'esempio di codice viene implementato il <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e tale implementazione viene utilizzata per creare una raccolta di <ph id="ph2">&lt;xref:System.Int16&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Restituisce un enumeratore per lo scorrimento dell'istanza di <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> per l'istanza di <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic, c#]</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">L'istruzione <ph id="ph1">`foreach`</ph> del linguaggio C# (<ph id="ph2">`for each`</ph> in Visual Basic) nasconde la complessità degli enumeratori.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Pertanto, si consiglia l'utilizzo di <ph id="ph1">`foreach`</ph>, anziché la modifica diretta dell'enumeratore.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated">Anche il metodo <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> riporta l'enumeratore in questa posizione.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>At this position, calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">In questa posizione, la chiamata <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> genera un'eccezione.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Pertanto, è necessario chiamare il metodo <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> per spostare in avanti l'enumeratore, in corrispondenza del primo elemento della raccolta, prima di leggere il valore di <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> restituisce lo stesso oggetto finché non viene chiamato il metodo <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> o <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> imposta <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> sull'elemento successivo.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituisce <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituire anche <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">Se l'ultima chiamata a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituito <ph id="ph2">`false`</ph>, la chiamata <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> genera un'eccezione.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Per impostare nuovamente la proprietà <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> sul primo elemento della raccolta, è possibile chiamare il metodo <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> seguito da <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l'enumeratore viene invalidato in modo irreversibile e la successiva chiamata al <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> genera un <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Se la raccolta viene modificata tra <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> restituisce l'elemento su cui è stata impostata, anche se l'enumeratore risulta già invalidato.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">L'enumeratore non dispone di accesso esclusivo alla raccolta, pertanto il processo di enumerazione di una raccolta non è di per sé thread-safe.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>While the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.GetEnumerator%2A&gt;</ph> method is not visible to COM clients by default, inheriting the <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> class can expose it and can cause undesirable behavior in COM clients.</source>
          <target state="translated">Mentre il <ph id="ph1">&lt;xref:System.Collections.CollectionBase.GetEnumerator%2A&gt;</ph> (metodo) non è visibile ai client COM per impostazione predefinita, che eredita la <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe può esporre quest'ultimo e può causare un comportamento indesiderato nei client COM.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">Nell'esempio di codice viene implementato il <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e tale implementazione viene utilizzata per creare una raccolta di <ph id="ph2">&lt;xref:System.Int16&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.InnerList">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> containing the list of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Ottiene un <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> contenente l'elenco degli elementi presenti nell'istanza <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.InnerList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> representing the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance itself.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> che rappresenta l'istanza di <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.InnerList">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione O(1).</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.InnerList">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">I metodi On * vengono richiamati solo per l'istanza restituita dal <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> proprietà, ma non sull'istanza restituita dal <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.List">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> containing the list of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Ottiene un <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> contenente l'elenco degli elementi presenti nell'istanza <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.List">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> representing the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance itself.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> che rappresenta l'istanza di <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.List">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">I metodi On * vengono richiamati solo per l'istanza restituita dal <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> proprietà, ma non sull'istanza restituita dal <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.List">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione O(1).</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.List">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">Nell'esempio di codice viene implementato il <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e tale implementazione viene utilizzata per creare una raccolta di <ph id="ph2">&lt;xref:System.Int16&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnClear">
          <source>Performs additional custom processes when clearing the contents of the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Consente di eseguire procedure personalizzate aggiuntive durante l'eliminazione del contenuto dell'istanza <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClear">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action before the collection is cleared.</source>
          <target state="translated">L'implementazione predefinita di questo metodo deve essere sottoposta a override da una classe derivata per eseguire un'azione prima che la raccolta viene cancellata.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClear">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">I metodi On * vengono richiamati solo per l'istanza restituita dal <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> proprietà, ma non sull'istanza restituita dal <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClear">
          <source>If the process fails, the collection reverts back to its previous state.</source>
          <target state="translated">Se il processo non riesce, la raccolta, vengono ripristinate allo stato precedente.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClear">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">L'implementazione predefinita di questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClear">
          <source>This method allows implementers to define processes that must be performed before deleting all the elements from the underlying <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Questo metodo consente agli implementatori di definire i processi che devono essere eseguiti prima di eliminare tutti gli elementi da sottostante <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClear">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">Mediante la definizione di questo metodo, i responsabili dell'implementazione può aggiungere funzionalità ai metodi ereditati senza dover eseguire l'override di tutti gli altri metodi.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClear">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnClear" /&gt;</ph> is invoked before the standard Clear behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnClearComplete" /&gt;</ph> is invoked after the standard Clear behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnClear" /&gt;</ph> viene richiamato prima Clear standard, mentre <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnClearComplete" /&gt;</ph> viene richiamato dopo l'operazione Clear standard.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClear">
          <source>For example, implementers can exempt certain elements from deletion by a global Clear.</source>
          <target state="translated">Ad esempio, i responsabili dell'implementazione possibile escludere determinati elementi vengano cancellati da un Clear globale.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnClearComplete">
          <source>Performs additional custom processes after clearing the contents of the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Esegue procedure personalizzate aggiuntive prima di cancellare il contenuto dell'istanza di <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClearComplete">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action after the collection is cleared.</source>
          <target state="translated">L'implementazione predefinita di questo metodo deve essere sottoposta a override da una classe derivata per eseguire un'azione dopo la raccolta viene cancellata.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClearComplete">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">I metodi On * vengono richiamati solo per l'istanza restituita dal <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> proprietà, ma non sull'istanza restituita dal <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClearComplete">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">L'implementazione predefinita di questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClearComplete">
          <source>This method allows implementers to define processes that must be performed after deleting all the elements from the underlying <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Questo metodo consente agli implementatori di definire i processi che devono essere eseguiti dopo l'eliminazione di tutti gli elementi da sottostante <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClearComplete">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">Mediante la definizione di questo metodo, i responsabili dell'implementazione può aggiungere funzionalità ai metodi ereditati senza dover eseguire l'override di tutti gli altri metodi.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClearComplete">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnClear" /&gt;</ph> is invoked before the standard Clear behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnClearComplete" /&gt;</ph> is invoked after the standard Clear behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnClear" /&gt;</ph> viene richiamato prima Clear standard, mentre <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnClearComplete" /&gt;</ph> viene richiamato dopo l'operazione Clear standard.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>The zero-based index at which to insert <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Indice in base zero in corrispondenza del quale inserire <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>The new value of the element at <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Nuovo valore dell'elemento in corrispondenza di <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>Performs additional custom processes before inserting a new element into the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Esegue procedure personalizzate aggiuntive prima di inserire un nuovo elemento nell'istanza di <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is inserted.</source>
          <target state="translated">L'implementazione predefinita di questo metodo deve essere sottoposta a override da una classe derivata per eseguire un'azione prima che venga inserito l'elemento specificato.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">I metodi On * vengono richiamati solo per l'istanza restituita dal <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> proprietà, ma non sull'istanza restituita dal <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>If the process fails, the collection reverts back to its previous state.</source>
          <target state="translated">Se il processo non riesce, la raccolta, vengono ripristinate allo stato precedente.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">L'implementazione predefinita di questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">Nell'esempio di codice viene implementato il <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e tale implementazione viene utilizzata per creare una raccolta di <ph id="ph2">&lt;xref:System.Int16&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>This method allows implementers to define processes that must be performed before inserting the element into the underlying <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Questo metodo consente agli implementatori di definire i processi che devono essere eseguiti prima di inserire l'elemento nell'oggetto sottostante <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">Mediante la definizione di questo metodo, i responsabili dell'implementazione può aggiungere funzionalità ai metodi ereditati senza dover eseguire l'override di tutti gli altri metodi.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /&gt;</ph> is invoked before the standard Insert behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /&gt;</ph> is invoked after the standard Insert behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /&gt;</ph> viene richiamato prima dell'operazione Insert standard, mentre <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /&gt;</ph> viene richiamato dopo l'operazione Insert standard.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>For example, implementers can restrict which types of objects can be inserted into the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Ad esempio, i responsabili dell'implementazione può limitare i tipi di oggetti è possibile inserire nel <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph> is called prior to this method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph> viene chiamato prima di questo metodo.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>The zero-based index at which to insert <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Indice in base zero in corrispondenza del quale inserire <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>The new value of the element at <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Nuovo valore dell'elemento in corrispondenza di <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>Performs additional custom processes after inserting a new element into the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Esegue procedure personalizzate aggiuntive dopo aver inserito un nuovo elemento nell'istanza di <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is inserted.</source>
          <target state="translated">L'implementazione predefinita di questo metodo deve essere sottoposta a override da una classe derivata per eseguire un'azione quando viene inserito l'elemento specificato.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">I metodi On * vengono richiamati solo per l'istanza restituita dal <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> proprietà, ma non sull'istanza restituita dal <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>The collection reverts back to its previous state if one of the following occurs:</source>
          <target state="translated">La raccolta, vengono ripristinate allo stato precedente se si verifica una delle operazioni seguenti:</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>The process fails.</source>
          <target state="translated">Il processo non riesce.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>This method is overridden to throw an exception.</source>
          <target state="translated">Questo metodo viene sottoposto a override per generare un'eccezione.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">L'implementazione predefinita di questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>This method allows implementers to define processes that must be performed after inserting the element into the underlying <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Questo metodo consente agli implementatori di definire i processi che devono essere eseguiti dopo l'inserimento dell'elemento nel sottostante <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">Mediante la definizione di questo metodo, i responsabili dell'implementazione può aggiungere funzionalità ai metodi ereditati senza dover eseguire l'override di tutti gli altri metodi.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /&gt;</ph> is invoked before the standard Insert behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /&gt;</ph> is invoked after the standard Insert behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /&gt;</ph> viene richiamato prima dell'operazione Insert standard, mentre <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /&gt;</ph> viene richiamato dopo l'operazione Insert standard.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> can be found.</source>
          <target state="translated">Indice in base zero in corrispondenza del quale è possibile trovare <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>The value of the element to remove from <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Valore dell'elemento da rimuovere da <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>Performs additional custom processes when removing an element from the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Consente di eseguire procedure personalizzate aggiuntive durante l'eliminazione di un elemento dall'istanza <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is removed.</source>
          <target state="translated">L'implementazione predefinita di questo metodo deve essere sottoposta a override da una classe derivata per eseguire un'azione prima che venga rimosso l'elemento specificato.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">I metodi On * vengono richiamati solo per l'istanza restituita dal <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> proprietà, ma non sull'istanza restituita dal <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>If the process fails, the collection reverts back to its previous state.</source>
          <target state="translated">Se il processo non riesce, la raccolta, vengono ripristinate allo stato precedente.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">L'implementazione predefinita di questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">Nell'esempio di codice viene implementato il <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e tale implementazione viene utilizzata per creare una raccolta di <ph id="ph2">&lt;xref:System.Int16&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>This method allows implementers to define processes that must be performed before removing the element from the underlying <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Questo metodo consente agli implementatori di definire i processi che devono essere eseguiti prima di rimuovere l'elemento sottostante <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">Mediante la definizione di questo metodo, i responsabili dell'implementazione può aggiungere funzionalità ai metodi ereditati senza dover eseguire l'override di tutti gli altri metodi.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph> is invoked before the standard Remove behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /&gt;</ph> is invoked after the standard Remove behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph> viene richiamato prima dell'installazione standard, mentre <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /&gt;</ph> viene richiamato dopo l'operazione Remove standard.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>For example, implementers can prevent removal of elements by always throwing an exception in <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Ad esempio, i responsabili dell'implementazione può impedire la rimozione di elementi generando un'eccezione in <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph> is called prior to this method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph> viene chiamato prima di questo metodo.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> can be found.</source>
          <target state="translated">Indice in base zero in corrispondenza del quale è possibile trovare <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>The value of the element to remove from <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Valore dell'elemento da rimuovere da <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>Performs additional custom processes after removing an element from the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Esegue procedure personalizzate aggiuntive dopo della rimozione di un elemento dall'istanza di <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is removed.</source>
          <target state="translated">L'implementazione predefinita di questo metodo deve essere sottoposta a override da una classe derivata per eseguire un'azione dopo aver rimosso l'elemento specificato.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">I metodi On * vengono richiamati solo per l'istanza restituita dal <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> proprietà, ma non sull'istanza restituita dal <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>The collection reverts back to its previous state if one of the following occurs:</source>
          <target state="translated">La raccolta, vengono ripristinate allo stato precedente se si verifica una delle operazioni seguenti:</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>The process fails.</source>
          <target state="translated">Il processo non riesce.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>This method is overridden to throw an exception.</source>
          <target state="translated">Questo metodo viene sottoposto a override per generare un'eccezione.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">L'implementazione predefinita di questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>This method allows implementers to define processes that must be performed after removing the element from the underlying <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Questo metodo consente agli implementatori di definire i processi che devono essere eseguiti dopo la rimozione dell'elemento sottostante <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">Mediante la definizione di questo metodo, i responsabili dell'implementazione può aggiungere funzionalità ai metodi ereditati senza dover eseguire l'override di tutti gli altri metodi.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph> is invoked before the standard Remove behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /&gt;</ph> is invoked after the standard Remove behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph> viene richiamato prima dell'installazione standard, mentre <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /&gt;</ph> viene richiamato dopo l'operazione Remove standard.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept> can be found.</source>
          <target state="translated">Indice in base zero in corrispondenza del quale è possibile trovare <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>The value to replace with <bpt id="p1">&lt;c&gt;</bpt>newValue<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Valore da sostituire con <bpt id="p1">&lt;c&gt;</bpt>newValue<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>The new value of the element at <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Nuovo valore dell'elemento in corrispondenza di <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>Performs additional custom processes before setting a value in the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Esegue procedure personalizzate aggiuntive prima di impostare un valore nell'istanza di <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is set.</source>
          <target state="translated">L'implementazione predefinita di questo metodo deve essere sottoposta a override da una classe derivata per eseguire un'azione prima di imposta l'elemento specificato.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">I metodi On * vengono richiamati solo per l'istanza restituita dal <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> proprietà, ma non sull'istanza restituita dal <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>If the process fails, the collection reverts back to its previous state.</source>
          <target state="translated">Se il processo non riesce, la raccolta, vengono ripristinate allo stato precedente.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">L'implementazione predefinita di questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">Nell'esempio di codice viene implementato il <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e tale implementazione viene utilizzata per creare una raccolta di <ph id="ph2">&lt;xref:System.Int16&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>This method allows implementers to define processes that must be performed before setting the specified element in the underlying <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Questo metodo consente agli implementatori di definire i processi che devono essere eseguiti prima di impostare l'elemento specificato nell'oggetto sottostante <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">Mediante la definizione di questo metodo, i responsabili dell'implementazione può aggiungere funzionalità ai metodi ereditati senza dover eseguire l'override di tutti gli altri metodi.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /&gt;</ph> is invoked before the standard Set behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /&gt;</ph> is invoked after the standard Set behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /&gt;</ph> viene richiamato prima il comportamento standard di Set, mentre <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /&gt;</ph> viene richiamato dopo il comportamento standard di Set.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>For example, implementers can restrict which values can be overwritten by performing a check inside <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Ad esempio, i responsabili dell'implementazione può limitare i valori che possono essere sovrascritto dall'esecuzione di un controllo all'interno di <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph> is called prior to this method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph> viene chiamato prima di questo metodo.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept> can be found.</source>
          <target state="translated">Indice in base zero in corrispondenza del quale è possibile trovare <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>The value to replace with <bpt id="p1">&lt;c&gt;</bpt>newValue<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Valore da sostituire con <bpt id="p1">&lt;c&gt;</bpt>newValue<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>The new value of the element at <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Nuovo valore dell'elemento in corrispondenza di <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>Performs additional custom processes after setting a value in the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Esegue procedure personalizzate aggiuntive dopo aver impostato un valore nell'istanza di <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is set.</source>
          <target state="translated">L'implementazione predefinita di questo metodo deve essere sottoposta a override da una classe derivata per eseguire un'azione dopo aver impostato l'elemento specificato.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">I metodi On * vengono richiamati solo per l'istanza restituita dal <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> proprietà, ma non sull'istanza restituita dal <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>The collection reverts back to its previous state if one of the following occurs:</source>
          <target state="translated">La raccolta, vengono ripristinate allo stato precedente se si verifica una delle operazioni seguenti:</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>The process fails.</source>
          <target state="translated">Il processo non riesce.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>This method is overridden to throw an exception.</source>
          <target state="translated">Questo metodo viene sottoposto a override per generare un'eccezione.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">L'implementazione predefinita di questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>This method allows implementers to define processes that must be performed after setting the specified element in the underlying <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Questo metodo consente agli implementatori di definire i processi da eseguire dopo aver impostato l'elemento specificato nel sottostante <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">Mediante la definizione di questo metodo, i responsabili dell'implementazione può aggiungere funzionalità ai metodi ereditati senza dover eseguire l'override di tutti gli altri metodi.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /&gt;</ph> is invoked before the standard Set behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /&gt;</ph> is invoked after the standard Set behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /&gt;</ph> viene richiamato prima il comportamento standard di Set, mentre <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /&gt;</ph> viene richiamato dopo il comportamento standard di Set.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source>The object to validate.</source>
          <target state="translated">Oggetto da convalidare.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source>Performs additional custom processes when validating a value.</source>
          <target state="translated">Esegue processi personalizzati aggiuntivi durante la convalida di un valore.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source>The default implementation of this method determines whether <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, and, if so, throws <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph>.</source>
          <target state="translated">L'implementazione predefinita di questo metodo determina se <ph id="ph1">`value`</ph> è <ph id="ph2">`null`</ph>e, in caso affermativo, genera <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source>It is intended to be overridden by a derived class to perform additional action when the specified element is validated.</source>
          <target state="translated">È progettato per essere sottoposto a override da una classe derivata per eseguire ulteriori operazioni quando l'elemento specificato viene convalidato.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">I metodi On * vengono richiamati solo per l'istanza restituita dal <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> proprietà, ma non sull'istanza restituita dal <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">L'implementazione predefinita di questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">Nell'esempio di codice viene implementato il <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e tale implementazione viene utilizzata per creare una raccolta di <ph id="ph2">&lt;xref:System.Int16&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source>This method allows implementers to define processes that must be performed when executing the standard behavior of the underlying <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Questo metodo consente agli implementatori di definire i processi che devono essere eseguiti durante l'esecuzione del comportamento standard della sottostante <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">Mediante la definizione di questo metodo, i responsabili dell'implementazione può aggiungere funzionalità ai metodi ereditati senza dover eseguire l'override di tutti gli altri metodi.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph> can be used to impose restrictions on the type of objects that are accepted into the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph> Consente di imporre restrizioni relative al tipo di oggetti che vengono accettati nella raccolta.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source>The default implementation prevents <ph id="ph1">&lt;see langword="null" /&gt;</ph> from being added to or removed from the underlying <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">L'implementazione predefinita impedisce <ph id="ph1">&lt;see langword="null" /&gt;</ph> sia aggiunto o rimosso dal sottostante <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph> is called prior to <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph>, and <ph id="ph4">&lt;see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph> viene chiamato prima di <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph>, e <ph id="ph4">&lt;see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">Indice in base zero dell'elemento da rimuovere.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source>Removes the element at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Consente di rimuovere la voce in corrispondenza dell'indice specificato dell'istanza <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source>This method is not overridable.</source>
          <target state="translated">Questo metodo non può essere sottoposto a override.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">In raccolte di elementi adiacenti, quali gli elenchi, gli elementi successivi al punto di inserimento vengono spostati verso il basso per consentire l'inserimento del nuovo elemento.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Se la raccolta è indicizzata, vengono aggiornati anche gli indici degli elementi spostati.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">Questo comportamento non viene applicato alle raccolte in cui gli elementi sono raggruppati concettualmente in bucket, come accade ad esempio per le tabelle hash.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.CollectionBase.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è uguale a o maggiore di <ph id="ph2">&lt;see cref="P:System.Collections.CollectionBase.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source>This method calls <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph>, and <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Questo metodo chiama <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph>, e <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">L'indicizzazione di <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> deve essere in base zero.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Indice in base zero in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> in corrispondenza del quale ha inizio la copia.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the entire <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> to a compatible one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified index of the target array.</source>
          <target state="translated">Copia l'intero oggetto <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> in un oggetto <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> compatibile unidimensionale, a partire dall'indice specificato della matrice di destinazione.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">La matrice specificata deve essere di un tipo compatibile.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> to copy the elements.</source>
          <target state="translated">Questo metodo utilizza <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> per copiare gli elementi.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> è multidimensionale.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Il numero di elementi nell'oggetto <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> di origine è maggiore dello spazio disponibile tra <ph id="ph2">&lt;paramref name="index" /&gt;</ph> e la fine dell'oggetto <ph id="ph3">&lt;paramref name="array" /&gt;</ph> di destinazione.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Non è possibile eseguire il cast automatico del tipo dell'oggetto <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> di origine al tipo dell'oggetto <ph id="ph2">&lt;paramref name="array" /&gt;</ph> di destinazione.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Ottiene un valore che indica se l'accesso a <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> è sincronizzato (thread-safe).</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'accesso a <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> è sincronizzato (thread-safe); in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>A <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> instance is not synchronized.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> istanza non è sincronizzata.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>Derived classes can provide a synchronized version of the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">Classi derivate possono fornire una versione sincronizzata del <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> utilizzando il <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">L'enumerazione di una raccolta non è quindi una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> during the entire enumeration:</source>
          <target state="translated">Esempio di codice seguente viene illustrato come bloccare la raccolta utilizzando la <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> durante l'intera enumerazione:</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione O(1).</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">Oggetto che può essere usato per sincronizzare l'accesso a <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Derived classes can provide their own synchronized version of the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">Classi derivate possono fornire una propria versione sincronizzata del <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> utilizzando il <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>, not directly on the <ph id="ph3">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</source>
          <target state="translated">Il codice di sincronizzazione è necessario eseguire operazioni sul <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> del <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>, non direttamente sul <ph id="ph3">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">In questo modo si garantisce il corretto funzionamento delle raccolte derivate da altri oggetti.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> object.</source>
          <target state="translated">In particolare, viene mantenuta la sincronizzazione con altri thread che potrebbero modificare contemporaneamente il <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">L'enumerazione di una raccolta non è quindi una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> during the entire enumeration:</source>
          <target state="translated">Esempio di codice seguente viene illustrato come bloccare la raccolta utilizzando la <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> durante l'intera enumerazione:</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione O(1).</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to be added to the end of the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> da aggiungere alla fine della classe <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>Adds an object to the end of the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">Aggiunge un oggetto alla fine di <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> index at which the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> has been added.</source>
          <target state="translated">Indice <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> in corrispondenza del quale è stato aggiunto <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> already equals the capacity, the capacity of the list is doubled by automatically reallocating the internal array and copying the existing elements to the new array before the new element is added.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> già pari alla capacità, la capacità dell'elenco viene raddoppiata tramite la riallocazione della matrice interna e copia gli elementi esistenti nella nuova matrice prima che il nuovo elemento viene aggiunto automaticamente.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> is less than the capacity, this method is an O(1) operation.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> è minore della capacità, questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Se la capacità deve essere incrementata per far posto al nuovo elemento, questo metodo diventa un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">Nell'esempio di codice viene implementato il <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e tale implementazione viene utilizzata per creare una raccolta di <ph id="ph2">&lt;xref:System.Int16&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> is read-only.</source>
          <target state="translated">La classe <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> è di sola lettura.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Le dimensioni dell'oggetto <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> sono fisse.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>This method calls <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /&gt;</ph>, and <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Questo metodo chiama <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /&gt;</ph>, e <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> da individuare in <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> contains a specific element.</source>
          <target state="translated">Consente di stabilire se <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> contiene un elemento specifico.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> contains the specified <ph id="ph3">&lt;paramref name="value" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> contiene l'elemento specificato <ph id="ph3">&lt;paramref name="value" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo esegue una ricerca lineare. Pertanto, questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Questo metodo determina l'uguaglianza chiamando <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether <ph id="ph4">`item`</ph> exists.</source>
          <target state="translated">A partire da .NET Framework 2.0, questo metodo utilizza degli oggetti della raccolta <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metodi su <ph id="ph3">`item`</ph> per determinare se <ph id="ph4">`item`</ph> esiste.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">Nelle versioni precedenti di .NET Framework, questa operazione è stata effettuata utilizzando il <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metodi il <ph id="ph3">`item`</ph> parametro per gli oggetti nella raccolta.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">Nell'esempio di codice viene implementato il <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e tale implementazione viene utilizzata per creare una raccolta di <ph id="ph2">&lt;xref:System.Int16&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> da individuare in <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <source>Searches for the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and returns the zero-based index of the first occurrence within the entire <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">Cerca l'oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> specificato e restituisce l'indice in base zero della prima occorrenza all'interno dell'intero insieme <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <source>The zero-based index of the first occurrence of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> within the entire <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>, if found; otherwise, -1.</source>
          <target state="translated">Indice in base zero della prima occorrenza di <ph id="ph1">&lt;paramref name="value" /&gt;</ph> all'interno dell'intero oggetto <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>, se presente; in caso contrario, -1.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo esegue una ricerca lineare. Pertanto, questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Questo metodo determina l'uguaglianza chiamando <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether <ph id="ph4">`item`</ph> exists.</source>
          <target state="translated">A partire da .NET Framework 2.0, questo metodo utilizza degli oggetti della raccolta <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metodi su <ph id="ph3">`item`</ph> per determinare se <ph id="ph4">`item`</ph> esiste.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">Nelle versioni precedenti di .NET Framework, questa operazione è stata effettuata utilizzando il <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metodi il <ph id="ph3">`item`</ph> parametro per gli oggetti nella raccolta.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">Nell'esempio di codice viene implementato il <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e tale implementazione viene utilizzata per creare una raccolta di <ph id="ph2">&lt;xref:System.Int16&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">Indice in base zero in corrispondenza del quale deve essere inserito <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to insert.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> da inserire.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>Inserts an element into the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> at the specified index.</source>
          <target state="translated">Inserisce un elemento in <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> already equals the capacity, the capacity of the list is doubled by automatically reallocating the internal array before the new element is inserted.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> già pari alla capacità, la capacità dell'elenco viene raddoppiata automaticamente mediante la riallocazione della matrice interna prima che venga inserito il nuovo elemento.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>If <ph id="ph1">`index`</ph> is equal to <ph id="ph2">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>, <ph id="ph3">`value`</ph> is added to the end of <ph id="ph4">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</source>
          <target state="translated">Se <ph id="ph1">`index`</ph> è uguale a <ph id="ph2">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>, <ph id="ph3">`value`</ph> viene aggiunto alla fine di <ph id="ph4">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">In raccolte di elementi adiacenti, quali gli elenchi, gli elementi successivi al punto di inserimento vengono spostati verso il basso per consentire l'inserimento del nuovo elemento.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Se la raccolta è indicizzata, vengono aggiornati anche gli indici degli elementi spostati.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">Questo comportamento non viene applicato alle raccolte in cui gli elementi sono raggruppati concettualmente in bucket, come accade ad esempio per le tabelle hash.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">Nell'esempio di codice viene implementato il <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e tale implementazione viene utilizzata per creare una raccolta di <ph id="ph2">&lt;xref:System.Int16&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="P:System.Collections.CollectionBase.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è maggiore di <ph id="ph2">&lt;see cref="P:System.Collections.CollectionBase.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> is read-only.</source>
          <target state="translated">La classe <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> è di sola lettura.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Le dimensioni dell'oggetto <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> sono fisse.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>This method calls <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /&gt;</ph>, and <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Questo metodo chiama <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /&gt;</ph>, e <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Ottiene un valore che indica se <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> ha dimensioni fisse.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> è di dimensioni fisse; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">Una raccolta con dimensioni fisse non consente l'aggiunta o la rimozione di elementi dopo la sua creazione, ma consente la modifica degli elementi esistenti.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">Una raccolta con una dimensione fissa è semplicemente una raccolta con un wrapper che impedisce l'aggiunta e rimozione di elementi. Pertanto, se vengono apportate modifiche alla raccolta sottostante, incluse l'aggiunta o la rimozione di elementi, la raccolta a dimensione fissa riflette le modifiche.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione O(1).</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> is read-only.</source>
          <target state="translated">Ottiene un valore che indica se <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> è di sola lettura.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> è di sola lettura; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Una raccolta di sola lettura non consente l'aggiunta, la rimozione o la modifica di elementi dopo la sua creazione.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Una raccolta di sola lettura è semplicemente una raccolta con un wrapper che impedisce la modifica. Pertanto, se vengono apportate modifiche alla raccolta sottostante, la raccolta di sola lettura riflette le modifiche.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione O(1).</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">Indice in base zero dell'elemento da ottenere o impostare.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">Elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">Questa proprietà consente di accedere a un elemento specifico della raccolta utilizzando la sintassi seguente: <ph id="ph1">`myCollection[index]`</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione o (1). l'impostazione della proprietà è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">Nell'esempio di codice viene implementato il <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e tale implementazione viene utilizzata per creare una raccolta di <ph id="ph2">&lt;xref:System.Int16&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.CollectionBase.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è uguale a o maggiore di <ph id="ph2">&lt;see cref="P:System.Collections.CollectionBase.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <source>When this property is set, the methods <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /&gt;</ph>, and <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /&gt;</ph> are called.</source>
          <target state="translated">Quando questa proprietà è impostata, i metodi <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /&gt;</ph>, e <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /&gt;</ph> vengono chiamati.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to remove from the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> da rimuovere da <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>Removes the first occurrence of a specific object from the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">Rimuove la prima occorrenza di un oggetto specifico da <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> does not contain the specified object, the <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> remains unchanged.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> non contiene l'oggetto specificato, il <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> rimane invariato.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>No exception is thrown.</source>
          <target state="translated">Non viene generata alcuna eccezione.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo esegue una ricerca lineare. Pertanto, questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Questo metodo determina l'uguaglianza chiamando <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">In raccolte di elementi adiacenti, quali gli elenchi, gli elementi successivi al punto di inserimento vengono spostati verso il basso per consentire l'inserimento del nuovo elemento.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Se la raccolta è indicizzata, vengono aggiornati anche gli indici degli elementi spostati.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">Questo comportamento non viene applicato alle raccolte in cui gli elementi sono raggruppati concettualmente in bucket, come accade ad esempio per le tabelle hash.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">Nell'esempio di codice viene implementato il <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e tale implementazione viene utilizzata per creare una raccolta di <ph id="ph2">&lt;xref:System.Int16&gt;</ph> oggetti.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter was not found in the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> object.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="value" /&gt;</ph> non è stato trovato nell'oggetto <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> is read-only.</source>
          <target state="translated">La classe <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> è di sola lettura.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Le dimensioni dell'oggetto <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> sono fisse.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>This method calls <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph>, and <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Questo metodo chiama <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph>, e <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>