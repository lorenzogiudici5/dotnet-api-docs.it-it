<Type Name="ImmutableArrayExtensions" FullName="System.Linq.ImmutableArrayExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3111110917a4df409d40ad718073f26e0bdcf5df" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ImmutableArrayExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableArrayExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Linq.ImmutableArrayExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableArrayExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableArrayExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6815e-101">Override dei metodi di estensione LINQ che offrono maggiore efficienza per <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> rispetto ai metodi LINQ standard</span>
      <span class="sxs-lookup">
        <span data-stu-id="6815e-101">LINQ extension method overrides that offer greater efficiency for <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> than the standard LINQ methods</span>
      </span>
      <span data-ttu-id="6815e-102">**Pacchetto NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">informazioni sulle raccolte non modificabili e su come installarle</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="6815e-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Aggregate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Aggregate&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,T,T&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Aggregate&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`3&lt;!!T, !!T, !!T&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of T) (immutableArray As ImmutableArray(Of T), func As Func(Of T, T, T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Aggregate(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, T, T&gt; ^ func);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="func" Type="System.Func&lt;T,T,T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-103">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-103">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-104">Raccolta a cui applicare la funzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-104">The collection to apply the function to.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="6815e-105">Funzione da richiamare su ogni elemento, in modo cumulativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-105">A function to be invoked on each element, in a cumulative way.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-106">Applica una funzione a una sequenza di elementi in modo cumulativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-106">Applies a function to a sequence of elements in a cumulative way.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-107">Valore finale dopo l'applicazione della funzione cumulativa a tutti gli elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-107">The final value after the cumulative function has been applied to all elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6815e-108"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> metodo rende pi√π semplice per eseguire un calcolo su una sequenza di valori.</span><span class="sxs-lookup"><span data-stu-id="6815e-108"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> method makes it simple to perform a calculation over a sequence of values.</span></span> <span data-ttu-id="6815e-109">Questo metodo funziona chiamando `func` una volta per ogni elemento nell'origine.</span><span class="sxs-lookup"><span data-stu-id="6815e-109">This method works by calling `func` one time for each element in source.</span></span> <span data-ttu-id="6815e-110">Ogni volta che `func` viene chiamato, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passa sia l'elemento dalla sequenza e un valore aggregato (come primo argomento a func).</span><span class="sxs-lookup"><span data-stu-id="6815e-110">Each time `func` is called, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passes both the element from the sequence and an aggregated value (as the first argument to func).</span></span> <span data-ttu-id="6815e-111">Il valore di `seed` parametro viene utilizzato come valore aggregato iniziale.</span><span class="sxs-lookup"><span data-stu-id="6815e-111">The value of the `seed` parameter is used as the initial aggregate value.</span></span> <span data-ttu-id="6815e-112">Il risultato di `func` sostituisce il precedente valore aggregato.</span><span class="sxs-lookup"><span data-stu-id="6815e-112">The result of `func` replaces the previous aggregated value.</span></span> <span data-ttu-id="6815e-113"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Restituisce il risultato finale di `func`.</span><span class="sxs-lookup"><span data-stu-id="6815e-113"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> returns the final result of `func`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TAccumulate,T&gt;">
      <MemberSignature Language="C#" Value="public static TAccumulate Aggregate&lt;TAccumulate,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate,T,TAccumulate&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TAccumulate Aggregate&lt;TAccumulate, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!T, !!TAccumulate&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TAccumulate, T) (immutableArray As ImmutableArray(Of T), seed As TAccumulate, func As Func(Of TAccumulate, T, TAccumulate)) As TAccumulate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAccumulate, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TAccumulate Aggregate(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate, T, TAccumulate&gt; ^ func);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccumulate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Func&lt;TAccumulate,T,TAccumulate&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAccumulate">
          <span data-ttu-id="6815e-114">Tipo del valore accumulato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-114">The type of the accumulated value.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="6815e-115">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-115">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-116">Raccolta a cui applicare la funzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-116">The collection to apply the function to.</span>
          </span>
        </param>
        <param name="seed">
          <span data-ttu-id="6815e-117">Valore iniziale dell'accumulatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-117">The initial accumulator value.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="6815e-118">Funzione da richiamare su ogni elemento, in modo cumulativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-118">A function to be invoked on each element, in a cumulative way.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-119">Applica una funzione a una sequenza di elementi in modo cumulativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-119">Applies a function to a sequence of elements in a cumulative way.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-120">Valore finale dell'accumulatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-120">The final accumulator value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6815e-121"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> metodo rende pi√π semplice per eseguire un calcolo su una sequenza di valori.</span><span class="sxs-lookup"><span data-stu-id="6815e-121"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> method makes it simple to perform a calculation over a sequence of values.</span></span> <span data-ttu-id="6815e-122">Questo metodo funziona chiamando `func` una volta per ogni elemento nell'origine.</span><span class="sxs-lookup"><span data-stu-id="6815e-122">This method works by calling `func` one time for each element in source.</span></span> <span data-ttu-id="6815e-123">Ogni volta che `func` viene chiamato, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passa sia l'elemento dalla sequenza e un valore aggregato (come primo argomento a func).</span><span class="sxs-lookup"><span data-stu-id="6815e-123">Each time `func` is called, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passes both the element from the sequence and an aggregated value (as the first argument to func).</span></span> <span data-ttu-id="6815e-124">Il valore di `seed` parametro viene utilizzato come valore aggregato iniziale.</span><span class="sxs-lookup"><span data-stu-id="6815e-124">The value of the `seed` parameter is used as the initial aggregate value.</span></span> <span data-ttu-id="6815e-125">Il risultato di `func` sostituisce il precedente valore aggregato.</span><span class="sxs-lookup"><span data-stu-id="6815e-125">The result of `func` replaces the previous aggregated value.</span></span> <span data-ttu-id="6815e-126"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Restituisce il risultato finale di `func`.</span><span class="sxs-lookup"><span data-stu-id="6815e-126"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> returns the final result of `func`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TAccumulate,TResult,T&gt;">
      <MemberSignature Language="C#" Value="public static TResult Aggregate&lt;TAccumulate,TResult,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate,T,TAccumulate&gt; func, Func&lt;TAccumulate,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Aggregate&lt;TAccumulate, TResult, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!T, !!TAccumulate&gt; func, class System.Func`2&lt;!!TAccumulate, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TAccumulate, TResult, T) (immutableArray As ImmutableArray(Of T), seed As TAccumulate, func As Func(Of TAccumulate, T, TAccumulate), resultSelector As Func(Of TAccumulate, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAccumulate, typename TResult, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Aggregate(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate, T, TAccumulate&gt; ^ func, Func&lt;TAccumulate, TResult&gt; ^ resultSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Func&lt;TAccumulate,T,TAccumulate&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TAccumulate,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAccumulate">
          <span data-ttu-id="6815e-127">Tipo del valore accumulato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-127">The type of the accumulated value.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="6815e-128">Tipo del risultato restituito dal selettore di risultato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-128">The type of result returned by the result selector.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="6815e-129">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-129">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-130">Raccolta a cui applicare la funzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-130">The collection to apply the function to.</span>
          </span>
        </param>
        <param name="seed">
          <span data-ttu-id="6815e-131">Valore iniziale dell'accumulatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-131">The initial accumulator value.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="6815e-132">Funzione da richiamare su ogni elemento, in modo cumulativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-132">A function to be invoked on each element, in a cumulative way.</span>
          </span>
        </param>
        <param name="resultSelector">To be added.</param>
        <summary>
          <span data-ttu-id="6815e-133">Applica una funzione a una sequenza di elementi in modo cumulativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-133">Applies a function to a sequence of elements in a cumulative way.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-134">Valore finale dell'accumulatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-134">The final accumulator value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6815e-135"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> metodo rende pi√π semplice per eseguire un calcolo su una sequenza di valori.</span><span class="sxs-lookup"><span data-stu-id="6815e-135"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> method makes it simple to perform a calculation over a sequence of values.</span></span> <span data-ttu-id="6815e-136">Questo metodo funziona chiamando `func` una volta per ogni elemento nell'origine.</span><span class="sxs-lookup"><span data-stu-id="6815e-136">This method works by calling `func` one time for each element in source.</span></span> <span data-ttu-id="6815e-137">Ogni volta che `func` viene chiamato, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passa sia l'elemento dalla sequenza e un valore aggregato (come primo argomento a func).</span><span class="sxs-lookup"><span data-stu-id="6815e-137">Each time `func` is called, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passes both the element from the sequence and an aggregated value (as the first argument to func).</span></span> <span data-ttu-id="6815e-138">Il valore di `seed` parametro viene utilizzato come valore aggregato iniziale.</span><span class="sxs-lookup"><span data-stu-id="6815e-138">The value of the `seed` parameter is used as the initial aggregate value.</span></span> <span data-ttu-id="6815e-139">Il risultato di `func` sostituisce il precedente valore aggregato.</span><span class="sxs-lookup"><span data-stu-id="6815e-139">The result of `func` replaces the previous aggregated value.</span></span> <span data-ttu-id="6815e-140"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Restituisce il risultato finale di `func`.</span><span class="sxs-lookup"><span data-stu-id="6815e-140"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> returns the final result of `func`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="All&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool All&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool All&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool All(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-141">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-141">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-142">Matrice in cui cercare le corrispondenze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-142">The array to check for matches.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="6815e-143">Predicato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-143">The predicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-144">Ottiene un valore che indica se tutti gli elementi nella matrice corrispondono a una determinata condizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-144">Gets a value indicating whether all elements in this array match a given condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-145">
            <see langword="true" /> se tutti gli elementi della sequenza di origine superano il test per il predicato specificato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-145">
              <see langword="true" /> if every element of the source sequence passes the test in the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of T) (immutableArray As ImmutableArray(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-146">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-146">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-147">Matrice in cui cercare gli elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-147">The array to check for elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-148">Ottiene un valore che indica se la matrice contiene elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-148">Gets a value indicating whether the array contains any elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-149">
            <see langword="true" /> se la matrice contiene elementi; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-149">
              <see langword="true" /> if the array contains an elements; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-150">Tipo di elementi nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-150">The type of elements in the array.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="6815e-151">Generatore in cui cercare le corrispondenze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-151">The builder to check for matches.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-152">Restituisce un valore che indica se questa raccolta contiene elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-152">Returns a value indicating whether this collection contains any elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-153">
            <see langword="true" /> se il generatore della matrice contiene elementi; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-153">
              <see langword="true" /> if the array builder contains any elements; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-154">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-154">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-155">Matrice in cui cercare gli elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-155">The array to check for elements.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="6815e-156">Delegato che definisce la condizione a cui deve corrispondere un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-156">The delegate that defines the condition to match to an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-157">Ottiene un valore che indica se la matrice contiene elementi che corrispondono a una condizione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-157">Gets a value indicating whether the array contains any elements that match a specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-158">
            <see langword="true" /> se un elemento corrisponde alla condizione specificata; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-158">
              <see langword="true" /> if an element matches the specified condition; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementAt&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ElementAt&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ElementAt&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAt(Of T) (immutableArray As ImmutableArray(Of T), index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T ElementAt(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-159">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-159">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-160">Matrice in cui trovare un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-160">The array to find an element in.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6815e-161">Indice per l'elemento da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-161">The index for the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-162">Restituisce l'elemento in corrispondenza dell'indice specificato nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-162">Returns the element at a specified index in the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-163">Elemento in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-163">The item at the specified index.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementAtOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ElementAtOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ElementAtOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAtOrDefault(Of T) (immutableArray As ImmutableArray(Of T), index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T ElementAtOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-164">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-164">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-165">Matrice in cui trovare un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-165">The array to find an element in.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6815e-166">Indice per l'elemento da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-166">The index for the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-167">Restituisce l'elemento in corrispondenza di un indice specificato in una sequenza o un valore predefinito se l'indice √® esterno all'intervallo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-167">Returns the element at a specified index in a sequence or a default value if the index is out of range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-168">Elemento in corrispondenza dell'indice specificato o il valore predefinito se non viene trovato l'indice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-168">The item at the specified index, or the default value if the index is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="First&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T First&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T First&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T First(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-169">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-169">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-170">Matrice da cui ottenere un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-170">The array to get an item from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-171">Restituisce il primo elemento in una matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-171">Returns the first element in an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-172">Primo elemento nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-172">The first item in the array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6815e-173">Se la matrice √® vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-173">If the array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="First&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T First&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T First&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T First(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-174">Tipo di elementi nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-174">The type of items in the array.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="6815e-175">Generatore da cui recuperare un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-175">The builder to retrieve an item from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-176">Restituisce il primo elemento della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-176">Returns the first element in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-177">Primo elemento nell'elenco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-177">The first item in the list.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6815e-178">Se la matrice √® vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-178">If the array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="First&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T First&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T First&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T First(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-179">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-179">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-180">Matrice da cui ottenere un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-180">The array to get an item from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="6815e-181">Delegato che definisce le condizioni dell'elemento da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-181">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-182">Restituisce il primo elemento in una sequenza che soddisfa una condizione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-182">Returns the first element in a sequence that satisfies a specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-183">Primo elemento nell'elenco, se soddisfa la condizione specificata da <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-183">The first item in the list if it meets the condition specified by <paramref name="predicate" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6815e-184">Se la matrice √® vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-184">If the array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FirstOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FirstOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T FirstOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-185">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-185">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-186">Matrice da cui recuperare gli elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-186">The array to retrieve items from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-187">Restituisce il primo elemento di una sequenza o un valore predefinito se la sequenza non contiene elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-187">Returns the first element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-188">Primo elemento nell'elenco, se trovato; in caso contrario, il valore predefinito per il tipo di elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-188">The first item in the list, if found; otherwise the default value for the item type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FirstOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FirstOrDefault&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T FirstOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-189">Tipo di elemento contenuto nel generatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-189">The type of item in the builder.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="6815e-190">Generatore da cui recuperare un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-190">The builder to retrieve an element from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-191">Restituisce il primo elemento nella raccolta o il valore predefinito se la raccolta √® vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-191">Returns the first element in the collection, or the default value if the collection is empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-192">Primo elemento nell'elenco, se trovato; in caso contrario, il valore predefinito per il tipo di elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-192">The first item in the list, if found; otherwise the default value for the item type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FirstOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FirstOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T FirstOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-193">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-193">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-194">Matrice da cui recuperare gli elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-194">The array to retrieve elments from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="6815e-195">Delegato che definisce le condizioni dell'elemento da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-195">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-196">Restituisce il primo elemento della sequenza che soddisfa una condizione specificata o un valore predefinito se tale elemento non viene trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-196">Returns the first element of the sequence that satisfies a condition or a default value if no such element is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-197">Primo elemento nell'elenco, se trovato; in caso contrario, il valore predefinito per il tipo di elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-197">The first item in the list, if found; otherwise the default value for the item type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Last&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Last&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Last(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-198">Tipo di elemento contenuto dalla matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-198">The type of element contained by the array.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-199">Matrice da cui recuperare gli elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-199">The array to retrieve items from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-200">Restituisce l'ultimo elemento della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-200">Returns the last element of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-201">Ultimo elemento nella matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-201">The last element in the array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6815e-202">Viene generato se la raccolta √® vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-202">Thrown if the collection is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Last&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Last&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Last(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-203">Tipo di elemento contenuto nel generatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-203">The type of item in the builder.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="6815e-204">Generatore da cui recuperare gli elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-204">The builder to retrieve elements from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-205">Restituisce l'ultimo elemento della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-205">Returns the last element in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-206">Ultimo elemento nel generatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-206">The last element in the builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6815e-207">Viene generato se la raccolta √® vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-207">Thrown if the collection is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Last&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Last&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Last(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-208">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-208">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-209">Matrice da cui recuperare gli elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-209">The array to retrieve elements from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="6815e-210">Delegato che definisce le condizioni dell'elemento da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-210">The delegate that defines the conditions of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-211">Restituisce l'ultimo elemento di una sequenza che soddisfa una condizione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-211">Returns the last element of a sequence that satisfies a specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-212">Ultimo elemento della matrice che soddisfa la condizione <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-212">The last element of the array that satisfies the <paramref name="predicate" /> condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6815e-213">Viene generato se la raccolta √® vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-213">Thrown if the collection is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LastOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LastOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T LastOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-214">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-214">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-215">Matrice da cui recuperare gli elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-215">The array to retrieve items from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-216">Restituisce l'ultimo elemento di una sequenza o un valore predefinito se la sequenza non contiene elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-216">Returns the last element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-217">Ultimo elemento di una sequenza o un valore predefinito se la sequenza non contiene elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-217">The last element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LastOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LastOrDefault&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T LastOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-218">Tipo di elemento contenuto nel generatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-218">The type of item in the builder.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="6815e-219">Generatore da cui recuperare un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-219">The builder to retrieve an element from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-220">Restituisce l'ultimo elemento nella raccolta o il valore predefinito se la raccolta √® vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-220">Returns the last element in the collection, or the default value if the collection is empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-221">Ultimo elemento di una sequenza o un valore predefinito se la sequenza non contiene elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-221">The last element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LastOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LastOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T LastOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-222">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-222">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-223">Matrice da cui recuperare un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-223">The array to retrieve an element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="6815e-224">Delegato che definisce le condizioni dell'elemento da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-224">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-225">Restituisce l'ultimo elemento di una sequenza che soddisfa una condizione specificata o un valore predefinito se tale elemento non viene trovato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-225">Returns the last element of a sequence that satisfies a condition or a default value if no such element is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-226">Ultimo elemento di una sequenza o un valore predefinito se la sequenza non contiene elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-226">The last element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;T,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TResult&gt; Select&lt;T,TResult&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; Select&lt;T, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of T, TResult) (immutableArray As ImmutableArray(Of T), selector As Func(Of T, TResult)) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ Select(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TResult&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;T,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-227">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-227">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="6815e-228">Tipo di elemento di risultato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-228">The type of the result element.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-229">Matrice non modificabile da cui selezionare gli elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-229">The immutable array to select items from.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="6815e-230">Funzione di trasformazione da applicare a ogni elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-230">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-231">Proietta ogni elemento di una sequenza in un nuovo form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-231">Projects each element of a sequence into a new form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-232">Oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> i cui elementi sono il risultato ottenuto richiamando una funzione di trasformazione su ogni elemento di origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-232">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are the result of invoking the transform function on each element of source.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TCollection,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TResult&gt; SelectMany&lt;TSource,TCollection,TResult&gt; (this System.Collections.Immutable.ImmutableArray&lt;TSource&gt; immutableArray, Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt; collectionSelector, Func&lt;TSource,TCollection,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TCollection, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; immutableArray, class System.Func`2&lt;!!TSource, class System.Collections.Generic.IEnumerable`1&lt;!!TCollection&gt;&gt; collectionSelector, class System.Func`3&lt;!!TSource, !!TCollection, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TCollection, TResult) (immutableArray As ImmutableArray(Of TSource), collectionSelector As Func(Of TSource, IEnumerable(Of TCollection)), resultSelector As Func(Of TSource, TCollection, TResult)) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TCollection, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ SelectMany(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; immutableArray, Func&lt;TSource, System::Collections::Generic::IEnumerable&lt;TCollection&gt; ^&gt; ^ collectionSelector, Func&lt;TSource, TCollection, TResult&gt; ^ resultSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TCollection" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" RefType="this" />
        <Parameter Name="collectionSelector" Type="System.Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TSource,TCollection,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="6815e-233">Il tipo degli elementi di <c>immutableArray</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-233">The type of the elements of <c>immutableArray</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TCollection">
          <span data-ttu-id="6815e-234">Il tipo degli elementi intermedi raccolti da <c>collectionSelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-234">The type of the intermediate elements collected by <c>collectionSelector</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="6815e-235">Tipo degli elementi della sequenza risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-235">The type of the elements of the resulting sequence.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-236">Matrice non modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-236">The immutable array.</span>
          </span>
        </param>
        <param name="collectionSelector">
          <span data-ttu-id="6815e-237">Funzione di trasformazione da applicare a ogni elemento della sequenza di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-237">A transform function to apply to each element of the input sequence.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="6815e-238">Funzione di trasformazione da applicare a ogni elemento della sequenza intermedia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-238">A transform function to apply to each element of the intermediate sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-239">Proietta ogni elemento di una sequenza a un oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" />, semplifica le sequenze risultanti in un'unica sequenza e chiama una funzione del selettore di risultato su ogni elemento al suo interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-239">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" />,             flattens the resulting sequences into one sequence, and invokes a result             selector function on each element therein.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-240">Oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> i cui elementi sono ottenuti chiamando la funzione di trasformazione uno a molti <paramref name="collectionSelector" /> su ogni elemento di <paramref name="immutableArray" /> ed eseguendo quindi il mapping di ogni elemento di tale sequenza e del corrispondente elemento di origine a un elemento di risultato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-240">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are the result             of invoking the one-to-many transform function <paramref name="collectionSelector" /> on each             element of <paramref name="immutableArray" /> and then mapping each of those sequence elements and their             corresponding source element to a result element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TDerived,TBase&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TDerived,TBase&gt; (this System.Collections.Immutable.ImmutableArray&lt;TBase&gt; immutableArray, System.Collections.Generic.IEnumerable&lt;TDerived&gt; items, System.Collections.Generic.IEqualityComparer&lt;TBase&gt; comparer = null) where TDerived : TBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;(!!TBase) TDerived, TBase&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TBase&gt; immutableArray, class System.Collections.Generic.IEnumerable`1&lt;!!TDerived&gt; items, class System.Collections.Generic.IEqualityComparer`1&lt;!!TBase&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TDerived As TBase, TBase As TBase) (immutableArray As ImmutableArray(Of TBase), items As IEnumerable(Of TDerived), Optional comparer As IEqualityComparer(Of TBase) = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>TBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TBase" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TBase&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;TDerived&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TBase&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived">
          <span data-ttu-id="6815e-241">Tipo di elemento nella matrice confrontata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-241">The type of element in the compared array.</span>
          </span>
        </typeparam>
        <typeparam name="TBase">
          <span data-ttu-id="6815e-242">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-242">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-243">Matrice da usare per il confronto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-243">The array to use for comparison.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="6815e-244">Elementi da usare per il confronto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-244">The items to use for comparison.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="6815e-245">Operatore di confronto da usare per verificare l'uguaglianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-245">The comparer to use to check for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-246">Determina se due sequenze sono uguali secondo un operatore di confronto di uguaglianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-246">Determines whether two sequences are equal according to an equality comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-247">
            <see langword="true" /> per indicare che le sequenze sono uguali; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-247">
              <see langword="true" /> to indicate the sequences are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TDerived,TBase&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TDerived,TBase&gt; (this System.Collections.Immutable.ImmutableArray&lt;TBase&gt; immutableArray, System.Collections.Immutable.ImmutableArray&lt;TDerived&gt; items, System.Collections.Generic.IEqualityComparer&lt;TBase&gt; comparer = null) where TDerived : TBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;(!!TBase) TDerived, TBase&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TBase&gt; immutableArray, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TDerived&gt; items, class System.Collections.Generic.IEqualityComparer`1&lt;!!TBase&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TDerived As TBase, TBase As TBase) (immutableArray As ImmutableArray(Of TBase), items As ImmutableArray(Of TDerived), Optional comparer As IEqualityComparer(Of TBase) = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>TBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TBase" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TBase&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TDerived&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TBase&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived">
          <span data-ttu-id="6815e-248">Tipo di elemento nella matrice confrontata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-248">The type of element in the compared array.</span>
          </span>
        </typeparam>
        <typeparam name="TBase">
          <span data-ttu-id="6815e-249">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-249">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-250">Matrice da usare per il confronto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-250">The array to use for comparison.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="6815e-251">Elementi da usare per il confronto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-251">The items to use for comparison.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="6815e-252">Operatore di confronto da usare per verificare l'uguaglianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-252">The comparer to use to check for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-253">Determina se due sequenze sono uguali secondo un operatore di confronto di uguaglianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-253">Determines whether two sequences are equal according to an equality comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-254">
            <see langword="true" /> per indicare che le sequenze sono uguali; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-254">
              <see langword="true" /> to indicate the sequences are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TDerived,TBase&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TDerived,TBase&gt; (this System.Collections.Immutable.ImmutableArray&lt;TBase&gt; immutableArray, System.Collections.Immutable.ImmutableArray&lt;TDerived&gt; items, Func&lt;TBase,TBase,bool&gt; predicate) where TDerived : TBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;(!!TBase) TDerived, TBase&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TBase&gt; immutableArray, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TDerived&gt; items, class System.Func`3&lt;!!TBase, !!TBase, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TDerived As TBase, TBase As TBase) (immutableArray As ImmutableArray(Of TBase), items As ImmutableArray(Of TDerived), predicate As Func(Of TBase, TBase, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDerived, typename TBase&gt;&#xA; where TDerived : TBase[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Collections::Immutable::ImmutableArray&lt;TBase&gt; immutableArray, System::Collections::Immutable::ImmutableArray&lt;TDerived&gt; items, Func&lt;TBase, TBase, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>TBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TBase" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TBase&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TDerived&gt;" />
        <Parameter Name="predicate" Type="System.Func&lt;TBase,TBase,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived">
          <span data-ttu-id="6815e-255">Tipo di elemento nella matrice confrontata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-255">The type of element in the compared array.</span>
          </span>
        </typeparam>
        <typeparam name="TBase">
          <span data-ttu-id="6815e-256">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-256">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-257">Matrice da usare per il confronto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-257">The array to use for comparison.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="6815e-258">Elementi da usare per il confronto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-258">The items to use for comparison.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="6815e-259">Operatore di confronto da usare per verificare l'uguaglianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-259">The comparer to use to check for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-260">Determina se due sequenze sono uguali secondo un operatore di confronto di uguaglianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-260">Determines whether two sequences are equal according to an equality comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-261">
            <see langword="true" /> per indicare che le sequenze sono uguali; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-261">
              <see langword="true" /> to indicate the sequences are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Single&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Single&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Single(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-262">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-262">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-263">Matrice da cui recuperare l'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-263">The array to retrieve the element from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-264">Restituisce l'unico elemento di una sequenza e genera un'eccezione se nella sequenza non √® presente esattamente un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-264">Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-265">Elemento nella sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-265">The element in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Single&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Single&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Single(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-266">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-266">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">To be added.</param>
        <param name="predicate">To be added.</param>
        <summary>
          <span data-ttu-id="6815e-267">Restituisce l'unico elemento di una sequenza che soddisfa una condizione specificata e genera un'eccezione se esistono pi√π elementi di tale tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-267">Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-268">Restituisce <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-268">Returns <see cref="T:System.Boolean" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T SingleOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T SingleOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T SingleOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-269">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-269">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-270">Matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-270">The array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-271">Restituisce l'unico elemento della matrice o un valore predefinito se la sequenza √® vuota. Questo metodo genera un'eccezione se esiste pi√π di un elemento nella sequenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-271">Returns the only element of the array, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-272">Elemento nella matrice o il valore predefinito se la matrice √® vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-272">The element in the array, or the default value if the array is empty.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6815e-273">
            <paramref name="source" /> contiene pi√π di un elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-273">
              <paramref name="source" /> contains more than one element.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T SingleOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T SingleOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T SingleOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-274">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-274">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-275">Matrice da cui ottenere l'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-275">The array to get the element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="6815e-276">Condizione che l'elemento deve soddisfare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-276">The condition the element must satisfy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-277">Restituisce l'unico elemento di una sequenza che soddisfa una condizione specificata o un valore predefinito se tale elemento esiste. Questo metodo genera un'eccezione se pi√π di un elemento soddisfa la condizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-277">Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-278">Elemento, se soddisfa la condizione specificata; in caso contrario, l'elemento predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-278">The element if it satisfies the specified condition; otherwise the default element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6815e-279">Pi√π di un elemento soddisfa la condizione in <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-279">More than one element satisfies the condition in <paramref name="predicate" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToArray&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] ToArray&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] ToArray&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToArray``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToArray(Of T) (immutableArray As ImmutableArray(Of T)) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;T&gt; ^ ToArray(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-280">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-280">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">To be added.</param>
        <summary>
          <span data-ttu-id="6815e-281">Copia il contenuto di questa matrice in una matrice modificabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-281">Copies the contents of this array to a mutable array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-282">Matrice di cui √® stata creata la nuova istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-282">The newly instantiated array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,T&gt; ToDictionary&lt;TKey,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!T&gt; ToDictionary&lt;TKey, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey)) As Dictionary(Of TKey, T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, T&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="6815e-283">Tipo di chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-283">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="6815e-284">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-284">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-285">Matrice da cui creare un dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-285">The array to create a dictionary from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="6815e-286">Selettore di chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-286">The key selector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-287">Crea un dizionario basato sul contenuto di questa matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-287">Creates a dictionary based on the contents of this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-288">Dizionario appena inizializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-288">The newly initialized dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,T&gt; ToDictionary&lt;TKey,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!T&gt; ToDictionary&lt;TKey, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, T&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="6815e-289">Tipo di chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-289">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="6815e-290">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-290">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-291">Matrice da cui creare un dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-291">The array to create a dictionary from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="6815e-292">Selettore di chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-292">The key selector.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="6815e-293">Operatore di confronto con cui inizializzare il dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-293">The comparer to initialize the dictionary with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-294">Crea un dizionario basato sul contenuto di questa matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-294">Creates a dictionary based on the contents of this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-295">Dizionario appena inizializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-295">The newly initialized dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,TElement,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TElement&gt; ToDictionary&lt;TKey,TElement,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector, Func&lt;T,TElement&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TElement&gt; ToDictionary&lt;TKey, TElement, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector, class System.Func`2&lt;!!T, !!TElement&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, TElement, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey), elementSelector As Func(Of T, TElement)) As Dictionary(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TElement, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TElement&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector, Func&lt;T, TElement&gt; ^ elementSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;T,TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="6815e-296">Tipo di chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-296">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="6815e-297">Tipo dell'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-297">The type of the element.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="6815e-298">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-298">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-299">Matrice da cui creare un dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-299">The array to create a dictionary from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="6815e-300">Selettore di chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-300">The key selector.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="6815e-301">Selettore di elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-301">The element selector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-302">Crea un dizionario basato sul contenuto di questa matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-302">Creates a dictionary based on the contents of this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-303">Dizionario appena inizializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-303">The newly initialized dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,TElement,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TElement&gt; ToDictionary&lt;TKey,TElement,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector, Func&lt;T,TElement&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TElement&gt; ToDictionary&lt;TKey, TElement, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector, class System.Func`2&lt;!!T, !!TElement&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, TElement, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey), elementSelector As Func(Of T, TElement), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TElement, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TElement&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector, Func&lt;T, TElement&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;T,TElement&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="6815e-304">Tipo di chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-304">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="6815e-305">Tipo dell'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-305">The type of the element.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="6815e-306">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-306">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-307">Matrice da cui creare un dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-307">The array to create a dictionary from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="6815e-308">Selettore di chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-308">The key selector.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="6815e-309">Selettore di elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-309">The element selector.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="6815e-310">Operatore di confronto con cui inizializzare il dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-310">The comparer to initialize the dictionary with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-311">Crea un dizionario basato sul contenuto di questa matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-311">Creates a dictionary based on the contents of this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-312">Dizionario appena inizializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-312">The newly initialized dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; Where&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; Where&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ Where(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6815e-313">Tipo di elemento contenuto dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-313">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="6815e-314">Matrice da filtrare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-314">The array to filter.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="6815e-315">Condizione da usare per filtrare il contenuto della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-315">The condition to use for filtering the array content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6815e-316">Filtra una sequenza di valori in base a un predicato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-316">Filters a sequence of values based on a predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6815e-317">Restituisce <see cref="T:System.Collections.Generic.IEnumerable`1" /> che contiene gli elementi che soddisfano la condizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6815e-317">Returns <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains elements that meet the condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>