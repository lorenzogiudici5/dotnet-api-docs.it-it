<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ImmutableArrayExtensions.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53111110917a4df409d40ad718073f26e0bdcf5df.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3111110917a4df409d40ad718073f26e0bdcf5df</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Linq.ImmutableArrayExtensions">
          <source>LINQ extension method overrides that offer greater efficiency for <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableArray`1" /&gt;</ph> than the standard LINQ methods</source>
          <target state="translated">Override dei metodi di estensione LINQ che offrono maggiore efficienza per <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableArray`1" /&gt;</ph> rispetto ai metodi LINQ standard</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Linq.ImmutableArrayExtensions">
          <source><bpt id="p1">**</bpt>NuGet package<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>about immutable collections and how to install<ept id="p3">&lt;/see&gt;</ept>)</source>
          <target state="translated"><bpt id="p1">**</bpt>Pacchetto NuGet<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>informazioni sulle raccolte non modificabili e su come installarle<ept id="p3">&lt;/see&gt;</ept>)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})">
          <source>The collection to apply the function to.</source>
          <target state="translated">Raccolta a cui applicare la funzione.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})">
          <source>A function to be invoked on each element, in a cumulative way.</source>
          <target state="translated">Funzione da richiamare su ogni elemento, in modo cumulativo.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})">
          <source>Applies a function to a sequence of elements in a cumulative way.</source>
          <target state="translated">Applica una funzione a una sequenza di elementi in modo cumulativo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})">
          <source>The final value after the cumulative function has been applied to all elements.</source>
          <target state="translated">Valore finale dopo l'applicazione della funzione cumulativa a tutti gli elementi.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})">
          <source><ph id="ph1">&lt;xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A&gt;</ph> method makes it simple to perform a calculation over a sequence of values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A&gt;</ph> metodo rende pi√π semplice per eseguire un calcolo su una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})">
          <source>This method works by calling <ph id="ph1">`func`</ph> one time for each element in source.</source>
          <target state="translated">Questo metodo funziona chiamando <ph id="ph1">`func`</ph> una volta per ogni elemento nell'origine.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})">
          <source>Each time <ph id="ph1">`func`</ph> is called, <ph id="ph2">&lt;xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A&gt;</ph> passes both the element from the sequence and an aggregated value (as the first argument to func).</source>
          <target state="translated">Ogni volta che <ph id="ph1">`func`</ph> viene chiamato, <ph id="ph2">&lt;xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A&gt;</ph> passa sia l'elemento dalla sequenza e un valore aggregato (come primo argomento a func).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})">
          <source>The value of the <ph id="ph1">`seed`</ph> parameter is used as the initial aggregate value.</source>
          <target state="translated">Il valore di <ph id="ph1">`seed`</ph> parametro viene utilizzato come valore aggregato iniziale.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})">
          <source>The result of <ph id="ph1">`func`</ph> replaces the previous aggregated value.</source>
          <target state="translated">Il risultato di <ph id="ph1">`func`</ph> sostituisce il precedente valore aggregato.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})">
          <source><ph id="ph1">&lt;xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A&gt;</ph> returns the final result of <ph id="ph2">`func`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A&gt;</ph> Restituisce il risultato finale di <ph id="ph2">`func`</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>The type of the accumulated value.</source>
          <target state="translated">Tipo del valore accumulato.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>The collection to apply the function to.</source>
          <target state="translated">Raccolta a cui applicare la funzione.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>The initial accumulator value.</source>
          <target state="translated">Valore iniziale dell'accumulatore.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>A function to be invoked on each element, in a cumulative way.</source>
          <target state="translated">Funzione da richiamare su ogni elemento, in modo cumulativo.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>Applies a function to a sequence of elements in a cumulative way.</source>
          <target state="translated">Applica una funzione a una sequenza di elementi in modo cumulativo.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>The final accumulator value.</source>
          <target state="translated">Valore finale dell'accumulatore.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source><ph id="ph1">&lt;xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A&gt;</ph> method makes it simple to perform a calculation over a sequence of values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A&gt;</ph> metodo rende pi√π semplice per eseguire un calcolo su una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>This method works by calling <ph id="ph1">`func`</ph> one time for each element in source.</source>
          <target state="translated">Questo metodo funziona chiamando <ph id="ph1">`func`</ph> una volta per ogni elemento nell'origine.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>Each time <ph id="ph1">`func`</ph> is called, <ph id="ph2">&lt;xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A&gt;</ph> passes both the element from the sequence and an aggregated value (as the first argument to func).</source>
          <target state="translated">Ogni volta che <ph id="ph1">`func`</ph> viene chiamato, <ph id="ph2">&lt;xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A&gt;</ph> passa sia l'elemento dalla sequenza e un valore aggregato (come primo argomento a func).</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>The value of the <ph id="ph1">`seed`</ph> parameter is used as the initial aggregate value.</source>
          <target state="translated">Il valore di <ph id="ph1">`seed`</ph> parametro viene utilizzato come valore aggregato iniziale.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>The result of <ph id="ph1">`func`</ph> replaces the previous aggregated value.</source>
          <target state="translated">Il risultato di <ph id="ph1">`func`</ph> sostituisce il precedente valore aggregato.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source><ph id="ph1">&lt;xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A&gt;</ph> returns the final result of <ph id="ph2">`func`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A&gt;</ph> Restituisce il risultato finale di <ph id="ph2">`func`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>The type of the accumulated value.</source>
          <target state="translated">Tipo del valore accumulato.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>The type of result returned by the result selector.</source>
          <target state="translated">Tipo del risultato restituito dal selettore di risultato.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>The collection to apply the function to.</source>
          <target state="translated">Raccolta a cui applicare la funzione.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>The initial accumulator value.</source>
          <target state="translated">Valore iniziale dell'accumulatore.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>A function to be invoked on each element, in a cumulative way.</source>
          <target state="translated">Funzione da richiamare su ogni elemento, in modo cumulativo.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>Applies a function to a sequence of elements in a cumulative way.</source>
          <target state="translated">Applica una funzione a una sequenza di elementi in modo cumulativo.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>The final accumulator value.</source>
          <target state="translated">Valore finale dell'accumulatore.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source><ph id="ph1">&lt;xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A&gt;</ph> method makes it simple to perform a calculation over a sequence of values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A&gt;</ph> metodo rende pi√π semplice per eseguire un calcolo su una sequenza di valori.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>This method works by calling <ph id="ph1">`func`</ph> one time for each element in source.</source>
          <target state="translated">Questo metodo funziona chiamando <ph id="ph1">`func`</ph> una volta per ogni elemento nell'origine.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>Each time <ph id="ph1">`func`</ph> is called, <ph id="ph2">&lt;xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A&gt;</ph> passes both the element from the sequence and an aggregated value (as the first argument to func).</source>
          <target state="translated">Ogni volta che <ph id="ph1">`func`</ph> viene chiamato, <ph id="ph2">&lt;xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A&gt;</ph> passa sia l'elemento dalla sequenza e un valore aggregato (come primo argomento a func).</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>The value of the <ph id="ph1">`seed`</ph> parameter is used as the initial aggregate value.</source>
          <target state="translated">Il valore di <ph id="ph1">`seed`</ph> parametro viene utilizzato come valore aggregato iniziale.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>The result of <ph id="ph1">`func`</ph> replaces the previous aggregated value.</source>
          <target state="translated">Il risultato di <ph id="ph1">`func`</ph> sostituisce il precedente valore aggregato.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source><ph id="ph1">&lt;xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A&gt;</ph> returns the final result of <ph id="ph2">`func`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A&gt;</ph> Restituisce il risultato finale di <ph id="ph2">`func`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to check for matches.</source>
          <target state="translated">Matrice in cui cercare le corrispondenze.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The predicate.</source>
          <target state="translated">Predicato.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Gets a value indicating whether all elements in this array match a given condition.</source>
          <target state="translated">Ottiene un valore che indica se tutti gli elementi nella matrice corrispondono a una determinata condizione.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if every element of the source sequence passes the test in the specified predicate; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se tutti gli elementi della sequenza di origine superano il test per il predicato specificato; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array to check for elements.</source>
          <target state="translated">Matrice in cui cercare gli elementi.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Gets a value indicating whether the array contains any elements.</source>
          <target state="translated">Ottiene un valore che indica se la matrice contiene elementi.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the array contains an elements; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se la matrice contiene elementi; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The type of elements in the array.</source>
          <target state="translated">Tipo di elementi nella matrice.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The builder to check for matches.</source>
          <target state="translated">Generatore in cui cercare le corrispondenze.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>Returns a value indicating whether this collection contains any elements.</source>
          <target state="translated">Restituisce un valore che indica se questa raccolta contiene elementi.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the array builder contains any elements; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il generatore della matrice contiene elementi; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to check for elements.</source>
          <target state="translated">Matrice in cui cercare gli elementi.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The delegate that defines the condition to match to an element.</source>
          <target state="translated">Delegato che definisce la condizione a cui deve corrispondere un elemento.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Gets a value indicating whether the array contains any elements that match a specified condition.</source>
          <target state="translated">Ottiene un valore che indica se la matrice contiene elementi che corrispondono a una condizione specificata.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an element matches the specified condition; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se un elemento corrisponde alla condizione specificata; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>The array to find an element in.</source>
          <target state="translated">Matrice in cui trovare un elemento.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>The index for the element to retrieve.</source>
          <target state="translated">Indice per l'elemento da recuperare.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>Returns the element at a specified index in the array.</source>
          <target state="translated">Restituisce l'elemento in corrispondenza dell'indice specificato nella matrice.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>The item at the specified index.</source>
          <target state="translated">Elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>The array to find an element in.</source>
          <target state="translated">Matrice in cui trovare un elemento.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>The index for the element to retrieve.</source>
          <target state="translated">Indice per l'elemento da recuperare.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>Returns the element at a specified index in a sequence or a default value if the index is out of range.</source>
          <target state="translated">Restituisce l'elemento in corrispondenza di un indice specificato in una sequenza o un valore predefinito se l'indice √® esterno all'intervallo.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>The item at the specified index, or the default value if the index is not found.</source>
          <target state="translated">Elemento in corrispondenza dell'indice specificato o il valore predefinito se non viene trovato l'indice.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array to get an item from.</source>
          <target state="translated">Matrice da cui ottenere un elemento.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Returns the first element in an array.</source>
          <target state="translated">Restituisce il primo elemento in una matrice.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The first item in the array.</source>
          <target state="translated">Primo elemento nella matrice.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>If the array is empty.</source>
          <target state="translated">Se la matrice √® vuota.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The type of items in the array.</source>
          <target state="translated">Tipo di elementi nella matrice.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The builder to retrieve an item from.</source>
          <target state="translated">Generatore da cui recuperare un elemento.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>Returns the first element in the collection.</source>
          <target state="translated">Restituisce il primo elemento della raccolta.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The first item in the list.</source>
          <target state="translated">Primo elemento nell'elenco.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>If the array is empty.</source>
          <target state="translated">Se la matrice √® vuota.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to get an item from.</source>
          <target state="translated">Matrice da cui ottenere un elemento.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Delegato che definisce le condizioni dell'elemento da cercare.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Returns the first element in a sequence that satisfies a specified condition.</source>
          <target state="translated">Restituisce il primo elemento in una sequenza che soddisfa una condizione specificata.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The first item in the list if it meets the condition specified by <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph>.</source>
          <target state="translated">Primo elemento nell'elenco, se soddisfa la condizione specificata da <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>If the array is empty.</source>
          <target state="translated">Se la matrice √® vuota.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array to retrieve items from.</source>
          <target state="translated">Matrice da cui recuperare gli elementi.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Returns the first element of a sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">Restituisce il primo elemento di una sequenza o un valore predefinito se la sequenza non contiene elementi.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The first item in the list, if found; otherwise the default value for the item type.</source>
          <target state="translated">Primo elemento nell'elenco, se trovato; in caso contrario, il valore predefinito per il tipo di elemento.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The type of item in the builder.</source>
          <target state="translated">Tipo di elemento contenuto nel generatore.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The builder to retrieve an element from.</source>
          <target state="translated">Generatore da cui recuperare un elemento.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>Returns the first element in the collection, or the default value if the collection is empty.</source>
          <target state="translated">Restituisce il primo elemento nella raccolta o il valore predefinito se la raccolta √® vuota.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The first item in the list, if found; otherwise the default value for the item type.</source>
          <target state="translated">Primo elemento nell'elenco, se trovato; in caso contrario, il valore predefinito per il tipo di elemento.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to retrieve elments from.</source>
          <target state="translated">Matrice da cui recuperare gli elementi.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Delegato che definisce le condizioni dell'elemento da cercare.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Returns the first element of the sequence that satisfies a condition or a default value if no such element is found.</source>
          <target state="translated">Restituisce il primo elemento della sequenza che soddisfa una condizione specificata o un valore predefinito se tale elemento non viene trovato.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The first item in the list, if found; otherwise the default value for the item type.</source>
          <target state="translated">Primo elemento nell'elenco, se trovato; in caso contrario, il valore predefinito per il tipo di elemento.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the array.</source>
          <target state="translated">Tipo di elemento contenuto dalla matrice.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array to retrieve items from.</source>
          <target state="translated">Matrice da cui recuperare gli elementi.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Returns the last element of the array.</source>
          <target state="translated">Restituisce l'ultimo elemento della matrice.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The last element in the array.</source>
          <target state="translated">Ultimo elemento nella matrice.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Thrown if the collection is empty.</source>
          <target state="translated">Viene generato se la raccolta √® vuota.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The type of item in the builder.</source>
          <target state="translated">Tipo di elemento contenuto nel generatore.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The builder to retrieve elements from.</source>
          <target state="translated">Generatore da cui recuperare gli elementi.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>Returns the last element in the collection.</source>
          <target state="translated">Restituisce l'ultimo elemento della raccolta.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The last element in the builder.</source>
          <target state="translated">Ultimo elemento nel generatore.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>Thrown if the collection is empty.</source>
          <target state="translated">Viene generato se la raccolta √® vuota.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to retrieve elements from.</source>
          <target state="translated">Matrice da cui recuperare gli elementi.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The delegate that defines the conditions of the element to retrieve.</source>
          <target state="translated">Delegato che definisce le condizioni dell'elemento da recuperare.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Returns the last element of a sequence that satisfies a specified condition.</source>
          <target state="translated">Restituisce l'ultimo elemento di una sequenza che soddisfa una condizione specificata.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The last element of the array that satisfies the <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> condition.</source>
          <target state="translated">Ultimo elemento della matrice che soddisfa la condizione <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Thrown if the collection is empty.</source>
          <target state="translated">Viene generato se la raccolta √® vuota.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array to retrieve items from.</source>
          <target state="translated">Matrice da cui recuperare gli elementi.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Returns the last element of a sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">Restituisce l'ultimo elemento di una sequenza o un valore predefinito se la sequenza non contiene elementi.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The last element of a sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">Ultimo elemento di una sequenza o un valore predefinito se la sequenza non contiene elementi.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The type of item in the builder.</source>
          <target state="translated">Tipo di elemento contenuto nel generatore.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The builder to retrieve an element from.</source>
          <target state="translated">Generatore da cui recuperare un elemento.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>Returns the last element in the collection, or the default value if the collection is empty.</source>
          <target state="translated">Restituisce l'ultimo elemento nella raccolta o il valore predefinito se la raccolta √® vuota.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The last element of a sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">Ultimo elemento di una sequenza o un valore predefinito se la sequenza non contiene elementi.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to retrieve an element from.</source>
          <target state="translated">Matrice da cui recuperare un elemento.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">Delegato che definisce le condizioni dell'elemento da cercare.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Returns the last element of a sequence that satisfies a condition or a default value if no such element is found.</source>
          <target state="translated">Restituisce l'ultimo elemento di una sequenza che soddisfa una condizione specificata o un valore predefinito se tale elemento non viene trovato.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The last element of a sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">Ultimo elemento di una sequenza o un valore predefinito se la sequenza non contiene elementi.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})">
          <source>The type of the result element.</source>
          <target state="translated">Tipo di elemento di risultato.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})">
          <source>The immutable array to select items from.</source>
          <target state="translated">Matrice non modificabile da cui selezionare gli elementi.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})">
          <source>Projects each element of a sequence into a new form.</source>
          <target state="translated">Proietta ogni elemento di una sequenza in un nuovo form.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements are the result of invoking the transform function on each element of source.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> i cui elementi sono il risultato ottenuto richiamando una funzione di trasformazione su ogni elemento di origine.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>immutableArray<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi di <bpt id="p1">&lt;c&gt;</bpt>immutableArray<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the intermediate elements collected by <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Il tipo degli elementi intermedi raccolti da <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the elements of the resulting sequence.</source>
          <target state="translated">Tipo degli elementi della sequenza risultante.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The immutable array.</source>
          <target state="translated">Matrice non modificabile.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A transform function to apply to each element of the input sequence.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento della sequenza di input.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A transform function to apply to each element of the intermediate sequence.</source>
          <target state="translated">Funzione di trasformazione da applicare a ogni elemento della sequenza intermedia.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>,             flattens the resulting sequences into one sequence, and invokes a result             selector function on each element therein.</source>
          <target state="translated">Proietta ogni elemento di una sequenza a un oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, semplifica le sequenze risultanti in un'unica sequenza e chiama una funzione del selettore di risultato su ogni elemento al suo interno.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements are the result             of invoking the one-to-many transform function <ph id="ph2">&lt;paramref name="collectionSelector" /&gt;</ph> on each             element of <ph id="ph3">&lt;paramref name="immutableArray" /&gt;</ph> and then mapping each of those sequence elements and their             corresponding source element to a result element.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> i cui elementi sono ottenuti chiamando la funzione di trasformazione uno a molti <ph id="ph2">&lt;paramref name="collectionSelector" /&gt;</ph> su ogni elemento di <ph id="ph3">&lt;paramref name="immutableArray" /&gt;</ph> ed eseguendo quindi il mapping di ogni elemento di tale sequenza e del corrispondente elemento di origine a un elemento di risultato.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of element in the compared array.</source>
          <target state="translated">Tipo di elemento nella matrice confrontata.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The array to use for comparison.</source>
          <target state="translated">Matrice da usare per il confronto.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The items to use for comparison.</source>
          <target state="translated">Elementi da usare per il confronto.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The comparer to use to check for equality.</source>
          <target state="translated">Operatore di confronto da usare per verificare l'uguaglianza.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Determines whether two sequences are equal according to an equality comparer.</source>
          <target state="translated">Determina se due sequenze sono uguali secondo un operatore di confronto di uguaglianza.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate the sequences are equal; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per indicare che le sequenze sono uguali; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of element in the compared array.</source>
          <target state="translated">Tipo di elemento nella matrice confrontata.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The array to use for comparison.</source>
          <target state="translated">Matrice da usare per il confronto.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The items to use for comparison.</source>
          <target state="translated">Elementi da usare per il confronto.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The comparer to use to check for equality.</source>
          <target state="translated">Operatore di confronto da usare per verificare l'uguaglianza.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Determines whether two sequences are equal according to an equality comparer.</source>
          <target state="translated">Determina se due sequenze sono uguali secondo un operatore di confronto di uguaglianza.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate the sequences are equal; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per indicare che le sequenze sono uguali; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})">
          <source>The type of element in the compared array.</source>
          <target state="translated">Tipo di elemento nella matrice confrontata.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})">
          <source>The array to use for comparison.</source>
          <target state="translated">Matrice da usare per il confronto.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})">
          <source>The items to use for comparison.</source>
          <target state="translated">Elementi da usare per il confronto.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})">
          <source>The comparer to use to check for equality.</source>
          <target state="translated">Operatore di confronto da usare per verificare l'uguaglianza.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})">
          <source>Determines whether two sequences are equal according to an equality comparer.</source>
          <target state="translated">Determina se due sequenze sono uguali secondo un operatore di confronto di uguaglianza.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate the sequences are equal; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per indicare che le sequenze sono uguali; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array to retrieve the element from.</source>
          <target state="translated">Matrice da cui recuperare l'elemento.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.</source>
          <target state="translated">Restituisce l'unico elemento di una sequenza e genera un'eccezione se nella sequenza non √® presente esattamente un elemento.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The element in the sequence.</source>
          <target state="translated">Elemento nella sequenza.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</source>
          <target state="translated">Restituisce l'unico elemento di una sequenza che soddisfa una condizione specificata e genera un'eccezione se esistono pi√π elementi di tale tipo.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array.</source>
          <target state="translated">Matrice.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Returns the only element of the array, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</source>
          <target state="translated">Restituisce l'unico elemento della matrice o un valore predefinito se la sequenza √® vuota. Questo metodo genera un'eccezione se esiste pi√π di un elemento nella sequenza.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The element in the array, or the default value if the array is empty.</source>
          <target state="translated">Elemento nella matrice o il valore predefinito se la matrice √® vuota.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contains more than one element.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> contiene pi√π di un elemento.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to get the element from.</source>
          <target state="translated">Matrice da cui ottenere l'elemento.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The condition the element must satisfy.</source>
          <target state="translated">Condizione che l'elemento deve soddisfare.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</source>
          <target state="translated">Restituisce l'unico elemento di una sequenza che soddisfa una condizione specificata o un valore predefinito se tale elemento esiste. Questo metodo genera un'eccezione se pi√π di un elemento soddisfa la condizione.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The element if it satisfies the specified condition; otherwise the default element.</source>
          <target state="translated">Elemento, se soddisfa la condizione specificata; in caso contrario, l'elemento predefinito.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>More than one element satisfies the condition in <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph>.</source>
          <target state="translated">Pi√π di un elemento soddisfa la condizione in <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToArray``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToArray``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Copies the contents of this array to a mutable array.</source>
          <target state="translated">Copia il contenuto di questa matrice in una matrice modificabile.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToArray``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The newly instantiated array.</source>
          <target state="translated">Matrice di cui √® stata creata la nuova istanza.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})">
          <source>The type of the key.</source>
          <target state="translated">Tipo di chiave.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})">
          <source>The array to create a dictionary from.</source>
          <target state="translated">Matrice da cui creare un dizionario.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})">
          <source>The key selector.</source>
          <target state="translated">Selettore di chiave.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})">
          <source>Creates a dictionary based on the contents of this array.</source>
          <target state="translated">Crea un dizionario basato sul contenuto di questa matrice.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})">
          <source>The newly initialized dictionary.</source>
          <target state="translated">Dizionario appena inizializzato.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the key.</source>
          <target state="translated">Tipo di chiave.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The array to create a dictionary from.</source>
          <target state="translated">Matrice da cui creare un dizionario.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The key selector.</source>
          <target state="translated">Selettore di chiave.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The comparer to initialize the dictionary with.</source>
          <target state="translated">Operatore di confronto con cui inizializzare il dizionario.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Creates a dictionary based on the contents of this array.</source>
          <target state="translated">Crea un dizionario basato sul contenuto di questa matrice.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The newly initialized dictionary.</source>
          <target state="translated">Dizionario appena inizializzato.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>The type of the key.</source>
          <target state="translated">Tipo di chiave.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>The type of the element.</source>
          <target state="translated">Tipo dell'elemento.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>The array to create a dictionary from.</source>
          <target state="translated">Matrice da cui creare un dizionario.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>The key selector.</source>
          <target state="translated">Selettore di chiave.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>The element selector.</source>
          <target state="translated">Selettore di elemento.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>Creates a dictionary based on the contents of this array.</source>
          <target state="translated">Crea un dizionario basato sul contenuto di questa matrice.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>The newly initialized dictionary.</source>
          <target state="translated">Dizionario appena inizializzato.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the key.</source>
          <target state="translated">Tipo di chiave.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the element.</source>
          <target state="translated">Tipo dell'elemento.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The array to create a dictionary from.</source>
          <target state="translated">Matrice da cui creare un dizionario.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The key selector.</source>
          <target state="translated">Selettore di chiave.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The element selector.</source>
          <target state="translated">Selettore di elemento.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The comparer to initialize the dictionary with.</source>
          <target state="translated">Operatore di confronto con cui inizializzare il dizionario.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Creates a dictionary based on the contents of this array.</source>
          <target state="translated">Crea un dizionario basato sul contenuto di questa matrice.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The newly initialized dictionary.</source>
          <target state="translated">Dizionario appena inizializzato.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">Tipo di elemento contenuto dalla raccolta.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to filter.</source>
          <target state="translated">Matrice da filtrare.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The condition to use for filtering the array content.</source>
          <target state="translated">Condizione da usare per filtrare il contenuto della matrice.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Filters a sequence of values based on a predicate.</source>
          <target state="translated">Filtra una sequenza di valori in base a un predicato.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that contains elements that meet the condition.</source>
          <target state="translated">Restituisce <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> che contiene gli elementi che soddisfano la condizione.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>