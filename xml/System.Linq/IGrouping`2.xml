<Type Name="IGrouping&lt;TKey,TElement&gt;" FullName="System.Linq.IGrouping&lt;TKey,TElement&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="904d0d76813e9c96cf353a7071dcf060fd1ba4e8" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37757176" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IGrouping&lt;out TKey,out TElement&gt; : System.Collections.Generic.IEnumerable&lt;out TElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IGrouping`2&lt;+ TKey, + TElement&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IGrouping`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IGrouping(Of Out TKey, Out TElement)&#xA;Implements IEnumerable(Of Out TElement)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TElement&gt;&#xA;public interface class IGrouping : System::Collections::Generic::IEnumerable&lt;TElement&gt;" />
  <TypeSignature Language="F#" Value="type IGrouping&lt;'Key, 'Element&gt; = interface&#xA;    interface seq&lt;'Element&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TElement">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TElement&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey">Tipo della chiave dell’oggetto <see cref="T:System.Linq.IGrouping`2" />.</typeparam>
    <typeparam name="TElement">Tipo dei valori nell’oggetto <see cref="T:System.Linq.IGrouping`2" />.</typeparam>
    <summary>Rappresenta una raccolta di oggetti con una chiave comune.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un' <xref:System.Linq.IGrouping%602> è un <xref:System.Collections.Generic.IEnumerable%601> che dispone inoltre di una chiave. L'attributo che sono comune a ciascun valore rappresentato dalla chiave di <xref:System.Linq.IGrouping%602>.  
  
 I valori di un <xref:System.Linq.IGrouping%602> accessibili molto degli elementi di un <xref:System.Collections.Generic.IEnumerable%601> sono accessibili. Ad esempio, è possibile accedere i valori usando un `foreach` in Visual c# o `For Each` in Visual Basic ciclo per scorrere la <xref:System.Linq.IGrouping%602> oggetto. La sezione di esempio contiene un esempio di codice che illustra come accedere a sia la chiave e i valori di un <xref:System.Linq.IGrouping%602> oggetto.  
  
 Il <xref:System.Linq.IGrouping%602> tipo viene usato per il <xref:System.Linq.Enumerable.GroupBy%2A> metodi operatore query standard, che restituiscono una sequenza di elementi di tipo <xref:System.Linq.IGrouping%602>.  
  
   
  
## Examples  
 L'esempio seguente illustra come usare un <xref:System.Linq.IGrouping%602> oggetto.  
  
 In questo esempio <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> viene chiamato su una matrice di <xref:System.Reflection.MemberInfo> gli oggetti restituiti da <xref:System.Type.GetMembers%2A>. <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> Raggruppa gli oggetti in base al valore della loro <xref:System.Reflection.MemberInfo.MemberType%2A> proprietà. Ogni valore univoco relativo <xref:System.Reflection.MemberInfo.MemberType%2A> nella matrice di <xref:System.Reflection.MemberInfo> oggetti diventa una chiave per un nuovo <xref:System.Linq.IGrouping%602> oggetto e il <xref:System.Reflection.MemberInfo> gli oggetti che hanno tale chiave formano il <xref:System.Linq.IGrouping%602> sequenza dei valori dell'oggetto.  
  
 Infine, il <xref:System.Linq.Enumerable.First%2A> viene chiamato nella sequenza dei <xref:System.Linq.IGrouping%602> oggetti da ottenere solo il primo <xref:System.Linq.IGrouping%602> oggetto.  
  
 Nell'esempio viene quindi restituisce la chiave della <xref:System.Linq.IGrouping%602> oggetto e il <xref:System.Reflection.MemberInfo.Name%2A> proprietà di ogni valore nel <xref:System.Linq.IGrouping%602> sequenza dei valori dell'oggetto. Si noti che per accedere a un <xref:System.Linq.IGrouping%602> sequenza dei valori dell'oggetto, è sufficiente utilizzare il <xref:System.Linq.IGrouping%602> variabile stessa.  
  
 [!code-csharp[System.Linq.IGrouping#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#1)]
 [!code-vb[System.Linq.IGrouping#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public TKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IGrouping`2.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As TKey" />
      <MemberSignature Language="F#" Value="member this.Key : 'Key" Usage="System.Linq.IGrouping&lt;'Key, 'Element&gt;.Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TKey Key { TKey get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la chiave del <see cref="T:System.Linq.IGrouping`2" />.</summary>
        <value>Chiave del <see cref="T:System.Linq.IGrouping`2" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiave di un <xref:System.Linq.IGrouping%602> rappresenta l'attributo che è comune a ciascun valore di <xref:System.Linq.IGrouping%602>.  
  
   
  
## Examples  
 L'esempio seguente illustra come usare il <xref:System.Linq.IGrouping%602.Key%2A> proprietà etichettare ogni <xref:System.Linq.IGrouping%602> oggetto in una sequenza di <xref:System.Linq.IGrouping%602> oggetti. Il <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> metodo viene utilizzato per ottenere una sequenza di <xref:System.Linq.IGrouping%602> oggetti. Il `foreach` in Visual c# o `For Each` in Visual Basic ciclo quindi scorre ogni <xref:System.Linq.IGrouping%602> oggetto, restituendo la chiave e il numero di valori in esso contenuti.  
  
 [!code-csharp[System.Linq.IGrouping#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#2)]
 [!code-vb[System.Linq.IGrouping#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>